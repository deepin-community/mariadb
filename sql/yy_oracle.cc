/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "/home/buildbot/git/mkdist/sql/myskel.m4"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs

/* First part of user prologue.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy"

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"                          // classes sp_instr,...
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"
#include "json_table.h"
#include "sql_update.h"
#include "sql_delete.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#if defined (__GNUC__) || defined (__clang__)
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

/* Stack size 28200 with clang for MYSQLparse() and ORAparse() */
PRAGMA_DISABLE_CHECK_STACK_FRAME

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void yyerror(THD *thd, const char *s)
{
  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
#define __CONCAT_UNDERSCORED(x,y)  x ## _ ## y
#define _CONCAT_UNDERSCORED(x,y)   __CONCAT_UNDERSCORED(x,y)
void _CONCAT_UNDERSCORED(turn_parser_debug_on,yyparse)()
{
  /*
     MYSQLdebug is in sql/yy_*.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

#ifndef _AIX
  extern int yydebug;
#else
  static int yydebug;
#endif
  yydebug= 1;
}
#endif



#line 247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "yy_oracle.hh"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_3_ = 3,                         /* '@'  */
  YYSYMBOL_ABORT_SYM = 4,                  /* ABORT_SYM  */
  YYSYMBOL_IMPOSSIBLE_ACTION = 5,          /* IMPOSSIBLE_ACTION  */
  YYSYMBOL_FORCE_LOOKAHEAD = 6,            /* FORCE_LOOKAHEAD  */
  YYSYMBOL_END_OF_INPUT = 7,               /* END_OF_INPUT  */
  YYSYMBOL_COLON_ORACLE_SYM = 8,           /* COLON_ORACLE_SYM  */
  YYSYMBOL_PARAM_MARKER = 9,               /* PARAM_MARKER  */
  YYSYMBOL_FOR_SYSTEM_TIME_SYM = 10,       /* FOR_SYSTEM_TIME_SYM  */
  YYSYMBOL_LEFT_PAREN_ALT = 11,            /* LEFT_PAREN_ALT  */
  YYSYMBOL_LEFT_PAREN_WITH = 12,           /* LEFT_PAREN_WITH  */
  YYSYMBOL_LEFT_PAREN_LIKE = 13,           /* LEFT_PAREN_LIKE  */
  YYSYMBOL_ORACLE_CONCAT_SYM = 14,         /* ORACLE_CONCAT_SYM  */
  YYSYMBOL_PERCENT_ORACLE_SYM = 15,        /* PERCENT_ORACLE_SYM  */
  YYSYMBOL_WITH_CUBE_SYM = 16,             /* WITH_CUBE_SYM  */
  YYSYMBOL_WITH_ROLLUP_SYM = 17,           /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITH_SYSTEM_SYM = 18,           /* WITH_SYSTEM_SYM  */
  YYSYMBOL_IDENT = 19,                     /* IDENT  */
  YYSYMBOL_IDENT_QUOTED = 20,              /* IDENT_QUOTED  */
  YYSYMBOL_LEX_HOSTNAME = 21,              /* LEX_HOSTNAME  */
  YYSYMBOL_UNDERSCORE_CHARSET = 22,        /* UNDERSCORE_CHARSET  */
  YYSYMBOL_BIN_NUM = 23,                   /* BIN_NUM  */
  YYSYMBOL_DECIMAL_NUM = 24,               /* DECIMAL_NUM  */
  YYSYMBOL_FLOAT_NUM = 25,                 /* FLOAT_NUM  */
  YYSYMBOL_HEX_NUM = 26,                   /* HEX_NUM  */
  YYSYMBOL_HEX_STRING = 27,                /* HEX_STRING  */
  YYSYMBOL_LONG_NUM = 28,                  /* LONG_NUM  */
  YYSYMBOL_NCHAR_STRING = 29,              /* NCHAR_STRING  */
  YYSYMBOL_NUM = 30,                       /* NUM  */
  YYSYMBOL_TEXT_STRING = 31,               /* TEXT_STRING  */
  YYSYMBOL_ULONGLONG_NUM = 32,             /* ULONGLONG_NUM  */
  YYSYMBOL_AND_AND_SYM = 33,               /* AND_AND_SYM  */
  YYSYMBOL_DOT_DOT_SYM = 34,               /* DOT_DOT_SYM  */
  YYSYMBOL_EQUAL_SYM = 35,                 /* EQUAL_SYM  */
  YYSYMBOL_GE = 36,                        /* GE  */
  YYSYMBOL_LE = 37,                        /* LE  */
  YYSYMBOL_MYSQL_CONCAT_SYM = 38,          /* MYSQL_CONCAT_SYM  */
  YYSYMBOL_NE = 39,                        /* NE  */
  YYSYMBOL_NOT2_SYM = 40,                  /* NOT2_SYM  */
  YYSYMBOL_OR2_SYM = 41,                   /* OR2_SYM  */
  YYSYMBOL_SET_VAR = 42,                   /* SET_VAR  */
  YYSYMBOL_SHIFT_LEFT = 43,                /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 44,               /* SHIFT_RIGHT  */
  YYSYMBOL_ACCESSIBLE_SYM = 45,            /* ACCESSIBLE_SYM  */
  YYSYMBOL_ADD = 46,                       /* ADD  */
  YYSYMBOL_ALL = 47,                       /* ALL  */
  YYSYMBOL_ALTER = 48,                     /* ALTER  */
  YYSYMBOL_ANALYZE_SYM = 49,               /* ANALYZE_SYM  */
  YYSYMBOL_AND_SYM = 50,                   /* AND_SYM  */
  YYSYMBOL_ASC = 51,                       /* ASC  */
  YYSYMBOL_ASENSITIVE_SYM = 52,            /* ASENSITIVE_SYM  */
  YYSYMBOL_AS = 53,                        /* AS  */
  YYSYMBOL_BEFORE_SYM = 54,                /* BEFORE_SYM  */
  YYSYMBOL_BETWEEN_SYM = 55,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT = 56,                    /* BIGINT  */
  YYSYMBOL_BINARY = 57,                    /* BINARY  */
  YYSYMBOL_BIT_AND = 58,                   /* BIT_AND  */
  YYSYMBOL_BIT_OR = 59,                    /* BIT_OR  */
  YYSYMBOL_BIT_XOR = 60,                   /* BIT_XOR  */
  YYSYMBOL_BLOB_MARIADB_SYM = 61,          /* BLOB_MARIADB_SYM  */
  YYSYMBOL_BLOB_ORACLE_SYM = 62,           /* BLOB_ORACLE_SYM  */
  YYSYMBOL_BODY_ORACLE_SYM = 63,           /* BODY_ORACLE_SYM  */
  YYSYMBOL_BOTH = 64,                      /* BOTH  */
  YYSYMBOL_BY = 65,                        /* BY  */
  YYSYMBOL_CALL_SYM = 66,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 67,                   /* CASCADE  */
  YYSYMBOL_CASE_SYM = 68,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 69,                  /* CAST_SYM  */
  YYSYMBOL_CHANGE = 70,                    /* CHANGE  */
  YYSYMBOL_CHAR_SYM = 71,                  /* CHAR_SYM  */
  YYSYMBOL_CHECK_SYM = 72,                 /* CHECK_SYM  */
  YYSYMBOL_COLLATE_SYM = 73,               /* COLLATE_SYM  */
  YYSYMBOL_CONDITION_SYM = 74,             /* CONDITION_SYM  */
  YYSYMBOL_CONSTRAINT = 75,                /* CONSTRAINT  */
  YYSYMBOL_CONTINUE_MARIADB_SYM = 76,      /* CONTINUE_MARIADB_SYM  */
  YYSYMBOL_CONTINUE_ORACLE_SYM = 77,       /* CONTINUE_ORACLE_SYM  */
  YYSYMBOL_CONVERT_SYM = 78,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 79,                 /* COUNT_SYM  */
  YYSYMBOL_CREATE = 80,                    /* CREATE  */
  YYSYMBOL_CROSS = 81,                     /* CROSS  */
  YYSYMBOL_CUME_DIST_SYM = 82,             /* CUME_DIST_SYM  */
  YYSYMBOL_CURDATE = 83,                   /* CURDATE  */
  YYSYMBOL_CURRENT_ROLE = 84,              /* CURRENT_ROLE  */
  YYSYMBOL_CURRENT_USER = 85,              /* CURRENT_USER  */
  YYSYMBOL_CURSOR_SYM = 86,                /* CURSOR_SYM  */
  YYSYMBOL_CURTIME = 87,                   /* CURTIME  */
  YYSYMBOL_DATABASE = 88,                  /* DATABASE  */
  YYSYMBOL_DATABASES = 89,                 /* DATABASES  */
  YYSYMBOL_DATE_ADD_INTERVAL = 90,         /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 91,         /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DAY_HOUR_SYM = 92,              /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 93,       /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 94,            /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 95,            /* DAY_SECOND_SYM  */
  YYSYMBOL_DECIMAL_SYM = 96,               /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_MARIADB_SYM = 97,       /* DECLARE_MARIADB_SYM  */
  YYSYMBOL_DECLARE_ORACLE_SYM = 98,        /* DECLARE_ORACLE_SYM  */
  YYSYMBOL_DEFAULT = 99,                   /* DEFAULT  */
  YYSYMBOL_DELETE_DOMAIN_ID_SYM = 100,     /* DELETE_DOMAIN_ID_SYM  */
  YYSYMBOL_DELETE_SYM = 101,               /* DELETE_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 102,           /* DENSE_RANK_SYM  */
  YYSYMBOL_DESCRIBE = 103,                 /* DESCRIBE  */
  YYSYMBOL_DESC = 104,                     /* DESC  */
  YYSYMBOL_DETERMINISTIC_SYM = 105,        /* DETERMINISTIC_SYM  */
  YYSYMBOL_DISTINCT = 106,                 /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 107,                  /* DIV_SYM  */
  YYSYMBOL_DO_DOMAIN_IDS_SYM = 108,        /* DO_DOMAIN_IDS_SYM  */
  YYSYMBOL_DOUBLE_SYM = 109,               /* DOUBLE_SYM  */
  YYSYMBOL_DROP = 110,                     /* DROP  */
  YYSYMBOL_DUAL_SYM = 111,                 /* DUAL_SYM  */
  YYSYMBOL_EACH_SYM = 112,                 /* EACH_SYM  */
  YYSYMBOL_ELSEIF_MARIADB_SYM = 113,       /* ELSEIF_MARIADB_SYM  */
  YYSYMBOL_ELSE = 114,                     /* ELSE  */
  YYSYMBOL_ELSIF_ORACLE_SYM = 115,         /* ELSIF_ORACLE_SYM  */
  YYSYMBOL_EMPTY_SYM = 116,                /* EMPTY_SYM  */
  YYSYMBOL_ENCLOSED = 117,                 /* ENCLOSED  */
  YYSYMBOL_ESCAPED = 118,                  /* ESCAPED  */
  YYSYMBOL_EXCEPT_SYM = 119,               /* EXCEPT_SYM  */
  YYSYMBOL_EXISTS = 120,                   /* EXISTS  */
  YYSYMBOL_EXTRACT_SYM = 121,              /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 122,                /* FALSE_SYM  */
  YYSYMBOL_FETCH_SYM = 123,                /* FETCH_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 124,          /* FIRST_VALUE_SYM  */
  YYSYMBOL_FLOAT_SYM = 125,                /* FLOAT_SYM  */
  YYSYMBOL_FOREIGN = 126,                  /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 127,                  /* FOR_SYM  */
  YYSYMBOL_FROM = 128,                     /* FROM  */
  YYSYMBOL_FULLTEXT_SYM = 129,             /* FULLTEXT_SYM  */
  YYSYMBOL_GOTO_ORACLE_SYM = 130,          /* GOTO_ORACLE_SYM  */
  YYSYMBOL_GRANT = 131,                    /* GRANT  */
  YYSYMBOL_GROUP_CONCAT_SYM = 132,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_JSON_ARRAYAGG_SYM = 133,        /* JSON_ARRAYAGG_SYM  */
  YYSYMBOL_JSON_OBJECTAGG_SYM = 134,       /* JSON_OBJECTAGG_SYM  */
  YYSYMBOL_JSON_TABLE_SYM = 135,           /* JSON_TABLE_SYM  */
  YYSYMBOL_GROUP_SYM = 136,                /* GROUP_SYM  */
  YYSYMBOL_HAVING = 137,                   /* HAVING  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 138,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 139,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 140,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_IF_SYM = 141,                   /* IF_SYM  */
  YYSYMBOL_IGNORE_DOMAIN_IDS_SYM = 142,    /* IGNORE_DOMAIN_IDS_SYM  */
  YYSYMBOL_IGNORE_SYM = 143,               /* IGNORE_SYM  */
  YYSYMBOL_IGNORED_SYM = 144,              /* IGNORED_SYM  */
  YYSYMBOL_INDEX_SYM = 145,                /* INDEX_SYM  */
  YYSYMBOL_INFILE = 146,                   /* INFILE  */
  YYSYMBOL_INNER_SYM = 147,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 148,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 149,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT = 150,                   /* INSERT  */
  YYSYMBOL_IN_SYM = 151,                   /* IN_SYM  */
  YYSYMBOL_INTERSECT_SYM = 152,            /* INTERSECT_SYM  */
  YYSYMBOL_INTERVAL_SYM = 153,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 154,                     /* INTO  */
  YYSYMBOL_INT_SYM = 155,                  /* INT_SYM  */
  YYSYMBOL_IS = 156,                       /* IS  */
  YYSYMBOL_ITERATE_SYM = 157,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 158,                 /* JOIN_SYM  */
  YYSYMBOL_KEYS = 159,                     /* KEYS  */
  YYSYMBOL_KEY_SYM = 160,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 161,                 /* KILL_SYM  */
  YYSYMBOL_LAG_SYM = 162,                  /* LAG_SYM  */
  YYSYMBOL_LEADING = 163,                  /* LEADING  */
  YYSYMBOL_LEAD_SYM = 164,                 /* LEAD_SYM  */
  YYSYMBOL_LEAVE_SYM = 165,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 166,                     /* LEFT  */
  YYSYMBOL_LIKE = 167,                     /* LIKE  */
  YYSYMBOL_LIMIT = 168,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 169,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 170,                    /* LINES  */
  YYSYMBOL_LOAD = 171,                     /* LOAD  */
  YYSYMBOL_LOCATOR_SYM = 172,              /* LOCATOR_SYM  */
  YYSYMBOL_LOCK_SYM = 173,                 /* LOCK_SYM  */
  YYSYMBOL_LONGBLOB = 174,                 /* LONGBLOB  */
  YYSYMBOL_LONG_SYM = 175,                 /* LONG_SYM  */
  YYSYMBOL_LONGTEXT = 176,                 /* LONGTEXT  */
  YYSYMBOL_LOOP_SYM = 177,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 178,             /* LOW_PRIORITY  */
  YYSYMBOL_MASTER_SSL_VERIFY_SERVER_CERT_SYM = 179, /* MASTER_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_MATCH = 180,                    /* MATCH  */
  YYSYMBOL_MAX_SYM = 181,                  /* MAX_SYM  */
  YYSYMBOL_MAXVALUE_SYM = 182,             /* MAXVALUE_SYM  */
  YYSYMBOL_MEDIAN_SYM = 183,               /* MEDIAN_SYM  */
  YYSYMBOL_MEDIUMBLOB = 184,               /* MEDIUMBLOB  */
  YYSYMBOL_MEDIUMINT = 185,                /* MEDIUMINT  */
  YYSYMBOL_MEDIUMTEXT = 186,               /* MEDIUMTEXT  */
  YYSYMBOL_MIN_SYM = 187,                  /* MIN_SYM  */
  YYSYMBOL_MINUS_ORACLE_SYM = 188,         /* MINUS_ORACLE_SYM  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 189,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 190,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MODIFIES_SYM = 191,             /* MODIFIES_SYM  */
  YYSYMBOL_MOD_SYM = 192,                  /* MOD_SYM  */
  YYSYMBOL_NATURAL = 193,                  /* NATURAL  */
  YYSYMBOL_NEG = 194,                      /* NEG  */
  YYSYMBOL_NESTED_SYM = 195,               /* NESTED_SYM  */
  YYSYMBOL_NOT_SYM = 196,                  /* NOT_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 197,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NOW_SYM = 198,                  /* NOW_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 199,            /* NTH_VALUE_SYM  */
  YYSYMBOL_NTILE_SYM = 200,                /* NTILE_SYM  */
  YYSYMBOL_NULL_SYM = 201,                 /* NULL_SYM  */
  YYSYMBOL_NUMERIC_SYM = 202,              /* NUMERIC_SYM  */
  YYSYMBOL_ON = 203,                       /* ON  */
  YYSYMBOL_OPTIMIZE = 204,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIONALLY = 205,               /* OPTIONALLY  */
  YYSYMBOL_ORDER_SYM = 206,                /* ORDER_SYM  */
  YYSYMBOL_ORDINALITY_SYM = 207,           /* ORDINALITY_SYM  */
  YYSYMBOL_OR_SYM = 208,                   /* OR_SYM  */
  YYSYMBOL_OTHERS_ORACLE_SYM = 209,        /* OTHERS_ORACLE_SYM  */
  YYSYMBOL_OUTER = 210,                    /* OUTER  */
  YYSYMBOL_OUTFILE = 211,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 212,                  /* OUT_SYM  */
  YYSYMBOL_OVER_SYM = 213,                 /* OVER_SYM  */
  YYSYMBOL_PACKAGE_ORACLE_SYM = 214,       /* PACKAGE_ORACLE_SYM  */
  YYSYMBOL_PAGE_CHECKSUM_SYM = 215,        /* PAGE_CHECKSUM_SYM  */
  YYSYMBOL_PARSE_VCOL_EXPR_SYM = 216,      /* PARSE_VCOL_EXPR_SYM  */
  YYSYMBOL_PARTITION_SYM = 217,            /* PARTITION_SYM  */
  YYSYMBOL_PATH_SYM = 218,                 /* PATH_SYM  */
  YYSYMBOL_PERCENTILE_CONT_SYM = 219,      /* PERCENTILE_CONT_SYM  */
  YYSYMBOL_PERCENTILE_DISC_SYM = 220,      /* PERCENTILE_DISC_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 221,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PORTION_SYM = 222,              /* PORTION_SYM  */
  YYSYMBOL_POSITION_SYM = 223,             /* POSITION_SYM  */
  YYSYMBOL_PRECISION = 224,                /* PRECISION  */
  YYSYMBOL_PRIMARY_SYM = 225,              /* PRIMARY_SYM  */
  YYSYMBOL_PROCEDURE_SYM = 226,            /* PROCEDURE_SYM  */
  YYSYMBOL_PURGE = 227,                    /* PURGE  */
  YYSYMBOL_RAISE_ORACLE_SYM = 228,         /* RAISE_ORACLE_SYM  */
  YYSYMBOL_RANGE_SYM = 229,                /* RANGE_SYM  */
  YYSYMBOL_RANK_SYM = 230,                 /* RANK_SYM  */
  YYSYMBOL_READS_SYM = 231,                /* READS_SYM  */
  YYSYMBOL_READ_SYM = 232,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 233,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL = 234,                     /* REAL  */
  YYSYMBOL_RECURSIVE_SYM = 235,            /* RECURSIVE_SYM  */
  YYSYMBOL_REFERENCES = 236,               /* REFERENCES  */
  YYSYMBOL_REF_SYSTEM_ID_SYM = 237,        /* REF_SYSTEM_ID_SYM  */
  YYSYMBOL_REGEXP = 238,                   /* REGEXP  */
  YYSYMBOL_RELEASE_SYM = 239,              /* RELEASE_SYM  */
  YYSYMBOL_RENAME = 240,                   /* RENAME  */
  YYSYMBOL_REPEAT_SYM = 241,               /* REPEAT_SYM  */
  YYSYMBOL_REQUIRE_SYM = 242,              /* REQUIRE_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 243,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESTRICT = 244,                 /* RESTRICT  */
  YYSYMBOL_RETURNING_SYM = 245,            /* RETURNING_SYM  */
  YYSYMBOL_RETURN_MARIADB_SYM = 246,       /* RETURN_MARIADB_SYM  */
  YYSYMBOL_RETURN_ORACLE_SYM = 247,        /* RETURN_ORACLE_SYM  */
  YYSYMBOL_REVOKE = 248,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 249,                    /* RIGHT  */
  YYSYMBOL_ROW_NUMBER_SYM = 250,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_ROWS_SYM = 251,                 /* ROWS_SYM  */
  YYSYMBOL_ROWTYPE_ORACLE_SYM = 252,       /* ROWTYPE_ORACLE_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 253,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SELECT_SYM = 254,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 255,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 256,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERVER_OPTIONS = 257,           /* SERVER_OPTIONS  */
  YYSYMBOL_SET = 258,                      /* SET  */
  YYSYMBOL_SHOW = 259,                     /* SHOW  */
  YYSYMBOL_SIGNAL_SYM = 260,               /* SIGNAL_SYM  */
  YYSYMBOL_SMALLINT = 261,                 /* SMALLINT  */
  YYSYMBOL_SPATIAL_SYM = 262,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 263,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQL_BIG_RESULT = 264,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQLEXCEPTION_SYM = 265,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQL_SMALL_RESULT = 266,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQLSTATE_SYM = 267,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQL_SYM = 268,                  /* SQL_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 269,           /* SQLWARNING_SYM  */
  YYSYMBOL_SSL_SYM = 270,                  /* SSL_SYM  */
  YYSYMBOL_STARTING = 271,                 /* STARTING  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 272,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 273,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 274,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 275,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 276,                  /* STD_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 277,            /* STRAIGHT_JOIN  */
  YYSYMBOL_SUM_SYM = 278,                  /* SUM_SYM  */
  YYSYMBOL_SYSDATE = 279,                  /* SYSDATE  */
  YYSYMBOL_TABLE_REF_PRIORITY = 280,       /* TABLE_REF_PRIORITY  */
  YYSYMBOL_TABLE_SYM = 281,                /* TABLE_SYM  */
  YYSYMBOL_TERMINATED = 282,               /* TERMINATED  */
  YYSYMBOL_THEN_SYM = 283,                 /* THEN_SYM  */
  YYSYMBOL_TINYBLOB = 284,                 /* TINYBLOB  */
  YYSYMBOL_TINYINT = 285,                  /* TINYINT  */
  YYSYMBOL_TINYTEXT = 286,                 /* TINYTEXT  */
  YYSYMBOL_TO_SYM = 287,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 288,                 /* TRAILING  */
  YYSYMBOL_TRIGGER_SYM = 289,              /* TRIGGER_SYM  */
  YYSYMBOL_TRUE_SYM = 290,                 /* TRUE_SYM  */
  YYSYMBOL_UNDO_SYM = 291,                 /* UNDO_SYM  */
  YYSYMBOL_UNION_SYM = 292,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 293,               /* UNIQUE_SYM  */
  YYSYMBOL_UNLOCK_SYM = 294,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED = 295,                 /* UNSIGNED  */
  YYSYMBOL_UPDATE_SYM = 296,               /* UPDATE_SYM  */
  YYSYMBOL_USAGE = 297,                    /* USAGE  */
  YYSYMBOL_USE_SYM = 298,                  /* USE_SYM  */
  YYSYMBOL_USING = 299,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 300,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 301,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 302,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALUES_IN_SYM = 303,            /* VALUES_IN_SYM  */
  YYSYMBOL_VALUES_LESS_SYM = 304,          /* VALUES_LESS_SYM  */
  YYSYMBOL_VALUES = 305,                   /* VALUES  */
  YYSYMBOL_VARBINARY = 306,                /* VARBINARY  */
  YYSYMBOL_VARCHAR = 307,                  /* VARCHAR  */
  YYSYMBOL_VARIANCE_SYM = 308,             /* VARIANCE_SYM  */
  YYSYMBOL_VAR_SAMP_SYM = 309,             /* VAR_SAMP_SYM  */
  YYSYMBOL_VARYING = 310,                  /* VARYING  */
  YYSYMBOL_WHEN_SYM = 311,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 312,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 313,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 314,                     /* WITH  */
  YYSYMBOL_XOR = 315,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 316,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_ZEROFILL = 317,                 /* ZEROFILL  */
  YYSYMBOL_BODY_MARIADB_SYM = 318,         /* BODY_MARIADB_SYM  */
  YYSYMBOL_ELSEIF_ORACLE_SYM = 319,        /* ELSEIF_ORACLE_SYM  */
  YYSYMBOL_ELSIF_MARIADB_SYM = 320,        /* ELSIF_MARIADB_SYM  */
  YYSYMBOL_EXCEPTION_ORACLE_SYM = 321,     /* EXCEPTION_ORACLE_SYM  */
  YYSYMBOL_GOTO_MARIADB_SYM = 322,         /* GOTO_MARIADB_SYM  */
  YYSYMBOL_OTHERS_MARIADB_SYM = 323,       /* OTHERS_MARIADB_SYM  */
  YYSYMBOL_PACKAGE_MARIADB_SYM = 324,      /* PACKAGE_MARIADB_SYM  */
  YYSYMBOL_RAISE_MARIADB_SYM = 325,        /* RAISE_MARIADB_SYM  */
  YYSYMBOL_ROWTYPE_MARIADB_SYM = 326,      /* ROWTYPE_MARIADB_SYM  */
  YYSYMBOL_ROWNUM_SYM = 327,               /* ROWNUM_SYM  */
  YYSYMBOL_REPLACE = 328,                  /* REPLACE  */
  YYSYMBOL_SUBSTRING = 329,                /* SUBSTRING  */
  YYSYMBOL_TRIM = 330,                     /* TRIM  */
  YYSYMBOL_ACCOUNT_SYM = 331,              /* ACCOUNT_SYM  */
  YYSYMBOL_ACTION = 332,                   /* ACTION  */
  YYSYMBOL_ADMIN_SYM = 333,                /* ADMIN_SYM  */
  YYSYMBOL_ADDDATE_SYM = 334,              /* ADDDATE_SYM  */
  YYSYMBOL_AFTER_SYM = 335,                /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 336,                  /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 337,            /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 338,            /* ALGORITHM_SYM  */
  YYSYMBOL_ALWAYS_SYM = 339,               /* ALWAYS_SYM  */
  YYSYMBOL_ANY_SYM = 340,                  /* ANY_SYM  */
  YYSYMBOL_ASCII_SYM = 341,                /* ASCII_SYM  */
  YYSYMBOL_AT_SYM = 342,                   /* AT_SYM  */
  YYSYMBOL_ATOMIC_SYM = 343,               /* ATOMIC_SYM  */
  YYSYMBOL_AUTHORS_SYM = 344,              /* AUTHORS_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 345,      /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 346,                 /* AUTO_INC  */
  YYSYMBOL_AUTO_SYM = 347,                 /* AUTO_SYM  */
  YYSYMBOL_AVG_ROW_LENGTH = 348,           /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 349,                  /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 350,               /* BACKUP_SYM  */
  YYSYMBOL_BEGIN_MARIADB_SYM = 351,        /* BEGIN_MARIADB_SYM  */
  YYSYMBOL_BEGIN_ORACLE_SYM = 352,         /* BEGIN_ORACLE_SYM  */
  YYSYMBOL_BINLOG_SYM = 353,               /* BINLOG_SYM  */
  YYSYMBOL_BIT_SYM = 354,                  /* BIT_SYM  */
  YYSYMBOL_BLOCK_SYM = 355,                /* BLOCK_SYM  */
  YYSYMBOL_BOOL_SYM = 356,                 /* BOOL_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 357,              /* BOOLEAN_SYM  */
  YYSYMBOL_BTREE_SYM = 358,                /* BTREE_SYM  */
  YYSYMBOL_BYTE_SYM = 359,                 /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 360,                /* CACHE_SYM  */
  YYSYMBOL_CASCADED = 361,                 /* CASCADED  */
  YYSYMBOL_CATALOG_NAME_SYM = 362,         /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 363,                /* CHAIN_SYM  */
  YYSYMBOL_CHANGED = 364,                  /* CHANGED  */
  YYSYMBOL_CHANNEL_SYM = 365,              /* CHANNEL_SYM  */
  YYSYMBOL_CHARSET = 366,                  /* CHARSET  */
  YYSYMBOL_CHECKPOINT_SYM = 367,           /* CHECKPOINT_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 368,             /* CHECKSUM_SYM  */
  YYSYMBOL_CIPHER_SYM = 369,               /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 370,         /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 371,               /* CLIENT_SYM  */
  YYSYMBOL_CLOB_MARIADB_SYM = 372,         /* CLOB_MARIADB_SYM  */
  YYSYMBOL_CLOB_ORACLE_SYM = 373,          /* CLOB_ORACLE_SYM  */
  YYSYMBOL_CLOSE_SYM = 374,                /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 375,                 /* COALESCE  */
  YYSYMBOL_CODE_SYM = 376,                 /* CODE_SYM  */
  YYSYMBOL_COLLATION_SYM = 377,            /* COLLATION_SYM  */
  YYSYMBOL_COLUMNS = 378,                  /* COLUMNS  */
  YYSYMBOL_COLUMN_ADD_SYM = 379,           /* COLUMN_ADD_SYM  */
  YYSYMBOL_COLUMN_CHECK_SYM = 380,         /* COLUMN_CHECK_SYM  */
  YYSYMBOL_COLUMN_CREATE_SYM = 381,        /* COLUMN_CREATE_SYM  */
  YYSYMBOL_COLUMN_DELETE_SYM = 382,        /* COLUMN_DELETE_SYM  */
  YYSYMBOL_COLUMN_GET_SYM = 383,           /* COLUMN_GET_SYM  */
  YYSYMBOL_COLUMN_SYM = 384,               /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 385,          /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 386,              /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 387,            /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 388,               /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 389,              /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 390,           /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 391,           /* COMPRESSED_SYM  */
  YYSYMBOL_CONCURRENT = 392,               /* CONCURRENT  */
  YYSYMBOL_CONNECTION_SYM = 393,           /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 394,           /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 395,   /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 396,      /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 397,    /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 398,             /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 399,              /* CONTEXT_SYM  */
  YYSYMBOL_CONTRIBUTORS_SYM = 400,         /* CONTRIBUTORS_SYM  */
  YYSYMBOL_CPU_SYM = 401,                  /* CPU_SYM  */
  YYSYMBOL_CUBE_SYM = 402,                 /* CUBE_SYM  */
  YYSYMBOL_CURRENT_SYM = 403,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_POS_SYM = 404,          /* CURRENT_POS_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 405,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CYCLE_SYM = 406,                /* CYCLE_SYM  */
  YYSYMBOL_DATAFILE_SYM = 407,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 408,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME = 409,                 /* DATETIME  */
  YYSYMBOL_DATE_SYM = 410,                 /* DATE_SYM  */
  YYSYMBOL_DAY_SYM = 411,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 412,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DEFINER_SYM = 413,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 414,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 415,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DES_KEY_FILE = 416,             /* DES_KEY_FILE  */
  YYSYMBOL_DIAGNOSTICS_SYM = 417,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 418,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 419,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD = 420,                  /* DISCARD  */
  YYSYMBOL_DISK_SYM = 421,                 /* DISK_SYM  */
  YYSYMBOL_DO_SYM = 422,                   /* DO_SYM  */
  YYSYMBOL_DUMPFILE = 423,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 424,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 425,              /* DYNAMIC_SYM  */
  YYSYMBOL_ENABLE_SYM = 426,               /* ENABLE_SYM  */
  YYSYMBOL_END = 427,                      /* END  */
  YYSYMBOL_ENDS_SYM = 428,                 /* ENDS_SYM  */
  YYSYMBOL_ENGINES_SYM = 429,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 430,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM = 431,                     /* ENUM  */
  YYSYMBOL_ERROR_SYM = 432,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 433,                   /* ERRORS  */
  YYSYMBOL_ESCAPE_SYM = 434,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 435,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 436,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 437,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 438,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXAMINED_SYM = 439,             /* EXAMINED_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 440,              /* EXCLUDE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 441,              /* EXECUTE_SYM  */
  YYSYMBOL_EXCEPTION_MARIADB_SYM = 442,    /* EXCEPTION_MARIADB_SYM  */
  YYSYMBOL_EXIT_MARIADB_SYM = 443,         /* EXIT_MARIADB_SYM  */
  YYSYMBOL_EXIT_ORACLE_SYM = 444,          /* EXIT_ORACLE_SYM  */
  YYSYMBOL_EXPANSION_SYM = 445,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPIRE_SYM = 446,               /* EXPIRE_SYM  */
  YYSYMBOL_EXPORT_SYM = 447,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 448,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 449,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_FAST_SYM = 450,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 451,               /* FAULTS_SYM  */
  YYSYMBOL_FEDERATED_SYM = 452,            /* FEDERATED_SYM  */
  YYSYMBOL_FILE_SYM = 453,                 /* FILE_SYM  */
  YYSYMBOL_FIRST_SYM = 454,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 455,                /* FIXED_SYM  */
  YYSYMBOL_FLUSH_SYM = 456,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 457,              /* FOLLOWS_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 458,            /* FOLLOWING_SYM  */
  YYSYMBOL_FORCE_SYM = 459,                /* FORCE_SYM  */
  YYSYMBOL_FORMAT_SYM = 460,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 461,                /* FOUND_SYM  */
  YYSYMBOL_FULL = 462,                     /* FULL  */
  YYSYMBOL_FUNCTION_SYM = 463,             /* FUNCTION_SYM  */
  YYSYMBOL_GENERAL = 464,                  /* GENERAL  */
  YYSYMBOL_GENERATED_SYM = 465,            /* GENERATED_SYM  */
  YYSYMBOL_GET_FORMAT = 466,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 467,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 468,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANTS = 469,                   /* GRANTS  */
  YYSYMBOL_HANDLER_SYM = 470,              /* HANDLER_SYM  */
  YYSYMBOL_HARD_SYM = 471,                 /* HARD_SYM  */
  YYSYMBOL_HASH_SYM = 472,                 /* HASH_SYM  */
  YYSYMBOL_HELP_SYM = 473,                 /* HELP_SYM  */
  YYSYMBOL_HIGH_PRIORITY = 474,            /* HIGH_PRIORITY  */
  YYSYMBOL_HISTORY_SYM = 475,              /* HISTORY_SYM  */
  YYSYMBOL_HOST_SYM = 476,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 477,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_SYM = 478,                 /* HOUR_SYM  */
  YYSYMBOL_ID_SYM = 479,                   /* ID_SYM  */
  YYSYMBOL_IDENTIFIED_SYM = 480,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 481,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMMEDIATE_SYM = 482,            /* IMMEDIATE_SYM  */
  YYSYMBOL_IMPORT = 483,                   /* IMPORT  */
  YYSYMBOL_INCREMENT_SYM = 484,            /* INCREMENT_SYM  */
  YYSYMBOL_INDEXES = 485,                  /* INDEXES  */
  YYSYMBOL_INITIAL_SIZE_SYM = 486,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INSERT_METHOD = 487,            /* INSERT_METHOD  */
  YYSYMBOL_INSTALL_SYM = 488,              /* INSTALL_SYM  */
  YYSYMBOL_INVOKER_SYM = 489,              /* INVOKER_SYM  */
  YYSYMBOL_IO_SYM = 490,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 491,                  /* IPC_SYM  */
  YYSYMBOL_ISOLATION = 492,                /* ISOLATION  */
  YYSYMBOL_ISOPEN_SYM = 493,               /* ISOPEN_SYM  */
  YYSYMBOL_ISSUER_SYM = 494,               /* ISSUER_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 495,            /* INVISIBLE_SYM  */
  YYSYMBOL_JSON_SYM = 496,                 /* JSON_SYM  */
  YYSYMBOL_KEY_BLOCK_SIZE = 497,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_LANGUAGE_SYM = 498,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 499,                 /* LAST_SYM  */
  YYSYMBOL_LAST_VALUE = 500,               /* LAST_VALUE  */
  YYSYMBOL_LASTVAL_SYM = 501,              /* LASTVAL_SYM  */
  YYSYMBOL_LEAVES = 502,                   /* LEAVES  */
  YYSYMBOL_LESS_SYM = 503,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 504,                /* LEVEL_SYM  */
  YYSYMBOL_LIST_SYM = 505,                 /* LIST_SYM  */
  YYSYMBOL_LOCAL_SYM = 506,                /* LOCAL_SYM  */
  YYSYMBOL_LOCKED_SYM = 507,               /* LOCKED_SYM  */
  YYSYMBOL_LOCKS_SYM = 508,                /* LOCKS_SYM  */
  YYSYMBOL_LOGFILE_SYM = 509,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 510,                 /* LOGS_SYM  */
  YYSYMBOL_MASTER_CONNECT_RETRY_SYM = 511, /* MASTER_CONNECT_RETRY_SYM  */
  YYSYMBOL_MASTER_DELAY_SYM = 512,         /* MASTER_DELAY_SYM  */
  YYSYMBOL_MASTER_GTID_POS_SYM = 513,      /* MASTER_GTID_POS_SYM  */
  YYSYMBOL_MASTER_HOST_SYM = 514,          /* MASTER_HOST_SYM  */
  YYSYMBOL_MASTER_LOG_FILE_SYM = 515,      /* MASTER_LOG_FILE_SYM  */
  YYSYMBOL_MASTER_LOG_POS_SYM = 516,       /* MASTER_LOG_POS_SYM  */
  YYSYMBOL_MASTER_PASSWORD_SYM = 517,      /* MASTER_PASSWORD_SYM  */
  YYSYMBOL_MASTER_PORT_SYM = 518,          /* MASTER_PORT_SYM  */
  YYSYMBOL_MASTER_SERVER_ID_SYM = 519,     /* MASTER_SERVER_ID_SYM  */
  YYSYMBOL_MASTER_SSL_CAPATH_SYM = 520,    /* MASTER_SSL_CAPATH_SYM  */
  YYSYMBOL_MASTER_SSL_CA_SYM = 521,        /* MASTER_SSL_CA_SYM  */
  YYSYMBOL_MASTER_SSL_CERT_SYM = 522,      /* MASTER_SSL_CERT_SYM  */
  YYSYMBOL_MASTER_SSL_CIPHER_SYM = 523,    /* MASTER_SSL_CIPHER_SYM  */
  YYSYMBOL_MASTER_SSL_CRL_SYM = 524,       /* MASTER_SSL_CRL_SYM  */
  YYSYMBOL_MASTER_SSL_CRLPATH_SYM = 525,   /* MASTER_SSL_CRLPATH_SYM  */
  YYSYMBOL_MASTER_SSL_KEY_SYM = 526,       /* MASTER_SSL_KEY_SYM  */
  YYSYMBOL_MASTER_SSL_SYM = 527,           /* MASTER_SSL_SYM  */
  YYSYMBOL_MASTER_SYM = 528,               /* MASTER_SYM  */
  YYSYMBOL_MASTER_USER_SYM = 529,          /* MASTER_USER_SYM  */
  YYSYMBOL_MASTER_USE_GTID_SYM = 530,      /* MASTER_USE_GTID_SYM  */
  YYSYMBOL_MASTER_HEARTBEAT_PERIOD_SYM = 531, /* MASTER_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_MASTER_DEMOTE_TO_SLAVE_SYM = 532, /* MASTER_DEMOTE_TO_SLAVE_SYM  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 533, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 534,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 535,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 536,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 537,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_STATEMENT_TIME_SYM = 538,   /* MAX_STATEMENT_TIME_SYM  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 539, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MEDIUM_SYM = 540,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 541,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 542,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 543,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 544,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 545,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_SYM = 546,               /* MINUTE_SYM  */
  YYSYMBOL_MINVALUE_SYM = 547,             /* MINVALUE_SYM  */
  YYSYMBOL_MIN_ROWS = 548,                 /* MIN_ROWS  */
  YYSYMBOL_MODE_SYM = 549,                 /* MODE_SYM  */
  YYSYMBOL_MODIFY_SYM = 550,               /* MODIFY_SYM  */
  YYSYMBOL_MONITOR_SYM = 551,              /* MONITOR_SYM  */
  YYSYMBOL_MONTH_SYM = 552,                /* MONTH_SYM  */
  YYSYMBOL_MUTEX_SYM = 553,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_SYM = 554,                /* MYSQL_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 555,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 556,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 557,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 558,             /* NATIONAL_SYM  */
  YYSYMBOL_NCHAR_SYM = 559,                /* NCHAR_SYM  */
  YYSYMBOL_NEVER_SYM = 560,                /* NEVER_SYM  */
  YYSYMBOL_NEXT_SYM = 561,                 /* NEXT_SYM  */
  YYSYMBOL_NEXTVAL_SYM = 562,              /* NEXTVAL_SYM  */
  YYSYMBOL_NOCACHE_SYM = 563,              /* NOCACHE_SYM  */
  YYSYMBOL_NOCYCLE_SYM = 564,              /* NOCYCLE_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 565,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 566,                 /* NONE_SYM  */
  YYSYMBOL_NOTFOUND_SYM = 567,             /* NOTFOUND_SYM  */
  YYSYMBOL_NO_SYM = 568,                   /* NO_SYM  */
  YYSYMBOL_NOMAXVALUE_SYM = 569,           /* NOMAXVALUE_SYM  */
  YYSYMBOL_NOMINVALUE_SYM = 570,           /* NOMINVALUE_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 571,              /* NO_WAIT_SYM  */
  YYSYMBOL_NOWAIT_SYM = 572,               /* NOWAIT_SYM  */
  YYSYMBOL_NUMBER_MARIADB_SYM = 573,       /* NUMBER_MARIADB_SYM  */
  YYSYMBOL_NUMBER_ORACLE_SYM = 574,        /* NUMBER_ORACLE_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 575,             /* NVARCHAR_SYM  */
  YYSYMBOL_OF_SYM = 576,                   /* OF_SYM  */
  YYSYMBOL_OFFSET_SYM = 577,               /* OFFSET_SYM  */
  YYSYMBOL_OLD_PASSWORD_SYM = 578,         /* OLD_PASSWORD_SYM  */
  YYSYMBOL_ONE_SYM = 579,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 580,                 /* ONLY_SYM  */
  YYSYMBOL_ONLINE_SYM = 581,               /* ONLINE_SYM  */
  YYSYMBOL_OPEN_SYM = 582,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIONS_SYM = 583,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 584,                   /* OPTION  */
  YYSYMBOL_OVERLAPS_SYM = 585,             /* OVERLAPS_SYM  */
  YYSYMBOL_OWNER_SYM = 586,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 587,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 588,                 /* PAGE_SYM  */
  YYSYMBOL_PARSER_SYM = 589,               /* PARSER_SYM  */
  YYSYMBOL_PARTIAL = 590,                  /* PARTIAL  */
  YYSYMBOL_PARTITIONS_SYM = 591,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 592,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD_SYM = 593,             /* PASSWORD_SYM  */
  YYSYMBOL_PERIOD_SYM = 594,               /* PERIOD_SYM  */
  YYSYMBOL_PERSISTENT_SYM = 595,           /* PERSISTENT_SYM  */
  YYSYMBOL_PHASE_SYM = 596,                /* PHASE_SYM  */
  YYSYMBOL_PLUGINS_SYM = 597,              /* PLUGINS_SYM  */
  YYSYMBOL_PLUGIN_SYM = 598,               /* PLUGIN_SYM  */
  YYSYMBOL_PORT_SYM = 599,                 /* PORT_SYM  */
  YYSYMBOL_PRECEDES_SYM = 600,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECEDING_SYM = 601,            /* PRECEDING_SYM  */
  YYSYMBOL_PREPARE_SYM = 602,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 603,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 604,                 /* PREV_SYM  */
  YYSYMBOL_PREVIOUS_SYM = 605,             /* PREVIOUS_SYM  */
  YYSYMBOL_PRIVILEGES = 606,               /* PRIVILEGES  */
  YYSYMBOL_PROCESS = 607,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 608,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 609,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 610,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 611,                /* PROXY_SYM  */
  YYSYMBOL_QUARTER_SYM = 612,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 613,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 614,                    /* QUICK  */
  YYSYMBOL_RAW_MARIADB_SYM = 615,          /* RAW_MARIADB_SYM  */
  YYSYMBOL_RAW_ORACLE_SYM = 616,           /* RAW_ORACLE_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 617,            /* READ_ONLY_SYM  */
  YYSYMBOL_REBUILD_SYM = 618,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 619,              /* RECOVER_SYM  */
  YYSYMBOL_REDOFILE_SYM = 620,             /* REDOFILE_SYM  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 621,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 622,            /* REDUNDANT_SYM  */
  YYSYMBOL_RELAY = 623,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 624,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 625,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 626,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 627,             /* RELAY_THREAD  */
  YYSYMBOL_RELOAD = 628,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 629,               /* REMOVE_SYM  */
  YYSYMBOL_REORGANIZE_SYM = 630,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 631,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 632,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPLAY_SYM = 633,               /* REPLAY_SYM  */
  YYSYMBOL_REPLICATION = 634,              /* REPLICATION  */
  YYSYMBOL_RESET_SYM = 635,                /* RESET_SYM  */
  YYSYMBOL_RESTART_SYM = 636,              /* RESTART_SYM  */
  YYSYMBOL_RESOURCES = 637,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 638,              /* RESTORE_SYM  */
  YYSYMBOL_RESUME_SYM = 639,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 640,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 641,              /* RETURNS_SYM  */
  YYSYMBOL_REUSE_SYM = 642,                /* REUSE_SYM  */
  YYSYMBOL_REVERSE_SYM = 643,              /* REVERSE_SYM  */
  YYSYMBOL_ROLE_SYM = 644,                 /* ROLE_SYM  */
  YYSYMBOL_ROLLBACK_SYM = 645,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 646,               /* ROLLUP_SYM  */
  YYSYMBOL_ROUTINE_SYM = 647,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWCOUNT_SYM = 648,             /* ROWCOUNT_SYM  */
  YYSYMBOL_ROW_SYM = 649,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 650,            /* ROW_COUNT_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 651,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_RTREE_SYM = 652,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 653,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 654,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 655,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_SYM = 656,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 657,             /* SECURITY_SYM  */
  YYSYMBOL_SEQUENCE_SYM = 658,             /* SEQUENCE_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 659,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 660,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 661,              /* SESSION_SYM  */
  YYSYMBOL_SERVER_SYM = 662,               /* SERVER_SYM  */
  YYSYMBOL_SETVAL_SYM = 663,               /* SETVAL_SYM  */
  YYSYMBOL_SHARE_SYM = 664,                /* SHARE_SYM  */
  YYSYMBOL_SHUTDOWN = 665,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNED_SYM = 666,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 667,               /* SIMPLE_SYM  */
  YYSYMBOL_SKIP_SYM = 668,                 /* SKIP_SYM  */
  YYSYMBOL_SLAVE = 669,                    /* SLAVE  */
  YYSYMBOL_SLAVES = 670,                   /* SLAVES  */
  YYSYMBOL_SLAVE_POS_SYM = 671,            /* SLAVE_POS_SYM  */
  YYSYMBOL_SLOW = 672,                     /* SLOW  */
  YYSYMBOL_SNAPSHOT_SYM = 673,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 674,               /* SOCKET_SYM  */
  YYSYMBOL_SOFT_SYM = 675,                 /* SOFT_SYM  */
  YYSYMBOL_SONAME_SYM = 676,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 677,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 678,               /* SOURCE_SYM  */
  YYSYMBOL_SQL_AFTER_GTIDS_SYM = 679,      /* SQL_AFTER_GTIDS_SYM  */
  YYSYMBOL_SQL_BEFORE_GTIDS_SYM = 680,     /* SQL_BEFORE_GTIDS_SYM  */
  YYSYMBOL_SQL_BUFFER_RESULT = 681,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_SQL_CACHE_SYM = 682,            /* SQL_CACHE_SYM  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 683,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 684,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_THREAD = 685,               /* SQL_THREAD  */
  YYSYMBOL_STAGE_SYM = 686,                /* STAGE_SYM  */
  YYSYMBOL_STARTS_SYM = 687,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 688,                /* START_SYM  */
  YYSYMBOL_STATEMENT_SYM = 689,            /* STATEMENT_SYM  */
  YYSYMBOL_STATUS_SYM = 690,               /* STATUS_SYM  */
  YYSYMBOL_STOP_SYM = 691,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 692,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 693,               /* STORED_SYM  */
  YYSYMBOL_STRING_SYM = 694,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 695,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 696,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 697,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 698,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 699,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUPER_SYM = 700,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 701,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 702,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 703,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSTEM = 704,                   /* SYSTEM  */
  YYSYMBOL_SYSTEM_TIME_SYM = 705,          /* SYSTEM_TIME_SYM  */
  YYSYMBOL_TABLES = 706,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 707,               /* TABLESPACE  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 708,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 709,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 710,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 711,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TEXT_SYM = 712,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 713,                 /* THAN_SYM  */
  YYSYMBOL_TIES_SYM = 714,                 /* TIES_SYM  */
  YYSYMBOL_TIMESTAMP = 715,                /* TIMESTAMP  */
  YYSYMBOL_TIMESTAMP_ADD = 716,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 717,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 718,                 /* TIME_SYM  */
  YYSYMBOL_TRANSACTION_SYM = 719,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRANSACTIONAL_SYM = 720,        /* TRANSACTIONAL_SYM  */
  YYSYMBOL_THREADS_SYM = 721,              /* THREADS_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 722,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIM_ORACLE = 723,              /* TRIM_ORACLE  */
  YYSYMBOL_TRUNCATE_SYM = 724,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPE_SYM = 725,                 /* TYPE_SYM  */
  YYSYMBOL_UDF_RETURNS_SYM = 726,          /* UDF_RETURNS_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 727,            /* UNBOUNDED_SYM  */
  YYSYMBOL_UNCOMMITTED_SYM = 728,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 729,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDOFILE_SYM = 730,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 731,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNICODE_SYM = 732,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 733,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 734,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNTIL_SYM = 735,                /* UNTIL_SYM  */
  YYSYMBOL_UPGRADE_SYM = 736,              /* UPGRADE_SYM  */
  YYSYMBOL_USER_SYM = 737,                 /* USER_SYM  */
  YYSYMBOL_USE_FRM = 738,                  /* USE_FRM  */
  YYSYMBOL_VALIDATION_SYM = 739,           /* VALIDATION_SYM  */
  YYSYMBOL_VALUE_SYM = 740,                /* VALUE_SYM  */
  YYSYMBOL_VARCHAR2_MARIADB_SYM = 741,     /* VARCHAR2_MARIADB_SYM  */
  YYSYMBOL_VARCHAR2_ORACLE_SYM = 742,      /* VARCHAR2_ORACLE_SYM  */
  YYSYMBOL_VARIABLES = 743,                /* VARIABLES  */
  YYSYMBOL_VERSIONING_SYM = 744,           /* VERSIONING_SYM  */
  YYSYMBOL_VIA_SYM = 745,                  /* VIA_SYM  */
  YYSYMBOL_VIEW_SYM = 746,                 /* VIEW_SYM  */
  YYSYMBOL_VISIBLE_SYM = 747,              /* VISIBLE_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 748,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 749,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 750,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 751,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 752,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WINDOW_SYM = 753,               /* WINDOW_SYM  */
  YYSYMBOL_WITHIN = 754,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 755,                  /* WITHOUT  */
  YYSYMBOL_WORK_SYM = 756,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 757,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 758,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 759,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 760,                   /* XA_SYM  */
  YYSYMBOL_XML_SYM = 761,                  /* XML_SYM  */
  YYSYMBOL_YEAR_SYM = 762,                 /* YEAR_SYM  */
  YYSYMBOL_CONDITIONLESS_JOIN = 763,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_ON_SYM = 764,                   /* ON_SYM  */
  YYSYMBOL_PREC_BELOW_NOT = 765,           /* PREC_BELOW_NOT  */
  YYSYMBOL_766_ = 766,                     /* '='  */
  YYSYMBOL_767_ = 767,                     /* '>'  */
  YYSYMBOL_768_ = 768,                     /* '<'  */
  YYSYMBOL_769_ = 769,                     /* '|'  */
  YYSYMBOL_770_ = 770,                     /* '&'  */
  YYSYMBOL_771_ = 771,                     /* '-'  */
  YYSYMBOL_772_ = 772,                     /* '+'  */
  YYSYMBOL_773_ = 773,                     /* '*'  */
  YYSYMBOL_774_ = 774,                     /* '/'  */
  YYSYMBOL_775_ = 775,                     /* '%'  */
  YYSYMBOL_776_ = 776,                     /* '^'  */
  YYSYMBOL_777_ = 777,                     /* '~'  */
  YYSYMBOL_SUBQUERY_AS_EXPR = 778,         /* SUBQUERY_AS_EXPR  */
  YYSYMBOL_PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 779, /* PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE  */
  YYSYMBOL_USER = 780,                     /* USER  */
  YYSYMBOL_PREC_BELOW_SP_OBJECT_TYPE = 781, /* PREC_BELOW_SP_OBJECT_TYPE  */
  YYSYMBOL_PREC_BELOW_CONTRACTION_TOKEN2 = 782, /* PREC_BELOW_CONTRACTION_TOKEN2  */
  YYSYMBOL_783_ = 783,                     /* '('  */
  YYSYMBOL_784_ = 784,                     /* ')'  */
  YYSYMBOL_EMPTY_FROM_CLAUSE = 785,        /* EMPTY_FROM_CLAUSE  */
  YYSYMBOL_786_ = 786,                     /* ','  */
  YYSYMBOL_787_ = 787,                     /* '!'  */
  YYSYMBOL_788_ = 788,                     /* '{'  */
  YYSYMBOL_789_ = 789,                     /* '}'  */
  YYSYMBOL_790_ = 790,                     /* ';'  */
  YYSYMBOL_791_ = 791,                     /* '.'  */
  YYSYMBOL_YYACCEPT = 792,                 /* $accept  */
  YYSYMBOL_query = 793,                    /* query  */
  YYSYMBOL_794_1 = 794,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 795,         /* opt_end_of_input  */
  YYSYMBOL_directly_executable_statement = 796, /* directly_executable_statement  */
  YYSYMBOL_verb_clause = 797,              /* verb_clause  */
  YYSYMBOL_deallocate = 798,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 799,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 800,                  /* prepare  */
  YYSYMBOL_801_2 = 801,                    /* $@2  */
  YYSYMBOL_execute = 802,                  /* execute  */
  YYSYMBOL_803_3 = 803,                    /* $@3  */
  YYSYMBOL_804_4 = 804,                    /* $@4  */
  YYSYMBOL_execute_using = 805,            /* execute_using  */
  YYSYMBOL_806_5 = 806,                    /* $@5  */
  YYSYMBOL_execute_params = 807,           /* execute_params  */
  YYSYMBOL_help = 808,                     /* help  */
  YYSYMBOL_809_6 = 809,                    /* $@6  */
  YYSYMBOL_change = 810,                   /* change  */
  YYSYMBOL_811_7 = 811,                    /* $@7  */
  YYSYMBOL_master_defs = 812,              /* master_defs  */
  YYSYMBOL_master_def = 813,               /* master_def  */
  YYSYMBOL_ignore_server_id_list = 814,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 815,         /* ignore_server_id  */
  YYSYMBOL_do_domain_id_list = 816,        /* do_domain_id_list  */
  YYSYMBOL_do_domain_id = 817,             /* do_domain_id  */
  YYSYMBOL_ignore_domain_id_list = 818,    /* ignore_domain_id_list  */
  YYSYMBOL_ignore_domain_id = 819,         /* ignore_domain_id  */
  YYSYMBOL_master_file_def = 820,          /* master_file_def  */
  YYSYMBOL_optional_connection_name = 821, /* optional_connection_name  */
  YYSYMBOL_connection_name = 822,          /* connection_name  */
  YYSYMBOL_optional_for_channel = 823,     /* optional_for_channel  */
  YYSYMBOL_for_channel = 824,              /* for_channel  */
  YYSYMBOL_create = 825,                   /* create  */
  YYSYMBOL_826_8 = 826,                    /* $@8  */
  YYSYMBOL_827_9 = 827,                    /* $@9  */
  YYSYMBOL_828_10 = 828,                   /* $@10  */
  YYSYMBOL_829_11 = 829,                   /* $@11  */
  YYSYMBOL_830_12 = 830,                   /* $@12  */
  YYSYMBOL_831_13 = 831,                   /* $@13  */
  YYSYMBOL_832_14 = 832,                   /* $@14  */
  YYSYMBOL_833_15 = 833,                   /* $@15  */
  YYSYMBOL_834_16 = 834,                   /* $@16  */
  YYSYMBOL_835_17 = 835,                   /* $@17  */
  YYSYMBOL_836_18 = 836,                   /* $@18  */
  YYSYMBOL_837_19 = 837,                   /* $@19  */
  YYSYMBOL_838_20 = 838,                   /* $@20  */
  YYSYMBOL_839_21 = 839,                   /* $@21  */
  YYSYMBOL_840_22 = 840,                   /* $@22  */
  YYSYMBOL_841_23 = 841,                   /* $@23  */
  YYSYMBOL_842_24 = 842,                   /* $@24  */
  YYSYMBOL_opt_sequence = 843,             /* opt_sequence  */
  YYSYMBOL_sequence_defs = 844,            /* sequence_defs  */
  YYSYMBOL_sequence_def = 845,             /* sequence_def  */
  YYSYMBOL_force_lookahead = 846,          /* force_lookahead  */
  YYSYMBOL_server_def = 847,               /* server_def  */
  YYSYMBOL_848_25 = 848,                   /* $@25  */
  YYSYMBOL_server_options_list = 849,      /* server_options_list  */
  YYSYMBOL_server_option = 850,            /* server_option  */
  YYSYMBOL_event_tail = 851,               /* event_tail  */
  YYSYMBOL_852_26 = 852,                   /* $@26  */
  YYSYMBOL_ev_schedule_time = 853,         /* ev_schedule_time  */
  YYSYMBOL_854_27 = 854,                   /* $@27  */
  YYSYMBOL_opt_ev_status = 855,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 856,                /* ev_starts  */
  YYSYMBOL_ev_ends = 857,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 858,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 859,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 860,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 861,              /* ev_sql_stmt  */
  YYSYMBOL_862_28 = 862,                   /* $@28  */
  YYSYMBOL_clear_privileges = 863,         /* clear_privileges  */
  YYSYMBOL_opt_aggregate = 864,            /* opt_aggregate  */
  YYSYMBOL_sp_handler = 865,               /* sp_handler  */
  YYSYMBOL_sp_handler_package_spec = 866,  /* sp_handler_package_spec  */
  YYSYMBOL_sp_handler_package_body = 867,  /* sp_handler_package_body  */
  YYSYMBOL_drop_routine = 868,             /* drop_routine  */
  YYSYMBOL_sp_name = 869,                  /* sp_name  */
  YYSYMBOL_sp_a_chistics = 870,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 871,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 872,               /* sp_chistic  */
  YYSYMBOL_sp_c_chistic = 873,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 874,                  /* sp_suid  */
  YYSYMBOL_call = 875,                     /* call  */
  YYSYMBOL_876_29 = 876,                   /* $@29  */
  YYSYMBOL_877_30 = 877,                   /* $@30  */
  YYSYMBOL_878_31 = 878,                   /* $@31  */
  YYSYMBOL_opt_sp_cparam_list = 879,       /* opt_sp_cparam_list  */
  YYSYMBOL_opt_sp_cparams = 880,           /* opt_sp_cparams  */
  YYSYMBOL_sp_cparams = 881,               /* sp_cparams  */
  YYSYMBOL_sp_fdparam_list = 882,          /* sp_fdparam_list  */
  YYSYMBOL_883_32 = 883,                   /* $@32  */
  YYSYMBOL_sp_fdparams = 884,              /* sp_fdparams  */
  YYSYMBOL_sp_param_name = 885,            /* sp_param_name  */
  YYSYMBOL_sp_pdparam_list = 886,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 887,              /* sp_pdparams  */
  YYSYMBOL_sp_parameter_type = 888,        /* sp_parameter_type  */
  YYSYMBOL_sp_parenthesized_pdparam_list = 889, /* sp_parenthesized_pdparam_list  */
  YYSYMBOL_890_33 = 890,                   /* $@33  */
  YYSYMBOL_sp_parenthesized_fdparam_list = 891, /* sp_parenthesized_fdparam_list  */
  YYSYMBOL_sp_proc_stmts = 892,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 893,           /* sp_proc_stmts1  */
  YYSYMBOL_optionally_qualified_column_ident = 894, /* optionally_qualified_column_ident  */
  YYSYMBOL_row_field_definition = 895,     /* row_field_definition  */
  YYSYMBOL_row_field_definition_list = 896, /* row_field_definition_list  */
  YYSYMBOL_row_type_body = 897,            /* row_type_body  */
  YYSYMBOL_sp_decl_idents_init_vars = 898, /* sp_decl_idents_init_vars  */
  YYSYMBOL_sp_decl_variable_list = 899,    /* sp_decl_variable_list  */
  YYSYMBOL_900_34 = 900,                   /* $@34  */
  YYSYMBOL_sp_decl_handler = 901,          /* sp_decl_handler  */
  YYSYMBOL_902_35 = 902,                   /* $@35  */
  YYSYMBOL_opt_parenthesized_cursor_formal_parameters = 903, /* opt_parenthesized_cursor_formal_parameters  */
  YYSYMBOL_sp_cursor_stmt_lex = 904,       /* sp_cursor_stmt_lex  */
  YYSYMBOL_sp_cursor_stmt = 905,           /* sp_cursor_stmt  */
  YYSYMBOL_906_36 = 906,                   /* $@36  */
  YYSYMBOL_sp_handler_type = 907,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 908,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 909,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 910,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 911,                 /* sqlstate  */
  YYSYMBOL_opt_value = 912,                /* opt_value  */
  YYSYMBOL_sp_hcond = 913,                 /* sp_hcond  */
  YYSYMBOL_raise_stmt_oracle = 914,        /* raise_stmt_oracle  */
  YYSYMBOL_signal_stmt = 915,              /* signal_stmt  */
  YYSYMBOL_signal_value = 916,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 917,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 918, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 919, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 920,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 921, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 922,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 923,          /* get_diagnostics  */
  YYSYMBOL_which_area = 924,               /* which_area  */
  YYSYMBOL_diagnostics_information = 925,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 926,    /* statement_information  */
  YYSYMBOL_statement_information_item = 927, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 928, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 929, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 930,         /* condition_number  */
  YYSYMBOL_condition_information = 931,    /* condition_information  */
  YYSYMBOL_condition_information_item = 932, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 933, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_ident = 934,            /* sp_decl_ident  */
  YYSYMBOL_sp_decl_idents = 935,           /* sp_decl_idents  */
  YYSYMBOL_sp_proc_stmt_if = 936,          /* sp_proc_stmt_if  */
  YYSYMBOL_937_37 = 937,                   /* $@37  */
  YYSYMBOL_sp_proc_stmt_statement = 938,   /* sp_proc_stmt_statement  */
  YYSYMBOL_939_38 = 939,                   /* $@38  */
  YYSYMBOL_RETURN_ALLMODES_SYM = 940,      /* RETURN_ALLMODES_SYM  */
  YYSYMBOL_sp_proc_stmt_return = 941,      /* sp_proc_stmt_return  */
  YYSYMBOL_942_39 = 942,                   /* $@39  */
  YYSYMBOL_sp_proc_stmt_exit_oracle = 943, /* sp_proc_stmt_exit_oracle  */
  YYSYMBOL_944_40 = 944,                   /* $@40  */
  YYSYMBOL_945_41 = 945,                   /* $@41  */
  YYSYMBOL_sp_proc_stmt_continue_oracle = 946, /* sp_proc_stmt_continue_oracle  */
  YYSYMBOL_947_42 = 947,                   /* $@42  */
  YYSYMBOL_948_43 = 948,                   /* $@43  */
  YYSYMBOL_sp_proc_stmt_leave = 949,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 950,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_goto_oracle = 951, /* sp_proc_stmt_goto_oracle  */
  YYSYMBOL_expr_lex = 952,                 /* expr_lex  */
  YYSYMBOL_953_44 = 953,                   /* @44  */
  YYSYMBOL_assignment_source_lex = 954,    /* assignment_source_lex  */
  YYSYMBOL_assignment_source_expr = 955,   /* assignment_source_expr  */
  YYSYMBOL_956_45 = 956,                   /* $@45  */
  YYSYMBOL_for_loop_bound_expr = 957,      /* for_loop_bound_expr  */
  YYSYMBOL_958_46 = 958,                   /* $@46  */
  YYSYMBOL_cursor_actual_parameters = 959, /* cursor_actual_parameters  */
  YYSYMBOL_opt_parenthesized_cursor_actual_parameters = 960, /* opt_parenthesized_cursor_actual_parameters  */
  YYSYMBOL_sp_proc_stmt_with_cursor = 961, /* sp_proc_stmt_with_cursor  */
  YYSYMBOL_sp_proc_stmt_open = 962,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch_head = 963,  /* sp_proc_stmt_fetch_head  */
  YYSYMBOL_sp_proc_stmt_fetch = 964,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_sp_proc_stmt_close = 965,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_fetch_list = 966,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 967,                    /* sp_if  */
  YYSYMBOL_968_47 = 968,                   /* $@47  */
  YYSYMBOL_969_48 = 969,                   /* $@48  */
  YYSYMBOL_sp_elseifs = 970,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 971,  /* case_stmt_specification  */
  YYSYMBOL_972_49 = 972,                   /* $@49  */
  YYSYMBOL_case_stmt_body = 973,           /* case_stmt_body  */
  YYSYMBOL_974_50 = 974,                   /* $@50  */
  YYSYMBOL_simple_when_clause_list = 975,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 976, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 977,       /* simple_when_clause  */
  YYSYMBOL_978_51 = 978,                   /* $@51  */
  YYSYMBOL_searched_when_clause = 979,     /* searched_when_clause  */
  YYSYMBOL_980_52 = 980,                   /* $@52  */
  YYSYMBOL_else_clause_opt = 981,          /* else_clause_opt  */
  YYSYMBOL_sp_opt_label = 982,             /* sp_opt_label  */
  YYSYMBOL_opt_sp_for_loop_direction = 983, /* opt_sp_for_loop_direction  */
  YYSYMBOL_sp_for_loop_index_and_bounds = 984, /* sp_for_loop_index_and_bounds  */
  YYSYMBOL_sp_for_loop_bounds = 985,       /* sp_for_loop_bounds  */
  YYSYMBOL_loop_body = 986,                /* loop_body  */
  YYSYMBOL_repeat_body = 987,              /* repeat_body  */
  YYSYMBOL_pop_sp_loop_label = 988,        /* pop_sp_loop_label  */
  YYSYMBOL_sp_labeled_control = 989,       /* sp_labeled_control  */
  YYSYMBOL_990_53 = 990,                   /* $@53  */
  YYSYMBOL_991_54 = 991,                   /* $@54  */
  YYSYMBOL_992_55 = 992,                   /* $@55  */
  YYSYMBOL_993_56 = 993,                   /* $@56  */
  YYSYMBOL_994_57 = 994,                   /* $@57  */
  YYSYMBOL_995_58 = 995,                   /* $@58  */
  YYSYMBOL_sp_unlabeled_control = 996,     /* sp_unlabeled_control  */
  YYSYMBOL_997_59 = 997,                   /* $@59  */
  YYSYMBOL_998_60 = 998,                   /* $@60  */
  YYSYMBOL_999_61 = 999,                   /* $@61  */
  YYSYMBOL_1000_62 = 1000,                 /* $@62  */
  YYSYMBOL_1001_63 = 1001,                 /* $@63  */
  YYSYMBOL_trg_action_time = 1002,         /* trg_action_time  */
  YYSYMBOL_trg_event = 1003,               /* trg_event  */
  YYSYMBOL_create_body = 1004,             /* create_body  */
  YYSYMBOL_1005_64 = 1005,                 /* $@64  */
  YYSYMBOL_create_like = 1006,             /* create_like  */
  YYSYMBOL_opt_create_select = 1007,       /* opt_create_select  */
  YYSYMBOL_create_select_query_expression = 1008, /* create_select_query_expression  */
  YYSYMBOL_opt_create_partitioning = 1009, /* opt_create_partitioning  */
  YYSYMBOL_opt_partitioning = 1010,        /* opt_partitioning  */
  YYSYMBOL_partitioning = 1011,            /* partitioning  */
  YYSYMBOL_1012_65 = 1012,                 /* $@65  */
  YYSYMBOL_have_partitioning = 1013,       /* have_partitioning  */
  YYSYMBOL_partition_entry = 1014,         /* partition_entry  */
  YYSYMBOL_1015_66 = 1015,                 /* $@66  */
  YYSYMBOL_partition = 1016,               /* partition  */
  YYSYMBOL_1017_67 = 1017,                 /* $@67  */
  YYSYMBOL_part_type_def = 1018,           /* part_type_def  */
  YYSYMBOL_1019_68 = 1019,                 /* $@68  */
  YYSYMBOL_1020_69 = 1020,                 /* $@69  */
  YYSYMBOL_1021_70 = 1021,                 /* $@70  */
  YYSYMBOL_opt_linear = 1022,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1023,            /* opt_key_algo  */
  YYSYMBOL_part_field_list = 1024,         /* part_field_list  */
  YYSYMBOL_part_field_item_list = 1025,    /* part_field_item_list  */
  YYSYMBOL_part_field_item = 1026,         /* part_field_item  */
  YYSYMBOL_part_column_list = 1027,        /* part_column_list  */
  YYSYMBOL_part_func = 1028,               /* part_func  */
  YYSYMBOL_sub_part_func = 1029,           /* sub_part_func  */
  YYSYMBOL_opt_num_parts = 1030,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1031,            /* opt_sub_part  */
  YYSYMBOL_1032_71 = 1032,                 /* $@71  */
  YYSYMBOL_1033_72 = 1033,                 /* $@72  */
  YYSYMBOL_sub_part_field_list = 1034,     /* sub_part_field_list  */
  YYSYMBOL_sub_part_field_item = 1035,     /* sub_part_field_item  */
  YYSYMBOL_part_func_expr = 1036,          /* part_func_expr  */
  YYSYMBOL_opt_num_subparts = 1037,        /* opt_num_subparts  */
  YYSYMBOL_part_defs = 1038,               /* part_defs  */
  YYSYMBOL_part_def_list = 1039,           /* part_def_list  */
  YYSYMBOL_opt_partition = 1040,           /* opt_partition  */
  YYSYMBOL_part_definition = 1041,         /* part_definition  */
  YYSYMBOL_1042_73 = 1042,                 /* $@73  */
  YYSYMBOL_part_name = 1043,               /* part_name  */
  YYSYMBOL_opt_part_values = 1044,         /* opt_part_values  */
  YYSYMBOL_1045_74 = 1045,                 /* $@74  */
  YYSYMBOL_1046_75 = 1046,                 /* $@75  */
  YYSYMBOL_part_func_max = 1047,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1048,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1049,         /* part_value_list  */
  YYSYMBOL_part_value_item = 1050,         /* part_value_item  */
  YYSYMBOL_1051_76 = 1051,                 /* $@76  */
  YYSYMBOL_1052_77 = 1052,                 /* $@77  */
  YYSYMBOL_part_value_item_list = 1053,    /* part_value_item_list  */
  YYSYMBOL_part_value_expr_item = 1054,    /* part_value_expr_item  */
  YYSYMBOL_opt_sub_partition = 1055,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1056,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1057,     /* sub_part_definition  */
  YYSYMBOL_1058_78 = 1058,                 /* $@78  */
  YYSYMBOL_sub_name = 1059,                /* sub_name  */
  YYSYMBOL_opt_part_options = 1060,        /* opt_part_options  */
  YYSYMBOL_part_option_list = 1061,        /* part_option_list  */
  YYSYMBOL_part_option = 1062,             /* part_option  */
  YYSYMBOL_opt_subpart_options = 1063,     /* opt_subpart_options  */
  YYSYMBOL_subpart_option_list = 1064,     /* subpart_option_list  */
  YYSYMBOL_server_part_option = 1065,      /* server_part_option  */
  YYSYMBOL_opt_versioning_rotation = 1066, /* opt_versioning_rotation  */
  YYSYMBOL_1067_79 = 1067,                 /* $@79  */
  YYSYMBOL_opt_versioning_interval_start = 1068, /* opt_versioning_interval_start  */
  YYSYMBOL_opt_vers_auto_part = 1069,      /* opt_vers_auto_part  */
  YYSYMBOL_opt_as = 1070,                  /* opt_as  */
  YYSYMBOL_opt_create_database_options = 1071, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1072, /* create_database_options  */
  YYSYMBOL_create_database_option = 1073,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists_table_element = 1074, /* opt_if_not_exists_table_element  */
  YYSYMBOL_opt_if_not_exists = 1075,       /* opt_if_not_exists  */
  YYSYMBOL_create_or_replace = 1076,       /* create_or_replace  */
  YYSYMBOL_opt_create_table_options = 1077, /* opt_create_table_options  */
  YYSYMBOL_create_table_options_space_separated = 1078, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1079,    /* create_table_options  */
  YYSYMBOL_create_table_option = 1080,     /* create_table_option  */
  YYSYMBOL_1081_80 = 1081,                 /* $@80  */
  YYSYMBOL_engine_defined_option = 1082,   /* engine_defined_option  */
  YYSYMBOL_ident_options = 1083,           /* ident_options  */
  YYSYMBOL_keyword_options = 1084,         /* keyword_options  */
  YYSYMBOL_opt_versioning_option = 1085,   /* opt_versioning_option  */
  YYSYMBOL_versioning_option = 1086,       /* versioning_option  */
  YYSYMBOL_default_charset = 1087,         /* default_charset  */
  YYSYMBOL_default_collation = 1088,       /* default_collation  */
  YYSYMBOL_storage_engines = 1089,         /* storage_engines  */
  YYSYMBOL_known_storage_engines = 1090,   /* known_storage_engines  */
  YYSYMBOL_row_types = 1091,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1092,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1093,                /* udf_type  */
  YYSYMBOL_create_field_list = 1094,       /* create_field_list  */
  YYSYMBOL_create_field_list_parens = 1095, /* create_field_list_parens  */
  YYSYMBOL_field_list = 1096,              /* field_list  */
  YYSYMBOL_field_list_item = 1097,         /* field_list_item  */
  YYSYMBOL_column_def = 1098,              /* column_def  */
  YYSYMBOL_key_def = 1099,                 /* key_def  */
  YYSYMBOL_1100_81 = 1100,                 /* $@81  */
  YYSYMBOL_1101_82 = 1101,                 /* $@82  */
  YYSYMBOL_1102_83 = 1102,                 /* $@83  */
  YYSYMBOL_1103_84 = 1103,                 /* $@84  */
  YYSYMBOL_1104_85 = 1104,                 /* $@85  */
  YYSYMBOL_1105_86 = 1105,                 /* $@86  */
  YYSYMBOL_1106_87 = 1106,                 /* $@87  */
  YYSYMBOL_constraint_def = 1107,          /* constraint_def  */
  YYSYMBOL_period_for_system_time = 1108,  /* period_for_system_time  */
  YYSYMBOL_period_for_application_time = 1109, /* period_for_application_time  */
  YYSYMBOL_opt_check_constraint = 1110,    /* opt_check_constraint  */
  YYSYMBOL_check_constraint = 1111,        /* check_constraint  */
  YYSYMBOL_opt_constraint_no_id = 1112,    /* opt_constraint_no_id  */
  YYSYMBOL_opt_constraint = 1113,          /* opt_constraint  */
  YYSYMBOL_constraint = 1114,              /* constraint  */
  YYSYMBOL_field_spec = 1115,              /* field_spec  */
  YYSYMBOL_1116_88 = 1116,                 /* @88  */
  YYSYMBOL_field_type_or_serial = 1117,    /* field_type_or_serial  */
  YYSYMBOL_1118_89 = 1118,                 /* $@89  */
  YYSYMBOL_1119_90 = 1119,                 /* $@90  */
  YYSYMBOL_opt_serial_attribute = 1120,    /* opt_serial_attribute  */
  YYSYMBOL_opt_serial_attribute_list = 1121, /* opt_serial_attribute_list  */
  YYSYMBOL_opt_asrow_attribute = 1122,     /* opt_asrow_attribute  */
  YYSYMBOL_opt_asrow_attribute_list = 1123, /* opt_asrow_attribute_list  */
  YYSYMBOL_field_def = 1124,               /* field_def  */
  YYSYMBOL_1125_91 = 1125,                 /* $@91  */
  YYSYMBOL_opt_generated_always = 1126,    /* opt_generated_always  */
  YYSYMBOL_vcol_opt_specifier = 1127,      /* vcol_opt_specifier  */
  YYSYMBOL_vcol_opt_attribute = 1128,      /* vcol_opt_attribute  */
  YYSYMBOL_vcol_opt_attribute_list = 1129, /* vcol_opt_attribute_list  */
  YYSYMBOL_vcol_attribute = 1130,          /* vcol_attribute  */
  YYSYMBOL_parse_vcol_expr = 1131,         /* parse_vcol_expr  */
  YYSYMBOL_1132_92 = 1132,                 /* $@92  */
  YYSYMBOL_parenthesized_expr = 1133,      /* parenthesized_expr  */
  YYSYMBOL_virtual_column_func = 1134,     /* virtual_column_func  */
  YYSYMBOL_expr_or_literal = 1135,         /* expr_or_literal  */
  YYSYMBOL_column_default_expr = 1136,     /* column_default_expr  */
  YYSYMBOL_field_type = 1137,              /* field_type  */
  YYSYMBOL_qualified_field_type = 1138,    /* qualified_field_type  */
  YYSYMBOL_udt_name = 1139,                /* udt_name  */
  YYSYMBOL_field_type_all = 1140,          /* field_type_all  */
  YYSYMBOL_field_type_numeric = 1141,      /* field_type_numeric  */
  YYSYMBOL_opt_binary_and_compression = 1142, /* opt_binary_and_compression  */
  YYSYMBOL_field_type_string = 1143,       /* field_type_string  */
  YYSYMBOL_field_type_temporal = 1144,     /* field_type_temporal  */
  YYSYMBOL_field_type_lob = 1145,          /* field_type_lob  */
  YYSYMBOL_field_type_misc = 1146,         /* field_type_misc  */
  YYSYMBOL_char = 1147,                    /* char  */
  YYSYMBOL_nchar = 1148,                   /* nchar  */
  YYSYMBOL_varchar = 1149,                 /* varchar  */
  YYSYMBOL_nvarchar = 1150,                /* nvarchar  */
  YYSYMBOL_int_type = 1151,                /* int_type  */
  YYSYMBOL_real_type = 1152,               /* real_type  */
  YYSYMBOL_srid_option = 1153,             /* srid_option  */
  YYSYMBOL_float_options = 1154,           /* float_options  */
  YYSYMBOL_precision = 1155,               /* precision  */
  YYSYMBOL_field_options = 1156,           /* field_options  */
  YYSYMBOL_last_field_options = 1157,      /* last_field_options  */
  YYSYMBOL_field_length_str = 1158,        /* field_length_str  */
  YYSYMBOL_field_length = 1159,            /* field_length  */
  YYSYMBOL_field_scale = 1160,             /* field_scale  */
  YYSYMBOL_opt_field_length = 1161,        /* opt_field_length  */
  YYSYMBOL_opt_field_scale = 1162,         /* opt_field_scale  */
  YYSYMBOL_opt_precision = 1163,           /* opt_precision  */
  YYSYMBOL_attribute_list = 1164,          /* attribute_list  */
  YYSYMBOL_attribute = 1165,               /* attribute  */
  YYSYMBOL_opt_compression_method = 1166,  /* opt_compression_method  */
  YYSYMBOL_opt_compressed = 1167,          /* opt_compressed  */
  YYSYMBOL_opt_enable = 1168,              /* opt_enable  */
  YYSYMBOL_compressed = 1169,              /* compressed  */
  YYSYMBOL_compressed_deprecated_data_type_attribute = 1170, /* compressed_deprecated_data_type_attribute  */
  YYSYMBOL_compressed_deprecated_column_attribute = 1171, /* compressed_deprecated_column_attribute  */
  YYSYMBOL_asrow_attribute = 1172,         /* asrow_attribute  */
  YYSYMBOL_serial_attribute = 1173,        /* serial_attribute  */
  YYSYMBOL_with_or_without_system = 1174,  /* with_or_without_system  */
  YYSYMBOL_charset = 1175,                 /* charset  */
  YYSYMBOL_charset_name = 1176,            /* charset_name  */
  YYSYMBOL_charset_name_or_default = 1177, /* charset_name_or_default  */
  YYSYMBOL_opt_load_data_charset = 1178,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1179, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1180, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1181,          /* collation_name  */
  YYSYMBOL_collation_name_or_default = 1182, /* collation_name_or_default  */
  YYSYMBOL_opt_default = 1183,             /* opt_default  */
  YYSYMBOL_charset_or_alias = 1184,        /* charset_or_alias  */
  YYSYMBOL_opt_binary = 1185,              /* opt_binary  */
  YYSYMBOL_binary = 1186,                  /* binary  */
  YYSYMBOL_opt_bin_mod = 1187,             /* opt_bin_mod  */
  YYSYMBOL_ws_nweights = 1188,             /* ws_nweights  */
  YYSYMBOL_1189_93 = 1189,                 /* $@93  */
  YYSYMBOL_ws_level_flag_desc = 1190,      /* ws_level_flag_desc  */
  YYSYMBOL_ws_level_flag_reverse = 1191,   /* ws_level_flag_reverse  */
  YYSYMBOL_ws_level_flags = 1192,          /* ws_level_flags  */
  YYSYMBOL_ws_level_number = 1193,         /* ws_level_number  */
  YYSYMBOL_ws_level_list_item = 1194,      /* ws_level_list_item  */
  YYSYMBOL_ws_level_list = 1195,           /* ws_level_list  */
  YYSYMBOL_ws_level_range = 1196,          /* ws_level_range  */
  YYSYMBOL_ws_level_list_or_range = 1197,  /* ws_level_list_or_range  */
  YYSYMBOL_opt_ws_levels = 1198,           /* opt_ws_levels  */
  YYSYMBOL_opt_primary = 1199,             /* opt_primary  */
  YYSYMBOL_references = 1200,              /* references  */
  YYSYMBOL_opt_ref_list = 1201,            /* opt_ref_list  */
  YYSYMBOL_ref_list = 1202,                /* ref_list  */
  YYSYMBOL_opt_match_clause = 1203,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1204,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1205,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1206,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1207,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1208,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1209,           /* keys_or_index  */
  YYSYMBOL_fulltext = 1210,                /* fulltext  */
  YYSYMBOL_spatial = 1211,                 /* spatial  */
  YYSYMBOL_normal_key_options = 1212,      /* normal_key_options  */
  YYSYMBOL_fulltext_key_options = 1213,    /* fulltext_key_options  */
  YYSYMBOL_spatial_key_options = 1214,     /* spatial_key_options  */
  YYSYMBOL_normal_key_opts = 1215,         /* normal_key_opts  */
  YYSYMBOL_spatial_key_opts = 1216,        /* spatial_key_opts  */
  YYSYMBOL_fulltext_key_opts = 1217,       /* fulltext_key_opts  */
  YYSYMBOL_opt_USING_key_algorithm = 1218, /* opt_USING_key_algorithm  */
  YYSYMBOL_opt_key_algorithm_clause = 1219, /* opt_key_algorithm_clause  */
  YYSYMBOL_key_using_alg = 1220,           /* key_using_alg  */
  YYSYMBOL_all_key_opt = 1221,             /* all_key_opt  */
  YYSYMBOL_normal_key_opt = 1222,          /* normal_key_opt  */
  YYSYMBOL_spatial_key_opt = 1223,         /* spatial_key_opt  */
  YYSYMBOL_fulltext_key_opt = 1224,        /* fulltext_key_opt  */
  YYSYMBOL_btree_or_rtree = 1225,          /* btree_or_rtree  */
  YYSYMBOL_ignorability = 1226,            /* ignorability  */
  YYSYMBOL_key_list = 1227,                /* key_list  */
  YYSYMBOL_opt_without_overlaps = 1228,    /* opt_without_overlaps  */
  YYSYMBOL_key_part = 1229,                /* key_part  */
  YYSYMBOL_opt_ident = 1230,               /* opt_ident  */
  YYSYMBOL_string_list = 1231,             /* string_list  */
  YYSYMBOL_alter = 1232,                   /* alter  */
  YYSYMBOL_1233_94 = 1233,                 /* $@94  */
  YYSYMBOL_1234_95 = 1234,                 /* $@95  */
  YYSYMBOL_1235_96 = 1235,                 /* $@96  */
  YYSYMBOL_1236_97 = 1236,                 /* $@97  */
  YYSYMBOL_1237_98 = 1237,                 /* $@98  */
  YYSYMBOL_1238_99 = 1238,                 /* $@99  */
  YYSYMBOL_1239_100 = 1239,                /* $@100  */
  YYSYMBOL_1240_101 = 1240,                /* $@101  */
  YYSYMBOL_1241_102 = 1241,                /* $@102  */
  YYSYMBOL_1242_103 = 1242,                /* $@103  */
  YYSYMBOL_1243_104 = 1243,                /* $@104  */
  YYSYMBOL_1244_105 = 1244,                /* $@105  */
  YYSYMBOL_1245_106 = 1245,                /* $@106  */
  YYSYMBOL_account_locking_option = 1246,  /* account_locking_option  */
  YYSYMBOL_opt_password_expire_option = 1247, /* opt_password_expire_option  */
  YYSYMBOL_opt_account_locking_and_opt_password_expiration = 1248, /* opt_account_locking_and_opt_password_expiration  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1249, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1250,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1251,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1252,          /* ident_or_empty  */
  YYSYMBOL_alter_commands = 1253,          /* alter_commands  */
  YYSYMBOL_1254_107 = 1254,                /* $@107  */
  YYSYMBOL_1255_108 = 1255,                /* $@108  */
  YYSYMBOL_1256_109 = 1256,                /* $@109  */
  YYSYMBOL_1257_110 = 1257,                /* $@110  */
  YYSYMBOL_remove_partitioning = 1258,     /* remove_partitioning  */
  YYSYMBOL_all_or_alt_part_name_list = 1259, /* all_or_alt_part_name_list  */
  YYSYMBOL_add_partition_rule = 1260,      /* add_partition_rule  */
  YYSYMBOL_1261_111 = 1261,                /* $@111  */
  YYSYMBOL_add_part_extra = 1262,          /* add_part_extra  */
  YYSYMBOL_reorg_partition_rule = 1263,    /* reorg_partition_rule  */
  YYSYMBOL_1264_112 = 1264,                /* $@112  */
  YYSYMBOL_reorg_parts_rule = 1265,        /* reorg_parts_rule  */
  YYSYMBOL_1266_113 = 1266,                /* $@113  */
  YYSYMBOL_alt_part_name_list = 1267,      /* alt_part_name_list  */
  YYSYMBOL_alt_part_name_item = 1268,      /* alt_part_name_item  */
  YYSYMBOL_alter_list = 1269,              /* alter_list  */
  YYSYMBOL_add_column = 1270,              /* add_column  */
  YYSYMBOL_alter_list_item = 1271,         /* alter_list_item  */
  YYSYMBOL_opt_without_validation = 1272,  /* opt_without_validation  */
  YYSYMBOL_opt_index_lock_algorithm = 1273, /* opt_index_lock_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1274,  /* alter_algorithm_option  */
  YYSYMBOL_alter_lock_option = 1275,       /* alter_lock_option  */
  YYSYMBOL_opt_column = 1276,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1277,              /* opt_ignore  */
  YYSYMBOL_alter_options = 1278,           /* alter_options  */
  YYSYMBOL_1279_114 = 1279,                /* $@114  */
  YYSYMBOL_alter_options_part2 = 1280,     /* alter_options_part2  */
  YYSYMBOL_alter_option_list = 1281,       /* alter_option_list  */
  YYSYMBOL_alter_option = 1282,            /* alter_option  */
  YYSYMBOL_opt_restrict = 1283,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1284,               /* opt_place  */
  YYSYMBOL_opt_to = 1285,                  /* opt_to  */
  YYSYMBOL_slave = 1286,                   /* slave  */
  YYSYMBOL_1287_115 = 1287,                /* $@115  */
  YYSYMBOL_1288_116 = 1288,                /* $@116  */
  YYSYMBOL_start = 1289,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1290, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1291, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1292, /* start_transaction_option  */
  YYSYMBOL_slave_thread_opts = 1293,       /* slave_thread_opts  */
  YYSYMBOL_1294_117 = 1294,                /* $@117  */
  YYSYMBOL_slave_thread_opt_list = 1295,   /* slave_thread_opt_list  */
  YYSYMBOL_slave_thread_opt = 1296,        /* slave_thread_opt  */
  YYSYMBOL_slave_until = 1297,             /* slave_until  */
  YYSYMBOL_slave_until_opts = 1298,        /* slave_until_opts  */
  YYSYMBOL_checksum = 1299,                /* checksum  */
  YYSYMBOL_1300_118 = 1300,                /* $@118  */
  YYSYMBOL_opt_checksum_type = 1301,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_or_view = 1302,    /* repair_table_or_view  */
  YYSYMBOL_1303_119 = 1303,                /* $@119  */
  YYSYMBOL_repair = 1304,                  /* repair  */
  YYSYMBOL_1305_120 = 1305,                /* $@120  */
  YYSYMBOL_opt_mi_repair_type = 1306,      /* opt_mi_repair_type  */
  YYSYMBOL_mi_repair_types = 1307,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1308,          /* mi_repair_type  */
  YYSYMBOL_opt_view_repair_type = 1309,    /* opt_view_repair_type  */
  YYSYMBOL_analyze = 1310,                 /* analyze  */
  YYSYMBOL_1311_121 = 1311,                /* $@121  */
  YYSYMBOL_analyze_table_list = 1312,      /* analyze_table_list  */
  YYSYMBOL_analyze_table_elem_spec = 1313, /* analyze_table_elem_spec  */
  YYSYMBOL_opt_persistent_stat_clause = 1314, /* opt_persistent_stat_clause  */
  YYSYMBOL_persistent_stat_spec = 1315,    /* persistent_stat_spec  */
  YYSYMBOL_persistent_column_stat_spec = 1316, /* persistent_column_stat_spec  */
  YYSYMBOL_1317_122 = 1317,                /* $@122  */
  YYSYMBOL_persistent_index_stat_spec = 1318, /* persistent_index_stat_spec  */
  YYSYMBOL_1319_123 = 1319,                /* $@123  */
  YYSYMBOL_table_column_list = 1320,       /* table_column_list  */
  YYSYMBOL_table_index_list = 1321,        /* table_index_list  */
  YYSYMBOL_table_index_name = 1322,        /* table_index_name  */
  YYSYMBOL_binlog_base64_event = 1323,     /* binlog_base64_event  */
  YYSYMBOL_check_view_or_table = 1324,     /* check_view_or_table  */
  YYSYMBOL_1325_124 = 1325,                /* $@124  */
  YYSYMBOL_check = 1326,                   /* check  */
  YYSYMBOL_1327_125 = 1327,                /* $@125  */
  YYSYMBOL_opt_mi_check_type = 1328,       /* opt_mi_check_type  */
  YYSYMBOL_mi_check_types = 1329,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1330,           /* mi_check_type  */
  YYSYMBOL_opt_view_check_type = 1331,     /* opt_view_check_type  */
  YYSYMBOL_optimize = 1332,                /* optimize  */
  YYSYMBOL_1333_126 = 1333,                /* $@126  */
  YYSYMBOL_opt_no_write_to_binlog = 1334,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1335,                  /* rename  */
  YYSYMBOL_1336_127 = 1336,                /* $@127  */
  YYSYMBOL_rename_list = 1337,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1338,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1339,          /* table_to_table  */
  YYSYMBOL_keycache = 1340,                /* keycache  */
  YYSYMBOL_1341_128 = 1341,                /* $@128  */
  YYSYMBOL_keycache_list_or_parts = 1342,  /* keycache_list_or_parts  */
  YYSYMBOL_keycache_list = 1343,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1344,      /* assign_to_keycache  */
  YYSYMBOL_assign_to_keycache_parts = 1345, /* assign_to_keycache_parts  */
  YYSYMBOL_key_cache_name = 1346,          /* key_cache_name  */
  YYSYMBOL_preload = 1347,                 /* preload  */
  YYSYMBOL_1348_129 = 1348,                /* $@129  */
  YYSYMBOL_preload_list_or_parts = 1349,   /* preload_list_or_parts  */
  YYSYMBOL_preload_list = 1350,            /* preload_list  */
  YYSYMBOL_preload_keys = 1351,            /* preload_keys  */
  YYSYMBOL_preload_keys_parts = 1352,      /* preload_keys_parts  */
  YYSYMBOL_adm_partition = 1353,           /* adm_partition  */
  YYSYMBOL_1354_130 = 1354,                /* $@130  */
  YYSYMBOL_cache_keys_spec = 1355,         /* cache_keys_spec  */
  YYSYMBOL_1356_131 = 1356,                /* $@131  */
  YYSYMBOL_cache_key_list_or_empty = 1357, /* cache_key_list_or_empty  */
  YYSYMBOL_opt_ignore_leaves = 1358,       /* opt_ignore_leaves  */
  YYSYMBOL_select = 1359,                  /* select  */
  YYSYMBOL_1360_132 = 1360,                /* $@132  */
  YYSYMBOL_1361_133 = 1361,                /* $@133  */
  YYSYMBOL_select_into = 1362,             /* select_into  */
  YYSYMBOL_1363_134 = 1363,                /* $@134  */
  YYSYMBOL_1364_135 = 1364,                /* $@135  */
  YYSYMBOL_simple_table = 1365,            /* simple_table  */
  YYSYMBOL_table_value_constructor = 1366, /* table_value_constructor  */
  YYSYMBOL_1367_136 = 1367,                /* $@136  */
  YYSYMBOL_query_specification_start = 1368, /* query_specification_start  */
  YYSYMBOL_1369_137 = 1369,                /* $@137  */
  YYSYMBOL_1370_138 = 1370,                /* $@138  */
  YYSYMBOL_query_specification = 1371,     /* query_specification  */
  YYSYMBOL_select_into_query_specification = 1372, /* select_into_query_specification  */
  YYSYMBOL_query_expression = 1373,        /* query_expression  */
  YYSYMBOL_query_expression_no_with_clause = 1374, /* query_expression_no_with_clause  */
  YYSYMBOL_query_expression_body_ext = 1375, /* query_expression_body_ext  */
  YYSYMBOL_1376_139 = 1376,                /* $@139  */
  YYSYMBOL_1377_140 = 1377,                /* $@140  */
  YYSYMBOL_query_expression_body_ext_parens = 1378, /* query_expression_body_ext_parens  */
  YYSYMBOL_query_expression_body = 1379,   /* query_expression_body  */
  YYSYMBOL_1380_141 = 1380,                /* $@141  */
  YYSYMBOL_query_primary = 1381,           /* query_primary  */
  YYSYMBOL_query_simple = 1382,            /* query_simple  */
  YYSYMBOL_subselect = 1383,               /* subselect  */
  YYSYMBOL_subquery = 1384,                /* subquery  */
  YYSYMBOL_opt_from_clause = 1385,         /* opt_from_clause  */
  YYSYMBOL_from_clause = 1386,             /* from_clause  */
  YYSYMBOL_table_reference_list = 1387,    /* table_reference_list  */
  YYSYMBOL_select_options = 1388,          /* select_options  */
  YYSYMBOL_opt_history_unit = 1389,        /* opt_history_unit  */
  YYSYMBOL_history_point = 1390,           /* history_point  */
  YYSYMBOL_for_portion_of_time_clause = 1391, /* for_portion_of_time_clause  */
  YYSYMBOL_opt_for_portion_of_time_clause = 1392, /* opt_for_portion_of_time_clause  */
  YYSYMBOL_opt_for_system_time_clause = 1393, /* opt_for_system_time_clause  */
  YYSYMBOL_system_time_expr = 1394,        /* system_time_expr  */
  YYSYMBOL_select_option_list = 1395,      /* select_option_list  */
  YYSYMBOL_select_option = 1396,           /* select_option  */
  YYSYMBOL_select_lock_type = 1397,        /* select_lock_type  */
  YYSYMBOL_opt_select_lock_type = 1398,    /* opt_select_lock_type  */
  YYSYMBOL_opt_lock_wait_timeout_new = 1399, /* opt_lock_wait_timeout_new  */
  YYSYMBOL_select_item_list = 1400,        /* select_item_list  */
  YYSYMBOL_select_item = 1401,             /* select_item  */
  YYSYMBOL_remember_tok_start = 1402,      /* remember_tok_start  */
  YYSYMBOL_remember_name = 1403,           /* remember_name  */
  YYSYMBOL_remember_end = 1404,            /* remember_end  */
  YYSYMBOL_remember_cpp_ptr = 1405,        /* remember_cpp_ptr  */
  YYSYMBOL_remember_start_opt = 1406,      /* remember_start_opt  */
  YYSYMBOL_remember_end_opt = 1407,        /* remember_end_opt  */
  YYSYMBOL_remember_lex = 1408,            /* remember_lex  */
  YYSYMBOL_select_alias = 1409,            /* select_alias  */
  YYSYMBOL_opt_default_time_precision = 1410, /* opt_default_time_precision  */
  YYSYMBOL_opt_time_precision = 1411,      /* opt_time_precision  */
  YYSYMBOL_optional_braces = 1412,         /* optional_braces  */
  YYSYMBOL_expr = 1413,                    /* expr  */
  YYSYMBOL_boolean_test = 1414,            /* boolean_test  */
  YYSYMBOL_predicate = 1415,               /* predicate  */
  YYSYMBOL_bit_expr = 1416,                /* bit_expr  */
  YYSYMBOL_or = 1417,                      /* or  */
  YYSYMBOL_and = 1418,                     /* and  */
  YYSYMBOL_not = 1419,                     /* not  */
  YYSYMBOL_not2 = 1420,                    /* not2  */
  YYSYMBOL_comp_op = 1421,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1422,              /* all_or_any  */
  YYSYMBOL_opt_dyncol_type = 1423,         /* opt_dyncol_type  */
  YYSYMBOL_dyncol_type = 1424,             /* dyncol_type  */
  YYSYMBOL_numeric_dyncol_type = 1425,     /* numeric_dyncol_type  */
  YYSYMBOL_temporal_dyncol_type = 1426,    /* temporal_dyncol_type  */
  YYSYMBOL_string_dyncol_type = 1427,      /* string_dyncol_type  */
  YYSYMBOL_dyncall_create_element = 1428,  /* dyncall_create_element  */
  YYSYMBOL_dyncall_create_list = 1429,     /* dyncall_create_list  */
  YYSYMBOL_plsql_cursor_attr = 1430,       /* plsql_cursor_attr  */
  YYSYMBOL_explicit_cursor_attr = 1431,    /* explicit_cursor_attr  */
  YYSYMBOL_trim_operands = 1432,           /* trim_operands  */
  YYSYMBOL_trim_operands_regular = 1433,   /* trim_operands_regular  */
  YYSYMBOL_trim_operands_special = 1434,   /* trim_operands_special  */
  YYSYMBOL_column_default_non_parenthesized_expr = 1435, /* column_default_non_parenthesized_expr  */
  YYSYMBOL_primary_expr = 1436,            /* primary_expr  */
  YYSYMBOL_string_factor_expr = 1437,      /* string_factor_expr  */
  YYSYMBOL_simple_expr = 1438,             /* simple_expr  */
  YYSYMBOL_mysql_concatenation_expr = 1439, /* mysql_concatenation_expr  */
  YYSYMBOL_function_call_keyword_timestamp = 1440, /* function_call_keyword_timestamp  */
  YYSYMBOL_function_call_keyword = 1441,   /* function_call_keyword  */
  YYSYMBOL_substring_operands = 1442,      /* substring_operands  */
  YYSYMBOL_substring_operands_regular = 1443, /* substring_operands_regular  */
  YYSYMBOL_substring_operands_special = 1444, /* substring_operands_special  */
  YYSYMBOL_function_call_nonkeyword = 1445, /* function_call_nonkeyword  */
  YYSYMBOL_function_call_conflict = 1446,  /* function_call_conflict  */
  YYSYMBOL_function_call_generic = 1447,   /* function_call_generic  */
  YYSYMBOL_1448_142 = 1448,                /* @142  */
  YYSYMBOL_fulltext_options = 1449,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1450, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1451,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1452,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1453,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1454,                /* udf_expr  */
  YYSYMBOL_sum_expr = 1455,                /* sum_expr  */
  YYSYMBOL_1456_143 = 1456,                /* $@143  */
  YYSYMBOL_1457_144 = 1457,                /* $@144  */
  YYSYMBOL_1458_145 = 1458,                /* $@145  */
  YYSYMBOL_1459_146 = 1459,                /* $@146  */
  YYSYMBOL_1460_147 = 1460,                /* $@147  */
  YYSYMBOL_window_func_expr = 1461,        /* window_func_expr  */
  YYSYMBOL_window_func = 1462,             /* window_func  */
  YYSYMBOL_simple_window_func = 1463,      /* simple_window_func  */
  YYSYMBOL_inverse_distribution_function = 1464, /* inverse_distribution_function  */
  YYSYMBOL_percentile_function = 1465,     /* percentile_function  */
  YYSYMBOL_1466_148 = 1466,                /* $@148  */
  YYSYMBOL_inverse_distribution_function_def = 1467, /* inverse_distribution_function_def  */
  YYSYMBOL_order_by_single_element_list = 1468, /* order_by_single_element_list  */
  YYSYMBOL_window_name = 1469,             /* window_name  */
  YYSYMBOL_variable = 1470,                /* variable  */
  YYSYMBOL_1471_149 = 1471,                /* $@149  */
  YYSYMBOL_variable_aux = 1472,            /* variable_aux  */
  YYSYMBOL_opt_distinct = 1473,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1474,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1475,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1476,             /* gorder_list  */
  YYSYMBOL_opt_glimit_clause = 1477,       /* opt_glimit_clause  */
  YYSYMBOL_glimit_clause = 1478,           /* glimit_clause  */
  YYSYMBOL_glimit_options = 1479,          /* glimit_options  */
  YYSYMBOL_in_sum_expr = 1480,             /* in_sum_expr  */
  YYSYMBOL_1481_150 = 1481,                /* $@150  */
  YYSYMBOL_cast_type = 1482,               /* cast_type  */
  YYSYMBOL_cast_type_numeric = 1483,       /* cast_type_numeric  */
  YYSYMBOL_cast_type_temporal = 1484,      /* cast_type_temporal  */
  YYSYMBOL_opt_expr_list = 1485,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1486,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1487,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1488,              /* ident_list  */
  YYSYMBOL_when_list = 1489,               /* when_list  */
  YYSYMBOL_when_list_opt_else = 1490,      /* when_list_opt_else  */
  YYSYMBOL_table_ref = 1491,               /* table_ref  */
  YYSYMBOL_json_text_literal = 1492,       /* json_text_literal  */
  YYSYMBOL_json_text_literal_or_num = 1493, /* json_text_literal_or_num  */
  YYSYMBOL_join_table_list = 1494,         /* join_table_list  */
  YYSYMBOL_json_table_columns_clause = 1495, /* json_table_columns_clause  */
  YYSYMBOL_json_table_columns_list = 1496, /* json_table_columns_list  */
  YYSYMBOL_json_table_column = 1497,       /* json_table_column  */
  YYSYMBOL_1498_151 = 1498,                /* $@151  */
  YYSYMBOL_1499_152 = 1499,                /* $@152  */
  YYSYMBOL_json_table_column_type = 1500,  /* json_table_column_type  */
  YYSYMBOL_json_table_field_type = 1501,   /* json_table_field_type  */
  YYSYMBOL_json_opt_on_empty_or_error = 1502, /* json_opt_on_empty_or_error  */
  YYSYMBOL_json_on_response = 1503,        /* json_on_response  */
  YYSYMBOL_json_on_error_response = 1504,  /* json_on_error_response  */
  YYSYMBOL_json_on_empty_response = 1505,  /* json_on_empty_response  */
  YYSYMBOL_table_function = 1506,          /* table_function  */
  YYSYMBOL_1507_153 = 1507,                /* $@153  */
  YYSYMBOL_1508_154 = 1508,                /* $@154  */
  YYSYMBOL_esc_table_ref = 1509,           /* esc_table_ref  */
  YYSYMBOL_derived_table_list = 1510,      /* derived_table_list  */
  YYSYMBOL_join_table = 1511,              /* join_table  */
  YYSYMBOL_1512_155 = 1512,                /* $@155  */
  YYSYMBOL_1513_156 = 1513,                /* $@156  */
  YYSYMBOL_1514_157 = 1514,                /* $@157  */
  YYSYMBOL_1515_158 = 1515,                /* $@158  */
  YYSYMBOL_1516_159 = 1516,                /* $@159  */
  YYSYMBOL_1517_160 = 1517,                /* $@160  */
  YYSYMBOL_inner_join = 1518,              /* inner_join  */
  YYSYMBOL_normal_join = 1519,             /* normal_join  */
  YYSYMBOL_opt_use_partition = 1520,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1521,           /* use_partition  */
  YYSYMBOL_table_factor = 1522,            /* table_factor  */
  YYSYMBOL_table_primary_ident_opt_parens = 1523, /* table_primary_ident_opt_parens  */
  YYSYMBOL_table_primary_derived_opt_parens = 1524, /* table_primary_derived_opt_parens  */
  YYSYMBOL_table_reference_list_parens = 1525, /* table_reference_list_parens  */
  YYSYMBOL_nested_table_reference_list = 1526, /* nested_table_reference_list  */
  YYSYMBOL_join_table_parens = 1527,       /* join_table_parens  */
  YYSYMBOL_table_primary_ident = 1528,     /* table_primary_ident  */
  YYSYMBOL_table_primary_derived = 1529,   /* table_primary_derived  */
  YYSYMBOL_opt_outer = 1530,               /* opt_outer  */
  YYSYMBOL_index_hint_clause = 1531,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1532,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1533,   /* index_hint_definition  */
  YYSYMBOL_1534_161 = 1534,                /* $@161  */
  YYSYMBOL_1535_162 = 1535,                /* $@162  */
  YYSYMBOL_index_hints_list = 1536,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1537,    /* opt_index_hints_list  */
  YYSYMBOL_1538_163 = 1538,                /* $@163  */
  YYSYMBOL_opt_key_definition = 1539,      /* opt_key_definition  */
  YYSYMBOL_1540_164 = 1540,                /* $@164  */
  YYSYMBOL_opt_key_usage_list = 1541,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1542,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1543,          /* key_usage_list  */
  YYSYMBOL_using_list = 1544,              /* using_list  */
  YYSYMBOL_interval = 1545,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1546,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1547,          /* date_time_type  */
  YYSYMBOL_table_alias = 1548,             /* table_alias  */
  YYSYMBOL_opt_table_alias_clause = 1549,  /* opt_table_alias_clause  */
  YYSYMBOL_table_alias_clause = 1550,      /* table_alias_clause  */
  YYSYMBOL_opt_all = 1551,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1552,        /* opt_where_clause  */
  YYSYMBOL_1553_165 = 1553,                /* $@165  */
  YYSYMBOL_opt_having_clause = 1554,       /* opt_having_clause  */
  YYSYMBOL_1555_166 = 1555,                /* $@166  */
  YYSYMBOL_opt_group_clause = 1556,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1557,              /* group_list  */
  YYSYMBOL_olap_opt = 1558,                /* olap_opt  */
  YYSYMBOL_opt_window_clause = 1559,       /* opt_window_clause  */
  YYSYMBOL_window_def_list = 1560,         /* window_def_list  */
  YYSYMBOL_window_def = 1561,              /* window_def  */
  YYSYMBOL_window_spec = 1562,             /* window_spec  */
  YYSYMBOL_1563_167 = 1563,                /* $@167  */
  YYSYMBOL_opt_window_ref = 1564,          /* opt_window_ref  */
  YYSYMBOL_opt_window_partition_clause = 1565, /* opt_window_partition_clause  */
  YYSYMBOL_opt_window_order_clause = 1566, /* opt_window_order_clause  */
  YYSYMBOL_opt_window_frame_clause = 1567, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_units = 1568,      /* window_frame_units  */
  YYSYMBOL_window_frame_extent = 1569,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1570,      /* window_frame_start  */
  YYSYMBOL_window_frame_bound = 1571,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1572, /* opt_window_frame_exclusion  */
  YYSYMBOL_alter_order_clause = 1573,      /* alter_order_clause  */
  YYSYMBOL_alter_order_list = 1574,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1575,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1576,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1577,            /* order_clause  */
  YYSYMBOL_1578_168 = 1578,                /* $@168  */
  YYSYMBOL_order_list = 1579,              /* order_list  */
  YYSYMBOL_order_dir = 1580,               /* order_dir  */
  YYSYMBOL_opt_limit_clause = 1581,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause = 1582,            /* limit_clause  */
  YYSYMBOL_fetch_first_clause = 1583,      /* fetch_first_clause  */
  YYSYMBOL_first_or_next = 1584,           /* first_or_next  */
  YYSYMBOL_row_or_rows = 1585,             /* row_or_rows  */
  YYSYMBOL_only_or_with_ties = 1586,       /* only_or_with_ties  */
  YYSYMBOL_opt_global_limit_clause = 1587, /* opt_global_limit_clause  */
  YYSYMBOL_limit_options = 1588,           /* limit_options  */
  YYSYMBOL_limit_option = 1589,            /* limit_option  */
  YYSYMBOL_limit_rows_option = 1590,       /* limit_rows_option  */
  YYSYMBOL_delete_limit_clause = 1591,     /* delete_limit_clause  */
  YYSYMBOL_order_limit_lock = 1592,        /* order_limit_lock  */
  YYSYMBOL_opt_order_limit_lock = 1593,    /* opt_order_limit_lock  */
  YYSYMBOL_query_expression_tail = 1594,   /* query_expression_tail  */
  YYSYMBOL_opt_query_expression_tail = 1595, /* opt_query_expression_tail  */
  YYSYMBOL_opt_procedure_or_into = 1596,   /* opt_procedure_or_into  */
  YYSYMBOL_order_or_limit = 1597,          /* order_or_limit  */
  YYSYMBOL_opt_plus = 1598,                /* opt_plus  */
  YYSYMBOL_int_num = 1599,                 /* int_num  */
  YYSYMBOL_ulong_num = 1600,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1601,          /* real_ulong_num  */
  YYSYMBOL_longlong_num = 1602,            /* longlong_num  */
  YYSYMBOL_ulonglong_num = 1603,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1604,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1605,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1606,                 /* dec_num  */
  YYSYMBOL_choice = 1607,                  /* choice  */
  YYSYMBOL_bool = 1608,                    /* bool  */
  YYSYMBOL_procedure_clause = 1609,        /* procedure_clause  */
  YYSYMBOL_1610_169 = 1610,                /* $@169  */
  YYSYMBOL_procedure_list = 1611,          /* procedure_list  */
  YYSYMBOL_procedure_list2 = 1612,         /* procedure_list2  */
  YYSYMBOL_procedure_item = 1613,          /* procedure_item  */
  YYSYMBOL_select_var_list_init = 1614,    /* select_var_list_init  */
  YYSYMBOL_1615_170 = 1615,                /* $@170  */
  YYSYMBOL_select_var_list = 1616,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1617,        /* select_var_ident  */
  YYSYMBOL_select_outvar = 1618,           /* select_outvar  */
  YYSYMBOL_into = 1619,                    /* into  */
  YYSYMBOL_into_destination = 1620,        /* into_destination  */
  YYSYMBOL_1621_171 = 1621,                /* $@171  */
  YYSYMBOL_1622_172 = 1622,                /* $@172  */
  YYSYMBOL_do = 1623,                      /* do  */
  YYSYMBOL_1624_173 = 1624,                /* $@173  */
  YYSYMBOL_drop = 1625,                    /* drop  */
  YYSYMBOL_1626_174 = 1626,                /* $@174  */
  YYSYMBOL_1627_175 = 1627,                /* $@175  */
  YYSYMBOL_1628_176 = 1628,                /* $@176  */
  YYSYMBOL_1629_177 = 1629,                /* $@177  */
  YYSYMBOL_table_list = 1630,              /* table_list  */
  YYSYMBOL_table_name = 1631,              /* table_name  */
  YYSYMBOL_table_name_with_opt_use_partition = 1632, /* table_name_with_opt_use_partition  */
  YYSYMBOL_table_alias_ref_list = 1633,    /* table_alias_ref_list  */
  YYSYMBOL_table_alias_ref = 1634,         /* table_alias_ref  */
  YYSYMBOL_opt_if_exists_table_element = 1635, /* opt_if_exists_table_element  */
  YYSYMBOL_opt_if_exists = 1636,           /* opt_if_exists  */
  YYSYMBOL_opt_temporary = 1637,           /* opt_temporary  */
  YYSYMBOL_insert = 1638,                  /* insert  */
  YYSYMBOL_1639_178 = 1639,                /* $@178  */
  YYSYMBOL_1640_179 = 1640,                /* $@179  */
  YYSYMBOL_replace = 1641,                 /* replace  */
  YYSYMBOL_1642_180 = 1642,                /* $@180  */
  YYSYMBOL_1643_181 = 1643,                /* $@181  */
  YYSYMBOL_insert_start = 1644,            /* insert_start  */
  YYSYMBOL_stmt_end = 1645,                /* stmt_end  */
  YYSYMBOL_insert_lock_option = 1646,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1647,     /* replace_lock_option  */
  YYSYMBOL_insert_replace_option = 1648,   /* insert_replace_option  */
  YYSYMBOL_opt_into = 1649,                /* opt_into  */
  YYSYMBOL_insert_table = 1650,            /* insert_table  */
  YYSYMBOL_1651_182 = 1651,                /* $@182  */
  YYSYMBOL_insert_field_spec = 1652,       /* insert_field_spec  */
  YYSYMBOL_1653_183 = 1653,                /* $@183  */
  YYSYMBOL_insert_field_list = 1654,       /* insert_field_list  */
  YYSYMBOL_opt_fields = 1655,              /* opt_fields  */
  YYSYMBOL_fields = 1656,                  /* fields  */
  YYSYMBOL_insert_values = 1657,           /* insert_values  */
  YYSYMBOL_values_list = 1658,             /* values_list  */
  YYSYMBOL_ident_eq_list = 1659,           /* ident_eq_list  */
  YYSYMBOL_ident_eq_value = 1660,          /* ident_eq_value  */
  YYSYMBOL_equal = 1661,                   /* equal  */
  YYSYMBOL_opt_equal = 1662,               /* opt_equal  */
  YYSYMBOL_opt_with = 1663,                /* opt_with  */
  YYSYMBOL_opt_by = 1664,                  /* opt_by  */
  YYSYMBOL_no_braces = 1665,               /* no_braces  */
  YYSYMBOL_1666_184 = 1666,                /* $@184  */
  YYSYMBOL_no_braces_with_names = 1667,    /* no_braces_with_names  */
  YYSYMBOL_1668_185 = 1668,                /* $@185  */
  YYSYMBOL_opt_values = 1669,              /* opt_values  */
  YYSYMBOL_opt_values_with_names = 1670,   /* opt_values_with_names  */
  YYSYMBOL_values = 1671,                  /* values  */
  YYSYMBOL_values_with_names = 1672,       /* values_with_names  */
  YYSYMBOL_expr_or_ignore = 1673,          /* expr_or_ignore  */
  YYSYMBOL_expr_or_ignore_or_default = 1674, /* expr_or_ignore_or_default  */
  YYSYMBOL_opt_insert_update = 1675,       /* opt_insert_update  */
  YYSYMBOL_1676_186 = 1676,                /* $@186  */
  YYSYMBOL_1677_187 = 1677,                /* $@187  */
  YYSYMBOL_update_table_list = 1678,       /* update_table_list  */
  YYSYMBOL_update = 1679,                  /* update  */
  YYSYMBOL_1680_188 = 1680,                /* $@188  */
  YYSYMBOL_1681_189 = 1681,                /* $@189  */
  YYSYMBOL_1682_190 = 1682,                /* $@190  */
  YYSYMBOL_update_list = 1683,             /* update_list  */
  YYSYMBOL_update_elem = 1684,             /* update_elem  */
  YYSYMBOL_insert_update_list = 1685,      /* insert_update_list  */
  YYSYMBOL_insert_update_elem = 1686,      /* insert_update_elem  */
  YYSYMBOL_opt_low_priority = 1687,        /* opt_low_priority  */
  YYSYMBOL_delete = 1688,                  /* delete  */
  YYSYMBOL_1689_191 = 1689,                /* $@191  */
  YYSYMBOL_opt_delete_system_time = 1690,  /* opt_delete_system_time  */
  YYSYMBOL_delete_part2 = 1691,            /* delete_part2  */
  YYSYMBOL_1692_192 = 1692,                /* $@192  */
  YYSYMBOL_delete_single_table = 1693,     /* delete_single_table  */
  YYSYMBOL_delete_single_table_for_period = 1694, /* delete_single_table_for_period  */
  YYSYMBOL_single_multi = 1695,            /* single_multi  */
  YYSYMBOL_1696_193 = 1696,                /* $@193  */
  YYSYMBOL_1697_194 = 1697,                /* $@194  */
  YYSYMBOL_1698_195 = 1698,                /* $@195  */
  YYSYMBOL_1699_196 = 1699,                /* $@196  */
  YYSYMBOL_1700_197 = 1700,                /* $@197  */
  YYSYMBOL_opt_returning = 1701,           /* opt_returning  */
  YYSYMBOL_1702_198 = 1702,                /* $@198  */
  YYSYMBOL_opt_wild = 1703,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1704,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1705,       /* opt_delete_option  */
  YYSYMBOL_truncate = 1706,                /* truncate  */
  YYSYMBOL_1707_199 = 1707,                /* $@199  */
  YYSYMBOL_1708_200 = 1708,                /* $@200  */
  YYSYMBOL_opt_table_sym = 1709,           /* opt_table_sym  */
  YYSYMBOL_opt_profile_defs = 1710,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1711,            /* profile_defs  */
  YYSYMBOL_profile_def = 1712,             /* profile_def  */
  YYSYMBOL_opt_profile_args = 1713,        /* opt_profile_args  */
  YYSYMBOL_show = 1714,                    /* show  */
  YYSYMBOL_1715_201 = 1715,                /* $@201  */
  YYSYMBOL_show_param = 1716,              /* show_param  */
  YYSYMBOL_1717_202 = 1717,                /* $@202  */
  YYSYMBOL_1718_203 = 1718,                /* $@203  */
  YYSYMBOL_show_engine_param = 1719,       /* show_engine_param  */
  YYSYMBOL_master_or_binary = 1720,        /* master_or_binary  */
  YYSYMBOL_opt_storage = 1721,             /* opt_storage  */
  YYSYMBOL_opt_db = 1722,                  /* opt_db  */
  YYSYMBOL_opt_full = 1723,                /* opt_full  */
  YYSYMBOL_from_or_in = 1724,              /* from_or_in  */
  YYSYMBOL_binlog_in = 1725,               /* binlog_in  */
  YYSYMBOL_binlog_from = 1726,             /* binlog_from  */
  YYSYMBOL_wild_and_where = 1727,          /* wild_and_where  */
  YYSYMBOL_describe = 1728,                /* describe  */
  YYSYMBOL_1729_204 = 1729,                /* $@204  */
  YYSYMBOL_1730_205 = 1730,                /* $@205  */
  YYSYMBOL_explainable_command = 1731,     /* explainable_command  */
  YYSYMBOL_describe_command = 1732,        /* describe_command  */
  YYSYMBOL_analyze_stmt_command = 1733,    /* analyze_stmt_command  */
  YYSYMBOL_opt_extended_describe = 1734,   /* opt_extended_describe  */
  YYSYMBOL_opt_format_json = 1735,         /* opt_format_json  */
  YYSYMBOL_opt_describe_column = 1736,     /* opt_describe_column  */
  YYSYMBOL_explain_for_connection = 1737,  /* explain_for_connection  */
  YYSYMBOL_flush = 1738,                   /* flush  */
  YYSYMBOL_1739_206 = 1739,                /* $@206  */
  YYSYMBOL_flush_options = 1740,           /* flush_options  */
  YYSYMBOL_1741_207 = 1741,                /* $@207  */
  YYSYMBOL_opt_flush_lock = 1742,          /* opt_flush_lock  */
  YYSYMBOL_flush_lock = 1743,              /* flush_lock  */
  YYSYMBOL_1744_208 = 1744,                /* $@208  */
  YYSYMBOL_flush_options_list = 1745,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1746,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1747,          /* opt_table_list  */
  YYSYMBOL_backup = 1748,                  /* backup  */
  YYSYMBOL_backup_statements = 1749,       /* backup_statements  */
  YYSYMBOL_1750_209 = 1750,                /* $@209  */
  YYSYMBOL_opt_delete_gtid_domain = 1751,  /* opt_delete_gtid_domain  */
  YYSYMBOL_delete_domain_id_list = 1752,   /* delete_domain_id_list  */
  YYSYMBOL_delete_domain_id = 1753,        /* delete_domain_id  */
  YYSYMBOL_optional_flush_tables_arguments = 1754, /* optional_flush_tables_arguments  */
  YYSYMBOL_reset = 1755,                   /* reset  */
  YYSYMBOL_1756_210 = 1756,                /* $@210  */
  YYSYMBOL_reset_options = 1757,           /* reset_options  */
  YYSYMBOL_reset_option = 1758,            /* reset_option  */
  YYSYMBOL_1759_211 = 1759,                /* $@211  */
  YYSYMBOL_1760_212 = 1760,                /* $@212  */
  YYSYMBOL_slave_reset_options = 1761,     /* slave_reset_options  */
  YYSYMBOL_master_reset_options = 1762,    /* master_reset_options  */
  YYSYMBOL_purge = 1763,                   /* purge  */
  YYSYMBOL_1764_213 = 1764,                /* $@213  */
  YYSYMBOL_kill = 1765,                    /* kill  */
  YYSYMBOL_1766_214 = 1766,                /* $@214  */
  YYSYMBOL_kill_type = 1767,               /* kill_type  */
  YYSYMBOL_kill_option = 1768,             /* kill_option  */
  YYSYMBOL_opt_connection = 1769,          /* opt_connection  */
  YYSYMBOL_kill_expr = 1770,               /* kill_expr  */
  YYSYMBOL_shutdown = 1771,                /* shutdown  */
  YYSYMBOL_1772_215 = 1772,                /* $@215  */
  YYSYMBOL_shutdown_option = 1773,         /* shutdown_option  */
  YYSYMBOL_use = 1774,                     /* use  */
  YYSYMBOL_load = 1775,                    /* load  */
  YYSYMBOL_1776_216 = 1776,                /* $@216  */
  YYSYMBOL_1777_217 = 1777,                /* $@217  */
  YYSYMBOL_1778_218 = 1778,                /* $@218  */
  YYSYMBOL_1779_219 = 1779,                /* $@219  */
  YYSYMBOL_data_or_xml = 1780,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1781,               /* opt_local  */
  YYSYMBOL_load_data_lock = 1782,          /* load_data_lock  */
  YYSYMBOL_opt_duplicate = 1783,           /* opt_duplicate  */
  YYSYMBOL_opt_field_term = 1784,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1785,         /* field_term_list  */
  YYSYMBOL_field_term = 1786,              /* field_term  */
  YYSYMBOL_opt_line_term = 1787,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1788,          /* line_term_list  */
  YYSYMBOL_line_term = 1789,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1790, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1791,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1792,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1793,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1794,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1795,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1796,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1797,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1798,      /* load_data_set_elem  */
  YYSYMBOL_text_literal = 1799,            /* text_literal  */
  YYSYMBOL_text_string = 1800,             /* text_string  */
  YYSYMBOL_hex_or_bin_String = 1801,       /* hex_or_bin_String  */
  YYSYMBOL_param_marker = 1802,            /* param_marker  */
  YYSYMBOL_signed_literal = 1803,          /* signed_literal  */
  YYSYMBOL_literal = 1804,                 /* literal  */
  YYSYMBOL_NUM_literal = 1805,             /* NUM_literal  */
  YYSYMBOL_temporal_literal = 1806,        /* temporal_literal  */
  YYSYMBOL_with_clause = 1807,             /* with_clause  */
  YYSYMBOL_1808_220 = 1808,                /* $@220  */
  YYSYMBOL_opt_recursive = 1809,           /* opt_recursive  */
  YYSYMBOL_with_list = 1810,               /* with_list  */
  YYSYMBOL_with_list_element = 1811,       /* with_list_element  */
  YYSYMBOL_opt_cycle = 1812,               /* opt_cycle  */
  YYSYMBOL_1813_221 = 1813,                /* $@221  */
  YYSYMBOL_opt_with_column_list = 1814,    /* opt_with_column_list  */
  YYSYMBOL_with_column_list = 1815,        /* with_column_list  */
  YYSYMBOL_ident_sys_alloc = 1816,         /* ident_sys_alloc  */
  YYSYMBOL_comma_separated_ident_list = 1817, /* comma_separated_ident_list  */
  YYSYMBOL_with_element_head = 1818,       /* with_element_head  */
  YYSYMBOL_insert_ident = 1819,            /* insert_ident  */
  YYSYMBOL_table_wild = 1820,              /* table_wild  */
  YYSYMBOL_select_sublist_qualified_asterisk = 1821, /* select_sublist_qualified_asterisk  */
  YYSYMBOL_order_ident = 1822,             /* order_ident  */
  YYSYMBOL_simple_ident = 1823,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1824,    /* simple_ident_nospvar  */
  YYSYMBOL_field_ident = 1825,             /* field_ident  */
  YYSYMBOL_table_ident = 1826,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1827,    /* table_ident_opt_wild  */
  YYSYMBOL_table_ident_nodb = 1828,        /* table_ident_nodb  */
  YYSYMBOL_IDENT_cli = 1829,               /* IDENT_cli  */
  YYSYMBOL_ident_cli = 1830,               /* ident_cli  */
  YYSYMBOL_IDENT_sys = 1831,               /* IDENT_sys  */
  YYSYMBOL_ident_cli_func = 1832,          /* ident_cli_func  */
  YYSYMBOL_ident_func = 1833,              /* ident_func  */
  YYSYMBOL_TEXT_STRING_sys = 1834,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1835,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1836,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_ident_table_alias = 1837,       /* ident_table_alias  */
  YYSYMBOL_ident_cli_set_usual_case = 1838, /* ident_cli_set_usual_case  */
  YYSYMBOL_ident_sysvar_name = 1839,       /* ident_sysvar_name  */
  YYSYMBOL_ident = 1840,                   /* ident  */
  YYSYMBOL_label_ident = 1841,             /* label_ident  */
  YYSYMBOL_ident_or_text = 1842,           /* ident_or_text  */
  YYSYMBOL_user_maybe_role = 1843,         /* user_maybe_role  */
  YYSYMBOL_user_or_role = 1844,            /* user_or_role  */
  YYSYMBOL_user = 1845,                    /* user  */
  YYSYMBOL_keyword_table_alias = 1846,     /* keyword_table_alias  */
  YYSYMBOL_keyword_ident = 1847,           /* keyword_ident  */
  YYSYMBOL_keyword_sysvar_name = 1848,     /* keyword_sysvar_name  */
  YYSYMBOL_keyword_set_usual_case = 1849,  /* keyword_set_usual_case  */
  YYSYMBOL_non_reserved_keyword_udt = 1850, /* non_reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_var_not_label = 1851, /* keyword_sp_var_not_label  */
  YYSYMBOL_keyword_sp_head = 1852,         /* keyword_sp_head  */
  YYSYMBOL_keyword_verb_clause = 1853,     /* keyword_verb_clause  */
  YYSYMBOL_keyword_set_special_case = 1854, /* keyword_set_special_case  */
  YYSYMBOL_keyword_sysvar_type = 1855,     /* keyword_sysvar_type  */
  YYSYMBOL_keyword_data_type = 1856,       /* keyword_data_type  */
  YYSYMBOL_keyword_cast_type = 1857,       /* keyword_cast_type  */
  YYSYMBOL_keyword_func_sp_var_and_label = 1858, /* keyword_func_sp_var_and_label  */
  YYSYMBOL_keyword_func_sp_var_not_label = 1859, /* keyword_func_sp_var_not_label  */
  YYSYMBOL_keyword_sp_var_and_label = 1860, /* keyword_sp_var_and_label  */
  YYSYMBOL_reserved_keyword_udt_not_param_type = 1861, /* reserved_keyword_udt_not_param_type  */
  YYSYMBOL_set = 1862,                     /* set  */
  YYSYMBOL_1863_222 = 1863,                /* $@222  */
  YYSYMBOL_set_param = 1864,               /* set_param  */
  YYSYMBOL_1865_223 = 1865,                /* $@223  */
  YYSYMBOL_1866_224 = 1866,                /* $@224  */
  YYSYMBOL_1867_225 = 1867,                /* $@225  */
  YYSYMBOL_set_stmt_option_list = 1868,    /* set_stmt_option_list  */
  YYSYMBOL_start_option_value_list_following_option_type = 1869, /* start_option_value_list_following_option_type  */
  YYSYMBOL_1870_226 = 1870,                /* $@226  */
  YYSYMBOL_option_value_list = 1871,       /* option_value_list  */
  YYSYMBOL_option_value = 1872,            /* option_value  */
  YYSYMBOL_1873_227 = 1873,                /* $@227  */
  YYSYMBOL_option_type = 1874,             /* option_type  */
  YYSYMBOL_opt_var_type = 1875,            /* opt_var_type  */
  YYSYMBOL_opt_var_ident_type = 1876,      /* opt_var_ident_type  */
  YYSYMBOL_set_stmt_option = 1877,         /* set_stmt_option  */
  YYSYMBOL_1878_228 = 1878,                /* $@228  */
  YYSYMBOL_1879_229 = 1879,                /* $@229  */
  YYSYMBOL_1880_230 = 1880,                /* $@230  */
  YYSYMBOL_option_value_following_option_type = 1881, /* option_value_following_option_type  */
  YYSYMBOL_1882_231 = 1882,                /* $@231  */
  YYSYMBOL_1883_232 = 1883,                /* $@232  */
  YYSYMBOL_1884_233 = 1884,                /* $@233  */
  YYSYMBOL_option_value_no_option_type = 1885, /* option_value_no_option_type  */
  YYSYMBOL_1886_234 = 1886,                /* $@234  */
  YYSYMBOL_1887_235 = 1887,                /* $@235  */
  YYSYMBOL_1888_236 = 1888,                /* $@236  */
  YYSYMBOL_1889_237 = 1889,                /* $@237  */
  YYSYMBOL_1890_238 = 1890,                /* $@238  */
  YYSYMBOL_1891_239 = 1891,                /* $@239  */
  YYSYMBOL_1892_240 = 1892,                /* $@240  */
  YYSYMBOL_1893_241 = 1893,                /* $@241  */
  YYSYMBOL_1894_242 = 1894,                /* $@242  */
  YYSYMBOL_1895_243 = 1895,                /* $@243  */
  YYSYMBOL_transaction_characteristics = 1896, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1897, /* transaction_access_mode  */
  YYSYMBOL_isolation_level = 1898,         /* isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1899, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1900,         /* isolation_types  */
  YYSYMBOL_text_or_password = 1901,        /* text_or_password  */
  YYSYMBOL_set_expr_or_default = 1902,     /* set_expr_or_default  */
  YYSYMBOL_set_expr_misc = 1903,           /* set_expr_misc  */
  YYSYMBOL_lock = 1904,                    /* lock  */
  YYSYMBOL_1905_244 = 1905,                /* $@244  */
  YYSYMBOL_opt_lock_wait_timeout = 1906,   /* opt_lock_wait_timeout  */
  YYSYMBOL_table_or_tables = 1907,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1908,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1909,              /* table_lock  */
  YYSYMBOL_lock_option = 1910,             /* lock_option  */
  YYSYMBOL_unlock = 1911,                  /* unlock  */
  YYSYMBOL_1912_245 = 1912,                /* $@245  */
  YYSYMBOL_handler = 1913,                 /* handler  */
  YYSYMBOL_1914_246 = 1914,                /* $@246  */
  YYSYMBOL_handler_tail = 1915,            /* handler_tail  */
  YYSYMBOL_1916_247 = 1916,                /* $@247  */
  YYSYMBOL_handler_read_or_scan = 1917,    /* handler_read_or_scan  */
  YYSYMBOL_handler_scan_function = 1918,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1919,   /* handler_rkey_function  */
  YYSYMBOL_1920_248 = 1920,                /* $@248  */
  YYSYMBOL_handler_rkey_mode = 1921,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1922,                  /* revoke  */
  YYSYMBOL_revoke_command = 1923,          /* revoke_command  */
  YYSYMBOL_admin_option_for_role = 1924,   /* admin_option_for_role  */
  YYSYMBOL_grant = 1925,                   /* grant  */
  YYSYMBOL_grant_command = 1926,           /* grant_command  */
  YYSYMBOL_opt_with_admin = 1927,          /* opt_with_admin  */
  YYSYMBOL_opt_with_admin_option = 1928,   /* opt_with_admin_option  */
  YYSYMBOL_role_list = 1929,               /* role_list  */
  YYSYMBOL_current_role = 1930,            /* current_role  */
  YYSYMBOL_role_name = 1931,               /* role_name  */
  YYSYMBOL_grant_role = 1932,              /* grant_role  */
  YYSYMBOL_opt_table = 1933,               /* opt_table  */
  YYSYMBOL_grant_privileges = 1934,        /* grant_privileges  */
  YYSYMBOL_opt_privileges = 1935,          /* opt_privileges  */
  YYSYMBOL_object_privilege_list = 1936,   /* object_privilege_list  */
  YYSYMBOL_column_list_privilege = 1937,   /* column_list_privilege  */
  YYSYMBOL_column_privilege = 1938,        /* column_privilege  */
  YYSYMBOL_object_privilege = 1939,        /* object_privilege  */
  YYSYMBOL_opt_and = 1940,                 /* opt_and  */
  YYSYMBOL_require_list = 1941,            /* require_list  */
  YYSYMBOL_require_list_element = 1942,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1943,             /* grant_ident  */
  YYSYMBOL_user_list = 1944,               /* user_list  */
  YYSYMBOL_grant_list = 1945,              /* grant_list  */
  YYSYMBOL_user_and_role_list = 1946,      /* user_and_role_list  */
  YYSYMBOL_via_or_with = 1947,             /* via_or_with  */
  YYSYMBOL_using_or_as = 1948,             /* using_or_as  */
  YYSYMBOL_grant_user = 1949,              /* grant_user  */
  YYSYMBOL_auth_expression = 1950,         /* auth_expression  */
  YYSYMBOL_auth_token = 1951,              /* auth_token  */
  YYSYMBOL_opt_auth_str = 1952,            /* opt_auth_str  */
  YYSYMBOL_opt_require_clause = 1953,      /* opt_require_clause  */
  YYSYMBOL_resource_option = 1954,         /* resource_option  */
  YYSYMBOL_resource_option_list = 1955,    /* resource_option_list  */
  YYSYMBOL_opt_resource_options = 1956,    /* opt_resource_options  */
  YYSYMBOL_opt_grant_options = 1957,       /* opt_grant_options  */
  YYSYMBOL_opt_grant_option = 1958,        /* opt_grant_option  */
  YYSYMBOL_grant_option_list = 1959,       /* grant_option_list  */
  YYSYMBOL_grant_option = 1960,            /* grant_option  */
  YYSYMBOL_begin_stmt_mariadb = 1961,      /* begin_stmt_mariadb  */
  YYSYMBOL_1962_249 = 1962,                /* $@249  */
  YYSYMBOL_compound_statement = 1963,      /* compound_statement  */
  YYSYMBOL_opt_not = 1964,                 /* opt_not  */
  YYSYMBOL_opt_work = 1965,                /* opt_work  */
  YYSYMBOL_opt_chain = 1966,               /* opt_chain  */
  YYSYMBOL_opt_release = 1967,             /* opt_release  */
  YYSYMBOL_commit = 1968,                  /* commit  */
  YYSYMBOL_rollback = 1969,                /* rollback  */
  YYSYMBOL_savepoint = 1970,               /* savepoint  */
  YYSYMBOL_release = 1971,                 /* release  */
  YYSYMBOL_unit_type_decl = 1972,          /* unit_type_decl  */
  YYSYMBOL_union_option = 1973,            /* union_option  */
  YYSYMBOL_query_expression_option = 1974, /* query_expression_option  */
  YYSYMBOL_definer_opt = 1975,             /* definer_opt  */
  YYSYMBOL_no_definer = 1976,              /* no_definer  */
  YYSYMBOL_definer = 1977,                 /* definer  */
  YYSYMBOL_view_algorithm = 1978,          /* view_algorithm  */
  YYSYMBOL_opt_view_suid = 1979,           /* opt_view_suid  */
  YYSYMBOL_view_suid = 1980,               /* view_suid  */
  YYSYMBOL_view_list_opt = 1981,           /* view_list_opt  */
  YYSYMBOL_view_list = 1982,               /* view_list  */
  YYSYMBOL_view_select = 1983,             /* view_select  */
  YYSYMBOL_1984_250 = 1984,                /* $@250  */
  YYSYMBOL_view_check_option = 1985,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 1986,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 1987, /* trigger_follows_precedes_clause  */
  YYSYMBOL_trigger_tail = 1988,            /* trigger_tail  */
  YYSYMBOL_1989_251 = 1989,                /* $@251  */
  YYSYMBOL_1990_252 = 1990,                /* $@252  */
  YYSYMBOL_1991_253 = 1991,                /* $@253  */
  YYSYMBOL_1992_254 = 1992,                /* $@254  */
  YYSYMBOL_1993_255 = 1993,                /* $@255  */
  YYSYMBOL_sf_return_type = 1994,          /* sf_return_type  */
  YYSYMBOL_1995_256 = 1995,                /* $@256  */
  YYSYMBOL_create_package_chistic = 1996,  /* create_package_chistic  */
  YYSYMBOL_create_package_chistics = 1997, /* create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics = 1998, /* opt_create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics_init = 1999, /* opt_create_package_chistics_init  */
  YYSYMBOL_2000_257 = 2000,                /* $@257  */
  YYSYMBOL_xa = 2001,                      /* xa  */
  YYSYMBOL_opt_format_xid = 2002,          /* opt_format_xid  */
  YYSYMBOL_xid = 2003,                     /* xid  */
  YYSYMBOL_begin_or_start = 2004,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 2005,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 2006,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 2007,             /* opt_suspend  */
  YYSYMBOL_2008_258 = 2008,                /* $@258  */
  YYSYMBOL_opt_migrate = 2009,             /* opt_migrate  */
  YYSYMBOL_install = 2010,                 /* install  */
  YYSYMBOL_uninstall = 2011,               /* uninstall  */
  YYSYMBOL_keep_gcc_happy = 2012,          /* keep_gcc_happy  */
  YYSYMBOL__empty = 2013,                  /* _empty  */
  YYSYMBOL_statement = 2014,               /* statement  */
  YYSYMBOL_sp_statement = 2015,            /* sp_statement  */
  YYSYMBOL_2016_259 = 2016,                /* $@259  */
  YYSYMBOL_2017_260 = 2017,                /* $@260  */
  YYSYMBOL_2018_261 = 2018,                /* $@261  */
  YYSYMBOL_sp_if_then_statements = 2019,   /* sp_if_then_statements  */
  YYSYMBOL_sp_case_then_statements = 2020, /* sp_case_then_statements  */
  YYSYMBOL_sp_parameters = 2021,           /* sp_parameters  */
  YYSYMBOL_sf_parameters = 2022,           /* sf_parameters  */
  YYSYMBOL_sf_returned_type_clause = 2023, /* sf_returned_type_clause  */
  YYSYMBOL_package_implementation_item_declaration = 2024, /* package_implementation_item_declaration  */
  YYSYMBOL_sp_package_function_body = 2025, /* sp_package_function_body  */
  YYSYMBOL_sp_package_procedure_body = 2026, /* sp_package_procedure_body  */
  YYSYMBOL_reserved_keyword_udt = 2027,    /* reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_block_section = 2028, /* keyword_sp_block_section  */
  YYSYMBOL_keyword_label = 2029,           /* keyword_label  */
  YYSYMBOL_keyword_sp_decl = 2030,         /* keyword_sp_decl  */
  YYSYMBOL_opt_truncate_table_storage_clause = 2031, /* opt_truncate_table_storage_clause  */
  YYSYMBOL_ident_for_loop_index = 2032,    /* ident_for_loop_index  */
  YYSYMBOL_row_field_name = 2033,          /* row_field_name  */
  YYSYMBOL_while_body = 2034,              /* while_body  */
  YYSYMBOL_2035_262 = 2035,                /* $@262  */
  YYSYMBOL_for_loop_statements = 2036,     /* for_loop_statements  */
  YYSYMBOL_sp_control_label = 2037,        /* sp_control_label  */
  YYSYMBOL_sp_block_label = 2038,          /* sp_block_label  */
  YYSYMBOL_sp_opt_default = 2039,          /* sp_opt_default  */
  YYSYMBOL_sp_opt_inout = 2040,            /* sp_opt_inout  */
  YYSYMBOL_sp_proc_stmts1_implicit_block = 2041, /* sp_proc_stmts1_implicit_block  */
  YYSYMBOL_2042_263 = 2042,                /* $@263  */
  YYSYMBOL_keyword_directly_assignable = 2043, /* keyword_directly_assignable  */
  YYSYMBOL_ident_directly_assignable = 2044, /* ident_directly_assignable  */
  YYSYMBOL_ident_cli_directly_assignable = 2045, /* ident_cli_directly_assignable  */
  YYSYMBOL_set_assign = 2046,              /* set_assign  */
  YYSYMBOL_2047_264 = 2047,                /* $@264  */
  YYSYMBOL_2048_265 = 2048,                /* $@265  */
  YYSYMBOL_2049_266 = 2049,                /* $@266  */
  YYSYMBOL_labels_declaration_oracle = 2050, /* labels_declaration_oracle  */
  YYSYMBOL_label_declaration_oracle = 2051, /* label_declaration_oracle  */
  YYSYMBOL_opt_exception_clause = 2052,    /* opt_exception_clause  */
  YYSYMBOL_exception_handlers = 2053,      /* exception_handlers  */
  YYSYMBOL_exception_handler = 2054,       /* exception_handler  */
  YYSYMBOL_2055_267 = 2055,                /* $@267  */
  YYSYMBOL_sp_no_param = 2056,             /* sp_no_param  */
  YYSYMBOL_opt_sp_parenthesized_fdparam_list = 2057, /* opt_sp_parenthesized_fdparam_list  */
  YYSYMBOL_opt_sp_parenthesized_pdparam_list = 2058, /* opt_sp_parenthesized_pdparam_list  */
  YYSYMBOL_opt_trailing_sp_name = 2059,    /* opt_trailing_sp_name  */
  YYSYMBOL_opt_package_routine_end_name = 2060, /* opt_package_routine_end_name  */
  YYSYMBOL_sp_tail_is = 2061,              /* sp_tail_is  */
  YYSYMBOL_sp_instr_addr = 2062,           /* sp_instr_addr  */
  YYSYMBOL_sp_body = 2063,                 /* sp_body  */
  YYSYMBOL_2064_268 = 2064,                /* $@268  */
  YYSYMBOL_2065_269 = 2065,                /* $@269  */
  YYSYMBOL_2066_270 = 2066,                /* $@270  */
  YYSYMBOL_package_implementation_declare_section_list = 2067, /* package_implementation_declare_section_list  */
  YYSYMBOL_package_implementation_declare_section = 2068, /* package_implementation_declare_section  */
  YYSYMBOL_package_implementation_executable_section = 2069, /* package_implementation_executable_section  */
  YYSYMBOL_package_implementation_declare_section_list1 = 2070, /* package_implementation_declare_section_list1  */
  YYSYMBOL_package_implementation_declare_section_list2 = 2071, /* package_implementation_declare_section_list2  */
  YYSYMBOL_package_specification_function = 2072, /* package_specification_function  */
  YYSYMBOL_2073_271 = 2073,                /* $@271  */
  YYSYMBOL_package_specification_procedure = 2074, /* package_specification_procedure  */
  YYSYMBOL_2075_272 = 2075,                /* $@272  */
  YYSYMBOL_package_implementation_routine_definition = 2076, /* package_implementation_routine_definition  */
  YYSYMBOL_package_implementation_function_body = 2077, /* package_implementation_function_body  */
  YYSYMBOL_2078_273 = 2078,                /* $@273  */
  YYSYMBOL_package_implementation_procedure_body = 2079, /* package_implementation_procedure_body  */
  YYSYMBOL_2080_274 = 2080,                /* $@274  */
  YYSYMBOL_opt_package_specification_element_list = 2081, /* opt_package_specification_element_list  */
  YYSYMBOL_package_specification_element_list = 2082, /* package_specification_element_list  */
  YYSYMBOL_package_specification_element = 2083, /* package_specification_element  */
  YYSYMBOL_sp_decl_variable_list_anchored = 2084, /* sp_decl_variable_list_anchored  */
  YYSYMBOL_sp_param_name_and_mode = 2085,  /* sp_param_name_and_mode  */
  YYSYMBOL_sp_param = 2086,                /* sp_param  */
  YYSYMBOL_sp_param_anchored = 2087,       /* sp_param_anchored  */
  YYSYMBOL_sf_c_chistics_and_body_standalone = 2088, /* sf_c_chistics_and_body_standalone  */
  YYSYMBOL_2089_275 = 2089,                /* $@275  */
  YYSYMBOL_sp_tail_standalone = 2090,      /* sp_tail_standalone  */
  YYSYMBOL_2091_276 = 2091,                /* $@276  */
  YYSYMBOL_2092_277 = 2092,                /* $@277  */
  YYSYMBOL_create_routine = 2093,          /* create_routine  */
  YYSYMBOL_2094_278 = 2094,                /* $@278  */
  YYSYMBOL_2095_279 = 2095,                /* $@279  */
  YYSYMBOL_2096_280 = 2096,                /* $@280  */
  YYSYMBOL_2097_281 = 2097,                /* $@281  */
  YYSYMBOL_2098_282 = 2098,                /* $@282  */
  YYSYMBOL_2099_283 = 2099,                /* $@283  */
  YYSYMBOL_opt_sp_decl_body_list = 2100,   /* opt_sp_decl_body_list  */
  YYSYMBOL_sp_decl_body_list = 2101,       /* sp_decl_body_list  */
  YYSYMBOL_2102_284 = 2102,                /* $@284  */
  YYSYMBOL_sp_decl_non_handler_list = 2103, /* sp_decl_non_handler_list  */
  YYSYMBOL_sp_decl_handler_list = 2104,    /* sp_decl_handler_list  */
  YYSYMBOL_opt_sp_decl_handler_list = 2105, /* opt_sp_decl_handler_list  */
  YYSYMBOL_sp_decl_non_handler = 2106,     /* sp_decl_non_handler  */
  YYSYMBOL_2107_285 = 2107,                /* $@285  */
  YYSYMBOL_sp_proc_stmt = 2108,            /* sp_proc_stmt  */
  YYSYMBOL_sp_labelable_stmt = 2109,       /* sp_labelable_stmt  */
  YYSYMBOL_sp_proc_stmt_compound_ok = 2110, /* sp_proc_stmt_compound_ok  */
  YYSYMBOL_sp_labeled_block = 2111,        /* sp_labeled_block  */
  YYSYMBOL_2112_286 = 2112,                /* $@286  */
  YYSYMBOL_2113_287 = 2113,                /* $@287  */
  YYSYMBOL_2114_288 = 2114,                /* $@288  */
  YYSYMBOL_opt_not_atomic = 2115,          /* opt_not_atomic  */
  YYSYMBOL_sp_unlabeled_block = 2116,      /* sp_unlabeled_block  */
  YYSYMBOL_2117_289 = 2117,                /* $@289  */
  YYSYMBOL_2118_290 = 2118,                /* $@290  */
  YYSYMBOL_2119_291 = 2119,                /* $@291  */
  YYSYMBOL_sp_block_statements_and_exceptions = 2120, /* sp_block_statements_and_exceptions  */
  YYSYMBOL_2121_292 = 2121                 /* $@292  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Second part of user prologue.  */
#line 338 "/home/buildbot/git/sql/sql_yacc.yy"

/* avoid unintentional %union size increases, it's what a parser stack made of */
static_assert(sizeof(YYSTYPE) == sizeof(void*)*2+8, "%union size check");
bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 2408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"


#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  762
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   108179

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  792
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1330
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3850
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6440

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1025


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   787,     2,     2,     2,   775,   770,     2,
     783,   784,   773,   772,   786,   771,   791,   774,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   790,
     768,   766,   767,     2,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   776,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   788,   769,   789,   777,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     4,     5,
       6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     778,   779,   780,   781,   782,   785
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  2006,  2006,  2016,  2015,  2040,  2047,  2049,  2053,  2054,
    2055,  2060,  2061,  2062,  2063,  2064,  2065,  2066,  2067,  2068,
    2069,  2070,  2071,  2072,  2073,  2074,  2075,  2076,  2077,  2078,
    2079,  2080,  2081,  2082,  2083,  2084,  2085,  2086,  2087,  2088,
    2089,  2090,  2091,  2092,  2093,  2094,  2095,  2096,  2097,  2098,
    2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,  2108,
    2109,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,  2118,
    2119,  2123,  2130,  2131,  2136,  2135,  2146,  2152,  2154,  2151,
    2163,  2165,  2164,  2174,  2179,  2191,  2190,  2207,  2206,  2216,
    2217,  2221,  2225,  2229,  2233,  2237,  2241,  2251,  2256,  2260,
    2264,  2268,  2272,  2276,  2281,  2285,  2290,  2318,  2322,  2326,
    2331,  2334,  2336,  2337,  2341,  2347,  2349,  2350,  2354,  2360,
    2362,  2363,  2367,  2374,  2378,  2393,  2397,  2403,  2409,  2415,
    2421,  2429,  2433,  2437,  2449,  2452,  2457,  2479,  2491,  2478,
    2514,  2513,  2569,  2576,  2568,  2588,  2595,  2587,  2608,  2614,
    2607,  2626,  2632,  2625,  2644,  2643,  2657,  2655,  2671,  2669,
    2683,  2682,  2693,  2692,  2702,  2709,  2716,  2716,  2719,  2723,
    2724,  2728,  2729,  2733,  2738,  2744,  2750,  2758,  2764,  2770,
    2778,  2786,  2794,  2802,  2810,  2818,  2830,  2846,  2846,  2850,
    2849,  2861,  2862,  2866,  2871,  2876,  2881,  2886,  2891,  2896,
    2904,  2903,  2936,  2935,  2942,  2949,  2950,  2956,  2962,  2972,
    2978,  2984,  2986,  2993,  2994,  2998,  3008,  3009,  3017,  3017,
    3059,  3068,  3069,  3074,  3075,  3076,  3077,  3081,  3082,  3086,
    3087,  3091,  3096,  3105,  3110,  3118,  3119,  3123,  3124,  3129,
    3131,  3133,  3135,  3137,  3139,  3141,  3147,  3148,  3152,  3153,
    3158,  3157,  3168,  3167,  3178,  3177,  3190,  3192,  3195,  3197,
    3201,  3205,  3214,  3219,  3219,  3229,  3230,  3234,  3242,  3244,
    3248,  3249,  3253,  3254,  3255,  3260,  3259,  3271,  3275,  3276,
    3280,  3281,  3286,  3292,  3298,  3308,  3316,  3321,  3329,  3333,
    3342,  3340,  3355,  3365,  3370,  3369,  3383,  3385,  3390,  3400,
    3399,  3428,  3429,  3430,  3431,  3436,  3438,  3443,  3458,  3466,
    3470,  3490,  3491,  3495,  3499,  3505,  3511,  3517,  3523,  3533,
    3538,  3546,  3554,  3559,  3565,  3566,  3572,  3575,  3579,  3587,
    3604,  3606,  3624,  3630,  3632,  3634,  3636,  3638,  3640,  3642,
    3644,  3646,  3648,  3650,  3652,  3654,  3659,  3667,  3683,  3684,
    3689,  3695,  3704,  3711,  3720,  3729,  3734,  3748,  3750,  3752,
    3761,  3766,  3773,  3782,  3791,  3793,  3795,  3797,  3799,  3801,
    3803,  3805,  3807,  3809,  3811,  3813,  3815,  3817,  3822,  3823,
    3831,  3843,  3859,  3858,  3869,  3869,  3891,  3892,  3897,  3896,
    3904,  3915,  3920,  3927,  3926,  3934,  3933,  3943,  3948,  3954,
    3953,  3960,  3959,  3969,  3977,  3985,  3994,  3994,  4027,  4037,
    4036,  4067,  4066,  4096,  4102,  4110,  4111,  4115,  4116,  4117,
    4121,  4129,  4134,  4139,  4147,  4148,  4156,  4174,  4190,  4210,
    4215,  4209,  4227,  4229,  4230,  4231,  4236,  4235,  4306,  4305,
    4312,  4317,  4318,  4322,  4323,  4328,  4327,  4343,  4342,  4357,
    4367,  4371,  4372,  4377,  4378,  4382,  4390,  4395,  4402,  4411,
    4425,  4433,  4442,  4441,  4449,  4448,  4456,  4461,  4468,  4455,
    4478,  4477,  4488,  4487,  4497,  4496,  4506,  4513,  4505,  4528,
    4527,  4539,  4541,  4546,  4548,  4550,  4556,  4555,  4558,  4559,
    4573,  4574,  4578,  4579,  4589,  4594,  4605,  4642,  4643,  4648,
    4647,  4663,  4678,  4677,  4699,  4698,  4704,  4712,  4711,  4714,
    4716,  4719,  4718,  4727,  4730,  4729,  4738,  4739,  4745,  4746,
    4763,  4764,  4768,  4769,  4773,  4787,  4797,  4808,  4817,  4818,
    4831,  4833,  4832,  4837,  4835,  4846,  4847,  4851,  4865,  4877,
    4878,  4891,  4900,  4922,  4923,  4926,  4928,  4933,  4932,  4956,
    4968,  4984,  4983,  4998,  4997,  5011,  5018,  5025,  5045,  5063,
    5067,  5094,  5106,  5107,  5112,  5121,  5111,  5146,  5147,  5151,
    5162,  5181,  5194,  5220,  5221,  5226,  5225,  5262,  5271,  5272,
    5276,  5277,  5281,  5282,  5290,  5291,  5295,  5296,  5300,  5302,
    5308,  5314,  5316,  5318,  5320,  5322,  5324,  5329,  5330,  5330,
    5339,  5351,  5354,  5362,  5365,  5375,  5376,  5380,  5381,  5385,
    5386,  5390,  5391,  5392,  5401,  5404,  5411,  5415,  5422,  5426,
    5432,  5434,  5438,  5439,  5443,  5444,  5445,  5449,  5464,  5469,
    5474,  5479,  5484,  5489,  5494,  5509,  5515,  5530,  5535,  5550,
    5556,  5574,  5579,  5584,  5589,  5594,  5599,  5605,  5604,  5630,
    5631,  5632,  5637,  5642,  5647,  5649,  5651,  5653,  5659,  5664,
    5669,  5673,  5678,  5682,  5689,  5696,  5701,  5709,  5710,  5721,
    5722,  5725,  5727,  5731,  5750,  5759,  5769,  5779,  5790,  5791,
    5792,  5793,  5794,  5795,  5796,  5800,  5801,  5802,  5806,  5807,
    5808,  5809,  5814,  5821,  5828,  5829,  5833,  5834,  5835,  5836,
    5837,  5841,  5843,  5854,  5853,  5861,  5860,  5868,  5867,  5875,
    5874,  5884,  5881,  5892,  5890,  5899,  5898,  5917,  5925,  5933,
    5941,  5942,  5946,  5956,  5957,  5961,  5962,  5966,  5971,  5970,
    6009,  6008,  6024,  6023,  6034,  6035,  6039,  6040,  6044,  6045,
    6049,  6050,  6054,  6055,  6056,  6057,  6064,  6063,  6071,  6077,
    6086,  6087,  6092,  6095,  6099,  6103,  6110,  6111,  6115,  6116,
    6120,  6126,  6132,  6133,  6141,  6140,  6162,  6163,  6173,  6181,
    6193,  6193,  6196,  6197,  6204,  6211,  6215,  6223,  6224,  6225,
    6229,  6230,  6231,  6232,  6233,  6234,  6242,  6246,  6247,  6261,
    6265,  6269,  6273,  6275,  6282,  6284,  6290,  6291,  6292,  6293,
    6297,  6301,  6306,  6310,  6314,  6318,  6323,  6327,  6334,  6347,
    6348,  6355,  6362,  6370,  6374,  6378,  6382,  6386,  6390,  6394,
    6398,  6400,  6402,  6404,  6406,  6408,  6410,  6412,  6419,  6421,
    6426,  6430,  6431,  6435,  6436,  6440,  6441,  6442,  6443,  6444,
    6448,  6449,  6450,  6451,  6452,  6456,  6462,  6463,  6468,  6470,
    6477,  6478,  6479,  6483,  6487,  6488,  6489,  6490,  6491,  6492,
    6496,  6500,  6501,  6502,  6503,  6506,  6510,  6515,  6516,  6520,
    6521,  6525,  6526,  6531,  6537,  6541,  6547,  6552,  6560,  6561,
    6568,  6572,  6576,  6577,  6581,  6582,  6586,  6587,  6591,  6599,
    6607,  6616,  6620,  6626,  6630,  6631,  6635,  6648,  6654,  6664,
    6665,  6669,  6676,  6680,  6681,  6685,  6686,  6690,  6699,  6703,
    6704,  6708,  6716,  6717,  6721,  6722,  6726,  6727,  6728,  6736,
    6737,  6741,  6745,  6749,  6754,  6755,  6760,  6767,  6776,  6780,
    6787,  6788,  6793,  6792,  6805,  6806,  6810,  6813,  6814,  6815,
    6816,  6820,  6828,  6835,  6836,  6840,  6850,  6851,  6855,  6856,
    6859,  6861,  6865,  6877,  6878,  6882,  6889,  6902,  6903,  6905,
    6907,  6913,  6918,  6924,  6930,  6937,  6947,  6948,  6949,  6950,
    6951,  6955,  6956,  6960,  6961,  6965,  6966,  6970,  6971,  6972,
    6976,  6980,  6992,  6993,  6997,  6998,  7002,  7003,  7007,  7008,
    7012,  7013,  7017,  7018,  7022,  7023,  7028,  7029,  7030,  7034,
    7036,  7041,  7046,  7048,  7052,  7056,  7063,  7064,  7068,  7072,
    7073,  7083,  7084,  7085,  7089,  7090,  7094,  7099,  7107,  7108,
    7116,  7122,  7134,  7135,  7139,  7141,  7151,  7167,  7150,  7190,
    7189,  7206,  7205,  7220,  7229,  7228,  7236,  7235,  7243,  7242,
    7256,  7250,  7264,  7263,  7303,  7302,  7309,  7316,  7324,  7334,
    7315,  7343,  7347,  7355,  7358,  7362,  7366,  7374,  7376,  7377,
    7378,  7379,  7383,  7384,  7385,  7386,  7390,  7391,  7403,  7404,
    7409,  7410,  7413,  7415,  7423,  7432,  7434,  7436,  7437,  7445,
    7446,  7452,  7461,  7459,  7472,  7485,  7484,  7497,  7495,  7508,
    7515,  7525,  7526,  7532,  7544,  7543,  7583,  7590,  7594,  7600,
    7598,  7615,  7617,  7622,  7630,  7629,  7643,  7647,  7646,  7658,
    7659,  7663,  7676,  7677,  7681,  7685,  7692,  7697,  7701,  7708,
    7715,  7719,  7724,  7732,  7740,  7750,  7761,  7771,  7782,  7792,
    7798,  7804,  7811,  7821,  7826,  7832,  7837,  7847,  7853,  7860,
    7865,  7869,  7874,  7875,  7876,  7881,  7886,  7890,  7900,  7902,
    7906,  7912,  7914,  7915,  7916,  7917,  7921,  7926,  7934,  7939,
    7947,  7948,  7952,  7953,  7957,  7957,  7960,  7962,  7966,  7967,
    7971,  7972,  7980,  7981,  7982,  7986,  7987,  7992,  8001,  8002,
    8003,  8004,  8009,  8008,  8018,  8017,  8025,  8032,  8042,  8059,
    8062,  8069,  8073,  8080,  8084,  8088,  8095,  8095,  8101,  8102,
    8106,  8107,  8108,  8112,  8113,  8122,  8127,  8132,  8140,  8141,
    8146,  8145,  8157,  8158,  8159,  8163,  8165,  8164,  8171,  8170,
    8191,  8192,  8196,  8197,  8201,  8202,  8203,  8207,  8208,  8209,
    8214,  8213,  8234,  8235,  8239,  8244,  8245,  8252,  8254,  8259,
    8261,  8260,  8273,  8275,  8274,  8288,  8289,  8294,  8303,  8304,
    8305,  8309,  8316,  8326,  8334,  8343,  8345,  8344,  8350,  8349,
    8372,  8373,  8377,  8378,  8382,  8383,  8384,  8385,  8386,  8387,
    8391,  8392,  8397,  8396,  8417,  8418,  8419,  8424,  8423,  8434,
    8441,  8447,  8456,  8457,  8461,  8477,  8476,  8489,  8490,  8494,
    8495,  8499,  8510,  8521,  8522,  8527,  8526,  8541,  8542,  8546,
    8547,  8551,  8562,  8574,  8573,  8581,  8581,  8590,  8591,  8596,
    8597,  8607,  8606,  8621,  8620,  8639,  8638,  8655,  8653,  8674,
    8675,  8680,  8679,  8693,  8702,  8692,  8712,  8724,  8788,  8793,
    8808,  8809,  8824,  8823,  8839,  8838,  8851,  8853,  8868,  8876,
    8874,  8889,  8907,  8909,  8919,  8923,  8964,  8973,  8983,  8984,
    8988,  8992,  8998,  9005,  9007,  9016,  9020,  9024,  9031,  9040,
    9044,  9051,  9068,  9071,  9079,  9082,  9089,  9093,  9097,  9101,
    9108,  9109,  9113,  9114,  9123,  9136,  9142,  9153,  9156,  9164,
    9167,  9173,  9179,  9188,  9189,  9190,  9210,  9215,  9237,  9243,
    9249,  9255,  9261,  9270,  9279,  9285,  9286,  9287,  9288,  9289,
    9293,  9294,  9295,  9299,  9300,  9301,  9305,  9306,  9311,  9362,
    9369,  9412,  9418,  9422,  9428,  9434,  9440,  9446,  9452,  9458,
    9464,  9470,  9476,  9482,  9488,  9492,  9498,  9507,  9513,  9521,
    9527,  9536,  9542,  9550,  9560,  9566,  9573,  9580,  9588,  9594,
    9603,  9607,  9613,  9619,  9625,  9631,  9638,  9644,  9650,  9656,
    9662,  9669,  9675,  9681,  9687,  9693,  9699,  9705,  9711,  9717,
    9721,  9722,  9726,  9727,  9731,  9732,  9736,  9737,  9741,  9742,
    9743,  9744,  9745,  9746,  9750,  9751,  9756,  9759,  9763,  9764,
    9765,  9769,  9770,  9771,  9772,  9773,  9774,  9778,  9779,  9780,
    9784,  9791,  9798,  9820,  9827,  9836,  9837,  9838,  9839,  9843,
    9852,  9853,  9857,  9861,  9862,  9863,  9864,  9865,  9866,  9867,
    9899,  9900,  9901,  9902,  9903,  9904,  9905,  9906,  9907,  9915,
    9923,  9924,  9931,  9937,  9942,  9952,  9957,  9962,  9968,  9973,
    9981,  9992,  9999, 10004, 10009, 10014, 10019, 10024, 10029, 10037,
   10038, 10039, 10040, 10048, 10049, 10058, 10059, 10065, 10069, 10075,
   10081, 10090, 10091, 10100, 10107, 10121, 10127, 10135, 10144, 10153,
   10160, 10166, 10172, 10178, 10193, 10204, 10210, 10216, 10223, 10229,
   10235, 10243, 10250, 10254, 10260, 10268, 10278, 10279, 10283, 10287,
   10294, 10298, 10318, 10325, 10331, 10338, 10345, 10351, 10357, 10363,
   10369, 10376, 10382, 10393, 10400, 10406, 10413, 10419, 10424, 10429,
   10435, 10441, 10446, 10453, 10460, 10468, 10475, 10482, 10489, 10504,
   10510, 10516, 10525, 10536, 10543, 10549, 10557, 10563, 10569, 10575,
   10581, 10589, 10601, 10621, 10620, 10696, 10702, 10708, 10714, 10719,
   10724, 10729, 10734, 10739, 10744, 10764, 10766, 10771, 10772, 10776,
   10777, 10781, 10782, 10786, 10793, 10801, 10828, 10834, 10840, 10846,
   10852, 10858, 10867, 10874, 10876, 10873, 10883, 10894, 10900, 10906,
   10912, 10918, 10924, 10930, 10936, 10942, 10949, 10948, 10969, 10968,
   10999, 10998, 11012, 11021, 11039, 11041, 11043, 11058, 11065, 11072,
   11079, 11086, 11093, 11100, 11107, 11114, 11121, 11132, 11139, 11150,
   11161, 11181, 11180, 11186, 11203, 11209, 11218, 11227, 11237, 11236,
   11248, 11263, 11276, 11281, 11289, 11290, 11295, 11300, 11303, 11305,
   11309, 11314, 11322, 11323, 11328, 11335, 11345, 11344, 11361, 11363,
   11370, 11377, 11384, 11388, 11389, 11390, 11398, 11399, 11400, 11401,
   11402, 11403, 11404, 11405, 11409, 11410, 11411, 11412, 11419, 11420,
   11424, 11429, 11437, 11438, 11442, 11449, 11457, 11466, 11476, 11477,
   11488, 11489, 11501, 11505, 11509, 11517, 11518, 11522, 11526, 11530,
   11537, 11541, 11546, 11547, 11553, 11552, 11581, 11580, 11596, 11605,
   11617, 11629, 11630, 11631, 11632, 11637, 11638, 11639, 11640, 11641,
   11645, 11649, 11653, 11663, 11670, 11678, 11684, 11677, 11730, 11731,
   11737, 11742, 11756, 11764, 11762, 11782, 11780, 11793, 11805, 11803,
   11823, 11822, 11834, 11847, 11845, 11866, 11865, 11878, 11892, 11893,
   11894, 11898, 11899, 11907, 11908, 11912, 11921, 11922, 11923, 11928,
   11929, 11933, 11934, 11938, 11939, 11943, 11944, 11952, 11960, 11968,
   11969, 11982, 11998, 12005, 12017, 12018, 12023, 12027, 12028, 12029,
   12033, 12034, 12039, 12038, 12044, 12043, 12051, 12052, 12055, 12057,
   12057, 12061, 12061, 12066, 12067, 12071, 12073, 12078, 12079, 12083,
   12094, 12108, 12109, 12110, 12111, 12112, 12113, 12114, 12115, 12116,
   12117, 12118, 12119, 12123, 12124, 12125, 12126, 12127, 12128, 12129,
   12130, 12131, 12135, 12136, 12137, 12138, 12141, 12143, 12144, 12148,
   12149, 12153, 12161, 12163, 12167, 12169, 12168, 12182, 12185, 12184,
   12202, 12204, 12208, 12213, 12221, 12222, 12239, 12262, 12263, 12269,
   12270, 12274, 12287, 12286, 12295, 12296, 12305, 12306, 12310, 12311,
   12315, 12316, 12330, 12331, 12335, 12345, 12354, 12361, 12368, 12378,
   12379, 12386, 12396, 12397, 12399, 12401, 12403, 12405, 12414, 12418,
   12419, 12423, 12437, 12438, 12444, 12443, 12454, 12460, 12469, 12470,
   12471, 12477, 12478, 12483, 12490, 12496, 12501, 12512, 12522, 12533,
   12540, 12548, 12558, 12559, 12563, 12564, 12568, 12569, 12574, 12581,
   12588, 12595, 12605, 12610, 12615, 12619, 12625, 12631, 12640, 12648,
   12652, 12659, 12660, 12664, 12669, 12674, 12687, 12691, 12695, 12699,
   12704, 12707, 12711, 12720, 12728, 12739, 12741, 12745, 12746, 12750,
   12751, 12752, 12753, 12754, 12755, 12759, 12760, 12761, 12762, 12763,
   12767, 12768, 12769, 12770, 12774, 12775, 12776, 12777, 12778, 12782,
   12783, 12784, 12785, 12786, 12790, 12795, 12796, 12800, 12801, 12805,
   12806, 12807, 12812, 12811, 12843, 12844, 12848, 12849, 12853, 12863,
   12863, 12875, 12876, 12879, 12899, 12909, 12914, 12922, 12928, 12940,
   12927, 12942, 12957, 12970, 12969, 12992, 12991, 13001, 13000, 13023,
   13029, 13033, 13038, 13037, 13046, 13051, 13057, 13064, 13062, 13073,
   13077, 13078, 13082, 13094, 13107, 13108, 13112, 13126, 13130, 13138,
   13142, 13149, 13150, 13158, 13165, 13157, 13178, 13185, 13177, 13196,
   13205, 13214, 13222, 13223, 13227, 13228, 13232, 13233, 13241, 13241,
   13244, 13244, 13257, 13258, 13260, 13259, 13272, 13278, 13280, 13284,
   13286, 13292, 13296, 13297, 13301, 13302, 13306, 13316, 13317, 13321,
   13322, 13326, 13327, 13331, 13332, 13337, 13336, 13353, 13352, 13368,
   13369, 13373, 13374, 13378, 13383, 13391, 13399, 13410, 13411, 13420,
   13421, 13429, 13431, 13433, 13431, 13443, 13455, 13462, 13472, 13499,
   13461, 13506, 13507, 13511, 13518, 13526, 13527, 13531, 13541, 13542,
   13549, 13548, 13568, 13571, 13578, 13580, 13579, 13595, 13625, 13638,
   13633, 13651, 13662, 13650, 13667, 13678, 13666, 13686, 13690, 13689,
   13723, 13724, 13728, 13729, 13733, 13734, 13735, 13740, 13751, 13739,
   13761, 13763, 13766, 13768, 13771, 13772, 13775, 13779, 13783, 13787,
   13791, 13795, 13799, 13803, 13807, 13815, 13818, 13828, 13827, 13846,
   13853, 13861, 13869, 13877, 13885, 13893, 13900, 13907, 13913, 13915,
   13917, 13926, 13930, 13935, 13934, 13941, 13940, 13947, 13956, 13963,
   13968, 13973, 13978, 13983, 13988, 13990, 13992, 13994, 14001, 14009,
   14011, 14019, 14026, 14033, 14041, 14047, 14052, 14060, 14068, 14076,
   14080, 14084, 14091, 14098, 14105, 14112, 14118, 14124, 14130, 14136,
   14142, 14150, 14155, 14162, 14169, 14176, 14183, 14190, 14197, 14202,
   14207, 14212, 14217, 14222, 14234, 14242, 14264, 14266, 14268, 14273,
   14274, 14277, 14279, 14283, 14284, 14288, 14289, 14293, 14294, 14298,
   14299, 14303, 14304, 14308, 14309, 14318, 14330, 14329, 14348, 14347,
   14357, 14358, 14359, 14360, 14361, 14362, 14366, 14367, 14371, 14378,
   14379, 14381, 14382, 14386, 14387, 14400, 14401, 14402, 14418, 14442,
   14441, 14453, 14452, 14464, 14469, 14470, 14483, 14486, 14485, 14498,
   14499, 14504, 14506, 14508, 14510, 14512, 14514, 14522, 14524, 14526,
   14528, 14533, 14535, 14543, 14545, 14547, 14549, 14551, 14553, 14570,
   14571, 14575, 14579, 14592, 14591, 14606, 14616, 14617, 14620, 14622,
   14623, 14627, 14643, 14644, 14649, 14648, 14658, 14659, 14663, 14663,
   14668, 14667, 14673, 14677, 14678, 14682, 14683, 14690, 14695, 14694,
   14709, 14708, 14723, 14724, 14725, 14729, 14730, 14731, 14740, 14741,
   14745, 14749, 14757, 14757, 14762, 14763, 14772, 14784, 14798, 14809,
   14822, 14783, 14833, 14834, 14838, 14839, 14843, 14844, 14852, 14856,
   14857, 14858, 14861, 14863, 14867, 14868, 14872, 14877, 14884, 14889,
   14896, 14898, 14902, 14903, 14907, 14912, 14920, 14921, 14925, 14927,
   14935, 14936, 14940, 14941, 14942, 14946, 14948, 14953, 14954, 14969,
   14970, 14974, 14975, 14979, 14992, 14997, 15002, 15009, 15017, 15025,
   15030, 15038, 15046, 15061, 15068, 15074, 15084, 15085, 15093, 15094,
   15095, 15096, 15110, 15116, 15122, 15128, 15134, 15140, 15163, 15173,
   15183, 15189, 15196, 15206, 15213, 15220, 15231, 15230, 15255, 15256,
   15261, 15262, 15267, 15291, 15294, 15293, 15309, 15313, 15318, 15322,
   15329, 15335, 15344, 15362, 15363, 15367, 15372, 15380, 15385, 15393,
   15398, 15403, 15408, 15414, 15419, 15427, 15432, 15437, 15442, 15448,
   15456, 15457, 15468, 15476, 15480, 15486, 15492, 15502, 15508, 15517,
   15527, 15528, 15532, 15533, 15534, 15538, 15546, 15547, 15548, 15549,
   15553, 15562, 15570, 15578, 15586, 15587, 15595, 15596, 15600, 15601,
   15606, 15615, 15616, 15624, 15625, 15633, 15634, 15635, 15639, 15650,
   15679, 15688, 15688, 15690, 15700, 15701, 15702, 15703, 15704, 15705,
   15706, 15707, 15708, 15709, 15710, 15711, 15716, 15717, 15718, 15719,
   15720, 15721, 15722, 15723, 15724, 15725, 15726, 15727, 15728, 15732,
   15733, 15734, 15735, 15736, 15737, 15738, 15739, 15740, 15741, 15742,
   15743, 15744, 15748, 15749, 15750, 15751, 15752, 15753, 15754, 15755,
   15756, 15757, 15758, 15759, 15760, 15764, 15765, 15766, 15767, 15768,
   15769, 15770, 15771, 15784, 15785, 15786, 15787, 15788, 15789, 15790,
   15791, 15792, 15793, 15794, 15795, 15796, 15797, 15798, 15799, 15800,
   15801, 15802, 15803, 15804, 15805, 15806, 15807, 15808, 15809, 15810,
   15811, 15812, 15813, 15814, 15815, 15816, 15817, 15818, 15819, 15820,
   15821, 15822, 15823, 15824, 15825, 15826, 15827, 15828, 15829, 15830,
   15831, 15832, 15833, 15834, 15835, 15836, 15877, 15878, 15879, 15880,
   15881, 15882, 15893, 15894, 15895, 15896, 15897, 15898, 15899, 15900,
   15901, 15902, 15906, 15907, 15908, 15912, 15913, 15914, 15923, 15924,
   15925, 15926, 15927, 15928, 15929, 15930, 15931, 15932, 15933, 15934,
   15935, 15936, 15937, 15938, 15939, 15940, 15941, 15942, 15943, 15944,
   15945, 15946, 15947, 15948, 15953, 15958, 15959, 15960, 15961, 15962,
   15963, 15964, 15965, 15966, 15967, 15968, 15969, 15970, 15971, 15972,
   15973, 15974, 15975, 15976, 15977, 15978, 15979, 15980, 15981, 15982,
   15983, 15984, 15985, 15986, 15987, 15988, 15989, 15990, 15991, 15992,
   15993, 15994, 15995, 15996, 15997, 15998, 15999, 16000, 16001, 16006,
   16007, 16008, 16009, 16010, 16011, 16012, 16013, 16014, 16015, 16016,
   16017, 16018, 16019, 16020, 16021, 16022, 16023, 16024, 16025, 16026,
   16027, 16028, 16029, 16030, 16031, 16032, 16033, 16034, 16035, 16036,
   16037, 16038, 16039, 16040, 16041, 16042, 16043, 16044, 16045, 16046,
   16047, 16048, 16049, 16050, 16051, 16052, 16053, 16054, 16055, 16056,
   16057, 16058, 16059, 16060, 16061, 16062, 16063, 16064, 16065, 16066,
   16067, 16068, 16069, 16070, 16071, 16072, 16073, 16074, 16075, 16076,
   16077, 16078, 16079, 16080, 16081, 16082, 16083, 16084, 16085, 16086,
   16087, 16088, 16089, 16090, 16091, 16092, 16093, 16094, 16095, 16096,
   16097, 16098, 16099, 16100, 16101, 16102, 16103, 16104, 16105, 16106,
   16107, 16108, 16109, 16110, 16111, 16112, 16113, 16114, 16115, 16116,
   16120, 16121, 16122, 16123, 16124, 16125, 16126, 16127, 16128, 16129,
   16130, 16131, 16132, 16133, 16134, 16135, 16136, 16137, 16138, 16139,
   16140, 16141, 16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149,
   16150, 16151, 16152, 16153, 16154, 16155, 16156, 16157, 16158, 16159,
   16160, 16161, 16162, 16163, 16164, 16165, 16166, 16167, 16168, 16169,
   16170, 16171, 16172, 16173, 16174, 16175, 16176, 16177, 16178, 16179,
   16180, 16181, 16182, 16183, 16184, 16185, 16186, 16187, 16188, 16189,
   16190, 16191, 16192, 16193, 16194, 16195, 16196, 16197, 16198, 16199,
   16200, 16201, 16202, 16203, 16204, 16205, 16206, 16207, 16208, 16209,
   16210, 16211, 16212, 16213, 16214, 16215, 16216, 16217, 16218, 16219,
   16220, 16221, 16222, 16223, 16224, 16225, 16226, 16227, 16228, 16229,
   16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238, 16239,
   16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248, 16249,
   16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258, 16259,
   16260, 16261, 16262, 16263, 16264, 16265, 16266, 16270, 16271, 16277,
   16278, 16279, 16280, 16281, 16282, 16283, 16284, 16285, 16286, 16287,
   16288, 16289, 16290, 16291, 16295, 16296, 16297, 16298, 16302, 16303,
   16304, 16305, 16306, 16307, 16312, 16313, 16314, 16315, 16316, 16317,
   16318, 16319, 16320, 16321, 16322, 16323, 16324, 16325, 16326, 16327,
   16328, 16329, 16330, 16331, 16332, 16333, 16334, 16335, 16336, 16337,
   16338, 16339, 16340, 16341, 16342, 16343, 16344, 16345, 16346, 16347,
   16348, 16349, 16350, 16351, 16352, 16353, 16354, 16355, 16356, 16357,
   16358, 16359, 16360, 16361, 16362, 16363, 16364, 16365, 16366, 16367,
   16368, 16369, 16370, 16371, 16372, 16373, 16374, 16375, 16376, 16377,
   16378, 16379, 16380, 16381, 16382, 16383, 16384, 16385, 16386, 16387,
   16388, 16389, 16390, 16391, 16392, 16393, 16394, 16395, 16396, 16397,
   16398, 16399, 16400, 16401, 16402, 16403, 16404, 16405, 16406, 16407,
   16408, 16409, 16410, 16411, 16412, 16413, 16414, 16415, 16416, 16417,
   16418, 16419, 16420, 16421, 16422, 16423, 16424, 16425, 16426, 16427,
   16428, 16429, 16430, 16431, 16433, 16435, 16436, 16437, 16438, 16439,
   16440, 16441, 16442, 16443, 16444, 16445, 16446, 16447, 16448, 16449,
   16450, 16451, 16452, 16453, 16454, 16455, 16456, 16457, 16458, 16459,
   16460, 16461, 16462, 16463, 16464, 16465, 16466, 16467, 16468, 16469,
   16470, 16471, 16472, 16473, 16474, 16475, 16476, 16477, 16478, 16479,
   16480, 16481, 16482, 16483, 16484, 16485, 16486, 16487, 16488, 16489,
   16490, 16491, 16492, 16493, 16494, 16495, 16496, 16497, 16498, 16499,
   16500, 16501, 16502, 16503, 16504, 16505, 16506, 16507, 16508, 16509,
   16510, 16511, 16512, 16513, 16514, 16515, 16516, 16517, 16518, 16519,
   16520, 16521, 16522, 16523, 16524, 16525, 16526, 16527, 16528, 16529,
   16530, 16531, 16532, 16533, 16534, 16535, 16536, 16537, 16538, 16539,
   16540, 16541, 16542, 16543, 16544, 16545, 16546, 16547, 16548, 16549,
   16561, 16560, 16573, 16574, 16576, 16575, 16587, 16586, 16593, 16591,
   16611, 16612, 16617, 16618, 16620, 16619, 16633, 16634, 16640, 16639,
   16644, 16648, 16649, 16650, 16654, 16655, 16656, 16657, 16661, 16662,
   16663, 16664, 16673, 16672, 16687, 16686, 16701, 16700, 16718, 16717,
   16732, 16731, 16746, 16745, 16762, 16761, 16776, 16775, 16790, 16789,
   16803, 16802, 16828, 16827, 16839, 16838, 16851, 16850, 16861, 16879,
   16890, 16901, 16911, 16933, 16949, 16961, 16960, 16975, 16974, 16986,
   16985, 16999, 17000, 17001, 17002, 17006, 17025, 17043, 17044, 17048,
   17049, 17050, 17051, 17056, 17061, 17066, 17077, 17090, 17096, 17103,
   17104, 17105, 17112, 17111, 17125, 17126, 17132, 17141, 17142, 17146,
   17147, 17151, 17170, 17171, 17172, 17177, 17178, 17183, 17182, 17200,
   17199, 17211, 17220, 17230, 17229, 17272, 17273, 17277, 17278, 17282,
   17283, 17284, 17285, 17287, 17286, 17299, 17300, 17301, 17302, 17303,
   17309, 17314, 17319, 17324, 17328, 17333, 17342, 17344, 17349, 17354,
   17360, 17366, 17371, 17383, 17384, 17388, 17389, 17393, 17398, 17406,
   17415, 17436, 17436, 17439, 17440, 17444, 17445, 17452, 17454, 17458,
   17463, 17470, 17474, 17483, 17490, 17491, 17492, 17493, 17497, 17498,
   17499, 17500, 17501, 17502, 17503, 17504, 17505, 17506, 17507, 17508,
   17509, 17510, 17511, 17512, 17513, 17514, 17515, 17516, 17517, 17518,
   17519, 17520, 17521, 17522, 17523, 17524, 17525, 17526, 17527, 17528,
   17529, 17530, 17531, 17532, 17533, 17534, 17535, 17536, 17537, 17538,
   17539, 17543, 17544, 17548, 17549, 17553, 17560, 17567, 17577, 17586,
   17592, 17599, 17607, 17612, 17620, 17625, 17633, 17638, 17645, 17645,
   17646, 17646, 17649, 17655, 17661, 17666, 17673, 17679, 17686, 17695,
   17699, 17705, 17713, 17715, 17719, 17723, 17727, 17734, 17739, 17744,
   17749, 17754, 17762, 17763, 17767, 17768, 17773, 17774, 17778, 17779,
   17783, 17784, 17788, 17789, 17794, 17793, 17803, 17812, 17813, 17817,
   17818, 17823, 17824, 17825, 17830, 17831, 17832, 17836, 17848, 17857,
   17863, 17872, 17881, 17894, 17896, 17898, 17906, 17907, 17908, 17912,
   17913, 17919, 17920, 17921, 17922, 17923, 17924, 17925, 17935, 17936,
   17941, 17954, 17968, 17969, 17970, 17974, 17975, 17979, 17980, 17985,
   17986, 17990, 17996, 18005, 18005, 18019, 18020, 18021, 18022, 18032,
   18034, 18040, 18046, 18056, 18065, 18071, 18076, 18080, 18054, 18129,
   18129, 18142, 18144, 18149, 18150, 18154, 18155, 18159, 18159, 18166,
   18170, 18174, 18178, 18182, 18186, 18194, 18195, 18211, 18218, 18225,
   18238, 18239, 18240, 18244, 18245, 18246, 18250, 18251, 18256, 18258,
   18257, 18263, 18264, 18268, 18273, 18280, 18285, 18294, 18300, 18741,
   18742, 18746, 18748, 18747, 18761, 18760, 18773, 18772, 18786, 18790,
   18794, 18798, 18802, 18806, 18810, 18814, 18818, 18823, 18824, 18830,
   18831, 18832, 18833, 18834, 18835, 18836, 18837, 18841, 18842, 18843,
   18844, 18845, 18846, 18847, 18848, 18852, 18853, 18854, 18859, 18863,
   18872, 18871, 18884, 18890, 18894, 18904, 18905, 18918, 18934, 18935,
   18936, 18940, 18940, 18952, 18953, 18954, 18955, 18956, 18957, 18958,
   18959, 18963, 18964, 18972, 18973, 18979, 18978, 18996, 18995, 19015,
   19014, 19039, 19040, 19044, 19053, 19054, 19058, 19059, 19064, 19063,
   19078, 19086, 19087, 19091, 19092, 19097, 19098, 19103, 19104, 19108,
   19109, 19113, 19117, 19121, 19127, 19117, 19139, 19140, 19141, 19147,
   19159, 19171, 19178, 19179, 19185, 19186, 19194, 19193, 19214, 19213,
   19233, 19242, 19251, 19257, 19256, 19276, 19275, 19295, 19296, 19300,
   19301, 19305, 19312, 19325, 19334, 19346, 19354, 19359, 19364, 19368,
   19373, 19378, 19383, 19393, 19392, 19407, 19415, 19406, 19433, 19432,
   19443, 19441, 19457, 19455, 19469, 19478, 19476, 19496, 19509, 19494,
   19525, 19529, 19534, 19533, 19542, 19546, 19547, 19554, 19555, 19562,
   19563, 19567, 19568, 19575, 19586, 19585, 19604, 19605, 19606, 19607,
   19608, 19609, 19613, 19614, 19615, 19616, 19617, 19618, 19619, 19620,
   19621, 19622, 19623, 19627, 19628, 19629, 19630, 19637, 19635, 19651,
   19655, 19649, 19671, 19672, 19677, 19676, 19691, 19697, 19690, 19714,
   19712
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "'@'", "ABORT_SYM",
  "IMPOSSIBLE_ACTION", "FORCE_LOOKAHEAD", "END_OF_INPUT",
  "COLON_ORACLE_SYM", "PARAM_MARKER", "FOR_SYSTEM_TIME_SYM",
  "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "ORACLE_CONCAT_SYM", "PERCENT_ORACLE_SYM", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITH_SYSTEM_SYM", "IDENT", "IDENT_QUOTED",
  "LEX_HOSTNAME", "UNDERSCORE_CHARSET", "BIN_NUM", "DECIMAL_NUM",
  "FLOAT_NUM", "HEX_NUM", "HEX_STRING", "LONG_NUM", "NCHAR_STRING", "NUM",
  "TEXT_STRING", "ULONGLONG_NUM", "AND_AND_SYM", "DOT_DOT_SYM",
  "EQUAL_SYM", "GE", "LE", "MYSQL_CONCAT_SYM", "NE", "NOT2_SYM", "OR2_SYM",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "ACCESSIBLE_SYM", "ADD", "ALL",
  "ALTER", "ANALYZE_SYM", "AND_SYM", "ASC", "ASENSITIVE_SYM", "AS",
  "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BIT_AND", "BIT_OR",
  "BIT_XOR", "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM",
  "BOTH", "BY", "CALL_SYM", "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE",
  "CHAR_SYM", "CHECK_SYM", "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT",
  "CONTINUE_MARIADB_SYM", "CONTINUE_ORACLE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CREATE", "CROSS", "CUME_DIST_SYM", "CURDATE",
  "CURRENT_ROLE", "CURRENT_USER", "CURSOR_SYM", "CURTIME", "DATABASE",
  "DATABASES", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DAY_HOUR_SYM",
  "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESCRIBE",
  "DESC", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DO_DOMAIN_IDS_SYM",
  "DOUBLE_SYM", "DROP", "DUAL_SYM", "EACH_SYM", "ELSEIF_MARIADB_SYM",
  "ELSE", "ELSIF_ORACLE_SYM", "EMPTY_SYM", "ENCLOSED", "ESCAPED",
  "EXCEPT_SYM", "EXISTS", "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM",
  "FIRST_VALUE_SYM", "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FROM",
  "FULLTEXT_SYM", "GOTO_ORACLE_SYM", "GRANT", "GROUP_CONCAT_SYM",
  "JSON_ARRAYAGG_SYM", "JSON_OBJECTAGG_SYM", "JSON_TABLE_SYM", "GROUP_SYM",
  "HAVING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM",
  "IF_SYM", "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "IGNORED_SYM",
  "INDEX_SYM", "INFILE", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "IN_SYM", "INTERSECT_SYM", "INTERVAL_SYM", "INTO", "INT_SYM",
  "IS", "ITERATE_SYM", "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM",
  "LAG_SYM", "LEADING", "LEAD_SYM", "LEAVE_SYM", "LEFT", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LOAD", "LOCATOR_SYM", "LOCK_SYM", "LONGBLOB",
  "LONG_SYM", "LONGTEXT", "LOOP_SYM", "LOW_PRIORITY",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM", "MAXVALUE_SYM",
  "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT", "MIN_SYM",
  "MINUS_ORACLE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MODIFIES_SYM", "MOD_SYM", "NATURAL", "NEG", "NESTED_SYM", "NOT_SYM",
  "NO_WRITE_TO_BINLOG", "NOW_SYM", "NTH_VALUE_SYM", "NTILE_SYM",
  "NULL_SYM", "NUMERIC_SYM", "ON", "OPTIMIZE", "OPTIONALLY", "ORDER_SYM",
  "ORDINALITY_SYM", "OR_SYM", "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE",
  "OUT_SYM", "OVER_SYM", "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM",
  "PARSE_VCOL_EXPR_SYM", "PARTITION_SYM", "PATH_SYM",
  "PERCENTILE_CONT_SYM", "PERCENTILE_DISC_SYM", "PERCENT_RANK_SYM",
  "PORTION_SYM", "POSITION_SYM", "PRECISION", "PRIMARY_SYM",
  "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM", "RANGE_SYM", "RANK_SYM",
  "READS_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL", "RECURSIVE_SYM",
  "REFERENCES", "REF_SYSTEM_ID_SYM", "REGEXP", "RELEASE_SYM", "RENAME",
  "REPEAT_SYM", "REQUIRE_SYM", "RESIGNAL_SYM", "RESTRICT", "RETURNING_SYM",
  "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM", "REVOKE", "RIGHT",
  "ROW_NUMBER_SYM", "ROWS_SYM", "ROWTYPE_ORACLE_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SHOW", "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQL_BIG_RESULT", "SQLEXCEPTION_SYM", "SQL_SMALL_RESULT",
  "SQLSTATE_SYM", "SQL_SYM", "SQLWARNING_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM", "TERMINATED",
  "THEN_SYM", "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING",
  "TRIGGER_SYM", "TRUE_SYM", "UNDO_SYM", "UNION_SYM", "UNIQUE_SYM",
  "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES_IN_SYM",
  "VALUES_LESS_SYM", "VALUES", "VARBINARY", "VARCHAR", "VARIANCE_SYM",
  "VAR_SAMP_SYM", "VARYING", "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH",
  "XOR", "YEAR_MONTH_SYM", "ZEROFILL", "BODY_MARIADB_SYM",
  "ELSEIF_ORACLE_SYM", "ELSIF_MARIADB_SYM", "EXCEPTION_ORACLE_SYM",
  "GOTO_MARIADB_SYM", "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM",
  "RAISE_MARIADB_SYM", "ROWTYPE_MARIADB_SYM", "ROWNUM_SYM", "REPLACE",
  "SUBSTRING", "TRIM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM",
  "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM",
  "ANY_SYM", "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHANNEL_SYM", "CHARSET", "CHECKPOINT_SYM",
  "CHECKSUM_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_ADD_SYM",
  "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM",
  "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM",
  "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM",
  "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM",
  "CURRENT_SYM", "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DES_KEY_FILE", "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM",
  "DISCARD", "DISK_SYM", "DO_SYM", "DUMPFILE", "DUPLICATE_SYM",
  "DYNAMIC_SYM", "ENABLE_SYM", "END", "ENDS_SYM", "ENGINES_SYM",
  "ENGINE_SYM", "ENUM", "ERROR_SYM", "ERRORS", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM",
  "EXECUTE_SYM", "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM",
  "EXIT_ORACLE_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FEDERATED_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM", "FOUND_SYM",
  "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM", "GET_FORMAT",
  "GET_SYM", "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LIST_SYM", "LOCAL_SYM", "LOCKED_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MASTER_DEMOTE_TO_SLAVE_SYM",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONITOR_SYM",
  "MONTH_SYM", "MUTEX_SYM", "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM",
  "NAME_SYM", "NATIONAL_SYM", "NCHAR_SYM", "NEVER_SYM", "NEXT_SYM",
  "NEXTVAL_SYM", "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OVERLAPS_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM",
  "PARTIAL", "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM",
  "PERIOD_SYM", "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPLAY_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM", "SETVAL_SYM", "SHARE_SYM",
  "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM", "SKIP_SYM", "SLAVE", "SLAVES",
  "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM", "SOCKET_SYM", "SOFT_SYM",
  "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SQL_AFTER_GTIDS_SYM",
  "SQL_BEFORE_GTIDS_SYM", "SQL_BUFFER_RESULT", "SQL_CACHE_SYM",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD", "STAGE_SYM",
  "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM", "STOP_SYM",
  "STORAGE_SYM", "STORED_SYM", "STRING_SYM", "SUBCLASS_ORIGIN_SYM",
  "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM", "SUBPARTITION_SYM",
  "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM", "SWITCHES_SYM", "SYSTEM",
  "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TEXT_SYM", "THAN_SYM",
  "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM",
  "TRANSACTION_SYM", "TRANSACTIONAL_SYM", "THREADS_SYM", "TRIGGERS_SYM",
  "TRIM_ORACLE", "TRUNCATE_SYM", "TYPE_SYM", "UDF_RETURNS_SYM",
  "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM", "UNKNOWN_SYM",
  "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM", "VALIDATION_SYM",
  "VALUE_SYM", "VARCHAR2_MARIADB_SYM", "VARCHAR2_ORACLE_SYM", "VARIABLES",
  "VERSIONING_SYM", "VIA_SYM", "VIEW_SYM", "VISIBLE_SYM", "VIRTUAL_SYM",
  "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM",
  "WITHIN", "WITHOUT", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM",
  "XA_SYM", "XML_SYM", "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM",
  "PREC_BELOW_NOT", "'='", "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'",
  "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR",
  "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE", "USER",
  "PREC_BELOW_SP_OBJECT_TYPE", "PREC_BELOW_CONTRACTION_TOKEN2", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "','", "'!'", "'{'", "'}'", "';'", "'.'",
  "$accept", "query", "$@1", "opt_end_of_input",
  "directly_executable_statement", "verb_clause", "deallocate",
  "deallocate_or_drop", "prepare", "$@2", "execute", "$@3", "$@4",
  "execute_using", "$@5", "execute_params", "help", "$@6", "change", "$@7",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "do_domain_id_list", "do_domain_id", "ignore_domain_id_list",
  "ignore_domain_id", "master_file_def", "optional_connection_name",
  "connection_name", "optional_for_channel", "for_channel", "create",
  "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15", "$@16",
  "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24",
  "opt_sequence", "sequence_defs", "sequence_def", "force_lookahead",
  "server_def", "$@25", "server_options_list", "server_option",
  "event_tail", "$@26", "ev_schedule_time", "$@27", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@28", "clear_privileges",
  "opt_aggregate", "sp_handler", "sp_handler_package_spec",
  "sp_handler_package_body", "drop_routine", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@29",
  "$@30", "$@31", "opt_sp_cparam_list", "opt_sp_cparams", "sp_cparams",
  "sp_fdparam_list", "$@32", "sp_fdparams", "sp_param_name",
  "sp_pdparam_list", "sp_pdparams", "sp_parameter_type",
  "sp_parenthesized_pdparam_list", "$@33", "sp_parenthesized_fdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "optionally_qualified_column_ident",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "$@34",
  "sp_decl_handler", "$@35", "opt_parenthesized_cursor_formal_parameters",
  "sp_cursor_stmt_lex", "sp_cursor_stmt", "$@36", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "raise_stmt_oracle", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_ident", "sp_decl_idents", "sp_proc_stmt_if", "$@37",
  "sp_proc_stmt_statement", "$@38", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@39", "sp_proc_stmt_exit_oracle", "$@40",
  "$@41", "sp_proc_stmt_continue_oracle", "$@42", "$@43",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "expr_lex", "@44", "assignment_source_lex", "assignment_source_expr",
  "$@45", "for_loop_bound_expr", "$@46", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_with_cursor",
  "sp_proc_stmt_open", "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch",
  "sp_proc_stmt_close", "sp_fetch_list", "sp_if", "$@47", "$@48",
  "sp_elseifs", "case_stmt_specification", "$@49", "case_stmt_body",
  "$@50", "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@51", "searched_when_clause", "$@52",
  "else_clause_opt", "sp_opt_label", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "repeat_body", "pop_sp_loop_label", "sp_labeled_control", "$@53", "$@54",
  "$@55", "$@56", "$@57", "$@58", "sp_unlabeled_control", "$@59", "$@60",
  "$@61", "$@62", "$@63", "trg_action_time", "trg_event", "create_body",
  "$@64", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@65", "have_partitioning",
  "partition_entry", "$@66", "partition", "$@67", "part_type_def", "$@68",
  "$@69", "$@70", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@71",
  "$@72", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "opt_partition",
  "part_definition", "$@73", "part_name", "opt_part_values", "$@74",
  "$@75", "part_func_max", "part_values_in", "part_value_list",
  "part_value_item", "$@76", "$@77", "part_value_item_list",
  "part_value_expr_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "$@78", "sub_name", "opt_part_options",
  "part_option_list", "part_option", "opt_subpart_options",
  "subpart_option_list", "server_part_option", "opt_versioning_rotation",
  "$@79", "opt_versioning_interval_start", "opt_vers_auto_part", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists_table_element",
  "opt_if_not_exists", "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@80", "engine_defined_option", "ident_options",
  "keyword_options", "opt_versioning_option", "versioning_option",
  "default_charset", "default_collation", "storage_engines",
  "known_storage_engines", "row_types", "merge_insert_types", "udf_type",
  "create_field_list", "create_field_list_parens", "field_list",
  "field_list_item", "column_def", "key_def", "$@81", "$@82", "$@83",
  "$@84", "$@85", "$@86", "$@87", "constraint_def",
  "period_for_system_time", "period_for_application_time",
  "opt_check_constraint", "check_constraint", "opt_constraint_no_id",
  "opt_constraint", "constraint", "field_spec", "@88",
  "field_type_or_serial", "$@89", "$@90", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@91", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@92", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "udt_name", "field_type_all",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc", "char",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "srid_option",
  "float_options", "precision", "field_options", "last_field_options",
  "field_length_str", "field_length", "field_scale", "opt_field_length",
  "opt_field_scale", "opt_precision", "attribute_list", "attribute",
  "opt_compression_method", "opt_compressed", "opt_enable", "compressed",
  "compressed_deprecated_data_type_attribute",
  "compressed_deprecated_column_attribute", "asrow_attribute",
  "serial_attribute", "with_or_without_system", "charset", "charset_name",
  "charset_name_or_default", "opt_load_data_charset",
  "old_or_new_charset_name", "old_or_new_charset_name_or_default",
  "collation_name", "collation_name_or_default", "opt_default",
  "charset_or_alias", "opt_binary", "binary", "opt_bin_mod", "ws_nweights",
  "$@93", "ws_level_flag_desc", "ws_level_flag_reverse", "ws_level_flags",
  "ws_level_number", "ws_level_list_item", "ws_level_list",
  "ws_level_range", "ws_level_list_or_range", "opt_ws_levels",
  "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "fulltext", "spatial", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "opt_USING_key_algorithm",
  "opt_key_algorithm_clause", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "ignorability", "key_list", "opt_without_overlaps",
  "key_part", "opt_ident", "string_list", "alter", "$@94", "$@95", "$@96",
  "$@97", "$@98", "$@99", "$@100", "$@101", "$@102", "$@103", "$@104",
  "$@105", "$@106", "account_locking_option", "opt_password_expire_option",
  "opt_account_locking_and_opt_password_expiration",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@107", "$@108", "$@109", "$@110",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@111", "add_part_extra", "reorg_partition_rule", "$@112",
  "reorg_parts_rule", "$@113", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "opt_without_validation",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "alter_options",
  "$@114", "alter_options_part2", "alter_option_list", "alter_option",
  "opt_restrict", "opt_place", "opt_to", "slave", "$@115", "$@116",
  "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_thread_opts", "$@117", "slave_thread_opt_list",
  "slave_thread_opt", "slave_until", "slave_until_opts", "checksum",
  "$@118", "opt_checksum_type", "repair_table_or_view", "$@119", "repair",
  "$@120", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "opt_view_repair_type", "analyze", "$@121", "analyze_table_list",
  "analyze_table_elem_spec", "opt_persistent_stat_clause",
  "persistent_stat_spec", "persistent_column_stat_spec", "$@122",
  "persistent_index_stat_spec", "$@123", "table_column_list",
  "table_index_list", "table_index_name", "binlog_base64_event",
  "check_view_or_table", "$@124", "check", "$@125", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "opt_view_check_type", "optimize",
  "$@126", "opt_no_write_to_binlog", "rename", "$@127", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@128",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@129",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@130", "cache_keys_spec",
  "$@131", "cache_key_list_or_empty", "opt_ignore_leaves", "select",
  "$@132", "$@133", "select_into", "$@134", "$@135", "simple_table",
  "table_value_constructor", "$@136", "query_specification_start", "$@137",
  "$@138", "query_specification", "select_into_query_specification",
  "query_expression", "query_expression_no_with_clause",
  "query_expression_body_ext", "$@139", "$@140",
  "query_expression_body_ext_parens", "query_expression_body", "$@141",
  "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end",
  "remember_cpp_ptr", "remember_start_opt", "remember_end_opt",
  "remember_lex", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "expr", "boolean_test",
  "predicate", "bit_expr", "or", "and", "not", "not2", "comp_op",
  "all_or_any", "opt_dyncol_type", "dyncol_type", "numeric_dyncol_type",
  "temporal_dyncol_type", "string_dyncol_type", "dyncall_create_element",
  "dyncall_create_list", "plsql_cursor_attr", "explicit_cursor_attr",
  "trim_operands", "trim_operands_regular", "trim_operands_special",
  "column_default_non_parenthesized_expr", "primary_expr",
  "string_factor_expr", "simple_expr", "mysql_concatenation_expr",
  "function_call_keyword_timestamp", "function_call_keyword",
  "substring_operands", "substring_operands_regular",
  "substring_operands_special", "function_call_nonkeyword",
  "function_call_conflict", "function_call_generic", "@142",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr", "sum_expr", "$@143",
  "$@144", "$@145", "$@146", "$@147", "window_func_expr", "window_func",
  "simple_window_func", "inverse_distribution_function",
  "percentile_function", "$@148", "inverse_distribution_function_def",
  "order_by_single_element_list", "window_name", "variable", "$@149",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "opt_glimit_clause", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@150", "cast_type",
  "cast_type_numeric", "cast_type_temporal", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "when_list", "when_list_opt_else",
  "table_ref", "json_text_literal", "json_text_literal_or_num",
  "join_table_list", "json_table_columns_clause",
  "json_table_columns_list", "json_table_column", "$@151", "$@152",
  "json_table_column_type", "json_table_field_type",
  "json_opt_on_empty_or_error", "json_on_response",
  "json_on_error_response", "json_on_empty_response", "table_function",
  "$@153", "$@154", "esc_table_ref", "derived_table_list", "join_table",
  "$@155", "$@156", "$@157", "$@158", "$@159", "$@160", "inner_join",
  "normal_join", "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "table_primary_derived",
  "opt_outer", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "$@161", "$@162", "index_hints_list",
  "opt_index_hints_list", "$@163", "opt_key_definition", "$@164",
  "opt_key_usage_list", "key_usage_element", "key_usage_list",
  "using_list", "interval", "interval_time_stamp", "date_time_type",
  "table_alias", "opt_table_alias_clause", "table_alias_clause", "opt_all",
  "opt_where_clause", "$@165", "opt_having_clause", "$@166",
  "opt_group_clause", "group_list", "olap_opt", "opt_window_clause",
  "window_def_list", "window_def", "window_spec", "$@167",
  "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@168", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "fetch_first_clause", "first_or_next", "row_or_rows",
  "only_or_with_ties", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into", "order_or_limit",
  "opt_plus", "int_num", "ulong_num", "real_ulong_num", "longlong_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@169", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@170",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@171", "$@172", "do", "$@173", "drop", "$@174",
  "$@175", "$@176", "$@177", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@178", "$@179", "replace", "$@180", "$@181",
  "insert_start", "stmt_end", "insert_lock_option", "replace_lock_option",
  "insert_replace_option", "opt_into", "insert_table", "$@182",
  "insert_field_spec", "$@183", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@184", "no_braces_with_names", "$@185", "opt_values",
  "opt_values_with_names", "values", "values_with_names", "expr_or_ignore",
  "expr_or_ignore_or_default", "opt_insert_update", "$@186", "$@187",
  "update_table_list", "update", "$@188", "$@189", "$@190", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@191", "opt_delete_system_time",
  "delete_part2", "$@192", "delete_single_table",
  "delete_single_table_for_period", "single_multi", "$@193", "$@194",
  "$@195", "$@196", "$@197", "opt_returning", "$@198", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "$@199", "$@200",
  "opt_table_sym", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@201", "show_param", "$@202", "$@203",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "$@204", "$@205", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "explain_for_connection", "flush", "$@206",
  "flush_options", "$@207", "opt_flush_lock", "flush_lock", "$@208",
  "flush_options_list", "flush_option", "opt_table_list", "backup",
  "backup_statements", "$@209", "opt_delete_gtid_domain",
  "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@210", "reset_options",
  "reset_option", "$@211", "$@212", "slave_reset_options",
  "master_reset_options", "purge", "$@213", "kill", "$@214", "kill_type",
  "kill_option", "opt_connection", "kill_expr", "shutdown", "$@215",
  "shutdown_option", "use", "load", "$@216", "$@217", "$@218", "$@219",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "with_clause", "$@220",
  "opt_recursive", "with_list", "with_list_element", "opt_cycle", "$@221",
  "opt_with_column_list", "with_column_list", "ident_sys_alloc",
  "comma_separated_ident_list", "with_element_head", "insert_ident",
  "table_wild", "select_sublist_qualified_asterisk", "order_ident",
  "simple_ident", "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "ident_cli_func", "ident_func", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident_table_alias",
  "ident_cli_set_usual_case", "ident_sysvar_name", "ident", "label_ident",
  "ident_or_text", "user_maybe_role", "user_or_role", "user",
  "keyword_table_alias", "keyword_ident", "keyword_sysvar_name",
  "keyword_set_usual_case", "non_reserved_keyword_udt",
  "keyword_sp_var_not_label", "keyword_sp_head", "keyword_verb_clause",
  "keyword_set_special_case", "keyword_sysvar_type", "keyword_data_type",
  "keyword_cast_type", "keyword_func_sp_var_and_label",
  "keyword_func_sp_var_not_label", "keyword_sp_var_and_label",
  "reserved_keyword_udt_not_param_type", "set", "$@222", "set_param",
  "$@223", "$@224", "$@225", "set_stmt_option_list",
  "start_option_value_list_following_option_type", "$@226",
  "option_value_list", "option_value", "$@227", "option_type",
  "opt_var_type", "opt_var_ident_type", "set_stmt_option", "$@228",
  "$@229", "$@230", "option_value_following_option_type", "$@231", "$@232",
  "$@233", "option_value_no_option_type", "$@234", "$@235", "$@236",
  "$@237", "$@238", "$@239", "$@240", "$@241", "$@242", "$@243",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "set_expr_misc", "lock",
  "$@244", "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@245", "handler", "$@246",
  "handler_tail", "$@247", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@248", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "role_name", "grant_role", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "column_list_privilege",
  "column_privilege", "object_privilege", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "user_and_role_list", "via_or_with", "using_or_as", "grant_user",
  "auth_expression", "auth_token", "opt_auth_str", "opt_require_clause",
  "resource_option", "resource_option_list", "opt_resource_options",
  "opt_grant_options", "opt_grant_option", "grant_option_list",
  "grant_option", "begin_stmt_mariadb", "$@249", "compound_statement",
  "opt_not", "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@250", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "trigger_tail", "$@251", "$@252", "$@253", "$@254", "$@255",
  "sf_return_type", "$@256", "create_package_chistic",
  "create_package_chistics", "opt_create_package_chistics",
  "opt_create_package_chistics_init", "$@257", "xa", "opt_format_xid",
  "xid", "begin_or_start", "opt_join_or_resume", "opt_one_phase",
  "opt_suspend", "$@258", "opt_migrate", "install", "uninstall",
  "keep_gcc_happy", "_empty", "statement", "sp_statement", "$@259",
  "$@260", "$@261", "sp_if_then_statements", "sp_case_then_statements",
  "sp_parameters", "sf_parameters", "sf_returned_type_clause",
  "package_implementation_item_declaration", "sp_package_function_body",
  "sp_package_procedure_body", "reserved_keyword_udt",
  "keyword_sp_block_section", "keyword_label", "keyword_sp_decl",
  "opt_truncate_table_storage_clause", "ident_for_loop_index",
  "row_field_name", "while_body", "$@262", "for_loop_statements",
  "sp_control_label", "sp_block_label", "sp_opt_default", "sp_opt_inout",
  "sp_proc_stmts1_implicit_block", "$@263", "keyword_directly_assignable",
  "ident_directly_assignable", "ident_cli_directly_assignable",
  "set_assign", "$@264", "$@265", "$@266", "labels_declaration_oracle",
  "label_declaration_oracle", "opt_exception_clause", "exception_handlers",
  "exception_handler", "$@267", "sp_no_param",
  "opt_sp_parenthesized_fdparam_list", "opt_sp_parenthesized_pdparam_list",
  "opt_trailing_sp_name", "opt_package_routine_end_name", "sp_tail_is",
  "sp_instr_addr", "sp_body", "$@268", "$@269", "$@270",
  "package_implementation_declare_section_list",
  "package_implementation_declare_section",
  "package_implementation_executable_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2",
  "package_specification_function", "$@271",
  "package_specification_procedure", "$@272",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@273",
  "package_implementation_procedure_body", "$@274",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "sp_decl_variable_list_anchored", "sp_param_name_and_mode", "sp_param",
  "sp_param_anchored", "sf_c_chistics_and_body_standalone", "$@275",
  "sp_tail_standalone", "$@276", "$@277", "create_routine", "$@278",
  "$@279", "$@280", "$@281", "$@282", "$@283", "opt_sp_decl_body_list",
  "sp_decl_body_list", "$@284", "sp_decl_non_handler_list",
  "sp_decl_handler_list", "opt_sp_decl_handler_list",
  "sp_decl_non_handler", "$@285", "sp_proc_stmt", "sp_labelable_stmt",
  "sp_proc_stmt_compound_ok", "sp_labeled_block", "$@286", "$@287",
  "$@288", "opt_not_atomic", "sp_unlabeled_block", "$@289", "$@290",
  "$@291", "sp_block_statements_and_exceptions", "$@292", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5700)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3850)

#define yytable_value_is_error(Yyn) \
  0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
   39638, -5700, -5700, 94843, -5700, -5700,  2921,  1488, 94843, -5700,
     892, -5700,  1321, -5700, -5700, -5700, -5700, -5700,  4001, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,   275,   344, -5700, -5700,
     347, -5700, -5700, -5700, -5700,   315, 80707,  1364,  1225, -5700,
   84427, -5700, -5700, -5700, -5700, 84427, -5700, -5700, 94843, -5700,
   -5700,  1739, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    1017, -5700,  1873,   665, -5700, -5700, -5700, -5700, -5700, -5700,
    1942, -5700, -5700, -5700, -5700, -5700, -5700,   344, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  1441, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  1705, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, 95587, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,   314, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  1144, -5700, -5700,
   -5700, -5700, -5700,   256, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,    25, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, 94843, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,   347, -5700, -5700, -5700,  1897, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  1441, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, 94843, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,   225, -5700,
   -5700,   277, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  1468, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3410,
   -5700, -5700,    84,  2346,  2423, -5700, -5700,  1838, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  3485, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,  2525, -5700, -5700, -5700, -5700,  3969,  2459, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, 47850, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,    84,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,   264, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,  1750, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, 96331, 94843,  1791,  1829, 94843,  2475, 81451,
    2475, -5700,    91, -5700, -5700,  2245, -5700,  1907, -5700,   344,
    2113,  1906,  2394,  2684,  1031,  2425, 82195,  1421,  2475, -5700,
    2696, -5700,  2475,  2484,  2475, -5700,  2475,  2475, -5700,  2475,
    2475,  2475, -5700, -5700,  1127,103771, 69547, -5700, -5700,  1444,
    2654, -5700, -5700, -5700, -5700, -5700, -5700,  8523,   344, 23570,
    2758, -5700, -5700,  2306,  4312,  2096, -5700,  2575, -5700, -5700,
   94843, -5700,  2475,  8523, -5700,  2575, 70291,  2893, 51581,  9322,
    2575,   344,  2666, -5700,  2074, -5700, -5700, -5700, -5700, -5700,
   -5700, 94843, -5700,  1441, -5700, -5700,  2543, -5700, -5700, 81451,
   -5700, -5700, -5700, -5700, -5700,  2818, 23570,   210,  2583, -5700,
   -5700,  2488, 48594, 81451,  2794,  2684,  2830, -5700,  1922,  1369,
   -5700,  2205,  2318,  2684,  1299,  2338,  2684,  2737,  2475,  2475,
   -5700, -5700,  3117,  3117,  3117,  2577,  3117, -5700,  3117,  2886,
    2257,   476, -5700, -5700,  2277, 94843,  2794, -5700,  2794, -5700,
    2934,  2794,  2794,  2421,  2950,  2957,    94,  2954,   251,   251,
    2245, 43386,  1626,  2813, -5700,  2886,  2653,  2339,  1952,  1952,
    1952,  2653,    84,  2653, -5700,  2996,  1907,  2937, 94843, -5700,
    3003, -5700,  2348, -5700, -5700, -5700, 94843, 94843,   228, -5700,
    2406, -5700,  2363,  1740, 71779, -5700,  3035, -5700, -5700, -5700,
   -5700, -5700, -5700,  2884,   683,  2524,  2749,  2441, -5700,  2926,
   81451, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, 94843,
    2405, -5700, -5700, -5700,  3091,  2394, -5700,  2936, -5700, -5700,
   -5700, -5700, 48594, -5700, -5700, -5700,103771, -5700, -5700, -5700,
    1164, 66571, -5700,  2418,  2769, -5700,  2454,  1378,  1716, -5700,
   -5700,  1827,  1831,  1859, -5700, -5700, -5700,  1863, -5700, -5700,
   -5700,103027,  1554,  2466, -5700, -5700,  3116, -5700, -5700, 85171,
     562, 94843,  3120, -5700, 94843, -5700, 94843, -5700, 81451, -5700,
   -5700, 94843,  2475,  2475, -5700, -5700,  3111, -5700,  2681,  2625,
    2135,  2507,  2820, -5700,  2714, -5700,  2516,  2596,  2734,  2534,
    2535,  2601,   187, -5700,  2545, -5700,  1459,  2999,   111,   152,
    3016,   168,   170,  3137,  3020,   188,  1066,   407,  2808,   461,
   -5700, -5700, -5700, -5700,  3076,  3175,  2608, -5700,  2600, -5700,
    3104,  2988,  1000, -5700, -5700,  1410,  3054,  1260, 48594,105941,
  104515, 82939,105941,105941,105941, -5700, -5700,   262, 94843,105228,
   94843,  5596, -5700, -5700, 41154, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, 94843, -5700, -5700, -5700, -5700, -5700,
   -5700,  2283,  1390,  8757, -5700,  2619, -5700, -5700, -5700, -5700,
   -5700, 85915, -5700,   207,   234,  3205, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, 29730,  2639,  2649,
    2652, 18950,  2665,  2668,  2671,  2682,  2689,  2507,  2507,  2507,
    2690,  2709,  2719,  2720,  2730,  2761,  2768, -5700,  2775,  2780,
    2789,  2795,  2804,  2805, 24340,  2833,  2834,  2837, 37380,  2852,
    2857,  2858,  2859, 23570,  2690,  2862,  2865, -5700,  2877,  2881,
    2908,  2912,  2922,  2935,  2942,  2946,  3432,  2955,  2960,  2966,
    2980, -5700,  2507,  2690,  2690,  2981,  2985,  2507,  2994,  3013,
    3014,  3017,  3018,  3021,  3022,  3042,  3044,  3045,  3055,  3056,
     214,  3060,  3071,  3072,  3079,  3080,  3082,  3084,  2729,  3092,
    3096,  3097,  2755,  3102,  3106,  3112,  3121,   299,  3125,  3146,
     301,  3147,  3150,  3151,  3156,  3158,  3160,  3163, 30500, 31270,
   29730, 16640, -5700, 94843, 97075, -5700, -5700,  2817,   734,  3260,
    1303, 29730, -5700, -5700, -5700,  3526, -5700,  3593, -5700, -5700,
   -5700, -5700,  3464,  3501, -5700,  3570, -5700, -5700,  3619,  3103,
   -5700,  3708, -5700, -5700, -5700, -5700, -5700,  3159, -5700,  3164,
    3879,  3936,  3170,  3171, -5700, -5700,  1833, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    3178,  3191, -5700,  3708, -5700, -5700, 74755, -5700,  3815, -5700,
   -5700,  2681,  3374,  3758, -5700,  3838, -5700,  3764, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    2893, -5700, -5700, 53091,  3713,   -70, -5700, -5700,   353, -5700,
     416,   422, 65083, -5700,   195, 65827,   429, 86659,  1326, -5700,
   72523, -5700,   439, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  3187, -5700,  3304,  3516,  3194,  3273,   431,
   -5700, -5700,   244,  1015,  3291,    92, -5700,    85, -5700,   431,
   -5700, 75499,  1235,  2557, -5700,  1021, -5700,  3855, -5700, -5700,
    3296,  3282,  3315, -5700,  2515, -5700,  2684, -5700,   354, -5700,
    1235,   431,  2557, -5700,  3489,  3573,  1085,  3516, -5700,   -44,
   -5700, -5700, -5700,  3860, -5700,  3218, -5700,  3830, -5700, 94843,
    1186, 48594, -5700, -5700, -5700, -5700,  3222, 48594, 48594,  1590,
     249,  2817,  3239, 23570, -5700, -5700,  4724, 55356,  3444,  2002,
     -56, -5700, -5700,  1873, 94843, -5700, -5700,  1067, -5700,  3667,
   -5700,  3261, -5700, 97819,   249,  3919, -5700, -5700, -5700,  1348,
    3655, -5700,  3266, -5700, -5700, -5700, -5700, 48594, 94843,  2684,
   -5700, -5700, -5700, -5700,  3271, -5700, -5700,  3480,  3359, -5700,
    3298, -5700, -5700,   203, -5700, -5700,  4059, -5700, 94843, -5700,
    2794, -5700, -5700,  2794, -5700, -5700, -5700,  2794,  2794,  2794,
   -5700, -5700,  2794,  2794,  3322, -5700,  3607,  3609,  2926, -5700,
    3292, 42642, 94843,  4066, -5700,  4441, -5700, -5700, -5700,  3293,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3864,  4051,
    4051, -5700, 53846, -5700, -5700,  3947,  2813,  1830,  3789, 56866,
    3940,  4032, 59131, -5700,  1235, -5700, -5700, -5700, -5700,  1387,
   94843, -5700,  1387,  1387, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,    84, -5700, -5700,  2113,
    3706, 73267, 94843,  2653,  2339, -5700,  4060,  4062, -5700, -5700,
   -5700,  2684,  1294,  3697, -5700, 94843, -5700, -5700, -5700,  2507,
    4103, -5700, -5700, -5700, -5700, -5700, 48594,  3530, 71779,  2475,
   -5700, -5700, -5700,   683, -5700,  1823, 94843, 48594,  3368, -5700,
   48594,  3324, 23570, -5700, -5700,  3805, 23570, -5700,  3693, -5700,
   -5700, 48594,  2440, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3340, -5700,
   -5700, -5700,  3340,    72, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  3341, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3901, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,  3341, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,   211, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  3735,  3062,  2894, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  3735, -5700,  2894, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,  3341, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  3344, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    3735, -5700,  2894, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,  3340, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,  3340, -5700, -5700,  2894,
    3340, -5700,  3347,  3341,  3735,  1354,  2782,  3341, -5700, -5700,
    3340,  3348,  3340,  3340,  3340,  3340, -5700,  3340,  4117,  3342,
   -5700,  3341, -5700, -5700, -5700, -5700, -5700, -5700,    89,  3340,
    3340,  3340,  3340,  3352,   216, -5700,   219,   224,   265,   267,
     272,   274, -5700, -5700, -5700, -5700,  4022, 94843,  4024, -5700,
    3800,  1554,  3363,  3364, -5700, 48594,  4105, 48594,  3375, -5700,
    4033,  2813, -5700, -5700,  3371, -5700, -5700,  4043, 94843, -5700,
   -5700, 76243, -5700, 74755, 48594,  3377, -5700, -5700,  3992,  3522,
   -5700, -5700, -5700, -5700, -5700, -5700,  3470, -5700, -5700,  3395,
   -5700, -5700, -5700, -5700,  3849, -5700,  3536, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, 74755, -5700, -5700,  3852,  3853, -5700,
   71779,  2995,  6687, 97075, -5700,  4049, -5700, -5700, -5700,  3860,
   -5700, -5700, 25110, -5700, 25880, -5700, -5700, -5700,  3685,  1513,
    1484, -5700, -5700, -5700, -5700, -5700, -5700,  4148, -5700, -5700,
   -5700, -5700, -5700, -5700,  3887, 94843,  3635,  4072,  4047, -5700,
   -5700, -5700, -5700, -5700,  3891,  3420,  4027,  3416, -5700, -5700,
     304, -5700,  3421, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, 48594, 54601, -5700, -5700, -5700,  3417, -5700,
   -5700, -5700,  3427, 29730, 29730, -5700,  4164,  4164,  4164, 23570,
    2856,  1939,  3790, 23570, 23570, 23570,  2554,  3435, -5700, -5700,
   -5700,   356, -5700, 23570, 23570, 38130,  3436,   507,  4317, 23570,
    4115,  4115, -5700, 23570, 23570, 16640,  4285, 23570, 23570, 23570,
   97075, 38130,  3889,  3437, -5700,  3438,  2664, 23570,  2669, 23570,
   -5700, -5700, 23570, 23570, 23570, 23570,  3442, 32040,  3446, 23570,
   23570,  3453,  3580,  4164,  4164,  2688,   444, -5700, -5700, -5700,
    4164,  4164, -5700, 23570, 23570, 17410, 23570, 23570,  2701, 23570,
   23570, 23570, 23570, 23570, 23570, -5700, 23570, 23570,  1108, 23570,
   23570, 48594, 23570, 23570,  4114, 48594, 23570, 23570,  4116, 23570,
   23570, 48594, 23570, -5700, 23570,  2945,  2945, -5700, 23570, 17410,
   23570,  3460, 38880, 23570, 23570, 23570, 24340, -5700, 24340, -5700,
   -5700,  3463,  2712,   324,    84, 23570,  3457, -5700, -5700, -5700,
   -5700, 23570, 23570, 23570, 32040, -5700, -5700, -5700,  1770, -5700,
   -5700, -5700, 26650, 32040,  3471, 32040, 32040,  4089,  2526, 32040,
   32040, 32040, 32040, 32040, 32040, 32040, 32810, 33580, 32040, 32040,
   32040, 32040, -5700, 81451, 29730, 50826,  3474,  4122, -5700, 76987,
   -5700,  2094,   699, -5700,  2684,  4312, 35120, -5700,  3479, -5700,
    3973, 48594, -5700,  3481,  4136, 74755, 71779,  2995,  3493, -5700,
    1837,   233, -5700, 76243, 94843, -5700, -5700, -5700,  4195, 23570,
   -5700, -5700, -5700, -5700, -5700,  3482,   471,  3486, -5700,  1469,
   -5700, -5700, -5700, -5700, -5700, 94843, -5700, 87403, 52336,  3581,
    4143,  3503,  2794, 88147, 94843, 48594, 94843, 98563, 94843, 94843,
   48594, 74755, 48594, -5700, -5700, -5700,  1025,   431, 94843,   431,
    2557,  1068,   431,  4127, -5700, -5700,  1768,  1768, -5700, -5700,
   -5700, -5700, -5700, -5700,   431, 94843, 94843,   431, 71779, -5700,
    2557,  1612, -5700,  3793,  3589, -5700, -5700, -5700,  3842, -5700,
   -5700,  4168,  3510, -5700,  3862, -5700,  3608, -5700, -5700, 48594,
   -5700, -5700,  2557, -5700,  2557,  2557,  4172,   431,   431,   431,
   -5700, 44130,  3517,  3524, -5700,  3514, -5700,  3527, -5700,  4158,
   -5700, -5700, -5700,  3886,  4311,  4171,  3533, -5700, -5700,  4106,
     865, -5700,  3961, -5700,  4088, -5700, 23570,  2817, 19720,  3818,
   -5700, -5700,  3819,  3820,  3821, -5700, -5700, -5700, -5700,  3972,
    3823, -5700,  2684,  3826, -5700, -5700, -5700,  3551, -5700, -5700,
   -5700, 81451, 35120, -5700,  3552, -5700,  3575, -5700,   226, -5700,
   -5700,  4219,  3668, 23570, -5700, -5700, 48594,  4056, -5700,  2684,
    1922, 94843, -5700, -5700,  4298, -5700,  1437,  4220, -5700, -5700,
    3698,  1299, -5700,  4220,  1527, -5700, -5700,  3117,  3776, -5700,
   -5700, -5700, 81451, -5700, -5700, -5700, -5700, -5700, -5700, 94843,
   -5700, 76243, 71779, 81451,  2794,  2794, -5700, 48594, -5700, -5700,
   -5700, 94843, 94843,  2794,  2794,  2794,  3629, -5700,  2781,  3597,
    3599,  3600,  3601,  2127,  3602, 44874,  2401,  6871,  4229,  4230,
   -5700,  4179,  2597,  4179, -5700, -5700, 44874, 44130,  3610,  4066,
   -5700, -5700, -5700, -5700, 81451,  3605, -5700, -5700,  3604, -5700,
   23570,  4327,  4261,  3947, -5700, -5700, 57621,  1541, 85915, -5700,
   -5700, -5700,  3962,  4149,    -7, -5700,  3611,  3741, -5700,  1008,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, 23570, -5700,
   -5700, -5700, -5700, -5700, -5700, 18180, -5700, -5700, -5700, -5700,
   -5700,   233,   259, -5700, -5700, -5700,  1464,  3989,  1849, -5700,
   -5700, 81451,  1849, -5700,  3630,  3928, -5700,  3938,    76, -5700,
   48594, -5700, -5700, -5700, -5700, -5700, 48594,  3631, -5700,  3825,
   94843,  2405,  3632,  3640,  2817,  4144, -5700,  3805, -5700,  2817,
   -5700, -5700,  8523,  4360,  5714,   161,  3696, -5700, -5700, -5700,
   -5700, -5700, 48594, -5700, -5700,  2393,  3646,  3041, -5700, -5700,
   -5700,  3735,   233,  3735, -5700, -5700,  3369,   971, -5700, -5700,
   -5700,   971, -5700,   464,  3713, 77731,  3735, -5700, -5700, -5700,
   -5700,  4120,  2894,  1661, 78475,   625,  4042, -5700, -5700, -5700,
     971,  3117, -5700, -5700,  3735, -5700, -5700, -5700,  3117,   971,
   -5700,  4124, -5700, -5700, -5700,   971,  3735,103771,   610,  2894,
   -5700, -5700,  2894,   971,   154, 94843,   610,  4198, -5700,  1661,
    4379,  2894,  3735,   971,  4409, -5700,   971, -5700, -5700,   395,
   -5700, -5700,  1554, -5700, -5700, -5700,  3864,  3736, -5700,  3375,
     621, 94843,  4314,  4218, -5700, -5700,  4237, 60619, -5700, -5700,
    4241,  3659, -5700, -5700,  3661,   411, 94843, 48594, 48594,  8523,
   -5700, -5700,  3665, -5700, -5700, -5700, -5700,  4162, -5700, -5700,
     193, -5700, 45618, 45618,  1459,  2999, -5700, -5700,  3016, -5700,
   -5700,  3020, -5700,  1066, -5700,  2808, -5700, -5700, -5700, -5700,
    2304, -5700, -5700, -5700,  4158, 23570, 50082,  2817, -5700, -5700,
   48594, -5700,  4304, -5700, -5700,101539,   169, -5700, -5700,   326,
   48594, -5700, -5700, -5700, -5700,  4297,  3804, 94843, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, 94843,  2405, -5700, 94843,103771,
    8523,  8523, -5700, 82195, -5700,  1619,  1837, -5700,  4412, 97075,
   23570, -5700,  3675, -5700,  3676,  3677,  2797,  4035, 23570, 23570,
   -5700,  3142,    77,   276, -5700,  3681,  3695, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  3682, -5700, -5700,   530,   543,
    3683, -5700, -5700, -5700,  3686,    84, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,  4341, -5700,   450, -5700,
   -5700, -5700, 23570,   568,  1268,  1269,  3701,   432,   477,  1318,
    3417,  2327,  3699, 38130, 97075,  4164,  3702,   531,  4164,  3703,
    1345,  1382,   662,  1361,  1588, -5700,   480, -5700,  1383,  1395,
   -5700, -5700,  3704,  3705,  4164,  3707, -5700,  3710,  3711,  3712,
    1471,   405,  3720, -5700, -5700, 20490, 21260, 22030,  3270,  3721,
   -5700, -5700,  1474,  1703,  4164,  3737,  1731,  1478,  1505, -5700,
    2392,  1547,  1603,  3739,  3239,  1835,  1886, -5700, -5700, -5700,
   -5700,  3691,  1910,  1917,  3692,  3740,  1946,  1974, 48594,  3744,
    3745,  2048, 48594,  1617,  2064,  3746,  1640,   765,  3748,  3751,
    2093,  3747,  1642, -5700, 97075, 94843,  3755,  3734,  1253,  3756,
    2116,  4285,  4285, -5700, 23570,  3761,   382, 97075,  2580,   510,
   -5700,  3260, -5700, -5700, -5700, -5700,   238, -5700,  3709,  3260,
    3715,  2931, 16640, -5700,  1452,  1873, 32040, 32040,  3766, 32040,
   32040,  1443,   552,   552,  3771,  3771,  1582,   508, 24340,  1443,
   24340,  1443,  3771,  3771,  3771, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  4266,  3770,  3772,  3780,  3781,   708,  3775,
   -5700, -5700, -5700, -5700, -5700, -5700,     5,  4107, -5700,  3899,
    1266, 23570, -5700,  3801,  4535,  4538,  4540, -5700, -5700, -5700,
   -5700, 74755, 74755,  3786, -5700,  1527,  4146,  4445, 76243,  4449,
   -5700,  3792, 45618, 45618, -5700,  3795, -5700, 23570,  3788,  3791,
    3796, 99307, -5700,  4456,   233, 79219,  2817, 74755,   729, -5700,
   94843, 94843, -5700, 86659,  4459,  1397,  4090, -5700,  3807,  3809,
   -5700,   233, -5700,  3806,  1638,   590, -5700,  3810,  3812, -5700,
   -5700, -5700, -5700, 23570,  3824, 94843, 94843, -5700, -5700, -5700,
   -5700, 94843, -5700, -5700, -5700, -5700, -5700, -5700,  2684, 23570,
   94843,   431, -5700, -5700, -5700,   431, 94843,   431, -5700,  2684,
    4477, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,   431, -5700, -5700, -5700, -5700, -5700,  3996,  1235,  2515,
    4127,  4220,  2557, 48594,   431,   431, 23570, -5700, -5700, -5700,
   -5700,  4354,  3864, 19720,  3832,  3839, -5700, -5700,  8523, 94843,
   97075,  4565, -5700, -5700,  4403, -5700, 81451, 88891, 48594, -5700,
   -5700, -5700,  2299, -5700, -5700, -5700, -5700, -5700,  2817,  2583,
    2720, -5700,  3841,  2817, -5700, -5700,  4531, -5700, -5700, -5700,
   -5700,  2684, -5700, -5700,  4789, -5700, 48594, -5700, -5700, 56111,
   56111,  2118, -5700,100051, -5700,  2684,  2817, 48594,  1472,   326,
   -5700,  4585, -5700, -5700,  3966, -5700, -5700, -5700,  3856, -5700,
    4273, -5700, -5700, -5700, -5700, -5700, -5700,  3857, -5700,  4512,
   -5700,  2170,   134, 94843,   423,    76, -5700, 94843, 94843, 48594,
   -5700, 94843,  2794, -5700, -5700,  2794, -5700, -5700, 48594, 94843,
   94843,  2794, 23570, 44874, -5700, -5700, -5700, -5700, -5700, 44874,
   -5700,  2134, -5700,  4065,  1988,  1988, -5700, -5700, -5700, -5700,
   -5700,  4489,  4179,  4179, 44874,  4493,  3587, -5700, 94843,  6656,
     408, -5700, 53846, 94843,  2817, 23570, -5700,  3893,  4261, -5700,
     243,  1142,  1008, -5700,  4145,   326, -5700, -5700, 59131,  4214,
   59131, 59131, 97075,  4110, 23570, -5700,  4537,  3871,  2817, -5700,
   29730,  2720, -5700,  2817, -5700, -5700, -5700,  2170,  2684, -5700,
     233,   233,  4104,  4396,  4400,  4015,  2684,  4401,  4402,  4411,
   -5700, -5700, -5700, -5700, -5700,  3988,   215,   469,  1325, 71779,
    4366,  1527,  4478,  3902, -5700, 48594,  4559, -5700, -5700, -5700,
   -5700, 23570, -5700, -5700, -5700, -5700,  5687, -5700,  3921,  3922,
    3925,  3926,  3927,  3929,  3932,  3934,  3935,  3939,  3944,  3948,
    3953,  3954,  3956,  3960,  3963,  3965,  3967,  3970,  3971,  3974,
    3975,  3976,  3979,   163, -5700, -5700,  3958, -5700, -5700, -5700,
   -5700, 94843,  4547,  3964,  3977,  3978,  3980, -5700, -5700, 94843,
   -5700,  2398,  4429,  4458, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, 79963,   233, -5700,
   -5700,  2443, -5700, -5700,  2468, -5700, -5700, -5700, -5700, -5700,
    2471, 68803, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
     610,   610,  3959, -5700,  3985, -5700, -5700, -5700, -5700, -5700,
    4379, -5700,  3968, -5700, 64339, -5700, -5700, -5700, -5700,  2987,
   -5700,  4330, -5700,  1988, -5700,  4460, 60619, -5700, 44130,  4184,
    4597, -5700, -5700,  3981, 48594, 76243, 74755, -5700, -5700, -5700,
   -5700,  3983,  1619,  7067, -5700, -5700,  4733, 71779,  4438, -5700,
    3982, -5700,  3984,  4487,  4495, -5700, 97075, -5700, -5700, -5700,
    2817, -5700, -5700,  3990, -5700, -5700,  4106,  4051, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  4025,  4274,  4392, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  4631, -5700, -5700, -5700, -5700,  2497,   352,
   -5700, -5700, -5700,105941,105941,105941, -5700,  4361, -5700,102283,
   23570, -5700,  1675, -5700, 23570, -5700, -5700, 23570, -5700,  2817,
    3563,106675, 78475, -5700, 78475,106675, 23570, -5700,  4003, -5700,
    4636,  4637, -5700, -5700, -5700, 23570, -5700, 23570, 23570,  1676,
   23570, 23570, 23570, 23570, -5700, 23570, -5700, 23570, 23570, -5700,
   32040, -5700,  4000,  4008, -5700, -5700,  4009, -5700, 23570, 23570,
   -5700, -5700, -5700, 23570, 23570, 23570, -5700, -5700,  4010, -5700,
   -5700, -5700, -5700, 23570, 23570, 23570, -5700, 23570,  3383, 23570,
    3411, 23570,  3505, 23570, -5700, 27420, -5700,  4014, -5700, -5700,
   23570, 23570, -5700, 23570, 23570, 23570, -5700, -5700, -5700, 23570,
   -5700,  4583, 23570, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, 23570, -5700,   474, 28190, -5700, 23570, 23570, 23570, -5700,
   -5700, 23570,  4011,  4016, -5700, 94843,  2378,  3484,   326,  4017,
   -5700, -5700,  4028,  4038,  3239, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,   507, 32040,   918, 32040,  1873,  3074, 16640, -5700,
    1525,  1873,  4285,  4285, 94843,  4740,  4029, -5700, 23570, 23570,
   17410, 23570, 97075, 23570,  4031,  4030, -5700,  4037, 32040, -5700,
   -5700,  4040, -5700,  2420,  3484,  4112,  4486, -5700,  2817, 35120,
    4539, -5700, 48594,  4541,  4586,  4250, -5700, 74755, 71779,  4707,
    4708, -5700,  2817, -5700,  4048, -5700, -5700, -5700,  4050, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,   652, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, 74755, -5700, -5700,
   -5700, -5700,   233, -5700,  4055,  4057, -5700, -5700,   233,   233,
   -5700, -5700, 40396, -5700, -5700,   960,  4350,  4613, -5700, -5700,
   94843,  1469, 94843, -5700, 52336, 52336, 89635,  2817,   980, -5700,
   -5700, -5700, -5700,  2817, -5700, -5700, -5700, -5700, -5700, -5700,
    4077, -5700, -5700, -5700,  4820, -5700, -5700,  4477, -5700,  2813,
    2557, -5700, -5700,  2817, 38880,  2232, -5700, -5700, -5700, 19720,
    8072, -5700,  4068,  4067,  4071, -5700, 48594,  4074,  4536, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  4082,
   -5700, -5700, 19720,  4108, -5700,  4220, -5700,  3983,  1795,  4109,
    4084, -5700, -5700, -5700, -5700, -5700, -5700,   322,   338,  2279,
    2813, -5700, -5700,   177, -5700, -5700, -5700, -5700, -5700,  1060,
   -5700, -5700,  4220, -5700,  1437,  2684,  4137,   293,   326,  4326,
   -5700, -5700,  2170,   157,   157,  4670,   134,  4543, -5700,  4366,
    4751,  4675,  4676, -5700,  3988, -5700, -5700, -5700, 94843, -5700,
    1228, -5700, -5700, -5700,  1365, -5700, 48594,  1690,  4441,  4441,
   -5700,  1988,   306, -5700, 32040,  4831, -5700,  4595, 44874,  4725,
    4726, -5700, 44874, -5700, -5700,  2502, -5700, -5700, 74011, -5700,
   -5700, -5700,  2817,   284,  2482, 23570, 94843, -5700,  3893,  4173,
   -5700, -5700,  1142, -5700, -5700, -5700, -5700, 59131, -5700, -5700,
   -5700,  1541,  4099,  2482,  1830,  4118, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, 79219, 74011, -5700,  4480,  4481,  2140, -5700,
   -5700, -5700, -5700,   233,   233, -5700,   392,   233, -5700, -5700,
     410, -5700, -5700,  1502,   409,  3988, -5700,  2684,  2684,  2684,
    2684,   326,  2684,  2684,  2521, -5700,   288, -5700, -5700, 81451,
   -5700,  4861,  4862, -5700,  4863, -5700, -5700,  1193, -5700,  3031,
     977, -5700,  1092, -5700,  4656, 94843,  4846,  3902, -5700,   403,
    2405,  2817, -5700,  4617,  4121,  4123,   326,  4126,   326,   326,
    2684,  2684,  4077,  2684,   326,  2684,  2684,  2684,  2684,  2684,
    2684,  2684,   326,  2684,  1379,  3172,   229,  2684,   326,  5714,
   -5700, -5700,  2522,  2288, -5700, 67315, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  4871, -5700, -5700, -5700, -5700, -5700,
    1661,  3117,  1661, -5700,103771, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, 23570, 23570, -5700, -5700, 94843,  4873,
   -5700, -5700, -5700, -5700,  3033, -5700, -5700, -5700,  4444, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, 44130,   644,
    2813, -5700, 58376,  4662,  4138, -5700,  1527, -5700, -5700,  2098,
    4735, -5700,  4129, -5700, -5700,   479,  4331,  4141, 61363, 71779,
   71779, -5700,  3105, -5700, 48594, -5700,  4767, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, 94843,  2405,  3992,
   -5700, -5700, -5700, -5700, -5700,  4566,105941,  4128,  2817, 23570,
    2817,  2817, 23570,  3340,  3340,  3341,  3352, -5700,  4822, -5700,
    4766,  3340,  3340, -5700,  3340,  4768,  3340,  3340, -5700,  4142,
   -5700, -5700,  4147,  4153,  4154,  3239, -5700, 23570, 23570,  2180,
     121,   121, 23570,  1706,  1726,  1124, -5700,  2198,  2244,  2278,
     498, 97075, -5700, -5700,  2374,  2464,  2498,  2510,  2513, -5700,
    1730,  3694,  1737,  2817, 23570,  2817, 23570,  2817, 23570,  2817,
   24340,  2539, -5700,  2587,  3843, -5700,  2588,  3882,  2564,  2576,
    2591, -5700,  2896,  4892,  2618, 24340,  2592,  2595,  1806,  1822,
    2616, 97075, 94843,  4134,  4150,  4150,   526, -5700,  4156, -5700,
   -5700, -5700,  4157, -5700, 23570, 23570,  4160,  3260, -5700, 23570,
    1873, 32040,  1198, 32040, -5700, -5700,  4266, -5700, 23570, -5700,
    4722,  4163,  3937,  4165,  4166,  3270,  4167,  4169,  4170,  4174,
    2817, -5700, -5700, 94843,  4175,  1303, -5700,  4077, -5700,  4793,
   -5700,  4883,  4180,  4189,  4181,  4040, -5700, 74755, -5700, 48594,
   -5700,  4830,  3661, -5700, 71779, 71779, -5700, 83683, -5700, 59875,
   94843, 94843, -5700, 23570, -5700, -5700,   729,  4931,  4934, -5700,
   -5700, -5700, -5700,   105,  4734, -5700, -5700, -5700, -5700, -5700,
     233, -5700,   233, -5700,  3812, -5700, -5700, -5700, -5700,  3243,
   -5700,  1235, -5700, -5700, -5700,   431,  4182, -5700,   233,  1247,
   -5700, 19720,  4185,  4186, -5700,  4798, -5700,   507,   328, -5700,
    3864, -5700,  4659, -5700, -5700,  4196, 90379, -5700,  4197, -5700,
   -5700,  4746, -5700, -5700,  4463, 56111, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  1235,  4246,  4430,
   -5700, -5700, -5700, -5700, -5700,  3625, -5700,  4294,  4295, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, 48594,  4785,
   71779,   977,  4582, 48594, 48594,  7013,  4269,  3988,  4208, 94843,
   -5700,  1877,  2684, -5700, -5700,  1228, -5700,  1877,  3902,  4209,
     711,  4209, -5700, -5700, -5700, -5700,  1303,  1988,  1988,  4455,
    4694, 44874, 44874,  4509,  4696, 23570,  4213, -5700, 94843, -5700,
    1519, -5700,  4619, -5700, -5700, 23570, -5700, -5700, -5700, -5700,
    2817,  4945,  4215, -5700, -5700, -5700, -5700, -5700, -5700, 23570,
   -5700, 57621, 23570,  4216,  4217, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,   474,   474, -5700, -5700,   474,   474, -5700, -5700,
   -5700, -5700,   474,   474, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,   215, -5700,  4968,  1288, -5700,  4794,
   -5700, -5700, -5700, -5700,  1091,   326,   326,   326,  3172,  2130,
   -5700,  3031,  2072,  4558, -5700,  8099,  1873,  2090,  4723,  2320,
   -5700,  2622, -5700,  4956, -5700,   364, -5700, -5700, -5700,   194,
     307, -5700,   378, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, 94843, -5700,  4799, -5700, -5700, -5700, -5700,  3348,   278,
   -5700, -5700,  4228, -5700, -5700, -5700, -5700,  2817,  2817, -5700,
   -5700, 64339, -5700, -5700,  2813, -5700, 94843,  4575,  4764, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, 23570, -5700,  4886, -5700,
   -5700, -5700, -5700,    76,    76, -5700, -5700, -5700, -5700,   328,
   -5700, -5700,  4767,  4517, -5700,  1780, 23570, -5700, -5700, -5700,
   -5700, -5700, -5700, 94843,  1124,  2817, -5700,  1661, -5700, -5700,
    3340, -5700,  1661, -5700, -5700, -5700, -5700, -5700, -5700,  1661,
   -5700, -5700, -5700, -5700,  4236,  4285,  4285, -5700,  4957,  4769,
    4855,  2621, 23570, 23570, -5700, 23570, -5700, -5700, -5700,   368,
    4240,  4713, -5700, -5700, -5700, -5700, -5700, -5700, 23570, 23570,
   23570,  2817,  2817,  2817,  4285, -5700, -5700,  2982, -5700, -5700,
  106675, -5700, -5700, -5700, -5700, -5700, -5700, -5700,   229,  4285,
   -5700, -5700, 23570, 23570, -5700, -5700, -5700, 94843,  3484,  4244,
    4525, -5700, -5700, -5700,  3484,  4387, -5700, -5700,  3484,   326,
   -5700, -5700, -5700,  2626,  3260, -5700, 23570,  1873,  4825,  4247,
    4967,  4251, -5700, -5700, -5700, -5700, -5700, -5700, 23570, 83683,
   -5700,  4253,  4248, -5700, -5700, -5700,  4691, 23570,  4870,  4823,
   -5700,  3484, 94843, -5700, -5700, -5700, 71779,  3792,  3792, 91123,
   -5700, -5700, -5700, -5700,  1708,   233,   233, -5700,  2817, -5700,
   -5700,  4257,  4258, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  1235, -5700,
   38880,  2813, 22800, -5700, -5700, -5700, 19720, -5700,  4259, 38880,
    4730, -5700, -5700, -5700,  4662,   231, -5700, -5700, -5700,  4659,
   -5700, 91867, -5700,  4262, -5700,  4263, -5700,  2034,  4598,  4875,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,  4267, -5700, -5700, -5700,
    4286,  4287,  4290, -5700,  4265, -5700, -5700, -5700, 48594, -5700,
   -5700,  4301, -5700, -5700, 41898,  4894,  4318,  4645, 48594,   233,
     233,   233,   233,   233,   233,   233,   233,   233,   233,  4648,
     233,   233,   233,   233,   233,   233,   233,   233, -5700,   233,
     233,  1026, 94843,   233,   233, -5700, -5700, -5700,  4850, -5700,
    6271, -5700,   233, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  1342,  4866, -5700, -5700,  1232,
   -5700, -5700,107418,  5017,  4288, -5700,  4827, -5700, -5700, -5700,
   -5700, -5700, -5700,  4404,  4827,  3902,   622, -5700, -5700, -5700,
    4777, -5700, -5700, -5700,  4778,  2817, 94843, -5700, -5700, -5700,
    1577,  2517,  4912,  2482,  4306, 94843,  2482,  1142,  1008,  2817,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,   331, -5700, 81451, -5700, -5700, -5700, -5700,
   -5700,  5054,  5060, -5700, -5700, -5700, -5700,  4498,   579,  3727,
    1820,  4876,  4710,  4878,  2508,  3477,   233,  4879,  5027, -5700,
    1222,   233,  4880,  4940,  4393,  4942,  4885, -5700,  4397,  4710,
    4888,  4514,  4891,  4893,  4895, -5700, -5700,  4269, -5700, -5700,
   -5700, -5700,   190, 46362, -5700, -5700, -5700, -5700, -5700,  4506,
   23570, 23570,  4908, 94843,  4910, -5700,  4729, -5700, 94843, -5700,
     507, -5700, -5700, -5700,  4632, -5700,  2634, -5700, -5700,  2695,
   -5700, -5700,  2704, -5700, -5700, -5700, -5700, -5700,  4864, 94843,
   -5700, -5700, -5700, -5700, -5700, -5700,  4991, -5700,  4681,  3493,
   -5700,   507,  2817,  4542,  4807,  4807, -5700, -5700, -5700,  4919,
   -5700, -5700, -5700, -5700,  4969,  2817,  2405,105941,  4700, -5700,
   -5700, -5700, -5700, -5700, -5700,  4344,  4345, 23570,  3117,  4855,
   59131,  4346, -5700, -5700,  2676,  1824,  2741,  4633,  4587, -5700,
    4519, -5700,  2686,  2817,  2817,  1916,  3341, -5700, -5700, -5700,
   -5700,  4982,  3340, -5700,  5067, -5700,  3340,  1661, -5700, -5700,
   -5700, -5700, -5700,  4357,  2742,  1926,  2721,  2733, -5700, -5700,
   -5700,  4358, -5700, -5700,   232, -5700,  4359, -5700,  2745,  5078,
    1775, 23570, -5700,  4362, -5700, -5700, 94843, -5700, -5700,  4285,
    1271, -5700,  2750, -5700, -5700, -5700,  4364,  3792, -5700, -5700,
   62107, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,  4220, -5700,  4237,  2720, -5700, -5700, -5700, -5700,  4738,
    4365,  4367, -5700, -5700, -5700,  4368,    84, 38880, -5700, -5700,
   64339, -5700, -5700,  4373,  4374, -5700, -5700, -5700, 90379, -5700,
    2751, -5700, -5700,  5100, 19720,  2684,  2684,  2684,  3468,  4378,
   -5700, 81451,  4380,  4382, 49338,  2294, 94843,  2759, -5700, -5700,
   -5700, -5700, -5700,  1962, -5700,  2086,  2794,  2299,  2299, -5700,
    4371, 48594, -5700,   233, -5700,   430,   460,   504,   520, -5700,
    4077,   326,   326,  2684,  2684,   233,   326, 81451,  2080,   326,
    4077,  4077,   523,  2684,  1855,   430, -5700, -5700, -5700,   326,
     430,   271, -5700, -5700,  8962, -5700, 71035,  4269, 94843,  3550,
   -5700, -5700,  2225,  4497, -5700, -5700, -5700,  4739,  1232, -5700,
   -5700, -5700,  4381, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    2122,107418,  1608, -5700, -5700, -5700,  4384, 94843, -5700, -5700,
    2684, -5700,  5116,  5139, -5700, -5700,  4795, 23570,  4391, 23570,
    4394,  2764, -5700,  2299, -5700,  2299, -5700,  1577,  5110,  5113,
    5062,  5115,  2517, -5700,  2027, -5700, -5700, -5700, -5700, -5700,
   -5700,  1142, -5700, -5700,  4406, -5700, -5700, -5700, -5700,  4741,
   -5700,  5154, -5700,  4859, 47106,  2794, -5700,   569,  4442, -5700,
   -5700, -5700,  5050,  3120,  3120,   347,  3120, 91867, 94843, 48594,
     408,   502,  5032,  2475,  1432,  4450,  4970,  3120,  3120, 92611,
     347, 38880, -5700, -5700, -5700,  3120, -5700,  3120, 48594, 93355,
     347, -5700, -5700, -5700, 94843, -5700,  3120,   347, -5700,   347,
     347, 91867, -5700,  8186, -5700, -5700, 41898,  2010, -5700,  2817,
    4285,  4803, -5700, -5700,  4527,  2684,  4776, -5700, -5700,  4890,
   -5700, 94843,   370, -5700,   326, -5700,   326, -5700,   326, -5700,
     281, -5700, -5700, 32040, -5700,  3795, -5700, -5700,    84, -5700,
   -5700,  2254, -5700, -5700,  4783,  4662,  4921, -5700, -5700, -5700,
  105941, -5700, -5700,  4422,  2482, -5700,  4425, -5700, -5700, -5700,
   -5700, 23570, -5700,  4664, -5700,  4771, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,  4077, -5700, -5700, -5700,
    4433, -5700,   326, -5700, 23570, -5700, -5700,  4434,  4012,  2482,
   -5700, -5700,  4533,  4486,  4431, -5700,  4823, 94843, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  4597, -5700, -5700, -5700, 38880,
   62851,  4439,  4447, -5700,   233, -5700,    83, -5700, 94843, -5700,
   -5700,  4077,  4808, -5700,  2800, -5700, -5700, -5700, -5700, 94843,
    4452,  4654, 94843, 94843, -5700, -5700,  4457, 94843, -5700, -5700,
   -5700, 41898,  4461,  5068,  5079,  2299, -5700,  2794,  5005, 49338,
   -5700,  2794,  2794, 68059, 94843,  4464,  2684, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,  4466, -5700, -5700, -5700,
   -5700, -5700,  2684, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  5189, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  4850,  4471,
    4470, -5700, -5700, -5700,  5138,  1877, -5700, -5700, -5700,  5044,
    2090, 94843,  4467, 94843,  4469, -5700, -5700,   383,   509, -5700,
   -5700, -5700, -5700, -5700,  1608, -5700, -5700, -5700,  4474, -5700,
   68803,  3550, 94843, -5700, 94843, -5700, -5700,  4479,  4483,  2817,
   94843,  2817, 94843, -5700,  5123,  5123, -5700,  3117,  3117,  5196,
    3117, -5700,  5200,  5203,  2027, -5700, -5700,  5238,   579,  4860,
    2072,  1873,   347,  1873,  5143, -5700, -5700, 94843, 49338, 91867,
   49338, -5700,  4985, -5700, 74011, 49338,  3120, 94843, -5700,  5146,
   -5700,  5117, 49338, 49338, -5700, -5700, 91867,  4490, -5700,  2482,
    2758, 94843, 49338, -5700, -5700, -5700,  3484,  4961, 49338, 91867,
   -5700, 91867, -5700,  3700,  4993,  3885, -5700,  4499,  4496, 94843,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  1298, -5700, -5700,
    2816, -5700, -5700, -5700, -5700, -5700, -5700, -5700,   167, 94843,
   -5700,   564, -5700,  4697, -5700,  2254, -5700, -5700, -5700, 48594,
   -5700, 23570, -5700, -5700,  2736, -5700, -5700,  4500, -5700,  4501,
    4099, -5700,  4488,  4638,  4535,  4538,  4540,  4687,  4849, -5700,
    4689, -5700,  3784,  4691,  4508, 32040, -5700, -5700,  1992, -5700,
   -5700, -5700, -5700, 97075, -5700, -5700,  4502, -5700, 38880, 19720,
   -5700, -5700, -5700,  4925, -5700,  2848,  2482,  4513, 94843,  4515,
    2867,  2870, 94843,  4518, -5700, 23570,  2794, -5700, -5700, 49338,
   48594, -5700,  4996,   742, 49338, 49338, -5700,  4511,  5225, -5700,
   -5700,  4516, -5700, -5700, 48594, -5700, -5700,   231,   271, -5700,
   94843, -5700, -5700, -5700,  4908, -5700, -5700, -5700, -5700, 94843,
   -5700,  4510, -5700,  4520,  4877, -5700, -5700,  1877, -5700, -5700,
   -5700, -5700, -5700,100795,  7559,  2875,  2915,  2532, -5700, -5700,
   -5700, -5700,  3117, -5700,  3117,  3117, -5700,  4521, -5700, -5700,
   -5700,  5183, -5700,  5188, -5700,   483,   459, -5700, 49338,  2393,
    5028,  5025,  5240, -5700, 49338,  4374, 94843, -5700, -5700,  2098,
   -5700, 38880, -5700, -5700,  5029,  5033, -5700,  5034,  2010, -5700,
   94843, -5700, -5700, -5700,  4627, -5700,  8523,  4737,  5247,  5250,
   -5700, 94843, 94099, -5700, -5700,  5308, 32040, -5700, -5700,  5164,
   -5700,  3864,  2482, -5700, -5700, -5700,   144, -5700,  5275,  1874,
   -5700, -5700,  1281, -5700, -5700, -5700, -5700, 94843,  4544,  4628,
   -5700, -5700,  4616, -5700, -5700,  3362, -5700,    87, 63595, -5700,
   -5700, -5700, -5700,  1527, 94843, -5700,  5301,  4546,   215,  1527,
    1527,  4549, 94843,  2740, 49338,  4996,  1747,  4550,   157, -5700,
     157, -5700, -5700,  3133, 68803, -5700, -5700,  2976, 94843,  4552,
    5320, -5700, -5700, 94843, 82195, -5700,  2320, -5700,  4208,  4209,
   -5700, -5700, -5700, -5700, -5700, -5700, 94843, -5700,  5121,  2920,
   -5700, -5700, -5700, -5700, -5700,  5276, -5700,  5277,  4557,  4560,
   -5700, -5700, -5700, -5700, 49338,   -35, -5700, -5700,  5201, -5700,
    5245,  5249,  2010, -5700, 48594,  5129, 79219, -5700, -5700, -5700,
     347, -5700, 94843, 49338, 48594, -5700, -5700,  4374,  1060, 23570,
    4922,  5343, -5700,  4772,  4773, -5700, -5700,  2924, -5700, -5700,
    4626,  1303,  5056, -5700, -5700, -5700,  4488, -5700, -5700,  4706,
     388, -5700,  2933, -5700, -5700, -5700,  3484, -5700,  4577, -5700,
    4944,   233,   233,  4950,   233,   233,   233,   233,  4580,  3362,
   -5700, -5700, -5700,  4928, -5700, -5700, -5700,  2965,  2482,  4588,
   94843,  4589,  2944,  2381,  2246, 94843,  4584, -5700, -5700, -5700,
     157, 94843,  5194, -5700,  4593, -5700,  4594,  4599, -5700, -5700,
    5209,  2684, -5700,  4674, -5700, -5700,  3133, -5700, -5700, -5700,
    4639,  5220,  5180, -5700, 81451, 34350, -5700,  5088, -5700,  5046,
    5288, -5700,  5335,  3346, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, 48594,  4729, -5700, -5700,  4827, -5700, -5700, -5700,
    5343,   622, -5700,100795,  9774, -5700, -5700, 90379, 90379,  5225,
    3484,  4823, -5700, -5700, -5700, 34350, -5700,    99,  4823, -5700,
   -5700, -5700, -5700,    99,  5237, -5700,  2817, 23570, -5700, -5700,
   -5700, -5700, -5700, -5700, 94099, -5700, -5700,   408, -5700, -5700,
   -5700, -5700, -5700, 94843, -5700,  4609, -5700, -5700,   117,   233,
    2684,  2684,   233,  3875,  3875,  3484, 81451,  4701, -5700, -5700,
     233,   157,  2684,   233,   157, -5700, -5700,  1278,  2965, -5700,
   -5700, -5700, -5700, -5700, -5700,  -108,  1527, -5700,  4810,  1278,
    2381, -5700, -5700,  1278,  2246, -5700, -5700,  4620, 94843,  4622,
    4624, -5700,  2956, -5700,  1745,  5205, 94843,  4630, 94843, 94843,
   -5700, -5700, -5700, -5700, -5700, -5700,  4977, -5700,  4634,  4635,
    3172,  3172, 16640, -5700, -5700, -5700, -5700, -5700, -5700,  5211,
   -5700,  4679,   819,   233, -5700,  4013,  5058,  5289,  4998,  3550,
   -5700, 94843, -5700, 94843, -5700, -5700, -5700, -5700,  5208, -5700,
   -5700, -5700, -5700, -5700,  1981,  4640,  2968, -5700, -5700,  2973,
   -5700,  4682,  4684, -5700,    99, -5700,  4642,  2817, -5700, 38880,
   -5700,  4628, -5700, -5700,  2974, -5700, 28960, -5700, -5700, -5700,
    2684, -5700, -5700,  2684, -5700, -5700, -5700, -5700, -5700,  2983,
   -5700, 81451, -5700, -5700,   326, -5700, -5700,  5259,  5095, -5700,
    4851,  2965,  2930, -5700, -5700, -5700, -5700, -5700,  4650, 94843,
   94843,  4652, -5700, 94843, -5700, -5700, -5700,  1787, -5700,  2990,
   94843,  3000,  3007, -5700, -5700, -5700, -5700,  4655,  4657, -5700,
     140, -5700, -5700,  4013, -5700, -5700, -5700,  3550, -5700, -5700,
   -5700, -5700,  4795, -5700,  5223,   622, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  4823,  4658, -5700,   233,  5187, -5700,
   -5700,  4609, -5700,  4661, -5700,  1303, -5700, -5700, 81451, -5700,
    4701, -5700, -5700, -5700, -5700, -5700, -5700,  1278, -5700, -5700,
    3038,  4546, 94843, -5700,  1374,  1374,  2965,  3049,  2381,  2246,
   -5700,   473, -5700,  3396,  3396,  1368, -5700, -5700, -5700, -5700,
     622,   415, -5700,  3058, 38880, 19720,  4962,  4619, -5700, 28960,
    4665,  3714, -5700, -5700, -5700,  5005,  4667,  4546, -5700, -5700,
     505,  5125,  5252,  5256, -5700,  2965, -5700, -5700, -5700,  4669,
   -5700,  3396, -5700, -5700, -5700, -5700, -5700,  1549,  5021,  5348,
   -5700,  3993, -5700, -5700, -5700,  5260,   415,   415, -5700, -5700,
   -5700,  5397,  4912, -5700, -5700, -5700,  3714, -5700, -5700,  2965,
    4680, -5700, -5700, -5700,  5170,  5366, -5700, -5700, -5700, -5700,
    1549, -5700, -5700,  4819, -5700, -5700, -5700, -5700, -5700, -5700,
    1215,  5266, -5700,  5267, -5700,  3117,  5328, -5700, -5700,  2965,
    1374,  1374, -5700, -5700, -5700, -5700,  5356,  5041, -5700,  5445,
    4693, -5700, -5700, -5700,  1771,  2252, 35875,  5219, -5700, -5700,
   81451, -5700, -5700, -5700, -5700, 81451, -5700,  3065, -5700, -5700,
   38880, -5700, -5700,  8523, -5700, -5700, 36630,  4695, -5700,   233,
   -5700,  5343, -5700, 38880, -5700, -5700, -5700, 19720, -5700, -5700
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
       0,  3647,     2,     0,  2520,  2521,  1026,  2313,     0,   436,
       0,  1258,   618,  2763,  3846,  2160,  2307,  2306,  2081,  2778,
     476,   220,  2826,   382,  2083,  2380,     0,     0,   472,  2879,
    1274,  2896,   764,   502,  2903,     0,   326,     0,     0,   479,
     324,   220,  1323,  3280,  2207,     0,  3387,  2147,     0,  1321,
     474,  2478,  2731,  2776,  2777,  2806,  2639,  2897,  2920,  2948,
    2086,  2716,  2715,  2717,  3020,  2718,  2719,  2720,  2721,  2722,
    3021,  2614,  2723,  2724,  2725,  2727,  2726,  2728,  2729,  3022,
    2615,  3544,  3648,  2616,  2688,  2730,  2690,  2689,  2732,  2617,
    2618,  2733,  2734,  2735,  2737,  2736,  2620,  2619,  2738,  2740,
    2739,  2691,  2692,  2741,  3023,  2742,  2744,  2621,  3018,  2622,
    2623,  2624,  2743,  2625,  2745,  3549,  2746,  2747,  2626,  2748,
    2749,  2750,  2751,  2753,  2752,  2754,  2755,  2757,  2758,  2759,
    2756,  2760,  2761,  2764,  2762,  2694,  2693,  3024,  2627,  2765,
    2766,  2767,  2768,  2770,  2771,  2769,  2772,  2053,  2773,  2774,
    2775,  2783,  2784,  2786,  2785,  2695,  2787,  2788,  2789,  2791,
    2790,  2792,  2794,  2628,  2629,  2630,  2793,  2795,  2779,  2780,
    2781,  2782,  2797,  2796,  2798,  2799,  2800,  2696,  1274,  2632,
    3017,  2801,  2802,  3709,  2803,  2804,  3025,  2633,  2685,  2805,
    3389,  2808,  2807,    85,  2809,  2635,  2810,  3026,  3027,  2811,
    2812,  2814,  2816,  2813,  2817,  2818,  2824,  2636,  2815,  2819,
    2820,  2821,  2822,  2823,  2825,  2697,  2827,  2828,  3028,  3029,
    2829,  2830,  2831,  2832,  2686,  2833,  2834,  2835,  2836,  2849,
    2850,  2840,  2841,  2843,  2844,  2847,  2842,  2848,  2853,  2852,
    2854,  2855,  2856,  2857,  2858,  2851,  2838,  2845,  2846,  2839,
    2859,  2860,  2837,  2861,  2863,  2862,  2864,  2698,  2865,  2866,
    2867,  2868,  2869,  3030,  2870,  2871,  2873,  2872,  2874,  3031,
    2875,  2876,  2877,  2682,  2878,  2699,  2700,  2880,  2881,  3032,
    2882,  2883,  2888,  2889,  2890,  2885,  2884,  2886,  2887,  2701,
    2702,  2703,  2891,  2892,  2893,  2895,  2894,  2638,  2637,  3033,
    2640,  2898,  2899,  2641,  2900,  2902,  2901,  2684,  2642,  2904,
    2905,  2907,  2906,  2643,  2644,  2645,  2908,  2909,  2910,  2911,
    2912,  2913,  2914,  2915,  2916,  2917,  2918,  2919,  2704,  2705,
    2921,  2922,  2923,  2925,  2924,  2926,  2927,  2931,  2928,  2929,
    2930,  2932,  2646,  2933,  1274,  2934,  2935,  2936,  2647,  2938,
    2937,  2648,  2939,  2940,  2941,  2942,  2943,  2683,  3549,  2944,
    2945,  2947,  2706,  2946,  2949,  2950,     0,  2951,  2952,  3034,
    2649,  2953,  2954,  2707,  2687,  2650,  3035,  2956,  2392,  2714,
    2955,  2957,  2652,  2653,  2958,  2959,  2960,  2651,  2961,  2654,
    3036,  2962,  2964,  2963,  2965,  2966,  2967,  2968,  2655,  2969,
    2970,  2656,  2971,  2657,  2972,  2973,  3037,  2974,  2976,  2975,
    2977,  2978,  2979,  2980,  2981,  2982,  2984,  2986,  2985,  2983,
    2987,  2988,  2708,  2989,  2658,  2709,  3039,  3040,  2710,  2990,
    2991,  2992,  2993,  3038,  2187,  2994,  2995,  2661,  2996,  2997,
    2999,  2998,  2659,  2660,  3000,  3001,  2665,  3041,  3002,  3008,
    3042,  2711,  2712,  3003,  3004,  3015,  3005,  3007,  3006,  3010,
    3009,  3016,  3043,  3710,  2662,  3011,  3012,  2663,  3013,  2664,
    3014,  2713,     0,     0,     3,  3649,    22,     0,    45,    27,
      33,    17,    21,  2069,    16,    47,    60,    53,    30,  3833,
    3834,  3836,    43,  3580,    42,    11,    63,    64,    19,    50,
      12,    15,    18,    41,    49,    37,    44,    57,    58,  1344,
    1320,  1348,  1319,  1315,  1311,  1330,  1331,  1332,  1338,    25,
      26,    34,    51,    68,    23,    65,    61,    24,  2313,    13,
      28,    29,    14,    52,    46,    38,    62,    69,    39,     0,
    3713,  3707,  3705,  3708,  3703,  3704,  3019,  2613,  3706,    59,
      40,    67,    32,    54,    31,     9,    10,    20,    55,    56,
      48,    70,    35,    66,    36,     8,  3714,     0,  3650,   168,
    3546,  3835,  2578,  2577,  2615,  3667,  2616,  2618,  2669,  2619,
    2672,  2673,  2666,  2627,  2674,  3668,  2630,  2631,  2670,  2575,
    2633,  2675,  2634,  2636,  2667,  2668,  2676,  2671,  2645,  2677,
    2647,  2678,  2679,  2680,  2655,  2656,  2681,  2660,  2576,  2664,
    2525,  2541,     0,  2542,  2572,  2570,  2574,  2568,  2573,  2566,
    2567,  2571,  2569,  1070,     0,     0,     0,     0,  2079,     0,
    2079,  1164,  1389,  3578,  3579,  3580,  1275,     0,  1276,     0,
       0,   250,   406,   131,     0,     0,  3648,  2182,  2079,  2057,
     227,   224,  2079,   228,  2079,   223,  2079,  2079,  2082,  2079,
    2079,  2079,   225,   226,     0,     0,     0,   406,  2089,  2382,
       0,  2402,  2403,  2397,  3377,  3378,  3372,   384,     0,     0,
       0,  2280,  2279,     0,     0,   311,   323,   326,   319,   322,
       0,   220,  2079,   384,   325,   326,     0,  1353,     0,  2285,
     326,     0,  2158,  2396,     0,   406,  2479,  2476,  2089,  2353,
    2355,     0,  2351,  3549,  1465,  1464,     0,  3842,  3844,     0,
    2531,  1253,  1285,  1210,  3550,  3551,     0,    77,    80,  2319,
     349,     0,     0,     0,   616,     0,     0,  1218,     0,  3551,
    3561,  2394,     0,   131,  1189,     0,   131,  2190,  2079,  2079,
    3630,  3631,     0,     0,     0,  3625,     0,  3632,     0,  1348,
       0,  1334,     1,     5,     0,     0,   616,   980,   616,   981,
       0,   616,   616,     0,     0,     0,     0,  3585,  3578,  3579,
    3580,     0,  2039,  1894,  1349,  1348,  1986,  1990,  3566,  3566,
    3566,     0,     0,  1986,  1339,  2781,  3017,  2902,     0,  2298,
    2312,  2296,  2514,  1317,  1313,  3715,     0,     0,  2625,  1029,
    1071,  1034,   234,     0,     0,  1036,     0,  1047,  2547,  2546,
    2545,  1044,   220,     0,  1166,     0,     0,     0,  3586,  3585,
       0,  1230,  2300,  2301,  2302,  2303,  2304,  2305,  2308,     0,
     256,   406,   438,  1392,   449,   440,   443,     0,   132,   133,
    1256,  1259,     0,   619,   302,   304,     0,  3684,   301,   303,
    3683,     0,  3811,     0,     0,   380,   289,   378,  3680,  3677,
    3682,  3678,  3681,  3679,  3800,   379,  3712,     0,   293,  3847,
    3801,  3802,  3804,     0,  2186,  2185,     0,  2184,  2161,     0,
    2182,     0,  2077,   229,     0,   230,     0,   220,     0,   220,
    2062,     0,  2079,  2079,   477,  3711,     0,  3688,  3437,  3455,
    3456,  1406,  3452,  3457,     0,  3454,  3449,     0,     0,  3451,
    3448,     0,     0,  3476,  3450,  3453,  2616,  2749,  2790,  2630,
    2798,  2799,  2912,  2916,  2921,  2932,  2936,  2680,  2652,  2977,
    3430,  3418,  3432,  3431,     0,     0,  3435,  3440,     0,  3439,
       0,     0,  2091,  2383,  2384,  2388,     0,  2406,     0,     0,
     397,     0,     0,     0,     0,  3832,   386,   387,     0,   391,
       0,   384,  3830,  3822,     0,   406,  3829,  3824,  3823,  3825,
    3826,  3827,  3828,   417,     0,   418,   419,  3831,   473,  3818,
    3819,     0,     0,   384,  3721,     0,  3820,  3816,  3817,  1272,
    1698,     0,  2453,  2522,  2523,     0,  2466,  2471,  2472,  2464,
    2465,  2469,  2445,  2468,  2444,  2470,  1467,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1406,  1406,  1406,
    1403,     0,     0,     0,     0,     0,     0,  2462,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1403,     0,     0,  2461,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1596,  2463,  1406,  1403,  1403,     0,     0,  1406,     0,     0,
       0,  3020,  2614,  3022,  2669,  2621,  2622,  2623,  2624,  2666,
    2693,  3024,  3025,  3026,  3028,  3029,  3030,  3031,  2881,  3032,
    3033,  2684,  2910,  2706,  3034,  3035,  3037,  2709,  3039,  3040,
    2710,  3038,  2681,  3041,  3042,  3043,  2662,  2713,     0,     0,
       0,     0,  1466,     0,     0,  1346,  1542,   765,  1412,  1424,
    1440,     0,  1540,  1539,  1543,  1545,  1551,  1459,  1572,  1511,
    1512,  1514,  1513,  1518,  1519,     0,  1674,  1520,     0,     0,
    1517,  2458,  1516,  1515,  2459,  2460,  1510,  2500,  2530,     0,
       0,  2524,  3019,  2613,   504,   503,     0,   345,   338,   333,
     341,   335,   337,   336,   342,   343,   344,   339,   334,   340,
     327,     0,   312,     0,   320,  3562,     0,  1277,   384,   480,
     346,  3437,  2717,  2916,  3410,     0,  3417,     0,  3577,  3571,
    3574,  3573,  3569,  3572,  3570,  3575,  1374,  3576,  1373,  1324,
    1354,  1371,  1372,     0,     0,     0,  2603,  2602,   900,  2600,
    3301,  3302,     0,  2604,     0,     0,  3303,  2969,  2990,  2601,
       0,  2536,     0,  2537,  2597,  2595,  2599,  2598,  2592,  2593,
    2596,  3281,  3286,  3282,  2594,     0,  2313,     0,     0,  2293,
     978,   977,     0,     0,     0,     0,  2229,     0,   900,  2293,
    2230,     0,  1951,  2283,  2286,     0,  3305,  2243,   979,  3306,
    2279,     0,  2215,  2231,  2192,  2236,   131,  3307,   131,  2282,
    1951,  2293,     0,  2208,     0,     0,     0,  2313,  1388,     0,
     321,  3388,  2159,  1162,  2127,  1322,  2113,     0,   475,     0,
    2094,     0,  2352,  3545,  3843,  3741,     0,     0,     0,     0,
    3554,  1740,  2054,     0,    81,    76,     0,     0,     0,     0,
    2519,  3390,    86,     0,     0,  3644,    74,     0,  2370,     0,
    2368,  2365,  2367,     0,  3554,     0,  2393,  1196,  1196,     0,
       0,  1188,  1190,  1191,  1196,  1196,  2191,     0,     0,     0,
    2452,  2450,  2451,  2532,  3627,  2449,  2448,  3636,  3638,  3621,
       0,  3624,  3623,  3633,  1337,  1336,     6,    71,     0,   142,
     616,   220,   220,   616,   167,   148,   151,   616,   616,   616,
     160,   162,   616,   616,     0,   222,     0,     0,  3585,  1352,
    2826,     0,     0,  1364,  1350,  1788,  1351,  1820,  1790,  1760,
    1751,  1750,  1816,  1817,  1819,  1818,  1821,  1823,  1813,     0,
       0,  2052,     0,  2047,  1895,  1900,  1894,     0,     0,     0,
       0,     0,     0,  1985,  1951,  1994,  1956,  1987,  1316,  1983,
       0,  1312,  1377,  1377,  3568,  3567,  3565,  3564,  3563,  1988,
    1335,  1343,  1341,  1342,  1989,  1333,     0,  2310,  2516,     0,
       0,  2315,     0,  1986,  1990,  1391,     0,     0,  2118,  2117,
    2120,     0,   914,     0,   235,     0,  3583,  3584,  3582,  1406,
    2548,  2551,  3581,  2552,   235,  2080,     0,     0,     0,  2079,
    1170,  1171,  1165,  1167,  1169,     0,     0,     0,     0,  2314,
       0,   252,   258,   251,   447,     0,     0,  3701,     0,   444,
      87,     0,  1260,  2070,  2072,  3814,  3044,  3045,  3046,  3047,
    3048,  3049,  3051,  3052,  3050,  3053,  3054,   844,   867,  3055,
    3056,  3057,   867,   884,  3058,  3059,  3060,  3061,  3062,  3063,
    3064,  3065,   830,  3066,  3067,  3068,  3069,  3070,  3071,  3072,
    3073,  3074,  3075,  3076,  3078,  3077,  3079,  3080,  3081,  3082,
    3083,  3084,  3085,  3086,   850,  3087,  3088,  3089,  3090,  3091,
    3092,  3094,  3093,  3095,  3096,  3097,  3098,   846,  3099,  3100,
    3101,  3103,  3102,  3104,  3105,  3106,  3107,  3108,  3109,  3110,
    3111,  3112,   850,  3113,  3114,  3115,  3116,  3117,  3119,  3118,
    3122,  3123,  3124,  3125,  3126,  3127,  3128,  3129,  3130,  3131,
    3132,  3133,  3134,  3135,  3136,  3137,   840,  3138,  3139,  3140,
    3141,  3142,  3143,  3120,  3144,  3121,  3145,  3146,  3147,  3148,
    3149,  3150,  3151,  3152,  3153,   884,   796,   796,  3154,  3155,
    3156,  3157,  3158,  3159,  3160,   884,   843,   796,  3163,  3164,
    3161,  3162,  3165,  3166,  3167,  3168,  3169,  3171,  3170,  3174,
    3172,  3173,   850,  3175,  3176,  3177,  3178,  3179,  3180,  3181,
    3182,  3183,  3184,  3185,  3186,  3187,  3189,  3190,  3188,  3191,
    3192,  3193,  3194,  3195,  3196,  3197,  3198,  3199,  3200,  3201,
    3202,   845,  3203,  3205,  3204,  3206,  3207,  3208,  3209,  3211,
    3212,  3213,  3214,  3215,  3216,  3217,  3218,  3221,  3219,  3220,
    3222,  3223,  3224,  3225,  3226,     0,  3227,  3228,   842,  3229,
    3230,  3234,  3231,  3235,  3232,  3236,  3233,  3237,  3238,  3239,
    3240,  3241,  3242,  3243,  3244,  3246,  3247,  3248,  3249,  3250,
     884,   841,   796,  3251,  3252,  3253,  3255,  3256,  3257,  3258,
    3259,  3260,  3261,  3262,  3263,  3264,  3265,  3266,  3268,  3269,
    3267,   867,   834,  3270,  3272,  3271,  3273,  3274,  3275,  3276,
    3277,  3278,  3279,  3210,  3245,  3254,   867,   790,   791,   796,
     867,   809,     0,   850,   884,     0,   831,   850,   836,  2612,
     867,     0,   867,   867,   867,   867,  3683,   867,     0,   282,
     290,   850,   774,   780,   782,   781,   783,   784,   867,   867,
     867,   867,   867,   871,   777,   779,  2605,  2606,  2607,  2608,
    2610,  2611,  3666,   778,  2609,  3807,     0,     0,     0,  3813,
       0,  3648,     0,     0,  3805,     0,  2162,     0,  2171,  2074,
    1362,  1894,  2164,  2076,  2180,  2183,  2059,     0,     0,  2065,
    2064,     0,  2066,     0,     0,   232,  2067,  2055,     0,   453,
     455,  3438,  3436,  3473,  3472,  3477,     0,  3474,  3470,     0,
    3429,  3478,  3463,  3467,     0,  3479,     0,  3464,  3471,  3485,
    3484,  3486,  3481,  3480,     0,  3483,  3469,     0,  3468,  3489,
       0,  3433,     0,     0,   429,     0,  2096,  2097,  2093,  1162,
    2092,  2389,     0,  2381,     0,  1295,  2408,  2407,  2404,  1886,
    3374,  3379,  3676,  3675,  3674,  3673,  2543,     0,  3670,  3672,
    3669,  3671,  2544,   406,   398,     0,     0,  2881,     0,   405,
     404,   403,   426,   406,   392,   415,     0,     0,  3651,   385,
    3652,   388,   424,   427,   466,   462,   470,   464,  3839,  3837,
    3722,  3821,   280,     0,     0,  2522,  2523,  2455,  2454,  2524,
    2446,  2467,     0,     0,     0,  1546,  1892,  1892,  1892,     0,
       0,  1748,     0,     0,     0,     0,  1892,     0,  1584,  1558,
    1557,     0,  1585,     0,     0,     0,     0,     0,     0,     0,
    1704,  1704,  1670,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1742,  1744,  2500,  1892,     0,  1892,     0,
    1411,  1590,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1892,  1892,  1892,     0,  1602,  1604,  1603,
    1892,  1892,  1592,     0,     0,     0,     0,     0,  1892,     0,
       0,     0,     0,     0,  1738,  2473,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1738,     0,     0,     0,
       0,     0,     0,  2475,     0,     0,     0,  2474,     0,     0,
       0,     0,     0,     0,  1738,     0,     0,  1548,     0,  1547,
    1549,     0,  1346,   766,     0,     0,     0,  1463,  1461,  1462,
    1460,     0,     0,     0,     0,  1469,  1471,  1473,     0,  1468,
    1470,  1472,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1550,     0,     0,     0,     0,     0,  2447,     0,
    1623,     0,   516,  2378,     0,     0,     0,   310,  1279,  2553,
       0,     0,   406,  3436,     0,     0,     0,  3433,  1389,  1370,
    3308,     0,   899,     0,     0,   902,   904,   903,  3340,     0,
     901,  3349,  3347,  3345,  3344,     0,     0,  3288,  3290,     0,
     908,   910,   909,  3338,   907,     0,  3324,     0,     0,     0,
       0,     0,   616,     0,     0,     0,     0,     0,     0,     0,
       0,  2260,     0,  1388,  1388,  2209,     0,  2293,     0,  2293,
    2283,     0,  2293,  2289,  2249,  2242,     0,     0,   677,  1968,
    1952,  2235,  2287,  2288,  2293,     0,     0,  2293,     0,  2250,
    2283,  2293,  2204,     0,     0,  2196,  2201,  2197,     0,  2203,
    2202,  2205,  2193,  2194,     0,  2222,     0,  2234,  2241,     0,
    2221,  2228,     0,  2239,  2283,  2283,     0,  2293,  2293,  2293,
    1163,     0,  1389,     0,  3690,  2477,  2480,  2486,  2492,  2098,
    2095,  2354,   278,     0,     0,     0,  1287,  1289,  1288,  1305,
    1212,  3553,     0,  3555,     0,  3557,     0,    78,     0,     0,
    2346,  2344,     0,     0,     0,  2338,  2340,  2343,  2339,     0,
       0,  2345,   131,     0,  2341,  2347,  2320,  2323,  2330,  1388,
    2321,     0,     0,   347,   350,   352,     0,   355,  1886,  3393,
    3392,     0,     0,     0,  1216,  1219,     0,  2375,  2372,   131,
       0,  2679,  3560,  3558,     0,  1184,  1200,   134,  1194,  1195,
       0,     0,  1187,   134,  3374,  3645,  3646,     0,     0,  3622,
    3639,  3620,     0,  3634,  3635,  3619,     7,     4,   154,     0,
     145,     0,     0,     0,   616,   616,   137,     0,  3788,  1389,
    1389,     0,     0,   616,   616,   616,     0,  1785,     0,  1751,
    1816,  1817,  1819,     0,  1818,     0,     0,  1886,     0,     0,
    1808,  1834,     0,  1834,  1810,  1811,     0,     0,     0,  1364,
    1814,  2533,  2048,  2051,     0,  2040,  2042,  2043,  2545,  2045,
       0,     0,  1897,  1900,  1962,  1963,     0,  1379,     0,  1976,
    1977,  1975,     0,  1953,  1969,  1974,  1972,     0,  1944,     0,
    1993,  1984,  2032,  1378,  1991,  1992,  1340,  2299,     0,  2297,
    2316,  2317,  2515,  1318,  1314,     0,  3716,  3717,  3719,  1031,
     915,  2119,   914,   609,   612,   611,     0,     0,  2090,   233,
    2550,     0,  2090,  1048,     0,  2551,  3515,     0,  3522,  3504,
       0,  1168,  3587,  3588,  1042,  1040,     0,  1231,  1232,  1235,
       0,   256,     0,   259,   261,     0,   406,   439,   441,  1390,
     450,  3659,   384,     0,     0,  1270,     0,  1268,  1267,  1265,
    1266,  1264,     0,  1255,  1261,  1262,   296,     0,   865,   868,
     802,   884,   882,   884,   816,   885,     0,   854,   852,   851,
     847,   854,   818,   924,   830,     0,   884,   917,   921,   918,
     826,     0,   796,   919,     0,   922,   797,   824,   817,   823,
     854,     0,   813,   821,   884,   789,   825,   812,     0,   854,
     827,   832,   835,   837,   839,   854,   884,     0,  3648,   796,
     811,   810,   796,   854,     0,     0,  3648,   848,   833,   919,
     930,   796,   884,   854,     0,   872,   854,   294,   381,  1995,
    3741,  3809,  3810,  3803,  3806,  3808,  1813,     0,  2165,  2174,
    2514,     0,     0,     0,  1363,  2168,  1942,     0,  2517,  2078,
       0,  2061,  3427,  3502,  2060,  1172,     0,     0,     0,   384,
     478,   454,   408,  3466,  1407,  3482,  3490,     0,  3487,  3488,
    3425,  3434,     0,     0,     0,     0,  3475,  3458,     0,  3462,
    3461,     0,  3459,     0,  3460,     0,  3465,  3442,  3441,  2490,
       0,  2489,  3701,   383,  2098,  3027,  3041,  2390,  2386,  2385,
       0,  2405,     0,  1887,  1888,     0,     0,  1890,  3376,  1995,
       0,  3373,  3723,   399,   406,     0,     0,     0,   421,   393,
     406,   408,   420,   459,   281,     0,   256,   389,     0,     0,
     384,   384,   406,  3648,  3741,  3374,  3308,  1699,  1701,     0,
       0,  1893,     0,  1716,     0,     0,     0,     0,     0,     0,
    1526,     0,     0,     0,  1653,     0,  1716,  1681,  2025,  2026,
    2006,  2007,  2005,  2008,  1404,     0,  2009,  2024,     0,     0,
       0,  1679,  1345,  1328,     0,     0,  1862,  1863,  1864,  1865,
    1866,  1867,  1868,  1869,  1870,  1871,  1872,  1873,  1875,  1880,
    1876,  1877,  1878,  1879,  1874,  1881,     0,  1861,     0,  1705,
    1666,  1668,     0,     0,     0,   766,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1892,     0,     0,  1892,     0,
       0,     0,     0,     0,     0,  1680,     0,  1678,     0,     0,
    1677,  1570,     0,     0,  1892,     0,  1597,     0,     0,     0,
       0,     0,     0,  1576,  1577,     0,     0,     0,  1502,     0,
    1500,  1501,     0,     0,  1892,     0,     0,     0,     0,  1493,
       0,     0,     0,     0,  1739,     0,     0,  1884,  1882,  1885,
    1883,     0,     0,  1740,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1574,     0,     0,     0,  2505,   948,     0,
       0,     0,     0,  1541,     0,     0,     0,     0,  1409,  1408,
    1410,  1421,  1415,  1419,  1413,  1417,     0,  1474,  3021,  1422,
       0,     0,     0,  1425,  1434,  1438,     0,     0,     0,     0,
       0,  1445,  1443,  1444,  1456,  1457,  1441,  1442,     0,  1447,
       0,  1446,  1453,  1454,  1455,  1458,  1544,   911,  1552,  1912,
    1672,  1673,  1697,  1916,     0,     0,     0,     0,  2501,  1389,
    1496,  1495,  1497,  1498,  1499,   517,     0,   511,   514,   528,
       0,     0,  2377,     0,  2693,  2709,  2710,   328,   331,   330,
     332,     0,     0,  1278,  1282,  3374,     0,     0,     0,     0,
    3506,  3415,     0,     0,  1385,  1325,  1384,     0,     0,     0,
       0,     0,  3330,  3342,     0,     0,  3339,     0,     0,  1391,
       0,     0,  3312,     0,     0,     0,     0,  3285,  3351,  3352,
    3355,     0,  1391,     0,  2990,     0,  3287,  3292,  3283,  3296,
    3298,  3300,  2251,     0,     0,     0,     0,  2256,  2253,  2246,
    2259,  2731,  2255,  2272,  2254,  2248,  2261,  2247,     0,     0,
       0,  2293,  2265,  2268,  2262,  2293,     0,  2293,  2264,     0,
    2291,  2278,  2277,  2276,  2219,  2218,  2212,  2284,  2269,  2263,
     220,  2293,  2217,  2216,  2198,  2199,  2200,     0,  1951,     0,
    2289,   134,  2283,     0,  2293,  2293,     0,  2275,  2238,  2240,
    2146,     0,  1813,     0,     0,  2132,  2125,  2112,   384,     0,
       0,     0,  2099,  2100,   384,  3845,     0,     0,     0,   501,
    1305,  1291,  1307,  1214,  1213,  1211,  3552,  3556,  1741,    80,
    2140,  2138,    82,  2137,  2139,    83,  2356,  2332,  2331,  2333,
    2337,   131,  2342,  2334,     0,  2348,  2349,   356,   360,     0,
       0,     0,  3391,     0,   617,     0,    75,     0,  1220,  1995,
    2371,  2373,  2366,  3559,     0,  1185,  1202,  1201,  1197,  1198,
       0,  1182,   135,  1193,  1192,  1186,  2188,  3628,  3637,  3641,
    3626,   607,   996,     0,  3423,  3522,   189,     0,     0,     0,
     140,     0,   616,   161,   163,   616,  3617,  3617,     0,     0,
       0,   616,     0,     0,  1830,  1822,  1824,  1825,  1826,     0,
    1829,     0,  1367,     0,  1355,  1355,  1365,  1832,  1812,  1809,
    1835,     0,  1834,  1834,     0,     0,  1792,  1791,     0,  1886,
     905,  2044,     0,     0,  1896,     0,  1898,  1907,  1897,  1965,
    2706,     0,     0,  1381,     0,  1995,  1375,  2454,     0,     0,
       0,     0,     0,     0,     0,  1964,  1961,     0,  2318,  3370,
    3371,  1390,  3369,  1390,  1390,  1391,  1391,   607,     0,   610,
    2119,  2119,     0,     0,     0,     0,     0,     0,     0,     0,
     236,   245,  1035,  2549,  1037,     0,     0,     0,     0,     0,
    3534,  3374,  1062,  3589,  1038,     0,     0,  1234,   254,   253,
     257,     0,  3701,   445,   442,   407,   384,   437,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   134,    89,   110,     0,  1257,  1269,  2071,
    1263,     0,     0,     0,     0,     0,     0,   814,   888,     0,
     815,     0,   856,   857,   855,   860,   792,   788,   925,   929,
     928,   819,   820,   799,   920,   916,   923,     0,   882,   798,
     794,     0,  1024,   806,     0,   795,   838,   793,   807,   286,
       0,     0,  3689,  1391,  1391,  3695,   292,   822,   804,   808,
    3648,  3648,   283,   291,     0,   785,   800,   931,   801,   803,
     930,   786,     0,   787,  1995,  2000,  1996,  3812,   309,     0,
     308,     0,  2167,  1355,  2090,     0,     0,  2075,     0,     0,
    1979,  1943,  2181,  2180,     0,     0,     0,  1174,  1173,  2063,
     231,  2068,  3374,   384,   298,   411,   457,     0,     0,  3422,
    3498,  3501,  2514,     0,     0,  3443,     0,   430,  3658,  2100,
    2387,  2391,  1296,  1298,  1299,  1297,  1305,     0,  2565,  2564,
    2563,  2534,  1891,  2535,  2560,  2558,  2562,  2556,  2561,  2554,
    2555,  2559,  2557,     0,  3382,  3383,  3381,  3375,  3380,   400,
     401,   422,   425,     0,   394,   395,   409,   413,     0,  3654,
    3653,   428,   467,   451,   451,   451,  3840,     0,  1273,     0,
       0,  2504,     0,  1648,     0,  1649,  1650,     0,  1527,  1749,
       0,     0,     0,  1555,     0,     0,     0,  1652,     0,  1405,
       0,     0,  1530,  1522,  1329,     0,  1683,     0,     0,     0,
       0,     0,     0,     0,  1688,     0,  1686,     0,     0,  1743,
       0,  1745,  2501,     0,  1658,  1693,     0,  1656,     0,     0,
    1682,  1694,  1695,     0,     0,     0,  1662,  1660,     0,  1664,
    1598,  1661,  1663,     0,     0,     0,  1595,     0,     0,     0,
       0,     0,     0,     0,  1573,     0,  1609,     0,  1646,  1610,
       0,     0,  1607,     0,     0,     0,  1625,  1559,  1560,     0,
    1561,  1612,     0,  1535,  1566,  1567,  1532,  1533,  1626,  1615,
    1534,     0,  1569,  1995,     0,  1553,     0,     0,     0,  1571,
    1601,     0,     0,     0,  1531,     0,     0,     0,  1995,     0,
    1627,  1575,     0,     0,   767,  1347,  1523,  2502,  1416,  1420,
    1414,  1418,     0,     0,     0,     0,  1433,     0,     0,  1426,
    1436,  1439,     0,     0,  1914,     0,     0,  1691,  1738,  1738,
    1738,  1738,     0,     0,     0,  1642,  1643,     0,     0,   510,
     509,     0,   513,   597,     0,   530,   518,   507,  2379,     0,
       0,  1280,     0,     0,     0,     0,  3416,     0,     0,     0,
       0,  1389,  1390,  1390,  2500,  3309,  3310,  3311,     0,  2590,
    2589,  2587,  2591,  2588,  2538,  2540,     0,  2539,  2585,  2583,
    2586,  2581,  2579,  2580,  2584,  2582,  1391,     0,  3328,   913,
     912,  3341,     0,  3363,     0,     0,  3348,  3346,     0,     0,
    1391,  3291,     0,  3357,  3358,     0,     0,     0,  3326,  3325,
       0,     0,     0,  3318,     0,     0,     0,  2274,     0,  2245,
    2258,  2257,  2294,  2295,  2271,  2267,  2213,  2270,  2266,  2290,
    1995,  2223,  2244,  2214,     0,  2237,  2195,  2291,  2252,  1894,
    2283,  2210,  2211,  2273,     0,  1364,  1390,  2128,  1389,  2129,
     384,  2481,     0,  2488,     0,  2087,     0,     0,  3648,  1254,
    1294,  1286,  1293,  1290,  1305,  1303,  1292,   974,   973,     0,
    1306,    79,     0,     0,  2335,   134,  2329,  2350,  2324,     0,
     351,   361,   353,   357,   358,   359,   354,  2800,  2881,     0,
    1894,  3395,  3643,  1227,  1225,  1224,  1226,  1215,  1221,  1222,
    2376,  2374,   134,  2395,  1200,     0,  1203,  3648,  1995,     0,
    3640,   155,   608,     0,     0,     0,   996,     0,   165,  3534,
       0,     0,     0,   138,   169,  3785,  3789,  3603,     0,  3795,
    3615,  3797,   156,  3792,   234,  3790,     0,     0,  1827,  1828,
    1789,  1355,  1357,  1356,     0,     0,  1359,     0,     0,     0,
       0,  1797,     0,  1793,  1795,     0,  1859,  1851,     0,  2049,
    2041,  2046,  2499,  1904,  1948,     0,     0,  1326,  1907,     0,
    1966,  1957,     0,  1382,  1380,  1978,  1955,     0,  1971,  1970,
    1973,  1379,  1945,  1948,     0,  1389,  3368,  3366,  3367,  3718,
    3720,  1032,   613,     0,     0,  1033,     0,     0,     0,   239,
     242,   240,   241,  2119,  2119,   183,  2119,  2119,   182,   184,
       0,   178,   175,   185,  2119,  1049,   171,     0,     0,     0,
       0,  1995,     0,     0,     0,   191,     0,  3509,  3508,     0,
    3524,     0,     0,  3526,     0,  3525,  3523,  3494,  3505,     0,
    1057,  1027,     0,  1064,  1066,     0,     0,  3589,  1233,     0,
     256,   260,   448,     0,     0,     0,  1995,     0,  1995,  1995,
       0,     0,  1995,     0,  1995,     0,     0,     0,     0,     0,
       0,     0,  1995,     0,     0,     0,  1995,     0,  1995,     0,
      88,  1271,     0,  3648,   267,     0,   266,  3778,   298,   863,
     861,   864,   862,   883,     0,   858,   859,   926,   927,   889,
     919,     0,   919,   288,     0,  3129,   285,   777,  2605,  2606,
    2607,  2608,  2610,  2611,     0,     0,  3774,  3773,     0,     0,
     805,   318,   317,   315,   384,   305,   313,   307,     0,   314,
    2003,  2004,  2001,  1999,  2002,  3848,  2163,  2166,     0,  2515,
    1894,  1388,     0,  2177,     0,  2518,  3374,  3428,  3503,  1172,
       0,   299,     0,  1391,   408,  3538,     0,     0,     0,     0,
       0,  2491,   432,  2084,     0,  1305,  1309,  2398,  3385,  3386,
    3384,   402,   423,   396,  1391,   416,   408,     0,   256,     0,
     461,   463,   452,   471,   465,     0,   451,  1702,  1700,     0,
    1717,  1746,     0,   867,   867,   850,   871,  1732,  3136,  1726,
    1729,     0,   869,  1734,   867,  1727,   869,     0,  1725,     0,
    1723,  1724,     0,     0,     0,  1654,  1651,     0,     0,     0,
    1708,  1708,     0,     0,     0,     0,  1450,     0,     0,     0,
    1637,     0,  1659,  1657,     0,     0,     0,     0,     0,  1665,
       0,  1581,  1579,  1508,     0,  1506,     0,  1507,     0,  1509,
       0,     0,  1647,     0,  1476,  1494,     0,     0,     0,  1741,
       0,  2011,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2506,     0,     0,   937,   943,   946,   947,
     949,   941,     0,  1619,     0,     0,     0,  1431,  1427,     0,
    1435,     0,     0,     0,  1449,  1448,  1916,  1915,     0,  1690,
       0,     0,  1740,     0,     0,  1740,     0,     0,     0,  2503,
    1390,  1624,  1389,   520,     0,   538,   512,  1995,   515,     0,
     529,     0,   541,     0,     0,     0,   329,     0,  1283,     0,
     460,     0,  3414,  3507,     0,     0,  1383,  1395,  1386,     0,
       0,     0,  3332,     0,  3343,  1391,     0,     0,     0,  3316,
    3314,  3313,  3289,     0,     0,  3362,  3356,  3353,  3354,  1391,
       0,  3295,     0,  1391,  3293,  3297,  3299,  2233,  2232,     0,
    2292,  1951,  2206,  2225,  2227,  2293,  2148,  2152,     0,  1886,
    2136,     0,     0,  2130,  2134,     0,  2487,     0,     0,  2101,
    1813,   279,     0,  3724,  3850,     0,  1853,    84,     0,  2336,
    2327,     0,  2322,  2325,     0,     0,  3406,  3407,  3399,  3402,
    3400,  3401,  3405,  3408,  3409,  3396,  3403,  1951,     0,     0,
    1217,  1223,  2369,  1199,   136,     0,  1183,     0,     0,  3685,
    2189,  3629,  3642,  1011,  1013,  1012,   997,   998,     0,     0,
       0,  1057,     0,     0,     0,   620,   620,   170,  3648,     0,
     200,     0,     0,  3612,  3613,  3616,  3618,     0,  3589,  3648,
       0,  3648,   158,  1786,  1366,  1358,  1360,  1355,  1355,     0,
    1750,     0,     0,     0,  1750,     0,     0,   501,     0,  1831,
    1848,   906,  2412,  1905,  1906,     0,  1901,  1949,  1950,  1903,
    1899,     0,  1908,  1910,  1327,  1967,  1959,  1954,  1376,     0,
    1947,     0,     0,     0,  2035,  2037,   675,   674,   244,   243,
     248,   249,  1995,  1995,  2124,  2123,  1995,  1995,   177,   174,
    2122,  2121,  1995,  1995,   172,  2090,   195,   194,   196,   197,
     199,   198,   193,  1045,     0,  3512,     0,  3519,  3514,  3517,
    3497,  3496,  3495,  3492,     0,  1995,  1995,  1995,     0,  1995,
    3533,  3535,     0,     0,  1046,   914,  3547,     0,     0,   205,
    3591,     0,  3593,     0,  1237,     0,  1236,   255,  3701,  1995,
    1995,   103,  1995,    95,    96,    91,   123,   124,    93,    94,
      99,    98,   100,   101,   104,   105,   102,    97,    92,   127,
     129,   128,   106,  2031,  2030,  2029,   130,   125,   126,    90,
     297,     0,   274,   272,   273,  3699,  3698,  3775,     0,     0,
    3776,  3815,     0,   829,  1025,   828,   287,  1390,  1390,   284,
     849,  1995,   295,   316,  1894,  2172,     0,     0,  1980,  2178,
    2169,  2058,  2056,  3692,  1389,   458,     0,   456,     0,  3421,
    3426,  3500,  3499,  3522,  3522,   406,  3701,   406,   431,     0,
    1300,  1305,  1309,     0,  1301,  2409,     0,   414,  3656,  3655,
     468,  3741,  3838,     0,     0,  1747,  1718,   919,  1731,  1733,
       0,  1730,   919,   866,   870,  1736,  1722,  1728,  1735,   919,
    1525,  1556,  1529,  1528,     0,     0,     0,  1588,     0,  1706,
    1712,     0,     0,     0,  1563,     0,  1689,  1687,  1565,     0,
       0,  1639,  2503,  1614,  1685,  1591,  1616,  1568,     0,     0,
       0,  1505,  1503,  1504,     0,  1582,  1605,     0,  1492,  1606,
       0,  1589,  1613,  1521,  2013,  2012,  2010,  1536,  1995,     0,
    1593,  1554,     0,     0,  1618,  2507,  2508,     0,     0,     0,
     948,   934,   935,   936,     0,   938,   940,   942,     0,  1995,
    1452,  1451,  1423,     0,  1432,  1429,     0,  1437,  1918,  1917,
       0,     0,  1630,  1632,  1631,  1634,  1633,  1628,  1738,  1395,
    1644,     0,   521,   522,   524,   526,   603,     0,   516,   545,
     505,     0,   520,   508,  1281,  1284,     0,  3412,  3411,     0,
    1387,  1399,  1398,  2497,  2501,     0,     0,  1391,  1390,  3329,
    3350,     0,     0,  1391,  1391,  3360,  3359,  3361,  3327,  3322,
    3320,  3319,  2017,  2018,  2016,  2014,  2015,  2224,  1951,  2220,
       0,  1894,     0,  1851,  1390,  2126,     0,  3691,     0,  2107,
       0,  2104,  2111,   494,  2177,     0,  2102,  2073,  3728,  3725,
    3726,     0,  1856,     0,  1857,  1854,  1855,  1995,     0,     0,
     377,   369,   364,   372,   366,   368,   367,   373,   374,   375,
     376,   370,   365,   371,   363,   362,     0,  3394,  1228,  1229,
       0,     0,     0,  1208,  1204,  3686,  3687,   143,     0,  3424,
     164,     0,   149,   152,   725,     0,     0,     0,     0,  2119,
    2119,  2119,  2119,  2119,  2119,  2119,  2119,  2119,  2119,     0,
    2119,  2119,  2119,  2119,  2119,  2119,  2119,  2119,   669,  2119,
    2119,     0,     0,  2119,  2119,   670,   139,   489,   497,   621,
     624,   660,     0,   668,   662,   649,   650,   486,   667,   141,
     275,  3734,  3730,  3733,   237,     0,     0,  3740,  3739,  3648,
    3611,  3614,     0,     0,   263,  3732,     0,  3731,  3661,   690,
     691,   689,   688,     0,     0,  3589,     0,  1369,  1368,  1798,
       0,  1802,  1807,  1803,     0,  1794,     0,  1815,  1860,  1852,
       0,     0,  2420,  1948,     0,     0,  1948,     0,     0,  1390,
    2033,  1389,   176,   181,   180,   173,   186,   179,  1050,   192,
    3513,  3511,  3510,     0,  3518,     0,  3493,  3529,  3527,  3528,
    3531,     0,     0,  3530,  3532,  1051,  1052,  1058,  1053,  1160,
    1160,     0,  1160,     0,     0,  1160,  2119,     0,     0,   501,
    1178,  2119,     0,     0,     0,     0,     0,  1140,     0,  1160,
       0,     0,     0,     0,     0,  1078,  1139,   622,  1028,  1077,
    1079,  1091,   497,     0,  1112,  1142,  1143,  1141,  3548,     0,
       0,     0,  1063,     0,   208,   206,   216,  3590,     0,  2090,
       0,  3593,  1239,  1240,     0,   446,     0,   116,   118,     0,
     120,   122,     0,   112,   114,   265,  3700,  3777,     0,     0,
     853,  3697,  3696,   306,  2175,  2090,     0,  1981,     0,  1389,
    2090,     0,  1390,     0,  3536,  3536,   433,   435,   434,  2141,
    1302,  1310,  2411,  2410,     0,  1390,   256,   451,     0,  1703,
    1719,  1737,  1720,  1721,  1655,     0,     0,     0,     0,  1712,
       0,     0,  1713,  1671,     0,     0,     0,     0,     0,  1524,
       0,  1635,     0,  1580,  1578,     0,   850,  1483,  1485,  1481,
    1484,     0,   869,  1487,     0,   831,   869,   919,  1491,  1477,
    1478,  1479,  1480,     0,     0,     0,     0,     0,  2509,   932,
    1621,     0,   945,   939,   937,   944,     0,  1428,     0,     0,
    1920,     0,  1692,     0,  1645,   525,     0,   604,   600,     0,
       0,   546,     0,   547,   543,   519,     0,  3413,  1397,  1396,
       0,  3336,  3334,  3333,  3331,  3365,  3364,  3317,  3315,  1391,
    1391,   134,  2151,  1942,  2153,  2154,  2145,  2135,  2133,  2483,
       0,  2108,  2110,  2494,  2493,  2505,     0,     0,  2090,  2103,
    1995,  3727,  1097,     0,  1098,  1109,  1111,  1308,     0,  2361,
       0,  2359,  2328,  2362,     0,     0,     0,     0,     0,     0,
     146,     0,     0,     0,  1022,  2642,     0,     0,   694,   696,
     697,   698,   699,     0,   726,   701,   616,   975,   975,   728,
    2510,     0,   673,  2119,   490,  1995,  1995,  1995,  1995,   647,
    1995,  1995,  1995,     0,     0,  2119,  1995,     0,     0,  1995,
    1995,  1995,  1995,     0,     0,  1995,   655,   656,   654,  1995,
    1995,  2409,   496,   498,   914,   625,     0,   620,   268,  3786,
     481,   482,     0,     0,  1394,  1394,  3767,     0,  3768,  3769,
    1394,  1394,     0,   378,  3680,  3678,  3681,  3679,  3752,  3749,
       0,  3746,  3747,  3754,  3762,  3593,     0,     0,  3609,   237,
       0,   237,     0,     0,  1753,  1752,     0,     0,     0,     0,
       0,     0,  1841,     0,  1840,     0,  1846,  1850,     0,     0,
       0,     0,  2413,  2415,     0,  2050,  1902,  1911,  1909,  1946,
    1958,     0,  2038,  2036,     0,  3520,  3516,  1998,  1997,     0,
    1055,     0,  1054,  1059,  1022,   616,  1161,   614,     0,  1116,
    1120,  1117,   614,  2077,  2077,  1274,  2077,     0,     0,     0,
       0,  2077,     0,  2079,  2077,     0,     0,  2077,  2077,     0,
    1274,     0,   499,  1181,  1179,  2077,  1180,  2077,     0,     0,
    1274,  1129,  1073,  1130,     0,  1074,  2077,  1274,  1096,  1274,
    1274,     0,   623,   914,  1075,  1076,   725,  1175,   215,   204,
       0,     0,  1065,  1067,     0,     0,  1068,  3592,  1041,  3595,
    2090,  1245,     0,   108,  1995,   109,  1995,   107,  1995,  3781,
       0,  2090,  2173,     0,  1982,  2179,  2170,  1390,     0,   412,
    3539,     0,  3420,  3419,     0,  2177,     0,   410,  3657,   469,
     451,  1586,  1587,  1709,  1948,  1707,     0,  1714,  1715,  1669,
    1611,     0,  1564,     0,  1636,     0,  1617,  1583,  1486,  1482,
    1489,   832,  1488,  1490,  1608,  1537,  1995,  1594,  1599,  1600,
       0,  1620,  1995,  1430,     0,  1923,  1922,     0,     0,  1948,
    1629,   523,   601,   518,     0,   542,   545,     0,   506,  2498,
    1391,  1391,  3323,  3321,  2226,  1979,  2484,  2482,  2106,     0,
       0,     0,  2105,  2115,     0,  2088,     0,  1304,     0,  1858,
    2357,  1995,     0,  2326,     0,  1205,  1206,  1207,  1209,     0,
       0,     0,     0,     0,   727,  1023,     0,     0,   700,  2513,
     693,   725,     0,     0,     0,   975,   717,   616,     0,  1022,
     976,   616,   616,     0,     0,     0,     0,  2028,  2027,   644,
     637,   636,   639,   638,   641,   640,     0,   633,   630,   642,
     632,   657,     0,   645,   627,   686,   687,   685,   651,   658,
     628,   629,   635,   634,   631,   678,   683,   681,   680,   679,
     684,   682,   646,   661,   643,   659,   488,   605,   626,  2021,
    2022,  2019,  2020,   666,   665,  2023,   663,   664,   497,     0,
     269,   271,   246,   238,     0,     0,   485,   483,   484,     0,
       0,     0,     0,     0,     0,  1393,  3770,     0,     0,  3663,
    3741,  3750,  3798,  3753,  3748,  3755,   157,   277,   264,  3662,
       0,  3783,  3648,  3794,  3648,  3593,  1754,     0,     0,  1799,
       0,  1804,     0,  1796,  1836,  1836,  1847,     0,     0,     0,
       0,  2414,     0,     0,  2421,  2423,  1960,     0,  1053,     0,
       0,     0,  1274,     0,     0,  1144,  1114,     0,     0,     0,
       0,  1085,     0,  1094,     0,     0,  2077,     0,  1146,     0,
    1145,     0,     0,     0,  1158,  1159,     0,  1938,  1940,  1948,
       0,     0,     0,  1134,  1156,  1157,     0,     0,     0,     0,
    1104,     0,  1090,  1160,     0,  1160,  1113,     0,   692,     0,
    1177,  1115,   202,   207,   217,   218,  1043,     0,  3594,  1039,
       0,  1246,  1242,  1243,  1238,   117,   121,   113,     0,     0,
    2176,     0,   300,     0,  3543,  3537,  3541,  2142,  2090,     0,
    3841,     0,  1711,  1667,     0,  1638,  1640,     0,   933,     0,
    1919,  1913,     0,     0,     0,     0,     0,     0,  1932,  1924,
       0,  1696,     0,   603,     0,     0,   531,   544,   550,   549,
    3337,  3335,  2149,     0,  2109,  2495,  2506,   495,     0,     0,
    3701,  1110,  2360,     0,  3404,     0,  1948,  1020,     0,     0,
       0,     0,     0,     0,   695,     0,   616,   971,   972,  1022,
       0,   702,   994,  2510,  1022,  1022,   732,     0,   720,   730,
     775,  2512,   491,   653,  2349,   652,   606,     0,  2409,   276,
       0,   247,  3742,  1389,   213,  3758,  3772,  3756,  3771,  3648,
    1394,     0,  1394,     0,     0,  1393,  3610,     0,  3736,  3735,
    3793,  3791,   159,     0,  1886,     0,     0,     0,  1844,  1842,
    2418,  2419,     0,  2416,     0,     0,  2422,     0,  1060,  1056,
    1061,     0,  1099,     0,  1118,     0,     0,  1084,     0,  1260,
       0,     0,  1137,  1125,     0,  1080,     0,  1127,  1128,  1172,
    1082,     0,  1941,   500,     0,     0,  1089,     0,  1175,  1081,
    1106,  1087,  1119,  1176,   209,  1069,   384,     0,     0,     0,
    1241,     0,  1248,  3782,  3779,     0,     0,  3542,  3540,     0,
    2085,  1813,  1948,  1562,  1538,  1622,     0,  1929,     0,     0,
    1927,  1926,     0,  1921,  1928,   602,   599,     0,     0,   539,
     557,   553,     0,   555,   556,   578,  2090,     0,     0,  2114,
    2116,  3729,  2363,  3374,     0,  1017,     0,  1018,     0,  3374,
    3374,     0,     0,     0,  1022,   994,  2510,   953,     0,   703,
       0,   707,   709,   734,     0,   729,   721,   742,     0,     0,
     671,   487,   270,  3648,  3648,  3604,   205,   214,  3648,  3648,
    3796,  3765,  3761,  3763,  3760,  3751,  3648,  3742,  2879,     0,
    1762,  1764,  1787,  1801,  1806,     0,  1837,     0,     0,     0,
    2417,  2425,  2424,  3521,     0,  1101,   615,  1014,     0,  1132,
       0,     0,  1175,  1086,     0,     0,     0,  1126,  1147,  1124,
    1274,  1939,     0,     0,     0,  1123,  1105,  1107,  1220,     0,
     211,   187,  3596,     0,     0,  1247,  1252,     0,  1249,  1251,
       0,  1361,     0,  2399,  1710,  1930,     0,  1931,  1934,     0,
       0,  1935,     0,   535,   537,   527,     0,   532,     0,   551,
       0,  2119,  2119,     0,  2119,  2119,  2119,  2119,   571,   579,
     581,   582,   583,     0,  2150,  2485,  2496,   982,  1948,     0,
       0,     0,     0,   984,   986,     0,     0,   722,   715,   711,
       0,     0,   957,   995,     0,   705,     0,     0,   897,   951,
     760,     0,   763,     0,   895,   733,   735,   893,   894,   737,
       0,     0,     0,   776,     0,     0,   875,     0,   878,     0,
       0,   731,     0,   743,   874,   881,  2511,   648,   493,   672,
    3787,  3743,     0,   216,   237,  3660,     0,  3742,  3742,  3799,
     187,     0,  1761,     0,     0,  1839,  1838,  1853,     0,     0,
       0,   545,  1100,  1015,  1133,     0,  1122,  1148,   545,  1138,
    1083,  1135,  1136,  1148,     0,  1088,   210,     0,   203,   188,
     219,  3597,  3598,  1244,     0,  3780,  2143,   905,  1925,  1933,
    1937,  1936,   533,     0,   540,   564,   554,   560,     0,  2119,
       0,     0,  2119,     0,     0,     0,     0,     0,   548,   580,
    2119,     0,     0,  2119,     0,  1003,  1005,  1151,   983,  1007,
    1006,   988,  1004,  1016,  1021,  1020,  3374,   190,     0,  1151,
     985,  1009,   992,  1151,   987,  1008,   990,     0,     0,     0,
       0,   713,     0,   956,     0,   961,     0,     0,     0,     0,
     761,   762,   898,   736,   896,   892,   886,   880,  2522,  2523,
       0,     0,     0,   772,   773,   876,   769,   770,   771,     0,
     751,     0,     0,   882,   873,   744,     0,     0,     0,  3759,
     237,  3648,  3665,  3648,  3664,  3784,  1766,  1763,     0,  1771,
    1773,  1772,  1774,  1765,     0,     0,     0,  1121,  1103,     0,
    1131,     0,     0,   501,  1148,   501,     0,   212,  1250,     0,
    2400,   539,   536,   564,     0,   562,     0,   558,   552,   559,
       0,   596,   590,     0,   592,   593,   591,   588,   575,     0,
     573,     0,   999,  1002,  1995,  1000,   144,  1153,  1152,   989,
       0,   982,     0,   150,   993,   153,   991,   718,     0,     0,
       0,     0,   954,     0,   958,   959,   960,     0,   952,     0,
       0,     0,     0,   887,   891,  2457,  2456,     0,  1400,   879,
       0,   746,   890,   745,  3741,  1389,   218,  3757,  3738,  3737,
    3766,  3764,     0,  1768,     0,     0,  1845,  1843,  1102,  1149,
    1150,  1093,   501,  1092,   545,  2144,  2156,     0,  2426,   534,
     561,     0,   569,   565,   567,   570,   595,   594,     0,   572,
       0,   589,   676,  1001,  1155,  1154,  1019,  1151,  1010,   719,
       0,  1018,     0,   955,     0,     0,   982,     0,   984,   986,
     768,     0,   877,   738,   738,   752,  3744,  3605,   201,  1767,
       0,  1775,  1095,     0,     0,     0,     0,  2412,   563,     0,
       0,   584,   577,   574,   147,     0,     0,  1018,   967,   966,
       0,     0,   963,   962,   704,   982,   708,   710,  1401,     0,
     749,   739,   741,   748,   754,   755,   753,   756,     0,     0,
    1770,     0,  1781,  1780,  1769,     0,  1776,  1778,  1108,  2155,
    2157,     0,  2420,   568,   566,   576,   585,   587,   716,   982,
       0,   970,   968,   969,     0,     0,   706,  1402,   740,   747,
     757,   759,  3745,     0,  1758,  1759,  1757,  1756,  1755,  1782,
       0,     0,  1777,     0,  1779,     0,  2428,   586,   712,   982,
       0,     0,   758,  3606,  1784,  1783,     0,     0,  2427,     0,
    2432,   714,   965,   964,  3601,     0,     0,  2439,  3599,  3600,
       0,  3607,  2430,  2431,  2429,     0,  2434,     0,  2436,  2437,
       0,  2090,  3602,   384,  2438,  2433,     0,  2440,  2442,     0,
    2401,   187,  2435,     0,  1389,  3608,  2441,     0,  1390,  2443
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5700, -5700, -5700, -5700,  1841, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700,  2436, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,  1567, -5700,   199, -5700,   204, -5700,   205, -4051,  -641,
   -5700, -2245, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,  1725, -3491, -5460, -5700, -5700,  -326,  1119, -5700,
   -5700,    16, -5700,  -349, -5700, -5700, -5700, -4681,  -505,  -736,
   -5700,    13,  4727, -1343,  4728,  4731, -5700,  -602,  4039, -4604,
     457, -5700, -3421, -5700, -5700, -5700, -5700, -2396, -5700, -5700,
   -5700, -5700,   336, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,  -614, -5700,  1568, -5700,  1063, -5700, -3489, -5700,  -726,
   -5700, -5700, -5700,  1586, -5700, -5700,   456,  1057,  2961,  2885,
   -5700, -5700, -5700, -5700,  2826, -5700,  2217, -5700, -2108,  3394,
   -5700, -5700, -5700, -5700, -5700,  2452, -2879, -5700, -5700, -5700,
    1280, -5700,  -848, -5700,    38, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    -454, -5700, -2475,  1507, -5700,  1533, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -1323, -5700, -5700, -5700,    40,
   -5700, -5700, -5700, -5700, -5700,  3061, -5700,  4685, -5700, -5700,
   -3857, -5700,  2872, -5700,  2869,  2871, -3247, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,    41, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700,  -155,  -149,    71,   658,  1148,
   -5700, -4182, -5700, -5700,   -15, -5700, -5700, -5700, -5700, -5700,
     928,   208,   926, -5700,   544,  2667, -3233, -5700, -5700, -5700,
   -5700, -5700, -5700,  -491,   -72,  -604, -5700, -5490, -5700, -5075,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -4055, -5700,
   -5700, -5700,  -739, -5700, -5700,  -699, -5700, -5700, -5700, -5700,
    -367, -5700, -5700, -5699, -5700, -5700, -5700,   -60, -5700,  2387,
    4113, -2249,   357,  -593, -5700, -4078,   701, -4312, -4189, -5700,
   -3908, -5700, -5700, -5700,  -260, -1372, -1336, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,   316,   180,   700, -4588, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -4506, -4374,    50, -5700, -5185,
   -5700,   490, -5700, -4983, -5700, -5700, -5700, -5700, -5700, -5700,
    -708, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -3668, -5700,
   -5700,  -535,  -543, -5700,  -426, -3194, -5700, -3240, -4626,  -419,
   -1379,  -416,  -414,  -413, -5700, -1570,  1045,  3986, -5700, -5700,
   -5700, -5700, -1527, -1699, -5700,  1109, -3837, -1423,  1093, -1358,
   -3848,  1571,  -527, -4451, -3230, -1312, -5700, -1353, -5700, -5700,
   -3479, -3645, -5700,  -682, -2311, -3635,  -438, -5700, -5700, -2107,
   -3727, -5700,  3107, -2417, -2383,  2291,  1499, -5700, -5700,  1030,
   -5700, -1847,  1028, -5700, -5700, -5700,  1037, -5700,  -697, -5700,
   -5700, -5700, -5700, -3815, -5700, -2934, -4540, -5700,  5126,  5127,
   -3926,  -667,  -666, -5700, -5700, -5700,  -203,  1868, -5700, -4489,
    -453,  -467,  -462, -3677,  -106, -5169, -5643, -5208, -3612,  3108,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,   100,   103,  1351, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,   751, -2857, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5007, -2809, -5700, -5700,   371,
   -4041, -3947, -4254, -4251, -4053,  3749, -5700, -5700, -5700, -5700,
    4152, -3847, -5164, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    3316,  1531, -5700, -5700,  1896, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  -257,  1903, -5700, -5700, -5700, -5700,
   -5700,  2428, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    -400, -5700, -5700, -5700, -5700, -5700,   -93,  3162, -5700, -5700,
   -5700, -5700,   -28, -5700, -5700, -5700, -5700,  2056, -5700, -5700,
   -5700, -5700,  2611, -5700, -5700, -5700, -5700, -5700, -5700,  1646,
   -5700,  2275, -5700, -2868, -5700, -5700,  1160,  -620, -5700, -5700,
    -430, -5700, -5700, -5700, -5700, -5700,    44, -5700, -5700, -5700,
    5114, -1910,    29,  -465, -5700, -5700,     8, -5700, -5700,  4210,
    -482,  2102,  -731,  4884, -5700, -5700, -5700, -5700, -2931,  1973,
   -5700,  4268, -5700, -5700,  4453,  1689,  4227,  1844,   733,  2067,
   -2032,  -622, -3086, -2808, -5700,   -31, -3934,  1061, -5700,  1819,
     642, 10647, -5700, -1938, -1989, -5700, -5700,   -79, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700,  2172,  2176, -5700, -5700,
    3618, -5700,  2108, -5349, -5700, -5700,  -878, -5700, -2933, -5700,
   -5700, -5700,  2111, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700,  1532, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3568, -1977, -5700,
   -5700,  3716, -5700,  1624, -5700,   727, -5700, -5700, -1561, -5700,
   -3246, -5700, -5700, -1961,  -687, -5700,  3717, -5700,  3728, -1262,
   -3904, -5700, -2096,  -553, -5700,  -322, -5700, -5700, -5700, -5700,
   -5700, -3377,  -649,  -647, -5700, -5700, -5700,  3326, -5700,  4310,
   -5700, -5700, -5700, -5700, -5700, -5700,  3332, -5700, -2518, -5700,
   -2932,  4315,  4316,  4320, -5700,  4321, -5700, -5700, -2065,   198,
   -5700,   518, -5700, -5700, -5700, -5700, -5700,  1046, -5700,  -303,
     647,  -302, -4550, -1923,   967, -5700, -5700, -2246,  3350,  3752,
   -1365, -5700,  2562, -5700,  3328,  1584, -5700,  1919, -5700,   909,
     911, -5700, -5700,  1592, -5700, -5700, -5700, -5700,   381,  -185,
   -5700, -5700, -5700,   -19,   690, -2503, -5700,   390, -3686,  4322,
    -238, -5700,  1912, -2322, -3647, -1233,   778, -1339,  1923,   374,
    4951,  -539, -5700, -5700,  4291, -5700, -3221, -5700,  2285, -1957,
   -1026, -3455, -3032, -4939, -5700, -2203,  1176, -5700, -5700, -5700,
   -5700,   929, -5700, -5700, -5700,  2599, -5700,  5236, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  -743, -1204,
   -5700,  3933,  3181,  -992,  -568,  5263,  -427, -5700, -5700,  -412,
   -5700, -5700,  5051, -2393, -5700, -5700,  4462,  3139,  2380, -5700,
    1276, -5700, -5700, -5700, -5700,  1097, -5700, -5700,   118, -1150,
    -380,  1913, -5700, -5700, -5700, -5700, -5700, -5700, -5700,   702,
   -5700,  1112, -2232, -5700, -5700, -5700, -5700,  -405, -5700, -5700,
   -5700, -5700,  1115, -5700,  -526, -5700,  -404, -5700, -5700, -5700,
   -5700,  4898, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -4389,
   -5700, -3048,  4887, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
    2771, -5700, -5700, -5700, -5700, -5700, -5700,  3584,  5083,  5085,
   -2016, -5700, -1086,  2778,  2112, -1121, -5700, -5700, -5700,  4342,
    5093, -5700, -5700,  -276, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  2731,   109, -5700, -5700, -5700, -5700,
   -5700,   417, -5700, -5700, -5700, -5700,  3494, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3905, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,  1301,  -504, -5700,   616,  -537, -5700,   285, -5700, -5700,
   -5700, -5700, -5700,  -613, -5700, -5700,  -617, -5700, -1440,  4813,
   -1362, -5700, -2099, -3834, -5700,     1, -5700, -5700, -5700,  2791,
   -5700, -5700, -5700, -5700,  2458, -2962, -5700,   458, -5700, -5700,
   -3104,  -949, -2030, -4453,  5658, -5700, -5700,    30,  3192,  1521,
   -5700, -5700,    11,   825, -1277, -5700, -5700,  2407,    -3,  1997,
    -489,  -786,  -779, -1033, -5700,  4473, -5700, -5700, -5700,    15,
    -634,  -570,   192,    69,    61,    21,  7163,  9045,    24, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,  2171,
    2174, -5700,  5132, -5700,  3165,  2889, -5700, -5700, -5700,  2177,
   -5700, -5700, -5700,  5136, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  2185,  2191,  2193, -5700, -5700,  1655,
   -2816, -5700, -5700, -5700, -2298,   200, -5700,  3206, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700,  3504,  -600,  4623,
    -595,  3718,  5151,  4660, -5700,  3987, -5700,  3991, -5700,  1466,
   -5700,  -954,  2260, -1746, -3425, -5700, -5700,  2645,  1032, -5700,
   -5700, -2944, -3487, -5700,  2101,   931, -5700, -5700,   258, -5700,
   -5700, -5700,  1476,   119,  5131,  4545, -5700, -5700, -5700, -5700,
    5357,  2270, -5700,  1089,  5382,  5383,  5384,  -163, -5700, -3687,
   -5700, -4576, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700,  1583, -5700, -5700,  2763, -5700, -5700,
   -5700,  2286, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700,
   -5700,   -73,  4911, -5700, -5700, -5700, -5700,  1396, -3035, -5700,
   -4153, -4608,   723, -5700, -5700, -5700,  -679, -5700, -5700, -5700,
   -5700, -5700,  3224, -5700,  1875, -5700, -5700, -2204, -5700, -2569,
   -5700,    31,  -631,  4913, -5700, -5700, -5700, -5700, -5700,  4903,
   -5700, -5700,  1219, -5700, -4141, -5700,    51, -3205,  -243, -4126,
   -5700, -3657, -5700, -5700, -5700, -5700, -5700, -5700, -5700,   740,
     753, -5700,   752, -5700, -4731, -5700, -5700, -5700, -5700, -5700,
   -5700, -4242, -5700, -5700, -4256, -5700,   735, -5700, -5700, -5700,
   -5700, -5700, -5700, -5700, -5700, -5700, -5700, -5700, -2620, -5700,
   -5700, -5700,  4086, -5700,  5030, -5700,  -967,  4915, -5700, -5700,
   -5700, -5700, -5700, -5700,    46, -5700, -5700, -5700, -2537, -5700
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,   473,   764,  2337,   474,   475,   476,   477,   478,  2303,
     479,  1313,  3049,  1315,  2268,  3052,   480,   733,   481,  2474,
    3253,  3254,  4912,  4913,  4906,  4907,  4909,  4910,  3255,   847,
     848,  3091,  3092,   482,  3109,  4285,  3764,  2339,  5079,  3103,
    5390,  2344,  5082,  2345,  5083,  3101,  4298,  4795,  2349,  2350,
     773,  4286,  3855,  3856,  6040,  1374,  3760,  3864,  3865,  3114,
    4776,  4892,  5764,  4896,  5900,  6038,  5846,  3883,  5276,  5765,
    5766,   666,  1386,   661,   662,   663,   483,  5708,  2438,  5501,
    5472,  5473,  3201,   484,   840,  2461,  3890,  1493,  2462,  2463,
    5166,  5167,  3922,  3923,  5469,  5470,  4445,  4771,  5138,  4785,
    3034,   971,  1788,  3299,  3300,  2538,   861,   862,  2546,   863,
    3324,  3262,  3991,  3992,  4474,   864,  3964,  3965,  3966,  3328,
    1183,  3967,   485,   486,   687,   695,   688,  1180,  2907,  1181,
     487,   488,   731,  2293,  2294,  2295,  2296,  3726,  3069,  3720,
    3721,  4704,   865,   866,   972,   667,   973,   974,   975,   976,
    2657,   977,  3404,  4013,   978,  3399,  4011,   979,   980,   981,
     950,   843,  3355,  3407,  4014,  3356,  3993,  3408,  2652,   982,
     983,   984,   985,   986,  1932,   951,  2622,  4002,  4488,   987,
     642,   844,  1495,  2467,   845,  2468,  3893,   846,  2465,  1498,
    4020,  2592,   904,  1850,   988,  1189,  4021,   989,  2660,  2662,
    2659,  4019,  4947,  2661,   990,   677,   705,   665,  1848,   693,
    5142,  5479,  4756,  5137,  4757,  5456,  4672,  5131,  5132,  5133,
    5560,  3705,   492,   680,  1165,  2122,  2899,  4165,  3581,  3583,
    2900,  4164,  4611,  4612,  4613,  3579,  3580,  5636,  3585,  4162,
    5799,  6171,  5922,  5923,  4154,  5927,  4620,  5022,  5023,  5024,
    5357,  5638,  5805,  6058,  5928,  6178,  6056,  6174,  6057,  6176,
    6310,  6263,  6264,  6068,  6189,  6190,  6268,  6311,  5938,  5939,
    5940,  6355,  6356,  5941,  4158,  4159,  5633,  5018,  5687,  3751,
    3752,  2433,  5534,  1324,   493,  4758,  4876,  4759,  4760,  5426,
    6076,  4762,  4763,  5998,  4764,  4765,  4766,  6271,  2197,  5452,
    5438,  4793,  5577,  4767,  5087,  5088,  5089,  5090,  5964,  6107,
    5966,  5967,  6100,  6211,  6099,  5091,  5092,  5398,  5835,  5406,
    5236,  5093,  5094,  5095,  5413,  5678,  5837,  5833,  5975,  5976,
    6330,  6331,  5991,  6295,  5992,  6337,  6369,  6370,  5977,   494,
     679,  2071,  6123,  6124,  6125,  1790,  5679,  1791,  1792,  1793,
    2510,  1794,  1795,  1796,  1797,  1798,  1799,  1800,  1801,  1802,
    1803,  3315,  2497,  2498,  3275,  3276,  2488,  2489,  4514,  2490,
    4515,  2556,  5993,  5994,  3268,  2494,  6224,  2495,  3289,  6135,
    5978,  5995,  5980,  2514,  2147,  2148,  3799,  2162,  2163,  3630,
    3631,  2436,  2515,  3283,  2516,  3318,  4579,  5340,  4585,  4586,
    4587,  4116,  4117,  4118,  4119,  4120,  3539,  5981,  5671,  5962,
    6102,  6105,  6218,  6322,  5407,  5096,  5411,  1282,  5097,  5098,
    6077,  6089,  6093,  6078,  6094,  6090,  5829,  3755,  6079,  6080,
    6081,  6096,  6092,  4276,  6082,  5655,  5951,  5656,  5394,  3291,
     495,   631,  4395,  1462,  3187,  1464,  1474,  3887,  3213,  3212,
    1477,  1476,  3205,  4365,  4847,  5213,  4394,  3884,  4399,  5586,
     809,  4878,  5890,  5739,  5898,  5741,  4879,  5063,  4880,  5875,
    6022,  4881,  5760,  5896,  6034,  5064,  5065,  4882,  4883,  4884,
    6163,  6196,  6197,  6198,  5222,  2241,   823,   824,  1482,  1483,
    1484,  3349,  5581,  5248,   496,  3746,  3085,   497,  1341,  1342,
    1343,  2315,  2316,  3088,  3089,  4266,  4714,   498,  1308,  3045,
    2305,  3077,   499,  1327,  3737,  3738,  3739,  4260,   500,  1490,
    2457,  2458,  3217,  4406,  4904,  5281,  5594,  5772,  5590,  5907,
    5908,   501,   851,  1501,   502,   644,  2483,  2484,  2485,  3257,
     503,  1943,   639,   504,  2131,  2128,  2913,  2914,   505,  1307,
    2255,  2256,  2257,  2258,  3701,   506,  2630,  3372,  3373,  3374,
    3375,  3040,  4235,  3041,  3042,  3710,  4494,   507,   787,  1454,
     508,   786,  1453,   509,   510,   704,   759,   697,  2138,   512,
     513,  4673,  2703,   515,   793,   791,  1125,   517,  1446,  1442,
     518,  2704,  1126,   783,   784,  1394,  1209,  3784,  3785,  2574,
    2575,  3149,  3136,  1210,  1211,  1423,  2414,  3166,  2925,  2926,
    2237,  2927,  3225,  2425,  1496,  5699,  5481,  4630,  6292,  1972,
    1860,  1311,  1128,  1129,  1130,  2082,  2083,  2098,  1131,  2092,
    2850,  4558,  4989,  4990,  4991,  4992,  2789,  2790,  2894,  1132,
    2779,  2780,  2781,  1133,  1134,  1135,  1136,  1137,  1138,  1139,
    2772,  2773,  2774,  1140,  1141,  1142,  2889,  4540,  4541,  4971,
    3574,  3575,  3576,  1143,  3436,  4524,  3447,  3448,  2732,  1144,
    1145,  1146,  1147,  1148,  4140,  1149,  4601,  4331,  1150,  1944,
    2667,  2730,  4959,  4529,  5313,  4961,  4962,  5317,  2672,  3424,
    4049,  4050,  4051,  2793,  2794,  1992,  1993,  1961,  1962,  1395,
    5176,  6379,  1396,  5508,  5859,  5860,  6014,  6242,  6153,  6154,
    6344,  6345,  6346,  6347,  1397,  3122,  4796,  1398,  1399,  1400,
    4315,  4316,  5177,  4800,  5179,  4804,  2375,  2376,  2379,  2380,
    1401,  1402,  1403,  1404,  2363,  1405,  1406,  1407,  3141,  5718,
    5185,  5186,  5869,  5868,  5187,  4809,  4810,  4319,  4320,  4683,
    4684,  4685,  3795,  2726,  2727,  2801,  2635,  2636,  2637,  2673,
    1415,  2390,  3157,  3805,  2392,  3803,  4326,  3807,  4332,  4333,
    2881,  3564,  4136,  3566,  5010,  5347,  5348,  5628,  5787,  5788,
    5793,  4887,  5557,  5558,  3340,  1424,  3174,  3822,  4329,  2199,
    2200,  1426,  2396,  3161,  3811,  2201,  2403,  2404,  3816,  3983,
    1427,  1428,  1440,  1445,  1431,  1429,  3329,  4843,  3330,  4121,
    4104,  5069,  5464,  2696,  2697,  5419,  4436,  1432,  3177,  4343,
    4344,  4345,  1411,  1412,  2385,  2386,  2387,  1433,  1413,  3150,
    4322,   519,   726,   520,  2588,   892,  1844,  2587,  3717,  1503,
    4229,  1828,  1829,  1838,   817,   664,   521,   668,  4489,   522,
     708,  4228,   952,  3202,  1889,  2249,  1890,  3033,  3695,  3696,
    4674,  5057,  4675,  5050,  5051,  4676,  1295,  5372,  5373,  1460,
    4361,  4362,  4356,  3027,  3689,  1296,  2242,  4222,  3024,  4223,
    3025,  3054,  4224,  5305,  5779,  6169,  3021,   523,   702,  4661,
    5806,  4216,  4217,  6255,  6256,  1293,   524,   647,  2568,   888,
    3334,  1826,  1831,  1832,  4930,  2572,  4925,  3335,  5291,  4470,
    4929,  2578,   889,   890,   525,   747,  3747,  1347,  2221,  2222,
    2223,  3008,   526,   699,  1283,  4211,  4658,  2994,   683,  5943,
    2204,  1286,  2205,  2990,  3671,  2185,   527,  1451,  1449,   838,
     528,   529,   799,   640,  2419,   530,   531,  1316,  2286,  3066,
    4242,  4243,  4688,  2287,  2288,  3718,   532,   712,  1301,  3714,
    5070,  5071,  5383,   533,   738,  1331,  1332,  2309,  2307,  3742,
    3080,   534,  2901,   535,   669,   955,  1893,  1894,  2628,   536,
     741,  1336,   537,   538,   957,  4495,  6047,  6258,   673,  2632,
    1898,  5457,  4812,  5192,  5193,  5195,  5524,  5525,  6307,  6400,
    6414,  6407,  6417,  6418,  6421,  6427,  6428,  1151,  1354,  1355,
    1152,  6128,  1153,  1154,  1155,  2705,  1299,   707,  2245,  2246,
    5367,  5643,  3031,  3692,  2619,  2620,  2247,  5052,  5053,  3603,
    3804,  1156,  4218,  5395,  1504,  1833,  1319,   610,  1157,   611,
    1158,  1159,   819,  1356,  2382,  3382,  1232,  3616,  1160,  4022,
    1470,  2129,  2446,  2447,  3383,   613,  3617,  1233,  1805,   614,
     615,   616,   617,   618,   619,   620,   546,   547,   621,  1812,
     549,   698,  1241,  2159,  2167,  2944,  2157,  2956,  3651,  2958,
    2959,  3656,  2960,  1289,  2931,  2158,  3640,  4644,  4643,  2957,
    4203,  5040,  5039,  2961,  2952,  4199,  4185,  3626,  4637,  5361,
    5360,  2939,  2938,  2937,  2947,  2948,  2949,  2950,  4196,  3636,
    2426,  3184,   550,   958,  2641,   676,  1900,  1901,  3396,   551,
     701,   552,   732,  1321,  3073,  3730,  3731,  4255,  4706,  4256,
     553,  1194,  1195,   554,   941,  3758,  3359,  2581,  1473,   943,
    2582,  2603,   945,  1852,   946,   947,   948,   949,  4384,  3876,
    3877,  3363,  2584,  2448,  2921,  3869,  4833,  2449,  4378,  4379,
    4834,  3210,  5604,  4391,  3880,  5302,  4479,  5605,  5606,   555,
     713,   556,  5474,   725,  1310,  2265,   557,   558,   559,   560,
     792,  1436,  1212,   632,   633,   634,   635,   827,   828,  3886,
    4401,  4899,  4900,  5588,  6410,  6411,  3113,  4289,  6002,  6339,
    6404,  6423,  5499,  5500,  4294,  4295,  4296,  3769,  3770,   561,
    1361,  1357,   758,  2335,  2329,  2331,  3099,  3750,   562,   563,
     564,  4772,   565,  1929,  2656,  4018,  4946,  3367,  2470,  6004,
    4786,  5169,  5158,  6143,  6141,  1813,   622,  1912,   875,  4270,
     906,  3301,  1298,  3028,  2590,   991,   992,  3306,  4447,  2471,
    2472,   876,   877,   567,   568,  1455,  3185,  3186,   993,   994,
    4234,  4679,  4680,  5060,  4787,  4788,  4774,  5710,  6240,  4779,
    2252,  5843,  5844,  6136,  6338,  5159,  5160,  5492,  5161,  5162,
    5484,  5849,  5482,  5848,  5163,  5703,  6008,  5701,  6007,  5147,
    5148,  5164,   878,  3925,  3926,  3927,  5502,  5707,  3766,  4288,
    5475,   569,  3111,  4301,  4299,  4291,  4297,  5705,   879,   880,
    1821,   881,   882,  2563,   883,  2486,   995,   996,   570,   997,
    2664,  2663,  4025,   718,   998,  1305,   646,  1820,  2253,  3698
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     612,   539,   678,   716,  1927,   641,  2876,   760,   516,   717,
     826,  2420,   869,  1789,  2695,   541,  1230,  1281,  2756,  1244,
     832,   545,   811,  3331,   548,   815,  3096,  2909,  1471,   514,
     540,   566,  2826,   689,   907,  1472,  3055,   689,   489,  1312,
     490,   491,   689,  3416,   511,   703,   571,  2227,  3332,  3204,
    1393,  2393,  3072,  3368,   696,  2501,  2511,  2405,  3939,  2767,
    2405,   544,   822,  2736,  1235,  3219,   942,  2702,  3693,   543,
    3823,   944,  2149,  3341,  2152,  2153,   870,  4277,  3095,  1188,
     891,  4432,  2166,  2409,   894,  2810,   896,  3176,   897,   898,
    2434,   899,   900,   901,   721,  3826,   942,  3827,  3828,  1994,
    2493,  1196,  1338,  2829,  2555,  1345,  4346,  3946,  3709,  1502,
    2861,  2862,  2863,  2864,  2865,  2866,  2867,  2869,  2871,  2872,
    2873,  2874,  2875,  3637,  1187,  2520,  2435,  3417,  1236,  2358,
    3284,  2499,  3316,  2383,  2600,  4807,  3649,  4340,  2195,  1955,
     821,  4885,  4472,  2324,  4886,  3020,  2841,  4773,  4794,  2908,
     729,  2978,  2979,  2130,  2849,  2851,  1823,  2854,  2855,  2499,
    2228,  3759,   728,  4321,  2491,  4336,  3284,  4023,  4024,  4502,
    5139,  4782,  3706,  1368,  2985,  1369,  3406,   940,  1371,  1372,
    1348,  1349,  1814,  3189,  3068,  4915,  5171,  3892,   842,  4054,
    3719,  4048,   542,  2909,  3001,  4048,  2229,  5465,  4518,  4347,
    4403,  3786,  3786,  3285,  3787,  4513,  4877,   940,  4769,  4513,
     833,  5272,  3791,   834,  4713,  4210, -2814, -2814,  3014,  3015,
    3325,  1927, -2520,  5660,  5661,  1505, -3684,  1807,   835,  2499,
    1306,  -378, -1889, -1889, -3680,   836,   837,  1458,   692, -3677,
    2067,  2069,  2070,  4670,  1322,  2035,  2529,   869,  2517, -2521,
    2535,  1297,   800,  2112,  1444,  3325,  5181,  3065,  2519, -2119,
    3410,  5219, -2634, -2634,  2547, -1030, -1030,  1866,  -390,  -390,
    1458,  5099,   742,  2513,  2513,  1458,  1867,  -492,  -492,  2633,
   -3682,  5637, -3678,  4581,  2513,  5058,  2459, -3681,  3256, -3679,
    3090,  1808,  1839,  4918,  1840,  3985,  5598,   723, -2634,  6177,
    4323,  4324,  4103,  3857,  4258,  4259,   805,  2186,  3145,  2077,
    1443,   870,   736,  2502, -3475,  2908,   737,  2078,  3208,  4375,
   -2631, -2631,  2151,  2518,   745,  5280,  2079,  4528, -3397, -3397,
    2053,  5945,  2057,  3325,  1846,  1847,  4582,  4305,    42,  4669,
    4670,  1489,  3313,  5220, -3398, -3398,   805,  3393,  4156,  4293,
    2499,  4433,  3325,  2523,  2499, -3458, -2631,  2077,  2430,   825,
    3548,  2333,   720,   740,  4364,  2078,  5650,  3418,  2499,  3829,
    3830, -3462,   681, -3461,  2079,  1377,  3432,  4761,  4761,  2513,
    2688,  2689,  2690,  3577,  2691,   720,  2692,  1494,  2693,    49,
    2526, -3459,  4390,  2524,  2427, -2669,  2674,  2675,  3280,  2548,
    3786,  3394,  3976,  4267,  3325,  2685,  3310,  4859,  2525,  1842,
    2191,  4902,  2527,  6161,  4942,  2077,  2513,  5592,  2522,  5773,
     670,  3325,  2536,  2078,  2539,  2540,  2541,  2542,  1461,  2543,
    5099,  5495,  2079,  3753,  1458,  2746,  4777,  2749,  2077,  3549,
    2549,  2550,  2551,  2552,  2553, -3397,  2078,  4417,  5135,  4209,
    4404,  1458,  2762,  2763,  2765,  2079,  3325,  4354, -2685,  2768,
    2769, -3398,  2530,  2492, -2686,  2077,  2576,  2785,  2688,  2689,
    2690, -2687,  2691,  2078,  2692,  5221,  2693,   739,  3347,  1214,
     761,  1458,  2079,  2077,  2080,    42,  3325,  4761,  2263,  5817,
   -3397,  2078,  4645,  5836,  2099,  3954,  3955,  2688,  2689,  2690,
    2079,  2691,  4101,  2692,  3685,  2693, -3398,  3358,  4006, -2814,
    2077,   636,  2099,  1458,  6341,  4273,  4177,  4178,  2078,  4434,
    2193,  1931,  2099,  2100,  2101,   802, -2514,  2079,  3550,  5417,
    3325,  6159,  2080,  3484,  3866,  1214,    49,  5149,  2602,  4778,
    5745,  2100,  2101,  2077,   636,    51,  3325,   516,  1425,  3325,
    6145,  2100,  2101,  1425,  4840,  1425,  6020, -1964,  5412,  5420,
    2079,  4967,  4777,  2077,  2077,  2260,  2099,  6293,   804,  5880,
    3170,  2078,  2078,   874,  2143,  3434,  2077,  4581,  2099,  5396,
    2079,  2079,    42,   511,  2078,  5758,  4671,  2102,  1385,  5496,
    2080,  2081,  4358,  2079,  5895,   788,  3105,  6050,  2183,  4943,
    4220,  2077,  5915,  5422,  6361,  2102,  5948,  2100,  2101,  2078,
   -3460,  4783,  6357,  2080,  1384,  2102,  6342,  3593,  2079,  5424,
     810,   812,  5442,   734,   812,   674,   820,  5877,   789,  4274,
    4582,  3473,  1458,    49, -3397,  2224,  6127,  2226,  6316,  2081,
    2080,   539,    51,  1837,  5173,  2431,  2238,  6200,   516,  4539,
   -3398,  5174,  3303,  5175,   849,  3348,   760,  6387,  2080,  2102,
    1393,   868,   685,   820, -3465,  4778,  1488,   545,   719,   514,
     873,  2102,  2103,  4513,  6360,  5816,  6127,  5242,  5210,  5878,
     541,  4209,  3286,   671,   511,  2080,   545,  1185,  4877,   548,
    2103,  3858,  2445,   820,  1458,  2077,   720,  2081,  3287,  2239,
    2103,   735,  4616,  2078,  1186,   884,  6362,   544,  1302,  3304,
    5533,  6051,  2079,  1234,  -221,   872,   820,  5881,  6026,  1239,
    2081,  2144,  1240,  4360,  2141,  4968,   544,  -724,  1231,  1320,
     820,  4450,  5211,  2150,   543,  1452,   940,  3757,  2080,  2080,
     885,  2164,  5948,  2184,  2103,  5791,  1325,  2081,  6021,  4627,
    4628,  2080,  1378,  5897,   849,  5882,  2103,   849,  2475,  1238,
    3633,    42,  1367,  5495,  6303,  2081,  3678,  1237,   790,  2084,
    2085,  2086,  2198,  2087,  1258,  2194,  2080,  2340,   802,  3171,
    2343,  4405,  2192,  3867,  2346,  2347,  2348,  5680,  3578,  2351,
    2352,  3686,  2081,  4478,  2922,  1448,  4364,  5224,  2077,  5226,
    1441,  3859,  5238,  1456,  1457,  2507,  2078,  4789,  3860,  4275,
    2583,   820,    49,  5099,  3861,  2079,  5256,  2264,  4183,  4871,
     638,    51,  5458, -1964,  4191,  2081,  1480,   820,  6294,   832,
    1258,  2225,  1303,  4646,  6157,  1478,  1491, -3585,   871,   831,
    3812,  2597,  2334,   682,   852,  2081,  2081,  6343,  3786,   802,
    4304,  5776,  4761,   638,  6162,  2487,  4310,   542,  2081,  3754,
    4314,  3433,  3209,  2266,   903,  5668,  4790,   472,  2895,  4461,
    2080,   541,  2487,  3366,  4293,  4583,  1806,   545,   999,  3311,
     548,  4376,  5471,  2081,  2454,  1811,  1834,  3097,  1836,  3862,
    2088,   812,  5774,   812,   743,   820,   868, -3475,  1845, -3397,
    6173,  1291,   545,  3797,  4844,   873,  5486,  2266,  3542,  3543,
    1841,  2450,  1843,  3881,  2423, -3398,  5608,   544,  3556,  3557,
   -2180,  3560,  3561,  2389,  5204,   543,   760,  3395,  2896,  5712,
    1810,  3985,  4623,  1868,  2187,  4268,  4209,  6219, -3458,  6221,
    6222,  3977,   544, -2180,   744,  4791,   746,  2482,  5099,  3919,
     872,  2077,  3863,  6164, -3462,   802, -3461,  4359,  1918,  2078,
    5715,  1459,  5716,  2482,  1443,  1922,  3326,  1925,  2079,  4761,
    2170,  6435,  3551,  2080, -3459,   539,  5263,  2081,  -115,  3209,
    -115,  1933,   516,  1911,  1911,  5219,  1911,  1911,  1911,   541,
   -2526,  2932,  2634,  1911,  1459,   545,  3679,  2036,   548,  1459,
   -2814,  3326, -3684,   514,   540,   566,  2942,  -378,  3920,  4885,
   -3680,  2236,  4886,  5847,   472, -3677, -1889, -2527,   511,   833,
    1910,  1910,   834,  1910,  1910,  1910,  2700,  5388,  1909,  1909,
    1910,  1909,  1909,  1909,  2405,   544,   672,   835,  1909, -2634,
    6280,  6281,  1994,   543,   836,   837, -2634, -2634,   542, -1030,
     675,  6287,  -390,  1809,  3989,   806, -3682,  3162, -3678,  5468,
    2434,  -492,  3435, -3681,  4609, -3679,  2982,  5220,  2984,  4919,
    4325,  2988,  5599,   871,  4877,  2067,  2069,  3789,  3790,  3326,
    2081,  3292,  2054,  2996,  2058,  5736,  2999,  5738,  3292,  2054,
    3002,  -119,  5743,  -119,  2445,  2655,  2435, -2631,  3326,  5748,
    5749,  2585,  2919,  3131, -2631, -2631,  3956,  3957,  5172,  5755,
    2834,   472, -3397,  6317,  3146,  5099,  3017,  3018,  3019, -2669,
    2075,  4052,  2074,  4053,  5465,  5465,  2080,  5196, -3398,  2072,
    5199,  4103,  4103,  3282,  5330,  4103,  4103,  4492,  5332,  5212,
    2694,  4103,  4103,  4017, -2669,  4513,  3013,  4903,  2976,  4513,
    3326,  1908,  1908,  5593,  1908,  1908,  1908,  2077,  1459,  2513,
    3307,  1908,  -111,  3308,  -111,  2078,   542,  3326,  4842,  4583,
    5200,  3546,  3319,  5696,  2079,  1459,   887,  2910,  1886,  3267,
    3938,  3270, -2685,   820,  3463,  4476,  2513,  3466, -2686,  2513,
     709,  3485,  4193, -3460,  3281, -2687,  2509,  2482,  2513,  5221,
    2665,  5027,  3326,  3478,  2897,  1459,  4496, -2685,  5983,  3345,
     820,  5483,  3293, -2686,  3868,  1425,  3454,  5483,  3455,   820,
   -2687,  4813,   820,  3497,  3298,  2356,  4761,   820,  2766,  4761,
    2165,  2077,  3326,  2081,  3446,  4816,  2878,  1459, -3710,  2078,
    3320,   942,  3980,  4383,  2301,  4102,  3326, -3465,  2079,  2104,
    2105,  2106,  2107,  2108,  2109,  2110,  2111,  6328,   820,  3159,
    1365,  3456,  2941,  3457,  1481,  3209,  3272,  2104,  2105,  2106,
    2107,  2108,  2109,  2110,  2111,  5243,  3326,  2682,  3259,  2106,
    2107,  2108,  2109,  2110,  2111,  5099,  2077,   849,  3273,   849,
     472,  5887,  3326,  5152,  2078,  3326,  2248,  4584,   802,  5698,
    2633,  2077,  2077,  2079,   802,   802,  3536,  3634,  4392,  2078,
    2078,   710,   674,  3043,  4993,  3465,  3440,  2099,  2079,  2079,
    4048,  2302,  3635,  2106,  2107,  2108,  2109,  2110,  2111,  3441,
    2312,  6394,  2080,  2104,  2105,  2106,  2107,  2108,  2109,  2110,
    2111,  4831,  3269,  2910,   802,  2325,  2100,  2101,   674,  5692,
    1471,  2077,   940,  2804,  3450,  4761,  1459,  2920,  1417,  2078,
    2326,  5700,  5702,  2853,  1886,  2338,  3719,  3707,  2079,  4639,
    5767,  4921,  4922,  4905,  3786,  3786,  4797,  4798,  2077,  4801,
    4802,  3652,  3708,  4648,  2341,  2342,  2078,  4651,   802,  2365,
   -1889,  2188,  2074,  2430,  2077,  2079,  5140,  2206,  6140,  2072,
    6139,  2980,  2078,  1419,  2898,  4792,  2080, -2180,   674,  2388,
    2102,  2079,  3336,  4207,  1887,  2077,  2077,  5918,  1459,  1309,
     643,  6019,  1471,  2078,  2078,  2531,  3586,  2412,  2077,  3000,
   -2180,  5353,  2079,  2079,  5842,  3984,  2078,  1876,  1896,  2081,
    6032,  6318,  5548,  4181,  2986,  2079,  3470,  5126,  2421,  2422,
     539,  4856, -3711,  5610,  1441,  2668,  3809,   516,  5144,  2643,
    3871,  2080,  2439,  2232,  6091,  6095,  4209,  5830,  6230,  2649,
    4239,  4070,  2429,   802,  1888,   820,  2080,  2080,   514,  3044,
    4237,  4166,  4396,   812,   802, -3710,  1230,   802,  1938,  1244,
    2909,  3571,   714,   511,  4407,  2103,  3195,  4262,   802,  3572,
    2089,  2090,  2091,  3189,  2077, -1889,   674,  2077,  3734,  5244,
    1393,  2077,  2078,  2081,  1418,  2078,  2290,  2797,  2798,  2078,
     760,  2079,  5238,  4453,  2079,  4455,  2080,  2306,  2079,   645,
   -2119,  1339, -2119,  5414,  1235,  1214,  6237,  3190,  2077,  4934,
    4935,  3406,  6134,   942,  1458, -1889,  2078,   730,  2933,  3525,
    2102,  3526,  5034,  2080,  5526,  2079,  2445,  3284, -3284,  3284,
    1420,  -348, -3491,  3078,   884,   714,  2633,  5127,  2081,  2080,
    4393,  2967,  2968,  1837,  2970,  2972,  2973,  2974,  5047,  2965,
    2077,  5857,   777,  2081,  2081,  3872,  2983,  4832,  2078,  4155,
    2080,  2080,  4194,  3371,  1877,  3870,  2099,  2079,  1236,   885,
    1887,  6091,  6122,  2080,  2998,  6095,  5245,  4141,  4144,  4147,
    4148,  3995,  2908,  1340,  4292,  4127,  4861,  4130,  6319,  4195,
    3023,  2077,  4499,  4006,  2877,  2100,  2101,  4160,  5612,  2078,
     854,   855,  6320,  2081,  1393,  2103,  2077,  3274,  2079,  4134,
    4135,  3062,  2702,   720,  2078,  1393,  1393,  6395,   715,  3364,
    2077,  2482,  1897,  2079,   940,  5427,  1333,  3175,  2078,  5768,
    2081,  2532, -1849,  5631,  4215,  5440,  5441,  2079,  3081,  1968,
    1969,  1970,  5152,  2077,  3735,  2077,  2081,  5141,  2916,  2080,
    2431,  2078,  2080,  2078,  5919,   636,  2080, -3491,  4471,  2102,
    2079, -1889,  2079,  2233,  3871,  5145,  6006,  2081,  2081, -3711,
    5309,  2945,  4128,   711,  4129,  2189, -1889,  4773,  2077,  2077,
    2081,  2207,  4677,  2080,  2017,  2981,  2078,  2078,  2503,  2022,
    5182,   715,  3810,  2077,   829,  2079,  2079,  3112,  3115,  2434,
    4208,  2078,  1214,  5202,  2505,  1878,  2077,   675,  3587,  2077,
    2079,   942,  1939,  5354,  2078, -1889,  4397,  2078,  2561,  3116,
    3117,  3107,  3108,  2079,  3191,  2080,  2079,  3537,  2987,  2077,
    3118,  3119,  3120,  2077,  2077,  2435,  5851,  2078,  5853, -1274,
    2077,  2078,  2078,   675,  2103,  3675,  2079,   850,  2078,  2183,
    2079,  2079,  6134,  4429,  3628,   902,  2081,  2079,  3874,  2081,
   -3707,  2234,  1869,  2081,  3461,  4306,  2080,  5672,  3736,  6091,
    6095,  3648,  3067,  1891,  5769,  3653,  2405,  2235,  2405,  2405,
     714,  2080,  1422,  2304,  2558,  2434,  4360, -1849, -3284,  3872,
    2081,  5033,   802,  2799,  2570,  2080,  2800,  5037,  5038,  3815,
    1258,  3818,  3819,   675,  5150,  2580,  1823,  1409,   820,  2077,
     820,   802,  5970,  3100,  3351,  3352,  5299,  2078,  2080,  5920,
    2080,  2435,   940,  5314,  3106,  2077,  2079,  2077,  3226,  5307,
    3665,  3778,  2081,  2078,  3666,  2078,  3668,  3779,  2077,  1388,
   -3294,   820,  2079,  5752,  2079,  5183,  2078,   820,  3590,  3591,
    3673,  5617,  4464,  2080,  2080,  2079,  3555,  2123,  6284,  4209,
   -3491,  3873,  2842,  3681,  3682,  3151,   886,  5942,  2080,  4209,
    4209, -3705,  5889,  2081,  3632, -3708,  3302,  5349,  4534,  5742,
    4535,  2080,  2645,   714,  2080,   953,  5223,  3368,  2081,  2077,
    3734,  5237,  4240,  4942,  2184,  5974,  5247,  2078,  2318,  5974,
    4777,   675,  2081, -3706,  2080,  5971,  2079,  1818,  2080,  2080,
     802,   820,  6321,  2077,  6275,  2080,  6274,  4430,   637,  4466,
    2077,  2078,  3203,  2261,  5445,  2081,  3392,  2081,  2078,  4133,
    2079,  2946,   691,  6334,  4948,  3707,   715,  2079,  3599,  3600,
    5815,  2843,  4828,  4663,   706,  3353,  2118,  3643, -1849,  2077,
    3708,  6251,  4595,  6253,  4596,   516,  2074,  2078,  5246,  4664,
    2081,  2081,  6165,  2072,   638,  5921,  2079,   858,   859,  1434,
    6175,  3385,  2507,  6179,  5345,  2081,  4300,  2077,  2127,  2846,
    1870,  2459,  3223,  2634,  2080,  2078,  2877,   690,  2081,  4817,
    2508,  2081,  3874,  1892,  2079,  2150,  5346,  1258,   907,   869,
    2080,  5942,  2080,  4778,  5402,   887,  5184, -3707,   802,  3538,
    3193,  2081,   802,  2080,  5972,  2081,  2081,  1188,   802,  1410,
    4431,  3188,  2081,  2678,  3451,  3452,  2638,  5825,  1435,  2827,
    2844,  6335,  5831,  5832,  3086,  3386,   748,  3697,  5974,   715,
    6302,  5151,  2104,  2105,  2106,  2107,  2108,  2109,  2110,  2111,
    3194,  2077,   516,  6285,  3875,  5974,  3735,   722,  5403,  2078,
    4950,  5800,  1871,   870,  2080,  4952,  5914,  2077,  2079,  2638,
    4007,  6244,  4953,  2835,  3458,  2078,  2319,  6146,  4943,  4241,
     820,  2440,  2882,  3163,  2079,  4209,  6336,  3195,  2080,   954,
    2124,  2081,  3087,  6252,  3284,  2080,  2077,  3559,   802,  3284,
   -3294,  3468,   820,   820,  2078,  2902,  3284,  2081,  3269,  2081,
     820,  2934,  6203,  2079,   749,  3471,  6205,  3544, -3705,  2077,
    2081,  5963, -3708,  5965,  2080,  3644,  1465,  2078,  2262,  6029,
    4209,  5084,  2951,  5410,  5410,  3347,  2079,   867,  3469,  3474,
     812,   812,   802,   812,   812,   812,   812,   802,   820,   802,
   -3706,  3475,  2080,  1234,  1819,   812,   905,  5404,  5979,  1239,
    3400,  2638,  1240,  4594, -1274,  4597,  3405,   724,  1231,  6245,
    6010,  2081,  2997,   812,  5216,   820,  6308,  6214,  1297,  3164,
    3736,  5602,  5958,  2077,    15,  2368,  2108,  2109,  2110,  2111,
    1288,  2078,  3003,  5362,  5363,  2081,   802,  5974,  6408,  1238,
    2079,  2077,  2081,  2639,  2299,  3196,  2452,  1237,   802,  2078,
    3823,  -914,  2366,  -914,  5446,  4845,  5447,  3197,  2079,  5514,
    2679,  5515,  3625,  4483,  4484,  5405,  2080,  3483,  2482,  1927,
    3495,  2081,  6083,    24,  3500,     4,     5,  3573,  1459,  2430,
    2640, -1889,  2080, -2119, -2119,  6277,  2639,  2077,  2991,  2634,
    5448,  2369,  1466,  6101,  2394,  2078,  6225,  6226,   820,  2081,
    3165,  3501,  2370,   849,  2079,  5801,  5802,  3619,  5522,  5711,
    2371,  2080,  1955,   802,  5396,  2928,  5706,   -72,  3083,  5523,
    5449,  2077,  2453,  3988,  4214,  4246,  4247,  4668,   942,  2078,
     849,  2992,  -725,  3596,  2080,  5974,  5476,  2372,  2079,   820,
    6314,  6113,  5917,  3504,  3733,  6215,  3102,  2555,   820,   820,
     820,  6301,  3348,  2929,   802,  5579,   762,  3198,   812,   812,
    6142,  6144,  2105,  2106,  2107,  2108,  2109,  2110,  2111,  2573,
    6324,  3620,   802,  2081,  3660,  4257,  4846,    42,  2639,  3661,
    5541,  6409,  3472,   802,   802,  5477,  2300,   905,  3664,  2081,
    2434,   820,  1804,  2373,  3667,  5603,  1927,   760,  2080,  3505,
    5877,  2395,  1393,  2509,  6192,  5803,  6340,  6195,  1393,  6366,
       4,     5,   867,  3521,  5572,  2482,  2080,  2077,  2081,    47,
    1934,  2374,  6216,  1393,  3690,  2078,  2435,  3199,    49,  5542,
    3715,  5397,  6412,  2445,  2079, -2364,  3524,    51,  3531,   940,
     763,  2081,  4890,  6388,  5048,  4114,  4442,  6378,   820,  4443,
     765,    60,  5878,  5450,  3707,  5567,  2877,   802,  3132,  4115,
    1328,  1467,  2080,   802,  3133,  2405,  3134,  3218,  2993,  3708,
    1935,  4029,  4062,  6401,  5580,  3305,  4182,  5804,  3798,  1468,
    6323,  5410,  5960,  3305,  5490,  5794,  4303,  5451,  3815,   802,
    1906,  1906,  4186,  1906,  1906,  1906,  2080,  3496,  4189,  4190,
    1906,  3571,  4532,   782,  5850,  2081,  5201,  2077,  2930,  5030,
    4444,  4454,   820,  6413,  2845,  2078,  5278,  5782,  4508,  3765,
   -2364,   820,  4533,  2081,  2079,  3499,  4548,  3773,  3775,  3767,
    2476,  5478,  3768,  4550,  1936,  5877,  4309,  4891,  3776,  3135,
    4313,  2077,  5292,  4327,  5435,  1329,  -914,  5296,  5414,  2078,
    3341,   807,  3312,  2077,  5640,  5641,  2077,  3699,  2079,  5491,
    5308,  2078,   541,  4350,  2078,  2890,  2431,   813,   545,  2081,
    2079,   548,  2212,  2079,  2583,  1430, -2364,  2476,  1834,  5651,
    5333,  2445,  2077,  -598,  3343,  6402,  6403,  5878,   788,  5436,
    2078,  2857,  2080,  3350,   802,   802,  4328,  2891,  4157,  2079,
     874,  1330,  4572,  2081,  4184,   814,  1937,  2077,   544,  3362,
    3362,  2671,  4955,  4956,  3284,  2078,   543,  1393,  4573,  2077,
    5321,   789,  2499,  2077,  2079,  4465,   816,  2078,  4512,  3507,
    2405,  4999,  1814,   820,  4519,  2077,  2079,   802,  2077,  4351,
    2079,  4975,  6072,  2078,  5188,  5189,  2078,   802,  6000,  5054,
    2910,  5237,  2079,  4468,  3403,  2079,  4995,  5013,  5437,  2077,
    3384,  6009,  3409,   781,  2077,  3411,  3390,  2078,   626,  3391,
    2684,  2892,  2078,  2389,  5025,  5375,  2079,  3949,  5865,  6371,
    3508,  2079,  2080,   830,   541,  4506,  4507,  2858,   868,   782,
     545,  5807,  5737,   548,   545,  2202,  4516,   873,  3453,  2081,
    5866,  3723,  3724,  2859,  3510,  6088,  3389,   839,  3453,  5750,
    5327,  3511,  6392,  3782,  3388,   841,  2080,  3783,  2203,  2077,
    5337,  2671,  5759,   516,  5761,   720,  2671,  2078,  2080,  2077,
     544,  2080,  5190,  1927,   544,  5228,  2079,  2078,   543,   542,
    3514,  3950,   872,  4248,  3444,  2671,  2079,  5002,  5867,  4894,
    3625,  5004,  2893,  6073,  2369,   942,  4895,  2080,  2671,  4055,
    3987,   790,  1814,   853,  2077,  2370,  1814,  2477,  3515,   893,
    4060,  4061,  2078,  3142,  2860,  3544,  2077,  6072,  3725,  2077,
    2745,  2079,  2080,  2077,  2078,  2748,  1417,  2078,  4249,  2081,
    1418,  2078,  1854,  2079,  2080,  3619,  2079,  4385,  4386,  5229,
    2079,  4387,  4388,  4389,  2764,  5230,  5364,  3949,  2877,  5191,
    2080,  3949,   895,  2080,  2477,   802,  3326,  2784,   956,   802,
    3833,  3834,  1471,  2081,  6332,  6332,  1166,  4096, -2358,  4173,
   -2358,  1419,  3533,  1164,  2080,  2081,  1420,  3387,  2081,  2080,
    2077,   788,  3519,   684,  4100, -1334,  1182,  2289,  2078, -1334,
    4250,  2478,  1855,  2479,  1292,  1856,  3143,  2079,  3522,  3620,
    2077,   542,  6368,  2074,  2081,   871,   940,  1294,  2078,  1421,
    2072,  3950,  2368,  4748,   789,  3950,   694,  2079,  1309,  2317,
    2213,   700,  1857,  2001,  2374,  2322,  2323,  3529,  6073,  2081,
   -1334,  1858,  1314,  4251,  2080, -1334,  1304,  5589,  2478,  2077,
    2479,  2081,  2018,  2019,  2080,  3200,   472,  2078,  5600,  3200,
    3541,  4841,  3326,  6232,  1184,  1317,  2079,  2081,   820,   820,
    2081,  3128,  1190,  3129,  2214,   820,  2215,  1290, -1334,  3362,
    3362,   686,  5453,  3780,  4564,   686,  4565,  5455,  2369,  2080,
     686,  2081,   820,  2480,   820,  1323,  2081,  3638,  3639,  2370,
    1198,  2080,  3615,  2150,  2080,  2150,  3618,  2371,  2080,     4,
       5,  2503,  3623,  5704,  1335,  3624,  1907,  1914,  1326,  1919,
    1920,  1921,  3659,   812,  4527,  1214,  1924,  2505,   812,  6381,
    6383,   714,  1230,  1230,  2372,  1244,  1244,   812,  4657,  2405,
    2480,  3553,  4536,   812,     4,     5,  2093,  4987,  1337,  3662,
    5279,  2081,  3622,  6075,  5968,     4,     5,  4462,  4748,  1199,
    3669,  2081,  4818,  4755,   790,  2080,  2216,  2481,  1344,   623,
     802,  3970,  3971,  3672,   781,  3972,   714,  3973,  1346,  3974,
    1235,  1235,  2818,  2819,  4707,  2080,  2248,  5374,  4537,  -750,
    2373,  6184,  6185,   820,  3702,   802,  2081,  1360, -2311,  1358,
    1359,  1364,  1362,  1447,  1363,  4252,  4253,  4254,  2081,  5984,
    4649,  2081,  4650,  1532,  2481,  2081,  2217,  1393,  2374,  1437,
    1438,  1393,  4538,   802,  2080,  3263,  4221,  1366,  4662,  3264,
    3729,  3265,   849,  3266,   802,  5985,   959,  4449,  4976,  1370,
    3427,  5811,  2094,  1373,  1236,  1236,  3732, -2311,  3365,  2533,
    3366,  4977,  2534,   760,  4659,  1375,  5352, -2309,  2095,  4924,
    3756,     9,  1376,  2218,  3761,  3762,   802,  4978,   812,  5877,
     960,  3459,  2081,  2743,   714,   802,  3774,   812,  2411,  2503,
     802,  2413,  2413,  3621,  4131,  1414,   802,   715,  6075,  2093,
    1450,    14,  2081,  2504,  4624,  2505,  -950,  4979,  4755,  1452,
    1350,   802,  1463,  1351,  1352,  3796, -2309,   624,  1353,  2388,
    3801,  5968,     4,     5,  1465,  1475,   961,  1200,  4543,  1201,
      20,  5878,  4936,   962,  4938,  1479,  4290,  1959,   650,  2096,
    1202,  2081,   715,   714,    23,  2077,  3502,  5986,  3503,  5987,
    1379,  1485,  3931,  2078,  3934,  1486,  1203,  1487,  1492, -3580,
     963, -2311,  2079,  2219,   825,  3431,  1007,  1008,   964,  3832,
    1011,  5969,  1013,  4342,  1015,  1497,   820,  3839,  1815,   650,
      28,  5559,   802,  2445,  2445,  5780,  4980,  2220,  4485,  4486,
    4487,   651,   825,  1500,  6001,  2094,  2482,  3940,  1350,  3941,
    1422,  1351,  1352, -2311,   965,  2507,  1950,  3305,  3305,  1816,
    1817,  2095, -2311,  1380,  1825,  3968,  1814,  1393,  4544,  5630,
   -2309, -2311,  3942,  2508,  3941,  3943,  1824,  3944,  3924,   625,
    1258,  1837,  1849,  5913,  6071, -2311,  3933,  4652,  4653,  5970,
     715,  4654,  1853,  4655,    39,  4656,  2601,  4981,   653,   966,
     967,  4015,  4545,  4016,   820,  2492,  4317,  1851,  4318, -1334,
    1859,  1807, -2309,  -950,  4546,  1861,  5043,  4547,  1862, -3445,
     714, -2309,  1863,  2077,  5601,  4373,  4440,  4374,  4441,  2150,
   -2309,  2078,  2096,  3302,  1864,  2093,  3948, -3447, -3444,   653,
    2079,  3969,  5988,  4555, -2309,  3953,  4822,  4823, -3446,   715,
    4824,  4825,  1872,  3979,   626,   802,  4826,  4827,  1865,  5054,
    1874,   802,   820,   820,  2877,  2150,    50,  5582,  4561,  1873,
    2080,  6072,  6439,  1875,   820,  1808,  2717, -3580,  5969,  1879,
    4562,  2172,  5971,  1880,  5968,     4,     5,  1204,  2506,  1752,
    3952,  4556,  4559,  3503,  2266,  4563,  4570,  2266,  1881,  4571,
    4377,     4,     5,  1883,   627,    82,   714,  1884,  1471,  1471,
    1381,  4982,  4983,  3263,  1882,  2920,  2920,  3264,  3493,  3271,
    4574,  3266,  4567,  2507,  4568,  4963,  4897,   968,  4898,  1942,
    5007,  2094,  2266,  5944,  1895,  1885,  2077,  5810,  5283,  5984,
    5284,  2508,  1956,  2718,  2078,  5041,  5970,  2095,  1258,   820,
    3615,   820,  1957,  2079,  3618,  1958,   714,  1911,  1911,  1911,
    3623,  5989,  4593,  3624,  2077,  5985,  3948,  2012,  1963,  5328,
    3948,  1964,  2078,  2492,  1965,  3953,   715,  2081,   655,  3953,
    5320,  2079,  6073,  4352,  4353,  1966,  4355,  4357,  5862,  2044,
    5326,  5972,  1967,  1971,  1910,  1910,  1910,   969,  2080,  5285,
    3622,  5286,  1909,  1909,  1909,  5031,  5032,  2173,  5287,  2719,
    5288,  2720,  1973,  3951,  1471,  2048,  1365,  2721,  2096,  2174,
    3952,  4719,  1974,  1975,  3952,  5338,  -950,  5930,  2688,  2689,
    2690,  4084,  2691,  1976,  2692,  5947,  2693,  5339,  5315,  5971,
    5783,  5953,  5954,  5789,  5957,  5322,  5335,  2266,  5336,  5343,
    3573,  2266,  4113,  5795,  5355,  5380,  5356,  5381,  2077,  4086,
    4984,  4985,   715,  5400,  1977,  5401,  2078,  5986,  5513,  5987,
    4318,  1978,  5231,  2499,  2175,  2079,  -950,  2722,  1979,  2074,
     516,  4137,  2176,  1980,  4385,  4386,  2072,  3123,  4387,  4388,
    4389,  5969,  1981,   766,  1205,  1206,  1207,  1208,  1982,   628,
    1393,  1393,  4748,   629,  5654,  2081,  4666,  1983,  1984,   802,
     714,  2080,   715,  4748,   820,   820,  2077,  2177,  2405,  2113,
    5770,  2723,  5771,  5232,  2078,  1908,  1908,  1908,  2097,  5756,
    3277,  3621,  5136,  2079,   767,   970,  1987,  1988,  5374,  2080,
    1989,  5969,  3707,  3951,   820,  4233,  2509,  3951,  5972,  3290,
     768,  2114,  5813,  4088,  5814,  1996,  5990,  3708,  3295,  5970,
    1997,  1998,  1999,   539,  3297,  2002,  4155,  4200,  2003,  4202,
     516,  5819,  3309,  5814,  5820, -3547,  5814,   541,   630,  5863,
    2004,  4318,  3321,   545,  2005,  3323,   548, -3580,  2368,  1234,
    1234,   514,   540,   566,  4269,  1239,  1239, -1676,  1240,  1240,
     489,  2827,   490,   491,  1231,  1231,   511,  4775,   571,  5970,
    6074,  2006,  5988,   802,  5233,  2007,  2724,  6296,  2081,  5864,
    4986,  4318,  -723,   544,  6012,  2008,  6013,  2725,  6043,  2178,
    6044,   543,  6075,  2080, -1675,  1238,  1238,  6052,  2009,  6053,
   -2311,  5559,  4755,  1237,  1237,  2010,  2081,  2077,  6087,  2011,
    4374,  5973,  5971,  4755,  2369,  2078,  2179,  6133,  2013,  1353,
    6212,  3193,  6213,  2014,  2079,  2370,   715,   769,  5931,  2015,
    4748,  2097,  6247,  2371,  5068,  5932,  4264,  6248,  6260,  5356,
    6261,   750,   751,  2016,  2020,   812, -2081,  6269,  2021,  6270,
    5933,  2080,  -725,   802,  6286,  5214,  5814,  2023,   770, -2309,
    2372,  3194,  5971,  2115,  6288,   802,  5814,  5911,  6201,   802,
    3793,  6289, -2281,  5814,  2509,   820,  2024,  2025,   752,  -725,
    2026,  2027,  5214,  2882,  2028,  2029,  1005,  1006,  1007,  1008,
    1009,  1010,  1011,  1012,  1013,  1014,  1015,  5789,  3195,  4461,
    2081,  4549,  6315,   625,  5814,  2030,  -725,  2031,  2032,   767,
     820,   820,  2116,  6325,   542,  5814,  2373,   753,  2033,  2034,
    1471,  5972,  6348,  2037,  5356,  3707,  4032,  2920,  4966,  6425,
    4446,  6426,  4931,  -725,  2038,  2039,   767,  2117,   959,  5930,
    3708,  5216,  2040,  2041,  2374,  2042,   820,  2043,  4366,  4367,
    4368,  4369,  3707,  4371,  4372,  2045,  2077,  6117,  2081,  2046,
    2047,  1814,  4400,     9,  2078,  2049,  3794,  3708,  5973,  2050,
    4755,  5972,   960,  2079,  2121,  2051,  4557,  5934,   626,  2688,
    2689,  5459,  2080,  5460,  2052,  5461,  1037,  5462,  2055,  5008,
    5935,  4415,  4416,    14,  4418,  2077,  4420,  4421,  4422,  4423,
    4424,  4425,  4426,  2078,  4428,  -725,  3949,  5936,  4437,  2056,
    2059,  2180,  2079,  2060,  2061,  4560,  3196,  2097,   961,  2062,
    1806,  2063,    20,  2064,  5215,   962,  2065,  2120,  3197,  1811,
    2119, -2542,  -725, -2528, -2529,  4459,    23,  2126,  2134,   541,
    5231,  2135,   769,  4748,  2125,   545,  2136,  2137,   548,  6054,
    2077,  2142,   963,  2168,  2169,   802,   637,  2171,  2078,  4748,
     964,  2190,  2208,  3235,  3236,  1057,  2209,  2079,  2210,   769,
    3950,  2211,    28,  -725,  1810,  2422,   820,   820,  3248,  2230,
    3250,   802,  2231,  2240,  2243,   544,  5990,  2244,  2254,  2081,
    2181,  5232,   754,   543,  4498,  5173,   965,  6374,  6375,  2182,
    -725,  6376,  5174,  6377,  5175,  2266,  2298,  2308,  6430,   755,
    3707,  5968,     4,     5,  1005,  1006,  1007,  1008,  1009,  1010,
    1011,  1012,  1013,  1014,  1015,  3708,  2314,  2310,  3198,  2320,
    1911,  2080,  2321,   714,  1279,   756,    39,  2327,   905,  2328,
    2330,   966,   967,  6158,  2332,  3484,  2336,  5622,  2353,  5937,
    2354,  5234,  2355,  6350,  1071,  2357,  2366,  5720,  5721,  2377,
    5723,  2378,  2381,  2391,  5216,  2397,  5984,  1910,   788,   648,
    2080,  2407, -1334,  3251,  3252,  1909, -1334,  2408,   757,  2418,
    5931,  5973,  2427,  4755,  2428,  2437,  2441,  5932,  6186,  4576,
    -723,  5216,  5985,  2444,  2456,  2460,  2466,  1809,  3199,  4755,
    2473,   789,  5933,  2487,  2496,  2500,  2492,  2521,    50,   771,
    2528,  2537,  2544,  2545,  1037,  2554,   542, -1334,  4710,  6257,
    3235,  3236, -1334, -2081, -2281,  2080,   649,  -166,   869,  2557,
    4614,  2559,  2560,  2564,  2565,  3248,  3381,  3250,  2081,  2567,
    2573,  2571,  2577,  2579,   820,  2591,   802,    82,  2586,  2589,
    3843,   820,   820,  -950,  4632, -1334,  2593,  4635,  4636,  2594,
     905,  5235,  2595,  2596,   867,  2598,  2599,  6265,  4631,   968,
    2623,  2631,  2642,  1948,  5624,   658,  2646,  2081,  2644,  4342,
    2647,  2648,  2650,  2651,  2653,  6438,  2654,  2658,  2669,   715,
    2670,  2671,   870,  1057,  5986,   650,  5987,  2680,  1908,  2687,
    2701,  2729,   772,  2743,  5649,  2742,  2755,   651,  2761,  2744,
    2757,  5537,  5538,  4686,  5540,   516,   516,  2760,  5969,  5545,
    1995,  2808,  5549,  2812,  2823,  5552,  5553,  2833,  2837,  5934,
    3251,  3252,  2081,  5561,  2852,  5562,  2856,  2883,  2884,   969,
    2912,   790,  5935,  2918,  5568,  2911,  2924,  2917,  2935,  5216,
    2963,  2962,  2943,  2940,  6257,   802,  2964,   820,  2989,  5936,
     802,   802,  5870,  3004,  5871,  5872,   812,  4726,     4,     5,
     652,  5273,  3005,  3006,  5217,  3007,  3009,  3010,  3011,  3016,
    3029, -2131,  1071,  4780,  4711,  4712,  5970,  3026,   802,   802,
    3030,  5297,  3032,  3035,  3036,  4808,  2076,  4888,  2077,  3038,
    6265,  5217,  3037,  3039,  3046,   653,  2078,  3047,  3056,  3057,
    3058,  3059,  3060,  3061,  6329,  2079,  3063,  3064,  3070,  3074,
    -914,  3071,  -914,  3079,  3075,  3084,  4377,  3090,  3844,  5105,
    5106,  5107,  5108,  5109,  5110,  5111,  5112,  5113,  5114,  5988,
    5116,  5117,  5118,  5119,  5120,  5121,  5122,  5123,  2430,  5124,
    5125,  3093,  3098,  5129,  5130,  3121,  6419,  2706,  2707,  2708,
    2709,  3124,  3968,  3125,  3126,  3127,  3130,  3138,  3139,  3140,
    6429,  3152,  3155,  3148,  3845,  3153,  6419,   970,  3156,  5971,
    3169,  3168,  3172,  6429,  5218,  3173,  1279,  3192, -2553,  2706,
    2707,  2708,  2709,  3206,  4727,  5623,  3220,  3215,  3207,  2156,
    3216,  5937,  5624,  2710,  2711,  2712,  3221,  3222,  3227,  3261,
    2548,  5218,  3258,  3288,  3296,  3314,  3317,   654,  3924,  3322,
    3339,  3333,  3338,  1421,  3344,  3345,   959,  3346,  3354,  3357,
    3377,  3401,  3614,  3402,  3420,  2710,  2711,  2712,  3969,  3423,
    3425,  3426,  3428,  4926,   655,  3437,  3439,  3442,  3438,  3445,
    3443,     9,  3846,  3453,  2713,  2714,  5239,  3509,  3512,  5234,
     960,  5249,  3460,  3565,  4729,  3577,  3464,  3467,  3476,  3477,
    3584,  3479, -1475,  2080,  3480,  3481,  3482,   516,  3552,  5625,
    4949,    14,  5626,  5409,  3486,  3494,  2713,  2714,  5972,  2297,
    1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,  1013,  1014,
    1015,  3498,  2368,  3506,  3513,  3535,   961,   869,  3517,  3518,
      20,  3530,  3523,   962,  3527,  3847,  2368,  3528,  2715,  3534,
    3540,  4730,  4731,  4732,    23,  3545, -1334,  2111,  5544,  3558,
    2132,  3848,  3849,  3567,  5744,  3568,  3850,  3851,  3852, -1641,
     963,  4733,  1167,  3569,  3570,  5677,  2035,  3589,   964,  2053,
    2715,  2057,  3592,  3594,  4998,  3948,  3595,  3597,  3598,  3605,
      28,  3601,  3606,  3627,  3953,  2289,  3642,  3607,  2369,  5235,
    2368,   870,  5391,  3646,  3645,  3647,  3654,  3650,  3655,  2370,
    2081,  2716,  2369,   -73,   965,  3670,  4632,  2371,  3658,  3674,
    1037,  2406,  3684,  2370,  2406,  4734,  3687,  4735,  3694,  4614,
    4631,  2371,  5532,   820,  3853,  3688,  5029,  3712,  5434,  3952,
    4748,  3713,  3741,  2716,  2372,  -914,  3743,  4736,  3745,  3749,
    5028,  3781,  3744,  3748,    39,   656,  3806,  3788,  2372,   966,
     967,  3792,  3813,  3817,  3825,  4737,  2369,  2827,  4799,  3821,
    3824,  3835,  4738,   657,  3836,  5547,  5055,  2370,  3837,  3840,
    3841,  5056,  3838,  5990,  1168,  2371,  3854,  4739,  5066,  3842,
    3879,  3882,  1169,   516,  4740,  3885,  3889,  3894,  3895,  1057,
    2373,  3896,  3897,  3898,  3921,  3899,  2717,  1170,  3900,  4741,
    3901,  3902,  2372,  3928,  2373,  3903,  5146,  1171,  1172,  1173,
    3904,   658,  4803,  4690,  3905,   802,    50,  1174,  2374,  3906,
    3907,  5100,  3908,  5416, -3849,   802,  3909,  5625,  2717,  3910,
    5626,  3911,  2374,  3912,  1814,  5432,  3913,  3914,   659,  5627,
    3915,  3916,  3917,     4,     5,  3918,  3935,   660,  3929,  5128,
    3958,  3959,  3951,  3936,  3934,    82,  4742,  3975,  2373,  3978,
    3981,  3930,  3931,  2718,  3932,  3982,  4743,  3994,  5973,  2482,
    4755,  3996,  3984,  3997,  3999,  3998,  4004,   968,  1071,  1807,
    4009,  2269,  4000,  4008,  4010,  4012,  2374,  4056,  4026,  4057,
    4058,  4071,  4072,  4073,  4079,  2718, -1684,  5154,  4092,  5901,
    4124,  4123,  4111,  3796,  4744,  4138,  5157,  4112,     4,     5,
    4125,  4161,  2882,  4139,  5669,  4151,  4152,  4745,  5674,  5675,
    4153,  1814,  3947,  3578,  4163,  4691,  4167,  4170,  4169,  2719,
   -3849,  2720,   820,  4692,  4171,  4174,  4175,  2721,  4187,  4179,
    4188,  4180,  2946,  1808,  5205,  2945,  2269,   969,  4693,  3326,
    4212,  5156,  4226,  3366,  4227,  1175,  4746,  4232,  4694,  4695,
    4696,  2719,  4747,  2720,  4231,  4236,  3949,  1176,  4697,  2721,
    4245,  4272,  4265,  4278,  4238,  4244,  4280,  4282,  4283,  4284,
    5100,  4307,  4308,  4311,  4312,  4339,  4748,  4335,  4348,  4349,
     812,  5623,  4380,  4381,  4382,  5277,  4398,  2722,  5624,  4402,
    4408,  4452, -2034,  4460,  4409,  4463,  4410,  4469,   516,  4412,
    4493,  3342,  4473,  4475,  4481,  4480,  5290,  4510,  4501,  4503,
    4749,  4511,  4566,  4517,  3397,  4577,  4520,  4750,  4600,  2722,
    3950,  4521,  5298,  4578,  1906,  1906,  1906,  4522,  4523,   516,
    3614,  2723,  4588,  4589,  4592,  6398,  4617,  4602,  4618,  4603,
    4604,  4605,  3947,  4606,  4607,  4621,  3947,  4608,  4626,  4615,
     514,  4751,  4641,  4619,  4622,  4642,  4647,  1177,  4660,  4665,
    4678,  1911,  4666,  2723,  5155,  4667,  4752,  4753,  4689,  4681,
    4687,  3968,  4708,  3269,  4709,   970,  4715,  4716,  4718,  4754,
    4721,  4770,  4784, -1800,  2270, -1805,  4806,  4811,  4814,  4830,
    4820,  4815,  4835,  4821,  4848,   674,  4698,  1178,  1910,  4901,
    4893,  4916,  4920,  4614,  4927,  4928,  1909,  4933,  4699,  4941,
    4954,  1179,  4957,  4960,  4969,  4958,  4755,  4970,  5000,  3537,
    4583,  5009,  5011,  4325,  5016,  5012,  2724,  5015,  5017,  2895,
    5021,  5035,  5036,  5049,    51,  5072,  5067,  2725,  5073,  5068,
    5074,  5078,  5075,  5076,  2827,  2150,  5077,  3969,  5081,  2270,
    4888,  5101,  5102,  5103,   516,  4686,  5115,  4859,  2724,  5143,
    5165,  5845,  -262,  5824,  5168,  2621,  5178,  5180,   820,  2725,
    5170,  5100,  5194,  5399,  5207,  5371,  5385,  5386,  5387,  2879,
    5208,  5209,  5241,  5225,  5216,  5227,  5240,  5250,   802,  5251,
    5252,  5253,  5254,  4700,  5255,  5257,  5258,  6305,  5259,  5268,
    5260,  5271,  5261,  5274,   820,  5275,  5289,  5282,  4701,  5293,
    5294,  5301,  5304,  5306,  5430,  5431,  5300,  5310,  5311,  5312,
    5319,  5323,  5325,  5467,  5444,  3924,  5324,  5329,  5331,  1908,
    2271,  5334,  5341,  5344,  5366,  5342,  5350,  5466,  5358,  5368,
    5382,  5480,  1161,  5369,  2272,  1814,  2273,  5377,  4702,  5370,
    5378,  5389,  5414,  5392,  3924,  5393,  5485,  1995,  5497,  5505,
    5506,  5489,  4703,  5507,  5510,  5517,  5154,  5512,  5518,  5519,
    5520,  5503,  2740,  1995,  5529,  5157,  5535,  5528,  2274,  5527,
    5530,  5533,  5546,  4396,  5550,  5551,  5583,  5539,  5585,  1161,
    3949,  2275,  5609,  5625,  5587,  2271,  5626,  5607,  5611,  5613,
     869,  5100,  5556,  5615,  5635,  5786,  5616,  5618,  5621,  2272,
    5632,  2273,  5566,  5647,  5066,  5066,   802,  5653,  5666,  5569,
    5156,  5570,  5571,  5648,  2276,  5658,  5555,  5659,  2827,  5667,
    5662,  5670,  5686,  5691,  5665,   802,  5565,  5693,  5682,  5684,
    5717,  5066,  2277,  2274,  6126,  5689,  5690,  5696,  5066,  5698,
    4441,  5722,  5713,  5100,  3950,  5724,  2275,  5714,  5725,  5727,
    5397,  5729,  5740,  5746,   870,  5757,  5751,  5747,  5591,  6434,
    5230,  5777,  5401,  5762,  5784,  5785,  5584,  5790,  5791,  5792,
    5794,  5797,  5812,  5808,  6126,  5828,  5816,  5402,  5818,  2276,
    5852,  5822,  5834,  5874,  5855,  5873,   516,  5838,  5876,  5884,
    5854,  2888,  5885,  5886,  5899,  5894,  5892,  2277,  1995,  5903,
    5893,  5902,  5904,  5910,  5912,  5916,  5926,   804,  5925,  5929,
    2278,  5949,  5950,  5961,  1911,  5955,  5997,  2279,  4726,  6011,
    6017,  6015,  6016,  6018,  6024,  6023,  6028,  2280,  6025,  6039,
    6037,  6045,  6046,  5155,  5639,  6049,  6041,  6042,  6070,  2955,
    6055,  2281,  6059,  6067,  3740,  3798,  5055,  5646,  6062,  6110,
    6098,  1910,  6084,  6086,  6104,  5066,  6106,  6108,  6112,  1909,
    6115,  6116,  6109,  6114,  6129,  6130,  5657,  6131,  6132,  5657,
    5657,  6166,  6173,  2282,  5663,  2278,  2283,  2877,  5100,  6202,
    6188,  6126,  2279,  6223,  6207,  6209,  5673,  6210,  6217,  6228,
    6234,  5681,  2280,  6220,  2284,  6243,  6235, -2526, -2527,  6229,
    6236,  6249,  4888,  6250,  6246,  6254,  2281,  5683,  1806,  5709,
     675,  5709,  4856,  4861,  6279,  6282,  6276,  1811,  6306,  6290,
    6291,  6300,  6351,  5685,  6304,  2285,  1804,  6309,  6372,  6354,
    3814,  6359,  5731,  6367,  5733,  6364,  6431,  6363,  2282,  6365,
    6373,  2283,  6385,  6380,  6389,   905,  6390,  6391,  6393,  6396,
    6397,  6399,  6394,  6395,  1949,  6405,  6406,  6420,  5695,  2284,
    5697,  6433,  1810,  4192,  1995,  3711,  4439,  5597,  5595,  4287,
    1161,  5596,  5952,  4829,  1161,  2877,  5694,  6003,  6138,   812,
    6298,   812,  1908,  5498,  5732,  1382,  1387,  3796,  1383,  3796,
    2285,  4917,  4456,  2442,  4451,  3948,  5376,  1161,  4923,  2903,
    3327,  1949,  3722,  4497,  3953,  4705,  1161,  4477,  3224,  3413,
    1499,  3412,  3414,  5841,  5735,  5100,  5066,  5100,  5840,  5688,
    5264,   820,  5100,  4875,  5066,  5753,  5020,  1906,  5026,  5100,
    5100,  6060,  6061,  5066,  6063,  6064,  6065,  6066,  5754,  5100,
    5351,  5634,  6172,  5798,  3582,  5100,  5066,  6259,  5066,  3952,
    6353,  6313,  6069,  5796,  3831,  2432,  5763,  6187,  5262,  5536,
    5999,  5664,  5578,  5267,  5734,  5408,  6333,  6227,  2406,  6231,
    3167,  1161,  1161,  1161,  1161,  6149,  5775,  1949,  6150,  6160,
    6151,  6152,  4988,  4951,  1161,  1809,   802,  4509,  6233,  6170,
    3278,  3960,  2512,  6297,  4580,  5003,  5005,  5001,  6358,   774,
     775,  6326,  5959,  6327,  4279,  6199,  5709,  6206,  6204,  5879,
    5730,  5728,  4720,  5265,  5576,  2451,  3294,  3094,  2624,   959,
    4263,  6035,  4261,  3888,  6168,  2827,  5883,  3260,  4168,  3703,
    4490,  4005,  4940,   803,  4126,  5657,  2416,   760,  4219,  5821,
    2415,  2367,  5295,  2139,     9,  4338,  5826,   802,  4176,  1416,
    5014,  5100,  5100,   960,  5856,  4095,  4093,  2821,  4146,  6180,
    4143,   802,  6183,  2880,  4610,  4530,  5316,  3924,  2677,  6299,
    6191,  6147,  3951,  6194,    14,   516,   812,  2731,  6384,  6382,
    1949,  2359,  6272,  3147,  3144,  5516,  2360,  2361,  2741,  5046,
    5861,  2362,  2364,  5719,  6155,  5379,  6156,  3137,  2686,   961,
    3808,  3158,  4599,    20,  5198,  5197,   962,  4334,  4598,  5629,
     959,  6048,  5891,  5365,  5620,  5100,  4341,    23,  5318,  5642,
    4337,  5100,  1439,  5888,  4994,  2424,  2410,   785,  2827,  4003,
    5203,  3800,  3337,   963,  5982,     9,   776,  5066,  5982,  1300,
    2569,   964,  2250,  3369,   960,  4939,  5809,  4363,  5905,  5909,
    5709,   874,  5059,    28,  5045,  5042,  5384,  1835,  6349,  6312,
    3676,  2995,  1284,  5709,  1285,    14,  1161,  1830,  3677,  4213,
    1949,  2417,  1287,  5839,  5924,  3716,  4944,   965,  5652,  2629,
   -3702, -3702, -3702,  6352,  3082,  4998,  4768,  4768,  5521,  5726,
     961,  5657,  6437,  6432,    20,  6386,  6436,   962,  1951,  5956,
    3691,  5100,  3228,  4122,  4001,  4204,  4027,  5644,    23,  4205,
    1242,  3419,  3641,  4206,  1243,  5996,  4201,    39,  4198,  4197,
     812,  4640,   966,   967,   963,  3104,  3398,  1197,  2154,  3948,
    4836,  2133,   964,   812,  3878,  2923,  3229,  4172,  3953,   868,
    4281,  3421,  6030,  5778,    28,   545,  5303,  5206,   873,  2617,
    1334,  5100,  4889,  2618,   794,   778,   779,   780,  4781,  2313,
    3771,   802,  4937,   820,  5493,  1928,  3415,  1930,   965,  6031,
    5100,   802,  1949,  3230,  4500,  1949,  1940,  5982,  5061,  6005,
    6241,  5494,  5487,  3952,  5488,   544,  5504,  2562,  1941,    50,
       0,  1822,     0,   872,  5982,     0,  4768,     0,     0,     0,
       0,  6422,     0,     0,     0,     0,  6424,     0,    39,     0,
       0,     0,     0,   966,   967,  1995,  3462,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  6085,    82,     0,
       0,     0,  6097,     0,     0,     0,     0,     0,  6103,     0,
       0,     0,     0,     0,     0,  1161,     0,     0,     0,  1161,
     968,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   820,  6111,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -3702,   802,
      50,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5861,     0,     0,     0,  4686,  4686,  3532,     0,     0,     0,
       0,     0,     0,  1926,     0,     0,  3951,     0,     0,  3547,
       0,     0,     0,  4271,     0,     0,   871,     0,     0,    82,
     969,  5909,     0,     0,     0,     0,     0,     0,     0,     0,
    5924,     0,     0,     0,     0,     0,  5982,     0,     0,     0,
    4888,   968,     0,   820,     0,     0,     0,     0,  6239,     0,
    6239,  6181,  6182,     0,     0,     0,     0,     0,     0,     0,
       0,  3947,     0,  6193,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  6208,     0,     0,     0,     0,
       0,     0,     0,  5657,     0,  5657,  5657,     0,     0,     0,
       0,     0,     0,     0, -3702,     0,     0,     0,     0,  3604,
       0,     0,     0,  2074,     0,     0,     0,     0,     0,     0,
    2072,   969,     0,     0,     0,  2156,     0,     0,  6238,     0,
    6238,     0,     0,     0,     0,     0,  4370,     0,     0,     0,
       0,     0,     0,     0,  5982,     0,     0,     0,  4888,     0,
       0,     0,     0,     0,     0,     0,  2827,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   970,     0,
       0,  4411,     0,  4413,  4414,     0,   801,     0,   820,  4419,
       0,  6266,     0,     0,  6267,  3231,     0,  4427,     0,     0,
       0,  4435,     0,  4438,     0,     0,  5657,  5657,     0,     0,
    6283,     0,     0,     0,  5982,  5982,     0,  5657,     0,     0,
       0,     0,  2621,     0,     0,  3232,  3233,     0,  3234,  3235,
    3236,  3237,  3238,     0,  3239,  3240,  3241,  3242,  3243,  3244,
    3245,  3246,     0,  3247,  3248,  3249,  3250,     0,     0,     0,
       0,     0,  5982,     0,     0,     0,     0,     0,     0,     0,
       0,  2297,  2297,     0,     0,   820,     0,     0,     0,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5657,
       0,  4768,     0,     0,     0,     0,     0,     0,     0,  4726,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2827,     0,  5153,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3251,
    3252,     0,  -914,     0,  -914,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1949,     0,     0,     0,
    2406,     0,  2406,  2406,  3820,  1161,     0,  1161,     0,     0,
    2430,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1318,     0,     0,     0,     0,     0,     0,     0,  4768,     0,
       0,     0,     0,  2827,     0,     0,     0,   820,     0,     0,
       0,     0,   820,     0,     0,     0,  4727,  2827,     0,     0,
       0,     0,     0,  2827,     0,     0,  1161,  1161,     0,     0,
    2827,     0,  1161,     0,     0,     0,  1161,  1161,  1161,  1408,
       0,     0,     0,     0,     0,     0,  1161,  1161,  1949,     0,
       0,     0,  1161,     0,     0,     0,  1161,  1161,  1161,     0,
    1161,  1161,  1161,  1949,  1949,     0,     0,     0,  1906,     0,
    1161,     0,  1161,     0,     0,  1161,  1161,  1161,  1161,     0,
    1161,     0,  1161,  1161,     0,     0,  4729,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1161,  1161,  1161,  1161,
    1161,     0,  1161,  1161,  1161,  1161,  1161,  1161,     0,  1161,
    1161,     0,  1161,  1161,     0,  1161,  1161,     0,     0,  1161,
    1161,     0,  1161,  1161,     0,  1161,     0,  1161,     0,     0,
       0,  1161,  1161,  1161,     0,     0,  1161,  1161,  1161,  1161,
       0,  1161,     0,  4730,  4731,  4732,     0,     0,  1161,     0,
       0,     0,     0,     0,  1161,  1161,  1161,  1161,  2621,     0,
       0,     0,     0,  4733,     0,  1161,  1161,     0,  1161,  1161,
       0,     0,  1161,  1161,  1161,  1161,  1161,  1161,  1161,  1161,
    1161,  1161,  1161,  1161,  1161,     0,     0,  1161,     0,     0,
       0,     0,  1949,     0,     0,     0,     0,     0,     0,  1949,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1899,  4734,     0,  4735,
       0,     0,  1161,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  -914,     0,  4736,
    1949,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4768,     0,  4737,  4768,     0,
       0,     0, -1889, -1889,  4738,     0,     0,     0,     0,     0,
    4837,  4838,  4839,     0, -1889,     0,     0,     0,     0,  4739,
       0,     0,  5153,     0,     0,     0,  4740,     0,     0,     0,
       0,     0,     0,     0,  4908,  4911,     0,  4914,     0,     0,
       0,  4741,     0,     0,     0,     0,     0,     0,     0,  2633,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   909,     0, -1889,     0,  1161,
       0,  1161,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4742,     0,
       0,     0,     0,     0,  4149,  1949,     0,   910,  4743,     0,
       0,     0,     0,     0,     0, -1889,  1161,     0,     0, -1889,
       0,  1995,     0, -1889,  4768,     0,     0,     0,   912,     0,
       0,     0, -1889, -1889,     0,     0,     0,   913,     0, -1889,
       0,     0,     0, -1889,     0,     0,  4744,     0, -1889,     0,
   -1889,     0,     0,     0, -1889,     0,     0,     0,   914,  4745,
       0,     0, -1889,     0, -1889,     0,     0,     0,     0, -1889,
       0,  1906,   915,     0,     0,     0,     0,   916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2955, -1889,
       0,     0,     0,  4435,     0,     0,     0,     0,  4746, -1889,
     917,     0, -1889,  1161,  4747,     0,     0,     0,     0,  1949,
       0,  1949,     0,     0,  5006,     0,     0, -1833, -1833,     0,
       0,     0, -1889,     0,     0,     0,     0,     0,  4748, -1833,
       0,  1161,     0,     0,     0,     0,     0,     0,  1161,     0,
       0, -1889,     0,     0,     0, -1889,     0,     0,     0,     0,
       0,     0,     0,     0, -1889,     0,     0,     0,     0,   918,
       0,     0,  4749,   919,  2633,     0,     0,     0,     0,  4750,
       0,     0,     0, -1889,  1804,     0,     0,     0,     0,     0,
       0,   920,     0,     0,     0,   921,   922,     0, -1889,     0,
       0,     0, -1833,     0, -1889, -1889,     0,     0,     0,  2251,
       0,     0,     0,  4751,     0,  2259,     0,     0, -1889,     0,
   -1889,     0,     0,     0,     0,     0,   923,     0,  4752,  4753,
       0,     0,     0,   924,   925,     0,     0,     0,     0,     0,
   -1833,  4754,     0,     0, -1833,     0,     0,     0, -1833,     0,
       0,     0,     0,     0,     0,     0,     0, -1833, -1833,  2406,
       0,     0,     0,     0,     0,     0,     0,     0, -1833,     0,
       0,  3947,     0, -1833,  4724, -1833,  4725,     0,  4755, -1833,
       0,  4726,     4,     5,     0,     0,     0, -1833,     0, -1833,
    2604,     0,     0,     0, -1833,     0,     0,     0,     0,  1408,
       0,     0,     0,     0,     0,     0,     0,  5134,     0,     0,
       0,     0,     0,     0, -1833,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1833,     0,     0, -1833,     0,     0,
    2605,     0,     0,     0,  -914,     0,  -914,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1833,  1161,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     959,     0,  2430,     0,     0, -1889, -1833,     0,     0,     0,
   -1833,     0,     0,  2606,     0,     0,     0,     0,  2607, -1833,
       0,     0,     0,     0,  2443,     9,     0,     0,     0,  2608,
    2609,     0,  1949,  1161,   960,  2455,     0,     0, -1833,     0,
       0,  1161,  1161,     0,     0,     0,     0,     0,  4727,     0,
       0,     0,     0, -1833,     0,    14,     0,     0,     0,     0,
   -1833,     0,     0,     0,  2406,     0,     0,     0,     0,     0,
    4728,     0,     0, -1833,     0, -1833,     0,     0,     0,     0,
     961,     0,     0,     0,    20,     0,     0,   962,     0,     0,
       0,     0,     0,     0,     0,  1161,     0,     0,    23,     0,
       0,     0,     0,     0,     0,     0,  1949,  1949,     0,     0,
       0,     0,     0,     0,   963,     0,     0,     0,  4729,     0,
       0,     0,   964, -1889,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    28,     0,     0,     0,  1161,  1161,
    1161,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4542,     0,     0,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4730,  4731,  4732,     0,     0,
       0,     0,     0,     0,  2610,     0,     0,  1949,     0,     0,
       0,     0,     0,  4575,  2611,  4733,     0,  1161,    39,     0,
    1949,     0,     0,   966,   967,  2612,     0,     0,     0,     0,
       0,  2613,     0,     0,     0,  1161,  4768,     0,     0,  1161,
    1161,     0,  1161,  1161,     0,     0,     0,     0,     0,     0,
       0,  1161,     0,  1161,     0,     0,     0,     0,     0,     0,
       0,     0,  2614,     0,  4768,  3947,  2615,     0,  4768,  4734,
       0,  4735,     0,     0,     0,   867,     0,     0,     0,     0,
       0,  4634,     0,     0,  1161,     0,     0,     0,     0,  -914,
      50,  4736,     0,     0,     0,     0,     0,  2616,     0,     0,
    5418,  5421,  5423,  5425,     0,     0,  5428,  5429,     0,  4737,
    1161,  5433,     0,     0,  5439,     0,  4738,  5443,     0, -1889,
    5418,     0,     0,     0,  5454,  5418,  1949,     0,     0,    82,
       0,  4739,  2634,     0,     0,     0,     0,     0,  4740,     0,
       0,     0,     0,     0,     0,     0,  1161,  2297,     0,     0,
   -1889,   968, -1889,  4741,     0, -1889, -1889,     0, -1833,     0,
       0,     0,  1161,     0,     0,     0,     0,     0,     0,     0,
    4768,     0,     0,     0,     0,     0,     0,     0,  4768,     0,
       0,     0,     0,     0,  4768,  4768,     0,     0,     0,     0,
       0,     0,     0,  2566,     0,  2566,     0,     0,     0,  1161,
       0,     0,     0,     0,  3990,     0,  1161,  4768,     0,     0,
    4742,     0,     0,  1949,     0,     0,     0,     0,     0,     0,
    4743,   969,     0,     0,  4768,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2406,     0,     0,     0,     0,     0,     0,
       0,     0,  1949,  1949,     0,     0,     0,     0,  4744,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4745,     0,     0,     0, -1889, -1889,     0,     0,  4908,
       0,  4911,     0,  4914,     0,     0,     0, -1889,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1161,     0,     0,     0,  4768,
    4746,     0,     0,     0,     0,     0,  4747,     0,     0,     0,
       0,  4768,  2633,     0,     0,  4768,     0,     0,     0,     0,
       0,     0,     0,     0, -1833,     0,     0,  5619,  1161,     0,
    4748,     0,     0,     0,     0,     0,     0,  2634,     0,     0,
   -1889,  1949,     0,  1949,  1949,  1949,     0,  1161,     0,   970,
       0,     0,     0,  1161,     0, -1833,  4768, -1833,     0,     0,
   -1833, -1833,     0,     0,  4749,     0,     0,     0,     0,     0,
       0,  4750,     0,     0,     0,     0,     0,     0, -1889,     0,
       0,     0, -1889,     0,     0,     0, -1889,     0,     0,     0,
       0,     0,     0,     0,  1161, -1889, -1889,     0,     0,  2805,
       0,     0,     0,  2809,     0,  4751, -1889,     0,     0,  2815,
       0, -1889,     0, -1889,     0,     0,     0, -1889,     0,     0,
    4752,  4753,  4768,  6278,     0, -1889,     0, -1889,     0,     0,
       0,     0, -1889,  4754,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0, -1889,     0,  4768,     0,     0,     0,     0,     0,
       0,     0, -1889,     0,     0, -1889,     0,     0,     0,     0,
    4755,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1889,     0,     0,     0,  2915,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1889,     0,     0,  4768, -1889,  4768,
    4768,     0,     0,     0,     0,     0,     0, -1889,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2969,     0,     0, -1889,     0,  2975,  1949,
    2977,     0,  1162,     0,     0,     0,  4768,     0,     0,     0,
       0, -1889,     0,     0,     0,     0,     0,     0, -1889,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1889,     0, -1889,     0,     0,     0,     0,     0,     0,
    4768,     0,     0,     0,     0,     0,     0,  3012,     0,  1162,
       0,     0,     0,  1161,     0,     0,     0,  1161,     0,  3022,
    1161,     0,     0,     0,     0,     0,     0,     0,     0,  1161,
    4768,     0,     0,     0,     0,     0,     0,     0,  1161,     0,
    1161,  1161,     0,  1161,  1161,  1161,  1161,     0,  1161,     0,
    1161,  1161,     0,  1161,     0,     0,     0,     0,     0,     0,
       0,  1161,  1161,     0,     0,     0,  1161,  1161,  1161,     0,
       0,     0,     0,     0,     0,     0,  1161,  1161,  1161,     0,
    1161,     0,  1161,     0,  1161,     0,  1161,     0,  1161,     0,
       0,     0,     0,  1161,  1161,     0,  1161,  1161,  1161,     0,
       0,     0,  1161,     0,     0,  1161,     0,     0,     0,     0,
       0,     0,     0,     0,  1161,     0,     0,  1161,     0,  1161,
    1161,  1161,     0,     0,  1161,  3110,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1408,     0,     0,  1161,     0,  1161,     0,
       0,  1161,     0,     0,  1408,  1408,     0,     0,     0,     0,
       0,  1161,  1161,  1161,  1161,  1949,  1161,     0,     0,     0,
       0,  1161,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1949,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -1072, -1072,     0,  3211,     0,
       0,     0,     0,     0,  3214,   959,     0,  4726,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1949,
       0,     0,     0,     0,     0,     0, -1889,     0,     0,     0,
       9,     0,     0,     0,     0,  4849,     0,  4850,  4851,   960,
       0,     0,  2406,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1161,     0,     0,     0,     0,     0,     0,  4852,
      14,  4853,     0,     0,     0,     0,     0,  4854,     0,     0,
    1162,     0,     0,     0,  1162,  1161,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   961,     0,     0,  2430,    20,
       0,     0,   962,     0,  4726,     4,     5,  1162,     0,  4855,
       0,     0,     0,    23,     0,     0,  1162,     0,     0,     0,
       0,     0,  4149,     0,     0,     0,     0,     0,     0,   963,
       0,     0,  5573,     0,  4850,     0,     0,   964,     0,     0,
       0,     0,     0,     0,  4727,     0,     0,     0,     0,    28,
       0,     0,     0,     0,     0,     0,  4852,  1161,     0,     0,
    3361,  3361,     0,     0,  5574,     0,     0,     0,     0,     0,
       0,     0,  4856,   965,     0,     0,     0,     0,  1161,     0,
       0,  1162,  1162,  1162,  1162,  2430,     0,     0,  3376,     0,
    1949,     0,     0,     0,  1162,     0,  5575,     0,  1899,     0,
       0,     0,     0,  4857,     0,  4858,     0,     0,     0,     0,
       0,     0, -1889,    39,  4729,     0,  4859,     0,   966,   967,
       0,     0,     0,     0,     0,  2634,     0,     0,     0,     0,
       0,  4727,     0,     0,     0,     0,     0,     0,     0,  4860,
       0,     0,     0, -1889,     0, -1889,     0,     0, -1889, -1889,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4856,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4730,  4731,  4732,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    50,     0,     0,     0,     0,
       0,  4733,  4858,     0,     0,     0,     0,     0,     0,     0,
       0,  4729,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    82,     0,  4860,  1161,  1161,     0,
       0,     0,     0,     0,     0,     0,     0,  4861,     0,     0,
       0,     0,     0,     0,     0,  4734,   968,  4735,     0,     0,
       0,     0,     0,     0,     0,  1949,     0,     0,  4730,  4731,
    4732,     0,     0,     0,     0,     0,  3516,  4736,     0,     0,
    3520,     0,     0,     0,  4862,     0,  1162,     0,  4733,  6273,
       0,     0,     0,     0,     0,  4737,     0,     0,     0,     0,
       0,     0,  4738,     0,     0,     0,     0,     0,     0,  4225,
       0,     0,  1161,     0,     0,  1161,     0,  4739,     0,     0,
       0,     0,     0,     0,  4740,     0,   969,     0,  4863,  4864,
       0,     0,     0,     0,  4861,  4865,     0,     0,     0,  4741,
    1161,  1161,  4734,     0,  4735,  1161,     0,  4866,     0,     0,
       0,     0,     0,     0,  1949,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4736,     0,     0,  1161,  4867,  1161,
       0,  1161,     0,  1161,     0,     0,   959,     0,     0,     0,
       0,     0,  4737,     0,     0,     0,     0,     0,  1161,  4738,
    3361,  3361,  4868,     0,  1949,     0,  4742,     0,     0,     0,
       0,     9,     0,     0,  4739,     0,  4743,  1161,  1161,     0,
     960,  4740,  1161,     0,  1161,  4863,  1161,     0,     0,     0,
       0,  1161,  4865,     0,     0,     0,  4741,     0,     0,     0,
       0,    14,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4744,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4867,   961,  4745,     0,  4869,
      20,     0,  1949,   962,   970,  1162,  1161,     0,     0,  1162,
       0,     0,     0,     0,    23,     0,     0,     0,     0,     0,
       0,  3680,     0,  4742,     0,     0,     0,     0,     0,     0,
     963,     0,     0,  4743,     0,     0,  4746,     0,   964,     0,
       0,     0,  4747,     0,  1161,     0,  3704,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4748,  4870,  1949,     0,
       0,  4744,     0,     0,   965,     0,     0,     0,  4871,  4872,
    4873,     0,     0,     0,  4745,     0,  4869,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4749,     0,     0,     0,     0,     0,     0,  4750,     0,     0,
       0,     0,     0,     0,    39,     0,     0,  3763,     0,   966,
     967,     0,     0,  4746,     0,     0,  3772,     0,     0,  4747,
       0,  1408,     0,     0,     0,     0,     0,  1408,  1161,     0,
       0,  4751,     0,     0,     0,     0,     0,     0,  1161,     0,
     959,     0,  1408,  4748,     0,     0,  4752,  4753,     0,     0,
       0,     0,  1161,     0,  1949,  1161,     0,     0,     0,  4754,
       0,     0,     0,  4874,     0,     9,     0,     0,     0,     0,
       0,     0,     0,     0,   960,  2621,    50,  4749,     0,     0,
       0,     0,     0,     0,  4750,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -3694,  4755,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    82,     0,     0,  4751,     0,
     961,     0,     0,     0, -3693,     0,     0,   962,     0, -1072,
       0,     0,     0,  4752,  4753,     0,     0,   968,    23,     0,
       0,     0,     0,     0,     0,     0,  4754,     0,     0,     0,
       0,     0,     0,     0,   963,     0,     0,     0,     0,     0,
       0,     0,   964,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -3693,     0,     0,     0,     0,     0,
       0,     0,     0,  4755,     0,     0,     0,     0,     0,  1161,
       0,     0,     0,     0,     0,     0,     0,     0,   965,     0,
       0,     0,     0,     0,     0,     0,     0,   969,     0,  1161,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4726,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1408,     0, -3693,     0,
       0,     0,  3986,   966,   967,  1161,  1161,     0,  1161,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1161,  1161,  1161,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1161,  1161,     0,     0,     0,
       0,     0,     0,     0,     0,  1162,     0,  1162,     0,     0,
       0,  2430,     0,     0,     0,     0,     0,     0,     0,  1161,
   -3693,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1161,     0,     0,     0,     0,     0,     0,     0,     0,
    1161,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   970,     0,  4727,     0, -3694,
       0,     0,     0,     0,     0,     0,  1162,  1162,     0,     0,
       0,     0,  1162,     0,     0,     0,  1162,  1162,  1162,     0,
       0,   968,     0,     0,     0,  1161,  1162,  1162,     0,  1161,
       0,     0,  1162,     0,     0,     0,  1162,  1162,  1162,     0,
    1162,  1162,  1162,     0,     0,     0,     0,     0,     0,     0,
    1162,     0,  1162,     0,     0,  1162,  1162,  1162,  1162,     0,
    1162,     0,  1162,  1162,     0,     0,     0,  4729,     0,     0,
       0,     0,     0,     0,     0,     0,  1162,  1162,  1162,  1162,
    1162,     0,  1162,  1162,  1162,  1162,  1162,  1162,     0,  1162,
    1162,   969,  1162,  1162,     0,  1162,  1162,     0,     0,  1162,
    1162,     0,  1162,  1162,     0,  1162,     0,  1162,     0,     0,
       0,  1162,  1162,  1162,     0,     0,  1162,  1162,  1162,  1162,
       0,  1162,     0,     0,  4730,  4731,  4732,     0,  1162,     0,
       0,     0,     0,     0,  1162,  1162,  1162,  1162,     0,     0,
    2915,     0,     0,     0,  4733,  1162,  1162,     0,  1162,  1162,
       0,     0,  1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,
    1162,  1162,  1162,  1162,  1162,     0,     0,  1162,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4734,     0,
    4735,     0,  1162,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4736,     0,     0,     0,     0,     0,     0,     0,     0,   970,
       0,     4,     5,     0,     0,     0,     0,     0,  4737,     0,
       0,     0,     0,     0,  4230,  4738,     0,     0,     0,     0,
       0,     0,     0,  1161,  1161,     0,     0,     0,     0,  1245,
    4739,  1246,     0,     0,     0,     0,     0,  4740,     0,   681,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4741,  1214,     0,     0,     0,     0,     0,     0,
       0,  1247,  1248,     0,     0,     0,     0,     0,     0,     0,
       0,  1249,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    16,    17,     0,     0,  1162,
    1161,  1162,     0,  1949,  4302,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1408,     0,     0,  4742,
    1408,     0,     0,     0,     0,     0,     0,     0,     0,  4743,
       0,     0,     0,     0,     0,     0,  1162,  1250,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1251,     0,     0,  1161,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4744,     0,     0,
       0,     0,     0,  1949,     0,     0,     0,     0,     0,     0,
    4745,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1252,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1161,  1253,  4746,
       0,     0,     0,  1162,     0,  4747,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4748,
       0,  1162,     0,     0,     0,     0,     0,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1254,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4749,     0,     0,     0,     0,     0,     0,
    4750,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1408,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1255,     0,     0,     0,
    1161,     0,  1161,     0,  4751,     0,     0,     0,     0,     0,
       0,     0,  4491,     0,     0,     0,  1256,     0,     0,  4752,
    4753,     0,     0,     0,     0,  1257,     0,     0,     0,     0,
       0,     0,  4754,     0,     0,     0,     0,     0,  1258,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1259,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4755,
       0,     0,  1260,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -2281,  1261,     0,     0,  1262,     0,  1263,     0,     0,
       0,     0,     0,     0,     0,     0,  1161,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1264,  1265,     0,     0,  1162,     0,
    1266,  1267,     0,     0,  1161,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1268,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1161,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4625,  1269,     0,
    1517,  1518,     0,  1162,     0,  1522,  1523,     0,     0,     0,
       0,  1162,  1162,     0,     0,  1532,     0,     0,     0,     0,
    1270,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1567,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1162,     0,     0,     0,  1582,
       0,  6148,     0,     0,  1271,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1272,
       0,     0,     0,     0,     0,     0,     0,     0,  1273,  1606,
       0,  1274,  1275,     0,     0,     0,  4717,     0,  1162,  1162,
    1162,  4722,  4723,     0,     0,     0,  1276,     0,  1625,  1626,
    1627,     0,     0,     0,     0,     0,     0,     0,  1635,  1636,
    1637,     0,     0,     0,     0,     0,     0,     0,     0,  1408,
    1408,     0,     0,     0,     0,     0,  1652,     0,     0,     0,
       0,     0,     0,  1277,     0,     0,     0,     0,     0,     0,
       0,  1278,     0,     0,     0,     0,     0,  1162,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1681,     0,
       0,     0, -3304,     0,  1279,  1162,     0,     0,     0,  1162,
    1162,     0,  1162,  1162,     0,     0,     0,     0,     0,     0,
       0,  1162,     0,  1162,     0,  1708,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1730,  1731,
    1732,     0,  1163,     0,  1162, -3304,  1163,     0,     0,     0,
       0,     0,  1280,     0,     0,     0,     0,     0,     0,     0,
    1751,  1752,     0,     0,  1161,     0,     0,     0,     0,  1163,
    1162,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1161,     0,
       0,     0,     0,     0,     0,     0,  1949,     0,     0,     0,
       0,     0,  1161,     0,     0,     0,  1162,     0,  1766,     0,
    1767,  1768,     0,     0,     0,     0,     0,     0,  1161,     0,
       0,     0,  1162,     0,     0,     0,     0,  1769,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,  1163,  1163,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,  1162,
       0,     0,     0,  1770,  1771,     0,  1162,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1773,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1161,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1774,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1775,  1776,     0,     0,     0,  1162,     0,     0,
       0,     0,     0,  1162,     0,     0,     0,     0,  1777,  1778,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1161,     0,     0,     0,  5080,     0,     0,     0,
       0,     0,     0,     0,  1162,     0,  5104,     0,     0,     0,
    1780,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1949,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1782,     0,     0,  1783,
       0,     0,  1784,     0,     0,     0,     0,     0,  1949,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1161,     0,     0,     0,     0,     0,  1785,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1787,  1163,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1162,     0,     0,     0,  1162,     0,     0,
    1162,     0,     0,     0,     0,  1161,     0,     0,     0,  1162,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
    1162,  1162,     0,  1162,  1162,  1162,  1162,     0,  1162,     0,
    1162,  1162,     0,  1162,     0,     0,     0,     0,     0,     0,
       0,  1162,  1162,     0,     0,     0,  1162,  1162,  1162,     0,
       0,     0,     0,     0,     0,     0,  1162,  1162,  1162,  1161,
    1162,     0,  1162,     0,  1162,     0,  1162,     0,  1162,     0,
       0,     0,     0,  1162,  1162,     0,  1162,  1162,  1162,     0,
       0,     0,  1162,     0,     0,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,  1162,     0,     0,  1162,     0,  1162,
    1162,  1162,     0,     0,  1162,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1162,     0,  1162,     0,
       0,  1162,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1162,  1162,  1162,  1162,     0,  1162,     0,     0,     0,
       0,  1162,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5415,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1161,     0,
       0,     0,  1161,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1162,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5543,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5563,     0,     0,     0,
    1161,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,  1162,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,  1163,
       0,     0,     0,     0,  1163,     0,     0,     0,  1163,  1163,
    1163,     0,     0,     0,     0,     0,     0,     0,  1163,  1163,
       0,     0,     0,     0,  1163,     0,     0,     0,  1163,  1163,
    1163,     0,  1163,  1163,  1163,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,  1163,     0,     0,  1163,  1163,  1163,
    1163,     0,  1163,     0,  1163,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,  1163,
    1163,  1163,  1163,     0,  1163,  1163,  1163,  1163,  1163,  1163,
       0,  1163,  1163,     0,  1163,  1163,     0,  1163,  1163,     0,
       0,  1163,  1163,     0,  1163,  1163,     0,  1163,     0,  1163,
       0,     0,     0,  1163,  1163,  1163,     0,     0,  1163,  1163,
    1163,  1163,     0,  1163,     0,     0,     0,  1162,  1162,     0,
    1163,     0,     0,     0,     0,     0,  1163,  1163,  1163,  1163,
       0,     0,     0,     0,     0,     0,     0,  1163,  1163,     0,
    1163,  1163,     0,     0,  1163,  1163,  1163,  1163,  1163,  1163,
    1163,  1163,  1163,  1163,  1163,  1163,  1163,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1162,     0,  1163,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1162,  1162,     0,     0,     0,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1162,     0,  1162,
       0,  1162,     0,  1162,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5781,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1162,  1162,     0,
       0,     0,  1162,     0,  1162,     0,  1162,     0,     0,     0,
       0,  1162,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1127,     0,  5827,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1162,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1162,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1162,     0,     0,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  6027,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  6033,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1162,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1162,
    6137,     0,     0,     0,     0,     0,     0,     0,  1960,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1986,     0,     0,     0,  1162,  1162,     0,  1162,     0,
    2000,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1162,  1162,  1162,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,  1163,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1162,  1162,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1162,
       0,     0,     0,     0,     0,     0,     0,     0,  2073,     0,
       0,  1162,     0,     0,     0,     0,     0,  1163,     0,     0,
    1162,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,  1163,  1163,     0,     0,  1162,     0,     0,     0,  1162,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,  1163,  1163,     0,  1163,  1163,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2267,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1162,  1162,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1162,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2464,
       0,     0,     0,  2469,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,  1162,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1162,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1162,     0,  1162,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1162,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,     0,     0,     0,  1163,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,  1162,     0,     0,     0,     0,     0,
    1163,     0,  1163,  1163,     0,  1163,  1163,  1163,  1163,     0,
    1163,     0,  1163,  1163,     0,  1163,     0,  1162,     0,     0,
       0,     0,     0,  1163,  1163,     0,     0,     0,  1163,  1163,
    1163,     0,     0,     0,     0,     0,     0,     0,  1163,  1163,
    1163,     0,  1163,     0,  1163,     0,  1163,     0,  1163,  2627,
    1163,  2627,     0,     0,     0,  1163,  1163,     0,  1163,  1163,
    1163,     0,     0,     0,  1163,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,  1163,
       0,  1163,  1163,  1163,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
    1163,     0,     0,  1163,     0,     0,  2676,     0,     0,     0,
    2681,     0,  2683,  1163,  1163,  1163,  1163,     0,  1163,     0,
    2698,  2699,     0,  1163,     0,     0,  2728,     0,     0,     0,
    2733,  2734,  2735,     0,  2737,  2738,  2739,     0,     0,     0,
       0,     0,     0,     0,  2747,     0,  2750,     0,     0,  2751,
    2752,  2753,  2754,     0,     0,     0,  2758,  2759,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2770,  2771,  2778,  2782,  2783,     0,  2786,  2787,  2788,  2791,
    2792,     0,     0,  2795,  2796,     0,  2802,  2803,     0,  2806,
    2807,     0,     0,     0,  2811,     0,  2813,  2814,     0,  2816,
       0,  2817,     0,     0,     0,  2820,  2778,  2822,     0,     0,
    2828,     0,  2830,  2831,     0,  2832,     0,     0,     0,     0,
       0,     0,  2836,     0,     0,     0,     0,     0,  2838,  2839,
    2840,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1162,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2936,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1162,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3048,     0,  3053,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1162,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3076,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3154,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1162,     0,     0,  3178,     0,     0,     0,     0,
       0,     0,  3183,     0,  1163,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,  1163,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,  1163,     0,  1163,     0,  1163,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
    1163,     0,     0,     0,  1163,     0,  1163,     0,  1163,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,  1162,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1162,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,  3370,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1162,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3422,     0,     0,
       0,     0,     0,     0,     0,  3429,  3430,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1162,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,  3449,
       0,     0,     0,     0,  1163,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3488,  3490,  3492,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1162,     0,
       0,     0,  1162,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3554,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3562,     0,  3563,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,  3588,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3602,     0,     0,  1163,  1163,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,  1163,  1163,     0,     0,     0,     0,
    1162,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3657,     0,     0,     0,     0,     0,     0,  1163,  1163,     0,
       0,     0,     0,     0,     0,     0,  3663,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1163,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,  3683,     0,     0,     0,     0,     0,     0,
    3053,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3777,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3802,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3891,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1163,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4028,     0,     0,
       0,  4030,     0,     0,  4031,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4059,     0,     0,     0,     0,  4063,  4064,  4065,
    4066,     0,  4067,     0,  4068,  4069,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4074,  4075,     0,     0,  1163,
    4076,  4077,  4078,     0,     0,     0,     0,     0,     0,     0,
    4080,  4081,  4082,     0,  4083,     0,  4085,     0,  4087,     0,
    4089,     0,  4091,     0,     0,     0,     0,  2788,  4094,     0,
    2788,     0,  4097,     0,     0,     0,  4098,     0,     0,  4099,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4106,     0,  4107,  4108,  4109,     0,     0,  4110,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4132,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4142,  4145,     0,     0,
    4150,     0,  1163,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3053,     0,  1163,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3053,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1163,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4330,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4457,  4458,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1163,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4504,     0,     0,  4505,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4525,  4526,     0,     0,     0,  4531,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4551,     0,  4552,     0,  4553,     0,  4554,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4569,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4590,  4591,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3802,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
    4638,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3053,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4805,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3802,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3802,     0,     0,  4819,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4932,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4945,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1163,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4964,
    4965,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4972,  4973,  4974,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4996,
    4997,  1163,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5019,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3053,
       0,     0,     0,  3053,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1163,     0,     0,     0,  1163,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1163,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5269,  5270,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3802,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3802,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3053,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5509,     0,  5511,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5614,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3802,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3053,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5823,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  6036,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1000,     0,     0,     0,     0,  1001,  1002,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1003,
    1004,     0,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,  6167,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,  2073,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,    42,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,    49,     0,     0,  1075,  1076,
       0,     0,  3053,     0,    51,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,  3053,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,  2775,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,  2776,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,  2777,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,  3179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3180,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  3181,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,  3182,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,  1959,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  3050,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,  3051,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,  3487,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,  3489,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,  3491,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  5044,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,  3051,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1985,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,  2625,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  2626,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  2626,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,  2847,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
    2848,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  4090,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  4105,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,  1053,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,  6262,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1952,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1953,  1954,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  2066,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1953,  1954,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  2068,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1953,  1954,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1044,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  2868,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  1003,
    1004,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
    1016,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1017,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  2870,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  1118,  1119,  1000,     0,     0,     0,  1120,  1001,  1002,
       0,     0,     0,  1121,     0,     0,     0,  1122,  1123,  6118,
    6119,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1018,  1019,
    1020,     0,     0,     0,     0,     0,     0,     0,  1021,  1022,
       0,  1023,     0,     0,     0,     0,     0,     0,  1024,  1025,
       0,     0,  1026,  1027,  1028,  1029,     0,  1030,    13,     0,
    1031,  1032,     0,     0,     0,     0,     0,     0,     0,  1033,
       0,     0,  1034,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
    1035,  1036,  1037,     0,  1038,     0,     0,     0,     0,     0,
       0,     0,  1039,  1040,  1041,    22,     0,     0,     0,     0,
       0,  1042,     0,     0,   572,     0,     0,     0,     0,     0,
    1043,     0,     0,  1952,     0,     0,     0,     0,     0,     0,
       0,     0,  1045,     0,  1046,     0,  1047,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1048,  1049,     0,  1050,     0,     0,     0,  1051,     0,     0,
       0,     0,  1052,     0,     0,    29,     0,     0,  1054,  1055,
    1056,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,  1058,
    1059,  1060,     0,  1061,     0,     0,     0,     0,     0,     0,
    1062,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1063,     0,     0,     0,     0,     0,     0,     0,  1064,
    1065,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1066,     0,
       0,     0,     0,     0,     0,  1067,  1068,     0,  1069,  1070,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,  1073,  1074,     0,     0,     0,     0,     0,  1075,  1076,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,  1077,  1078,  1079,
    1080,    61,    62,    63,  1081,    65,    66,    67,    68,    69,
      70,  1082,    72,    73,    74,    75,    76,    77,    78,  1083,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,  1084,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,  1085,
     108,  1086,  1087,  1088,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,  1089,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    1090,  1091,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,  1092,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,  1093,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
    1094,  1095,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,  1096,   264,   265,   266,
     267,   268,  1097,   270,   271,   272,   273,   274,   275,   276,
     277,  1098,  1099,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,  1100,   300,   301,   302,   303,
     304,   305,   306,  1101,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,  1102,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,  1103,
     363,   364,   365,   602,   367,   368,  1104,   370,   371,   372,
     373,   374,   375,  1105,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,  1106,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1107,  1108,  1109,  1110,   429,
     430,   431,   432,  1111,  1112,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,  1113,   448,   449,
    1114,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,  1115,   608,  1116,   465,   466,   467,     0,   468,
     609,   470,  1117,     0,     0,     0,     0,     0,     0,     0,
       0,  6120,  6121,  1000,     0,     0,     0,     0,  1990,     0,
       0,     0,     0,  6122,     0,     0,     0,     0,  1123,  1945,
    1946,  1124,  1005,  1006,  1007,  1008,  1009,  1010,  1011,  1012,
    1013,  1014,  1015,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,  1037,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,  1057,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1071,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
    2904,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  2905,   426,   427,  2906,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,  6415,   468,
     609,   470,   471,  2824,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,  6415,   468,   609,   470,   471,  2824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,  6416,
       0,     0,     0,     0,     0,     0,  2825,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,  1990,   468,
     609,   470,   471,     0,     0,     0,     0,     0,     0,  1945,
    1946,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,  1990,   468,
     609,   470,   471,     0,     0,     0,     0,     0,     0,  1945,
    1946,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1991,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,  2824,   468,
     609,   470,   471,     0,     0,     0,     0,     0,     0,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,     0,   468,
     609,   470,   471,     1,     0,     2,     3,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2825,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     6,     7,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     8,     0,     9,     0,    10,     0,
      11,     0,     0,     0,     0,     0,     0,     0,    12,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    14,     0,     0,    15,
       0,    16,    17,     0,     0,     0,     0,     0,    18,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    20,     0,     0,     0,    21,
       0,     0,     0,    22,     0,     0,     0,     0,     0,    23,
       0,     0,     0,     0,     0,     0,     0,     0,    24,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    25,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    26,
       0,    27,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,    30,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,    32,    33,    34,     0,     0,     0,
       0,     0,     0,     0,     0,    35,    36,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    37,    38,    39,
       0,    40,     0,     0,     0,     0,    41,     0,     0,     0,
       0,     0,    42,     0,     0,     0,    43,    44,    45,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    46,     0,    47,     0,    48,     0,     0,     0,
       0,     0,     0,    49,     0,     0,     0,     0,     0,     0,
       0,    50,    51,     0,     0,     0,    52,    53,    54,     0,
      55,    56,    57,    58,    59,     0,    60,     0,     0,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    86,    87,    88,    89,    90,    91,
      92,    93,    94,    95,     0,    96,    97,    98,    99,   100,
     101,   102,     0,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,     0,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,     0,     0,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,     0,   179,     0,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
       0,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,     0,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,     0,   468,   469,   470,
     471,     1,     0,     0,     3,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     4,     5,     0,     0,     0,
       0,   472,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     6,     7,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     8,     0,     9,     0,    10,     0,    11,     0,
       0,     0,     0,     0,     0,     0,    12,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    14,     0,     0,    15,     0,    16,
      17,     0,     0,     0,     0,     0,    18,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    20,     0,     0,     0,    21,     0,     0,
       0,    22,     0,     0,     0,     0,     0,    23,     0,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    25,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    26,     0,    27,
       0,     0,     0,    28,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,    32,    33,    34,     0,     0,     0,     0,     0,
       0,     0,     0,    35,    36,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    37,    38,    39,     0,    40,
       0,     0,     0,     0,    41,     0,     0,     0,     0,     0,
      42,     0,     0,     0,    43,    44,    45,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,     0,    47,     0,    48,     0,     0,     0,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,     0,    50,
      51,     0,     0,     0,    52,    53,    54,     0,    55,    56,
      57,    58,    59,     0,    60,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    86,    87,    88,    89,    90,    91,    92,    93,
      94,    95,     0,    96,    97,    98,    99,   100,   101,   102,
       0,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,     0,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   147,   148,
     149,   150,   151,     0,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,     0,   179,     0,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,     0,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,     0,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,     0,   314,   315,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,     0,   468,   469,   470,   471,     1,
       0,     0,     3,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     4,     5,     0,     0,     0,     0,   472,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     6,     7,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       8,     0,     0,     0,    10,     0,    11,     0,     0,     0,
       0,     0,     0,     0,    12,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    15,     0,    16,    17,     0,
       0,     0,     0,     0,    18,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    24,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    25,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    26,     0,    27,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,    30,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
      32,    33,    34,     0,     0,     0,     0,     0,     0,     0,
       0,    35,    36,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    37,    38,     0,     0,    40,     0,     0,
       0,     0,    41,     0,     0,     0,     0,     0,    42,     0,
       0,     0,    43,    44,    45,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    46,     0,
      47,     0,    48,     0,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,    51,     0,
       0,     0,    52,    53,    54,     0,    55,    56,    57,    58,
      59,     0,    60,     0,     0,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,     0,     0,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
       0,    96,    97,    98,    99,   100,   101,   102,     0,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,     0,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,     0,   140,
     141,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,     0,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,     0,     0,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,     0,   179,     0,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,     0,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   291,
     292,     0,   293,   294,   295,   296,     0,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,     0,   314,   315,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,     0,   468,   469,   470,   471,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   472,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5084,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   767,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   572,  3707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3708,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     769,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   573,
      55,    56,    57,    58,    59,     0,     0,     0,     0,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   574,     0,
     575,   576,    84,    85,    86,    87,    88,    89,   577,    91,
      92,    93,    94,    95,   578,    96,   579,    98,    99,   100,
     101,   102,   580,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   581,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   582,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     583,   139,     0,   140,   141,   142,   143,   144,   145,   146,
     584,   148,   149,   150,   151,   585,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   586,
     166,     0,     0,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   587,   588,   179,     0,   180,   181,
     182,   589,   184,   185,   186,   590,   188,   189,   591,   191,
     192,   592,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   593,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   595,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     596,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,  5085,   309,   310,   311,   312,   313,   597,   314,
     598,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   599,
     345,   346,   347,   600,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   601,   359,   360,   361,   362,   363,   364,
     365,   602,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   603,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,   394,   395,   396,   397,   604,   399,   400,   605,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   606,   435,   436,   437,   438,   439,   440,   441,
     442,   607,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   608,   464,   465,   466,   467,     0,   468,   609,   470,
     471,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5086,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1390,     0,     0,
       0,     0,     0,     0,     0,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    42,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    49,     0,     0,
       0,     0,     0,     0,     0,     0,    51,     0,     0,     0,
      52,    53,    54,   573,    55,    56,    57,    58,    59,     0,
       0,     0,     0,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   574,     0,   575,   576,    84,    85,    86,    87,
      88,    89,   577,    91,    92,    93,    94,    95,   578,    96,
     579,    98,    99,   100,   101,   102,   580,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     581,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     582,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   583,   139,     0,   140,   141,   142,
     143,   144,   145,   146,   584,   148,   149,   150,   151,   585,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   586,   166,     0,     0,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   587,   588,
     179,     0,   180,   181,   182,   589,   184,   185,   186,   590,
     188,   189,   591,   191,   192,   592,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     593,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     594,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     595,   285,   286,   287,   288,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   596,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   597,   314,   598,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   599,   345,   346,   347,   600,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   601,   359,   360,
     361,   362,   363,   364,   365,   602,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   603,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,   394,   395,   396,   397,
     604,   399,   400,   605,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   606,   435,   436,   437,
     438,   439,   440,   441,   442,   607,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   608,   464,   465,   466,   467,
       0,   468,   609,   470,   471,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1391,     0,     0,     0,     0,
       0,     0,     0,   798,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1389,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1390,     0,     0,     0,     0,     0,     0,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,     0,   468,   609,   470,   471,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1391,
       0,     0,     0,     0,  1392,     0,     0,   798,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1390,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     180,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,     0,   468,
     609,   470,   471,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1391,     0,     0,     0,     0,  1392,     0,
       0,   798,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1390,
       0,     0,     0,     0,     0,     0,     0,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   573,    55,    56,    57,    58,
      59,     0,     0,     0,     0,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   574,     0,   575,   576,    84,    85,
      86,    87,    88,    89,   577,    91,    92,    93,    94,    95,
     578,    96,   579,    98,    99,   100,   101,   102,   580,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   581,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   582,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   583,   139,     0,   140,
     141,   142,   143,   144,   145,   146,   584,   148,   149,   150,
     151,   585,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   586,   166,     0,     0,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     587,   588,   179,     0,   180,   181,   182,   589,   184,   185,
     186,   590,   188,   189,   591,   191,   192,   592,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   593,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   594,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   595,   285,   286,   287,   288,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   596,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   597,   314,   598,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   599,   345,   346,   347,   600,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   601,
     359,   360,   361,   362,   363,   364,   365,   602,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   603,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,   394,   395,
     396,   397,   604,   399,   400,   605,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   606,   435,
     436,   437,   438,   439,   440,   441,   442,   607,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   608,   464,   465,
     466,   467,     0,   468,   609,   470,   471,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1391,     0,     0,
       0,     0,     0,     0,     0,   798,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   573,
      55,    56,    57,    58,    59,     0,     0,     0,     0,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   574,     0,
     575,   576,    84,    85,    86,    87,    88,    89,   577,    91,
      92,    93,    94,    95,   578,    96,   579,    98,    99,   100,
     101,   102,   580,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   581,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   582,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     583,   139,     0,   140,   141,   142,   143,   144,   145,   146,
     584,   148,   149,   150,   151,   585,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   586,
     166,     0,     0,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   587,   588,   179,     0,   180,   181,
     182,   589,   184,   185,   186,   590,   188,   189,   591,   191,
     192,   592,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   593,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   595,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     596,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   597,   314,
     598,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   599,
     345,   346,   347,   600,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   601,   359,   360,   361,   362,   363,   364,
     365,   602,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   603,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,   394,   395,   396,   397,   604,   399,   400,   605,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   606,   435,   436,   437,   438,   439,   440,   441,
     442,   607,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   608,   464,   465,   466,   467,     0,   468,   609,   470,
     471,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,  3360,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   798,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   573,    55,    56,    57,    58,    59,     0,
       0,     0,     0,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   574,     0,   575,   576,    84,    85,    86,    87,
      88,    89,   577,    91,    92,    93,    94,    95,   578,    96,
     579,    98,    99,   100,   101,   102,   580,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     581,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     582,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   583,   139,     0,   140,   141,   142,
     143,   144,   145,   146,   584,   148,   149,   150,   151,   585,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   586,   166,     0,     0,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   587,   588,
     179,     0,   180,   181,   182,   589,   184,   185,   186,   590,
     188,   189,   591,   191,   192,   592,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     593,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     594,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     595,   285,   286,   287,   288,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   596,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   597,   314,   598,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   599,   345,   346,   347,   600,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   601,   359,   360,
     361,   362,   363,   364,   365,   602,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   603,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,     0,     0,   392,   393,     0,   394,   395,   396,   397,
     604,   399,   400,   605,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   606,   435,   436,   437,
     438,   439,   440,   441,   442,   607,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   608,   464,   465,   466,   467,
       0,   468,   609,   470,   471,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5266,     0,     0,     0,     0,
       0,     0,     0,  5086,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,  5531,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,     0,   468,   609,   470,   471,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5086,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   572,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   573,    55,    56,    57,    58,    59,     0,     0,     0,
       0,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
     574,     0,   575,   576,    84,    85,    86,    87,    88,    89,
     577,    91,    92,    93,    94,    95,   578,    96,   579,    98,
      99,   100,   101,   102,   580,   103,   104,   105,   106,   107,
     108,   109,   110,   111,     0,   112,   113,   114,   581,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   582,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   583,   139,     0,   140,   141,   142,   143,   144,
     145,   146,   584,   148,   149,   150,   151,   585,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   586,   166,     0,     0,   167,   168,   169,   795,   171,
     172,   173,   174,   175,   176,   177,   587,   588,   179,     0,
     796,   181,   182,   589,   184,   185,   186,   590,   188,   189,
     591,   191,   192,   592,     0,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   593,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   594,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,     0,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   595,   285,
     286,   287,   288,   289,   290,   291,   292,     0,   293,   294,
     295,   296,   596,   297,   298,   299,   300,   301,   302,   303,
     304,   797,   306,   307,   308,   309,   310,   311,   312,   313,
     597,   314,   598,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   599,   345,   346,   347,   600,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   601,   359,   360,   361,   362,
     363,   364,   365,   602,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   603,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,     0,
       0,   392,   393,     0,   394,   395,   396,   397,   604,   399,
     400,   605,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   606,   435,   436,   437,   438,   439,
     440,   441,   442,   607,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   608,   464,   465,   466,   467,     0,   468,
     609,   470,   471,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   798,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   572,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   573,    55,    56,    57,    58,
      59,     0,     0,     0,     0,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,   574,     0,   575,   576,    84,    85,
      86,    87,    88,    89,   577,    91,    92,    93,    94,    95,
     578,    96,   579,    98,    99,   100,   101,   102,   580,   103,
     104,   105,   106,   107,   108,   109,   110,   111,     0,   112,
     113,   114,   581,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   582,   125,   126,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   583,   139,     0,   140,
     141,   142,   143,   144,   145,   146,   584,   148,   149,   150,
     151,   585,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   586,   166,     0,     0,   167,
     168,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     587,   588,   179,     0,   180,   181,   182,   589,   184,   185,
     186,   590,   188,   189,   591,   191,   192,   592,     0,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   593,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   594,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,     0,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   595,   285,   286,   287,   288,   289,   290,   291,
     292,     0,   293,   294,   295,   296,   596,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   597,   314,   598,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   599,   345,   346,   347,   600,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   601,
     359,   360,   361,   362,   363,   364,   365,   602,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   603,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,     0,     0,   392,   393,     0,   394,   395,
     396,   397,   604,   399,   400,   605,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   606,   435,
     436,   437,   438,   439,   440,   441,   442,   607,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   608,   464,   465,
     466,   467,     0,   468,   609,   470,   471,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   798,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   572,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   573,
      55,    56,    57,    58,    59,     0,     0,     0,     0,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   574,     0,
     575,   576,    84,    85,    86,    87,    88,    89,   577,    91,
      92,    93,    94,    95,   578,    96,   579,    98,    99,   100,
     101,   102,   580,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   581,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   582,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     583,   139,     0,   140,   141,   142,   143,   144,   145,   146,
     584,   148,   149,   150,   151,   585,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   586,
     166,     0,     0,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   587,   588,   179,     0,   180,   181,
     182,   589,   184,   185,   186,   590,   188,   189,   591,   191,
     192,   592,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   593,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   594,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   595,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
     596,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   597,   314,
     598,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   599,
     345,   346,   347,   600,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   601,   359,   360,   361,   362,   363,   364,
     365,   602,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   603,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,   394,   395,   396,   397,   604,   399,   400,   605,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   606,   435,   436,   437,   438,   439,   440,   441,
     442,   607,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   608,   464,   465,   466,   467,     0,   468,   609,   470,
     471,     4,     5,   818,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   720,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5086,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1469,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   572,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   573,    55,    56,    57,    58,    59,     0,
       0,     0,     0,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,   574,     0,   575,   576,    84,    85,    86,    87,
      88,    89,   577,    91,    92,    93,    94,    95,   578,    96,
     579,    98,    99,   100,   101,   102,   580,   103,   104,   105,
     106,   107,   108,   109,   110,   111,     0,   112,   113,   114,
     581,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     582,   125,   126,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   583,   139,     0,   140,   141,   142,
     143,   144,   145,   146,   584,   148,   149,   150,   151,   585,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   586,   166,     0,     0,   167,   168,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   587,   588,
     179,     0,   180,   181,   182,   589,   184,   185,   186,   590,
     188,   189,   591,   191,   192,   592,     0,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     593,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     594,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,     0,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     595,   285,   286,   287,   288,   289,   290,   291,   292,     0,
     293,   294,   295,   296,   596,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   597,   314,   598,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   599,   345,   346,   347,   600,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   601,   359,   360,
     361,   362,   363,   364,   365,   602,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   603,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,     0,
     391,     0,     0,   392,   393,     0,   394,   395,   396,   397,
     604,   399,   400,   605,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   606,   435,   436,   437,
     438,   439,   440,   441,   442,   607,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   608,   464,   465,   466,   467,
       0,   468,   609,   470,   471,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2061,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,  1213,   468,   609,   470,   471,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,     0,     0,     0,     0,     0,     0,     0,  2879,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1214,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1215,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,  1216,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,  1217,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,  1218,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,  1219,   184,   185,   186,   590,  1220,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,  1221,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,  1222,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,  1223,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,  1224,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,  1225,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,  1226,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
    1227,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
    1228,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,  1229,   464,   465,   466,   467,  1213,
     468,   609,   470,   471,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1214,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1215,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
    1216,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,  1217,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,  1218,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,  1219,
     184,   185,   186,   590,  1220,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,  1221,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,  1222,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,  1223,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,  1224,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
    1225,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,  1226,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,  1229,
     464,   465,   466,   467,  2140,   468,   609,   470,   471,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   720,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,  2384,
     468,   609,   470,   471,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     4,     5,   818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   720,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,  2666,   468,   609,   470,   471,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   720,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,  2291,
     468,   609,   470,   471,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1945,  1946,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2292,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,  2291,   468,   609,   470,   471,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1945,  1946,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,  2398,  1002,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1945,  1946,     0,     0,     0,
       0,     0,     0,     0,  2399,     0,  2400,     0,  2401,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2402,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,     0,   468,   609,   470,   471,  2398,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1945,  1946,     0,     0,     0,     0,     0,     0,     0,  2399,
       0,  2400,     0,  2401,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3159,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
    3160,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,  2398,  1002,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1945,  1946,     0,     0,     0,
       0,     0,     0,     0,  2399,     0,  2400,     0,  2401,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     572,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4467,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   573,    55,    56,
      57,    58,    59,     0,     0,     0,     0,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,   574,     0,   575,   576,
      84,    85,    86,    87,    88,    89,   577,    91,    92,    93,
      94,    95,   578,    96,   579,    98,    99,   100,   101,   102,
     580,   103,   104,   105,   106,   107,   108,   109,   110,   111,
       0,   112,   113,   114,   581,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   582,   125,   126,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   583,   139,
       0,   140,   141,   142,   143,   144,   145,   146,   584,   148,
     149,   150,   151,   585,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   586,   166,     0,
       0,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   587,   588,   179,     0,   180,   181,   182,   589,
     184,   185,   186,   590,   188,   189,   591,   191,   192,   592,
       0,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   593,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   594,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,     0,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   595,   285,   286,   287,   288,   289,
     290,   291,   292,     0,   293,   294,   295,   296,   596,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   597,   314,   598,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   599,   345,   346,
     347,   600,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   601,   359,   360,   361,   362,   363,   364,   365,   602,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   603,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,     0,     0,   392,   393,     0,
     394,   395,   396,   397,   604,   399,   400,   605,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     606,   435,   436,   437,   438,   439,   440,   441,   442,   607,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   608,
     464,   465,   466,   467,     0,   468,   609,   470,   471,  2398,
    1002,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1945,  1946,     0,     0,     0,     0,     0,     0,     0,  2399,
       0,  2400,     0,  2401,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,  1945,  1946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,  2885,  2886,  2887,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,  4633,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,  3342,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,  1945,  1946,     0,     0,
       0,     0,     0,     0,     0,     0,  4482,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
    5359,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,  5645,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,  3325,     0,     0,  5946,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   714,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,   715,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,  3961,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3962,     0,   685,     0,  3963,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,   818,     0,     0,     0,     0,     0,
       0,  3326,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1458,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2145,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2146,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,   818,  1459,
       0,     0,     0,     0,     0,     0,     0,     0,   720,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1458,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,  1459,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1506,  1507,  1508,  1509,
    1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,     0,  1535,  1536,  1537,  1538,
    1539,  1540,  1541,  1542,  1543,  1544,  1545,     0,  1546,    13,
    1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,
    1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,
    1567,  1568,  1569,  1570,  1571,  1572,  1573,    19,  1574,  1575,
    1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,     0,  1584,
    1585,  1586,  1587,  1588,     0,     0,    22,  1589,  1590,  1591,
    1592,  1593,  1594,  1595,  1596,  1597,  1598,  1599,  1600,     0,
    1601,  1602,     0,  1603,  1604,  1605,  1606,  1607,  1608,  1609,
    1610,  1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,
    1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,  1645,    29,  1646,  1647,  1648,
    1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,    31,  1657,
    1658,  1659,  1660,     0,  1661,  1662,  1663,  1664,  1665,    34,
    1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,
    1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,
    1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,
    1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,
    1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,
    1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,
       0,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,  1739,  1740,     0,  1741,  1742,  1743,
    1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,  1752,  1753,
    1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,    52,
      53,    54,     0,    55,    56,    57,    58,    59,     0,  1763,
    1764,  1765,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,  1766,    85,  1767,  1768,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,     0,  1769,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
    1770,  1771,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,  1772,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,  1773,   587,   588,   179,
       0,   180,   181,   182,     0,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,  1774,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,     0,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,  1775,
    1776,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,     0,  1777,  1778,   292,  1779,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,     0,  1780,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
    1781,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,     0,   374,   375,   376,   377,   603,     0,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,  1782,   423,   424,  1783,   426,   427,  1784,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,     0,  1785,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,  1786,   464,   465,   466,   467,     0,
     468,   609,   470,  1787,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514,  1515,
    1516,  1517,  1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,
    1526,  1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,     0,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,
    1545,     0,  1546,    13,  1547,  1548,  1549,  1550,  1551,  1552,
    1553,  1554,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,
    1573,    19,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,
    1582,  1583,     0,  1584,  1585,  1586,  1587,  1588,     0,     0,
      22,  1589,  1590,  1591,  1592,  1593,  1594,  1595,  1596,  1597,
    1598,  1599,  1600,     0,  1601,  1602,     0,  1603,  1604,  1605,
    1606,  1607,  1608,  1609,  1610,  1611,  1612,  1613,  1614,  1615,
    1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,
    1626,  1627,  1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,
    1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,
      29,  1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,  1654,
    1655,  1656,    31,  1657,  1658,  1659,  1660,     0,  1661,  1662,
    1663,  1664,  1665,    34,  1666,  1667,  1668,  1669,  1670,  1671,
    1672,  1673,  1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,
    1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,
    1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,
    1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,
    1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,
    1722,  1723,  1724,  1725,     0,  1726,  1727,  1728,  1729,  1730,
    1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,
       0,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,
    1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,
    1760,  1761,  1762,    52,    53,    54,     0,    55,    56,    57,
      58,    59,     0,  1763,  1764,  1765,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,  1766,
      85,  1767,  1768,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,     0,  1769,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,  1770,  1771,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,  1772,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
    1773,   587,   588,   179,     0,   180,   181,   182,     0,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,  1774,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,     0,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,  1775,  1776,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,     0,  1777,
    1778,   292,  1779,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,  1780,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,  4448,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,     0,   374,   375,   376,   377,
     603,     0,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,  1782,   423,   424,
    1783,   426,   427,  1784,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,     0,  1785,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,  1786,   464,
     465,   466,   467,     0,   468,   609,   470,  1787,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1506,  1507,  1508,  1509,  1510,  1511,
    1512,  1513,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,
    1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,
    1532,  1533,  1534,     0,  1535,  1536,  1537,  1538,  1539,  1540,
    1541,  1542,  1543,  1544,  1545,     0,  1546,    13,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,  1554,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,  1571,  1572,  1573,    19,  1574,  1575,  1576,  1577,
    1578,  1579,  1580,  1581,  1582,  1583,     0,  1584,  1585,  1586,
    1587,  1588,     0,     0,    22,  1589,  1590,  1591,  1592,  1593,
    1594,  1595,  1596,  1597,  1598,  1599,  1600,     0,  1601,  1602,
       0,  1603,  1604,  1605,  1606,  1607,  1608,  1609,  1610,  1611,
    1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,
    1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,  1631,
    1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,  1640,  1641,
    1642,  1643,  1644,  1645,    29,  1646,  1647,  1648,  1649,  1650,
    1651,  1652,  1653,  1654,  1655,  1656,    31,  1657,  1658,  1659,
    1660,     0,  1661,  1662,  1663,  1664,  1665,    34,  1666,  1667,
    1668,  1669,  1670,  1671,  1672,  1673,  1674,  1675,  1676,  1677,
    1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,  1687,
    1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,  1697,
    1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,  1707,
    1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,  1717,
    1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,     0,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  1739,  1740,     0,  1741,  1742,  1743,  1744,  1745,
    1746,  1747,  1748,  1749,  1750,  1751,  1752,  1753,  1754,  1755,
    1756,  1757,  1758,  1759,  1760,  1761,  1762,    52,    53,    54,
       0,    55,    56,    57,    58,    59,     0,  1763,  1764,  1765,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,  1766,    85,  1767,  1768,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,     0,  1769,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,  1770,  1771,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
    1772,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,  1773,   587,   588,   179,     0,   180,
     181,   182,     0,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,  1774,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,     0,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,  1775,  1776,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,     0,  1777,  1778,   292,  1779,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,     0,  1780,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,     0,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,  5676,
     374,   375,   376,   377,   603,     0,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,  1782,   423,   424,  1783,   426,   427,  1784,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
       0,  1785,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,  1786,   464,   465,   466,   467,     0,   468,   609,
     470,  1787,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1506,  1507,
    1508,  1509,  1510,  1511,  1512,  1513,  1514,  1515,  1516,  1517,
    1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,
    1528,  1529,  1530,  1531,  1532,  1533,  1534,     0,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,  1545,     0,
    1546,    13,  1547,  1548,  1549,  1550,  1551,  1552,  1553,  1554,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,    19,
    1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,  1582,  1583,
       0,  1584,  1585,  1586,  1587,  1588,     0,     0,    22,  1589,
    1590,  1591,  1592,  1593,  1594,  1595,  1596,  3945,  1598,  1599,
    1600,     0,  1601,  1602,     0,  1603,  1604,  1605,  1606,  1607,
    1608,  1609,  1610,  1611,  1612,  1613,  1614,  1615,  1616,  1617,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1630,  1631,  1632,  1633,  1634,  1635,  1636,  1637,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,    29,  1646,
    1647,  1648,  1649,  1650,  1651,  1652,  1653,  1654,  1655,  1656,
      31,  1657,  1658,  1659,  1660,     0,  1661,  1662,  1663,  1664,
    1665,    34,  1666,  1667,  1668,  1669,  1670,  1671,  1672,  1673,
    1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,
    1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,
    1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,
    1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,
    1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725,     0,  1726,  1727,  1728,  1729,  1730,  1731,  1732,
    1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,     0,  1741,
    1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,  1750,  1751,
    1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,
    1762,    52,    53,    54,     0,    55,    56,    57,    58,    59,
       0,  1763,  1764,  1765,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,  1766,    85,  1767,
    1768,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,     0,  1769,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,  1770,  1771,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,  1772,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,  1773,   587,
     588,   179,     0,   180,   181,   182,     0,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,  1774,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,     0,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,  1775,  1776,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,     0,  1777,  1778,   292,
    1779,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,     0,  1780,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,     0,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,     0,   374,   375,   376,   377,   603,     0,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,  1782,   423,   424,  1783,   426,
     427,  1784,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,     0,  1785,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   464,   465,   466,
     467,     0,   468,   609,   470,  1787,     4,     5,   818,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   720,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   908,   909,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   910,     0,     0,
       0,   911,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   912,     0,
       0,     0,     0,     0,     0,     0,     0,   913,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   914,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   915,     0,     0,     0,     0,   916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     917,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   918,
       0,     0,     0,   919,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   920,     0,     0,     0,   921,   922,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   923,     0,     0,     0,
       0,     0,     0,   924,   925,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     926,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     927,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   928,   161,   162,   163,   164,   929,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   930,
     931,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   932,   321,   322,   323,   933,   325,
     326,   327,   328,   329,   934,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   935,   342,   343,   599,   345,
     346,   936,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   937,   379,   380,   381,   938,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   939,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   720,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1191,   909,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   910,     0,     0,     0,   911,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   912,     0,     0,     0,     0,     0,     0,     0,
       0,   913,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   914,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   915,     0,     0,     0,
       0,   916,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   917,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   918,     0,     0,     0,   919,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   920,     0,     0,     0,   921,
     922,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     923,     0,     0,     0,     0,     0,     0,   924,   925,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,  1192,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   926,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   927,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   928,   161,   162,
     163,   164,   929,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   930,   931,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   932,   321,
     322,   323,  1193,   325,   326,   327,   328,   329,   934,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   935,
     342,   343,   599,   345,   346,   936,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   937,   379,   380,   381,
     938,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   939,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,     0,     0,     0,  2688,
    2689,  5459,     0,  5460,     0,  5461,   720,  5462,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5463,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
     818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     720,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   911,  1469,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,   818,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2160,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2161,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
    1350,     0,     0,  1351,  1352,     0,     0,     0,  1353,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   720,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2145,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2146,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,   818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   720,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1469,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
     818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     720,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2196,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,   818,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   911,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,  1945,  1946,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,  2885,  2886,  2887,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   720,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3279,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,   818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   720,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2145,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
     818,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     720,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3629,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,   818,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3937,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   684,     0,     0,     0,     0,
       0,     0,     0,     0,   685,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,   818,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   720,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   854,   855,     0,     0,     0,     0,     0,     0,     0,
       0,   856,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   857,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,     0,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,     0,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,   858,   859,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   183,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   860,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1915,     0,     0,
       0,     0,     0,     0,    22,  1916,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
    1917,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4629,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   685,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1827,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,  1945,  1946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1947,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,  1945,  1946,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2155,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,  1945,  1946,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2953,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,  2954,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2966,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3700,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,  1945,  1946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2953,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,  4682,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5062,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5554,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5564,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,  5906,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   572,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   573,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     589,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   727,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     608,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   808,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,  1945,  1946,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   572,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     573,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,   589,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,  2311,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   608,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   572,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2971,    53,    54,   573,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,   589,   184,   185,   186,
     590,   188,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
       0,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   608,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   720,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3608,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,  3609,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,  3610,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,   575,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,   585,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
    3611,   184,   185,   186,   590,     0,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,     0,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,  3612,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,     0,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
    3613,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   572,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   573,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,   575,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,   578,    96,   579,
      98,    99,   100,   101,   102,   580,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,   581,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   582,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,   584,   148,   149,   150,   151,   585,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,  3727,   177,   587,   588,   179,
       0,   180,   181,   182,   589,   184,   185,   186,   590,   188,
     189,   591,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   594,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,  3728,   279,   280,   281,   282,   283,   284,   595,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,   596,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   597,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   599,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   601,   359,   360,   361,
     362,   363,   364,   365,   602,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   603,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   606,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   608,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5858,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   573,    55,    56,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,    84,
      85,    86,    87,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,   101,   102,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   587,   588,   179,     0,   180,   181,   182,   589,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,   362,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     603,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   608,   464,
     465,   466,   467,     0,   468,   609,   470,   471,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,  3378,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
    3379,    55,    56,    57,    58,    59,     0,     0,     0,     0,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,   574,
       0,   575,   576,    84,    85,    86,    87,    88,    89,   577,
      91,    92,    93,    94,    95,   578,    96,   579,    98,    99,
     100,   101,   102,   580,   103,   104,   105,   106,   107,   108,
     109,   110,   111,     0,   112,   113,   114,   581,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   582,   125,   126,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   583,   139,     0,   140,   141,   142,   143,   144,   145,
     146,   584,   148,   149,   150,   151,   585,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     586,   166,     0,     0,   167,   168,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   587,   588,   179,     0,   180,
     181,   182,  3380,   184,   185,   186,   590,   188,   189,   591,
     191,   192,   592,     0,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   593,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   594,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,     0,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   595,   285,   286,
     287,   288,   289,   290,   291,   292,     0,   293,   294,   295,
     296,   596,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   597,
     314,   598,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     599,   345,   346,   347,   600,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   601,   359,   360,   361,   362,   363,
     364,   365,   602,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   603,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,     0,     0,
     392,   393,     0,   394,   395,   396,   397,   604,   399,   400,
     605,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   606,   435,   436,   437,   438,   439,   440,
     441,   442,   607,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   464,   465,   466,   467,     0,   468,   609,
     470,   471,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   720,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,  3609,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,  3610,    55,    56,    57,    58,    59,
       0,     0,     0,     0,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,   574,     0,   575,   576,    84,    85,    86,
      87,    88,    89,   577,    91,    92,    93,    94,    95,   578,
      96,   579,    98,    99,   100,   101,   102,   580,   103,   104,
     105,   106,   107,   108,   109,   110,   111,     0,   112,   113,
     114,   581,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   582,   125,   126,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   583,   139,     0,   140,   141,
     142,   143,   144,   145,   146,   584,   148,   149,   150,   151,
     585,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   586,   166,     0,     0,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   587,
     588,   179,     0,   180,   181,   182,  3611,   184,   185,   186,
     590,     0,   189,   591,   191,   192,   592,     0,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   593,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   594,   217,   218,   219,   220,   221,   222,   223,     0,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,     0,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   595,   285,   286,   287,   288,   289,   290,   291,   292,
    3612,   293,   294,   295,   296,   596,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   597,   314,   598,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   599,   345,   346,   347,   600,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   601,   359,
     360,   361,   362,   363,   364,   365,   602,   367,   368,   369,
     370,   371,   372,   373,     0,   375,   376,   377,   603,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,     0,     0,   392,   393,     0,   394,   395,   396,
     397,   604,   399,   400,   605,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   606,   435,   436,
     437,   438,   439,   440,   441,   442,   607,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,  3613,   464,   465,   466,
     467,     0,   468,   609,   470,   471,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   856,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   857,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,     0,    55,
      56,    57,    58,    59,     0,     0,     0,     0,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,   574,     0,     0,
     576,    84,    85,    86,    87,    88,    89,   577,    91,    92,
      93,    94,    95,   578,    96,   579,    98,    99,   100,   101,
     102,   580,   103,   104,   105,   106,   107,   108,   109,   110,
     111,     0,   112,   113,   114,   581,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   582,   125,   126,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   583,
     139,     0,   140,   141,   142,   143,   144,   145,   146,   584,
     148,   149,   150,   151,     0,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   586,   166,
       0,     0,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   587,   588,   179,     0,   180,   181,   182,
     183,   184,   185,   186,   590,   188,   189,   591,   191,   192,
     592,     0,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   593,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   594,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,     0,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   595,   285,   286,   287,   288,
     289,   290,   291,   292,     0,   293,   294,   295,   296,   596,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   597,   314,   598,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   599,   345,
     346,   347,   600,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   601,   359,   360,   361,   362,   363,   364,   365,
     602,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   603,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,     0,     0,   392,   393,
       0,   394,   395,   396,   397,   604,   399,   400,   605,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   606,   435,   436,   437,   438,   439,   440,   441,   442,
     607,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     860,   464,   465,   466,   467,     0,   468,   609,   470,   471,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,     0,    55,    56,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,   574,     0,     0,   576,    84,    85,    86,    87,    88,
      89,   577,    91,    92,    93,    94,    95,     0,    96,   579,
      98,    99,   100,   101,   102,     0,   103,   104,   105,   106,
     107,   108,   109,   110,   111,     0,   112,   113,   114,     0,
     116,   117,   118,   119,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   583,   139,     0,   140,   141,   142,   143,
     144,   145,   146,     0,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   586,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   587,     0,   179,
       0,   180,   181,   182,   183,   184,   185,   186,   590,   188,
     189,     0,   191,   192,   592,     0,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   593,
     208,   209,   210,   211,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,     0,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,     0,   314,   598,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,     0,   345,   346,   347,   600,   349,   350,   351,
     352,   353,   354,   355,   356,   357,     0,   359,   360,   361,
     362,   363,   364,   365,     0,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,     0,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,   604,
     399,   400,   605,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   607,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,     0,
     468,   609,   470,   471,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,  1902,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1913,     0,     0,     0,
       0,     0,     0,    52,    53,    54,  1903,    55,     0,    57,
      58,    59,     0,     0,     0,     0,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,     0,    72,    73,    74,
      75,    76,    77,    78,    79,     0,     0,     0,     0,    84,
      85,    86,    87,    88,     0,     0,    91,    92,    93,    94,
      95,     0,     0,     0,    98,    99,   100,   101,   102,     0,
     103,   104,   105,   106,     0,     0,     0,     0,     0,     0,
     112,     0,   114,     0,   116,   117,  1904,   119,   120,   121,
     122,   123,   124,     0,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,     0,   139,     0,
     140,   141,   142,   143,   144,   145,   146,     0,   148,   149,
     150,   151,     0,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,     0,     0,     0,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,     0,     0,     0,     0,     0,   181,   182,  1905,   184,
     185,   186,     0,   188,   189,     0,   191,   192,     0,     0,
     194,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,     0,   208,   209,   210,   211,   212,   213,
     214,   215,   216,     0,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     291,   292,     0,   293,   294,   295,   296,     0,     0,     0,
     299,     0,   301,   302,     0,   304,   305,   306,   307,     0,
     309,   310,   311,   312,     0,     0,     0,     0,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,     0,   343,     0,   345,   346,   347,
       0,   349,   350,     0,   352,   353,   354,   355,   356,   357,
       0,   359,   360,   361,   362,   363,   364,   365,     0,   367,
     368,   369,     0,   371,   372,   373,   374,     0,   376,   377,
       0,     0,   380,   381,     0,     0,   384,   385,   386,     0,
     388,     0,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,     0,   399,   400,     0,   402,     0,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,     0,
     425,   426,   427,   428,   429,   430,   431,   432,   433,     0,
     435,   436,     0,   438,   439,   440,   441,     4,     5,   444,
     445,     0,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,     0,     0,
     465,   466,     0,     0,   468,     0,   470,   471,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,  1902,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1923,
       0,     0,     0,     0,     0,     0,    52,    53,    54,  1903,
      55,     0,    57,    58,    59,     0,     0,     0,     0,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,     0,
      72,    73,    74,    75,    76,    77,    78,    79,     0,     0,
       0,     0,    84,    85,    86,    87,    88,     0,     0,    91,
      92,    93,    94,    95,     0,     0,     0,    98,    99,   100,
     101,   102,     0,   103,   104,   105,   106,     0,     0,     0,
       0,     0,     0,   112,     0,   114,     0,   116,   117,  1904,
     119,   120,   121,   122,   123,   124,     0,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
       0,   139,     0,   140,   141,   142,   143,   144,   145,   146,
       0,   148,   149,   150,   151,     0,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,     0,     0,     0,
     166,     0,     0,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,   177,     0,     0,     0,     0,     0,   181,
     182,  1905,   184,   185,   186,     0,   188,   189,     0,   191,
     192,     0,     0,   194,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,     0,   208,   209,   210,
     211,   212,   213,   214,   215,   216,     0,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   291,   292,     0,   293,   294,   295,   296,
       0,     0,     0,   299,     0,   301,   302,     0,   304,   305,
     306,   307,     0,   309,   310,   311,   312,     0,     0,     0,
       0,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,     0,   343,     0,
     345,   346,   347,     0,   349,   350,     0,   352,   353,   354,
     355,   356,   357,     0,   359,   360,   361,   362,   363,   364,
     365,     0,   367,   368,   369,     0,   371,   372,   373,   374,
       0,   376,   377,     0,     0,   380,   381,     0,     0,   384,
     385,   386,     0,   388,     0,   390,   391,     0,     0,   392,
     393,     0,   394,   395,   396,   397,     0,   399,   400,     0,
     402,     0,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,     0,   425,   426,   427,   428,   429,   430,   431,
     432,   433,     0,   435,   436,     0,   438,   439,   440,   441,
       4,     5,   444,   445,     0,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,   465,   466,     0,     0,   468,     0,   470,
     471,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,  1902,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,  1903,    55,     0,    57,    58,    59,     0,     0,
       0,     0,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,     0,    72,    73,    74,    75,    76,    77,    78,
      79,     0,     0,     0,     0,    84,    85,    86,    87,    88,
       0,     0,    91,    92,    93,    94,    95,     0,     0,     0,
      98,    99,   100,   101,   102,     0,   103,   104,   105,   106,
       0,     0,     0,     0,     0,     0,   112,     0,   114,     0,
     116,   117,  1904,   119,   120,   121,   122,   123,   124,     0,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,     0,   139,     0,   140,   141,   142,   143,
     144,   145,   146,     0,   148,   149,   150,   151,     0,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
       0,     0,     0,   166,     0,     0,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,     0,     0,     0,
       0,     0,   181,   182,  1905,   184,   185,   186,     0,   188,
     189,     0,   191,   192,     0,     0,   194,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,     0,
     208,   209,   210,   211,   212,   213,   214,   215,   216,     0,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,     0,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   291,   292,     0,   293,
     294,   295,   296,     0,     0,     0,   299,     0,   301,   302,
       0,   304,   305,   306,   307,     0,   309,   310,   311,   312,
       0,     0,     0,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
       0,   343,     0,   345,   346,   347,     0,   349,   350,     0,
     352,   353,   354,   355,   356,   357,     0,   359,   360,   361,
     362,   363,   364,   365,     0,   367,   368,   369,     0,   371,
     372,   373,   374,     0,   376,   377,     0,     0,   380,   381,
       0,     0,   384,   385,   386,     0,   388,     0,   390,   391,
       0,     0,   392,   393,     0,   394,   395,   396,   397,     0,
     399,   400,     0,   402,     0,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,     0,   425,   426,   427,   428,
     429,   430,   431,   432,   433,     0,   435,   436,     0,   438,
     439,   440,   441,     0,     0,   444,   445,     0,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,     4,     5,   465,   466,     0,     0,
     468,     0,   470,   471,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1506,  1507,  1508,  1509,  1510,  1511,  1512,  1513,  1514,  1515,
    1516,     0,  4033,  1519,  1520,  1521,     0,     0,  1524,  1525,
    1526,  1527,  1528,  1529,  1530,  1531,  4034,  1533,  1534,     0,
    1535,  1536,  1537,  1538,  1539,  1540,  1541,  1542,  1543,  1544,
    1545,     0,  1546,    13,  1547,  1548,  1549,  1550,  1551,  1552,
    1553,  4035,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,
    1563,  1564,  1565,  1566,  4036,  1568,  1569,  1570,  1571,  1572,
    1573,    19,  1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,
    4037,  1583,     0,  1584,  1585,  1586,  1587,  1588,     0,     0,
      22,  1589,  1590,  1591,  1592,  1593,  1594,  1595,  1596,  3945,
    1598,  1599,  1600,     0,  1601,  1602,     0,  1603,  4038,  1605,
    4039,  1607,  1608,  1609,  1610,  1611,  1612,  1613,  1614,  1615,
    1616,  1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,     0,
       0,     0,  1628,  1629,  1630,  1631,  1632,  1633,  1634,     0,
       0,     0,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,
      29,  1646,  1647,  1648,  1649,  1650,  1651,     0,  1653,  1654,
    1655,  1656,    31,  1657,  1658,  1659,  1660,     0,  1661,  1662,
    1663,  1664,  1665,    34,  1666,  1667,  1668,  1669,  1670,  1671,
    1672,  1673,  1674,  1675,  1676,  1677,  1678,  1679,  1680,     0,
    1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,
    1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,
    1702,  1703,  1704,     0,  1706,  1707,     0,  1709,  1710,  1711,
    1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,
    1722,  1723,  1724,  1725,     0,  1726,  1727,  1728,  1729,     0,
       0,     0,  1733,  1734,  1735,  1736,  1737,  1738,  1739,  1740,
    4040,  1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,  1749,
    1750,     0,  4041,  1753,  1754,  1755,  1756,  1757,  1758,  1759,
    1760,  1761,  1762,    52,    53,    54,     0,    55,    56,    57,
      58,    59,     0,  1763,  1764,  1765,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,   574,     0,   575,   576,     0,
      85,     0,     0,    88,    89,   577,    91,    92,    93,    94,
      95,   578,    96,   579,    98,    99,   100,     0,     0,   580,
     103,   104,   105,   106,   107,   108,   109,   110,   111,     0,
     112,   113,   114,   581,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   582,   125,   126,   127,   128,   129,   130,
     131,   132,   133,   134,  4042,  4043,   137,   583,   139,     0,
     140,   141,   142,   143,   144,   145,   146,   584,   148,   149,
     150,   151,   585,   152,   153,   154,     0,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   586,   166,     0,     0,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
       0,   587,   588,   179,     0,   180,   181,   182,     0,   184,
     185,   186,   590,   188,   189,   591,   191,   192,   592,     0,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   593,   208,   209,   210,   211,   212,   213,
     214,     0,   216,   594,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,     0,   250,   251,
     252,   253,   254,   255,   256,     0,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,     0,  4044,   277,   278,   279,   280,   281,
     282,   283,   284,   595,   285,   286,   287,   288,     0,     0,
       0,   292,  1779,   293,   294,   295,   296,   596,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   597,   314,   598,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
       0,     0,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   599,   345,   346,   347,
     600,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     601,   359,   360,   361,     0,   363,   364,   365,   602,   367,
     368,   369,   370,   371,   372,     0,   374,   375,   376,   377,
     603,  4045,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,     0,     0,   392,   393,     0,   394,
     395,   396,   397,   604,   399,   400,   605,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,     0,   423,   424,
       0,   426,   427,  4046,   429,   430,   431,   432,   433,   606,
     435,   436,   437,   438,   439,   440,   441,   442,   607,   444,
     445,   446,   447,   448,   449,   450,     0,  4047,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   464,
     465,   466,   467,     0,   468,   609,   470,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   857,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,  5150,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,     0,
      55,    56,    57,    58,    59,     0,     0,     0,     0,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,   574,     0,
       0,   576,     0,    85,     0,     0,    88,    89,   577,    91,
      92,    93,    94,    95,   578,    96,   579,    98,    99,   100,
       0,     0,   580,   103,   104,   105,   106,   107,   108,   109,
     110,   111,     0,   112,   113,   114,   581,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   582,   125,   126,   127,
     128,   129,   130,   131,   132,   133,   134,     0,     0,   137,
     583,   139,     0,   140,   141,   142,   143,   144,   145,   146,
     584,   148,   149,   150,   151,     0,   152,   153,   154,     0,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   586,
     166,     0,     0,   167,   168,   169,   170,   171,   172,   173,
     174,   175,   176,     0,   587,   588,   179,     0,   180,   181,
     182,  5151,   184,   185,   186,   590,   188,   189,   591,   191,
     192,   592,     0,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   593,   208,   209,   210,
     211,   212,   213,   214,     0,   216,   594,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
       0,   250,   251,   252,   253,   254,   255,   256,     0,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,     0,     0,   277,   278,
     279,   280,   281,   282,   283,   284,   595,   285,   286,   287,
     288,     0,     0,     0,   292,     0,   293,   294,   295,   296,
     596,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   597,   314,
     598,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,     0,     0,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   599,
     345,   346,   347,   600,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   601,   359,   360,   361,     0,   363,   364,
     365,   602,   367,   368,   369,   370,   371,   372,     0,   374,
     375,   376,   377,   603,     0,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,     0,     0,   392,
     393,     0,   394,   395,   396,   397,   604,   399,   400,   605,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
       0,   423,   424,     0,   426,   427,     0,   429,   430,   431,
     432,   433,   606,   435,   436,   437,   438,   439,   440,   441,
     442,   607,   444,   445,   446,   447,   448,   449,   450,     0,
       0,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,  1786,   464,   465,   466,   467,     0,   468,   609,   470
};

static const yytype_int16 yycheck[] =
{
       3,     0,    30,    82,   971,     8,  2113,   472,     0,    82,
     632,  1451,   646,   861,  1971,     0,   698,   699,  2007,   698,
     640,     0,   624,  2560,     0,   627,  2324,  2126,   814,     0,
       0,     0,  2062,    36,   665,   814,  2268,    40,     0,   726,
       0,     0,    45,  2663,     0,    48,     0,  1280,  2566,  2442,
     781,  1416,  2298,  2622,    41,  1582,  1626,  1419,  3288,  2016,
    1422,     0,   630,  1986,   698,  2461,   666,  1977,  3030,     0,
    3174,   666,  1222,  2576,  1224,  1225,   646,  3754,  2323,   693,
     648,  3915,  1232,  1422,   652,  2046,   654,  2409,   656,   657,
    1462,   659,   660,   661,    83,  3181,   696,  3183,  3184,  1048,
    1523,   696,   743,  2064,  1803,   746,  3833,  3301,  3042,   852,
    2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,  2108,
    2109,  2110,  2111,  2939,   692,  1652,  1462,  2664,   698,  1391,
    2513,  1554,  2549,  1410,  1880,  4317,  2952,  3823,  1259,  1017,
     629,  4395,  3989,  1347,  4395,  2241,  2084,  4288,  4301,  2126,
     178,  2183,  2184,  1186,  2092,  2093,   882,  2095,  2096,  1582,
    1281,  3105,   165,  3798,  1522,  3812,  2549,  3414,  3415,  4026,
    4774,  4297,  3040,   766,  2190,   768,  2651,   666,   771,   772,
     748,   749,   861,  2432,  2292,  4441,  4794,  3222,   642,  3435,
    3069,  3431,     0,  2292,  2210,  3435,  1282,  5136,  4046,  3834,
    3887,  3134,  3135,  2514,  3135,  4042,  4395,   696,  4286,  4046,
     640,  4892,  3144,   640,  4265,  3670,     6,     7,  2234,  2235,
      26,  1188,    15,  5392,  5393,   856,    15,   861,   640,  1652,
     719,    15,     6,     7,    15,   640,   640,    42,    38,    15,
    1118,  1119,  1120,    12,   733,    31,  1773,   881,  1627,    15,
    1777,   705,   528,  1131,   793,    26,  4806,  2289,  1637,    31,
    2656,  4849,     6,     7,  1791,     6,     7,    80,     6,     7,
      42,  4724,    47,  1626,  1627,    42,    89,     6,     7,    53,
      15,  5356,    15,    51,  1637,  4674,  1490,    15,   127,    15,
     127,   861,   894,    15,   896,  3343,    15,    97,    42,   182,
      16,    17,  3523,    88,   127,   128,    42,    63,  2373,    33,
     792,   881,   315,  1625,   203,  2292,   344,    41,   242,    31,
       6,     7,   127,  1635,    47,  4901,    50,   206,     6,     7,
      31,   244,    31,    26,   902,   903,   104,    31,   254,    11,
      12,   830,  2546,  4849,     6,     7,    42,   178,  3581,  3770,
    1773,   122,    26,  1732,  1777,   203,    42,    33,    99,   268,
     122,   158,    31,   366,  3855,    41,   283,  2665,  1791,  3185,
    3186,   203,    57,   203,    50,   281,   299,  4285,  4286,  1732,
      24,    25,    26,   378,    28,    31,    30,   841,    32,   305,
    1769,   203,  3879,  1751,    42,    42,  1957,  1958,  2505,   310,
    3333,   232,  3333,   110,    26,  1966,   252,   217,  1766,   898,
     318,    47,  1770,   314,   143,    33,  1769,    47,  1730,   252,
     145,    26,  1780,    41,  1782,  1783,  1784,  1785,   808,  1787,
    4883,  5162,    50,   299,    42,  1996,    53,  1998,    33,   201,
    1798,  1799,  1800,  1801,  1802,   123,    41,  3902,  4760,  3670,
      47,    42,  2013,  2014,  2015,    50,    26,    65,    42,  2020,
    2021,   123,  1774,   391,    42,    33,  1831,  2028,    24,    25,
      26,    42,    28,    41,    30,  4849,    32,   358,    67,    71,
     472,    42,    50,    33,   208,   254,    26,  4395,   239,  5658,
     168,    41,   387,  5678,    14,  3303,  3304,    24,    25,    26,
      50,    28,    28,    30,  3022,    32,   168,   314,  3376,   299,
      33,   197,    14,    42,    99,   358,  3602,  3603,    41,   290,
     435,   975,    14,    43,    44,   528,   582,    50,   290,    99,
      26,  6021,   208,   128,    65,    71,   305,  4779,  1881,   156,
    5547,    43,    44,    33,   197,   314,    26,   539,   786,    26,
    6010,    43,    44,   791,  4388,   793,   591,   314,  5098,    99,
      50,   193,    53,    33,    33,  1308,    14,   427,   539,   110,
     577,    41,    41,   646,   644,   299,    33,    51,    14,    10,
      50,    50,   254,   539,    41,  5568,   258,   107,   337,  5165,
     208,   315,   182,    50,  5758,   119,  2342,   209,   167,   328,
    3686,    33,   458,    99,    99,   107,  5814,    43,    44,    41,
     203,  4298,  6311,   208,   777,   107,   201,  2915,    50,    99,
     623,   624,    99,   598,   627,   281,   629,   144,   152,   472,
     104,   151,    42,   305,   312,  1276,  5985,  1278,  6281,   315,
     208,   640,   314,   141,    22,   386,   690,   755,   640,   151,
     312,    29,    42,    31,   643,   244,  1121,  6356,   208,   107,
    1391,   646,   267,   666,   203,   156,   829,   646,     3,   640,
     646,   107,   192,  4510,  6317,   783,  6025,  4859,    99,   196,
     665,  3902,    57,   408,   640,   208,   665,   690,  4877,   665,
     192,   476,  1478,   696,    42,    33,    31,   315,    73,   743,
     192,   676,  4157,    41,   691,   143,   201,   646,   711,    99,
     141,   323,    50,   698,   463,   646,   719,   258,  5882,   698,
     315,   791,   698,   314,  1213,   357,   665,   225,   698,   732,
     733,  3925,   153,  1222,   665,   791,  1225,   314,   208,   208,
     178,  1230,  5950,   312,   192,   601,   735,   315,   783,  4174,
    4175,   208,   658,  5760,   743,  5738,   192,   746,  1501,   698,
      31,   254,   765,  5494,  6254,   315,  3011,   698,   292,    35,
      36,    37,  1261,    39,   366,   690,   208,  1370,   781,   786,
    1373,   378,   690,   314,  1377,  1378,  1379,  5413,   783,  1382,
    1383,  3023,   315,   314,  2137,   798,  4287,  4850,    33,  4852,
     792,   586,  4855,   806,   807,   341,    41,    96,   593,   652,
    1843,   814,   305,  5266,   599,    50,  4869,   568,  3626,   629,
     506,   314,  5134,   580,  3640,   315,   143,   830,   688,  1449,
     366,   477,   713,   728,  6019,   822,   839,   746,   646,   639,
    3162,  1874,   639,   528,   644,   315,   315,   432,  3781,   852,
    3781,   287,  4760,   506,   755,   783,  3788,   665,   315,   725,
    3792,   784,   786,   786,   664,  5405,   155,   783,   169,   786,
     208,   856,   783,   786,  4295,   643,   861,   856,   678,   725,
     856,   593,  5138,   315,  1486,   861,   889,  2327,   891,   674,
     156,   894,   725,   896,   669,   898,   881,   786,   901,   577,
     783,   701,   881,  3149,  4391,   881,  5148,   786,  2831,  2832,
     897,  1479,   899,  3211,  1453,   577,  5305,   856,  2856,  2857,
     299,  2859,  2860,  1412,   593,   856,  1391,   758,   229,  5505,
     861,  3979,  4165,   746,   690,   642,  4157,  6106,   786,  6108,
    6109,  3334,   881,   299,   719,   234,   669,   786,  5401,   786,
     881,    33,   737,  6028,   786,   958,   786,   547,   961,    41,
    5510,   766,  5512,   786,  1446,   968,   772,   970,    50,  4877,
    1246,  6431,   734,   208,   786,   974,   786,   315,   784,   786,
     786,   984,   974,   959,   960,  5573,   962,   963,   964,   974,
     783,  2141,   766,   969,   766,   974,  3012,   783,   974,   766,
     790,   772,   791,   974,   974,   974,  2156,   791,  3253,  5263,
     791,  1287,  5263,  5694,   783,   791,   790,   783,   974,  1449,
     959,   960,  1449,   962,   963,   964,  1975,  5078,   959,   960,
     969,   962,   963,   964,  2396,   974,   761,  1449,   969,   783,
    6209,  6210,  1991,   974,  1449,  1449,   790,   791,   856,   790,
     706,  6220,   790,   861,  3352,   791,   791,  2396,   791,  5137,
    2432,   790,   786,   791,  4150,   791,  2187,  5573,  2189,   791,
     786,  2192,   791,   881,  5263,  1953,  1954,  3142,  3143,   772,
     315,  2521,   783,  2204,   783,  5538,  2207,  5540,  2528,   783,
    2211,   784,  5545,   786,  1880,   791,  2432,   783,   772,  5552,
    5553,  1844,  2135,  2365,   790,   791,  3310,  3311,  4795,  5562,
     786,   783,   790,  6282,  2376,  5568,  2237,  2238,  2239,   766,
    1123,  3432,  1121,  3434,  6063,  6064,   208,  4813,   790,  1121,
    4816,  4352,  4353,  2512,  4982,  4356,  4357,  4005,  4986,   560,
     784,  4362,  4363,   791,   791,  4982,  2232,   783,  2181,  4986,
     772,   959,   960,   783,   962,   963,   964,    33,   766,  2512,
    2539,   969,   784,  2542,   786,    41,   974,   772,  4389,   643,
    4817,   789,  2551,   790,    50,   766,   614,  2126,   178,  2491,
    3287,  2493,   766,  1186,  2745,  3993,  2539,  2748,   766,  2542,
     173,   786,   232,   786,  2506,   766,   732,   786,  2551,  5573,
    1943,  4626,   772,  2764,   505,   766,  4014,   791,  5834,   786,
    1213,  5145,  2524,   791,   745,  1453,   784,  5151,   786,  1222,
     791,  4325,  1225,  2784,  2536,  1388,  5134,  1230,   784,  5137,
     791,    33,   772,   315,   784,  4339,  2114,   766,    74,    41,
    2552,  1841,  3338,    50,  1323,   771,   772,   786,    50,   769,
     770,   771,   772,   773,   774,   775,   776,   784,  1261,   251,
     784,   784,   791,   786,   581,   786,   295,   769,   770,   771,
     772,   773,   774,   775,   776,    53,   772,  1964,  2482,   771,
     772,   773,   774,   775,   776,  5738,    33,  1276,   317,  1278,
     783,  5744,   772,  4782,    41,   772,  1299,   771,  1301,   790,
      53,    33,    33,    50,  1307,  1308,    53,   578,   331,    41,
      41,   294,   281,   448,  4560,   784,   786,    14,    50,    50,
    4560,  1324,   593,   771,   772,   773,   774,   775,   776,   786,
    1333,   116,   208,   769,   770,   771,   772,   773,   774,   775,
     776,    53,  2492,  2292,  1347,  1348,    43,    44,   281,  5475,
    2136,    33,  1841,  2040,   786,  5263,   766,  2136,   123,    41,
    1349,  5487,  5488,  2094,   178,  1368,  4245,   145,    50,  4185,
      72,  4457,  4458,  4408,  4307,  4308,  4307,  4308,    33,  4311,
    4312,   791,   160,  4199,  1371,  1372,    41,  4203,  1391,  1392,
     143,   376,  1391,    99,    33,    50,    54,   376,  6006,  1391,
    6004,   376,    41,   168,   705,   694,   208,   786,   281,  1412,
     107,    50,   791,   433,   414,    33,    33,   136,   766,    50,
     528,  5874,  2208,    41,    41,    71,   160,  1430,    33,  2208,
     786,   160,    50,    50,  5690,   791,    41,   371,   178,   315,
    5893,    67,    10,   791,   376,    50,   784,   421,  1451,  1452,
    1449,   173,    74,  5310,  1446,  1944,   314,  1449,   226,  1913,
     369,   208,  1465,   378,  5953,  5954,  4687,   725,   649,  1923,
    3715,  3460,  1461,  1476,   474,  1478,   208,   208,  1449,   614,
    3712,  3589,   390,  1486,  1487,   321,  2168,  1490,    98,  2168,
    3589,   783,    40,  1449,  3890,   192,   268,  3742,  1501,   791,
     766,   767,   768,  3752,    33,   258,   281,    33,   448,   287,
    2241,    33,    41,   315,   127,    41,  1316,   409,   410,    41,
    1985,    50,  5575,  3940,    50,  3942,   208,  1327,    50,   208,
      28,   232,    30,   791,  2168,    71,  6140,    73,    33,  4483,
    4484,  4016,  5993,  2143,    42,   298,    41,   403,  2143,   784,
     107,   786,  4638,   208,  5201,    50,  2342,  3940,   232,  3942,
     173,   417,   369,  2306,   143,    40,    53,   541,   315,   208,
     593,  2173,  2174,   141,  2176,  2177,  2178,  2179,  4664,  2172,
      33,  5707,   493,   315,   315,   494,  2188,   299,    41,  3578,
     208,   208,   632,  2626,   528,   270,    14,    50,  2168,   178,
     414,  6090,   783,   208,  2206,  6094,   384,  3568,  3569,  3570,
    3571,  3357,  3589,   314,   386,  3553,   338,  3555,   244,   659,
    2242,    33,  4018,  4491,  2113,    43,    44,  3584,  5314,    41,
      76,    77,   258,   315,  2365,   192,    33,   666,    50,  3562,
    3563,  2282,  3552,    31,    41,  2376,  2377,   432,   196,  2603,
      33,   786,   392,    50,  2143,  5110,   287,   649,    41,   361,
     315,   307,   143,  5349,  3680,  5120,  5121,    50,  2309,  1027,
    1028,  1029,  5161,    33,   614,    33,   315,   335,  2132,   208,
     386,    41,   208,    41,   403,   197,   208,   494,  3986,   107,
      50,   178,    50,   608,   369,   463,  5849,   315,   315,   321,
    4947,   232,   784,   686,   786,   690,   459,  5848,    33,    33,
     315,   690,  4230,   208,  1072,   690,    41,    41,    57,  1077,
     143,   196,   580,    33,   635,    50,    50,  2349,  2350,  3101,
     750,    41,    71,  4819,    73,   669,    33,   706,   472,    33,
      50,  2341,   352,   472,    41,   232,   654,    41,  1821,  2351,
    2352,  2344,  2345,    50,  2436,   208,    50,   504,   690,    33,
    2353,  2354,  2355,    33,    33,  3101,  5700,    41,  5702,   281,
      33,    41,    41,   706,   192,  3008,    50,   746,    41,   167,
      50,    50,  6233,   404,  2934,   658,   315,    50,   697,   315,
      74,   706,   333,   315,  2743,  3784,   208,  5409,   738,  6288,
    6289,  2951,  2291,   393,   506,  2955,  3168,   722,  3170,  3171,
      40,   208,   577,   746,  1817,  3187,   314,   298,   492,   494,
     315,  4637,  1825,   715,  1827,   208,   718,  4643,  4644,  3168,
     366,  3170,  3171,   706,   226,  1838,  2562,   211,  1841,    33,
    1843,  1844,   293,  2332,  2587,  2588,  4932,    41,   208,   568,
     208,  3187,  2341,  4957,  2343,    33,    50,    33,  2472,  4945,
    2981,  3123,   315,    41,  2985,    41,  2987,  3129,    33,   780,
     232,  1874,    50,  5559,    50,   298,    41,  1880,  2911,  2912,
    3001,  5336,  3978,   208,   208,    50,   434,    54,   101,  5110,
     697,   566,   122,  3014,  3015,  2384,   475,  5805,   208,  5120,
    5121,    74,  5749,   315,  2937,    74,  2537,  5011,   784,  5544,
     786,   208,  1915,    40,   208,   471,  4850,  4486,   315,    33,
     448,  4855,   127,   143,   312,  5833,  4860,    41,   580,  5837,
      53,   706,   315,    74,   208,   386,    50,    74,   208,   208,
    1943,  1944,   568,    33,  6198,   208,  6197,   568,   460,  3981,
      33,    41,  2441,   363,    99,   315,  2635,   315,    41,   434,
      50,   492,   737,   595,  4501,   145,   196,    50,  2922,  2923,
    5656,   201,  4365,  4219,   235,  2589,  1151,   580,   459,    33,
     160,  6163,   784,  6165,   786,  1977,  1985,    41,   766,  4221,
     315,   315,  6033,  1985,   506,   714,    50,   443,   444,    47,
    6055,  2635,   341,  6058,   229,   315,   641,    33,  1183,  2088,
     551,  3215,  2466,   766,   208,    41,  2505,   653,   315,  4341,
     359,   315,   697,   613,    50,  2514,   251,   366,  2659,  2663,
     208,  5939,   208,   156,    72,   614,   459,   321,  2041,   786,
     191,   315,  2045,   208,   495,   315,   315,  2661,  2051,   423,
     671,  2431,   315,   114,   786,   786,   572,  5669,   106,  2062,
     290,   693,  5674,  5675,   627,  2635,   598,  3034,  5976,   196,
    6252,   463,   769,   770,   771,   772,   773,   774,   775,   776,
     231,    33,  2074,   296,   759,  5993,   614,   145,   126,    41,
    4507,    99,   633,  2663,   208,  4512,  5782,    33,    50,   572,
    3377,   120,  4519,  2074,   786,    41,   758,  6011,   328,   314,
    2113,  1469,  2115,   572,    50,  5336,   748,   268,   208,   675,
     287,   315,   685,  6164,  4507,   208,    33,  2858,  2131,  4512,
     492,   786,  2135,  2136,    41,  2124,  4519,   315,  3288,   315,
    2143,  2144,  6089,    50,   676,   784,  6093,  2834,   321,    33,
     315,  5828,   321,  5830,   208,   758,   791,    41,   568,  5886,
    5381,    75,  2165,  5097,  5098,    67,    50,   646,   786,   786,
    2173,  2174,  2175,  2176,  2177,  2178,  2179,  2180,  2181,  2182,
     321,   786,   208,  2168,   321,  2188,   665,   225,  5833,  2168,
    2644,   572,  2168,  4131,   706,  4133,  2650,   756,  2168,   218,
    5857,   315,  2205,  2206,   384,  2208,  6261,   462,  2662,   668,
     738,  5297,  5824,    33,   101,    81,   773,   774,   775,   776,
     699,    41,  2211,  5039,  5040,   315,  2229,  6135,   457,  2168,
      50,    33,   315,   749,   232,   386,   413,  2168,  2241,    41,
    5344,    71,    10,    73,   389,   173,   391,   398,    50,  5183,
     311,  5185,  2931,  3999,  4000,   293,   208,   786,   786,  3226,
     786,   315,  5948,   150,   786,    19,    20,  2889,   766,    99,
     786,   758,   208,   771,   772,  6201,   749,    33,   510,   766,
     425,   147,   542,  5960,   454,    41,  6120,  6121,  2291,   315,
     749,   786,   158,  2282,    50,   303,   304,  2931,   271,  5504,
     166,   208,  3180,  2306,    10,   468,  5500,   602,  2311,   282,
     455,    33,   489,  3346,  3679,    36,    37,  4227,  2918,    41,
    2309,   553,   236,  2918,   208,  6233,   101,   193,    50,  2332,
    6277,  5976,   458,   786,  3077,   590,  2339,  4036,  2341,  2342,
    2343,  6245,   244,   506,  2347,   335,     0,   498,  2351,  2352,
    6007,  6008,   770,   771,   772,   773,   774,   775,   776,   127,
    6286,  2931,  2365,   315,  2966,  3730,   294,   254,   749,  2971,
    5227,   600,   784,  2376,  2377,   150,   374,   856,  2980,   315,
    3752,  2384,   861,   249,  2986,   131,  3353,  2852,   208,   786,
     144,   561,  3123,   732,  6071,   403,  6300,  6074,  3129,  6325,
      19,    20,   881,   786,  5261,   786,   208,    33,   315,   296,
     127,   277,   667,  3144,  3028,    41,  3752,   568,   305,  5228,
    3061,   127,   170,  3209,    50,   528,   786,   314,   786,  2918,
       7,   315,   342,  6359,  4666,    57,   148,  6341,  2441,   151,
     602,   328,   196,   588,   145,  5254,  2935,  2450,    47,    71,
     528,   711,   208,  2456,    53,  3817,    55,  2460,   690,   160,
     177,   786,   786,  6389,   454,  2538,  3616,   475,  3150,   729,
    6285,  5405,   725,  2546,   352,   601,   786,   622,  3817,  2482,
     959,   960,  3632,   962,   963,   964,   208,   784,  3638,  3639,
     969,   783,   786,   154,  5699,   315,  4818,    33,   661,   791,
     212,  3941,  2505,   251,   734,    41,  4899,  5611,  4035,  3111,
     613,  2514,   786,   315,    50,   784,   786,  3119,  3120,  3112,
     127,   296,  3115,   786,   241,   144,  3788,   437,  3121,   128,
    3792,    33,  4925,    51,   454,   613,   366,  4930,   791,    41,
    5043,   791,  2545,    33,  5360,  5361,    33,  3036,    50,   427,
    4946,    41,  2537,   413,    41,   461,   386,   766,  2537,   315,
      50,  2537,    47,    50,  3597,   226,   669,   127,  2571,  5378,
    4987,  3357,    33,   153,  2577,  6390,  6391,   196,   119,   499,
      41,    55,   208,  2586,  2587,  2588,   104,   493,   168,    50,
    2663,   669,   786,   315,  3627,   766,   313,    33,  2537,  2602,
    2603,    47,  4525,  4526,  4987,    41,  2537,  3338,   786,    33,
     786,   152,  4035,    33,    50,  3980,   141,    41,  4041,   784,
    3982,  4578,  3301,  2626,  4047,    33,    50,  2630,    33,   489,
      50,  4554,   386,    41,   117,   118,    41,  2640,  5843,  4669,
    3589,  5575,    50,  3982,  2647,    50,  4569,  4608,   568,    33,
    2635,  5856,  2655,   128,    33,  2658,  2635,    41,   413,  2635,
     106,   567,    41,  3152,  4621,  5058,    50,  3301,   136,  6337,
     784,    50,   208,   766,  2659,  4033,  4034,   151,  2663,   154,
    2659,  5643,  5539,  2659,  2663,   128,  4044,  2663,   772,   315,
     158,   573,   574,   167,   784,   314,  2635,   791,   772,  5556,
     784,   784,  6370,   715,  2635,   311,   208,   719,   151,    33,
     784,    47,  5569,  2705,  5571,    31,    47,    41,   208,    33,
    2659,   208,   205,  3690,  2663,   217,    50,    41,  2659,  2537,
     784,  3301,  2663,   454,  2705,    47,    50,  4584,   206,   419,
    3419,  4588,   648,   497,   147,  3345,   426,   208,    47,  3436,
    3345,   292,  3431,   328,    33,   158,  3435,   364,   784,    63,
    3447,  3448,    41,   166,   238,  3452,    33,   386,   650,    33,
     106,    50,   208,    33,    41,   106,   123,    41,   499,   315,
     127,    41,   647,    50,   208,  3419,    50,   533,   534,   281,
      50,   537,   538,   539,   106,   287,  5041,  3431,  3287,   282,
     208,  3435,   318,   208,   364,  2808,   772,   106,   154,  2812,
    3190,  3191,  3598,   315,  6293,  6294,   510,  3504,   784,  3598,
     786,   168,  2825,    65,   208,   315,   173,  2635,   315,   208,
      33,   119,   784,   258,  3521,   123,   740,  1316,    41,   127,
     561,   448,   707,   450,   178,   710,   249,    50,   784,  3419,
      33,  2659,  6331,  2852,   315,  2663,  3345,   783,    41,   206,
    2852,  3431,    81,   617,   152,  3435,    40,    50,    50,  1338,
     355,    45,   737,  1054,   277,  1344,  1345,   784,   497,   315,
     168,   746,   299,   604,   208,   173,   343,  5280,   448,    33,
     450,   315,  1073,  1074,   208,  2438,   783,    41,  5291,  2442,
     784,   771,   772,  6133,   687,   417,    50,   315,  2911,  2912,
     315,   784,   695,   786,   399,  2918,   401,   700,   206,  2922,
    2923,    36,  5125,   789,    28,    40,    30,  5130,   147,   208,
      45,   315,  2935,   540,  2937,   141,   315,  2940,  2941,   158,
      47,   208,  2931,  3432,   208,  3434,  2931,   166,   208,    19,
      20,    57,  2931,  5490,   749,  2931,   959,   960,   128,   962,
     963,   964,  2965,  2966,   784,    71,   969,    73,  2971,  6346,
    6347,    40,  3654,  3655,   193,  3654,  3655,  2980,  4211,  4341,
     540,    50,   784,  2986,    19,    20,    55,  4557,   670,  2978,
    4900,   315,  2931,   747,    18,    19,    20,  3964,   617,   106,
    2989,   315,  4341,   757,   292,   208,   491,   614,   670,    88,
    3013,    24,    25,  3000,   128,    28,    40,    30,   281,    32,
    3654,  3655,  2055,  2056,  4257,   208,  3029,  5057,   784,    53,
     249,  6063,  6064,  3036,  3037,  3038,   315,   460,   101,   753,
     754,   784,   756,    47,   758,   766,   767,   768,   315,    73,
    4200,   315,  4202,    71,   614,   315,   541,  3788,   277,   789,
     790,  3792,   784,  3066,   208,    24,  3688,   790,  4218,    28,
    3073,    30,  3061,    32,  3077,    99,    43,  3925,    96,   145,
     283,  5650,   151,   662,  3654,  3655,  3075,   150,   784,   307,
     786,   109,   310,  3558,  4215,   145,  5019,   101,   167,  4464,
    3103,    68,   145,   588,  3107,  3108,  3109,   125,  3111,   144,
      77,   784,   315,   786,    40,  3118,  3119,  3120,  1429,    57,
    3123,  1432,  1433,  2931,    50,   312,  3129,   196,   747,    55,
     127,    98,   315,    71,  4167,    73,   160,   155,   757,   791,
      23,  3144,   736,    26,    27,  3148,   150,   226,    31,  3152,
    3153,    18,    19,    20,   791,   120,   123,   264,   784,   266,
     127,   196,  4485,   130,  4487,   281,  3768,   311,   214,   238,
     277,   315,   196,    40,   141,    33,   784,   201,   786,   203,
     226,   657,   784,    41,   786,   436,   293,   746,   783,   268,
     157,   254,    50,   678,   268,    53,    24,    25,   165,  3188,
      28,   225,    30,  3825,    32,   114,  3209,  3196,   790,   214,
     177,  5241,  3215,  3999,  4000,  5608,   234,   702,   113,   114,
     115,   226,   268,   287,  5844,   151,   786,   784,    23,   786,
     577,    26,    27,   296,   201,   341,    31,  3310,  3311,   470,
     786,   167,   305,   289,   128,  3324,  3925,  3978,   784,  5348,
     254,   314,   784,   359,   786,   784,   790,   786,  3261,   338,
     366,   141,   151,  5781,   299,   328,  3269,    24,    25,   293,
     196,    28,   647,    30,   241,    32,   281,   295,   324,   246,
     247,   784,   784,   786,  3287,   391,   784,   606,   786,   577,
     783,  3925,   296,   160,   784,   475,  4661,   784,   584,   783,
      40,   305,   706,    33,  5293,   784,   784,   786,   786,  3798,
     314,    41,   238,  3944,   580,    55,  3301,   783,   783,   324,
      50,  3324,   346,   784,   328,  3301,  4352,  4353,   783,   196,
    4356,  4357,   333,  3336,   413,  3338,  4362,  4363,   737,  5369,
     203,  3344,  3345,  3346,  3833,  3834,   313,  5270,   784,   333,
     208,   386,  6438,   333,  3357,  3925,   411,   436,   225,   551,
     784,    88,   386,   287,    18,    19,    20,   474,   306,   307,
    3301,   784,   784,   786,   786,   784,   784,   786,   203,   784,
    3869,    19,    20,   783,   463,   352,    40,   283,  4174,  4175,
     436,   409,   410,    24,   786,  4174,  4175,    28,   128,    30,
     784,    32,   784,   341,   786,   784,   784,   374,   786,   790,
     784,   151,   786,  5806,   360,   427,    33,  5649,   784,    73,
     786,   359,   783,   478,    41,  4658,   293,   167,   366,  3432,
    3419,  3434,   783,    50,  3419,   783,    40,  3413,  3414,  3415,
    3419,   465,  4129,  3419,    33,    99,  3431,    15,   783,  4976,
    3435,   783,    41,   391,   783,  3431,   196,   315,   463,  3435,
     784,    50,   497,  3843,  3844,   783,  3846,  3847,  5714,   740,
     784,   495,   783,   783,  3413,  3414,  3415,   444,   208,   784,
    3419,   786,  3413,  3414,  3415,  4635,  4636,   214,   784,   544,
     786,   546,   783,  3301,  4280,   740,   784,   552,   238,   226,
    3431,  4280,   783,   783,  3435,   784,   160,   145,    24,    25,
      26,   128,    28,   783,    30,  5813,    32,   784,  4958,   386,
     784,  5819,  5820,  5622,   784,   784,   784,   786,   786,   784,
    4152,   786,  3535,  5632,   784,   784,   786,   786,    33,   128,
     558,   559,   196,   784,   783,   786,    41,   201,   784,   203,
     786,   783,    75,  4976,   281,    50,   160,   612,   783,  3558,
    3552,  3564,   289,   783,   533,   534,  3558,   786,   537,   538,
     539,   225,   783,    88,   681,   682,   683,   684,   783,   658,
    4311,  4312,   617,   662,   784,   315,   786,   783,   783,  3592,
      40,   208,   196,   617,  3597,  3598,    33,   324,  4960,    73,
     784,   656,   786,   126,    41,  3413,  3414,  3415,   677,  5566,
    2501,  3419,  4762,    50,   129,   582,   783,   783,  5648,   208,
     783,   225,   145,  3431,  3627,  3698,   732,  3435,   495,  2520,
     145,    38,   784,   128,   786,   783,   660,   160,  2529,   293,
     783,   783,   783,  3642,  2535,   783,  5635,  3650,   783,  3652,
    3642,   784,  2543,   786,   784,   105,   786,  3642,   737,   784,
     783,   786,  2553,  3642,   783,  2556,  3642,   746,    81,  3654,
    3655,  3642,  3642,  3642,  3747,  3654,  3655,   213,  3654,  3655,
    3642,  3684,  3642,  3642,  3654,  3655,  3642,  4289,  3642,   293,
     725,   783,   346,  3696,   217,   783,   751,  6234,   315,   784,
     718,   786,   225,  3642,   784,   783,   786,   762,   784,   436,
     786,  3642,   747,   208,   213,  3654,  3655,   784,   783,   786,
     783,  5751,   757,  3654,  3655,   783,   315,    33,   784,   783,
     786,   755,   386,   757,   147,    41,   463,   391,   783,    31,
     784,   191,   786,   783,    50,   158,   196,   262,   386,   783,
     617,   677,   784,   166,   786,   393,  3745,   784,   784,   786,
     786,   351,   352,   783,   783,  3768,   281,   784,   783,   786,
     408,   208,    72,  3776,   784,    75,   786,   783,   293,   783,
     193,   231,   386,   213,   784,  3788,   786,  5776,  6086,  3792,
     203,   784,   430,   786,   732,  3798,   783,   783,   388,    72,
     783,   783,    75,  3806,   783,   783,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,  5916,   268,   786,
     315,   127,   784,   338,   786,   783,   126,   783,   783,   129,
    3833,  3834,   213,   784,  3642,   786,   249,   427,   783,   783,
    4626,   495,   784,   783,   786,   145,   283,  4626,  4535,   784,
    3923,   786,  4474,   126,   783,   783,   129,   754,    43,   145,
     160,   384,   783,   783,   277,   783,  3869,   783,  3857,  3858,
    3859,  3860,   145,  3862,  3863,   783,    33,  5984,   315,   783,
     783,  4560,  3885,    68,    41,   783,   299,   160,   755,   783,
     757,   495,    77,    50,    15,   783,    53,   535,   413,    24,
      25,    26,   208,    28,   783,    30,   122,    32,   783,  4596,
     548,  3900,  3901,    98,  3903,    33,  3905,  3906,  3907,  3908,
    3909,  3910,  3911,    41,  3913,   225,  4560,   565,  3917,   783,
     783,   658,    50,   783,   783,    53,   386,   677,   123,   783,
    3925,   783,   127,   783,   217,   130,   783,   783,   398,  3925,
     791,    15,   225,   783,   783,  3958,   141,   766,   584,  3944,
      75,   203,   262,   617,   786,  3944,   128,   203,  3944,  5926,
      33,   258,   157,   786,   670,  3978,   460,   783,    41,   617,
     165,   690,   127,   515,   516,   201,   690,    50,   706,   262,
    4560,   676,   177,   293,  3925,  3998,  3999,  4000,   530,   510,
     532,  4004,   429,   143,   786,  3944,   660,   177,   786,   315,
     737,   126,   602,  3944,  4017,    22,   201,    24,    25,   746,
     293,    28,    29,    30,    31,   786,   582,   360,  6421,   619,
     145,    18,    19,    20,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,   160,   127,   786,   498,   394,
    4026,   208,   786,    40,   692,   645,   241,   786,  2537,   579,
     701,   246,   247,  6020,   766,   128,     7,    55,   746,   707,
     463,   594,   463,  6305,   290,   783,    10,  5517,  5518,   786,
    5520,   217,    31,   136,   384,   296,    73,  4026,   119,    88,
     208,   151,   123,   625,   626,  4026,   127,    65,   688,   393,
     386,   755,    42,   757,    42,   408,     3,   393,  6065,  4112,
     225,   384,    99,   583,   746,   791,   311,  3925,   568,   757,
     427,   152,   408,   783,   783,   224,   391,   783,   313,   644,
     783,   783,    15,   791,   122,   783,  3944,   168,   513,  6169,
     515,   516,   173,   658,   430,   208,   145,   662,  4782,   127,
    4153,   127,   352,   790,   790,   530,  2635,   532,   315,    54,
     127,   786,   791,   120,  4167,   643,  4169,   352,   791,   177,
     182,  4174,  4175,   160,  4177,   206,   706,  4180,  4181,   784,
    2659,   704,   333,   647,  2663,   333,   333,  6176,  4177,   374,
     141,   506,    44,  1001,   410,   710,   561,   315,   311,  4821,
     128,   154,   311,   783,   177,  6437,   790,   786,   791,   196,
     783,    47,  4782,   201,   201,   214,   203,   427,  4026,   784,
     784,   106,   737,   786,  5374,   336,   784,   226,   648,   791,
     784,  5223,  5224,  4236,  5226,  4227,  4228,   784,   225,  5231,
    1048,   127,  5234,   127,   784,  5237,  5238,   784,   791,   535,
     625,   626,   315,  5245,   783,  5247,   167,   783,   136,   444,
     287,   292,   548,   127,  5256,   786,   773,   786,    73,   384,
     127,   690,   786,   791,  6304,  4278,   773,  4280,   151,   565,
    4283,  4284,  5722,   490,  5724,  5725,  4289,    18,    19,    20,
     289,  4893,   703,   451,   594,   127,   786,   435,   690,   127,
     786,   784,   290,  4292,   679,   680,   293,   783,  4311,  4312,
     783,  4931,   154,   427,     3,  4318,  1124,  4396,    33,   786,
    6309,   594,   151,   217,   363,   324,    41,   239,   510,   510,
     510,   510,   360,   510,  6291,    50,   510,   786,   786,   120,
      71,   766,    73,   287,   676,    47,  4835,   127,   360,  4729,
    4730,  4731,  4732,  4733,  4734,  4735,  4736,  4737,  4738,   346,
    4740,  4741,  4742,  4743,  4744,  4745,  4746,  4747,    99,  4749,
    4750,   673,   596,  4753,  4754,   746,  6406,    92,    93,    94,
      95,   784,  4461,   784,   784,   784,   784,   158,   158,   210,
    6420,   786,    65,   783,   406,   791,  6426,   582,   137,   386,
     251,   439,   791,  6433,   704,   664,   692,   418,   480,    92,
      93,    94,    95,   783,   145,   403,   784,   786,   480,  1227,
     595,   707,   410,   138,   139,   140,   786,   283,    68,   783,
     310,   704,   736,   391,   310,   237,    57,   436,  4441,    30,
     222,   705,   128,   206,   203,   786,    43,   786,   783,   287,
     146,   154,  2931,   649,    42,   138,   139,   140,  4461,   784,
     784,   784,   427,  4466,   463,   784,   784,   784,   773,   128,
     784,    68,   484,   772,   189,   190,  4856,   786,   786,   594,
      77,  4861,   783,   217,   215,   378,   784,   784,   784,   784,
     591,   784,   783,   208,   784,   784,   784,  4489,   783,   715,
    4503,    98,   718,  5096,   784,   784,   189,   190,   495,  1317,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,   784,    81,   784,   784,   791,   123,  5161,   784,   784,
     127,   784,   786,   130,   786,   547,    81,   786,   253,   784,
     784,   272,   273,   274,   141,   784,   577,   776,  5230,   783,
     735,   563,   564,   783,  5546,   783,   568,   569,   570,   784,
     157,   292,   250,   783,   783,  5413,    31,   766,   165,    31,
     253,    31,   786,   427,  4577,  4560,   131,   128,   786,   791,
     177,   786,   791,   127,  4560,  3064,   127,   791,   147,   704,
      81,  5161,  5081,   786,   504,   786,   786,   791,   786,   158,
     315,   316,   147,   602,   201,   128,  4609,   166,   784,   613,
     122,  1419,   258,   158,  1422,   346,   784,   348,    53,  4622,
    4609,   166,  5215,  4626,   636,   786,  4629,   786,  5117,  4560,
     617,   100,    47,   316,   193,   366,   670,   368,   365,   127,
    4629,   576,   786,   786,   241,   644,   753,   158,   193,   246,
     247,   158,   507,   439,   783,   386,   147,  4660,   203,   549,
     123,   557,   393,   662,   268,  5233,  4669,   158,   268,   268,
     268,  4670,   657,   660,   362,   166,   688,   408,  4681,   268,
     314,   203,   370,  4675,   415,   783,   127,   766,   766,   201,
     249,   766,   766,   766,   736,   766,   411,   385,   766,   430,
     766,   766,   193,   156,   249,   766,  4779,   395,   396,   397,
     766,   710,   203,   250,   766,  4718,   313,   405,   277,   766,
     766,  4724,   766,  5103,   321,  4728,   766,   715,   411,   766,
     718,   766,   277,   766,  5413,  5115,   766,   766,   737,   727,
     766,   766,   766,    19,    20,   766,   317,   746,   784,  4752,
     791,   766,  4560,   295,   786,   352,   487,   427,   249,   299,
     576,   784,   784,   478,   784,   168,   497,    34,   755,   786,
     757,   333,   791,   791,   287,   791,   786,   374,   290,  5413,
     506,    57,   287,   758,   392,   154,   277,   784,   427,   153,
     153,   791,   784,   784,   784,   478,   213,  4782,   784,  5766,
     772,   784,   791,  4806,   535,    65,  4782,   791,    19,    20,
     772,   699,  4815,   784,  5407,   784,   786,   548,  5411,  5412,
     783,  5500,  3301,   783,   338,   362,   287,   241,   287,   544,
     427,   546,  4835,   370,   584,   128,   128,   552,   783,   791,
     783,   791,   492,  5413,  4833,   232,    57,   444,   385,   772,
      30,  4782,   784,   786,   783,   543,   587,   321,   395,   396,
     397,   544,   593,   546,   790,   783,  5500,   555,   405,   552,
     786,   545,   735,   203,   766,   766,   333,   126,   203,   203,
    4883,    50,   287,   158,   158,   786,   617,   714,   408,   408,
    4893,   403,    31,    31,    31,  4898,   240,   612,   410,    53,
     283,    30,   784,    30,   783,   461,   783,   245,  4900,   783,
     143,   773,   177,   784,   773,   584,  4919,    95,   352,   791,
     651,   155,    30,   155,  2639,   791,   784,   658,   206,   612,
    5500,   784,  4931,   783,  3413,  3414,  3415,   784,   784,  4931,
    3419,   656,   786,   786,   784,  6385,   153,   784,    65,   784,
     784,   784,  3431,   784,   784,   766,  3435,   783,   128,   784,
    4931,   692,    31,   783,   783,    31,   232,   655,   786,   784,
     311,  4947,   786,   656,  4782,   177,   707,   708,   232,   783,
     783,  5060,   736,  6133,   554,   582,   692,   692,   203,   720,
     408,   783,   783,   299,   270,   299,   783,   378,    53,    31,
     784,   786,   208,   786,   446,   281,   543,   695,  4947,    53,
     287,   212,   784,  5016,   439,   251,  4947,   131,   555,   502,
     784,   709,    65,   168,   784,   256,   757,   314,   784,   504,
     643,   206,    65,   786,   786,   784,   751,   784,   347,   169,
     217,   784,   784,   784,   314,   447,   784,   762,   173,   786,
     783,   786,   766,   766,  5057,  5544,   766,  5060,   757,   270,
    5139,   167,   744,   418,  5056,  5068,   418,   217,   751,   203,
      53,  5693,   784,  5666,   247,  1883,   299,   299,  5081,   762,
     676,  5084,   170,  5086,    30,  5056,  5075,  5076,  5077,   783,
      30,   593,    65,   217,   384,   217,   217,   217,  5101,   159,
     707,   159,   217,   640,   707,   217,   592,  6257,   217,   603,
     217,   203,   217,   203,  5117,   386,   252,   485,   655,   128,
     439,   314,   203,   154,  5113,  5114,   584,   427,   784,   784,
     784,   498,   613,  5136,  5123,  5138,   549,   155,    71,  4947,
     416,   784,   784,    65,   406,   786,   784,  5136,   784,   784,
      50,   654,   679,   786,   430,  5834,   432,   784,   695,   791,
     786,   783,   791,   783,  5167,   783,   427,  1975,   784,    53,
      31,   790,   709,   378,   783,    65,  5161,   783,    65,   117,
      65,  5170,  1990,  1991,    30,  5161,   744,   446,   464,   783,
     331,   141,   160,   390,   744,   225,   669,  5225,   422,   726,
    5834,   477,   281,   715,   314,   416,   718,   424,   786,   784,
    5844,  5214,  5240,   549,   783,   727,   445,   784,   784,   430,
     687,   432,  5250,   784,  5227,  5228,  5229,   419,   160,  5257,
    5161,  5259,  5260,   786,   510,   783,  5239,   583,  5241,   160,
     783,   236,    53,   105,   783,  5248,  5249,   203,   784,   783,
     127,  5254,   528,   464,  5985,   784,   786,   790,  5261,   790,
     786,    65,   783,  5266,  5834,    65,   477,   784,    65,    31,
     127,   411,   287,   127,  5844,   314,   786,   160,  5281,  6429,
     287,   584,   786,   784,   784,   784,  5275,   649,   601,   440,
     601,   783,   367,   791,  6025,   299,   783,    72,   783,   510,
     790,   783,   791,   120,   427,   784,  5298,   791,   120,   281,
     790,  2119,   287,    73,   687,   281,   287,   528,  2126,    72,
     287,   584,    72,    15,   160,    50,   698,  5298,   784,   713,
     606,    30,   786,   783,  5310,   786,   784,   613,    18,   218,
     783,    65,    65,   783,    99,   144,   217,   623,    99,     6,
     428,   725,   296,  5161,  5357,   649,   584,   584,   430,  2167,
     783,   637,   418,   783,  3079,  6047,  5369,  5370,   418,   160,
     786,  5310,   784,   784,   180,  5378,   783,   783,   704,  5310,
     160,   201,   783,   744,   296,   339,  5389,    99,    53,  5392,
    5393,   154,   783,   669,  5397,   606,   672,  5886,  5401,   589,
     699,  6132,   613,   426,   784,   783,  5409,   783,   203,   198,
     352,  5414,   623,   783,   690,   207,   127,   783,   783,   740,
     422,   739,  5501,   739,   784,   783,   637,  5416,  5413,  5502,
     706,  5504,   173,   338,   784,   783,   585,  5413,   251,   784,
     783,   218,   480,  5432,   786,   721,  3925,   786,   427,   784,
    3165,   784,  5531,   784,  5533,   203,  6423,   332,   669,   203,
     112,   672,    65,   203,   784,  3944,   296,   101,   649,   203,
     203,   143,   116,   432,  1001,    30,   783,   258,  5481,   690,
    5483,   786,  5413,  3642,  2292,  3049,  3919,  5288,  5284,  3764,
    1017,  5286,  5818,  4374,  1021,  5984,  5480,  5846,  6003,  5502,
    6236,  5504,  5310,  5167,  5532,   777,   779,  5510,   777,  5512,
     721,  4448,  3944,  1474,  3928,  5500,  5060,  1044,  4461,  2125,
    2559,  1048,  3070,  4016,  5500,  4245,  1053,  3994,  2467,  2660,
     845,  2659,  2661,  5688,  5537,  5538,  5539,  5540,  5687,  5468,
    4882,  5544,  5545,  4395,  5547,  5560,  4618,  4026,  4622,  5552,
    5553,  5931,  5932,  5556,  5934,  5935,  5936,  5937,  5561,  5562,
    5016,  5353,  6053,  5635,  2897,  5568,  5569,  6171,  5571,  5500,
    6309,  6270,  5939,  5633,  3187,  1462,  5579,  6066,  4877,  5222,
    5840,  5401,  5266,  4883,  5534,  5095,  6294,  6122,  2396,  6132,
    2398,  1118,  1119,  1120,  1121,  6014,  5599,  1124,  6014,  6025,
    6014,  6014,  4557,  4510,  1131,  5413,  5609,  4036,  6135,  6047,
    2503,  3320,  1626,  6235,  4115,  4585,  4588,  4580,  6315,   493,
     493,  6288,  5825,  6289,  3756,  6078,  5699,  6094,  6090,  5735,
    5530,  5528,  4281,  4882,  5263,  1483,  2528,  2321,  1889,    43,
    3744,  5898,  3739,  3215,  6044,  5648,  5739,  2485,  3592,  3038,
    4004,  3376,  4492,   539,  3552,  5658,  1446,  6122,  3685,  5662,
    1433,  1393,  4929,  1210,    68,  3821,  5669,  5670,  3601,   785,
    4609,  5674,  5675,    77,  5705,  3503,  3500,  2059,  3570,  6059,
    3569,  5684,  6062,  2115,  4152,  4061,  4959,  5690,  1960,  6242,
    6070,  6013,  5500,  6073,    98,  5687,  5699,  1981,  6347,  6346,
    1227,  1391,  6191,  2377,  2372,  5187,  1391,  1391,  1991,  4663,
    5713,  1391,  1391,  5515,  6017,  5068,  6018,  2367,  1966,   123,
    3158,  2393,  4138,   127,  4815,  4814,   130,  3808,  4136,  5348,
      43,  5916,  5751,  5043,  5344,  5738,  3824,   141,  4960,  5365,
    3817,  5744,   791,  5746,  4568,  1454,  1424,   511,  5751,  3369,
    4821,  3152,  2571,   157,  5833,    68,   493,  5760,  5837,   708,
    1827,   165,  1300,  2624,    77,  4489,  5648,  3854,  5771,  5772,
    5843,  5844,  4675,   177,  4662,  4660,  5074,   890,  6304,  6268,
    3009,  2197,   699,  5856,   699,    98,  1313,   889,  3010,  3677,
    1317,  1449,   699,  5684,  5797,  3064,  4495,   201,  5381,  1894,
     113,   114,   115,  6307,  2310,  5808,  4285,  4286,  5192,  5524,
     123,  5814,  6434,  6426,   127,  6352,  6433,   130,  1005,  5822,
    3029,  5824,   108,  3538,  3366,  3654,  3419,  5369,   141,  3655,
     698,  2666,  2943,  3656,   698,  5838,  3651,   241,  3647,  3646,
    5843,  4186,   246,   247,   157,  2341,  2640,   696,  1225,  5834,
    4384,  1191,   165,  5856,  3209,  2137,   142,  3597,  5834,  5844,
    3759,  2669,  5890,  5605,   177,  5844,  4935,  4835,  5844,  1882,
     739,  5874,  4396,  1882,   517,   493,   493,   493,  4295,  1334,
    3117,  5884,  4486,  5886,  5161,   974,  2662,   974,   201,  5892,
    5893,  5894,  1419,   179,  4019,  1422,   993,  5976,  4679,  5848,
    6143,  5161,  5150,  5834,  5151,  5844,  5171,  1821,   993,   313,
      -1,   881,    -1,  5844,  5993,    -1,  4395,    -1,    -1,    -1,
      -1,  6410,    -1,    -1,    -1,    -1,  6415,    -1,   241,    -1,
      -1,    -1,    -1,   246,   247,  2743,  2744,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5950,   352,    -1,
      -1,    -1,  5955,    -1,    -1,    -1,    -1,    -1,  5961,    -1,
      -1,    -1,    -1,    -1,    -1,  1492,    -1,    -1,    -1,  1496,
     374,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5984,  5971,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   311,  6002,
     313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6013,    -1,    -1,    -1,  6017,  6018,  2824,    -1,    -1,    -1,
      -1,    -1,    -1,   427,    -1,    -1,  5834,    -1,    -1,  2837,
      -1,    -1,    -1,  3748,    -1,    -1,  5844,    -1,    -1,   352,
     444,  6044,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6053,    -1,    -1,    -1,    -1,    -1,  6135,    -1,    -1,    -1,
    6139,   374,    -1,  6066,    -1,    -1,    -1,    -1,  6141,    -1,
    6143,  6060,  6061,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4560,    -1,  6072,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6098,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  6106,    -1,  6108,  6109,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,    -1,  2927,
      -1,    -1,    -1,  6122,    -1,    -1,    -1,    -1,    -1,    -1,
    6122,   444,    -1,    -1,    -1,  2943,    -1,    -1,  6141,    -1,
    6143,    -1,    -1,    -1,    -1,    -1,  3861,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6233,    -1,    -1,    -1,  6237,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  6169,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   582,    -1,
      -1,  3896,    -1,  3898,  3899,    -1,   528,    -1,  6191,  3904,
      -1,  6180,    -1,    -1,  6183,   481,    -1,  3912,    -1,    -1,
      -1,  3916,    -1,  3918,    -1,    -1,  6209,  6210,    -1,    -1,
    6213,    -1,    -1,    -1,  6293,  6294,    -1,  6220,    -1,    -1,
      -1,    -1,  3030,    -1,    -1,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,   520,   521,   522,   523,   524,   525,
     526,   527,    -1,   529,   530,   531,   532,    -1,    -1,    -1,
      -1,    -1,  6331,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3069,  3070,    -1,    -1,  6268,    -1,    -1,    -1,   582,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6282,
      -1,  4760,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6304,    -1,  4782,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   625,
     626,    -1,    71,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1883,    -1,    -1,    -1,
    3168,    -1,  3170,  3171,  3172,  1892,    -1,  1894,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     732,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4877,    -1,
      -1,    -1,    -1,  6406,    -1,    -1,    -1,  6410,    -1,    -1,
      -1,    -1,  6415,    -1,    -1,    -1,   145,  6420,    -1,    -1,
      -1,    -1,    -1,  6426,    -1,    -1,  1953,  1954,    -1,    -1,
    6433,    -1,  1959,    -1,    -1,    -1,  1963,  1964,  1965,   781,
      -1,    -1,    -1,    -1,    -1,    -1,  1973,  1974,  1975,    -1,
      -1,    -1,  1979,    -1,    -1,    -1,  1983,  1984,  1985,    -1,
    1987,  1988,  1989,  1990,  1991,    -1,    -1,    -1,  4947,    -1,
    1997,    -1,  1999,    -1,    -1,  2002,  2003,  2004,  2005,    -1,
    2007,    -1,  2009,  2010,    -1,    -1,   215,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2023,  2024,  2025,  2026,
    2027,    -1,  2029,  2030,  2031,  2032,  2033,  2034,    -1,  2036,
    2037,    -1,  2039,  2040,    -1,  2042,  2043,    -1,    -1,  2046,
    2047,    -1,  2049,  2050,    -1,  2052,    -1,  2054,    -1,    -1,
      -1,  2058,  2059,  2060,    -1,    -1,  2063,  2064,  2065,  2066,
      -1,  2068,    -1,   272,   273,   274,    -1,    -1,  2075,    -1,
      -1,    -1,    -1,    -1,  2081,  2082,  2083,  2084,  3366,    -1,
      -1,    -1,    -1,   292,    -1,  2092,  2093,    -1,  2095,  2096,
      -1,    -1,  2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,
    2107,  2108,  2109,  2110,  2111,    -1,    -1,  2114,    -1,    -1,
      -1,    -1,  2119,    -1,    -1,    -1,    -1,    -1,    -1,  2126,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   958,   346,    -1,   348,
      -1,    -1,  2149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   366,    -1,   368,
    2167,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5134,    -1,   386,  5137,    -1,
      -1,    -1,     6,     7,   393,    -1,    -1,    -1,    -1,    -1,
    4385,  4386,  4387,    -1,    18,    -1,    -1,    -1,    -1,   408,
      -1,    -1,  5161,    -1,    -1,    -1,   415,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4409,  4410,    -1,  4412,    -1,    -1,
      -1,   430,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    53,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    48,    -1,    81,    -1,  2266,
      -1,  2268,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   487,    -1,
      -1,    -1,    -1,    -1,  3572,  2292,    -1,    80,   497,    -1,
      -1,    -1,    -1,    -1,    -1,   119,  2303,    -1,    -1,   123,
      -1,  3589,    -1,   127,  5263,    -1,    -1,    -1,   101,    -1,
      -1,    -1,   136,   137,    -1,    -1,    -1,   110,    -1,   143,
      -1,    -1,    -1,   147,    -1,    -1,   535,    -1,   152,    -1,
     154,    -1,    -1,    -1,   158,    -1,    -1,    -1,   131,   548,
      -1,    -1,   166,    -1,   168,    -1,    -1,    -1,    -1,   173,
      -1,  5310,   145,    -1,    -1,    -1,    -1,   150,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3656,   193,
      -1,    -1,    -1,  4568,    -1,    -1,    -1,    -1,   587,   203,
     173,    -1,   206,  2390,   593,    -1,    -1,    -1,    -1,  2396,
      -1,  2398,    -1,    -1,  4589,    -1,    -1,     6,     7,    -1,
      -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,   617,    18,
      -1,  2418,    -1,    -1,    -1,    -1,    -1,    -1,  2425,    -1,
      -1,   245,    -1,    -1,    -1,   249,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   258,    -1,    -1,    -1,    -1,   232,
      -1,    -1,   651,   236,    53,    -1,    -1,    -1,    -1,   658,
      -1,    -1,    -1,   277,  5413,    -1,    -1,    -1,    -1,    -1,
      -1,   254,    -1,    -1,    -1,   258,   259,    -1,   292,    -1,
      -1,    -1,    81,    -1,   298,   299,    -1,    -1,    -1,  1301,
      -1,    -1,    -1,   692,    -1,  1307,    -1,    -1,   312,    -1,
     314,    -1,    -1,    -1,    -1,    -1,   289,    -1,   707,   708,
      -1,    -1,    -1,   296,   297,    -1,    -1,    -1,    -1,    -1,
     119,   720,    -1,    -1,   123,    -1,    -1,    -1,   127,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,   137,  3817,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   147,    -1,
      -1,  5500,    -1,   152,    11,   154,    13,    -1,   757,   158,
      -1,    18,    19,    20,    -1,    -1,    -1,   166,    -1,   168,
     353,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,  1391,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   786,    -1,    -1,
      -1,    -1,    -1,    -1,   193,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   203,    -1,    -1,   206,    -1,    -1,
     393,    -1,    -1,    -1,    71,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   226,  2625,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      43,    -1,    99,    -1,    -1,   459,   245,    -1,    -1,    -1,
     249,    -1,    -1,   436,    -1,    -1,    -1,    -1,   441,   258,
      -1,    -1,    -1,    -1,  1476,    68,    -1,    -1,    -1,   452,
     453,    -1,  2669,  2670,    77,  1487,    -1,    -1,   277,    -1,
      -1,  2678,  2679,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,   292,    -1,    98,    -1,    -1,    -1,    -1,
     299,    -1,    -1,    -1,  3982,    -1,    -1,    -1,    -1,    -1,
     167,    -1,    -1,   312,    -1,   314,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,   127,    -1,    -1,   130,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2732,    -1,    -1,   141,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2743,  2744,    -1,    -1,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,   215,    -1,
      -1,    -1,   165,   577,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,  2775,  2776,
    2777,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4071,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,    -1,    -1,   607,    -1,    -1,  2824,    -1,    -1,
      -1,    -1,    -1,  4111,   617,   292,    -1,  2834,   241,    -1,
    2837,    -1,    -1,   246,   247,   628,    -1,    -1,    -1,    -1,
      -1,   634,    -1,    -1,    -1,  2852,  5805,    -1,    -1,  2856,
    2857,    -1,  2859,  2860,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2868,    -1,  2870,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   665,    -1,  5833,  5834,   669,    -1,  5837,   346,
      -1,   348,    -1,    -1,    -1,  5844,    -1,    -1,    -1,    -1,
      -1,  4179,    -1,    -1,  2901,    -1,    -1,    -1,    -1,   366,
     313,   368,    -1,    -1,    -1,    -1,    -1,   700,    -1,    -1,
    5105,  5106,  5107,  5108,    -1,    -1,  5111,  5112,    -1,   386,
    2927,  5116,    -1,    -1,  5119,    -1,   393,  5122,    -1,   753,
    5125,    -1,    -1,    -1,  5129,  5130,  2943,    -1,    -1,   352,
      -1,   408,   766,    -1,    -1,    -1,    -1,    -1,   415,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2963,  4245,    -1,    -1,
     784,   374,   786,   430,    -1,   789,   790,    -1,   577,    -1,
      -1,    -1,  2979,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5939,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5947,    -1,
      -1,    -1,    -1,    -1,  5953,  5954,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1825,    -1,  1827,    -1,    -1,    -1,  3016,
      -1,    -1,    -1,    -1,   427,    -1,  3023,  5976,    -1,    -1,
     487,    -1,    -1,  3030,    -1,    -1,    -1,    -1,    -1,    -1,
     497,   444,    -1,    -1,  5993,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4341,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3069,  3070,    -1,    -1,    -1,    -1,   535,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   548,    -1,    -1,    -1,     6,     7,    -1,    -1,  5284,
      -1,  5286,    -1,  5288,    -1,    -1,    -1,    18,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3122,    -1,    -1,    -1,  6078,
     587,    -1,    -1,    -1,    -1,    -1,   593,    -1,    -1,    -1,
      -1,  6090,    53,    -1,    -1,  6094,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   753,    -1,    -1,  5342,  3155,    -1,
     617,    -1,    -1,    -1,    -1,    -1,    -1,   766,    -1,    -1,
      81,  3168,    -1,  3170,  3171,  3172,    -1,  3174,    -1,   582,
      -1,    -1,    -1,  3180,    -1,   784,  6135,   786,    -1,    -1,
     789,   790,    -1,    -1,   651,    -1,    -1,    -1,    -1,    -1,
      -1,   658,    -1,    -1,    -1,    -1,    -1,    -1,   119,    -1,
      -1,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3221,   136,   137,    -1,    -1,  2041,
      -1,    -1,    -1,  2045,    -1,   692,   147,    -1,    -1,  2051,
      -1,   152,    -1,   154,    -1,    -1,    -1,   158,    -1,    -1,
     707,   708,  6201,  6202,    -1,   166,    -1,   168,    -1,    -1,
      -1,    -1,   173,   720,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   193,    -1,  6233,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   203,    -1,    -1,   206,    -1,    -1,    -1,    -1,
     757,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,  2131,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   245,    -1,    -1,  6286,   249,  6288,
    6289,    -1,    -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2175,    -1,    -1,   277,    -1,  2180,  3366,
    2182,    -1,   679,    -1,    -1,    -1,  6325,    -1,    -1,    -1,
      -1,   292,    -1,    -1,    -1,    -1,    -1,    -1,   299,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   312,    -1,   314,    -1,    -1,    -1,    -1,    -1,    -1,
    6359,    -1,    -1,    -1,    -1,    -1,    -1,  2229,    -1,   726,
      -1,    -1,    -1,  3420,    -1,    -1,    -1,  3424,    -1,  2241,
    3427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3436,
    6389,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3445,    -1,
    3447,  3448,    -1,  3450,  3451,  3452,  3453,    -1,  3455,    -1,
    3457,  3458,    -1,  3460,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3468,  3469,    -1,    -1,    -1,  3473,  3474,  3475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3483,  3484,  3485,    -1,
    3487,    -1,  3489,    -1,  3491,    -1,  3493,    -1,  3495,    -1,
      -1,    -1,    -1,  3500,  3501,    -1,  3503,  3504,  3505,    -1,
      -1,    -1,  3509,    -1,    -1,  3512,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3521,    -1,    -1,  3524,    -1,  3526,
    3527,  3528,    -1,    -1,  3531,  2347,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2365,    -1,    -1,  3553,    -1,  3555,    -1,
      -1,  3558,    -1,    -1,  2376,  2377,    -1,    -1,    -1,    -1,
      -1,  3568,  3569,  3570,  3571,  3572,  3573,    -1,    -1,    -1,
      -1,  3578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3589,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,     6,     7,    -1,  2450,    -1,
      -1,    -1,    -1,    -1,  2456,    43,    -1,    18,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3656,
      -1,    -1,    -1,    -1,    -1,    -1,   577,    -1,    -1,    -1,
      68,    -1,    -1,    -1,    -1,    46,    -1,    48,    49,    77,
      -1,    -1,  4960,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3689,    -1,    -1,    -1,    -1,    -1,    -1,    70,
      98,    72,    -1,    -1,    -1,    -1,    -1,    78,    -1,    -1,
    1017,    -1,    -1,    -1,  1021,  3712,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    99,   127,
      -1,    -1,   130,    -1,    18,    19,    20,  1044,    -1,   110,
      -1,    -1,    -1,   141,    -1,    -1,  1053,    -1,    -1,    -1,
      -1,    -1,  5030,    -1,    -1,    -1,    -1,    -1,    -1,   157,
      -1,    -1,    46,    -1,    48,    -1,    -1,   165,    -1,    -1,
      -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,   177,
      -1,    -1,    -1,    -1,    -1,    -1,    70,  3784,    -1,    -1,
    2602,  2603,    -1,    -1,    78,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   173,   201,    -1,    -1,    -1,    -1,  3805,    -1,
      -1,  1118,  1119,  1120,  1121,    99,    -1,    -1,  2630,    -1,
    3817,    -1,    -1,    -1,  1131,    -1,   110,    -1,  2640,    -1,
      -1,    -1,    -1,   204,    -1,   206,    -1,    -1,    -1,    -1,
      -1,    -1,   753,   241,   215,    -1,   217,    -1,   246,   247,
      -1,    -1,    -1,    -1,    -1,   766,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   240,
      -1,    -1,    -1,   784,    -1,   786,    -1,    -1,   789,   790,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   173,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,
      -1,   292,   206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   215,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   352,    -1,   240,  3954,  3955,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   338,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   346,   374,   348,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3982,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,    -1,  2808,   368,    -1,    -1,
    2812,    -1,    -1,    -1,   375,    -1,  1313,    -1,   292,  6194,
      -1,    -1,    -1,    -1,    -1,   386,    -1,    -1,    -1,    -1,
      -1,    -1,   393,    -1,    -1,    -1,    -1,    -1,    -1,   427,
      -1,    -1,  4029,    -1,    -1,  4032,    -1,   408,    -1,    -1,
      -1,    -1,    -1,    -1,   415,    -1,   444,    -1,   419,   420,
      -1,    -1,    -1,    -1,   338,   426,    -1,    -1,    -1,   430,
    4057,  4058,   346,    -1,   348,  4062,    -1,   438,    -1,    -1,
      -1,    -1,    -1,    -1,  4071,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   368,    -1,    -1,  4084,   459,  4086,
      -1,  4088,    -1,  4090,    -1,    -1,    43,    -1,    -1,    -1,
      -1,    -1,   386,    -1,    -1,    -1,    -1,    -1,  4105,   393,
    2922,  2923,   483,    -1,  4111,    -1,   487,    -1,    -1,    -1,
      -1,    68,    -1,    -1,   408,    -1,   497,  4124,  4125,    -1,
      77,   415,  4129,    -1,  4131,   419,  4133,    -1,    -1,    -1,
      -1,  4138,   426,    -1,    -1,    -1,   430,    -1,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   535,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   459,   123,   548,    -1,   550,
     127,    -1,  4179,   130,   582,  1492,  4183,    -1,    -1,  1496,
      -1,    -1,    -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,
      -1,  3013,    -1,   487,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,   497,    -1,    -1,   587,    -1,   165,    -1,
      -1,    -1,   593,    -1,  4221,    -1,  3038,    -1,    -1,    -1,
     177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   617,   618,  4245,    -1,
      -1,   535,    -1,    -1,   201,    -1,    -1,    -1,   629,   630,
     631,    -1,    -1,    -1,   548,    -1,   550,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     651,    -1,    -1,    -1,    -1,    -1,    -1,   658,    -1,    -1,
      -1,    -1,    -1,    -1,   241,    -1,    -1,  3109,    -1,   246,
     247,    -1,    -1,   587,    -1,    -1,  3118,    -1,    -1,   593,
      -1,  3123,    -1,    -1,    -1,    -1,    -1,  3129,  4315,    -1,
      -1,   692,    -1,    -1,    -1,    -1,    -1,    -1,  4325,    -1,
      43,    -1,  3144,   617,    -1,    -1,   707,   708,    -1,    -1,
      -1,    -1,  4339,    -1,  4341,  4342,    -1,    -1,    -1,   720,
      -1,    -1,    -1,   724,    -1,    68,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    77,  5643,   313,   651,    -1,    -1,
      -1,    -1,    -1,    -1,   658,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    98,   757,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   352,    -1,    -1,   692,    -1,
     123,    -1,    -1,    -1,   127,    -1,    -1,   130,    -1,   790,
      -1,    -1,    -1,   707,   708,    -1,    -1,   374,   141,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   720,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   757,    -1,    -1,    -1,    -1,    -1,  4476,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   201,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   444,    -1,  4496,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3338,    -1,   241,    -1,
      -1,    -1,  3344,   246,   247,  4532,  4533,    -1,  4535,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4548,  4549,  4550,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4572,  4573,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1892,    -1,  1894,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4596,
     313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4608,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4617,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   582,    -1,   145,    -1,   352,
      -1,    -1,    -1,    -1,    -1,    -1,  1953,  1954,    -1,    -1,
      -1,    -1,  1959,    -1,    -1,    -1,  1963,  1964,  1965,    -1,
      -1,   374,    -1,    -1,    -1,  4662,  1973,  1974,    -1,  4666,
      -1,    -1,  1979,    -1,    -1,    -1,  1983,  1984,  1985,    -1,
    1987,  1988,  1989,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1997,    -1,  1999,    -1,    -1,  2002,  2003,  2004,  2005,    -1,
    2007,    -1,  2009,  2010,    -1,    -1,    -1,   215,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2023,  2024,  2025,  2026,
    2027,    -1,  2029,  2030,  2031,  2032,  2033,  2034,    -1,  2036,
    2037,   444,  2039,  2040,    -1,  2042,  2043,    -1,    -1,  2046,
    2047,    -1,  2049,  2050,    -1,  2052,    -1,  2054,    -1,    -1,
      -1,  2058,  2059,  2060,    -1,    -1,  2063,  2064,  2065,  2066,
      -1,  2068,    -1,    -1,   272,   273,   274,    -1,  2075,    -1,
      -1,    -1,    -1,    -1,  2081,  2082,  2083,  2084,    -1,    -1,
    3592,    -1,    -1,    -1,   292,  2092,  2093,    -1,  2095,  2096,
      -1,    -1,  2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,
    2107,  2108,  2109,  2110,  2111,    -1,    -1,  2114,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   346,    -1,
     348,    -1,  2149,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     368,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   582,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,   386,    -1,
      -1,    -1,    -1,    -1,  3696,   393,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4890,  4891,    -1,    -1,    -1,    -1,    47,
     408,    49,    -1,    -1,    -1,    -1,    -1,   415,    -1,    57,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   430,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    79,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   103,   104,    -1,    -1,  2266,
    4957,  2268,    -1,  4960,  3776,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3788,    -1,    -1,   487,
    3792,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,
      -1,    -1,    -1,    -1,    -1,    -1,  2303,   145,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   159,    -1,    -1,  5011,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   535,    -1,    -1,
      -1,    -1,    -1,  5030,    -1,    -1,    -1,    -1,    -1,    -1,
     548,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   214,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5074,   226,   587,
      -1,    -1,    -1,  2390,    -1,   593,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   617,
      -1,  2418,    -1,    -1,    -1,    -1,    -1,    -1,  2425,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   281,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   651,    -1,    -1,    -1,    -1,    -1,    -1,
     658,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3978,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   324,    -1,    -1,    -1,
    5177,    -1,  5179,    -1,   692,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4004,    -1,    -1,    -1,   344,    -1,    -1,   707,
     708,    -1,    -1,    -1,    -1,   353,    -1,    -1,    -1,    -1,
      -1,    -1,   720,    -1,    -1,    -1,    -1,    -1,   366,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   377,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   757,
      -1,    -1,   400,    -1,   679,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   429,   430,    -1,    -1,   433,    -1,   435,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5293,    -1,    -1,    -1,
      -1,   726,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   462,   463,    -1,    -1,  2625,    -1,
     468,   469,    -1,    -1,  5321,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   485,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5344,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4169,   506,    -1,
      56,    57,    -1,  2670,    -1,    61,    62,    -1,    -1,    -1,
      -1,  2678,  2679,    -1,    -1,    71,    -1,    -1,    -1,    -1,
     528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      96,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   109,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2732,    -1,    -1,    -1,   125,
      -1,   127,    -1,    -1,   582,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   597,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   606,   155,
      -1,   609,   610,    -1,    -1,    -1,  4278,    -1,  2775,  2776,
    2777,  4283,  4284,    -1,    -1,    -1,   624,    -1,   174,   175,
     176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   184,   185,
     186,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4311,
    4312,    -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,    -1,
      -1,    -1,    -1,   661,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   669,    -1,    -1,    -1,    -1,    -1,  2834,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   234,    -1,
      -1,    -1,   690,    -1,   692,  2852,    -1,    -1,    -1,  2856,
    2857,    -1,  2859,  2860,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2868,    -1,  2870,    -1,   261,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   284,   285,
     286,    -1,  1017,    -1,  2901,   743,  1021,    -1,    -1,    -1,
      -1,    -1,   750,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     306,   307,    -1,    -1,  5611,    -1,    -1,    -1,    -1,  1044,
    2927,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1053,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5635,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5643,    -1,    -1,    -1,
      -1,    -1,  5649,    -1,    -1,    -1,  2963,    -1,   354,    -1,
     356,   357,    -1,    -1,    -1,    -1,    -1,    -1,  5665,    -1,
      -1,    -1,  2979,    -1,    -1,    -1,    -1,   373,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1118,  1119,  1120,  1121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1131,    -1,    -1,  3016,
      -1,    -1,    -1,   409,   410,    -1,  3023,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   455,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5776,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3155,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   558,   559,    -1,    -1,    -1,  3174,    -1,    -1,
      -1,    -1,    -1,  3180,    -1,    -1,    -1,    -1,   574,   575,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1313,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5899,    -1,    -1,    -1,  4718,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3221,    -1,  4728,    -1,    -1,    -1,
     616,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5985,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   712,    -1,    -1,   715,
      -1,    -1,   718,    -1,    -1,    -1,    -1,    -1,  6025,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6037,    -1,    -1,    -1,    -1,    -1,   742,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   762,  1492,    -1,    -1,
      -1,  1496,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3420,    -1,    -1,    -1,  3424,    -1,    -1,
    3427,    -1,    -1,    -1,    -1,  6122,    -1,    -1,    -1,  3436,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3445,    -1,
    3447,  3448,    -1,  3450,  3451,  3452,  3453,    -1,  3455,    -1,
    3457,  3458,    -1,  3460,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3468,  3469,    -1,    -1,    -1,  3473,  3474,  3475,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3483,  3484,  3485,  6176,
    3487,    -1,  3489,    -1,  3491,    -1,  3493,    -1,  3495,    -1,
      -1,    -1,    -1,  3500,  3501,    -1,  3503,  3504,  3505,    -1,
      -1,    -1,  3509,    -1,    -1,  3512,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3521,    -1,    -1,  3524,    -1,  3526,
    3527,  3528,    -1,    -1,  3531,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3553,    -1,  3555,    -1,
      -1,  3558,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3568,  3569,  3570,  3571,    -1,  3573,    -1,    -1,    -1,
      -1,  3578,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5101,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6305,    -1,
      -1,    -1,  6309,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3689,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3712,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5229,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5248,    -1,    -1,    -1,
    6437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1892,    -1,  1894,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3784,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3805,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1953,  1954,
      -1,    -1,    -1,    -1,  1959,    -1,    -1,    -1,  1963,  1964,
    1965,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1973,  1974,
      -1,    -1,    -1,    -1,  1979,    -1,    -1,    -1,  1983,  1984,
    1985,    -1,  1987,  1988,  1989,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1997,    -1,  1999,    -1,    -1,  2002,  2003,  2004,
    2005,    -1,  2007,    -1,  2009,  2010,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2023,  2024,
    2025,  2026,  2027,    -1,  2029,  2030,  2031,  2032,  2033,  2034,
      -1,  2036,  2037,    -1,  2039,  2040,    -1,  2042,  2043,    -1,
      -1,  2046,  2047,    -1,  2049,  2050,    -1,  2052,    -1,  2054,
      -1,    -1,    -1,  2058,  2059,  2060,    -1,    -1,  2063,  2064,
    2065,  2066,    -1,  2068,    -1,    -1,    -1,  3954,  3955,    -1,
    2075,    -1,    -1,    -1,    -1,    -1,  2081,  2082,  2083,  2084,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2092,  2093,    -1,
    2095,  2096,    -1,    -1,  2099,  2100,  2101,  2102,  2103,  2104,
    2105,  2106,  2107,  2108,  2109,  2110,  2111,    -1,    -1,  2114,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4029,    -1,  2149,  4032,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4057,  4058,    -1,    -1,    -1,  4062,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4084,    -1,  4086,
      -1,  4088,    -1,  4090,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5609,  4105,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4124,  4125,    -1,
      -1,    -1,  4129,    -1,  4131,    -1,  4133,    -1,    -1,    -1,
      -1,  4138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2266,    -1,  2268,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   679,    -1,  5670,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4183,    -1,  2303,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4221,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2390,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2418,    -1,    -1,    -1,    -1,    -1,    -1,
    2425,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4315,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4325,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4339,    -1,    -1,  4342,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5884,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5894,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4476,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4496,
    6002,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1021,    -1,
    2625,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1044,    -1,    -1,    -1,  4532,  4533,    -1,  4535,    -1,
    1053,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4548,  4549,  4550,    -1,  2670,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2678,  2679,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4572,  4573,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4596,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1121,    -1,
      -1,  4608,    -1,    -1,    -1,    -1,    -1,  2732,    -1,    -1,
    4617,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2775,  2776,  2777,    -1,    -1,  4662,    -1,    -1,    -1,  4666,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2834,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2852,    -1,    -1,
      -1,  2856,  2857,    -1,  2859,  2860,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2868,    -1,  2870,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2901,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1313,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2927,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2963,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2979,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4890,  4891,    -1,    -1,    -1,    -1,    -1,
      -1,  3016,    -1,    -1,    -1,    -1,    -1,    -1,  3023,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4957,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1492,
      -1,    -1,    -1,  1496,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3122,    -1,    -1,
      -1,    -1,    -1,    -1,  5011,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3174,
      -1,    -1,    -1,    -1,    -1,  3180,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5074,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3221,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5177,    -1,  5179,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5293,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3420,    -1,    -1,    -1,  3424,
      -1,    -1,  3427,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3436,    -1,    -1,  5321,    -1,    -1,    -1,    -1,    -1,
    3445,    -1,  3447,  3448,    -1,  3450,  3451,  3452,  3453,    -1,
    3455,    -1,  3457,  3458,    -1,  3460,    -1,  5344,    -1,    -1,
      -1,    -1,    -1,  3468,  3469,    -1,    -1,    -1,  3473,  3474,
    3475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3483,  3484,
    3485,    -1,  3487,    -1,  3489,    -1,  3491,    -1,  3493,  1892,
    3495,  1894,    -1,    -1,    -1,  3500,  3501,    -1,  3503,  3504,
    3505,    -1,    -1,    -1,  3509,    -1,    -1,  3512,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3521,    -1,    -1,  3524,
      -1,  3526,  3527,  3528,    -1,    -1,  3531,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3553,    -1,
    3555,    -1,    -1,  3558,    -1,    -1,  1959,    -1,    -1,    -1,
    1963,    -1,  1965,  3568,  3569,  3570,  3571,    -1,  3573,    -1,
    1973,  1974,    -1,  3578,    -1,    -1,  1979,    -1,    -1,    -1,
    1983,  1984,  1985,    -1,  1987,  1988,  1989,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1997,    -1,  1999,    -1,    -1,  2002,
    2003,  2004,  2005,    -1,    -1,    -1,  2009,  2010,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2023,  2024,  2025,  2026,  2027,    -1,  2029,  2030,  2031,  2032,
    2033,    -1,    -1,  2036,  2037,    -1,  2039,  2040,    -1,  2042,
    2043,    -1,    -1,    -1,  2047,    -1,  2049,  2050,    -1,  2052,
      -1,  2054,    -1,    -1,    -1,  2058,  2059,  2060,    -1,    -1,
    2063,    -1,  2065,  2066,    -1,  2068,    -1,    -1,    -1,    -1,
      -1,    -1,  2075,    -1,    -1,    -1,    -1,    -1,  2081,  2082,
    2083,    -1,    -1,    -1,  3689,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3712,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5611,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2149,    -1,  5635,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5649,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5665,  3784,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3805,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2266,    -1,  2268,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5776,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2303,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3954,
    3955,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2390,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5899,    -1,    -1,  2418,    -1,    -1,    -1,    -1,
      -1,    -1,  2425,    -1,  4029,    -1,    -1,  4032,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4057,  4058,    -1,    -1,    -1,  4062,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4084,
      -1,  4086,    -1,  4088,    -1,  4090,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5985,    -1,
    4105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4124,
    4125,    -1,    -1,    -1,  4129,    -1,  4131,    -1,  4133,    -1,
      -1,    -1,    -1,  4138,    -1,    -1,    -1,    -1,  6025,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6037,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4183,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4221,    -1,    -1,    -1,
      -1,    -1,  2625,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6122,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2670,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2678,  2679,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6176,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2732,
      -1,    -1,    -1,    -1,  4339,    -1,    -1,  4342,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2775,  2776,  2777,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6305,    -1,
      -1,    -1,  6309,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2852,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2868,    -1,  2870,    -1,    -1,
      -1,  4476,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4496,    -1,    -1,    -1,    -1,    -1,    -1,  2901,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2927,    -1,    -1,  4532,  4533,    -1,
    4535,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4548,  4549,  4550,    -1,    -1,    -1,    -1,
    6437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2963,    -1,    -1,    -1,    -1,    -1,    -1,  4572,  4573,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2979,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4608,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4617,  3016,    -1,    -1,    -1,    -1,    -1,    -1,
    3023,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4662,    -1,    -1,
      -1,  4666,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3122,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3155,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3221,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4890,  4891,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4957,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5011,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3420,    -1,    -1,
      -1,  3424,    -1,    -1,  3427,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3445,    -1,    -1,    -1,    -1,  3450,  3451,  3452,
    3453,    -1,  3455,    -1,  3457,  3458,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3468,  3469,    -1,    -1,  5074,
    3473,  3474,  3475,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3483,  3484,  3485,    -1,  3487,    -1,  3489,    -1,  3491,    -1,
    3493,    -1,  3495,    -1,    -1,    -1,    -1,  3500,  3501,    -1,
    3503,    -1,  3505,    -1,    -1,    -1,  3509,    -1,    -1,  3512,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3524,    -1,  3526,  3527,  3528,    -1,    -1,  3531,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3558,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3569,  3570,    -1,    -1,
    3573,    -1,  5177,    -1,  5179,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3689,    -1,  5293,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3712,
      -1,    -1,    -1,    -1,    -1,    -1,  5321,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5344,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3805,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3954,  3955,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5611,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4029,    -1,    -1,  4032,
    5635,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5649,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4057,  4058,    -1,    -1,    -1,  4062,
    5665,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4084,    -1,  4086,    -1,  4088,    -1,  4090,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4105,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4124,  4125,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4138,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5776,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4183,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4221,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5899,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4325,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4339,    -1,    -1,  4342,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5985,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6037,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4476,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4496,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6122,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4532,
    4533,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4548,  4549,  4550,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4572,
    4573,  6176,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4617,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4662,
      -1,    -1,    -1,  4666,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6305,    -1,    -1,    -1,  6309,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4890,  4891,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4957,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5011,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5074,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5177,    -1,  5179,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5321,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5611,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5649,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5665,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5899,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,     8,     9,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,  6037,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,  6122,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,   254,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,   305,    -1,    -1,   308,   309,
      -1,    -1,  6305,    -1,   314,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,  6437,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    64,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,   163,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,   203,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,   311,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,   143,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,   196,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,   182,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,   777,     8,     9,
      -1,    -1,    -1,   783,    -1,    -1,    -1,   787,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,    59,
      60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    69,
      -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,    79,
      -1,    -1,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
     120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,    -1,
      -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
     150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     180,   181,    -1,   183,    -1,    -1,    -1,   187,    -1,    -1,
      -1,    -1,   192,    -1,    -1,   195,    -1,    -1,   198,   199,
     200,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,   219,
     220,   221,    -1,   223,    -1,    -1,    -1,    -1,    -1,    -1,
     230,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   249,
     250,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,    -1,
      -1,    -1,    -1,    -1,    -1,   275,   276,    -1,   278,   279,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     300,   301,   302,    -1,    -1,    -1,    -1,    -1,   308,   309,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   771,   772,     3,    -1,    -1,    -1,    -1,     8,    -1,
      -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,   788,    19,
      20,   791,    22,    23,    24,    25,    26,    27,    28,    29,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,   201,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     290,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,     3,   759,
     760,   761,   762,     8,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,     3,   759,   760,   761,   762,     8,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   784,
      -1,    -1,    -1,    -1,    -1,    -1,   791,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,     8,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,     8,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,     8,   759,
     760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,     5,    -1,     7,     8,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    48,    49,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    66,    -1,    68,    -1,    70,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,   101,
      -1,   103,   104,    -1,    -1,    -1,    -1,    -1,   110,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,   131,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,   141,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,   173,    -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   204,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,   217,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   227,   228,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   239,   240,   241,
      -1,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
      -1,    -1,   254,    -1,    -1,    -1,   258,   259,   260,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   294,    -1,   296,    -1,   298,    -1,    -1,    -1,
      -1,    -1,    -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   313,   314,    -1,    -1,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,    -1,   328,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,    -1,   367,   368,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,    -1,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,    -1,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,    -1,   569,   570,   571,
     572,   573,   574,   575,   576,    -1,   578,   579,   580,   581,
      -1,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,    -1,    -1,   681,
     682,    -1,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,     5,    -1,    -1,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,   783,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    48,    49,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    66,    -1,    68,    -1,    70,    -1,    72,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    98,    -1,    -1,   101,    -1,   103,
     104,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   127,    -1,    -1,    -1,   131,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   161,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,   173,
      -1,    -1,    -1,   177,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     204,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   216,   217,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   227,   228,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   239,   240,   241,    -1,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,
     254,    -1,    -1,    -1,   258,   259,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     294,    -1,   296,    -1,   298,    -1,    -1,    -1,    -1,    -1,
      -1,   305,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   313,
     314,    -1,    -1,    -1,   318,   319,   320,    -1,   322,   323,
     324,   325,   326,    -1,   328,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,    -1,   367,   368,   369,   370,   371,   372,   373,
      -1,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,    -1,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,    -1,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,    -1,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,    -1,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,    -1,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,    -1,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,     5,
      -1,    -1,     8,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    19,    20,    -1,    -1,    -1,    -1,   783,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    48,    49,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      66,    -1,    -1,    -1,    70,    -1,    72,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   101,    -1,   103,   104,    -1,
      -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   161,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   171,    -1,   173,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   204,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,   217,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   227,   228,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   239,   240,    -1,    -1,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,    -1,    -1,   254,    -1,
      -1,    -1,   258,   259,   260,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   294,    -1,
     296,    -1,   298,    -1,    -1,    -1,    -1,    -1,    -1,   305,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   314,    -1,
      -1,    -1,   318,   319,   320,    -1,   322,   323,   324,   325,
     326,    -1,   328,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,    -1,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
      -1,   367,   368,   369,   370,   371,   372,   373,    -1,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,    -1,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,    -1,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,    -1,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,    -1,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,    -1,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,    -1,   569,   570,   571,   572,   573,   574,   575,
     576,    -1,   578,   579,   580,   581,    -1,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,    -1,    -1,   681,   682,    -1,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   783,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,   145,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   160,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     262,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,    -1,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,    -1,    -1,   681,
     682,    -1,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   791,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   305,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   314,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,    -1,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,    -1,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,    -1,    -1,   681,   682,    -1,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   783,
      -1,    -1,    -1,    -1,   788,    -1,    -1,   791,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,   788,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,    -1,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,    -1,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,    -1,    -1,   681,   682,    -1,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   783,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   791,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,    -1,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,    -1,    -1,   681,
     682,    -1,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   773,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   791,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,    -1,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,    -1,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,    -1,    -1,   681,   682,    -1,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   791,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,    -1,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,    -1,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,    -1,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,    -1,
      -1,   681,   682,    -1,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,   759,
     760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,    -1,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,    -1,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,    -1,    -1,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,    -1,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,    -1,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,    -1,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,    -1,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,    -1,    -1,   681,   682,    -1,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   791,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,    -1,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,    -1,    -1,   681,
     682,    -1,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   791,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    85,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,    -1,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,    -1,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,    -1,    -1,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,    -1,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,    -1,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,    -1,   533,   534,   535,   536,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,    -1,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,    -1,
     678,    -1,    -1,   681,   682,    -1,   684,   685,   686,   687,
     688,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   783,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,     3,   759,   760,   761,   762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   783,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,     3,
     759,   760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,     3,   759,   760,   761,   762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,     3,
     759,   760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,     3,   759,   760,   761,   762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,     3,
     759,   760,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,     3,   759,   760,   761,   762,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,     8,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,     8,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,     8,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,    -1,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
      -1,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,    -1,
      -1,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
      -1,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,    -1,   533,
     534,   535,   536,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,    -1,    -1,   681,   682,    -1,
     684,   685,   686,   687,   688,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,     8,
       9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    28,
      -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   773,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   773,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   773,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     773,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   773,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    26,    -1,    -1,   773,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    40,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,   209,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   265,    -1,   267,    -1,   269,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,   772,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    21,   766,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    42,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,   766,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,    -1,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,    -1,
     149,   150,    -1,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,    -1,   213,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
      -1,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,    -1,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,    -1,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,    -1,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,    -1,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,    -1,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,    -1,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,    -1,   661,   662,   663,   664,   665,    -1,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,    -1,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,    -1,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,    -1,   149,   150,    -1,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
      -1,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    -1,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,    -1,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,    -1,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
      -1,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,    -1,   661,   662,   663,   664,
     665,    -1,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    -1,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,    -1,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,    -1,   149,   150,
      -1,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,    -1,   213,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,    -1,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,    -1,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
      -1,   322,   323,   324,   325,   326,    -1,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,    -1,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,    -1,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,    -1,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,    -1,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,    -1,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,    -1,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
      -1,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
      -1,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,    -1,   149,   150,    -1,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,    -1,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,    -1,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,    -1,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,    -1,   322,   323,   324,   325,   326,
      -1,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,    -1,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,    -1,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,    -1,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,    -1,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,    -1,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,    -1,   661,   662,   663,   664,   665,    -1,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,    -1,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,    -1,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    48,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,
      -1,    84,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,   145,    -1,    -1,    -1,    -1,   150,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   232,
      -1,    -1,    -1,   236,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   254,    -1,    -1,    -1,   258,   259,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   289,    -1,    -1,    -1,
      -1,    -1,    -1,   296,   297,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    80,    -1,    -1,    -1,    84,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   131,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,   145,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   173,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   232,    -1,    -1,    -1,   236,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   254,    -1,    -1,    -1,   258,
     259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     289,    -1,    -1,    -1,    -1,    -1,    -1,   296,   297,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    24,
      25,    26,    -1,    28,    -1,    30,    31,    32,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      23,    -1,    -1,    26,    27,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      85,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   258,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    76,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    86,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,    -1,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   128,    -1,    -1,
      -1,    -1,    -1,    -1,   135,   136,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   267,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   128,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      63,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,   225,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,    -1,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,    -1,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,    -1,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,    -1,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
      -1,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,    -1,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,    -1,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,    -1,   533,   534,   535,   536,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,    -1,    -1,
     681,   682,    -1,   684,   685,   686,   687,   688,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,    -1,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,    -1,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,    -1,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,    -1,   460,   461,   462,   463,   464,   465,   466,
     467,    -1,   469,   470,   471,   472,   473,    -1,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,    -1,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,    -1,   533,   534,   535,   536,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,    -1,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,    -1,    -1,   681,   682,    -1,   684,   685,   686,
     687,   688,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    86,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   318,   319,   320,    -1,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,    -1,    -1,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,    -1,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,    -1,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,    -1,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,    -1,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,    -1,    -1,   681,   682,
      -1,   684,   685,   686,   687,   688,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,    -1,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,    -1,    -1,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,    -1,   367,   368,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
     379,   380,   381,   382,   383,    -1,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,    -1,   458,
      -1,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,    -1,   471,   472,   473,    -1,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,    -1,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,    -1,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,    -1,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,    -1,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,    -1,   646,   647,   648,
     649,   650,   651,   652,    -1,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,    -1,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,   688,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,    -1,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
     759,   760,   761,   762,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   311,    -1,    -1,    -1,
      -1,    -1,    -1,   318,   319,   320,   321,   322,    -1,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,    -1,   342,   343,   344,
     345,   346,   347,   348,   349,    -1,    -1,    -1,    -1,   354,
     355,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,   371,   372,   373,    -1,
     375,   376,   377,   378,    -1,    -1,    -1,    -1,    -1,    -1,
     385,    -1,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,    -1,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,    -1,   423,   424,
     425,   426,    -1,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,    -1,    -1,    -1,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,    -1,    -1,    -1,    -1,    -1,   461,   462,   463,   464,
     465,   466,    -1,   468,   469,    -1,   471,   472,    -1,    -1,
     475,    -1,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,    -1,   489,   490,   491,   492,   493,   494,
     495,   496,   497,    -1,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,    -1,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,    -1,    -1,    -1,
     585,    -1,   587,   588,    -1,   590,   591,   592,   593,    -1,
     595,   596,   597,   598,    -1,    -1,    -1,    -1,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,    -1,   630,    -1,   632,   633,   634,
      -1,   636,   637,    -1,   639,   640,   641,   642,   643,   644,
      -1,   646,   647,   648,   649,   650,   651,   652,    -1,   654,
     655,   656,    -1,   658,   659,   660,   661,    -1,   663,   664,
      -1,    -1,   667,   668,    -1,    -1,   671,   672,   673,    -1,
     675,    -1,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,    -1,   689,   690,    -1,   692,    -1,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,    -1,
     715,   716,   717,   718,   719,   720,   721,   722,   723,    -1,
     725,   726,    -1,   728,   729,   730,   731,    19,    20,   734,
     735,    -1,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,    -1,    -1,
     755,   756,    -1,    -1,   759,    -1,   761,   762,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   311,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,   321,
     322,    -1,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,    -1,
     342,   343,   344,   345,   346,   347,   348,   349,    -1,    -1,
      -1,    -1,   354,   355,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,   371,
     372,   373,    -1,   375,   376,   377,   378,    -1,    -1,    -1,
      -1,    -1,    -1,   385,    -1,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,    -1,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,   418,   419,   420,   421,
      -1,   423,   424,   425,   426,    -1,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,    -1,    -1,    -1,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,    -1,    -1,    -1,    -1,    -1,   461,
     462,   463,   464,   465,   466,    -1,   468,   469,    -1,   471,
     472,    -1,    -1,   475,    -1,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,    -1,   489,   490,   491,
     492,   493,   494,   495,   496,   497,    -1,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,    -1,   569,   570,   571,
     572,   573,   574,   575,   576,    -1,   578,   579,   580,   581,
      -1,    -1,    -1,   585,    -1,   587,   588,    -1,   590,   591,
     592,   593,    -1,   595,   596,   597,   598,    -1,    -1,    -1,
      -1,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,    -1,   630,    -1,
     632,   633,   634,    -1,   636,   637,    -1,   639,   640,   641,
     642,   643,   644,    -1,   646,   647,   648,   649,   650,   651,
     652,    -1,   654,   655,   656,    -1,   658,   659,   660,   661,
      -1,   663,   664,    -1,    -1,   667,   668,    -1,    -1,   671,
     672,   673,    -1,   675,    -1,   677,   678,    -1,    -1,   681,
     682,    -1,   684,   685,   686,   687,    -1,   689,   690,    -1,
     692,    -1,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,    -1,   715,   716,   717,   718,   719,   720,   721,
     722,   723,    -1,   725,   726,    -1,   728,   729,   730,   731,
      19,    20,   734,   735,    -1,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,    -1,    -1,   755,   756,    -1,    -1,   759,    -1,   761,
     762,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   218,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   318,
     319,   320,   321,   322,    -1,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,    -1,   342,   343,   344,   345,   346,   347,   348,
     349,    -1,    -1,    -1,    -1,   354,   355,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,   371,   372,   373,    -1,   375,   376,   377,   378,
      -1,    -1,    -1,    -1,    -1,    -1,   385,    -1,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,    -1,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,   418,
     419,   420,   421,    -1,   423,   424,   425,   426,    -1,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
      -1,    -1,    -1,   442,    -1,    -1,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,    -1,    -1,    -1,
      -1,    -1,   461,   462,   463,   464,   465,   466,    -1,   468,
     469,    -1,   471,   472,    -1,    -1,   475,    -1,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,    -1,
     489,   490,   491,   492,   493,   494,   495,   496,   497,    -1,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,    -1,   533,   534,   535,   536,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,    -1,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,    -1,    -1,    -1,   585,    -1,   587,   588,
      -1,   590,   591,   592,   593,    -1,   595,   596,   597,   598,
      -1,    -1,    -1,    -1,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
      -1,   630,    -1,   632,   633,   634,    -1,   636,   637,    -1,
     639,   640,   641,   642,   643,   644,    -1,   646,   647,   648,
     649,   650,   651,   652,    -1,   654,   655,   656,    -1,   658,
     659,   660,   661,    -1,   663,   664,    -1,    -1,   667,   668,
      -1,    -1,   671,   672,   673,    -1,   675,    -1,   677,   678,
      -1,    -1,   681,   682,    -1,   684,   685,   686,   687,    -1,
     689,   690,    -1,   692,    -1,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,    -1,   715,   716,   717,   718,
     719,   720,   721,   722,   723,    -1,   725,   726,    -1,   728,
     729,   730,   731,    -1,    -1,   734,   735,    -1,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,    19,    20,   755,   756,    -1,    -1,
     759,    -1,   761,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    -1,    57,    58,    59,    60,    -1,    -1,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,    -1,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,    -1,   149,   150,    -1,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,    -1,
      -1,    -1,   177,   178,   179,   180,   181,   182,   183,    -1,
      -1,    -1,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,    -1,   203,   204,
     205,   206,   207,   208,   209,   210,   211,    -1,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,    -1,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,    -1,   259,   260,    -1,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,    -1,   280,   281,   282,   283,    -1,
      -1,    -1,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,    -1,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,    -1,   322,   323,   324,
     325,   326,    -1,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,    -1,   352,   353,    -1,
     355,    -1,    -1,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,    -1,    -1,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,    -1,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
      -1,   456,   457,   458,    -1,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,    -1,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,    -1,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,    -1,   533,   534,
     535,   536,   537,   538,   539,    -1,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,    -1,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,    -1,    -1,
      -1,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
      -1,    -1,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,    -1,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,    -1,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,    -1,    -1,   681,   682,    -1,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,    -1,   713,   714,
      -1,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,    -1,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,    -1,   754,
     755,   756,   757,    -1,   759,   760,   761,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   207,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   218,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   318,   319,   320,    -1,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,    -1,
      -1,   353,    -1,   355,    -1,    -1,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
      -1,    -1,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,    -1,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,    -1,    -1,   411,
     412,   413,    -1,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,    -1,   428,   429,   430,    -1,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,    -1,    -1,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,    -1,   456,   457,   458,    -1,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,    -1,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,    -1,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
      -1,   533,   534,   535,   536,   537,   538,   539,    -1,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,    -1,    -1,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,    -1,    -1,    -1,   576,    -1,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,    -1,    -1,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,    -1,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,    -1,   661,
     662,   663,   664,   665,    -1,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,    -1,    -1,   681,
     682,    -1,   684,   685,   686,   687,   688,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
      -1,   713,   714,    -1,   716,   717,    -1,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,    -1,
      -1,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,    -1,   759,   760,   761
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,     5,     7,     8,    19,    20,    48,    49,    66,    68,
      70,    72,    80,    88,    98,   101,   103,   104,   110,   116,
     127,   131,   135,   141,   150,   161,   171,   173,   177,   195,
     204,   207,   216,   217,   218,   227,   228,   239,   240,   241,
     243,   248,   254,   258,   259,   260,   294,   296,   298,   305,
     313,   314,   318,   319,   320,   322,   323,   324,   325,   326,
     328,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   367,   368,   369,   370,
     371,   372,   373,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   458,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     533,   534,   535,   536,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   569,   570,   571,   572,   573,
     574,   575,   576,   578,   579,   580,   581,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   681,   682,   684,   685,   686,   687,   688,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   759,   760,
     761,   762,   783,   793,   796,   797,   798,   799,   800,   802,
     808,   810,   825,   868,   875,   914,   915,   922,   923,   936,
     971,   996,  1014,  1076,  1131,  1232,  1286,  1289,  1299,  1304,
    1310,  1323,  1326,  1332,  1335,  1340,  1347,  1359,  1362,  1365,
    1366,  1368,  1371,  1372,  1374,  1375,  1378,  1379,  1382,  1623,
    1625,  1638,  1641,  1679,  1688,  1706,  1714,  1728,  1732,  1733,
    1737,  1738,  1748,  1755,  1763,  1765,  1771,  1774,  1775,  1807,
    1829,  1851,  1854,  1855,  1856,  1857,  1858,  1859,  1860,  1862,
    1904,  1911,  1913,  1922,  1925,  1961,  1963,  1968,  1969,  1970,
    1971,  2001,  2010,  2011,  2012,  2014,  2043,  2045,  2046,  2093,
    2110,  2116,   144,   321,   350,   352,   353,   360,   366,   368,
     374,   388,   398,   412,   422,   427,   441,   456,   457,   463,
     467,   470,   473,   488,   498,   568,   582,   600,   602,   631,
     635,   645,   653,   665,   688,   691,   724,   733,   753,   760,
    1829,  1831,  1840,  1847,  1851,  1852,  1853,  1854,  1855,  1856,
    1857,  1860,  2028,    88,   226,   338,   413,   463,   658,   662,
     737,  1233,  1975,  1976,  1977,  1978,   197,   460,   506,  1334,
    1735,  1840,   972,   528,  1327,   208,  2118,  1689,    88,   145,
     214,   226,   289,   324,   436,   463,   644,   662,   710,   737,
     746,   865,   866,   867,  1637,   999,   863,   937,  1639,  1766,
     145,   408,   761,  1780,   281,   706,  1907,   997,  1334,  1132,
    1015,    57,   528,  1720,   258,   267,   911,   916,   918,  1840,
     653,   737,  1907,  1001,   916,   917,   863,  1369,  1863,  1715,
     916,  1912,  1680,  1840,  1367,   998,   235,  1809,  1642,   173,
     294,   686,  1749,  1962,    40,   196,  1419,  2013,  2115,     3,
      31,  1834,   145,  1907,   756,  1965,  1624,   482,  1840,  1334,
     403,   924,  1914,   809,   598,   676,  1840,  1334,  1756,  1965,
    1840,  1772,    47,   669,   719,    47,   669,  1707,   598,   676,
     351,   352,   388,   427,   602,   619,   645,   688,  2004,  1368,
    1375,  1378,     0,     7,   794,   602,    88,   129,   145,   262,
     293,   644,   737,   842,  1210,  1211,  1637,  1975,  1976,  1977,
    1978,   128,   154,  1385,  1386,  1619,  1363,  1360,   119,   152,
     292,  1377,  1972,  1376,  1972,   448,   460,   591,   791,  1734,
    1735,  1826,  1840,  1372,  1374,    42,   791,   791,   386,  1252,
    1840,   869,  1840,   766,   766,   869,   141,  1636,    21,  1834,
    1840,  1842,  1636,  1278,  1279,   268,  1403,  1979,  1980,  1975,
     766,  1907,  1359,  1362,  1638,  1641,  1679,  1688,  1731,   791,
     876,   311,   952,   953,   973,   976,   979,   821,   822,  1834,
     746,  1324,  1907,   328,    76,    77,    86,   144,   443,   444,
     753,   898,   899,   901,   907,   934,   935,  1831,  1851,  1852,
    1853,  1854,  1855,  1860,  2013,  2030,  2043,  2044,  2084,  2100,
    2101,  2103,  2104,  2106,   143,   178,   475,   614,  1691,  1704,
    1705,  1636,  1627,    63,  1636,   318,  1636,  1636,  1636,  1636,
    1636,  1636,   658,  1907,   984,  1831,  2032,  2044,    47,    48,
      80,    84,   101,   110,   131,   145,   150,   173,   232,   236,
     254,   258,   259,   289,   296,   297,   353,   393,   436,   441,
     452,   453,   607,   611,   617,   628,   634,   665,   669,   700,
    1842,  1926,  1930,  1931,  1932,  1934,  1936,  1937,  1938,  1939,
     952,   967,  1644,   471,   675,  1767,   154,  1776,  1905,    43,
      77,   123,   130,   157,   165,   201,   246,   247,   374,   444,
     582,   893,   936,   938,   939,   940,   941,   943,   946,   949,
     950,   951,   961,   962,   963,   964,   965,   971,   986,   989,
     996,  2037,  2038,  2050,  2051,  2108,  2109,  2111,  2116,  1907,
       3,     8,     9,    19,    20,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    40,    57,    58,    59,
      60,    68,    69,    71,    78,    79,    82,    83,    84,    85,
      87,    90,    91,    99,   102,   120,   121,   122,   124,   132,
     133,   134,   141,   150,   153,   162,   164,   166,   180,   181,
     183,   187,   192,   196,   198,   199,   200,   201,   219,   220,
     221,   223,   230,   241,   249,   250,   268,   275,   276,   278,
     279,   290,   300,   301,   302,   308,   309,   327,   328,   329,
     330,   334,   341,   349,   366,   379,   381,   382,   383,   398,
     410,   411,   466,   478,   500,   501,   546,   552,   561,   562,
     585,   593,   605,   649,   656,   663,   696,   715,   716,   717,
     718,   723,   724,   737,   740,   752,   754,   762,   771,   772,
     777,   783,   787,   788,   791,  1378,  1384,  1413,  1414,  1415,
    1416,  1420,  1431,  1435,  1436,  1437,  1438,  1439,  1440,  1441,
    1445,  1446,  1447,  1455,  1461,  1462,  1463,  1464,  1465,  1467,
    1470,  1799,  1802,  1804,  1805,  1806,  1823,  1830,  1832,  1833,
    1840,  1847,  1858,  1859,    65,  1016,   510,   250,   362,   370,
     385,   395,   396,   397,   405,   543,   555,   655,   695,   709,
     919,   921,   740,   912,   918,  1840,   863,  1636,   893,   987,
     918,    47,   333,   611,  1923,  1924,  1932,  1934,    47,   106,
     264,   266,   277,   293,   474,   681,   682,   683,   684,  1388,
    1395,  1396,  1974,     3,    71,    99,   144,   321,   366,   463,
     468,   506,   556,   577,   593,   644,   661,   689,   719,   753,
    1175,  1829,  1838,  1849,  1851,  1852,  1853,  1855,  1856,  1857,
    1860,  1864,  1874,  1885,  2028,    47,    49,    79,    80,    89,
     145,   159,   214,   226,   281,   324,   344,   353,   366,   377,
     400,   430,   433,   435,   462,   463,   468,   469,   485,   506,
     528,   582,   597,   606,   609,   610,   624,   661,   669,   692,
     750,  1175,  1209,  1716,  1720,  1721,  1723,  1732,  1831,  1875,
     918,  1907,   178,  1687,   783,  1658,  1667,   952,  2034,  1808,
    1644,  1750,  1840,  1965,   343,  2117,  1842,  1341,  1300,    50,
    1966,  1413,  1486,   803,   299,   805,  1739,   417,  1826,  1828,
    1840,  1915,  1842,   141,  1075,  1834,   128,  1305,   528,   613,
     669,  1757,  1758,   287,  1966,   749,  1773,   670,   821,   232,
     314,  1290,  1291,  1292,   670,   821,   281,  1709,  1636,  1636,
      23,    26,    27,    31,  1800,  1801,  1835,  2003,  2003,  2003,
     460,  2002,  2003,  2003,   784,   784,   790,  1840,  1075,  1075,
     145,  1075,  1075,   662,   847,   145,   145,   281,   658,   226,
     289,   436,   866,   867,  1979,   337,   864,   864,  1975,   111,
     135,   783,   788,  1384,  1387,  1491,  1494,  1506,  1509,  1510,
    1511,  1522,  1523,  1524,  1525,  1527,  1528,  1529,  1826,   211,
     423,  1614,  1615,  1620,   312,  1552,  1385,   123,   127,   168,
     173,   206,   577,  1397,  1577,  1582,  1583,  1592,  1593,  1597,
     226,  1596,  1609,  1619,    47,   106,  1973,  1973,  1973,  1592,
    1594,  1378,  1381,  1382,  1593,  1595,  1380,    47,  1840,  1730,
     127,  1729,   791,  1364,  1361,  2047,  1840,  1840,    42,   766,
    1661,  1662,  1235,   736,  1237,   791,   542,   711,   729,    85,
    1842,  1843,  1844,  1930,  1238,   120,  1243,  1242,   863,   281,
     143,   581,  1280,  1281,  1282,   657,   436,   746,  1979,  1842,
    1311,  1840,   783,   879,   952,   974,  1406,   114,   981,   979,
     287,  1325,  1630,  1631,  1826,  2044,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    87,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   128,   129,   130,   131,   132,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   149,   150,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   208,   209,   210,
     211,   213,   214,   215,   216,   217,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   328,   329,   330,   354,   356,   357,   373,
     409,   410,   431,   455,   496,   558,   559,   574,   575,   577,
     616,   649,   712,   715,   718,   742,   753,   762,   894,   934,
    1137,  1139,  1140,  1141,  1143,  1144,  1145,  1146,  1147,  1148,
    1149,  1150,  1151,  1152,  1831,  1850,  1851,  1852,  1853,  1854,
    1855,  1860,  1861,  2027,  2028,   790,   470,   786,    74,   321,
    2119,  2102,  2106,   901,   790,   128,  1693,   128,  1633,  1634,
    1693,  1694,  1695,  1827,  1840,  1704,  1840,   141,  1635,   869,
     869,   863,  1842,   863,  1628,  1840,  1636,  1636,  1000,   151,
     985,   606,  1935,   647,   647,   707,   710,   737,   746,   783,
    1412,   475,   584,   706,   580,   737,    80,    89,   746,   333,
     551,   633,   333,   333,   203,   333,   371,   528,   669,   551,
     287,   203,   786,   783,   283,   427,   178,   414,   474,  1646,
    1648,   393,   613,  1768,  1769,   360,   178,   392,  1782,  1826,
    1908,  1909,   144,   321,   391,   463,  1831,  1841,  1854,  1855,
    1856,  1860,  2029,   311,  1841,   128,   136,   561,  1840,  1841,
    1841,  1841,  1840,   311,  1841,  1840,   427,  2108,  2014,  2015,
    2045,   952,   966,  1840,   127,   177,   241,   313,    98,   352,
    2051,  2109,   790,  1333,  1471,    19,    20,    30,  1830,  1847,
      31,  1801,   153,   771,   772,  1438,   783,   783,   783,   311,
    1413,  1489,  1490,   783,   783,   783,   783,   783,  1412,  1412,
    1412,   783,  1411,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,   783,  1413,   783,   783,   783,
       8,   783,  1487,  1488,  1823,  1830,   783,   783,   783,   783,
    1413,  1411,   783,   783,   783,   783,   783,   783,   783,   783,
     783,   783,    15,   783,   783,   783,   783,  1412,  1411,  1411,
     783,   783,  1412,   783,   783,   783,   783,   783,   783,   783,
     783,   783,   783,   783,   783,    31,   783,   783,   783,   783,
     783,   783,   783,   783,   740,   783,   783,   783,   740,   783,
     783,   783,   783,    31,   783,   783,   783,    31,   783,   783,
     783,   783,   783,   783,   783,   783,   153,  1438,   153,  1438,
    1438,  1133,  1378,  1413,  1807,  1840,  1830,    33,    41,    50,
     208,   315,  1417,  1418,    35,    36,    37,    39,   156,   766,
     767,   768,  1421,    55,   151,   167,   238,   677,  1419,    14,
      43,    44,   107,   192,   769,   770,   771,   772,   773,   774,
     775,   776,  1438,    73,    38,   213,   213,   754,  1835,   791,
     783,    15,  1017,    54,   287,   786,   766,  1835,  1337,  1843,
    1845,  1336,   735,  1935,   584,   203,   128,   203,  1370,  1396,
       3,  1842,   258,   644,   791,    57,    99,  1176,  1177,  1661,
    1842,   127,  1661,  1661,  1931,    99,  1830,  1868,  1877,  1865,
      57,    99,  1179,  1180,  1842,   791,  1661,  1866,   786,   670,
    1735,   783,    88,   214,   226,   281,   289,   324,   436,   463,
     658,   737,   746,   167,   312,  1727,    63,   690,   376,   690,
     690,   318,   690,   435,   690,  1727,    47,  1090,  1842,  1581,
    1582,  1587,   128,   151,  1722,  1724,   376,   690,   127,   690,
     706,   676,    47,   355,   399,   401,   491,   541,   588,   678,
     702,  1710,  1711,  1712,   821,   477,   821,  1587,  1727,  1724,
     510,   429,   378,   608,   706,   722,  1735,  1402,   690,   743,
     143,  1277,  1668,   786,   177,  1810,  1811,  1818,  1840,  1647,
    1648,  1826,  2062,  2120,   786,  1342,  1343,  1344,  1345,  1826,
    1630,   363,   568,   239,   568,  1967,   786,  1413,   806,    57,
     270,   416,   430,   432,   464,   477,   510,   528,   606,   613,
     623,   637,   669,   672,   690,   721,  1740,  1745,  1746,  1831,
    1907,     3,    74,   925,   926,   927,   928,  1830,   582,   232,
     374,  1419,  1840,   801,   746,  1302,  1907,  1760,   360,  1759,
     786,   653,  1840,  1967,   127,  1293,  1294,  1293,   580,   758,
     394,   786,  1293,  1293,  1631,  1840,  1834,   786,   579,  2006,
     701,  2007,   766,   158,   639,  2005,     7,   795,  1840,   829,
    1075,   863,   863,  1075,   833,   835,  1075,  1075,  1075,   840,
     841,  1075,  1075,   746,   463,   463,  1979,   783,  1491,  1511,
    1523,  1524,  1525,  1526,  1527,  1840,    10,  1393,    81,   147,
     158,   166,   193,   249,   277,  1518,  1519,   786,   217,  1520,
    1521,    31,  1836,  1836,     3,  1616,  1617,  1618,  1840,  1842,
    1553,   136,  1556,  1552,   454,   561,  1584,   296,     8,    28,
      30,    32,   251,  1588,  1589,  1802,  1830,   151,    65,  1589,
    1581,  1397,  1840,  1397,  1398,  1398,  1381,  1731,   393,  1736,
    1800,  1840,  1840,  1593,  1596,  1405,  1902,    42,    42,  1834,
      99,   386,  1072,  1073,  1087,  1088,  1183,   408,   870,  1840,
    1412,     3,   870,  1826,   583,  1843,  1844,  1845,  1945,  1949,
    1636,  1282,   413,   489,   869,  1826,   746,  1312,  1313,  1631,
     791,   877,   880,   881,  1413,   980,   311,   975,   977,  1413,
    2020,  2041,  2042,   427,   811,  1630,   127,   364,   448,   450,
     540,   614,   786,  1328,  1329,  1330,  2107,   783,  1158,  1159,
    1161,  1161,   391,  1159,  1167,  1169,   783,  1154,  1155,  1159,
     224,  1154,  1167,    57,    71,    73,   306,   341,   359,   732,
    1142,  1147,  1149,  1169,  1175,  1184,  1186,  1142,  1167,  1142,
    1154,   783,  1167,  1142,  1161,  1161,  1142,  1161,   783,  1154,
    1167,    71,   307,   307,   310,  1154,  1161,   783,   897,  1161,
    1161,  1161,  1161,  1161,    15,   791,   900,  1154,   310,  1161,
    1161,  1161,  1161,  1161,   783,  1155,  1163,   127,  1840,   127,
     352,  2013,  2104,  2105,   790,   790,  1826,    54,  1690,  1633,
    1840,   786,  1697,   127,  1391,  1392,  1552,   791,  1703,   120,
    1840,  1929,  1932,  1845,  1944,  1630,   791,  1629,  1626,   177,
    2036,   643,   983,   706,   784,   333,   647,  1845,   333,   333,
    1945,   281,   865,  1933,   353,   393,   436,   441,   452,   453,
     607,   617,   628,   634,   665,   669,   700,  1937,  1939,  1816,
    1817,  1830,   968,   141,  1277,   479,   737,  1413,  1770,  1770,
    1348,   506,  1781,    53,   766,  1548,  1549,  1550,   572,   749,
     786,  1906,    44,   952,   311,  1840,   561,   128,   154,   952,
     311,   783,   960,   177,   790,   791,  2016,   942,   786,   992,
     990,   995,   991,  2113,  2112,  1630,     3,  1472,  1842,   791,
     783,    47,  1480,  1551,  1480,  1480,  1413,  1490,   114,   311,
     427,  1413,  1486,  1413,   106,  1480,  1551,   784,    24,    25,
      26,    28,    30,    32,   784,  1601,  1605,  1606,  1413,  1413,
    1823,   784,  1373,  1374,  1383,  1807,    92,    93,    94,    95,
     138,   139,   140,   189,   190,   253,   316,   411,   478,   544,
     546,   552,   612,   656,   751,   762,  1545,  1546,  1413,   106,
    1473,  1473,  1460,  1413,  1413,  1413,  1545,  1413,  1413,  1413,
    1830,  1488,   336,   786,   791,   106,  1480,  1413,   106,  1480,
    1413,  1413,  1413,  1413,  1413,   784,  1416,   784,  1413,  1413,
     784,   648,  1480,  1480,   106,  1480,   784,  1601,  1480,  1480,
    1413,  1413,  1442,  1443,  1444,    64,   163,   288,  1413,  1432,
    1433,  1434,  1413,  1413,   106,  1480,  1413,  1413,  1413,  1428,
    1429,  1413,  1413,  1485,  1486,  1413,  1413,   409,   410,   715,
     718,  1547,  1413,  1413,  1486,  1826,  1413,  1413,   127,  1826,
    1485,  1413,   127,  1413,  1413,  1826,  1413,  1413,  1546,  1546,
    1413,  1432,  1413,   784,     8,   791,  1824,  1840,  1413,  1485,
    1413,  1413,  1413,   784,   786,  1374,  1413,   791,  1413,  1413,
    1413,  1415,   122,   201,   290,   734,  1419,    47,   340,  1415,
    1422,  1415,   783,  1384,  1415,  1415,   167,    55,   151,   167,
     238,  1416,  1416,  1416,  1416,  1416,  1416,  1416,   153,  1416,
     153,  1416,  1416,  1416,  1416,  1416,  1181,  1842,  1438,   783,
    1469,  1562,  1840,   783,   136,   328,   329,   330,  1830,  1448,
     461,   493,   567,   648,  1430,   169,   229,   505,   705,  1018,
    1022,  1764,  1834,   921,   410,   715,   718,   920,  1470,  1804,
    1823,   786,   287,  1338,  1339,  1826,   952,   786,   127,  1845,
    1844,  1946,   865,  1933,   773,  1400,  1401,  1403,   468,   506,
     661,  1876,  1661,  1932,  1840,    73,  1413,  1895,  1894,  1893,
     791,   791,  1661,   786,  1867,   232,   492,  1896,  1897,  1898,
    1899,  1840,  1886,    99,   719,  1830,  1869,  1881,  1871,  1872,
    1874,  1885,   690,   127,   773,  1075,    63,   869,   869,  1826,
     869,   318,   869,   869,   869,  1826,  1845,  1826,  1402,  1402,
     376,   690,  1727,   869,  1727,  1722,   376,   690,  1727,   151,
    1725,   510,   553,   690,  1719,  1719,  1727,  1840,   869,  1727,
    1844,  1722,  1727,  1834,   490,   703,   451,   127,  1713,   786,
     435,   690,  1826,  1724,  1722,  1722,   127,  1727,  1727,  1727,
    1494,  1678,  1826,  1403,  1670,  1672,   783,  1665,  2035,   786,
     783,  1814,   154,  1649,   892,   427,     3,   151,   786,   217,
    1353,  1355,  1356,   448,   614,  1301,   363,   239,  1413,   804,
      99,   143,   807,  1413,  1673,  1674,   510,   510,   510,   510,
     360,   510,   821,   510,   786,  1402,  1741,  1842,   920,   930,
     786,   766,  1549,  1916,   120,   676,  1413,  1303,  1630,   287,
    1762,   821,  1758,  1840,    47,  1288,   627,   685,  1295,  1296,
     127,   823,   824,   673,  1292,   823,  1906,  1800,   596,  2008,
    1842,   837,  1840,   831,  1929,  1945,  1842,  1075,  1075,   826,
    1826,  2094,  1403,  1988,   851,  1403,   869,   869,  1075,  1075,
    1075,   746,  1507,   786,   784,   784,   784,   784,   784,   786,
     784,  1491,    47,    53,    55,   128,  1394,  1550,   158,   158,
     210,  1530,   166,   249,  1518,  1530,  1491,  1509,   783,  1393,
    1621,  1842,   786,   791,  1413,    65,   137,  1554,  1556,   251,
     649,  1585,  1589,   572,   668,   749,  1399,  1830,   439,   251,
     577,   786,   791,   664,  1578,   649,  1585,  1610,  1413,    47,
      57,    99,   203,  1413,  1903,  2048,  2049,  1236,  1662,  1073,
      73,  1175,   418,   191,   231,   268,   386,   398,   498,   568,
     872,   874,  1645,  1842,  1645,  1244,   783,   480,   242,   786,
    1953,  1826,  1241,  1240,  1826,   786,   595,  1314,  1840,   879,
     784,   786,   283,   952,   977,  1404,   893,    68,   108,   142,
     179,   481,   511,   512,   514,   515,   516,   517,   518,   520,
     521,   522,   523,   524,   525,   526,   527,   529,   530,   531,
     532,   625,   626,   812,   813,   820,   127,  1331,   736,  1631,
    1329,   783,   903,    24,    28,    30,    32,  1167,  1166,  1661,
    1167,    30,   295,   317,   666,  1156,  1157,  1157,  1184,    99,
    1181,  1167,  1142,  1185,  1186,  1176,    57,    73,   391,  1170,
    1157,  1231,  1800,  1167,  1231,  1157,   310,  1157,  1167,   895,
     896,  2033,  2044,    42,    99,  2013,  2039,  1142,  1142,  1157,
     252,   725,  1840,  2039,   237,  1153,  1185,    57,  1187,  1142,
    1167,  1157,    30,  1157,   902,    26,   772,   910,   911,  1598,
    1600,  2120,  1520,   705,  1692,  1699,   791,  1634,   128,   222,
    1576,  1577,   773,  1840,   203,   786,   786,    67,   244,  1283,
    1840,  1630,  1630,   893,   783,   954,   957,   287,   314,  1928,
     773,  1826,  1840,  1943,  1943,   784,   786,  2019,  2041,  1649,
    1413,  1845,  1349,  1350,  1351,  1352,  1826,   146,   144,   321,
     463,  1831,  1837,  1846,  1851,  1852,  1853,  1854,  1855,  1856,
    1857,  1860,  2028,   178,   232,   758,  1910,  1600,  1909,   947,
     952,   154,   649,  1840,   944,   952,   954,   955,   959,  1840,
     879,  1840,   984,   986,   987,  2034,  2100,  2120,  1906,  1876,
      42,  1830,  1413,   784,  1481,   784,   784,   283,   427,  1413,
    1413,    53,   299,   784,   299,   786,  1456,   784,   773,   784,
     786,   786,   784,   784,  1374,   128,   784,  1458,  1459,  1413,
     786,   786,   786,   772,   784,   786,   784,   786,   786,   784,
     783,  1823,  1830,  1480,   784,   784,  1480,   784,   786,   786,
     784,   784,   784,   151,   786,   786,   784,   784,  1480,   784,
     784,   784,   784,   786,   128,   786,   784,   128,  1413,   128,
    1413,   128,  1413,   128,   784,   786,   784,  1480,   784,   784,
     786,   786,   784,   786,   786,   786,   784,   784,   784,   786,
     784,   784,   786,   784,   784,   784,  1826,   784,   784,   784,
    1826,   786,   784,   786,   786,   784,   786,   786,   786,   784,
     784,   786,  1830,  1840,   784,   791,    53,   504,   786,  1198,
     784,   784,  1545,  1545,  1486,   784,   789,  1830,   122,   201,
     290,   734,   783,    50,  1413,   434,  1415,  1415,   783,  1384,
    1415,  1415,  1413,  1413,  1563,   217,  1565,   783,   783,   783,
     783,   783,   791,  1403,  1452,  1453,  1454,   378,   783,  1027,
    1028,  1020,  1027,  1021,   591,  1030,   160,   472,  1413,   766,
    1845,  1845,   786,  1906,   427,   131,  1932,   128,   786,  1943,
    1943,   786,  1413,  1821,  1830,   791,   791,   791,    99,   144,
     321,   463,   577,   753,  1831,  1834,  1839,  1848,  1851,  1852,
    1853,  1854,  1856,  1857,  1860,  2028,  1889,   127,  1661,    99,
    1181,  1182,  1845,    31,   578,   593,  1901,  1902,  1840,  1840,
    1878,  1877,   127,   580,   758,   504,   786,   786,  1661,  1902,
     791,  1870,   791,  1661,   786,   786,  1873,  1413,   784,  1840,
     869,   869,  1834,  1413,   869,  1727,  1727,   869,  1727,  1834,
     128,  1726,   863,  1727,   613,  1587,  1712,  1725,   823,  1722,
    1826,  1727,  1727,  1413,   258,  1520,  1674,   784,   786,  1666,
     893,  1811,  1815,  1817,    53,  1650,  1651,  2108,  2121,  1842,
      99,  1346,  1840,  1344,  1826,  1013,  1355,   145,   160,  1207,
    1357,   805,   786,   100,  1751,   821,  1746,  1630,  1747,   928,
     931,   932,   927,   573,   574,   650,   929,   454,   561,  1840,
    1917,  1918,  1834,  1630,   448,   614,   738,  1306,  1307,  1308,
    1600,    47,  1761,   670,   786,   365,  1287,  1708,   786,   127,
    2009,  1071,  1072,   299,   725,  1219,  1840,   314,  1927,  1953,
     848,  1840,  1840,  1826,   828,   869,  2090,  1075,  1075,  1999,
    2000,  1999,  1826,   869,  1840,   869,  1075,  1413,  1491,  1491,
     789,   576,   715,   719,  1389,  1390,  1440,  1390,   158,  1530,
    1530,  1522,   158,   203,   299,  1544,  1840,  1549,  1175,  1178,
    1617,  1840,  1413,  1557,  1822,  1555,   753,  1559,  1554,   314,
     580,  1586,  1585,   507,  1600,  1589,  1590,   439,  1589,  1589,
    1830,   549,  1579,  1822,   123,   783,  1404,  1404,  1404,  1902,
    1902,  1071,  1834,  1662,  1662,   557,   268,   268,   657,  1834,
     268,   268,   268,   182,   360,   406,   484,   547,   563,   564,
     568,   569,   570,   636,   688,   844,   845,    88,   476,   586,
     593,   599,   674,   737,   849,   850,    65,   314,   745,  1947,
     270,   369,   494,   566,   697,   759,  1941,  1942,  1949,   314,
    1956,  1906,   203,   859,  1249,   783,  1981,  1239,  1313,   127,
     878,  1413,  2020,   978,   766,   766,   766,   766,   766,   766,
     766,   766,   766,   766,   766,   766,   766,   766,   766,   766,
     766,   766,   766,   766,   766,   766,   766,   766,   766,   786,
     823,   736,   884,   885,  1840,  2085,  2086,  2087,   156,   784,
     784,   784,   784,  1840,   786,   317,   295,    99,  1181,  1166,
     784,   786,   784,   784,   786,   144,  1137,  1831,  1851,  1852,
    1853,  1854,  1855,  1860,  1405,  1405,  2039,  2039,   791,   766,
    1187,   209,   265,   269,   908,   909,   910,   913,  1419,  1840,
      24,    25,    28,    30,    32,   427,  1390,  1645,   299,  1840,
    1494,   576,   168,  1591,   791,  1703,  1826,  1932,  1845,  1906,
     427,   904,   905,   958,    34,  1945,   333,   791,   791,   287,
     287,  1816,   969,  1650,   786,  1353,  1355,  1836,   758,   506,
     392,   948,   154,   945,   956,   784,   786,   791,  2017,   993,
     982,   988,  1841,   988,   988,  2114,   427,  1839,  1413,   786,
    1413,  1413,   283,    57,    71,    96,   109,   125,   153,   155,
     295,   307,   409,   410,   559,   666,   718,   742,  1139,  1482,
    1483,  1484,  1176,  1176,  1482,  1486,   784,   153,   153,  1413,
    1486,  1486,   786,  1413,  1413,  1413,  1413,  1413,  1413,  1413,
    1416,   791,   784,   784,  1413,  1413,  1413,  1413,  1413,   784,
    1413,  1413,  1413,  1413,   128,  1413,   128,  1413,   128,  1413,
     153,  1413,   784,  1429,  1413,  1428,  1486,  1413,  1413,  1413,
    1486,    28,   771,  1598,  1602,   153,  1413,  1413,  1413,  1413,
    1413,   791,   791,  1840,    57,    71,  1193,  1194,  1195,  1196,
    1197,  1601,  1600,   784,   772,   772,  1383,  1415,   784,   786,
    1415,    50,  1413,   434,  1545,  1545,  1564,  1840,    65,   784,
    1466,  1485,  1413,  1444,  1485,  1413,  1434,  1485,  1485,  1830,
    1413,   784,   786,   783,  1036,  1416,  1028,   168,  1066,  1067,
    1601,   699,  1031,   338,  1023,  1019,   920,   287,  1339,   287,
     241,   584,  1944,  1844,   128,   128,  1401,  1404,  1404,   791,
     791,   791,  1661,  1405,  1845,  1888,  1661,   783,   783,  1661,
    1661,  1902,   796,   232,   632,   659,  1900,  1898,  1897,  1887,
    1840,  1896,  1840,  1882,  1871,  1872,  1881,   433,   750,  1598,
    1603,  1717,    30,  1726,  1552,  1722,  1683,  1684,  1824,  1391,
    1404,  1403,  1669,  1671,  1674,   427,   784,   783,  1643,  1632,
    1826,   790,   321,  2013,  2052,  1354,   783,  1674,   766,   823,
     127,   314,  1742,  1743,   766,   786,    36,    37,   454,   499,
     561,   604,   766,   767,   768,  1919,  1921,  1552,   127,   128,
    1309,  1307,   823,  1296,  1834,   735,  1297,   110,   642,  2013,
    2031,  1600,   545,   358,   472,   652,  1225,  1225,   203,  1219,
     333,  1956,   126,   203,   203,   827,   843,   844,  2091,  1989,
     869,  2097,   386,   874,  1996,  1997,  1998,  2098,   838,  2096,
     641,  2095,  1826,   786,  1390,    31,  1416,    50,   287,  1491,
    1522,   158,   158,  1491,  1522,  1512,  1513,   784,   786,  1539,
    1540,  1177,  1622,    16,    17,   786,  1558,    51,   104,  1580,
    1413,  1469,  1560,  1561,  1559,   714,  1586,  1590,  1399,   786,
    1580,  1584,  1403,  1611,  1612,  1613,  1182,  1177,   408,   408,
     413,   489,  1662,  1662,    65,  1662,  1664,  1662,   182,   547,
     314,  1662,  1663,  1663,   845,  1245,  1834,  1834,  1834,  1834,
    1600,  1834,  1834,   784,   786,    31,   593,  1842,  1950,  1951,
      31,    31,    31,    50,  1940,   533,   534,   537,   538,   539,
    1954,  1955,   331,   593,  1248,  1234,   390,   654,   240,  1250,
    1840,  1982,    53,  1981,    47,   378,  1315,   879,   283,   783,
     783,  1600,   783,  1600,  1600,  1834,  1834,  1603,  1834,  1600,
    1834,  1834,  1834,  1834,  1834,  1834,  1834,  1600,  1834,   404,
     568,   671,  1805,   122,   290,  1600,  1608,  1834,  1600,   813,
     784,   786,   148,   151,   212,   888,  2013,  2040,   649,   934,
    1137,   905,    30,  1185,  1800,  1185,   895,  1413,  1413,  1840,
      30,   786,  2108,   461,  1494,  1552,  1402,   251,  1589,   245,
    1701,  1906,  1283,   177,   906,   784,  1405,   957,   314,  1958,
     584,   773,   773,  1945,  1945,   113,   114,   115,   970,  1640,
    1351,  1826,  1355,   143,  1358,  1777,  1405,   955,  1840,   879,
    2036,   352,   982,   791,  1413,  1413,  1161,  1161,  1154,  1163,
      95,   155,  1159,  1158,  1160,  1162,  1161,   155,  1162,  1159,
     784,   784,   784,   784,  1457,  1413,  1413,   784,   206,  1475,
    1475,  1413,   786,   786,   784,   786,   784,   784,   784,   151,
    1449,  1450,  1830,   784,   784,   784,   784,   784,   786,   127,
     786,  1413,  1413,  1413,  1413,   784,   784,    53,  1423,   784,
      53,   784,   784,   784,    28,    30,    30,   784,   786,  1413,
     784,   784,   786,   786,   784,  1830,  1840,   791,   783,  1188,
    1188,    51,   104,   643,   771,  1190,  1191,  1192,   786,   786,
    1413,  1413,   784,  1486,  1415,   784,   786,  1415,  1565,  1557,
     206,  1468,   784,   784,   784,   784,   784,   784,   783,  1404,
    1454,  1024,  1025,  1026,  1840,   784,  1603,   153,    65,   783,
    1038,   766,   783,  1028,  1845,  1826,   128,  1946,  1946,    53,
    1409,  1834,  1840,   773,  1830,  1840,  1840,  1890,  1413,  1902,
    1901,    31,    31,  1880,  1879,   387,   728,   232,  1902,  1661,
    1661,  1902,    24,    25,    28,    30,    32,  1587,  1718,  1727,
     786,  1681,  1661,  1549,  1674,   784,   786,   177,  1373,    11,
      12,   258,  1008,  1373,  1652,  1654,  1657,  1520,   311,  2053,
    2054,   783,   225,  1541,  1542,  1543,  1840,   783,  1744,   232,
     250,   362,   370,   385,   395,   396,   397,   405,   543,   555,
     640,   655,   695,   709,   933,   932,  1920,  1587,   736,   554,
     513,   679,   680,   820,  1298,   692,   692,  1826,   203,  1844,
    1248,   408,  1826,  1826,    11,    13,    18,   145,   167,   215,
     272,   273,   274,   292,   346,   348,   368,   386,   393,   408,
     415,   430,   487,   497,   535,   548,   587,   593,   617,   651,
     658,   692,   707,   708,   720,   757,  1004,  1006,  1077,  1079,
    1080,  1082,  1083,  1084,  1086,  1087,  1088,  1095,  1831,  1077,
     783,   889,  2013,  2056,  2058,   869,   852,    53,   156,  2061,
    1834,  1996,  2061,  1981,   783,   891,  2022,  2056,  2057,    96,
     155,   234,   694,  1093,  2022,   839,  1508,  1390,  1390,   203,
    1515,  1522,  1522,   203,  1517,  1413,   783,  1013,  1840,  1537,
    1538,   378,  1784,  1822,    53,   786,  1822,  1585,  1589,  1413,
     784,   786,  1602,  1602,  1602,  1602,  1602,  1602,  1645,   850,
      31,    53,   299,  1948,  1952,   208,  1941,  1600,  1600,  1600,
    1805,   771,  1598,  1599,  1954,   173,   294,  1246,   446,    46,
      48,    49,    70,    72,    78,   110,   173,   204,   206,   217,
     240,   338,   375,   419,   420,   426,   438,   459,   483,   550,
     618,   629,   630,   631,   724,  1011,  1078,  1080,  1253,  1258,
    1260,  1263,  1269,  1270,  1271,  1274,  1275,  1573,  1419,  1964,
     342,   437,   853,   287,   419,   426,   855,   784,   786,  1983,
    1984,    53,    47,   783,  1316,  2020,   816,   817,  1600,   818,
     819,  1600,   814,   815,  1600,  2086,   212,   897,    15,   791,
     784,  1404,  1404,   909,  1552,  1698,  1840,   439,   251,  1702,
    1696,  1403,  1413,   131,  1953,  1953,   967,  2019,   967,  1652,
    1358,   502,   143,   328,  1783,  1413,  2018,   994,  2120,  1840,
    1185,  1160,  1185,  1185,   784,  1545,  1545,    65,   256,  1474,
     168,  1477,  1478,   784,  1413,  1413,  1486,   193,   357,   784,
     314,  1451,  1413,  1413,  1413,  1545,    96,   109,   125,   155,
     234,   295,   409,   410,   558,   559,   718,  1147,  1148,  1424,
    1425,  1426,  1427,  1482,  1608,  1545,  1413,  1413,  1840,  1601,
     784,  1198,  1193,  1191,  1193,  1194,  1600,   784,  1486,   206,
    1566,    65,   784,  1485,  1409,   784,   786,   347,  1069,  1413,
    1022,   217,  1039,  1040,  1041,  1601,  1024,  1946,  1834,  1840,
     791,  1661,  1661,  1902,  1404,   784,   784,  1902,  1902,  1884,
    1883,  1587,  1684,  1552,    99,  1673,  1539,  1404,  1674,   784,
    1655,  1656,  1819,  1820,  1824,  1840,  1807,  1653,  1701,  1657,
    2055,  2054,    47,  1259,  1267,  1268,  1840,   784,   786,  1603,
    1752,  1753,   447,   173,   783,   766,   766,   766,   786,   830,
    1826,   757,   834,   836,    75,   594,   791,  1096,  1097,  1098,
    1099,  1107,  1108,  1113,  1114,  1115,  1207,  1210,  1211,  1825,
    1840,   167,   744,   418,  1826,  1662,  1662,  1662,  1662,  1662,
    1662,  1662,  1662,  1662,  1662,   418,  1662,  1662,  1662,  1662,
    1662,  1662,  1662,  1662,  1662,  1662,   421,   541,  1840,  1662,
    1662,  1009,  1010,  1011,   786,  1079,  1661,  1005,   890,   871,
      54,   335,  1002,   203,   226,   463,  2013,  2081,  2082,  2083,
     226,   463,   899,  1831,  1851,  1854,  1855,  1860,  2024,  2067,
    2068,  2070,  2071,  2076,  2083,    53,   882,   883,   247,  2023,
     676,  2023,  1981,    22,    29,    31,  1492,  1514,   299,  1516,
     299,  1544,   143,   298,   459,  1532,  1533,  1536,   117,   118,
     205,   282,  1785,  1786,   170,  1787,  1580,  1562,  1561,  1580,
    1586,  1585,  1404,  1613,   593,  1834,  1950,    30,    30,   593,
      99,   153,   560,  1247,    75,   217,   384,   594,   704,  1099,
    1107,  1108,  1276,  1207,  1276,   217,  1276,   217,   217,   281,
     287,    75,   126,   217,   594,   704,  1112,  1207,  1276,  1662,
     217,    65,  1013,    53,   287,   384,   766,  1207,  1285,  1662,
     217,   159,   707,   159,   217,   707,  1276,   217,   592,   217,
     217,   217,  1078,   786,  1010,  1258,   783,  1098,   603,  1413,
    1413,   203,   859,   869,   203,   386,   860,  1840,  1645,  1373,
    1983,  1317,   485,   784,   786,   784,   786,   784,   786,   252,
    1840,  1700,  1645,   128,   439,  1400,  1645,  1359,  1807,  1404,
     584,   314,  1957,  1957,   203,  1675,   154,  1404,   879,   988,
     427,   784,   784,  1476,  1822,  1800,  1477,  1479,  1588,   784,
     784,   786,   784,   498,   549,   613,   784,   784,  1154,   155,
    1162,    71,  1162,  1185,   784,   784,   786,   784,   784,   784,
    1189,   784,   786,   784,    65,   229,   251,  1567,  1568,  1822,
     784,  1026,  1545,   160,   472,   784,   786,  1042,   784,   773,
    1892,  1891,  1902,  1902,   823,  1576,   406,  1812,   784,   786,
     791,  1374,  1659,  1660,  1824,  1645,   908,   784,   786,  1542,
     784,   786,    50,  1754,  1671,  1834,  1834,  1834,   820,   783,
     832,  1842,   783,   783,  1230,  1825,    10,   127,  1109,  1840,
     784,   786,    72,   126,   225,   293,  1111,  1206,  1113,  1075,
    1207,  1208,  1208,  1116,   791,  1826,  1662,    99,  1600,  1607,
      99,  1600,    99,  1600,    99,  1600,  1081,  1603,  1600,  1600,
    1834,  1834,  1662,  1600,  1842,   454,   499,   568,  1092,  1600,
    1603,  1603,    99,  1600,  1834,    99,   389,   391,   425,   455,
     588,   622,  1091,  1607,  1600,  1607,  1007,  1783,  1079,    26,
      28,    30,    32,    99,  1604,  1605,  1834,  1840,  1077,   886,
     887,  2086,   872,   873,  1964,  2092,   101,   150,   296,  1003,
     654,  1408,  2074,  1408,  2072,   427,  2083,  2074,  2072,   790,
     352,   427,  2069,  2024,  2071,  2076,  1983,   784,   884,  1994,
    1995,   871,  2088,  1834,  2088,    53,    31,   378,  1495,  1413,
     783,  1413,   783,   784,  1207,  1207,  1533,    65,    65,   117,
      65,  1786,   271,   282,  1788,  1789,  1586,   783,   446,    30,
     331,   141,  1075,   141,  1074,   744,  1074,  1635,  1635,  1334,
    1635,  1259,  1268,  1826,  1175,  1635,   160,  1636,    10,  1635,
     744,   225,  1635,  1635,    99,  1840,  1334,  1574,  1575,  1824,
    1012,  1635,  1635,  1826,    99,  1840,  1334,  1268,  1635,  1334,
    1334,  1334,  1259,    46,    78,   110,  1271,  1094,  1096,   335,
     454,  1284,  1545,   669,  1834,   422,  1251,   314,  1985,  1645,
    1320,  1840,    47,   783,  1318,   817,   819,   815,    15,   791,
    1645,  1416,  1404,   131,  1954,  1959,  1960,   424,  1701,   281,
     982,   786,  1580,   784,  1413,   549,   445,  1603,   784,  1600,
    1579,   784,    55,   403,   410,   715,   718,   727,  1569,  1570,
    1804,  1580,   687,  1068,  1023,   783,  1029,  1041,  1043,  1840,
    1902,  1902,  1591,  1813,  1819,   773,  1840,   784,   786,  1661,
     283,  1268,  1753,   419,   784,  1227,  1229,  1840,   783,   583,
    1227,  1227,   783,  1840,  1097,   783,   160,   160,  1208,  1075,
     236,  1200,  1230,  1840,  1075,  1075,   660,   934,  1117,  1138,
    1140,  1840,   784,  1834,   783,  1834,    53,  1070,  1009,   784,
     786,   105,  2061,   203,   853,  1840,   790,  1840,   790,  1407,
    2061,  2079,  2061,  2077,  2120,  2099,  1137,  2089,   869,  2013,
    2059,  2059,  1983,   783,   784,  1544,  1544,   127,  1531,  1531,
    1800,  1800,    65,  1800,    65,    65,  1789,    31,  1247,   411,
    1246,  1419,  1334,  1419,  1109,  1840,  1825,  1259,  1825,  1255,
     287,  1257,  1177,  1825,  1635,  1267,   127,   160,  1825,  1825,
    1259,   786,  1580,  1016,  1840,  1825,  1601,   314,  1115,  1259,
    1264,  1259,   784,  1840,   854,   861,   862,    72,   361,   506,
     784,   786,  1319,   252,   725,  1840,   287,   584,  1960,  1676,
    1645,  1826,  1822,   784,   784,   784,   727,  1570,  1571,  1804,
     649,   601,   440,  1572,   601,  1804,  1069,   783,  1036,  1032,
      99,   303,   304,   403,   475,  1044,  1682,  1817,   791,  1660,
    1674,  2041,   367,   784,   786,  1580,   783,  1227,   783,   784,
     784,  1840,   783,  1413,  1075,  1230,  1840,  1826,   299,  1218,
     725,  1230,  1230,  1119,   791,  1110,  1111,  1118,   791,  1747,
    1008,  1007,  2086,  2063,  2064,  1403,   858,   859,  2075,  2073,
    2059,  1408,   790,  1408,   790,   427,  1407,  2061,   195,  1496,
    1497,  1840,  1549,   784,   784,   136,   158,   206,  1535,  1534,
    1800,  1800,  1800,   784,   120,  1261,   120,   144,   196,  1226,
     110,   258,  1115,  1328,   281,   287,    73,  1825,  1840,  1283,
    1254,  1575,   287,   287,   281,  1284,  1265,  1267,  1256,   687,
     856,  2108,   584,    72,    72,  1840,   225,  1321,  1322,  1840,
      15,  1416,   160,  1520,  1580,   458,    50,   458,   136,   403,
     568,   714,  1034,  1035,  1840,   784,   698,  1037,  1046,   713,
     145,   386,   393,   408,   535,   548,   565,   707,  1060,  1061,
    1062,  1065,  1082,  1721,  1645,   244,   773,  1906,  1229,    30,
     786,  1228,   849,  1906,  1906,   786,  1840,   784,  1230,  1218,
     725,   783,  1201,  1225,  1100,  1225,  1102,  1103,    18,   225,
     293,   386,   495,   755,  1082,  1120,  1121,  1130,  1172,  1173,
    1174,  1199,  1419,  1140,    73,    99,   201,   203,   346,   465,
     660,  1124,  1126,  1164,  1165,  1173,  1840,   784,  1085,  1086,
    2059,  2100,  1990,   855,  2021,  2058,  2022,  2080,  2078,  2059,
    2063,   218,   784,   786,  1498,    65,    65,   783,   783,  1825,
     591,   783,  1262,   144,    99,    99,  1284,  1826,   217,  1182,
    1334,  1840,  1825,  1826,  1266,  1306,  1413,   428,   857,     6,
     846,   584,   584,   784,   786,   725,   296,  1778,  1571,   649,
     209,   323,   784,   786,  1601,   783,  1048,  1050,  1045,   418,
    1662,  1662,   418,  1662,  1662,  1662,  1662,   783,  1055,  1062,
     430,   299,   386,   497,   725,   747,  1082,  1212,  1215,  1220,
    1221,  1222,  1226,  1580,   784,  1840,   784,   784,   314,  1213,
    1217,  1221,  1224,  1214,  1216,  1221,  1223,  1840,   786,  1106,
    1104,  1225,  1202,  1840,   180,  1203,   783,  1101,   783,   783,
     160,  1834,   704,  1173,   744,   160,   201,  1181,    19,    20,
     771,   772,   783,  1134,  1135,  1136,  1384,  1435,  1803,   296,
     339,    99,    53,   391,  1165,  1171,  2065,  1826,   860,   871,
    2023,  2026,  2063,  2025,  2063,   846,  1492,  1497,   127,  1141,
    1143,  1144,  1145,  1500,  1501,  1541,  1543,  1111,  1601,  1039,
    1136,   314,   755,  1272,  1041,  1272,   154,  1413,  1322,  1677,
    1178,  1033,  1035,   783,  1049,  1050,  1051,   182,  1047,  1050,
    1662,  1834,  1834,  1662,  1604,  1604,  1601,  1842,   699,  1056,
    1057,  1662,  1225,  1834,  1662,  1225,  1273,  1274,  1275,  1222,
     755,  1906,   589,  1273,  1224,  1273,  1223,   784,  1840,   783,
     783,  1105,   784,   786,   462,   590,   667,   203,  1204,  1227,
     783,  1227,  1227,   426,  1168,  1805,  1805,  1133,   198,   740,
     649,  1134,  1166,  1164,   352,   127,   422,   871,  1840,  2013,
    2060,  2060,  1499,   207,   120,   218,   784,   784,   784,   739,
     739,  1013,  1272,  1013,   783,  1685,  1686,  1824,  1779,  1037,
     784,   786,   182,  1053,  1054,  1416,  1834,  1834,  1058,   784,
     786,  1089,  1842,  1600,  1275,  1274,   585,  1212,  1831,   784,
    1227,  1227,   783,  1840,   101,   296,   784,  1227,   784,   784,
     784,   783,  1410,   427,   688,  1125,  2120,  1403,   861,  1495,
     218,  1492,  1013,  1039,   786,  1661,   251,  1790,  1050,   786,
    1052,  1059,  1842,  1057,  1273,   784,  1228,  1227,    67,   244,
     258,   568,  1205,  1205,  1212,   784,  1213,  1214,   784,  1601,
    1122,  1123,  1172,  1122,   595,   693,   748,  1127,  2066,  1991,
    1492,    99,   201,   432,  1502,  1503,  1504,  1505,   784,  1686,
    1674,   480,  1784,  1054,   784,  1063,  1064,  1065,  1200,   784,
    1228,    99,   201,   332,   203,   203,  1212,   784,  1172,  1128,
    1129,  1130,   427,   112,    24,    25,    28,    30,  1492,  1493,
     203,  1503,  1505,  1503,  1504,    65,  1787,  1065,  1212,   784,
     296,   101,  1130,   649,   116,   432,   203,   203,  1800,   143,
    1791,  1212,  1205,  1205,  1992,    30,   783,  1793,   457,   600,
    1986,  1987,   170,   251,  1792,     3,   784,  1794,  1795,  1824,
     258,  1796,  1842,  1993,  1842,   784,   786,  1797,  1798,  1824,
    1645,  2108,  1795,   786,  1661,   846,  1798,  1403,  1674,  1404
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   792,   793,   794,   793,   793,   795,   795,   796,   796,
     796,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   797,   797,   797,   797,   797,   797,   797,   797,   797,
     797,   798,   799,   799,   801,   800,   802,   803,   804,   802,
     805,   806,   805,   807,   807,   809,   808,   811,   810,   812,
     812,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   813,   813,   813,   813,   813,   813,   813,   813,   813,
     813,   814,   814,   814,   815,   816,   816,   816,   817,   818,
     818,   818,   819,   820,   820,   820,   820,   820,   820,   820,
     820,   821,   821,   822,   823,   823,   824,   826,   827,   825,
     828,   825,   829,   830,   825,   831,   832,   825,   833,   834,
     825,   835,   836,   825,   837,   825,   838,   825,   839,   825,
     840,   825,   841,   825,   825,   825,   842,   825,   825,   843,
     843,   844,   844,   845,   845,   845,   845,   845,   845,   845,
     845,   845,   845,   845,   845,   845,   845,   846,   846,   848,
     847,   849,   849,   850,   850,   850,   850,   850,   850,   850,
     852,   851,   854,   853,   853,   855,   855,   855,   855,   856,
     856,   857,   857,   858,   858,   859,   860,   860,   862,   861,
     863,   864,   864,   865,   865,   865,   865,   866,   866,   867,
     867,   868,   868,   869,   869,   870,   870,   871,   871,   872,
     872,   872,   872,   872,   872,   872,   873,   873,   874,   874,
     876,   875,   877,   875,   878,   875,   879,   879,   880,   880,
     881,   881,   882,   883,   882,   884,   884,   885,   886,   886,
     887,   887,   888,   888,   888,   890,   889,   891,   892,   892,
     893,   893,   894,   894,   894,   895,   896,   896,   897,   898,
     900,   899,   899,   899,   902,   901,   903,   903,   904,   906,
     905,   907,   907,   907,   907,   908,   908,   909,   910,   910,
     911,   912,   912,   913,   913,   913,   913,   913,   913,   914,
     914,   915,   916,   916,   917,   917,   918,   918,   919,   919,
     920,   920,   920,   921,   921,   921,   921,   921,   921,   921,
     921,   921,   921,   921,   921,   921,   922,   923,   924,   924,
     925,   925,   926,   926,   927,   928,   928,   929,   929,   929,
     930,   931,   931,   932,   933,   933,   933,   933,   933,   933,
     933,   933,   933,   933,   933,   933,   933,   933,   934,   934,
     935,   935,   937,   936,   939,   938,   940,   940,   942,   941,
     941,   943,   943,   944,   943,   945,   943,   946,   946,   947,
     946,   948,   946,   949,   950,   951,   953,   952,   954,   956,
     955,   958,   957,   959,   959,   960,   960,   961,   961,   961,
     962,   963,   963,   963,   964,   964,   965,   966,   966,   968,
     969,   967,   970,   970,   970,   970,   972,   971,   974,   973,
     973,   975,   975,   976,   976,   978,   977,   980,   979,   981,
     981,   982,   982,   983,   983,   984,   985,   985,   985,   986,
     987,   988,   990,   989,   991,   989,   992,   993,   994,   989,
     995,   989,   997,   996,   998,   996,   999,  1000,   996,  1001,
     996,  1002,  1002,  1003,  1003,  1003,  1005,  1004,  1004,  1004,
    1006,  1006,  1007,  1007,  1008,  1008,  1009,  1010,  1010,  1012,
    1011,  1013,  1015,  1014,  1017,  1016,  1018,  1019,  1018,  1018,
    1018,  1020,  1018,  1018,  1021,  1018,  1022,  1022,  1023,  1023,
    1024,  1024,  1025,  1025,  1026,  1027,  1028,  1029,  1030,  1030,
    1031,  1032,  1031,  1033,  1031,  1034,  1034,  1035,  1036,  1037,
    1037,  1038,  1038,  1039,  1039,  1040,  1040,  1042,  1041,  1043,
    1044,  1045,  1044,  1046,  1044,  1044,  1044,  1044,  1047,  1047,
    1048,  1048,  1049,  1049,  1051,  1052,  1050,  1053,  1053,  1054,
    1054,  1055,  1055,  1056,  1056,  1058,  1057,  1059,  1060,  1060,
    1061,  1061,  1062,  1062,  1063,  1063,  1064,  1064,  1065,  1065,
    1065,  1065,  1065,  1065,  1065,  1065,  1065,  1066,  1067,  1066,
    1066,  1068,  1068,  1069,  1069,  1070,  1070,  1071,  1071,  1072,
    1072,  1073,  1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,
    1077,  1077,  1078,  1078,  1079,  1079,  1079,  1080,  1080,  1080,
    1080,  1080,  1080,  1080,  1080,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1080,  1080,  1080,  1080,  1080,  1081,  1080,  1080,
    1080,  1080,  1080,  1080,  1080,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1080,  1082,  1082,  1082,  1082,  1083,  1083,  1084,
    1084,  1085,  1085,  1086,  1087,  1088,  1089,  1090,  1091,  1091,
    1091,  1091,  1091,  1091,  1091,  1092,  1092,  1092,  1093,  1093,
    1093,  1093,  1094,  1095,  1096,  1096,  1097,  1097,  1097,  1097,
    1097,  1098,  1098,  1100,  1099,  1101,  1099,  1102,  1099,  1103,
    1099,  1104,  1099,  1105,  1099,  1106,  1099,  1107,  1108,  1109,
    1110,  1110,  1111,  1112,  1112,  1113,  1113,  1114,  1116,  1115,
    1118,  1117,  1119,  1117,  1120,  1120,  1121,  1121,  1122,  1122,
    1123,  1123,  1124,  1124,  1124,  1124,  1125,  1124,  1124,  1124,
    1126,  1126,  1127,  1127,  1127,  1127,  1128,  1128,  1129,  1129,
    1130,  1130,  1130,  1130,  1132,  1131,  1133,  1133,  1134,  1134,
    1135,  1135,  1136,  1136,  1137,  1138,  1138,  1139,  1139,  1139,
    1140,  1140,  1140,  1140,  1140,  1140,  1141,  1141,  1141,  1141,
    1141,  1141,  1141,  1141,  1141,  1141,  1142,  1142,  1142,  1142,
    1143,  1143,  1143,  1143,  1143,  1143,  1143,  1143,  1144,  1144,
    1144,  1144,  1144,  1145,  1145,  1145,  1145,  1145,  1145,  1145,
    1145,  1145,  1145,  1145,  1145,  1145,  1145,  1145,  1146,  1146,
    1147,  1148,  1148,  1149,  1149,  1150,  1150,  1150,  1150,  1150,
    1151,  1151,  1151,  1151,  1151,  1152,  1152,  1152,  1153,  1153,
    1154,  1154,  1154,  1155,  1156,  1156,  1156,  1156,  1156,  1156,
    1157,  1158,  1158,  1158,  1158,  1159,  1160,  1161,  1161,  1162,
    1162,  1163,  1163,  1164,  1164,  1165,  1165,  1165,  1165,  1165,
    1165,  1165,  1166,  1166,  1167,  1167,  1168,  1168,  1169,  1170,
    1171,  1172,  1172,  1172,  1173,  1173,  1173,  1174,  1174,  1175,
    1175,  1176,  1176,  1177,  1177,  1178,  1178,  1179,  1179,  1180,
    1180,  1181,  1182,  1182,  1183,  1183,  1184,  1184,  1184,  1185,
    1185,  1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,  1186,
    1187,  1187,  1189,  1188,  1190,  1190,  1191,  1192,  1192,  1192,
    1192,  1193,  1194,  1195,  1195,  1196,  1197,  1197,  1198,  1198,
    1199,  1199,  1200,  1201,  1201,  1202,  1202,  1203,  1203,  1203,
    1203,  1204,  1204,  1204,  1204,  1204,  1205,  1205,  1205,  1205,
    1205,  1206,  1206,  1207,  1207,  1208,  1208,  1209,  1209,  1209,
    1210,  1211,  1212,  1212,  1213,  1213,  1214,  1214,  1215,  1215,
    1216,  1216,  1217,  1217,  1218,  1218,  1219,  1219,  1219,  1220,
    1220,  1221,  1221,  1221,  1221,  1221,  1222,  1222,  1223,  1224,
    1224,  1225,  1225,  1225,  1226,  1226,  1227,  1227,  1228,  1228,
    1229,  1229,  1230,  1230,  1231,  1231,  1233,  1234,  1232,  1235,
    1232,  1236,  1232,  1232,  1237,  1232,  1238,  1232,  1239,  1232,
    1240,  1232,  1241,  1232,  1242,  1232,  1232,  1243,  1244,  1245,
    1232,  1246,  1246,  1247,  1247,  1247,  1247,  1248,  1248,  1248,
    1248,  1248,  1249,  1249,  1249,  1249,  1250,  1250,  1251,  1251,
    1252,  1252,  1253,  1253,  1253,  1253,  1253,  1253,  1253,  1253,
    1253,  1253,  1254,  1253,  1253,  1255,  1253,  1256,  1253,  1253,
    1253,  1253,  1253,  1253,  1257,  1253,  1258,  1259,  1259,  1261,
    1260,  1262,  1262,  1262,  1264,  1263,  1265,  1266,  1265,  1267,
    1267,  1268,  1269,  1269,  1270,  1271,  1271,  1271,  1271,  1271,
    1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,
    1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,
    1271,  1271,  1271,  1271,  1271,  1271,  1271,  1271,  1272,  1272,
    1272,  1273,  1273,  1273,  1273,  1273,  1274,  1274,  1275,  1275,
    1276,  1276,  1277,  1277,  1279,  1278,  1280,  1280,  1281,  1281,
    1282,  1282,  1283,  1283,  1283,  1284,  1284,  1284,  1285,  1285,
    1285,  1285,  1287,  1286,  1288,  1286,  1286,  1286,  1289,  1290,
    1290,  1291,  1291,  1292,  1292,  1292,  1294,  1293,  1295,  1295,
    1296,  1296,  1296,  1297,  1297,  1297,  1297,  1297,  1298,  1298,
    1300,  1299,  1301,  1301,  1301,  1302,  1303,  1302,  1305,  1304,
    1306,  1306,  1307,  1307,  1308,  1308,  1308,  1309,  1309,  1309,
    1311,  1310,  1312,  1312,  1313,  1314,  1314,  1315,  1315,  1316,
    1317,  1316,  1318,  1319,  1318,  1320,  1320,  1320,  1321,  1321,
    1321,  1322,  1322,  1323,  1323,  1324,  1325,  1324,  1327,  1326,
    1328,  1328,  1329,  1329,  1330,  1330,  1330,  1330,  1330,  1330,
    1331,  1331,  1333,  1332,  1334,  1334,  1334,  1336,  1335,  1335,
    1337,  1337,  1338,  1338,  1339,  1341,  1340,  1342,  1342,  1343,
    1343,  1344,  1345,  1346,  1346,  1348,  1347,  1349,  1349,  1350,
    1350,  1351,  1352,  1354,  1353,  1356,  1355,  1357,  1357,  1358,
    1358,  1360,  1359,  1361,  1359,  1363,  1362,  1364,  1362,  1365,
    1365,  1367,  1366,  1369,  1370,  1368,  1371,  1372,  1373,  1373,
    1374,  1374,  1376,  1375,  1377,  1375,  1378,  1378,  1379,  1380,
    1379,  1379,  1381,  1381,  1382,  1383,  1384,  1384,  1385,  1385,
    1386,  1387,  1387,  1388,  1388,  1389,  1389,  1389,  1390,  1390,
    1390,  1391,  1392,  1392,  1393,  1393,  1394,  1394,  1394,  1394,
    1395,  1395,  1396,  1396,  1396,  1397,  1397,  1398,  1398,  1399,
    1399,  1399,  1399,  1400,  1400,  1400,  1401,  1401,  1402,  1403,
    1404,  1405,  1406,  1407,  1408,  1409,  1409,  1409,  1409,  1409,
    1410,  1410,  1410,  1411,  1411,  1411,  1412,  1412,  1413,  1413,
    1413,  1413,  1413,  1414,  1414,  1414,  1414,  1414,  1414,  1414,
    1414,  1414,  1414,  1414,  1414,  1415,  1415,  1415,  1415,  1415,
    1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,  1415,
    1415,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,  1416,
    1417,  1417,  1418,  1418,  1419,  1419,  1420,  1420,  1421,  1421,
    1421,  1421,  1421,  1421,  1422,  1422,  1423,  1423,  1424,  1424,
    1424,  1425,  1425,  1425,  1425,  1425,  1425,  1426,  1426,  1426,
    1427,  1427,  1428,  1429,  1429,  1430,  1430,  1430,  1430,  1431,
    1432,  1432,  1433,  1434,  1434,  1434,  1434,  1434,  1434,  1434,
    1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,
    1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,
    1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1435,  1436,
    1436,  1436,  1436,  1437,  1437,  1438,  1438,  1438,  1438,  1438,
    1438,  1439,  1439,  1440,  1440,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,  1441,
    1441,  1441,  1441,  1441,  1441,  1441,  1442,  1442,  1443,  1443,
    1444,  1444,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,
    1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,
    1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1445,  1446,
    1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,  1446,
    1446,  1446,  1446,  1448,  1447,  1447,  1447,  1447,  1447,  1447,
    1447,  1447,  1447,  1447,  1447,  1449,  1449,  1450,  1450,  1451,
    1451,  1452,  1452,  1453,  1453,  1454,  1455,  1455,  1455,  1455,
    1455,  1455,  1455,  1456,  1457,  1455,  1455,  1455,  1455,  1455,
    1455,  1455,  1455,  1455,  1455,  1455,  1458,  1455,  1459,  1455,
    1460,  1455,  1461,  1461,  1462,  1462,  1462,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1464,  1466,  1465,  1465,  1467,  1467,  1468,  1469,  1471,  1470,
    1472,  1472,  1472,  1472,  1473,  1473,  1474,  1474,  1475,  1475,
    1476,  1476,  1477,  1477,  1478,  1479,  1481,  1480,  1482,  1482,
    1482,  1482,  1482,  1482,  1482,  1482,  1483,  1483,  1483,  1483,
    1483,  1483,  1483,  1483,  1484,  1484,  1484,  1484,  1485,  1485,
    1486,  1486,  1487,  1487,  1488,  1488,  1489,  1489,  1490,  1490,
    1491,  1491,  1492,  1492,  1492,  1493,  1493,  1493,  1493,  1493,
    1494,  1495,  1496,  1496,  1498,  1497,  1499,  1497,  1500,  1500,
    1500,  1501,  1501,  1501,  1501,  1502,  1502,  1502,  1502,  1502,
    1503,  1503,  1503,  1504,  1505,  1507,  1508,  1506,  1509,  1509,
    1510,  1510,  1511,  1512,  1511,  1513,  1511,  1511,  1514,  1511,
    1515,  1511,  1511,  1516,  1511,  1517,  1511,  1511,  1518,  1518,
    1518,  1519,  1519,  1520,  1520,  1521,  1522,  1522,  1522,  1522,
    1522,  1523,  1523,  1524,  1524,  1525,  1525,  1526,  1526,  1527,
    1527,  1528,  1529,  1529,  1530,  1530,  1531,  1531,  1531,  1531,
    1532,  1532,  1534,  1533,  1535,  1533,  1536,  1536,  1537,  1538,
    1537,  1540,  1539,  1541,  1541,  1542,  1542,  1543,  1543,  1544,
    1544,  1545,  1545,  1545,  1545,  1545,  1545,  1545,  1545,  1545,
    1545,  1545,  1545,  1546,  1546,  1546,  1546,  1546,  1546,  1546,
    1546,  1546,  1547,  1547,  1547,  1547,  1548,  1548,  1548,  1549,
    1549,  1550,  1551,  1551,  1552,  1553,  1552,  1554,  1555,  1554,
    1556,  1556,  1557,  1557,  1558,  1558,  1558,  1559,  1559,  1560,
    1560,  1561,  1563,  1562,  1564,  1564,  1565,  1565,  1566,  1566,
    1567,  1567,  1568,  1568,  1569,  1569,  1570,  1570,  1570,  1571,
    1571,  1571,  1572,  1572,  1572,  1572,  1572,  1572,  1573,  1574,
    1574,  1575,  1576,  1576,  1578,  1577,  1579,  1579,  1580,  1580,
    1580,  1581,  1581,  1582,  1582,  1582,  1582,  1583,  1583,  1583,
    1583,  1583,  1584,  1584,  1585,  1585,  1586,  1586,  1587,  1588,
    1588,  1588,  1589,  1589,  1589,  1589,  1589,  1589,  1590,  1591,
    1591,  1591,  1591,  1592,  1592,  1592,  1593,  1593,  1594,  1595,
    1596,  1596,  1596,  1597,  1597,  1598,  1598,  1599,  1599,  1600,
    1600,  1600,  1600,  1600,  1600,  1601,  1601,  1601,  1601,  1601,
    1602,  1602,  1602,  1602,  1603,  1603,  1603,  1603,  1603,  1604,
    1604,  1604,  1604,  1604,  1605,  1606,  1606,  1607,  1607,  1608,
    1608,  1608,  1610,  1609,  1611,  1611,  1612,  1612,  1613,  1615,
    1614,  1616,  1616,  1617,  1618,  1618,  1618,  1619,  1621,  1622,
    1620,  1620,  1620,  1624,  1623,  1626,  1625,  1627,  1625,  1625,
    1625,  1625,  1628,  1625,  1625,  1625,  1625,  1629,  1625,  1625,
    1630,  1630,  1631,  1632,  1633,  1633,  1634,  1635,  1635,  1636,
    1636,  1637,  1637,  1639,  1640,  1638,  1642,  1643,  1641,  1644,
    1645,  1646,  1646,  1646,  1647,  1647,  1648,  1648,  1649,  1649,
    1651,  1650,  1652,  1652,  1653,  1652,  1654,  1655,  1655,  1656,
    1656,  1657,  1658,  1658,  1659,  1659,  1660,  1661,  1661,  1662,
    1662,  1663,  1663,  1664,  1664,  1666,  1665,  1668,  1667,  1669,
    1669,  1670,  1670,  1671,  1671,  1672,  1672,  1673,  1673,  1674,
    1674,  1675,  1676,  1677,  1675,  1678,  1678,  1680,  1681,  1682,
    1679,  1683,  1683,  1684,  1684,  1685,  1685,  1686,  1687,  1687,
    1689,  1688,  1690,  1690,  1691,  1692,  1691,  1693,  1694,  1696,
    1695,  1697,  1698,  1695,  1699,  1700,  1695,  1701,  1702,  1701,
    1703,  1703,  1704,  1704,  1705,  1705,  1705,  1707,  1708,  1706,
    1709,  1709,  1710,  1710,  1711,  1711,  1712,  1712,  1712,  1712,
    1712,  1712,  1712,  1712,  1712,  1713,  1713,  1715,  1714,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,
    1716,  1716,  1716,  1717,  1716,  1718,  1716,  1716,  1716,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,  1716,
    1716,  1716,  1716,  1716,  1716,  1716,  1719,  1719,  1719,  1720,
    1720,  1721,  1721,  1722,  1722,  1723,  1723,  1724,  1724,  1725,
    1725,  1726,  1726,  1727,  1727,  1727,  1729,  1728,  1730,  1728,
    1731,  1731,  1731,  1731,  1731,  1731,  1732,  1732,  1733,  1734,
    1734,  1734,  1734,  1735,  1735,  1736,  1736,  1736,  1737,  1739,
    1738,  1741,  1740,  1740,  1742,  1742,  1743,  1744,  1743,  1745,
    1745,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,
    1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1746,  1747,
    1747,  1748,  1749,  1750,  1749,  1749,  1751,  1751,  1752,  1752,
    1752,  1753,  1754,  1754,  1756,  1755,  1757,  1757,  1759,  1758,
    1760,  1758,  1758,  1761,  1761,  1762,  1762,  1763,  1764,  1763,
    1766,  1765,  1767,  1767,  1767,  1768,  1768,  1768,  1769,  1769,
    1770,  1770,  1772,  1771,  1773,  1773,  1774,  1776,  1777,  1778,
    1779,  1775,  1780,  1780,  1781,  1781,  1782,  1782,  1782,  1783,
    1783,  1783,  1784,  1784,  1785,  1785,  1786,  1786,  1786,  1786,
    1787,  1787,  1788,  1788,  1789,  1789,  1790,  1790,  1791,  1791,
    1792,  1792,  1793,  1793,  1793,  1794,  1794,  1795,  1795,  1796,
    1796,  1797,  1797,  1798,  1799,  1799,  1799,  1799,  1800,  1800,
    1801,  1801,  1801,  1802,  1802,  1802,  1803,  1803,  1804,  1804,
    1804,  1804,  1804,  1804,  1804,  1804,  1804,  1804,  1805,  1805,
    1805,  1805,  1805,  1806,  1806,  1806,  1808,  1807,  1809,  1809,
    1810,  1810,  1811,  1812,  1813,  1812,  1814,  1814,  1815,  1816,
    1817,  1817,  1818,  1819,  1819,  1820,  1820,  1821,  1821,  1822,
    1823,  1823,  1823,  1823,  1823,  1824,  1824,  1824,  1824,  1824,
    1825,  1825,  1825,  1825,  1826,  1826,  1826,  1827,  1827,  1828,
    1829,  1829,  1830,  1830,  1830,  1831,  1832,  1832,  1832,  1832,
    1833,  1834,  1835,  1836,  1837,  1837,  1838,  1838,  1839,  1839,
    1839,  1840,  1840,  1841,  1841,  1842,  1842,  1842,  1843,  1843,
    1843,  1844,  1844,  1845,  1846,  1846,  1846,  1846,  1846,  1846,
    1846,  1846,  1846,  1846,  1846,  1846,  1847,  1847,  1847,  1847,
    1847,  1847,  1847,  1847,  1847,  1847,  1847,  1847,  1847,  1848,
    1848,  1848,  1848,  1848,  1848,  1848,  1848,  1848,  1848,  1848,
    1848,  1848,  1849,  1849,  1849,  1849,  1849,  1849,  1849,  1849,
    1849,  1849,  1849,  1849,  1849,  1850,  1850,  1850,  1850,  1850,
    1850,  1850,  1850,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,  1851,
    1851,  1851,  1851,  1851,  1851,  1851,  1852,  1852,  1852,  1852,
    1852,  1852,  1853,  1853,  1853,  1853,  1853,  1853,  1853,  1853,
    1853,  1853,  1854,  1854,  1854,  1855,  1855,  1855,  1856,  1856,
    1856,  1856,  1856,  1856,  1856,  1856,  1856,  1856,  1856,  1856,
    1856,  1856,  1856,  1856,  1856,  1856,  1856,  1856,  1856,  1856,
    1856,  1856,  1856,  1856,  1857,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,  1858,
    1858,  1858,  1858,  1858,  1858,  1858,  1858,  1859,  1859,  1860,
    1860,  1860,  1860,  1860,  1860,  1860,  1860,  1860,  1860,  1860,
    1860,  1860,  1860,  1860,  1860,  1860,  1860,  1860,  1860,  1860,
    1860,  1860,  1860,  1860,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,  1861,
    1863,  1862,  1864,  1864,  1865,  1864,  1866,  1864,  1867,  1864,
    1868,  1868,  1869,  1869,  1870,  1869,  1871,  1871,  1873,  1872,
    1872,  1874,  1874,  1874,  1875,  1875,  1875,  1875,  1876,  1876,
    1876,  1876,  1878,  1877,  1879,  1877,  1880,  1877,  1882,  1881,
    1883,  1881,  1884,  1881,  1886,  1885,  1887,  1885,  1888,  1885,
    1889,  1885,  1890,  1885,  1891,  1885,  1892,  1885,  1885,  1885,
    1885,  1885,  1885,  1885,  1885,  1893,  1885,  1894,  1885,  1895,
    1885,  1896,  1896,  1896,  1896,  1897,  1898,  1899,  1899,  1900,
    1900,  1900,  1900,  1901,  1901,  1901,  1902,  1902,  1902,  1903,
    1903,  1903,  1905,  1904,  1906,  1906,  1906,  1907,  1907,  1908,
    1908,  1909,  1910,  1910,  1910,  1910,  1910,  1912,  1911,  1914,
    1913,  1915,  1915,  1916,  1915,  1917,  1917,  1918,  1918,  1919,
    1919,  1919,  1919,  1920,  1919,  1921,  1921,  1921,  1921,  1921,
    1922,  1923,  1923,  1923,  1923,  1923,  1924,  1924,  1925,  1926,
    1926,  1926,  1926,  1927,  1927,  1928,  1928,  1929,  1929,  1930,
    1931,  1932,  1932,  1933,  1933,  1934,  1934,  1935,  1935,  1936,
    1936,  1936,  1936,  1937,  1938,  1938,  1938,  1938,  1939,  1939,
    1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,
    1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,
    1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,
    1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,  1939,
    1939,  1940,  1940,  1941,  1941,  1942,  1942,  1942,  1943,  1943,
    1943,  1943,  1944,  1944,  1945,  1945,  1946,  1946,  1947,  1947,
    1948,  1948,  1949,  1949,  1949,  1949,  1950,  1950,  1951,  1952,
    1952,  1952,  1953,  1953,  1953,  1953,  1953,  1954,  1954,  1954,
    1954,  1954,  1955,  1955,  1956,  1956,  1957,  1957,  1958,  1958,
    1959,  1959,  1960,  1960,  1962,  1961,  1963,  1964,  1964,  1965,
    1965,  1966,  1966,  1966,  1967,  1967,  1967,  1968,  1969,  1969,
    1969,  1970,  1971,  1972,  1972,  1972,  1973,  1973,  1973,  1974,
    1974,  1974,  1974,  1974,  1974,  1974,  1974,  1974,  1975,  1975,
    1976,  1977,  1978,  1978,  1978,  1979,  1979,  1980,  1980,  1981,
    1981,  1982,  1982,  1984,  1983,  1985,  1985,  1985,  1985,  1986,
    1986,  1987,  1987,  1989,  1990,  1991,  1992,  1993,  1988,  1995,
    1994,  1996,  1996,  1997,  1997,  1998,  1998,  2000,  1999,  2001,
    2001,  2001,  2001,  2001,  2001,  2002,  2002,  2003,  2003,  2003,
    2004,  2004,  2004,  2005,  2005,  2005,  2006,  2006,  2007,  2008,
    2007,  2009,  2009,  2010,  2010,  2011,  2011,  2012,  2013,  2014,
    2014,  2015,  2016,  2015,  2017,  2015,  2018,  2015,  2019,  2020,
    2021,  2022,  2023,  2024,  2025,  2026,  2027,  2028,  2028,  2029,
    2029,  2029,  2029,  2029,  2029,  2029,  2029,  2030,  2030,  2030,
    2030,  2030,  2030,  2030,  2030,  2031,  2031,  2031,  2032,  2033,
    2035,  2034,  2036,  2037,  2038,  2039,  2039,  2039,  2040,  2040,
    2040,  2042,  2041,  2043,  2043,  2043,  2043,  2043,  2043,  2043,
    2043,  2044,  2044,  2045,  2045,  2047,  2046,  2048,  2046,  2049,
    2046,  2050,  2050,  2051,  2052,  2052,  2053,  2053,  2055,  2054,
    2056,  2057,  2057,  2058,  2058,  2059,  2059,  2060,  2060,  2061,
    2061,  2062,  2064,  2065,  2066,  2063,  2067,  2067,  2067,  2068,
    2069,  2069,  2070,  2070,  2071,  2071,  2073,  2072,  2075,  2074,
    2076,  2076,  2076,  2078,  2077,  2080,  2079,  2081,  2081,  2082,
    2082,  2083,  2083,  2084,  2084,  2085,  2086,  2086,  2086,  2087,
    2087,  2087,  2087,  2089,  2088,  2091,  2092,  2090,  2094,  2093,
    2095,  2093,  2096,  2093,  2093,  2097,  2093,  2098,  2099,  2093,
    2100,  2100,  2102,  2101,  2101,  2103,  2103,  2104,  2104,  2105,
    2105,  2106,  2106,  2106,  2107,  2106,  2108,  2108,  2108,  2108,
    2108,  2108,  2109,  2109,  2109,  2109,  2109,  2109,  2109,  2109,
    2109,  2109,  2109,  2110,  2110,  2110,  2110,  2112,  2111,  2113,
    2114,  2111,  2115,  2115,  2117,  2116,  2118,  2119,  2116,  2121,
    2120
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     5,     3,     0,     0,     6,
       0,     0,     3,     1,     3,     0,     3,     0,     7,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     1,     0,     1,     3,     0,     0,     8,
       0,     8,     0,     0,    15,     0,     0,    17,     0,     0,
      15,     0,     0,    15,     0,     6,     0,    10,     0,    11,
       0,     5,     0,     5,     8,     6,     0,     3,     1,     0,
       1,     1,     2,     3,     2,     1,     3,     2,     1,     3,
       3,     3,     1,     1,     1,     1,     3,     0,     1,     0,
      12,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       0,    12,     0,     6,     2,     0,     1,     3,     1,     0,
       2,     0,     2,     0,     1,     4,     0,     2,     0,     3,
       0,     0,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     6,     4,     3,     1,     0,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     1,     1,     2,     3,     3,
       0,     4,     0,     6,     0,     8,     0,     3,     0,     1,
       3,     1,     0,     0,     2,     3,     1,     1,     0,     1,
       3,     1,     1,     1,     1,     0,     4,     3,     0,     3,
       2,     3,     1,     3,     5,     2,     1,     3,     3,     1,
       0,     4,     4,     1,     0,     6,     0,     3,     0,     0,
       5,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       3,     0,     1,     1,     1,     1,     2,     1,     1,     2,
       3,     3,     1,     1,     0,     1,     0,     2,     3,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     4,     0,     1,
       1,     3,     1,     3,     3,     1,     2,     1,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     0,     5,     0,     2,     1,     1,     0,     3,
       1,     1,     2,     0,     4,     0,     5,     1,     2,     0,
       4,     0,     5,     2,     2,     2,     0,     4,     0,     0,
       5,     0,     5,     1,     3,     0,     3,     1,     1,     1,
       3,     3,     4,     5,     2,     4,     2,     1,     3,     0,
       0,     6,     0,     2,     2,     2,     0,     6,     0,     3,
       1,     1,     2,     1,     2,     0,     5,     0,     5,     0,
       2,     0,     1,     0,     1,     2,     5,     3,     5,     3,
       5,     1,     0,     5,     0,     5,     0,     0,     0,     8,
       0,     5,     0,     3,     0,     3,     0,     0,     5,     0,
       3,     1,     1,     1,     1,     1,     0,     5,     3,     1,
       2,     4,     0,     4,     1,     4,     1,     0,     1,     0,
       4,     0,     0,     3,     0,     6,     6,     0,     4,     2,
       2,     0,     3,     2,     0,     3,     0,     1,     0,     3,
       0,     1,     1,     3,     1,     4,     3,     3,     0,     2,
       0,     0,     7,     0,    10,     1,     3,     1,     1,     0,
       2,     0,     3,     1,     3,     0,     1,     0,     6,     1,
       0,     0,     4,     0,     3,     1,     1,     1,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     1,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     3,     4,     4,     3,     0,     0,     6,
       3,     0,     2,     0,     1,     0,     1,     0,     1,     1,
       2,     1,     1,     3,     0,     3,     0,     3,     1,     3,
       0,     1,     1,     2,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     0,     6,     1,
       1,     3,     4,     4,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     3,     3,     3,     3,     1,     1,     1,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       2,     1,     3,     0,     9,     0,    10,     0,     9,     0,
       9,     0,    11,     0,    12,     0,    10,     2,     7,     7,
       0,     1,     4,     0,     1,     0,     1,     2,     0,     4,
       0,     3,     0,     3,     0,     1,     2,     1,     0,     1,
       2,     1,     0,     1,     2,     3,     0,     6,     5,     5,
       0,     2,     0,     1,     1,     1,     0,     1,     2,     1,
       1,     2,     2,     1,     0,     3,     1,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     3,     3,     3,     2,
       1,     1,     3,     3,     3,     3,     0,     1,     2,     2,
       3,     3,     2,     3,     3,     4,     3,     3,     3,     1,
       2,     2,     2,     2,     3,     3,     2,     2,     2,     3,
       3,     2,     3,     2,     2,     2,     2,     2,     5,     5,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     2,     0,     3,
       0,     1,     1,     5,     0,     1,     1,     1,     2,     2,
       1,     3,     3,     3,     3,     1,     1,     0,     1,     0,
       1,     0,     1,     2,     1,     1,     2,     4,     1,     3,
       2,     1,     0,     2,     0,     1,     0,     1,     2,     2,
       2,     3,     2,     1,     1,     1,     2,     1,     2,     2,
       1,     1,     1,     1,     1,     0,     2,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     2,     1,     1,     0,
       1,     1,     1,     2,     1,     2,     3,     3,     2,     2,
       0,     1,     0,     4,     1,     1,     1,     0,     1,     2,
       1,     1,     2,     1,     3,     3,     1,     1,     0,     2,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     2,     2,     1,     1,     0,     1,     1,     1,     1,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     1,     2,     0,     2,     0,     2,     2,     2,
       2,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     1,     1,     1,     2,     4,     2,     0,     4,
       1,     4,     0,     1,     1,     3,     0,     0,     9,     0,
       5,     0,     7,     7,     0,     6,     0,     6,     0,    11,
       0,    10,     0,    11,     0,     8,     8,     0,     0,     0,
       9,     1,     1,     0,     1,     1,     3,     0,     2,     3,
       5,     5,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     0,     2,     2,     2,     2,     1,     1,     1,
       4,     4,     0,     6,     4,     0,     5,     0,     6,     4,
       3,     1,     8,     8,     0,     9,     2,     1,     1,     0,
       6,     0,     3,     2,     0,     5,     0,     0,     6,     1,
       3,     1,     1,     3,     3,     3,     2,     2,     4,     4,
       2,     7,     6,     5,     5,     4,     5,     4,     4,     2,
       2,     7,     5,     6,     3,     6,     6,     4,     6,     1,
       1,     1,     1,     1,     3,     3,     3,     5,     0,     2,
       2,     0,     1,     1,     2,     2,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     2,     0,     1,     2,     1,
       1,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     0,     7,     0,     5,     5,     4,     3,     0,
       1,     1,     3,     3,     2,     2,     0,     2,     1,     3,
       0,     1,     1,     0,     2,     4,     4,     4,     1,     3,
       0,     5,     0,     1,     1,     3,     0,     4,     0,     4,
       0,     1,     1,     2,     1,     1,     1,     0,     2,     2,
       0,     5,     1,     3,     2,     0,     3,     1,     4,     1,
       0,     4,     1,     0,     4,     0,     1,     3,     0,     1,
       3,     1,     1,     2,     6,     3,     0,     4,     0,     3,
       0,     1,     1,     2,     1,     1,     1,     1,     1,     2,
       0,     2,     0,     6,     0,     1,     1,     0,     5,     4,
       3,     5,     1,     3,     4,     0,     6,     1,     1,     1,
       3,     2,     3,     1,     1,     0,     6,     1,     1,     1,
       3,     3,     4,     0,     6,     0,     2,     0,     4,     0,
       2,     0,     3,     0,     4,     0,     3,     0,     4,     1,
       1,     0,     3,     0,     0,     5,     6,     7,     1,     2,
       1,     1,     0,     3,     0,     3,     3,     3,     1,     0,
       4,     3,     1,     1,     1,     1,     1,     4,     0,     1,
       2,     1,     1,     0,     1,     0,     1,     1,     2,     1,
       2,     9,     0,     1,     0,     2,     3,     1,     4,     4,
       2,     1,     1,     1,     1,     3,     5,     0,     1,     0,
       2,     1,     2,     3,     1,     1,     3,     4,     0,     0,
       0,     0,     0,     0,     0,     0,     2,     2,     1,     1,
       0,     2,     3,     0,     2,     3,     0,     2,     3,     3,
       3,     2,     1,     3,     4,     3,     4,     3,     4,     3,
       4,     3,     3,     6,     1,     3,     4,     5,     7,     6,
       8,     5,     6,     4,     3,     5,     4,     6,     3,     4,
       1,     3,     3,     3,     3,     3,     3,     3,     5,     5,
       5,     6,     6,     3,     3,     3,     3,     3,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     2,     1,     1,
       1,     1,     2,     1,     1,     1,     2,     1,     2,     2,
       2,     1,     4,     1,     3,     1,     1,     1,     1,     3,
       1,     1,     1,     4,     4,     4,     3,     3,     3,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     6,     4,     4,     7,     6,     3,     4,     6,     6,
       4,     4,     4,     4,     4,     4,     6,     8,    10,     1,
       1,     3,     1,     1,     3,     1,     2,     2,     2,     2,
       2,     1,     3,     4,     6,     4,     6,     2,     2,     4,
       4,     4,    10,     6,     8,     6,     4,     4,     6,     4,
       3,     4,     1,     4,     3,     4,     1,     1,     5,     3,
       5,     3,     6,     8,     2,     2,     8,     8,     6,     6,
       2,     6,     2,     6,     8,     4,     1,     3,     4,     8,
       8,     4,     2,     2,     2,     6,     6,     4,     8,     4,
       4,     8,     4,     6,     6,     4,     6,     8,     6,     5,
       8,     7,    10,     0,     5,     4,     4,     4,     6,     8,
       6,     6,     6,     6,     6,     2,     3,     0,     4,     0,
       3,     0,     1,     1,     3,     4,     4,     5,     4,     4,
       4,     5,     4,     0,     0,     7,     4,     5,     4,     5,
       4,     4,     4,     4,     4,     5,     0,     9,     0,     8,
       0,     7,     3,     3,     1,     1,     1,     3,     3,     3,
       3,     3,     4,     4,     4,     6,     4,     6,     4,     6,
       5,     0,     7,     4,     4,     4,     4,     1,     0,     3,
       3,     1,     3,     5,     0,     1,     0,     2,     0,     3,
       4,     2,     0,     1,     2,     1,     0,     3,     2,     3,
       3,     3,     2,     1,     1,     1,     1,     1,     2,     1,
       2,     2,     1,     2,     1,     2,     2,     3,     0,     1,
       1,     3,     1,     3,     1,     3,     4,     5,     1,     3,
       1,     1,     1,     1,     2,     1,     1,     1,     1,     1,
       1,     4,     1,     3,     0,     3,     0,     5,     2,     4,
       4,     1,     1,     1,     1,     0,     1,     2,     1,     2,
       1,     1,     2,     3,     3,     0,     0,    10,     1,     4,
       1,     3,     3,     0,     6,     0,     8,     4,     0,     8,
       0,    10,     6,     0,     8,     0,    10,     6,     1,     2,
       1,     1,     2,     0,     1,     5,     1,     1,     1,     1,
       1,     1,     3,     1,     3,     3,     3,     3,     3,     3,
       3,     5,     3,     2,     0,     1,     0,     2,     3,     3,
       1,     1,     0,     7,     0,     7,     1,     2,     0,     0,
       2,     0,     2,     0,     1,     1,     1,     1,     3,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     1,     1,     0,
       1,     2,     0,     1,     0,     0,     3,     0,     0,     3,
       0,     4,     4,     2,     0,     1,     1,     0,     2,     3,
       1,     3,     0,     7,     0,     1,     0,     3,     0,     3,
       0,     3,     1,     1,     1,     4,     2,     2,     2,     1,
       2,     2,     0,     3,     2,     2,     3,     3,     3,     3,
       1,     2,     0,     1,     0,     4,     4,     2,     0,     1,
       1,     0,     1,     2,     5,     4,     1,     4,     7,     5,
       8,     3,     1,     1,     1,     1,     1,     2,     1,     1,
       3,     3,     1,     3,     1,     1,     1,     1,     1,     0,
       2,     3,     4,     1,     2,     1,     0,     1,     1,     1,
       0,     2,     2,     2,     1,     0,     1,     2,     2,     2,
       1,     2,     2,     2,     2,     1,     1,     1,     1,     1,
       2,     1,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     6,     0,     1,     3,     1,     3,     0,
       2,     3,     1,     1,     2,     1,     3,     2,     0,     0,
       7,     2,     1,     0,     3,     0,     8,     0,     8,     4,
       5,     5,     0,     6,     4,     4,     4,     0,     6,     1,
       1,     3,     1,     2,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     0,     0,    12,     0,     0,    10,     0,
       0,     0,     1,     1,     0,     1,     1,     1,     0,     1,
       0,     2,     1,     2,     0,     3,     3,     0,     1,     3,
       1,     1,     3,     1,     3,     1,     3,     1,     1,     0,
       1,     1,     1,     1,     1,     0,     4,     0,     4,     0,
       1,     0,     1,     3,     1,     5,     3,     1,     1,     1,
       1,     0,     0,     0,     7,     5,     1,     0,     0,     0,
      13,     3,     1,     3,     3,     3,     1,     3,     0,     1,
       0,     3,     0,     3,     2,     0,     5,     3,     2,     0,
       7,     0,     0,     7,     0,     0,     8,     0,     0,     3,
       0,     2,     0,     2,     1,     1,     1,     0,     0,     7,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     3,     3,
       6,     2,     2,     0,     6,     0,     8,     5,     2,     1,
       1,     1,     5,     5,     2,     2,     1,     4,     3,     2,
       3,     2,     2,     1,     4,     4,     3,     3,     3,     2,
       2,     3,     4,     3,     3,     3,     3,     4,     4,     3,
       2,     3,     3,     3,     3,     3,     4,     4,     3,     3,
       4,     4,     3,     4,     4,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     1,     1,     0,
       2,     0,     2,     0,     3,     3,     0,     4,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       2,     1,     1,     0,     3,     0,     1,     1,     5,     0,
       4,     0,     4,     1,     0,     1,     4,     0,     3,     3,
       1,     2,     2,     2,     2,     3,     4,     2,     1,     1,
       1,     1,     2,     1,     1,     1,     1,     1,     2,     0,
       1,     2,     2,     0,     3,     1,     0,     5,     0,     1,
       3,     1,     0,     3,     0,     3,     3,     1,     0,     5,
       0,     3,     2,     0,     1,     0,     2,     5,     0,     6,
       0,     4,     0,     1,     1,     2,     2,     3,     0,     1,
       1,     2,     0,     3,     0,     4,     2,     0,     0,     0,
       0,    23,     1,     1,     0,     1,     0,     1,     1,     0,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     5,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     2,     2,     0,     4,     0,     1,
       1,     3,     7,     0,     0,     4,     0,     3,     1,     1,
       1,     3,     1,     1,     1,     3,     5,     3,     5,     1,
       1,     3,     4,     5,     4,     1,     3,     4,     4,     5,
       1,     5,     3,     2,     1,     3,     2,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     1,     3,     0,     3,     0,     3,     0,     5,
       1,     3,     1,     3,     0,     3,     1,     3,     0,     3,
       1,     1,     1,     1,     0,     1,     1,     1,     0,     2,
       2,     2,     0,     4,     0,     6,     0,     6,     0,     4,
       0,     6,     0,     6,     0,     4,     0,     6,     0,     6,
       0,     7,     0,     7,     0,     9,     0,     9,     2,     3,
       2,     4,     3,     5,     2,     0,     4,     0,     4,     0,
       6,     1,     1,     3,     3,     1,     3,     2,     2,     2,
       2,     2,     1,     1,     4,     4,     3,     3,     3,     1,
       1,     1,     0,     5,     0,     2,     1,     1,     1,     1,
       3,     3,     1,     1,     2,     2,     2,     0,     3,     0,
       3,     3,     2,     0,     6,     1,     2,     1,     1,     1,
       1,     1,     1,     0,     5,     1,     1,     1,     1,     1,
       3,     6,     6,     7,     5,     3,     4,     1,     3,     8,
       8,     6,     4,     0,     3,     0,     3,     1,     3,     2,
       1,     1,     1,     0,     1,     1,     2,     0,     1,     1,
       1,     3,     3,     4,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     3,     2,     2,     2,
       2,     2,     2,     2,     2,     1,     1,     2,     2,     2,
       2,     2,     3,     2,     2,     2,     2,     3,     3,     2,
       3,     0,     1,     3,     1,     2,     2,     2,     1,     3,
       3,     1,     1,     3,     1,     3,     1,     3,     1,     1,
       1,     1,     4,     5,     4,     1,     3,     1,     2,     0,
       2,     5,     0,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     1,     0,     2,     0,     2,     0,     3,
       2,     1,     2,     1,     0,     3,     1,     0,     1,     0,
       1,     0,     3,     2,     0,     1,     2,     4,     4,     5,
       4,     2,     3,     2,     2,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     3,     3,     3,     3,     0,     1,     3,     3,     0,
       3,     1,     3,     0,     3,     0,     3,     4,     4,     1,
       1,     0,     2,     0,     0,     0,     0,     0,    20,     0,
       2,     2,     1,     1,     2,     0,     1,     0,     2,     4,
       4,     3,     4,     3,     3,     0,     3,     1,     3,     5,
       1,     1,     1,     0,     1,     1,     0,     2,     0,     0,
       3,     0,     2,     6,     3,     4,     4,     1,     0,     1,
       1,     1,     0,     3,     0,     5,     0,     7,     1,     1,
       1,     1,     2,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     2,     2,     1,     1,
       0,     6,     4,     1,     1,     1,     4,     4,     1,     1,
       2,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     4,     0,     6,     0,
       7,     1,     2,     3,     1,     2,     1,     2,     0,     5,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     0,     0,     0,     7,     1,     1,     2,     1,
       1,     3,     1,     2,     1,     2,     0,     6,     0,     5,
       4,     4,     1,     0,     5,     0,     5,     1,     1,     1,
       2,     3,     3,     5,     5,     2,     2,     3,     1,     6,
       8,     4,     6,     0,     5,     0,     0,     8,     0,     6,
       0,    11,     0,    11,    10,     0,    12,     0,     0,    13,
       1,     1,     0,     3,     1,     2,     3,     2,     3,     1,
       1,     1,     4,     2,     0,     6,     1,     1,     1,     1,
       1,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     0,     6,     0,
       0,     9,     1,     2,     0,     5,     0,     0,     7,     0,
       4
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (thd, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)




# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (thd);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep, thd);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,
                 int yyrule, THD *thd)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)], thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, THD *thd)
{
  YY_USE (yyvaluep);
  YY_USE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  switch (yykind)
    {
    case YYSYMBOL_expr_lex: /* expr_lex  */
#line 1572 "/home/buildbot/git/mkdist/sql/yy_oracle.yy"
{
  /*
     In case of a syntax/oom error let's free the sp_expr_lex
     instance, but only if it has not been linked to any structures
     such as sp_instr_jump_if_not::m_lex_keeper yet, e.g.:
       IF f1() THEN1
     i.e. THEN1 came instead of the expected THEN causing a syntax error.
  */
  if (!((*yyvaluep).expr_lex)->sp_lex_in_use)
    delete ((*yyvaluep).expr_lex);
}
#line 28701 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
        break;

    case YYSYMBOL_cursor_actual_parameters: /* cursor_actual_parameters  */
#line 1632 "/home/buildbot/git/mkdist/sql/yy_oracle.yy"
{
  if (((*yyvaluep).sp_assignment_lex_list))
  {
    sp_assignment_lex *elem;
    List_iterator<sp_assignment_lex> li(*((*yyvaluep).sp_assignment_lex_list));
    while ((elem= li++))
    {
      if (!elem->sp_lex_in_use)
        delete elem;
    }
  }
}
#line 28718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
        break;

    case YYSYMBOL_opt_parenthesized_cursor_actual_parameters: /* opt_parenthesized_cursor_actual_parameters  */
#line 1632 "/home/buildbot/git/mkdist/sql/yy_oracle.yy"
{
  if (((*yyvaluep).sp_assignment_lex_list))
  {
    sp_assignment_lex *elem;
    List_iterator<sp_assignment_lex> li(*((*yyvaluep).sp_assignment_lex_list));
    while ((elem= li++))
    {
      if (!elem->sp_lex_in_use)
        delete elem;
    }
  }
}
#line 28735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
        break;

      default:
        break;
    }
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* query: END_OF_INPUT  */
#line 2007 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 29018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3: /* $@1: %empty  */
#line 2016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 29045 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 5: /* query: directly_executable_statement END_OF_INPUT  */
#line 2041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 29054 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 71: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 2124 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 29062 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 74: /* $@2: %empty  */
#line 2136 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "PREPARE..FROM"; }
#line 29068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 75: /* prepare: PREPARE_SYM ident FROM $@2 expr  */
#line 2138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 29078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 76: /* execute: EXECUTE_SYM ident execute_using  */
#line 2147 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 29087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 77: /* $@3: %empty  */
#line 2152 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE"; }
#line 29093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 78: /* $@4: %empty  */
#line 2154 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= NULL; }
#line 29099 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 79: /* execute: EXECUTE_SYM IMMEDIATE_SYM $@3 expr $@4 execute_using  */
#line 2156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 29108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 80: /* execute_using: %empty  */
#line 2163 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item_list)= NULL; }
#line 29114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 81: /* $@5: %empty  */
#line 2165 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 29120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 82: /* execute_using: USING $@5 execute_params  */
#line 2167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 29129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 83: /* execute_params: expr_or_ignore_or_default  */
#line 2175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 29138 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 84: /* execute_params: execute_params ',' expr_or_ignore_or_default  */
#line 2180 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 29147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 85: /* $@6: %empty  */
#line 2191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 29156 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 86: /* help: HELP_SYM $@6 ident_or_text  */
#line 2196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 29166 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 87: /* $@7: %empty  */
#line 2207 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 29174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 88: /* change: CHANGE MASTER_SYM optional_connection_name TO_SYM $@7 master_defs optional_for_channel  */
#line 2212 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 29180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 91: /* master_def: MASTER_HOST_SYM '=' TEXT_STRING_sys  */
#line 2222 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 29188 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 92: /* master_def: MASTER_USER_SYM '=' TEXT_STRING_sys  */
#line 2226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 29196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 93: /* master_def: MASTER_PASSWORD_SYM '=' TEXT_STRING_sys  */
#line 2230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 29204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 94: /* master_def: MASTER_PORT_SYM '=' ulong_num  */
#line 2234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 29212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 95: /* master_def: MASTER_CONNECT_RETRY_SYM '=' ulong_num  */
#line 2238 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 29220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 96: /* master_def: MASTER_DELAY_SYM '=' ulong_num  */
#line 2242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 29234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 97: /* master_def: MASTER_SSL_SYM '=' ulong_num  */
#line 2252 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 29243 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 98: /* master_def: MASTER_SSL_CA_SYM '=' TEXT_STRING_sys  */
#line 2257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 29251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 99: /* master_def: MASTER_SSL_CAPATH_SYM '=' TEXT_STRING_sys  */
#line 2261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 29259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 100: /* master_def: MASTER_SSL_CERT_SYM '=' TEXT_STRING_sys  */
#line 2265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 29267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 101: /* master_def: MASTER_SSL_CIPHER_SYM '=' TEXT_STRING_sys  */
#line 2269 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 29275 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 102: /* master_def: MASTER_SSL_KEY_SYM '=' TEXT_STRING_sys  */
#line 2273 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 29283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 103: /* master_def: MASTER_SSL_VERIFY_SERVER_CERT_SYM '=' ulong_num  */
#line 2277 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 29292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 104: /* master_def: MASTER_SSL_CRL_SYM '=' TEXT_STRING_sys  */
#line 2282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 29300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 105: /* master_def: MASTER_SSL_CRLPATH_SYM '=' TEXT_STRING_sys  */
#line 2286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 29308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 106: /* master_def: MASTER_HEARTBEAT_PERIOD_SYM '=' NUM_literal  */
#line 2291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                  ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                                  ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning_printf(thd, Sql_condition::WARN_LEVEL_WARN,
                                    ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                                    ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 107: /* master_def: IGNORE_SERVER_IDS_SYM '=' '(' ignore_server_id_list ')'  */
#line 2319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 29348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 108: /* master_def: DO_DOMAIN_IDS_SYM '=' '(' do_domain_id_list ')'  */
#line 2323 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 109: /* master_def: IGNORE_DOMAIN_IDS_SYM '=' '(' ignore_domain_id_list ')'  */
#line 2327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 114: /* ignore_server_id: ulong_num  */
#line 2342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 118: /* do_domain_id: ulong_num  */
#line 2355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29380 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 122: /* ignore_domain_id: ulong_num  */
#line 2368 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 123: /* master_file_def: MASTER_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 29396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 124: /* master_file_def: MASTER_LOG_POS_SYM '=' ulonglong_num  */
#line 2379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 29415 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 125: /* master_file_def: RELAY_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 29423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 126: /* master_file_def: RELAY_LOG_POS_SYM '=' ulong_num  */
#line 2398 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 29433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 127: /* master_file_def: MASTER_USE_GTID_SYM '=' CURRENT_POS_SYM  */
#line 2404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 29443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 128: /* master_file_def: MASTER_USE_GTID_SYM '=' SLAVE_POS_SYM  */
#line 2410 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 29453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 129: /* master_file_def: MASTER_USE_GTID_SYM '=' NO_SYM  */
#line 2416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 29463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 130: /* master_file_def: MASTER_DEMOTE_TO_SLAVE_SYM '=' bool  */
#line 2422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.is_demotion_opt= (bool) (yyvsp[0].ulong_num);
          }
#line 29471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 131: /* optional_connection_name: %empty  */
#line 2429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 29480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 133: /* connection_name: TEXT_STRING_sys  */
#line 2438 "/home/buildbot/git/sql/sql_yacc.yy"
        {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 29492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 134: /* optional_for_channel: %empty  */
#line 2449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*do nothing */
          }
#line 29500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 136: /* for_channel: FOR_SYM CHANNEL_SYM TEXT_STRING_sys  */
#line 2458 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (Lex->mi.connection_name.str != NULL)
          {
            my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "CONNECTION_NAME AND FOR CHANNEL CAN NOT BE SPECIFIED AT THE SAME TIME)"));
          }
          else
          {
            Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
          }

          }
#line 29520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 137: /* $@8: %empty  */
#line 2479 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 29536 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 138: /* $@9: %empty  */
#line 2491 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                    TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
            lex->inc_select_stack_outer_barrier();
          }
#line 29557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 139: /* create: create_or_replace opt_temporary TABLE_SYM opt_if_not_exists $@8 table_ident $@9 create_body  */
#line 2508 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 29567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 140: /* $@10: %empty  */
#line 2514 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                   TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 29601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 141: /* create: create_or_replace opt_temporary SEQUENCE_SYM opt_if_not_exists table_ident $@10 opt_sequence opt_create_table_options  */
#line 2544 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->check_and_adjust(1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(prepare_sequence_fields(thd,
                         &lex->alter_info.create_list)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
	    Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 29630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 142: /* $@11: %empty  */
#line 2569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 143: /* $@12: %empty  */
#line 2576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::MULTIPLE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 144: /* create: create_or_replace INDEX_SYM opt_if_not_exists $@11 ident opt_key_algorithm_clause ON table_ident $@12 '(' key_list ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2584 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 145: /* $@13: %empty  */
#line 2588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 146: /* $@14: %empty  */
#line 2595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::UNIQUE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 147: /* create: create_or_replace UNIQUE_SYM INDEX_SYM opt_if_not_exists $@13 ident opt_key_algorithm_clause ON table_ident $@14 '(' key_list opt_without_overlaps ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2604 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29686 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 148: /* $@15: %empty  */
#line 2608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 149: /* $@16: %empty  */
#line 2614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 150: /* create: create_or_replace fulltext INDEX_SYM $@15 opt_if_not_exists ident ON table_ident $@16 '(' key_list ')' opt_lock_wait_timeout fulltext_key_options opt_index_lock_algorithm  */
#line 2622 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 151: /* $@17: %empty  */
#line 2626 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 29723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 152: /* $@18: %empty  */
#line 2632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 29734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 153: /* create: create_or_replace spatial INDEX_SYM $@17 opt_if_not_exists ident ON table_ident $@18 '(' key_list ')' opt_lock_wait_timeout spatial_key_options opt_index_lock_algorithm  */
#line 2640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 154: /* $@19: %empty  */
#line 2644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
          }
#line 29750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 155: /* create: create_or_replace DATABASE opt_if_not_exists ident $@19 opt_create_database_options  */
#line 2648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 29762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 156: /* $@20: %empty  */
#line 2657 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 29775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 157: /* create: create_or_replace definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@20 view_list_opt AS view_select  */
#line 2666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 158: /* $@21: %empty  */
#line 2671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
          }
#line 29795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 159: /* create: create_or_replace view_algorithm definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@21 view_list_opt AS view_select  */
#line 2679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 160: /* $@22: %empty  */
#line 2683 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 29813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 161: /* create: create_or_replace definer_opt TRIGGER_SYM $@22 trigger_tail  */
#line 2689 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 162: /* $@23: %empty  */
#line 2693 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 29831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 163: /* create: create_or_replace definer_opt EVENT_SYM $@23 event_tail  */
#line 2699 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 29839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 164: /* create: create_or_replace USER_SYM opt_if_not_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 2704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 29849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 165: /* create: create_or_replace ROLE_SYM opt_if_not_exists clear_privileges role_list opt_with_admin  */
#line 2711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 29859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 166: /* $@24: %empty  */
#line 2716 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 29865 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 167: /* create: create_or_replace $@24 server_def  */
#line 2718 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 29871 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 169: /* opt_sequence: %empty  */
#line 2723 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 29877 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 173: /* sequence_def: MINVALUE_SYM opt_equal longlong_num  */
#line 2734 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.seq_create_info->min_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 29886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 174: /* sequence_def: NO_SYM MINVALUE_SYM  */
#line 2739 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 29896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 175: /* sequence_def: NOMINVALUE_SYM  */
#line 2745 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_min_value;
          }
#line 29906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 176: /* sequence_def: MAXVALUE_SYM opt_equal longlong_num  */
#line 2751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           if (unlikely(Lex->create_info.seq_create_info->used_fields &
               seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->max_value= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 29918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 177: /* sequence_def: NO_SYM MAXVALUE_SYM  */
#line 2759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 29928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 178: /* sequence_def: NOMAXVALUE_SYM  */
#line 2765 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_max_value;
          }
#line 29938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 179: /* sequence_def: START_SYM opt_with longlong_num  */
#line 2771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            Lex->create_info.seq_create_info->start= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_start;
          }
#line 29950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 180: /* sequence_def: INCREMENT_SYM opt_by longlong_num  */
#line 2779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            Lex->create_info.seq_create_info->increment= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_increment;
          }
#line 29962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 181: /* sequence_def: CACHE_SYM opt_equal longlong_num  */
#line 2787 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 29974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 182: /* sequence_def: NOCACHE_SYM  */
#line 2795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            Lex->create_info.seq_create_info->cache= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cache;
          }
#line 29986 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 183: /* sequence_def: CYCLE_SYM  */
#line 2803 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 1;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 29998 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 184: /* sequence_def: NOCYCLE_SYM  */
#line 2811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            Lex->create_info.seq_create_info->cycle= 0;
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_cycle;
          }
#line 30010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 185: /* sequence_def: RESTART_SYM  */
#line 2819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart;
          }
#line 30026 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 186: /* sequence_def: RESTART_SYM opt_with longlong_num  */
#line 2831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->create_info.seq_create_info->used_fields &
                         seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            Lex->create_info.seq_create_info->restart= (yyvsp[0].longlong_number);
            Lex->create_info.seq_create_info->used_fields|= seq_field_used_restart | seq_field_used_restart_value;
          }
#line 30043 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 187: /* force_lookahead: %empty  */
#line 2846 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 30049 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 188: /* force_lookahead: FORCE_LOOKAHEAD  */
#line 2846 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 30055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 189: /* $@25: %empty  */
#line 2850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 30065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 190: /* server_def: SERVER_SYM opt_if_not_exists ident_or_text $@25 FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 2857 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 30071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 193: /* server_option: USER_SYM TEXT_STRING_sys  */
#line 2867 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
          }
#line 30080 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 194: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 2872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
          }
#line 30089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 195: /* server_option: DATABASE TEXT_STRING_sys  */
#line 2877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
          }
#line 30098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 196: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 2882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
          }
#line 30107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 197: /* server_option: PASSWORD_SYM TEXT_STRING_sys  */
#line 2887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
          }
#line 30116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 198: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 2892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
          }
#line 30125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 199: /* server_option: PORT_SYM ulong_num  */
#line 2897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->server_options.port= (yyvsp[0].ulong_num);
          }
#line 30133 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 200: /* $@26: %empty  */
#line 2904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 30154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 201: /* event_tail: remember_name opt_if_not_exists sp_name $@26 ON SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 2925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 30166 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 202: /* $@27: %empty  */
#line 2936 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 30175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 204: /* ev_schedule_time: AT_SYM expr  */
#line 2943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 30183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 205: /* opt_ev_status: %empty  */
#line 2949 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 206: /* opt_ev_status: ENABLE_SYM  */
#line 2951 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 30199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 207: /* opt_ev_status: DISABLE_SYM ON SLAVE  */
#line 2957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 30209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 208: /* opt_ev_status: DISABLE_SYM  */
#line 2963 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 30219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 209: /* ev_starts: %empty  */
#line 2972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 30230 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 210: /* ev_starts: STARTS_SYM expr  */
#line 2979 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 30238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 212: /* ev_ends: ENDS_SYM expr  */
#line 2987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 30246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 213: /* opt_ev_on_completion: %empty  */
#line 2993 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30252 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 215: /* ev_on_completion: ON COMPLETION_SYM opt_not PRESERVE_SYM  */
#line 2999 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 30263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 216: /* opt_ev_comment: %empty  */
#line 3008 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 217: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 3010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 30278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 218: /* $@28: %empty  */
#line 3017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 30315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 219: /* ev_sql_stmt: $@28 sp_proc_stmt force_lookahead  */
#line 3050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 30325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 220: /* clear_privileges: %empty  */
#line 3059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 30336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 221: /* opt_aggregate: %empty  */
#line 3068 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 30342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 222: /* opt_aggregate: AGGREGATE_SYM  */
#line 3069 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 30348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 223: /* sp_handler: FUNCTION_SYM  */
#line 3074 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_function; }
#line 30354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 224: /* sp_handler: PROCEDURE_SYM  */
#line 3075 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_procedure; }
#line 30360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 227: /* sp_handler_package_spec: PACKAGE_ORACLE_SYM  */
#line 3081 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 30366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 228: /* sp_handler_package_spec: PACKAGE_MARIADB_SYM  */
#line 3082 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 30372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 229: /* sp_handler_package_body: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM  */
#line 3086 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_body; }
#line 30378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 230: /* sp_handler_package_body: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM  */
#line 3087 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_body; }
#line 30384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 231: /* drop_routine: DROP sp_handler opt_if_exists ident '.' ident  */
#line 3092 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_routine((yyvsp[-4].sp_handler), (yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 30393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 232: /* drop_routine: DROP sp_handler opt_if_exists ident  */
#line 3097 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_routine((yyvsp[-2].sp_handler), (yyvsp[-1].object_ddl_options), Lex_ident_sys(), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 30402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 233: /* sp_name: ident '.' ident  */
#line 3106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 234: /* sp_name: ident  */
#line 3111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, (yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 235: /* sp_a_chistics: %empty  */
#line 3118 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 236: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 3119 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 30432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 237: /* sp_c_chistics: %empty  */
#line 3123 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30438 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 238: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 3124 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 30444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 239: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 3130 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 30450 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 240: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 3132 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Just parse it, we only have one language for now. */ }
#line 30456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 241: /* sp_chistic: NO_SYM SQL_SYM  */
#line 3134 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 30462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 242: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 3136 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 30468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 243: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 3138 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 30474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 244: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 3140 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 30480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 245: /* sp_chistic: sp_suid  */
#line 3142 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 30486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 246: /* sp_c_chistic: sp_chistic  */
#line 3147 "/home/buildbot/git/sql/sql_yacc.yy"
                                { }
#line 30492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 247: /* sp_c_chistic: opt_not DETERMINISTIC_SYM  */
#line 3148 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 30498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 248: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3152 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_SUID; }
#line 30504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 249: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3153 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 30510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 250: /* $@29: %empty  */
#line 3158 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 251: /* call: CALL_SYM ident $@29 opt_sp_cparam_list  */
#line 3163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 252: /* $@30: %empty  */
#line 3168 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 253: /* call: CALL_SYM ident '.' ident $@30 opt_sp_cparam_list  */
#line 3173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30546 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 254: /* $@31: %empty  */
#line 3178 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 30555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 255: /* call: CALL_SYM ident '.' ident '.' ident $@31 opt_sp_cparam_list  */
#line 3183 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 30564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 260: /* sp_cparams: sp_cparams ',' expr  */
#line 3202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 30572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 261: /* sp_cparams: expr  */
#line 3206 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 30580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 262: /* sp_fdparam_list: %empty  */
#line 3214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 30589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 263: /* $@32: %empty  */
#line 3219 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 30597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 264: /* sp_fdparam_list: $@32 sp_fdparams  */
#line 3223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 30605 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 267: /* sp_param_name: ident  */
#line 3235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 272: /* sp_parameter_type: IN_SYM  */
#line 3253 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 30620 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 273: /* sp_parameter_type: OUT_SYM  */
#line 3254 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 30626 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 274: /* sp_parameter_type: INOUT_SYM  */
#line 3255 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 30632 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 275: /* $@33: %empty  */
#line 3260 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 30640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 276: /* sp_parenthesized_pdparam_list: '(' $@33 sp_pdparam_list ')'  */
#line 3265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 30648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 278: /* sp_proc_stmts: %empty  */
#line 3275 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 30654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 280: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3280 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 30660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 282: /* optionally_qualified_column_ident: sp_decl_ident  */
#line 3287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30670 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 283: /* optionally_qualified_column_ident: sp_decl_ident '.' ident  */
#line 3293 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30680 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 284: /* optionally_qualified_column_ident: sp_decl_ident '.' ident '.' ident  */
#line 3299 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 30690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 285: /* row_field_definition: row_field_name field_type  */
#line 3309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 30699 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 286: /* row_field_definition_list: row_field_definition  */
#line 3317 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 30708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 287: /* row_field_definition_list: row_field_definition_list ',' row_field_definition  */
#line 3322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 30717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 288: /* row_type_body: '(' row_field_definition_list ')'  */
#line 3329 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 30723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 289: /* sp_decl_idents_init_vars: sp_decl_idents  */
#line 3334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 30731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 290: /* $@34: %empty  */
#line 3342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 30740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 291: /* sp_decl_variable_list: sp_decl_idents_init_vars field_type $@34 sp_opt_default  */
#line 3347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-3].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].expr_and_query_str).expr,
                                                                (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 30753 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 292: /* sp_decl_variable_list: sp_decl_idents_init_vars ROW_SYM row_type_body sp_opt_default  */
#line 3358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list),
                                                                    (yyvsp[0].expr_and_query_str).expr,
                                                                    (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 30765 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 294: /* $@35: %empty  */
#line 3370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 30774 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 295: /* sp_decl_handler: sp_handler_type HANDLER_SYM FOR_SYM $@35 sp_hcond_list sp_proc_stmt  */
#line 3375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 30785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 298: /* sp_cursor_stmt_lex: %empty  */
#line 3390 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 30796 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 299: /* $@36: %empty  */
#line 3400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 30807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 300: /* sp_cursor_stmt: sp_cursor_stmt_lex $@36 remember_name select remember_end  */
#line 3407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex == (yyvsp[-4].sp_cursor_stmt));
            Lex->pop_select(); //main select
            if (unlikely((yyvsp[-4].sp_cursor_stmt)->stmt_finalize(thd)))
              MYSQL_YYABORT;
	    if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyvsp[-4].sp_cursor_stmt)->set_expr_str(expr_str);
            }
            if (unlikely((yyvsp[-4].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;

            (yyval.sp_cursor_stmt)= (yyvsp[-4].sp_cursor_stmt);
          }
#line 30830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 301: /* sp_handler_type: EXIT_MARIADB_SYM  */
#line 3428 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::EXIT; }
#line 30836 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 302: /* sp_handler_type: CONTINUE_MARIADB_SYM  */
#line 3429 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::CONTINUE; }
#line 30842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 303: /* sp_handler_type: EXIT_ORACLE_SYM  */
#line 3430 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::EXIT; }
#line 30848 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 304: /* sp_handler_type: CONTINUE_ORACLE_SYM  */
#line 3431 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::CONTINUE; }
#line 30854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 305: /* sp_hcond_list: sp_hcond_element  */
#line 3437 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 30860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 306: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 3439 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 30866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 307: /* sp_hcond_element: sp_hcond  */
#line 3444 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 30882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 308: /* sp_cond: ulong_num  */
#line 3459 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 310: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 3471 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 311: /* opt_value: %empty  */
#line 3490 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 30921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 312: /* opt_value: VALUE_SYM  */
#line 3491 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 30927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 313: /* sp_hcond: sp_cond  */
#line 3496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 30935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 314: /* sp_hcond: ident  */
#line 3500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 30945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 315: /* sp_hcond: SQLWARNING_SYM  */
#line 3506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 316: /* sp_hcond: not FOUND_SYM  */
#line 3512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 317: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 3518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 318: /* sp_hcond: OTHERS_ORACLE_SYM  */
#line 3524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 30985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 319: /* raise_stmt_oracle: RAISE_ORACLE_SYM opt_set_signal_information  */
#line 3534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 30994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 320: /* raise_stmt_oracle: RAISE_ORACLE_SYM signal_value opt_set_signal_information  */
#line 3539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 31003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 321: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 3547 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 31012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 322: /* signal_value: ident  */
#line 3555 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spcondvalue)= Lex->stmt_signal_value((yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 323: /* signal_value: sqlstate  */
#line 3560 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 31027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 324: /* opt_signal_value: %empty  */
#line 3565 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= NULL; }
#line 31033 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 325: /* opt_signal_value: signal_value  */
#line 3567 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 31039 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 326: /* opt_set_signal_information: %empty  */
#line 3572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 31047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 328: /* signal_information_item_list: signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3580 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 31059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 329: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 31073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 330: /* signal_allowed_expr: literal  */
#line 3605 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 31079 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 331: /* signal_allowed_expr: variable  */
#line 3607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 31101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 332: /* signal_allowed_expr: simple_ident  */
#line 3625 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 31107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 333: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3631 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 31113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 334: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3633 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 31119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 335: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3635 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 31125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 336: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3637 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 31131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 337: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3639 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 31137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 338: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 3641 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 31143 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 339: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3643 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 31149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 340: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 3645 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 31155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 341: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 3647 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 31161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 342: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 3649 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 31167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 343: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3651 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 31173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 344: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3653 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 31179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 345: /* signal_condition_information_item_name: ROW_NUMBER_SYM  */
#line 3655 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_ROW_NUMBER; }
#line 31185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 346: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 3660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 31194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 347: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM diagnostics_information  */
#line 3668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 31210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 348: /* which_area: %empty  */
#line 3683 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 31216 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 349: /* which_area: CURRENT_SYM  */
#line 3685 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 31222 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 350: /* diagnostics_information: statement_information  */
#line 3690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 31232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 351: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 3696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 31242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 352: /* statement_information: statement_information_item  */
#line 3705 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 31253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 353: /* statement_information: statement_information ',' statement_information_item  */
#line 3712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 31263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 354: /* statement_information_item: simple_target_specification '=' statement_information_item_name  */
#line 3721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 31273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 355: /* simple_target_specification: ident_cli  */
#line 3730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 31282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 356: /* simple_target_specification: '@' ident_or_text  */
#line 3735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31297 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 357: /* statement_information_item_name: NUMBER_MARIADB_SYM  */
#line 3749 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 31303 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 358: /* statement_information_item_name: NUMBER_ORACLE_SYM  */
#line 3751 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 31309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 359: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 3753 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 31315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 360: /* condition_number: signal_allowed_expr  */
#line 3762 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 31321 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 361: /* condition_information: condition_information_item  */
#line 3767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 31332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 362: /* condition_information: condition_information ',' condition_information_item  */
#line 3774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 31342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 363: /* condition_information_item: simple_target_specification '=' condition_information_item_name  */
#line 3783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 31352 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 364: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3792 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 31358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 365: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3794 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 31364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 366: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3796 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 31370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 367: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3798 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 31376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 368: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3800 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 31382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 369: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 3802 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 31388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 370: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3804 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 31394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 371: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 3806 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 31400 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 372: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 3808 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 31406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 373: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 3810 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 31412 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 374: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3812 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 31418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 375: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3814 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 31424 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 376: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 3816 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 31430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 377: /* condition_information_item_name: ROW_NUMBER_SYM  */
#line 3818 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::ROW_NUMBER; }
#line 31436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 379: /* sp_decl_ident: keyword_sp_decl  */
#line 3824 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 31445 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 380: /* sp_decl_idents: sp_decl_ident  */
#line 3832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 31461 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 381: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 3844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 31477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 382: /* $@37: %empty  */
#line 3859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 31487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 383: /* sp_proc_stmt_if: IF_SYM $@37 sp_if END IF_SYM  */
#line 3865 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->do_cont_backpatch(); }
#line 31493 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 384: /* $@38: %empty  */
#line 3869 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            /*
              We should not push main select here, it will be done or not
              done by the statement, we just provide only a new LEX for the
              statement here as if it is start of parsing a new statement.
            */
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 31510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 385: /* sp_proc_stmt_statement: $@38 sp_statement  */
#line 3882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 388: /* $@39: %empty  */
#line 3897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= (yyvsp[0].expr_lex)->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, (yyvsp[0].expr_lex)->spcont,
                                                          (yyvsp[0].expr_lex)->get_item(), (yyvsp[0].expr_lex))))
              MYSQL_YYABORT;
          }
#line 31531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 389: /* sp_proc_stmt_return: RETURN_ALLMODES_SYM expr_lex $@39  */
#line 3903 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 31537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 390: /* sp_proc_stmt_return: RETURN_ORACLE_SYM  */
#line 3905 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 31549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 391: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM  */
#line 3916 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, nullptr, empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 31558 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 392: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident  */
#line 3921 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), nullptr,
                                                empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 31568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 393: /* $@40: %empty  */
#line 3927 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, (yyvsp[0].expr_lex)->get_item(),
                                               (yyvsp[0].expr_lex)->get_expr_str())))
              MYSQL_YYABORT;
          }
#line 31578 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 394: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM WHEN_SYM expr_lex $@40  */
#line 3932 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 31584 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 395: /* $@41: %empty  */
#line 3934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].expr_lex)->get_item(),
                                               (yyvsp[0].expr_lex)->get_expr_str())))
              MYSQL_YYABORT;
          }
#line 31594 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 396: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident WHEN_SYM expr_lex $@41  */
#line 3939 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 31600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 397: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM  */
#line 3944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd)))
              MYSQL_YYABORT;
          }
#line 31609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 398: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident  */
#line 3949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 399: /* $@42: %empty  */
#line 3954 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd)))
              MYSQL_YYABORT;
          }
#line 31627 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 400: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM WHEN_SYM expr_lex $@42  */
#line 3958 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 31633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 401: /* $@43: %empty  */
#line 3960 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd, &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 402: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident WHEN_SYM expr_lex $@43  */
#line 3964 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 31648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 403: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 3970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 404: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 3978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 405: /* sp_proc_stmt_goto_oracle: GOTO_ORACLE_SYM label_ident  */
#line 3986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 406: /* @44: %empty  */
#line 3994 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.expr_lex)= new (thd->mem_root)
                           sp_expr_lex(thd, thd->lex))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd, (yyval.expr_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 31689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 407: /* expr_lex: @44 remember_start_opt expr remember_end  */
#line 4004 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_lex)= (yyvsp[-3].expr_lex);
            (yyval.expr_lex)->set_item((yyvsp[-1].item));

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.expr_lex)->set_expr_str(expr_str);
            }

            Lex->pop_select(); //min select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if ((yyval.expr_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31713 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 408: /* assignment_source_lex: %empty  */
#line 4027 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 31724 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 409: /* $@45: %empty  */
#line 4037 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 31735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 410: /* assignment_source_expr: assignment_source_lex $@45 remember_cpp_ptr expr remember_end  */
#line 4044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-4].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-4].assignment_lex);
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[-1].item), thd->free_list);

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.assignment_lex)->set_expr_str(expr_str);
            }

            thd->free_list= NULL;
            Lex->pop_select(); //min select
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 31759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 411: /* $@46: %empty  */
#line 4067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 31770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 412: /* for_loop_bound_expr: assignment_source_lex $@46 remember_cpp_ptr expr remember_end  */
#line 4074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-4].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-4].assignment_lex);
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[-1].item), nullptr);

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.assignment_lex)->set_expr_str(expr_str);
            }

            Lex->pop_select(); //main select
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 31794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 413: /* cursor_actual_parameters: assignment_source_expr  */
#line 4097 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 31804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 414: /* cursor_actual_parameters: cursor_actual_parameters ',' assignment_source_expr  */
#line 4103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 31813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 415: /* opt_parenthesized_cursor_actual_parameters: %empty  */
#line 4110 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= NULL; }
#line 31819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 416: /* opt_parenthesized_cursor_actual_parameters: '(' cursor_actual_parameters ')'  */
#line 4111 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 31825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 420: /* sp_proc_stmt_open: OPEN_SYM ident opt_parenthesized_cursor_actual_parameters  */
#line 4122 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 31834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 421: /* sp_proc_stmt_fetch_head: FETCH_SYM ident INTO  */
#line 4130 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 422: /* sp_proc_stmt_fetch_head: FETCH_SYM FROM ident INTO  */
#line 4135 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 423: /* sp_proc_stmt_fetch_head: FETCH_SYM NEXT_SYM FROM ident INTO  */
#line 4140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 424: /* sp_proc_stmt_fetch: sp_proc_stmt_fetch_head sp_fetch_list  */
#line 4147 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 31867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 425: /* sp_proc_stmt_fetch: FETCH_SYM GROUP_SYM NEXT_SYM ROW_SYM  */
#line 4149 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 31876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 426: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 4157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 31895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 427: /* sp_fetch_list: ident  */
#line 4175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 31915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 428: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 4191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 31935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 429: /* $@47: %empty  */
#line 4210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_if_expr(thd)))
              MYSQL_YYABORT;
          }
#line 31944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 430: /* $@48: %empty  */
#line 4215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-3].expr_lex)->sp_if_after_statements(thd)))
              MYSQL_YYABORT;
          }
#line 31953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 431: /* sp_if: expr_lex THEN_SYM $@47 sp_if_then_statements $@48 sp_elseifs  */
#line 4220 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 31963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 436: /* $@49: %empty  */
#line 4236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 32017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 437: /* case_stmt_specification: CASE_SYM $@49 case_stmt_body else_clause_opt END CASE_SYM  */
#line 4289 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 32035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 438: /* $@50: %empty  */
#line 4306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_expr()))
              MYSQL_YYABORT;
          }
#line 32044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 439: /* case_stmt_body: expr_lex $@50 simple_when_clause_list  */
#line 4311 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 32050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 440: /* case_stmt_body: searched_when_clause_list  */
#line 4313 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 32056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 445: /* $@51: %empty  */
#line 4328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Simple case: <caseval> = <whenval> */
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(true)))
              MYSQL_YYABORT;
          }
#line 32066 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 446: /* simple_when_clause: WHEN_SYM expr_lex $@51 THEN_SYM sp_case_then_statements  */
#line 4335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 32075 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 447: /* $@52: %empty  */
#line 4343 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(false)))
              MYSQL_YYABORT;
          }
#line 32084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 448: /* searched_when_clause: WHEN_SYM expr_lex $@52 THEN_SYM sp_case_then_statements  */
#line 4349 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 32093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 449: /* else_clause_opt: %empty  */
#line 4357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 32108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 451: /* sp_opt_label: %empty  */
#line 4371 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= null_clex_str; }
#line 32114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 452: /* sp_opt_label: label_ident  */
#line 4372 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 32120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 453: /* opt_sp_for_loop_direction: %empty  */
#line 4377 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 32126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 454: /* opt_sp_for_loop_direction: REVERSE_SYM  */
#line 4378 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= -1; }
#line 32132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 455: /* sp_for_loop_index_and_bounds: ident_for_loop_index sp_for_loop_bounds  */
#line 4383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 32141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 456: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr DOT_DOT_SYM for_loop_bound_expr  */
#line 4392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 32149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 457: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr  */
#line 4396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 32160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 458: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction '(' sp_cursor_stmt ')'  */
#line 4403 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 32170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 459: /* loop_body: sp_proc_stmts1 END LOOP_SYM  */
#line 4412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 32185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 460: /* repeat_body: sp_proc_stmts1 UNTIL_SYM expr_lex END REPEAT_SYM  */
#line 4426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].expr_lex)->sp_repeat_loop_finalize(thd))
              MYSQL_YYABORT;
          }
#line 32194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 461: /* pop_sp_loop_label: sp_opt_label  */
#line 4434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 32203 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 462: /* $@53: %empty  */
#line 4442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 463: /* sp_labeled_control: sp_control_label LOOP_SYM $@53 loop_body pop_sp_loop_label  */
#line 4447 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 464: /* $@54: %empty  */
#line 4449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 465: /* sp_labeled_control: sp_control_label WHILE_SYM $@54 while_body pop_sp_loop_label  */
#line 4454 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32233 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 466: /* $@55: %empty  */
#line 4456 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 32242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 467: /* $@56: %empty  */
#line 4461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 32253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 468: /* $@57: %empty  */
#line 4468 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 32262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 469: /* sp_labeled_control: sp_control_label FOR_SYM $@55 sp_for_loop_index_and_bounds $@56 for_loop_statements $@57 pop_sp_loop_label  */
#line 4473 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-4].for_loop))))
              MYSQL_YYABORT;
          }
#line 32271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 470: /* $@58: %empty  */
#line 4478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 471: /* sp_labeled_control: sp_control_label REPEAT_SYM $@58 repeat_body pop_sp_loop_label  */
#line 4483 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32286 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 472: /* $@59: %empty  */
#line 4488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 473: /* sp_unlabeled_control: LOOP_SYM $@59 loop_body  */
#line 4493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 32303 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 474: /* $@60: %empty  */
#line 4497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 475: /* sp_unlabeled_control: WHILE_SYM $@60 while_body  */
#line 4502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 32320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 476: /* $@61: %empty  */
#line 4506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 32331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 477: /* $@62: %empty  */
#line 4513 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 32342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 478: /* sp_unlabeled_control: FOR_SYM $@61 sp_for_loop_index_and_bounds $@62 for_loop_statements  */
#line 4520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 32354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 479: /* $@63: %empty  */
#line 4528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 480: /* sp_unlabeled_control: REPEAT_SYM $@63 repeat_body  */
#line 4533 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 32371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 481: /* trg_action_time: BEFORE_SYM  */
#line 4540 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 32377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 482: /* trg_action_time: AFTER_SYM  */
#line 4542 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 32383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 483: /* trg_event: INSERT  */
#line 4547 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 32389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 484: /* trg_event: UPDATE_SYM  */
#line 4549 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 32395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 485: /* trg_event: DELETE_SYM  */
#line 4551 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 32401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 486: /* $@64: %empty  */
#line 4556 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.option_list= NULL; }
#line 32407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 487: /* create_body: create_field_list_parens $@64 opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4557 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 32413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 488: /* create_body: opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4558 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 32419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 489: /* create_body: create_like  */
#line 4560 "/home/buildbot/git/sql/sql_yacc.yy"
          {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 32434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 490: /* create_like: LIKE table_ident  */
#line 4573 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[0].table); }
#line 32440 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 491: /* create_like: LEFT_PAREN_LIKE LIKE table_ident ')'  */
#line 4574 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[-1].table); }
#line 32446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 492: /* opt_create_select: %empty  */
#line 4578 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 493: /* opt_create_select: opt_duplicate opt_as create_select_query_expression opt_versioning_option  */
#line 4581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.add(DDL_options_st::OPT_CREATE_SELECT);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 32462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 494: /* create_select_query_expression: query_expression  */
#line 4590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 32471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 495: /* create_select_query_expression: LEFT_PAREN_WITH with_clause query_expression_no_with_clause ')'  */
#line 4595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 32483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 496: /* opt_create_partitioning: opt_partitioning  */
#line 4606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 32497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 497: /* opt_partitioning: %empty  */
#line 4642 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 499: /* $@65: %empty  */
#line 4648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 32518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 501: /* have_partitioning: %empty  */
#line 4663 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 32534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 502: /* $@66: %empty  */
#line 4678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 32552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 503: /* partition_entry: PARTITION_SYM $@66 partition  */
#line 4692 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 32560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 504: /* $@67: %empty  */
#line 4699 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->safe_to_cache_query= 1; }
#line 32566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 506: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' part_field_list ')'  */
#line 4705 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 32577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 507: /* $@68: %empty  */
#line 4712 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= HASH_PARTITION; }
#line 32583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 508: /* part_type_def: opt_linear HASH_SYM $@68 part_func  */
#line 4713 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 32589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 509: /* part_type_def: RANGE_SYM part_func  */
#line 4715 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 32595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 510: /* part_type_def: RANGE_SYM part_column_list  */
#line 4717 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 32601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 511: /* $@69: %empty  */
#line 4719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 32609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 512: /* part_type_def: LIST_SYM $@69 part_func  */
#line 4723 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 32618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 513: /* part_type_def: LIST_SYM part_column_list  */
#line 4728 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= LIST_PARTITION; }
#line 32624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 514: /* $@70: %empty  */
#line 4730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 32633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 516: /* opt_linear: %empty  */
#line 4738 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 517: /* opt_linear: LINEAR_SYM  */
#line 4740 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->linear_hash_ind= TRUE;}
#line 32645 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 518: /* opt_key_algo: %empty  */
#line 4745 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 32651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 519: /* opt_key_algo: ALGORITHM_SYM '=' real_ulong_num  */
#line 4747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 32669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 520: /* part_field_list: %empty  */
#line 4763 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 521: /* part_field_list: part_field_item_list  */
#line 4764 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 32681 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 522: /* part_field_item_list: part_field_item  */
#line 4768 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32687 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 523: /* part_field_item_list: part_field_item_list ',' part_field_item  */
#line 4769 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 32693 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 524: /* part_field_item: ident  */
#line 4774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 32708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 525: /* part_column_list: COLUMNS '(' part_field_list ')'  */
#line 4788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 32718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 526: /* part_func: '(' part_func_expr ')'  */
#line 4798 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 32730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 527: /* sub_part_func: '(' part_func_expr ')'  */
#line 4809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 32739 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 528: /* opt_num_parts: %empty  */
#line 4817 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32745 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 529: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 4819 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 32759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 530: /* opt_sub_part: %empty  */
#line 4831 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32765 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 531: /* $@71: %empty  */
#line 4833 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 32771 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 532: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM sub_part_func $@71 opt_num_subparts  */
#line 4834 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 32777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 533: /* $@72: %empty  */
#line 4837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 32787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 534: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' sub_part_field_list ')' $@72 opt_num_subparts  */
#line 4842 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 32793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 535: /* sub_part_field_list: sub_part_field_item  */
#line 4846 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 32799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 536: /* sub_part_field_list: sub_part_field_list ',' sub_part_field_item  */
#line 4847 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 32805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 537: /* sub_part_field_item: ident  */
#line 4852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 32820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 538: /* part_func_expr: bit_expr  */
#line 4866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 32833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 539: /* opt_num_subparts: %empty  */
#line 4877 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 540: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 4879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 32852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 541: /* part_defs: %empty  */
#line 4891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 32866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 542: /* part_defs: '(' part_def_list ')'  */
#line 4901 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 32889 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 543: /* part_def_list: part_definition  */
#line 4922 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 32895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 544: /* part_def_list: part_def_list ',' part_definition  */
#line 4923 "/home/buildbot/git/sql/sql_yacc.yy"
                                            {}
#line 32901 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 547: /* $@73: %empty  */
#line 4933 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 32921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 548: /* part_definition: opt_partition $@73 part_name opt_part_values opt_part_options opt_sub_partition  */
#line 4952 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 32927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 549: /* part_name: ident  */
#line 4957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= (yyvsp[0].ident_sys).str;
          }
#line 32939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 550: /* opt_part_values: %empty  */
#line 4968 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 32959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 551: /* $@74: %empty  */
#line 4984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 32976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 552: /* opt_part_values: VALUES_LESS_SYM THAN_SYM $@74 part_func_max  */
#line 4996 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 32982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 553: /* $@75: %empty  */
#line 4998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 32999 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 554: /* opt_part_values: VALUES_IN_SYM $@75 part_values_in  */
#line 5010 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 33005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 555: /* opt_part_values: CURRENT_SYM  */
#line 5012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
#endif
          }
#line 33016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 556: /* opt_part_values: HISTORY_SYM  */
#line 5019 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
#endif
          }
#line 33027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 557: /* opt_part_values: DEFAULT  */
#line 5026 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 33048 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 558: /* part_func_max: MAXVALUE_SYM  */
#line 5046 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 33070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 559: /* part_func_max: part_value_item  */
#line 5063 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 560: /* part_values_in: part_value_item  */
#line 5068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 33107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 561: /* part_values_in: '(' part_value_list ')'  */
#line 5095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 33120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 562: /* part_value_list: part_value_item  */
#line 5106 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 563: /* part_value_list: part_value_list ',' part_value_item  */
#line 5107 "/home/buildbot/git/sql/sql_yacc.yy"
                                              {}
#line 33132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 564: /* $@76: %empty  */
#line 5112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 33146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 565: /* $@77: %empty  */
#line 5121 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 33152 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 566: /* part_value_item: '(' $@76 part_value_item_list $@77 ')'  */
#line 5123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 33177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 567: /* part_value_item_list: part_value_expr_item  */
#line 5146 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 33183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 568: /* part_value_item_list: part_value_item_list ',' part_value_expr_item  */
#line 5147 "/home/buildbot/git/sql/sql_yacc.yy"
                                                        {}
#line 33189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 569: /* part_value_expr_item: MAXVALUE_SYM  */
#line 5152 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 33204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 570: /* part_value_expr_item: bit_expr  */
#line 5163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 33222 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 571: /* opt_sub_partition: %empty  */
#line 5181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 33240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 572: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 5195 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 33267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 573: /* sub_part_list: sub_part_definition  */
#line 5220 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 33273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 574: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 5221 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 33279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 575: /* $@78: %empty  */
#line 5226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 33316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 576: /* sub_part_definition: SUBPARTITION_SYM $@78 sub_name opt_subpart_options  */
#line 5258 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 33322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 577: /* sub_name: ident_or_text  */
#line 5263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name= (yyvsp[0].lex_str).str;
          }
#line 33332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 578: /* opt_part_options: %empty  */
#line 5271 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 579: /* opt_part_options: part_option_list  */
#line 5272 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 580: /* part_option_list: part_option_list part_option  */
#line 5276 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 33350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 581: /* part_option_list: part_option  */
#line 5277 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 582: /* part_option: server_part_option  */
#line 5281 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 33362 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 583: /* part_option: engine_defined_option  */
#line 5283 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->part_info->curr_part_elem->option_list,
                     &Lex->option_list_last);
          }
#line 33371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 584: /* opt_subpart_options: %empty  */
#line 5290 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 585: /* opt_subpart_options: subpart_option_list  */
#line 5291 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 33383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 586: /* subpart_option_list: subpart_option_list server_part_option  */
#line 5295 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 33389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 587: /* subpart_option_list: server_part_option  */
#line 5296 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 33395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 588: /* server_part_option: TABLESPACE opt_equal ident_or_text  */
#line 5301 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatibility with MySQL */ }
#line 33401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 589: /* server_part_option: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 33411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 590: /* server_part_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 33421 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 591: /* server_part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5315 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 33427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 592: /* server_part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 5317 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 33433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 593: /* server_part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 5319 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 33439 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 594: /* server_part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5321 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 33445 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 595: /* server_part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5323 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 33451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 596: /* server_part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5325 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 33457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 597: /* opt_versioning_rotation: %empty  */
#line 5329 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 33463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 598: /* $@79: %empty  */
#line 5330 "/home/buildbot/git/sql/sql_yacc.yy"
         { Lex->clause_that_disallows_subselect= "INTERVAL"; }
#line 33469 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 599: /* opt_versioning_rotation: $@79 INTERVAL_SYM expr interval opt_versioning_interval_start opt_vers_auto_part  */
#line 5332 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-3].item), (yyvsp[-2].interval), (yyvsp[-1].item), (yyvsp[0].num),
                                                     table_name)))
             MYSQL_YYABORT;
         }
#line 33481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 600: /* opt_versioning_rotation: LIMIT ulonglong_num opt_vers_auto_part  */
#line 5340 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_limit((yyvsp[-1].ulonglong_number), (yyvsp[0].num), table_name)))
             MYSQL_YYABORT;
         }
#line 33492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 601: /* opt_versioning_interval_start: %empty  */
#line 5351 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= NULL;
         }
#line 33500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 602: /* opt_versioning_interval_start: STARTS_SYM literal  */
#line 5355 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= (yyvsp[0].item);
         }
#line 33508 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 603: /* opt_vers_auto_part: %empty  */
#line 5362 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 0;
         }
#line 33516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 604: /* opt_vers_auto_part: AUTO_SYM  */
#line 5366 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 1;
         }
#line 33524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 605: /* opt_as: %empty  */
#line 5375 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 606: /* opt_as: AS  */
#line 5376 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 33536 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 607: /* opt_create_database_options: %empty  */
#line 5380 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33542 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 608: /* opt_create_database_options: create_database_options  */
#line 5381 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 33548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 609: /* create_database_options: create_database_option  */
#line 5385 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 33554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 610: /* create_database_options: create_database_options create_database_option  */
#line 5386 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 33560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 611: /* create_database_option: default_collation  */
#line 5390 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 33566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 612: /* create_database_option: default_charset  */
#line 5391 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 613: /* create_database_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5393 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 33581 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 614: /* opt_if_not_exists_table_element: %empty  */
#line 5401 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= FALSE;
          }
#line 33589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 615: /* opt_if_not_exists_table_element: IF_SYM not EXISTS  */
#line 5405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= TRUE;
          }
#line 33597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 616: /* opt_if_not_exists: %empty  */
#line 5412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 33605 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 617: /* opt_if_not_exists: IF_SYM not EXISTS  */
#line 5416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 33613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 618: /* create_or_replace: CREATE  */
#line 5423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 33621 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 619: /* create_or_replace: CREATE OR_SYM REPLACE  */
#line 5427 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 33629 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 627: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 5450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 33648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 628: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 5465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 33657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 629: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 5470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 33666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 630: /* create_table_option: AVG_ROW_LENGTH opt_equal ulong_num  */
#line 5475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 33675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 631: /* create_table_option: PASSWORD_SYM opt_equal TEXT_STRING_sys  */
#line 5480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 33684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 632: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5485 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 33693 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 633: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 5490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 33702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 634: /* create_table_option: PACK_KEYS_SYM opt_equal ulong_num  */
#line 5495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 33721 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 635: /* create_table_option: PACK_KEYS_SYM opt_equal DEFAULT  */
#line 5510 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 33731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 636: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ulong_num  */
#line 5516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 33750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 637: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal DEFAULT  */
#line 5531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 33759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 638: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ulong_num  */
#line 5536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 33778 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 639: /* create_table_option: STATS_PERSISTENT_SYM opt_equal DEFAULT  */
#line 5551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 33788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 640: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 5557 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 33810 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 641: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT  */
#line 5575 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 33819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 642: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 5580 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 33828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 643: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 5585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 33837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 644: /* create_table_option: PAGE_CHECKSUM_SYM opt_equal choice  */
#line 5590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 33846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 645: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 5595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 33855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 646: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 5600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 33864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 647: /* $@80: %empty  */
#line 5605 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 33872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 648: /* create_table_option: UNION_SYM opt_equal $@80 '(' opt_table_list ')'  */
#line 5609 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 33898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 651: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 5633 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 33907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 652: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 33916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 653: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 33925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 654: /* create_table_option: TABLESPACE ident  */
#line 5648 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatiblity with MySQL */ }
#line 33931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 655: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 5650 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_DISK;}
#line 33937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 656: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 5652 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 33943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 657: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 33953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 658: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 5660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 33962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 659: /* create_table_option: TRANSACTIONAL_SYM opt_equal choice  */
#line 5665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 33971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 660: /* create_table_option: engine_defined_option  */
#line 5670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->create_info.option_list, &Lex->option_list_last);
          }
#line 33979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 661: /* create_table_option: SEQUENCE_SYM opt_equal choice  */
#line 5674 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
          }
#line 33988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 663: /* engine_defined_option: ident_options equal TEXT_STRING_sys  */
#line 5683 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].lex_str), true);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 33999 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 664: /* engine_defined_option: ident_options equal ident  */
#line 5690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), false);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 665: /* engine_defined_option: ident_options equal real_ulonglong_num  */
#line 5697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys), (yyvsp[0].ulonglong_number), thd->mem_root);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 666: /* engine_defined_option: ident_options equal DEFAULT  */
#line 5702 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value((yyvsp[-2].ident_sys));
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 668: /* ident_options: keyword_options  */
#line 5711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 34037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 673: /* versioning_option: WITH_SYSTEM_SYM VERSIONING_SYM  */
#line 5732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (!DBUG_IF("sysvers_force"))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 34057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 674: /* default_charset: opt_default charset opt_equal charset_name_or_default  */
#line 5751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.add_table_option_default_charset(
                           thd, thd->variables.character_set_collations, (yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 34067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 675: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name_or_default  */
#line 5760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_specification_st *cinfo= &Lex->create_info;
            if (unlikely(cinfo->add_table_option_default_collation(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_extended_collation))))
              MYSQL_YYABORT;
          }
#line 34078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 676: /* storage_engines: ident_or_text  */
#line 5770 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 34089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 677: /* known_storage_engines: ident_or_text  */
#line 5780 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 34101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 678: /* row_types: DEFAULT  */
#line 5790 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 34107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 679: /* row_types: FIXED_SYM  */
#line 5791 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 34113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 680: /* row_types: DYNAMIC_SYM  */
#line 5792 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 34119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 681: /* row_types: COMPRESSED_SYM  */
#line 5793 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 34125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 682: /* row_types: REDUNDANT_SYM  */
#line 5794 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 34131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 683: /* row_types: COMPACT_SYM  */
#line 5795 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 34137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 684: /* row_types: PAGE_SYM  */
#line 5796 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 34143 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 685: /* merge_insert_types: NO_SYM  */
#line 5800 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 34149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 686: /* merge_insert_types: FIRST_SYM  */
#line 5801 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 34155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 687: /* merge_insert_types: LAST_SYM  */
#line 5802 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 34161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 688: /* udf_type: STRING_SYM  */
#line 5806 "/home/buildbot/git/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 34167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 689: /* udf_type: REAL  */
#line 5807 "/home/buildbot/git/sql/sql_yacc.yy"
               {(yyval.num) = (int) REAL_RESULT; }
#line 34173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 690: /* udf_type: DECIMAL_SYM  */
#line 5808 "/home/buildbot/git/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 34179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 691: /* udf_type: INT_SYM  */
#line 5809 "/home/buildbot/git/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 34185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 692: /* create_field_list: field_list  */
#line 5815 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 34193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 693: /* create_field_list_parens: LEFT_PAREN_ALT field_list ')'  */
#line 5822 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 34201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 696: /* field_list_item: column_def  */
#line 5833 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 34207 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 700: /* field_list_item: PERIOD_SYM period_for_application_time  */
#line 5837 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { }
#line 34213 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 701: /* column_def: field_spec  */
#line 5842 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.create_field)= (yyvsp[0].create_field); }
#line 34219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 702: /* column_def: field_spec opt_constraint references  */
#line 5844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_column_foreign_key(&((yyvsp[-2].create_field)->field_name), &(yyvsp[-1].lex_str),
                                                     (yyvsp[0].table), DDL_options())))
              MYSQL_YYABORT;
            (yyval.create_field)= (yyvsp[-2].create_field);
          }
#line 34230 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 703: /* $@81: %empty  */
#line 5854 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 704: /* key_def: key_or_index opt_if_not_exists opt_ident opt_USING_key_algorithm $@81 '(' key_list ')' normal_key_options  */
#line 5859 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 34246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 705: /* $@82: %empty  */
#line 5861 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 706: /* key_def: key_or_index opt_if_not_exists ident TYPE_SYM btree_or_rtree $@82 '(' key_list ')' normal_key_options  */
#line 5866 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 34262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 707: /* $@83: %empty  */
#line 5868 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 708: /* key_def: fulltext opt_key_or_index opt_if_not_exists opt_ident $@83 '(' key_list ')' fulltext_key_options  */
#line 5873 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { }
#line 34278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 709: /* $@84: %empty  */
#line 5875 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34288 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 710: /* key_def: spatial opt_key_or_index opt_if_not_exists opt_ident $@84 '(' key_list ')' spatial_key_options  */
#line 5880 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 34294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 711: /* $@85: %empty  */
#line 5884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34304 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 712: /* key_def: opt_constraint constraint_key_type opt_if_not_exists opt_ident opt_USING_key_algorithm $@85 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 5889 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 34310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 713: /* $@86: %empty  */
#line 5892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 714: /* key_def: opt_constraint constraint_key_type opt_if_not_exists ident TYPE_SYM btree_or_rtree $@86 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 5897 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 34326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 715: /* $@87: %empty  */
#line 5899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 34340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 716: /* key_def: opt_constraint FOREIGN KEY_SYM opt_if_not_exists opt_ident $@87 '(' key_list ')' references  */
#line 5909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_table_foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                                    (yyvsp[-9].lex_str).str ? &(yyvsp[-9].lex_str) : &(yyvsp[-5].lex_str), (yyvsp[0].table), (yyvsp[-6].object_ddl_options))))
               MYSQL_YYABORT;
          }
#line 34350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 717: /* constraint_def: opt_constraint check_constraint  */
#line 5918 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 34358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 718: /* period_for_system_time: PERIOD_SYM FOR_SYSTEM_TIME_SYM '(' ident ',' ident ')'  */
#line 5926 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period((yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys));
          }
#line 34367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 719: /* period_for_application_time: FOR_SYM ident '(' ident ',' ident ')'  */
#line 5934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_period((yyvsp[-5].ident_sys), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 34376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 720: /* opt_check_constraint: %empty  */
#line 5941 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 34382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 721: /* opt_check_constraint: check_constraint  */
#line 5942 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 34388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 722: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 5947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 34399 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 723: /* opt_constraint_no_id: %empty  */
#line 5956 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34405 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 724: /* opt_constraint_no_id: CONSTRAINT  */
#line 5957 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 34411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 725: /* opt_constraint: %empty  */
#line 5961 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 34417 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 726: /* opt_constraint: constraint  */
#line 5962 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 34423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 727: /* constraint: CONSTRAINT opt_ident  */
#line 5966 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 34429 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 728: /* @88: %empty  */
#line 5971 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str));
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 34449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 729: /* field_spec: field_ident @88 field_type_or_serial opt_check_constraint  */
#line 5987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 34472 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 730: /* $@89: %empty  */
#line 6009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                             COLUMN_DEFINITION_TABLE_FIELD);
          }
#line 34481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 731: /* field_type_or_serial: qualified_field_type $@89 field_def  */
#line 6014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            auto tmp= (yyvsp[-2].Lex_field_type).charset_collation_attrs();
            if (tmp.merge_column_charset_clause_and_collate_clause(
                     thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
            Lex->last_field->set_charset_collation_attrs(
                               thd, thd->variables.character_set_collations,
                               tmp);
          }
#line 34495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 732: /* $@90: %empty  */
#line 6024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_handler(&type_handler_ulonglong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 734: /* opt_serial_attribute: %empty  */
#line 6034 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 735: /* opt_serial_attribute: opt_serial_attribute_list  */
#line 6035 "/home/buildbot/git/sql/sql_yacc.yy"
                                    {}
#line 34518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 736: /* opt_serial_attribute_list: opt_serial_attribute_list serial_attribute  */
#line 6039 "/home/buildbot/git/sql/sql_yacc.yy"
                                                     {}
#line 34524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 738: /* opt_asrow_attribute: %empty  */
#line 6044 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 739: /* opt_asrow_attribute: opt_asrow_attribute_list  */
#line 6045 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 34536 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 740: /* opt_asrow_attribute_list: opt_asrow_attribute_list asrow_attribute  */
#line 6049 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 34542 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 742: /* field_def: %empty  */
#line 6054 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 34548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 744: /* field_def: attribute_list compressed_deprecated_column_attribute  */
#line 6056 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs); }
#line 34554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 745: /* field_def: attribute_list compressed_deprecated_column_attribute attribute_list  */
#line 6058 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-2].Lex_exact_charset_extended_collation_attrs)).merge_column_collate_clause_and_collate_clause(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
          }
#line 34564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 746: /* $@91: %empty  */
#line 6064 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
         }
#line 34572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 747: /* field_def: opt_generated_always AS virtual_column_func $@91 vcol_opt_specifier vcol_opt_attribute  */
#line 6068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 34580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 748: /* field_def: opt_generated_always AS ROW_SYM START_SYM opt_asrow_attribute  */
#line 6072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 34590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 749: /* field_def: opt_generated_always AS ROW_SYM END opt_asrow_attribute  */
#line 6078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 34600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 750: /* opt_generated_always: %empty  */
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 751: /* opt_generated_always: GENERATED_SYM ALWAYS_SYM  */
#line 6087 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 34612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 752: /* vcol_opt_specifier: %empty  */
#line 6092 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_VIRTUAL);
          }
#line 34620 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 753: /* vcol_opt_specifier: VIRTUAL_SYM  */
#line 6096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_VIRTUAL);
          }
#line 34628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 754: /* vcol_opt_specifier: PERSISTENT_SYM  */
#line 6100 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_STORED);
          }
#line 34636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 755: /* vcol_opt_specifier: STORED_SYM  */
#line 6104 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_STORED);
          }
#line 34644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 756: /* vcol_opt_attribute: %empty  */
#line 6110 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 757: /* vcol_opt_attribute: vcol_opt_attribute_list  */
#line 6111 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 34656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 758: /* vcol_opt_attribute_list: vcol_opt_attribute_list vcol_attribute  */
#line 6115 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 {}
#line 34662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 760: /* vcol_attribute: UNIQUE_SYM  */
#line 6121 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 761: /* vcol_attribute: UNIQUE_SYM KEY_SYM  */
#line 6127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 34682 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 762: /* vcol_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 6132 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 34688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 763: /* vcol_attribute: INVISIBLE_SYM  */
#line 6134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 34696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 764: /* $@92: %empty  */
#line 6141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 34711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 765: /* parse_vcol_expr: PARSE_VCOL_EXPR_SYM $@92 expr  */
#line 6152 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 34723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 767: /* parenthesized_expr: expr ',' expr_list  */
#line 6164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 34734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 768: /* virtual_column_func: '(' parenthesized_expr ')'  */
#line 6174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 34746 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 769: /* virtual_column_func: subquery  */
#line 6182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 34760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 773: /* column_default_expr: expr_or_literal  */
#line 6198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 34769 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 774: /* field_type: field_type_all  */
#line 6205 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
        }
#line 34777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 775: /* qualified_field_type: field_type_all  */
#line 6212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 34785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 776: /* qualified_field_type: sp_decl_ident '.' field_type_all  */
#line 6216 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 34794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 777: /* udt_name: IDENT_sys  */
#line 6223 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 34800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 778: /* udt_name: reserved_keyword_udt  */
#line 6224 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].kwd); }
#line 34806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 779: /* udt_name: non_reserved_keyword_udt  */
#line 6225 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].kwd); }
#line 34812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 785: /* field_type_all: udt_name float_options srid_option  */
#line 6235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].lex_str), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 34821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 786: /* field_type_numeric: int_type opt_field_length last_field_options  */
#line 6243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length_flags((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec), (uint32) (yyvsp[0].ulong_num));
          }
#line 34829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 787: /* field_type_numeric: real_type opt_precision last_field_options  */
#line 6246 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 34835 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 788: /* field_type_numeric: FLOAT_SYM float_options last_field_options  */
#line 6248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length() && !(yyvsp[-1].Lex_length_and_dec).has_explicit_dec())
            {
              if (unlikely((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if ((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 34853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 789: /* field_type_numeric: BIT_SYM opt_field_length  */
#line 6262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].Lex_length_and_dec));
          }
#line 34861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 790: /* field_type_numeric: BOOL_SYM  */
#line 6266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 34869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 791: /* field_type_numeric: BOOLEAN_SYM  */
#line 6270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 34877 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 792: /* field_type_numeric: DECIMAL_SYM float_options last_field_options  */
#line 6274 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 34883 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 793: /* field_type_numeric: NUMBER_ORACLE_SYM float_options last_field_options  */
#line 6276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 34894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 794: /* field_type_numeric: NUMERIC_SYM float_options last_field_options  */
#line 6283 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 34900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 795: /* field_type_numeric: FIXED_SYM float_options last_field_options  */
#line 6285 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 34906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 796: /* opt_binary_and_compression: %empty  */
#line 6290 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 34912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 797: /* opt_binary_and_compression: binary  */
#line 6291 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 34918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 798: /* opt_binary_and_compression: binary compressed_deprecated_data_type_attribute  */
#line 6292 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs); }
#line 34924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 799: /* opt_binary_and_compression: compressed opt_binary  */
#line 6293 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 34930 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 800: /* field_type_string: char opt_field_length opt_binary  */
#line 6298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 34938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 801: /* field_type_string: nchar opt_field_length opt_bin_mod  */
#line 6302 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 34947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 802: /* field_type_string: BINARY opt_field_length  */
#line 6307 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].Lex_length_and_dec), &my_charset_bin);
          }
#line 34955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 803: /* field_type_string: varchar opt_field_length opt_binary_and_compression  */
#line 6311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 34963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 804: /* field_type_string: VARCHAR2_ORACLE_SYM opt_field_length opt_binary_and_compression  */
#line 6315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 34971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 805: /* field_type_string: nvarchar opt_field_length opt_compressed opt_bin_mod  */
#line 6319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 34980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 806: /* field_type_string: VARBINARY opt_field_length opt_compressed  */
#line 6324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 34988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 807: /* field_type_string: RAW_ORACLE_SYM opt_field_length opt_compressed  */
#line 6328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 34996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 808: /* field_type_temporal: YEAR_SYM opt_field_length last_field_options  */
#line 6335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
            {
              if ((yyvsp[-1].Lex_length_and_dec).length() != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%u)", (uint) (yyvsp[-1].Lex_length_and_dec).length());
                warn_deprecated<1007>(thd, buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].Lex_length_and_dec));
          }
#line 35013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 809: /* field_type_temporal: DATE_SYM  */
#line 6347 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 35019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 810: /* field_type_temporal: TIME_SYM opt_field_length  */
#line 6349 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 35030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 811: /* field_type_temporal: TIMESTAMP opt_field_length  */
#line 6356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 35041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 812: /* field_type_temporal: DATETIME opt_field_length  */
#line 6363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].Lex_length_and_dec));
          }
#line 35049 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 813: /* field_type_lob: TINYBLOB opt_compressed  */
#line 6371 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny_blob, &my_charset_bin);
          }
#line 35057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 814: /* field_type_lob: BLOB_MARIADB_SYM opt_field_length opt_compressed  */
#line 6375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 35065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 815: /* field_type_lob: BLOB_ORACLE_SYM field_length opt_compressed  */
#line 6379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 35073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 816: /* field_type_lob: BLOB_ORACLE_SYM opt_compressed  */
#line 6383 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 35081 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 817: /* field_type_lob: MEDIUMBLOB opt_compressed  */
#line 6387 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 35089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 818: /* field_type_lob: LONGBLOB opt_compressed  */
#line 6391 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 35097 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 819: /* field_type_lob: LONG_SYM VARBINARY opt_compressed  */
#line 6395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 35105 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 820: /* field_type_lob: LONG_SYM varchar opt_binary_and_compression  */
#line 6399 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 821: /* field_type_lob: TINYTEXT opt_binary_and_compression  */
#line 6401 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_tiny_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35117 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 822: /* field_type_lob: TEXT_SYM opt_field_length opt_binary_and_compression  */
#line 6403 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 823: /* field_type_lob: MEDIUMTEXT opt_binary_and_compression  */
#line 6405 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 824: /* field_type_lob: LONGTEXT opt_binary_and_compression  */
#line 6407 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 825: /* field_type_lob: CLOB_ORACLE_SYM opt_binary_and_compression  */
#line 6409 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 826: /* field_type_lob: LONG_SYM opt_binary_and_compression  */
#line 6411 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 827: /* field_type_lob: JSON_SYM opt_compressed  */
#line 6413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob_json, &my_charset_utf8mb4_bin);
          }
#line 35155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 828: /* field_type_misc: ENUM '(' string_list ')' opt_binary  */
#line 6420 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_enum, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 829: /* field_type_misc: SET '(' string_list ')' opt_binary  */
#line 6422 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_set, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 830: /* char: CHAR_SYM  */
#line 6426 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 35173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 831: /* nchar: NCHAR_SYM  */
#line 6430 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 35179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 832: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 6431 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 35185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 833: /* varchar: char VARYING  */
#line 6435 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 35191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 834: /* varchar: VARCHAR  */
#line 6436 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 35197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 835: /* nvarchar: NATIONAL_SYM VARCHAR  */
#line 6440 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 35203 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 836: /* nvarchar: NVARCHAR_SYM  */
#line 6441 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 35209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 837: /* nvarchar: NCHAR_SYM VARCHAR  */
#line 6442 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 35215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 838: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 6443 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 35221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 839: /* nvarchar: NCHAR_SYM VARYING  */
#line 6444 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 35227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 840: /* int_type: INT_SYM  */
#line 6448 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slong; }
#line 35233 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 841: /* int_type: TINYINT  */
#line 6449 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_stiny; }
#line 35239 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 842: /* int_type: SMALLINT  */
#line 6450 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sshort; }
#line 35245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 843: /* int_type: MEDIUMINT  */
#line 6451 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sint24; }
#line 35251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 844: /* int_type: BIGINT  */
#line 6452 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slonglong; }
#line 35257 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 845: /* real_type: REAL  */
#line 6457 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 35267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 846: /* real_type: DOUBLE_SYM  */
#line 6462 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 35273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 847: /* real_type: DOUBLE_SYM PRECISION  */
#line 6463 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 35279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 848: /* srid_option: %empty  */
#line 6468 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->srid= 0; }
#line 35285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 849: /* srid_option: REF_SYSTEM_ID_SYM '=' NUM  */
#line 6471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->srid=atoi((yyvsp[0].lex_str).str);
          }
#line 35293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 850: /* float_options: %empty  */
#line 6477 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset();  }
#line 35299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 853: /* precision: '(' NUM ',' NUM ')'  */
#line 6483 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 35305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 854: /* field_options: %empty  */
#line 6487 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 35311 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 855: /* field_options: SIGNED_SYM  */
#line 6488 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 35317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 856: /* field_options: UNSIGNED  */
#line 6489 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG; }
#line 35323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 857: /* field_options: ZEROFILL  */
#line 6490 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 35329 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 858: /* field_options: UNSIGNED ZEROFILL  */
#line 6491 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 35335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 859: /* field_options: ZEROFILL UNSIGNED  */
#line 6492 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 35341 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 860: /* last_field_options: field_options  */
#line 6496 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->last_field->flags|= ((yyval.ulong_num)= (yyvsp[0].ulong_num)); }
#line 35347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 861: /* field_length_str: '(' LONG_NUM ')'  */
#line 6500 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 862: /* field_length_str: '(' ULONGLONG_NUM ')'  */
#line 6501 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 863: /* field_length_str: '(' DECIMAL_NUM ')'  */
#line 6502 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35365 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 864: /* field_length_str: '(' NUM ')'  */
#line 6503 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 35371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 865: /* field_length: field_length_str  */
#line 6506 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 35377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 866: /* field_scale: field_length_str  */
#line 6510 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set(NULL, (yyvsp[0].const_simple_string)); }
#line 35383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 867: /* opt_field_length: %empty  */
#line 6515 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset(); /* use default length */ }
#line 35389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 869: /* opt_field_scale: %empty  */
#line 6520 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.Lex_length_and_dec).reset(); }
#line 35395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 871: /* opt_precision: %empty  */
#line 6525 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec).reset(); }
#line 35401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 872: /* opt_precision: precision  */
#line 6526 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 35407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 873: /* attribute_list: attribute_list attribute  */
#line 6532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs)).merge_column_collate_clause_and_collate_clause(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
          }
#line 35417 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 875: /* attribute: NULL_SYM  */
#line 6542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags&= ~NOT_NULL_FLAG;
            Lex->last_field->explicitly_nullable= true;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 876: /* attribute: DEFAULT column_default_expr  */
#line 6548 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->default_value= (yyvsp[0].virtual_column);
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 877: /* attribute: ON UPDATE_SYM NOW_SYM opt_default_time_precision  */
#line 6553 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 878: /* attribute: AUTO_INC  */
#line 6560 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 879: /* attribute: SERIAL_SYM DEFAULT VALUE_SYM  */
#line 6562 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 880: /* attribute: COLLATE_SYM collation_name  */
#line 6569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 35473 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 881: /* attribute: serial_attribute  */
#line 6572 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35479 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 882: /* opt_compression_method: %empty  */
#line 6576 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= NULL; }
#line 35485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 883: /* opt_compression_method: equal ident  */
#line 6577 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 35491 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 884: /* opt_compressed: %empty  */
#line 6581 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 885: /* opt_compressed: compressed  */
#line 6582 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 35503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 886: /* opt_enable: %empty  */
#line 6586 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 887: /* opt_enable: ENABLE_SYM  */
#line 6587 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 35515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 888: /* compressed: COMPRESSED_SYM opt_compression_method  */
#line 6592 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 35524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 889: /* compressed_deprecated_data_type_attribute: COMPRESSED_SYM opt_compression_method  */
#line 6600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed_deprecated(thd, (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 35533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 890: /* compressed_deprecated_column_attribute: COMPRESSED_SYM opt_compression_method  */
#line 6608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->
                set_compressed_deprecated_column_attribute(thd, (yyvsp[-1].kwd).pos(), (yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 35543 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 891: /* asrow_attribute: not NULL_SYM opt_enable  */
#line 6617 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 35551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 892: /* asrow_attribute: opt_primary KEY_SYM  */
#line 6621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 895: /* serial_attribute: engine_defined_option  */
#line 6632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->last_field->option_list, &Lex->option_list_last);
          }
#line 35569 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 896: /* serial_attribute: with_or_without_system VERSIONING_SYM  */
#line 6636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 35583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 897: /* with_or_without_system: WITH_SYSTEM_SYM  */
#line 6649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 35593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 898: /* with_or_without_system: WITHOUT SYSTEM  */
#line 6655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 35603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 899: /* charset: CHAR_SYM SET  */
#line 6664 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.kwd)= (yyvsp[-1].kwd); }
#line 35609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 900: /* charset: CHARSET  */
#line 6665 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.kwd)= (yyvsp[0].kwd); }
#line 35615 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 901: /* charset_name: ident_or_text  */
#line 6670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str, MY_CS_PRIMARY,
                                                    MYF(utf8_flag)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 35626 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 902: /* charset_name: BINARY  */
#line 6676 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 35632 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 903: /* charset_name_or_default: charset_name  */
#line 6680 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.charset)=(yyvsp[0].charset);   }
#line 35638 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 904: /* charset_name_or_default: DEFAULT  */
#line 6681 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 35644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 905: /* opt_load_data_charset: %empty  */
#line 6685 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.charset)= NULL; }
#line 35650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 906: /* opt_load_data_charset: charset charset_name_or_default  */
#line 6686 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.charset)= (yyvsp[0].charset); }
#line 35656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 907: /* old_or_new_charset_name: ident_or_text  */
#line 6691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,
                                                    MYF(utf8_flag))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str).str))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 35669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 908: /* old_or_new_charset_name: BINARY  */
#line 6699 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 35675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 909: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 6703 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.charset)=(yyvsp[0].charset);   }
#line 35681 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 910: /* old_or_new_charset_name_or_default: DEFAULT  */
#line 6704 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 35687 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 911: /* collation_name: ident_or_text  */
#line 6709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_extended_collation).set_by_name((yyvsp[0].lex_str).str, thd->get_utf8_flag()))
              MYSQL_YYABORT;
          }
#line 35696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 912: /* collation_name_or_default: collation_name  */
#line 6716 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation)=(yyvsp[0].Lex_extended_collation); }
#line 35702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 913: /* collation_name_or_default: DEFAULT  */
#line 6717 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation).set_collate_default(); }
#line 35708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 914: /* opt_default: %empty  */
#line 6721 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 915: /* opt_default: DEFAULT  */
#line 6722 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 35720 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 916: /* charset_or_alias: charset charset_name  */
#line 6726 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.charset)= (yyvsp[0].charset); }
#line 35726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 917: /* charset_or_alias: ASCII_SYM  */
#line 6727 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.charset)= &my_charset_latin1; }
#line 35732 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 918: /* charset_or_alias: UNICODE_SYM  */
#line 6729 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 35741 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 919: /* opt_binary: %empty  */
#line 6736 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35747 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 921: /* binary: BYTE_SYM  */
#line 6742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset(&my_charset_bin));
          }
#line 35755 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 922: /* binary: charset_or_alias  */
#line 6746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset((yyvsp[0].charset)));
          }
#line 35763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 923: /* binary: charset_or_alias BINARY  */
#line 6750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[-1].charset))))
              MYSQL_YYABORT;
          }
#line 35772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 924: /* binary: BINARY  */
#line 6754 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.Lex_exact_charset_extended_collation_attrs).set_contextually_typed_binary_style(); }
#line 35778 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 925: /* binary: BINARY charset_or_alias  */
#line 6756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 35787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 926: /* binary: charset_or_alias COLLATE_SYM DEFAULT  */
#line 6761 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_default(
                 thd,
                 thd->variables.character_set_collations,
                 Lex_exact_charset((yyvsp[-2].charset)));
          }
#line 35798 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 927: /* binary: charset_or_alias COLLATE_SYM collation_name  */
#line 6768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].Lex_extended_collation).merge_exact_charset(
                     thd,
                     thd->variables.character_set_collations,
                     Lex_exact_charset((yyvsp[-2].charset))))
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 35811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 928: /* binary: COLLATE_SYM collation_name  */
#line 6777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 35819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 929: /* binary: COLLATE_SYM DEFAULT  */
#line 6781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_collate_default();
          }
#line 35827 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 930: /* opt_bin_mod: %empty  */
#line 6787 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= false; }
#line 35833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 931: /* opt_bin_mod: BINARY  */
#line 6788 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= true; }
#line 35839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 932: /* $@93: %empty  */
#line 6793 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 35851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 933: /* ws_nweights: '(' real_ulong_num $@93 ')'  */
#line 6801 "/home/buildbot/git/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 35857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 934: /* ws_level_flag_desc: ASC  */
#line 6805 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.ulong_num)= 0; }
#line 35863 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 935: /* ws_level_flag_desc: DESC  */
#line 6806 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 35869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 936: /* ws_level_flag_reverse: REVERSE_SYM  */
#line 6810 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 35875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 937: /* ws_level_flags: %empty  */
#line 6813 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 35881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 938: /* ws_level_flags: ws_level_flag_desc  */
#line 6814 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 939: /* ws_level_flags: ws_level_flag_desc ws_level_flag_reverse  */
#line 6815 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 35893 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 940: /* ws_level_flags: ws_level_flag_reverse  */
#line 6816 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 35899 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 941: /* ws_level_number: real_ulong_num  */
#line 6821 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 35908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 942: /* ws_level_list_item: ws_level_number ws_level_flags  */
#line 6829 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 35916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 943: /* ws_level_list: ws_level_list_item  */
#line 6835 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35922 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 944: /* ws_level_list: ws_level_list ',' ws_level_list_item  */
#line 6836 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 35928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 945: /* ws_level_range: ws_level_number '-' ws_level_number  */
#line 6841 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 35939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 946: /* ws_level_list_or_range: ws_level_list  */
#line 6850 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 947: /* ws_level_list_or_range: ws_level_range  */
#line 6851 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 948: /* opt_ws_levels: %empty  */
#line 6855 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.ulong_num)= 0; }
#line 35957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 949: /* opt_ws_levels: LEVEL_SYM ws_level_list_or_range  */
#line 6856 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 35963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 952: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 6870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 35971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 953: /* opt_ref_list: %empty  */
#line 6877 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->ref_list.empty(); }
#line 35977 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 955: /* ref_list: ref_list ',' ident  */
#line 6883 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 35988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 956: /* ref_list: ident  */
#line 6890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 36001 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 957: /* opt_match_clause: %empty  */
#line 6902 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 36007 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 958: /* opt_match_clause: MATCH FULL  */
#line 6904 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 36013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 959: /* opt_match_clause: MATCH PARTIAL  */
#line 6906 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 36019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 960: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 6908 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 36025 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 961: /* opt_on_update_delete: %empty  */
#line 6913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 36035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 962: /* opt_on_update_delete: ON UPDATE_SYM delete_option  */
#line 6919 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 36045 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 963: /* opt_on_update_delete: ON DELETE_SYM delete_option  */
#line 6925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 36055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 964: /* opt_on_update_delete: ON UPDATE_SYM delete_option ON DELETE_SYM delete_option  */
#line 6932 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 36065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 965: /* opt_on_update_delete: ON DELETE_SYM delete_option ON UPDATE_SYM delete_option  */
#line 6939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 36075 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 966: /* delete_option: RESTRICT  */
#line 6947 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 36081 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 967: /* delete_option: CASCADE  */
#line 6948 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 36087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 968: /* delete_option: SET NULL_SYM  */
#line 6949 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 36093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 969: /* delete_option: NO_SYM ACTION  */
#line 6950 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 36099 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 970: /* delete_option: SET DEFAULT  */
#line 6951 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 36105 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 971: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 6955 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.key_type)= Key::PRIMARY; }
#line 36111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 972: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 6956 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.key_type)= Key::UNIQUE; }
#line 36117 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 973: /* key_or_index: KEY_SYM  */
#line 6960 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 36123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 974: /* key_or_index: INDEX_SYM  */
#line 6961 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 975: /* opt_key_or_index: %empty  */
#line 6965 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 977: /* keys_or_index: KEYS  */
#line 6970 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 36141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 978: /* keys_or_index: INDEX_SYM  */
#line 6971 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 979: /* keys_or_index: INDEXES  */
#line 6972 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 36153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 980: /* fulltext: FULLTEXT_SYM  */
#line 6976 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::FULLTEXT;}
#line 36159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 981: /* spatial: SPATIAL_SYM  */
#line 6981 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_SPATIAL
            (yyval.key_type)= Key::SPATIAL;
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), sym_group_geom.name,
                              sym_group_geom.needed_define));
#endif
          }
#line 36172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 982: /* normal_key_options: %empty  */
#line 6992 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36178 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 983: /* normal_key_options: normal_key_opts  */
#line 6993 "/home/buildbot/git/sql/sql_yacc.yy"
                          { Lex->last_key->option_list= Lex->option_list; }
#line 36184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 984: /* fulltext_key_options: %empty  */
#line 6997 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36190 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 985: /* fulltext_key_options: fulltext_key_opts  */
#line 6998 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_key->option_list= Lex->option_list; }
#line 36196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 986: /* spatial_key_options: %empty  */
#line 7002 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 987: /* spatial_key_options: spatial_key_opts  */
#line 7003 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->last_key->option_list= Lex->option_list; }
#line 36208 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 994: /* opt_USING_key_algorithm: %empty  */
#line 7022 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 36214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 995: /* opt_USING_key_algorithm: USING btree_or_rtree  */
#line 7023 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 36220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 996: /* opt_key_algorithm_clause: %empty  */
#line 7028 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 36226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 997: /* opt_key_algorithm_clause: USING btree_or_rtree  */
#line 7029 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 36232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 998: /* opt_key_algorithm_clause: TYPE_SYM btree_or_rtree  */
#line 7030 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 36238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 999: /* key_using_alg: USING btree_or_rtree  */
#line 7035 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 36244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1000: /* key_using_alg: TYPE_SYM btree_or_rtree  */
#line 7037 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 36250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1001: /* all_key_opt: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 7042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 36259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1002: /* all_key_opt: COMMENT_SYM TEXT_STRING_sys  */
#line 7047 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 36265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1003: /* all_key_opt: VISIBLE_SYM  */
#line 7049 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* This is mainly for MySQL 8.0 compatibility */
          }
#line 36273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1004: /* all_key_opt: ignorability  */
#line 7053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.is_ignored= (yyvsp[0].num);
          }
#line 36281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1005: /* all_key_opt: engine_defined_option  */
#line 7057 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->option_list, &Lex->option_list_last);
          }
#line 36289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1010: /* fulltext_key_opt: WITH PARSER_SYM IDENT_sys  */
#line 7074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 36300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1011: /* btree_or_rtree: BTREE_SYM  */
#line 7083 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 36306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1012: /* btree_or_rtree: RTREE_SYM  */
#line 7084 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 36312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1013: /* btree_or_rtree: HASH_SYM  */
#line 7085 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 36318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1014: /* ignorability: IGNORED_SYM  */
#line 7089 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= true; }
#line 36324 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1015: /* ignorability: NOT_SYM IGNORED_SYM  */
#line 7090 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.num)= false; }
#line 36330 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1016: /* key_list: key_list ',' key_part order_dir  */
#line 7095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 36339 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1017: /* key_list: key_part order_dir  */
#line 7100 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 36348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1018: /* opt_without_overlaps: %empty  */
#line 7107 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 36354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1019: /* opt_without_overlaps: ',' ident WITHOUT OVERLAPS_SYM  */
#line 7109 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->without_overlaps= true;
            Lex->last_key->period= (yyvsp[-2].ident_sys);
          }
#line 36363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1020: /* key_part: ident  */
#line 7117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 36373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1021: /* key_part: ident '(' NUM ')'  */
#line 7123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 36386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1022: /* opt_ident: %empty  */
#line 7134 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 36392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1023: /* opt_ident: field_ident  */
#line 7135 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 36398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1024: /* string_list: text_string  */
#line 7140 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 36404 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1025: /* string_list: string_list ',' text_string  */
#line 7142 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 36410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1026: /* $@94: %empty  */
#line 7151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 36430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1027: /* $@95: %empty  */
#line 7167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
            if (!Lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                   TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 36446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1028: /* alter: ALTER $@94 alter_options TABLE_SYM opt_if_exists table_ident opt_lock_wait_timeout $@95 alter_commands  */
#line 7179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 36461 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1029: /* $@96: %empty  */
#line 7190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 36471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1030: /* alter: ALTER DATABASE ident_or_empty $@96 create_database_options  */
#line 7196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 36485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1031: /* $@97: %empty  */
#line 7206 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 36495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1032: /* alter: ALTER DATABASE COMMENT_SYM opt_equal TEXT_STRING_sys $@97 opt_create_database_options  */
#line 7212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= Lex_ident_sys();
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 36508 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1033: /* alter: ALTER DATABASE ident UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM  */
#line 7221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 36520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1034: /* $@98: %empty  */
#line 7229 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_procedure_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 36529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1035: /* alter: ALTER PROCEDURE_SYM sp_name $@98 sp_a_chistics stmt_end  */
#line 7234 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 36535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1036: /* $@99: %empty  */
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_function_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 36544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1037: /* alter: ALTER FUNCTION_SYM sp_name $@99 sp_a_chistics stmt_end  */
#line 7241 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 36550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1038: /* $@100: %empty  */
#line 7243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 36561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1039: /* alter: ALTER view_algorithm definer_opt opt_view_suid VIEW_SYM table_ident $@100 view_list_opt AS view_select stmt_end  */
#line 7249 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 36567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1040: /* $@101: %empty  */
#line 7256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 36578 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1041: /* alter: ALTER definer_opt opt_view_suid VIEW_SYM table_ident $@101 view_list_opt AS view_select stmt_end  */
#line 7262 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 36584 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1042: /* $@102: %empty  */
#line 7264 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 36607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1043: /* alter: ALTER definer_opt remember_name EVENT_SYM sp_name $@102 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 7287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 36627 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1044: /* $@103: %empty  */
#line 7303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 36637 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1045: /* alter: ALTER SERVER_SYM ident_or_text $@103 OPTIONS_SYM '(' server_options_list ')'  */
#line 7307 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    { }
#line 36643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1046: /* alter: ALTER USER_SYM opt_if_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 7311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 36652 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1047: /* $@104: %empty  */
#line 7316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 36664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1048: /* $@105: %empty  */
#line 7324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 36678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1049: /* $@106: %empty  */
#line 7334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1050: /* alter: ALTER SEQUENCE_SYM opt_if_exists $@104 table_ident $@105 sequence_defs $@106 stmt_end  */
#line 7339 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 36695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1051: /* account_locking_option: LOCK_SYM  */
#line 7344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 36703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1052: /* account_locking_option: UNLOCK_SYM  */
#line 7348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 36711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1053: /* opt_password_expire_option: %empty  */
#line 7355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 36719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1054: /* opt_password_expire_option: NEVER_SYM  */
#line 7359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 36727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1055: /* opt_password_expire_option: DEFAULT  */
#line 7363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 36735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1056: /* opt_password_expire_option: INTERVAL_SYM NUM DAY_SYM  */
#line 7367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 36745 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1062: /* ev_alter_on_schedule_completion: %empty  */
#line 7383 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 36751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1063: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time  */
#line 7384 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.num)= 1; }
#line 36757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1064: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 36763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1065: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 7386 "/home/buildbot/git/sql/sql_yacc.yy"
                                                            { (yyval.num)= 1; }
#line 36769 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1066: /* opt_ev_rename_to: %empty  */
#line 7390 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 36775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1067: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 7392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 36788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1068: /* opt_ev_sql_stmt: %empty  */
#line 7403 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= 0;}
#line 36794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1069: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 7404 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 36800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1070: /* ident_or_empty: %empty  */
#line 7409 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.ident_sys)= Lex_ident_sys(); }
#line 36806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1073: /* alter_commands: DISCARD TABLESPACE  */
#line 7416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1074: /* alter_commands: IMPORT TABLESPACE  */
#line 7424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            Lex->create_info.add(DDL_options_st::OPT_IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1080: /* alter_commands: DROP PARTITION_SYM opt_if_exists alt_part_name_list  */
#line 7447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 36841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1081: /* alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 36851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1082: /* $@107: %empty  */
#line 7461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1084: /* alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7474 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 36881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1085: /* $@108: %empty  */
#line 7485 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1087: /* $@109: %empty  */
#line 7497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1089: /* alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 7509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 36921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1090: /* alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 7516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 36935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1092: /* alter_commands: EXCHANGE_SYM PARTITION_SYM alt_part_name_item WITH TABLE_SYM table_ident opt_without_validation have_partitioning  */
#line 7528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-2].table)))
              MYSQL_YYABORT;
          }
#line 36944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1093: /* alter_commands: CONVERT_SYM PARTITION_SYM alt_part_name_item TO_SYM TABLE_SYM table_ident opt_without_validation have_partitioning  */
#line 7534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->stmt_alter_table((yyvsp[-2].table)))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            lex->alter_info.partition_flags|= ALTER_PARTITION_CONVERT_OUT;
          }
#line 36958 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1094: /* $@110: %empty  */
#line 7544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), nullptr, 0,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            /*
              This will appear as (new_db, new_name) in alter_ctx.
              new_db will be IX-locked and new_name X-locked.
            */
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            lex->name= (yyvsp[0].table)->table;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;

            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->part_info->num_parts= 1;
            /*
              OR-ed with ALTER_PARTITION_ADD because too many checks of
              ALTER_PARTITION_ADD required.
            */
            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD |
                                              ALTER_PARTITION_CONVERT_IN;
          }
#line 36992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1095: /* alter_commands: CONVERT_SYM TABLE_SYM table_ident $@110 TO_SYM PARTITION_SYM part_definition opt_without_validation have_partitioning  */
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1096: /* remove_partitioning: REMOVE_SYM PARTITIONING_SYM  */
#line 7584 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 37011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1097: /* all_or_alt_part_name_list: ALL  */
#line 7591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 37019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1099: /* $@111: %empty  */
#line 7600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 37035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1100: /* add_partition_rule: ADD PARTITION_SYM opt_if_not_exists opt_no_write_to_binlog $@111 add_part_extra  */
#line 7612 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1102: /* add_part_extra: '(' part_def_list ')'  */
#line 7618 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 37050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1103: /* add_part_extra: PARTITIONS_SYM real_ulong_num  */
#line 7623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 37058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1104: /* $@112: %empty  */
#line 7630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 37071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1106: /* reorg_parts_rule: %empty  */
#line 7643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 37079 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1107: /* $@113: %empty  */
#line 7647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 37087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1108: /* reorg_parts_rule: alt_part_name_list $@113 INTO '(' part_def_list ')'  */
#line 7651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 37096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1109: /* alt_part_name_list: alt_part_name_item  */
#line 7658 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 37102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1110: /* alt_part_name_list: alt_part_name_list ',' alt_part_name_item  */
#line 7659 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    {}
#line 37108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1111: /* alt_part_name_item: ident  */
#line 7664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 37118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1115: /* alter_list_item: add_column column_def opt_place  */
#line 7686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 37129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1116: /* alter_list_item: ADD key_def  */
#line 7693 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 37138 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1117: /* alter_list_item: ADD period_for_system_time  */
#line 7698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 37146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1118: /* alter_list_item: ADD PERIOD_SYM opt_if_not_exists_table_element period_for_application_time  */
#line 7703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 37156 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1119: /* alter_list_item: add_column '(' create_field_list ')'  */
#line 7709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 37167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1120: /* alter_list_item: ADD constraint_def  */
#line 7716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 37175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1121: /* alter_list_item: ADD CONSTRAINT IF_SYM not EXISTS field_ident check_constraint  */
#line 7720 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 37184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1122: /* alter_list_item: CHANGE opt_column opt_if_exists_table_element field_ident field_spec opt_place  */
#line 7726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-2].lex_str);
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 37195 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1123: /* alter_list_item: MODIFY_SYM opt_column opt_if_exists_table_element field_spec opt_place  */
#line 7734 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= (yyvsp[0].lex_str);
          }
#line 37206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1124: /* alter_list_item: DROP opt_column opt_if_exists_table_element field_ident opt_restrict  */
#line 7741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str).str, (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 37220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1125: /* alter_list_item: DROP CONSTRAINT opt_if_exists_table_element field_ident  */
#line 7751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 37235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1126: /* alter_list_item: DROP FOREIGN KEY_SYM opt_if_exists_table_element field_ident  */
#line 7762 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 37249 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1127: /* alter_list_item: DROP opt_constraint_no_id PRIMARY_SYM KEY_SYM  */
#line 7772 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name.str,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 37264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1128: /* alter_list_item: DROP key_or_index opt_if_exists_table_element field_ident  */
#line 7783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str).str, (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 37278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1129: /* alter_list_item: DISABLE_SYM KEYS  */
#line 7793 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 37288 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1130: /* alter_list_item: ENABLE_SYM KEYS  */
#line 7799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 37298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1131: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident SET DEFAULT column_default_expr  */
#line 7805 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (check_expression((yyvsp[0].virtual_column), &(yyvsp[-3].lex_str), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str), (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 37309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1132: /* alter_list_item: ALTER key_or_index opt_if_exists_table_element ident ignorability  */
#line 7812 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            Alter_index_ignorability *ac= new (thd->mem_root)
                                        Alter_index_ignorability((yyvsp[-1].ident_sys).str, (yyvsp[0].num), (yyvsp[-2].num));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_index_ignorability_list.push_back(ac);
            lex->alter_info.flags|= ALTER_INDEX_IGNORABILITY;
          }
#line 37323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1133: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident DROP DEFAULT  */
#line 7822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str), (Virtual_column_info*) 0, (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 37332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1134: /* alter_list_item: RENAME opt_to table_ident  */
#line 7827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table((yyvsp[0].table)))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_RENAME;
          }
#line 37342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1135: /* alter_list_item: RENAME COLUMN_SYM opt_if_exists_table_element ident TO_SYM ident  */
#line 7833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 37351 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1136: /* alter_list_item: RENAME key_or_index opt_if_exists_table_element field_ident TO_SYM field_ident  */
#line 7838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (thd->mem_root)
                                    Alter_rename_key((yyvsp[-2].lex_str), (yyvsp[0].lex_str), (yyvsp[-3].num));
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= ALTER_RENAME_INDEX;
          }
#line 37365 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1137: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default  */
#line 7848 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset(
                       thd, thd->variables.character_set_collations, (yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 37375 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1138: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 7855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset(
                       thd, thd->variables.character_set_collations, (yyvsp[-2].charset), (yyvsp[0].Lex_extended_collation)))
              MYSQL_YYABORT;
          }
#line 37385 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1139: /* alter_list_item: create_table_options_space_separated  */
#line 7861 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 37394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1140: /* alter_list_item: FORCE_SYM  */
#line 7866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 37402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1141: /* alter_list_item: alter_order_clause  */
#line 7870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 37411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1144: /* alter_list_item: ADD SYSTEM VERSIONING_SYM  */
#line 7877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 37420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1145: /* alter_list_item: DROP SYSTEM VERSIONING_SYM  */
#line 7882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 37429 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1146: /* alter_list_item: DROP PERIOD_SYM FOR_SYSTEM_TIME_SYM  */
#line 7887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 37437 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1147: /* alter_list_item: DROP PERIOD_SYM opt_if_exists_table_element FOR_SYM ident  */
#line 7891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys).str, (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 37449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1149: /* opt_without_validation: WITH VALIDATION_SYM  */
#line 7903 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->without_validation= 0;
        }
#line 37457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1150: /* opt_without_validation: WITHOUT VALIDATION_SYM  */
#line 7907 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->without_validation= 1;
        }
#line 37465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1156: /* alter_algorithm_option: ALGORITHM_SYM opt_equal DEFAULT  */
#line 7922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.set_requested_algorithm(
              Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 37474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1157: /* alter_algorithm_option: ALGORITHM_SYM opt_equal ident  */
#line 7927 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 37483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1158: /* alter_lock_option: LOCK_SYM opt_equal DEFAULT  */
#line 7935 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 37492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1159: /* alter_lock_option: LOCK_SYM opt_equal ident  */
#line 7940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 37501 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1160: /* opt_column: %empty  */
#line 7947 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1161: /* opt_column: COLUMN_SYM  */
#line 7948 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 37513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1162: /* opt_ignore: %empty  */
#line 7952 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->ignore= 0;}
#line 37519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1163: /* opt_ignore: IGNORE_SYM  */
#line 7953 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 37525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1164: /* $@114: %empty  */
#line 7957 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->ignore= 0;}
#line 37531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1170: /* alter_option: IGNORE_SYM  */
#line 7971 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 37537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1171: /* alter_option: ONLINE_SYM  */
#line 7973 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 37546 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1172: /* opt_restrict: %empty  */
#line 7980 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_DEFAULT; }
#line 37552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1173: /* opt_restrict: RESTRICT  */
#line 7981 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_RESTRICT; }
#line 37558 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1174: /* opt_restrict: CASCADE  */
#line 7982 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_CASCADE; }
#line 37564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1175: /* opt_place: %empty  */
#line 7986 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)= null_clex_str; }
#line 37570 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1176: /* opt_place: AFTER_SYM ident  */
#line 7988 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 37579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1177: /* opt_place: FIRST_SYM  */
#line 7993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 37589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1178: /* opt_to: %empty  */
#line 8001 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1179: /* opt_to: TO_SYM  */
#line 8002 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 37601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1180: /* opt_to: '='  */
#line 8003 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 37607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1181: /* opt_to: AS  */
#line 8004 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 37613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1182: /* $@115: %empty  */
#line 8009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 37624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1183: /* slave: START_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel $@115 slave_until  */
#line 8016 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1184: /* $@116: %empty  */
#line 8018 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 37641 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1185: /* slave: START_SYM ALL SLAVES slave_thread_opts $@116  */
#line 8024 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37647 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1186: /* slave: STOP_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel  */
#line 8026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 37658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1187: /* slave: STOP_SYM ALL SLAVES slave_thread_opts  */
#line 8033 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 37669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1188: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 8043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 37686 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1189: /* opt_start_transaction_option_list: %empty  */
#line 8059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 37694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1190: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 8063 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 37702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1191: /* start_transaction_option_list: start_transaction_option  */
#line 8070 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 37710 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1192: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 8074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 37718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1193: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 8081 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 37726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1194: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 8085 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 37734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1195: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 8089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 37742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1196: /* $@117: %empty  */
#line 8095 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->slave_thd_opt= 0; }
#line 37748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1197: /* slave_thread_opts: $@117 slave_thread_opt_list  */
#line 8097 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1200: /* slave_thread_opt: %empty  */
#line 8106 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 37760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1201: /* slave_thread_opt: SQL_THREAD  */
#line 8107 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 37766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1202: /* slave_thread_opt: RELAY_THREAD  */
#line 8108 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_IO; }
#line 37772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1203: /* slave_until: %empty  */
#line 8112 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 37778 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1204: /* slave_until: UNTIL_SYM slave_until_opts  */
#line 8114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 37791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1205: /* slave_until: UNTIL_SYM MASTER_GTID_POS_SYM '=' TEXT_STRING_sys  */
#line 8123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= false;
          }
#line 37800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1206: /* slave_until: UNTIL_SYM SQL_AFTER_GTIDS_SYM '=' TEXT_STRING_sys  */
#line 8128 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= false;
          }
#line 37809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1207: /* slave_until: UNTIL_SYM SQL_BEFORE_GTIDS_SYM '=' TEXT_STRING_sys  */
#line 8133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= true;
          }
#line 37818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1210: /* $@118: %empty  */
#line 8146 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1211: /* checksum: CHECKSUM_SYM table_or_tables $@118 table_list opt_checksum_type  */
#line 8153 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37835 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1212: /* opt_checksum_type: %empty  */
#line 8157 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= 0; }
#line 37841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1213: /* opt_checksum_type: QUICK  */
#line 8158 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_QUICK; }
#line 37847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1214: /* opt_checksum_type: EXTENDED_SYM  */
#line 8159 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_EXTEND; }
#line 37853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1216: /* $@119: %empty  */
#line 8165 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 37859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1218: /* $@120: %empty  */
#line 8171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1219: /* repair: REPAIR opt_no_write_to_binlog $@120 repair_table_or_view  */
#line 8181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1220: /* opt_mi_repair_type: %empty  */
#line 8191 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 37891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1221: /* opt_mi_repair_type: mi_repair_types  */
#line 8192 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 37897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1222: /* mi_repair_types: mi_repair_type  */
#line 8196 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 37903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1223: /* mi_repair_types: mi_repair_type mi_repair_types  */
#line 8197 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 37909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1224: /* mi_repair_type: QUICK  */
#line 8201 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_QUICK; }
#line 37915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1225: /* mi_repair_type: EXTENDED_SYM  */
#line 8202 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_EXTEND; }
#line 37921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1226: /* mi_repair_type: USE_FRM  */
#line 8203 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 37927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1227: /* opt_view_repair_type: %empty  */
#line 8207 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 37933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1228: /* opt_view_repair_type: FOR_SYM UPGRADE_SYM  */
#line 8208 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 37939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1229: /* opt_view_repair_type: FROM MYSQL_SYM  */
#line 8209 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 37945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1230: /* $@121: %empty  */
#line 8214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 37959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1231: /* analyze: ANALYZE_SYM opt_no_write_to_binlog table_or_tables $@121 analyze_table_list  */
#line 8224 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1235: /* opt_persistent_stat_clause: %empty  */
#line 8244 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37977 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1236: /* opt_persistent_stat_clause: PERSISTENT_SYM FOR_SYM persistent_stat_spec  */
#line 8246 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 37985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1237: /* persistent_stat_spec: ALL  */
#line 8253 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37991 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1238: /* persistent_stat_spec: COLUMNS persistent_column_stat_spec INDEXES persistent_index_stat_spec  */
#line 8255 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1239: /* persistent_column_stat_spec: ALL  */
#line 8259 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 38003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1240: /* $@122: %empty  */
#line 8261 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 38014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1241: /* persistent_column_stat_spec: '(' $@122 table_column_list ')'  */
#line 8269 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 38020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1242: /* persistent_index_stat_spec: ALL  */
#line 8273 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 38026 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1243: /* $@123: %empty  */
#line 8275 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 38037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1244: /* persistent_index_stat_spec: '(' $@123 table_index_list ')'  */
#line 8283 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 38043 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1245: /* table_column_list: %empty  */
#line 8288 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38049 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1246: /* table_column_list: ident  */
#line 8290 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 38058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1247: /* table_column_list: table_column_list ',' ident  */
#line 8295 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 38067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1248: /* table_index_list: %empty  */
#line 8303 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1251: /* table_index_name: ident  */
#line 8310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 38083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1252: /* table_index_name: PRIMARY_SYM  */
#line 8317 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 38094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1253: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 8327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 38105 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1254: /* binlog_base64_event: BINLOG_SYM '@' ident_or_text ',' '@' ident_or_text  */
#line 8335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 38115 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1256: /* $@124: %empty  */
#line 8345 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 38121 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1258: /* $@125: %empty  */
#line 8350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1259: /* check: CHECK_SYM $@125 check_view_or_table  */
#line 8360 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1260: /* opt_mi_check_type: %empty  */
#line 8372 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 38155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1261: /* opt_mi_check_type: mi_check_types  */
#line 8373 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 38161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1262: /* mi_check_types: mi_check_type  */
#line 8377 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 38167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1263: /* mi_check_types: mi_check_type mi_check_types  */
#line 8378 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 38173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1264: /* mi_check_type: QUICK  */
#line 8382 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_QUICK; }
#line 38179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1265: /* mi_check_type: FAST_SYM  */
#line 8383 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_FAST; }
#line 38185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1266: /* mi_check_type: MEDIUM_SYM  */
#line 8384 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_MEDIUM; }
#line 38191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1267: /* mi_check_type: EXTENDED_SYM  */
#line 8385 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_EXTEND; }
#line 38197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1268: /* mi_check_type: CHANGED  */
#line 8386 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 38203 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1269: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 8387 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 38209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1270: /* opt_view_check_type: %empty  */
#line 8391 "/home/buildbot/git/sql/sql_yacc.yy"
                              { }
#line 38215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1271: /* opt_view_check_type: FOR_SYM UPGRADE_SYM  */
#line 8392 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 38221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1272: /* $@126: %empty  */
#line 8397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1273: /* optimize: OPTIMIZE opt_no_write_to_binlog table_or_tables $@126 table_list opt_lock_wait_timeout  */
#line 8407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1274: /* opt_no_write_to_binlog: %empty  */
#line 8417 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 38253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1275: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 8418 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 38259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1276: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 8419 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 38265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1277: /* $@127: %empty  */
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            Lex->create_info.set((yyvsp[0].object_ddl_options));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 38276 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1278: /* rename: RENAME table_or_tables opt_if_exists $@127 table_to_table_list  */
#line 8431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 38284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1279: /* rename: RENAME USER_SYM clear_privileges rename_list  */
#line 8435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 38292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1280: /* rename_list: user TO_SYM user  */
#line 8442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1281: /* rename_list: rename_list ',' user TO_SYM user  */
#line 8448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1284: /* table_to_table: table_ident opt_lock_wait_timeout TO_SYM table_ident  */
#line 8462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 38328 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1285: /* $@128: %empty  */
#line 8477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.reset();
          }
#line 38336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1286: /* keycache: CACHE_SYM INDEX_SYM $@128 keycache_list_or_parts IN_SYM key_cache_name  */
#line 8481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 38346 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1291: /* assign_to_keycache: table_ident cache_keys_spec  */
#line 8500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1292: /* assign_to_keycache_parts: table_ident adm_partition cache_keys_spec  */
#line 8511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1293: /* key_cache_name: ident  */
#line 8521 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 38376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1294: /* key_cache_name: DEFAULT  */
#line 8522 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str) = default_base; }
#line 38382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1295: /* $@129: %empty  */
#line 8527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 38394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1296: /* preload: LOAD INDEX_SYM INTO CACHE_SYM $@129 preload_list_or_parts  */
#line 8535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 38402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1301: /* preload_keys: table_ident cache_keys_spec opt_ignore_leaves  */
#line 8552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1302: /* preload_keys_parts: table_ident adm_partition cache_keys_spec opt_ignore_leaves  */
#line 8563 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 38426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1303: /* $@130: %empty  */
#line 8574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 38434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1305: /* $@131: %empty  */
#line 8581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE,
                                        INDEX_HINT_MASK_ALL);
          }
#line 38444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1307: /* cache_key_list_or_empty: %empty  */
#line 8590 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 38450 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1309: /* opt_ignore_leaves: %empty  */
#line 8596 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 38456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1310: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 8597 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 38462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1311: /* $@132: %empty  */
#line 8607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 38473 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1312: /* select: query_expression_no_with_clause $@132 opt_procedure_or_into  */
#line 8614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 38484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1313: /* $@133: %empty  */
#line 8621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 38495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1314: /* select: with_clause query_expression_no_with_clause $@133 opt_procedure_or_into  */
#line 8628 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 38507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1315: /* $@134: %empty  */
#line 8639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 38516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1316: /* select_into: select_into_query_specification $@134 opt_order_limit_lock  */
#line 8644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 38530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1317: /* $@135: %empty  */
#line 8655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 38539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1318: /* select_into: with_clause select_into_query_specification $@135 opt_order_limit_lock  */
#line 8660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 38555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1319: /* simple_table: query_specification  */
#line 8674 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 38561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1320: /* simple_table: table_value_constructor  */
#line 8675 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 38567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1321: /* $@136: %empty  */
#line 8680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 38576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1322: /* table_value_constructor: VALUES $@136 values_list  */
#line 8685 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 38585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1323: /* $@137: %empty  */
#line 8693 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) || lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 38598 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1324: /* $@138: %empty  */
#line 8702 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= SELECT_LIST;
          }
#line 38606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1325: /* query_specification_start: SELECT_SYM $@137 select_options $@138 select_item_list  */
#line 8706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 38614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1326: /* query_specification: query_specification_start opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 8718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 38622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1327: /* select_into_query_specification: query_specification_start into opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 8731 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 38630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1328: /* query_expression: query_expression_no_with_clause  */
#line 8789 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 38639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1329: /* query_expression: with_clause query_expression_no_with_clause  */
#line 8795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 38649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1330: /* query_expression_no_with_clause: query_expression_body_ext  */
#line 8808 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 38655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1331: /* query_expression_no_with_clause: query_expression_body_ext_parens  */
#line 8809 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 38661 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1332: /* $@139: %empty  */
#line 8824 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 38673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1333: /* query_expression_body_ext: query_expression_body $@139 opt_query_expression_tail  */
#line 8832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 38684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1334: /* $@140: %empty  */
#line 8839 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 38693 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1335: /* query_expression_body_ext: query_expression_body_ext_parens $@140 query_expression_tail  */
#line 8844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 38702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1336: /* query_expression_body_ext_parens: '(' query_expression_body_ext_parens ')'  */
#line 8852 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 38708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1337: /* query_expression_body_ext_parens: '(' query_expression_body_ext ')'  */
#line 8854 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 38719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1338: /* query_expression_body: query_simple  */
#line 8869 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 38729 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1339: /* $@141: %empty  */
#line 8876 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 38740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1340: /* query_expression_body: query_expression_body unit_type_decl $@141 query_primary  */
#line 8883 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 38751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1341: /* query_expression_body: query_expression_body_ext_parens unit_type_decl query_primary  */
#line 8892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 38763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1342: /* query_primary: query_simple  */
#line 8908 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 38769 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1343: /* query_primary: query_expression_body_ext_parens  */
#line 8910 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 38775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1344: /* query_simple: simple_table  */
#line 8919 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 38781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1345: /* subselect: query_expression  */
#line 8924 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 38790 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1346: /* subquery: query_expression_body_ext_parens  */
#line 8965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 38803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1347: /* subquery: '(' with_clause query_expression_no_with_clause ')'  */
#line 8974 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 38814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1351: /* table_reference_list: join_table_list  */
#line 8993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 38824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1354: /* select_options: select_option_list  */
#line 9008 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 38834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1355: /* opt_history_unit: %empty  */
#line 9017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 38842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1356: /* opt_history_unit: TRANSACTION_SYM  */
#line 9021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 38850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1357: /* opt_history_unit: TIMESTAMP  */
#line 9025 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 38858 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1358: /* history_point: TIMESTAMP TEXT_STRING  */
#line 9032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= type_handler_datetime.create_literal_item(thd,
                                                     (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                     YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 38871 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1359: /* history_point: function_call_keyword_timestamp  */
#line 9041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 38879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1360: /* history_point: opt_history_unit bit_expr  */
#line 9045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 38887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1361: /* for_portion_of_time_clause: FOR_SYM PORTION_SYM OF_SYM remember_tok_start ident FROM bit_expr TO_SYM bit_expr  */
#line 9053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        (yyvsp[-4].ident_sys));
          }
#line 38903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1362: /* opt_for_portion_of_time_clause: %empty  */
#line 9068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 38911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1363: /* opt_for_portion_of_time_clause: for_portion_of_time_clause  */
#line 9072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 38919 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1364: /* opt_for_system_time_clause: %empty  */
#line 9079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 38927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1365: /* opt_for_system_time_clause: FOR_SYSTEM_TIME_SYM system_time_expr  */
#line 9083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 38935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1366: /* system_time_expr: AS OF_SYM history_point  */
#line 9090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 38943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1367: /* system_time_expr: ALL  */
#line 9094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 38951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1368: /* system_time_expr: FROM history_point TO_SYM history_point  */
#line 9098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 38959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1369: /* system_time_expr: BETWEEN_SYM history_point AND_SYM history_point  */
#line 9102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 38967 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1373: /* select_option: SQL_NO_CACHE_SYM  */
#line 9115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 38980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1374: /* select_option: SQL_CACHE_SYM  */
#line 9124 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 38993 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1375: /* select_lock_type: FOR_SYM UPDATE_SYM opt_lock_wait_timeout_new  */
#line 9137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 39003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1376: /* select_lock_type: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM opt_lock_wait_timeout_new  */
#line 9143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 39013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1377: /* opt_select_lock_type: %empty  */
#line 9153 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 39021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1378: /* opt_select_lock_type: select_lock_type  */
#line 9157 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 39029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1379: /* opt_lock_wait_timeout_new: %empty  */
#line 9164 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 39037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1380: /* opt_lock_wait_timeout_new: WAIT_SYM ulong_num  */
#line 9168 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 39047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1381: /* opt_lock_wait_timeout_new: NOWAIT_SYM  */
#line 9174 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 39057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1382: /* opt_lock_wait_timeout_new: SKIP_SYM LOCKED_SYM  */
#line 9180 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).skip_locked= 1;
          Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SKIP_LOCKED);
        }
#line 39067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1385: /* select_item_list: '*'  */
#line 9191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_parsing_returning=
                              thd->lex->current_select->parsing_place ==
                                                IN_RETURNING;
            SELECT_LEX *correct_select= is_parsing_returning ?
                                              thd->lex->returning() :
                                              thd->lex->current_select;
            Item *item= new (thd->mem_root)
                          Item_field(thd, &correct_select->context,
                                     star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            correct_select->with_wild++;
          }
#line 39088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1386: /* select_item: remember_name select_sublist_qualified_asterisk remember_end  */
#line 9211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 39097 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1387: /* select_item: remember_name expr remember_end select_alias  */
#line 9216 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 39120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1388: /* remember_tok_start: %empty  */
#line 9237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 39128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1389: /* remember_name: %empty  */
#line 9243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 39136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1390: /* remember_end: %empty  */
#line 9249 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 39144 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1391: /* remember_cpp_ptr: %empty  */
#line 9255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr();
          }
#line 39152 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1392: /* remember_start_opt: %empty  */
#line 9261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 39163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1393: /* remember_end_opt: %empty  */
#line 9270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 39174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1394: /* remember_lex: %empty  */
#line 9279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
          }
#line 39182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1395: /* select_alias: %empty  */
#line 9285 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)=null_clex_str;}
#line 39188 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1396: /* select_alias: AS ident  */
#line 9286 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 39194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1397: /* select_alias: AS TEXT_STRING_sys  */
#line 9287 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 39200 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1398: /* select_alias: ident  */
#line 9288 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 39206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1399: /* select_alias: TEXT_STRING_sys  */
#line 9289 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 39212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1400: /* opt_default_time_precision: %empty  */
#line 9293 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 39218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1401: /* opt_default_time_precision: '(' ')'  */
#line 9294 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 39224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1402: /* opt_default_time_precision: '(' real_ulong_num ')'  */
#line 9295 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 39230 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1403: /* opt_time_precision: %empty  */
#line 9299 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 39236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1404: /* opt_time_precision: '(' ')'  */
#line 9300 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 39242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1405: /* opt_time_precision: '(' real_ulong_num ')'  */
#line 9301 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 39248 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1406: /* optional_braces: %empty  */
#line 9305 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 39254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1407: /* optional_braces: '(' ')'  */
#line 9306 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 39260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1408: /* expr: expr or expr  */
#line 9312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 39315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1409: /* expr: expr XOR expr  */
#line 9363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1410: /* expr: expr and expr  */
#line 9370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 39373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1411: /* expr: NOT_SYM expr  */
#line 9413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1413: /* boolean_test: boolean_test IS TRUE_SYM  */
#line 9423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1414: /* boolean_test: boolean_test IS not TRUE_SYM  */
#line 9429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1415: /* boolean_test: boolean_test IS FALSE_SYM  */
#line 9435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1416: /* boolean_test: boolean_test IS not FALSE_SYM  */
#line 9441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1417: /* boolean_test: boolean_test IS UNKNOWN_SYM  */
#line 9447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1418: /* boolean_test: boolean_test IS not UNKNOWN_SYM  */
#line 9453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1419: /* boolean_test: boolean_test IS NULL_SYM  */
#line 9459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39453 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1420: /* boolean_test: boolean_test IS not NULL_SYM  */
#line 9465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1421: /* boolean_test: boolean_test EQUAL_SYM predicate  */
#line 9471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39473 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1422: /* boolean_test: boolean_test comp_op predicate  */
#line 9477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1423: /* boolean_test: boolean_test comp_op all_or_any '(' subselect ')'  */
#line 9483 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39493 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1425: /* predicate: predicate IN_SYM subquery  */
#line 9493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1426: /* predicate: predicate not IN_SYM subquery  */
#line 9499 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1427: /* predicate: predicate IN_SYM '(' expr ')'  */
#line 9508 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39526 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1428: /* predicate: predicate IN_SYM '(' expr ',' expr_list ')'  */
#line 9514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1429: /* predicate: predicate not IN_SYM '(' expr ')'  */
#line 9522 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1430: /* predicate: predicate not IN_SYM '(' expr ',' expr_list ')'  */
#line 9528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1431: /* predicate: predicate BETWEEN_SYM predicate AND_SYM predicate  */
#line 9537 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39571 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1432: /* predicate: predicate not BETWEEN_SYM predicate AND_SYM predicate  */
#line 9543 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1433: /* predicate: predicate SOUNDS_SYM LIKE predicate  */
#line 9551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1434: /* predicate: predicate LIKE predicate  */
#line 9561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1435: /* predicate: predicate LIKE predicate ESCAPE_SYM predicate  */
#line 9567 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 39618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1436: /* predicate: predicate not LIKE predicate  */
#line 9574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39629 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1437: /* predicate: predicate not LIKE predicate ESCAPE_SYM predicate  */
#line 9581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 39641 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1438: /* predicate: predicate REGEXP predicate  */
#line 9589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1439: /* predicate: predicate not REGEXP predicate  */
#line 9595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1441: /* bit_expr: bit_expr '|' bit_expr  */
#line 9608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1442: /* bit_expr: bit_expr '&' bit_expr  */
#line 9614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1443: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 9620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1444: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 9626 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1445: /* bit_expr: bit_expr ORACLE_CONCAT_SYM bit_expr  */
#line 9632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39715 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1446: /* bit_expr: bit_expr '+' bit_expr  */
#line 9639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39725 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1447: /* bit_expr: bit_expr '-' bit_expr  */
#line 9645 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1448: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 9651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39745 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1449: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 9657 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39755 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1450: /* bit_expr: INTERVAL_SYM expr interval '+' expr  */
#line 9664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39765 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1451: /* bit_expr: '+' INTERVAL_SYM expr interval '+' expr  */
#line 9670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1452: /* bit_expr: '-' INTERVAL_SYM expr interval '+' expr  */
#line 9676 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1453: /* bit_expr: bit_expr '*' bit_expr  */
#line 9682 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1454: /* bit_expr: bit_expr '/' bit_expr  */
#line 9688 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1455: /* bit_expr: bit_expr '%' bit_expr  */
#line 9694 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1456: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 9700 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1457: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 9706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39835 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1458: /* bit_expr: bit_expr '^' bit_expr  */
#line 9712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 39845 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1468: /* comp_op: '='  */
#line 9741 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 39851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1469: /* comp_op: GE  */
#line 9742 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 39857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1470: /* comp_op: '>'  */
#line 9743 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 39863 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1471: /* comp_op: LE  */
#line 9744 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 39869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1472: /* comp_op: '<'  */
#line 9745 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 39875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1473: /* comp_op: NE  */
#line 9746 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 39881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1474: /* all_or_any: ALL  */
#line 9750 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 39887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1475: /* all_or_any: ANY_SYM  */
#line 9751 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 39893 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1476: /* opt_dyncol_type: %empty  */
#line 9756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
	  }
#line 39901 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1477: /* opt_dyncol_type: AS dyncol_type  */
#line 9759 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 39907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1481: /* numeric_dyncol_type: INT_SYM  */
#line 9769 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 39913 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1482: /* numeric_dyncol_type: UNSIGNED INT_SYM  */
#line 9770 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 39919 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1483: /* numeric_dyncol_type: DOUBLE_SYM  */
#line 9771 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 39925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1484: /* numeric_dyncol_type: REAL  */
#line 9772 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 39931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1485: /* numeric_dyncol_type: FLOAT_SYM  */
#line 9773 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 39937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1486: /* numeric_dyncol_type: DECIMAL_SYM float_options  */
#line 9774 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 39943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1487: /* temporal_dyncol_type: DATE_SYM  */
#line 9778 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 39949 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1488: /* temporal_dyncol_type: TIME_SYM opt_field_scale  */
#line 9779 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, (yyvsp[0].Lex_length_and_dec)); }
#line 39955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1489: /* temporal_dyncol_type: DATETIME opt_field_scale  */
#line 9780 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, (yyvsp[0].Lex_length_and_dec)); }
#line 39961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1490: /* string_dyncol_type: char opt_binary  */
#line 9785 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_dyncol_type).set(DYN_COL_STRING, thd,
                       thd->variables.character_set_collations,
                       (yyvsp[0].Lex_exact_charset_extended_collation_attrs), thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 39972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1491: /* string_dyncol_type: nchar  */
#line 9792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING, national_charset_info);
          }
#line 39980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1492: /* dyncall_create_element: expr ',' expr opt_dyncol_type  */
#line 9799 "/home/buildbot/git/sql/sql_yacc.yy"
   {
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= (yyvsp[0].Lex_dyncol_type).charset_collation();
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_length())
       (yyval.dyncol_def)->len= (yyvsp[0].Lex_dyncol_type).length();
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_dec())
       (yyval.dyncol_def)->frac= (yyvsp[0].Lex_dyncol_type).dec();
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 40003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1493: /* dyncall_create_list: dyncall_create_element  */
#line 9821 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 40014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1494: /* dyncall_create_list: dyncall_create_list ',' dyncall_create_element  */
#line 9828 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 40023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1495: /* plsql_cursor_attr: ISOPEN_SYM  */
#line 9836 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 40029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1496: /* plsql_cursor_attr: FOUND_SYM  */
#line 9837 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 40035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1497: /* plsql_cursor_attr: NOTFOUND_SYM  */
#line 9838 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 40041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1498: /* plsql_cursor_attr: ROWCOUNT_SYM  */
#line 9839 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 40047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1499: /* explicit_cursor_attr: ident PERCENT_ORACLE_SYM plsql_cursor_attr  */
#line 9844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 40056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1502: /* trim_operands_regular: expr  */
#line 9857 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 40062 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1503: /* trim_operands_special: LEADING expr FROM expr  */
#line 9861 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 40068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1504: /* trim_operands_special: TRAILING expr FROM expr  */
#line 9862 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 40074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1505: /* trim_operands_special: BOTH expr FROM expr  */
#line 9863 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 40080 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1506: /* trim_operands_special: LEADING FROM expr  */
#line 9864 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 40086 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1507: /* trim_operands_special: TRAILING FROM expr  */
#line 9865 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 40092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1508: /* trim_operands_special: BOTH FROM expr  */
#line 9866 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 40098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1509: /* trim_operands_special: expr FROM expr  */
#line 9867 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 40104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1516: /* column_default_non_parenthesized_expr: param_marker  */
#line 9905 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_param); }
#line 40110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1518: /* column_default_non_parenthesized_expr: sum_expr  */
#line 9908 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top || Lex->json_table)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 40122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1519: /* column_default_non_parenthesized_expr: window_func_expr  */
#line 9916 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 40134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1521: /* column_default_non_parenthesized_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 9925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1522: /* column_default_non_parenthesized_expr: EXISTS '(' subselect ')'  */
#line 9932 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1523: /* column_default_non_parenthesized_expr: '{' ident expr '}'  */
#line 9938 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 40164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1524: /* column_default_non_parenthesized_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 9943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 40178 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1525: /* column_default_non_parenthesized_expr: CAST_SYM '(' expr AS cast_type ')'  */
#line 9953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 40187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1526: /* column_default_non_parenthesized_expr: CASE_SYM when_list_opt_else END  */
#line 9958 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 40196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1527: /* column_default_non_parenthesized_expr: CASE_SYM expr when_list_opt_else END  */
#line 9963 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 40206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1528: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 9969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 40215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1529: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 9974 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1530: /* column_default_non_parenthesized_expr: DEFAULT '(' simple_ident ')'  */
#line 9982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 40242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1531: /* column_default_non_parenthesized_expr: VALUE_SYM '(' simple_ident_nospvar ')'  */
#line 9993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1532: /* column_default_non_parenthesized_expr: NEXT_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10000 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 40262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1533: /* column_default_non_parenthesized_expr: NEXTVAL_SYM '(' table_ident ')'  */
#line 10005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 40271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1534: /* column_default_non_parenthesized_expr: PREVIOUS_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 40280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1535: /* column_default_non_parenthesized_expr: LASTVAL_SYM '(' table_ident ')'  */
#line 10015 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 40289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1536: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ')'  */
#line 10020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_number), 0, 1))))
              MYSQL_YYABORT;
          }
#line 40298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1537: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ')'  */
#line 10025 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_number), 0, (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 40307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1538: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' longlong_num ',' bool ',' ulonglong_num ')'  */
#line 10030 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_number), (yyvsp[-1].ulonglong_number), (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 40316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1541: /* primary_expr: '(' parenthesized_expr ')'  */
#line 10039 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { (yyval.item)= (yyvsp[-1].item); }
#line 40322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1542: /* primary_expr: subquery  */
#line 10041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 40331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1544: /* string_factor_expr: string_factor_expr COLLATE_SYM collation_name  */
#line 10050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new (thd->mem_root)
                               Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].Lex_extended_collation)))))
              MYSQL_YYABORT;
          }
#line 40341 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1546: /* simple_expr: BINARY simple_expr  */
#line 10060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 40351 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1547: /* simple_expr: '+' simple_expr  */
#line 10066 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 40359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1548: /* simple_expr: '-' simple_expr  */
#line 10070 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40369 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1549: /* simple_expr: '~' simple_expr  */
#line 10076 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1550: /* simple_expr: not2 simple_expr  */
#line 10082 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1552: /* mysql_concatenation_expr: mysql_concatenation_expr MYSQL_CONCAT_SYM simple_expr  */
#line 10092 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40399 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1553: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ')'  */
#line 10101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1554: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ',' expr ')'  */
#line 10108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1555: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 10122 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1556: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 10128 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40442 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1557: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 10136 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1558: /* function_call_keyword: CURRENT_ROLE optional_braces  */
#line 10145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1559: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 10154 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_date_funcs_used_flag();
          }
#line 40479 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1560: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 10161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1561: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 10167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40499 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1562: /* function_call_keyword: INSERT '(' expr ',' expr ',' expr ',' expr ')'  */
#line 10173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1563: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 10179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1564: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 10194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40543 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1565: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 10205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1566: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 10211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1567: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 10217 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_date_funcs_used_flag();
          }
#line 40574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1568: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 10224 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40584 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1569: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 10230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40594 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1570: /* function_call_keyword: SQL_SYM PERCENT_ORACLE_SYM ROWCOUNT_SYM  */
#line 10236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 40606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1571: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 10244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40617 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1572: /* function_call_keyword: function_call_keyword_timestamp  */
#line 10251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 40625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1573: /* function_call_keyword: TRIM '(' trim_operands ')'  */
#line 10255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_trim(thd, (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 40635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1574: /* function_call_keyword: USER_SYM '(' ')'  */
#line 10261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 40647 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1575: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10269 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
             Lex->set_date_funcs_used_flag();
          }
#line 40658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1578: /* substring_operands_regular: expr ',' expr ',' expr  */
#line 10284 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1579: /* substring_operands_regular: expr ',' expr  */
#line 10288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1580: /* substring_operands_special: expr FROM expr FOR_SYM expr  */
#line 10295 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40682 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1581: /* substring_operands_special: expr FROM expr  */
#line 10299 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 40690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1582: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40701 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1583: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10326 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1584: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1585: /* function_call_nonkeyword: CURTIME opt_time_precision  */
#line 10339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1586: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1587: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40753 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1588: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1589: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40773 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1590: /* function_call_nonkeyword: NOW_SYM opt_time_precision  */
#line 10370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1591: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10377 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1592: /* function_call_nonkeyword: ROWNUM_SYM optional_braces  */
#line 10388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_rownum(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1593: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1594: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10401 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1595: /* function_call_nonkeyword: SUBSTRING '(' substring_operands ')'  */
#line 10407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_substr(thd, (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 40835 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1596: /* function_call_nonkeyword: SYSDATE  */
#line 10414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 40844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1597: /* function_call_nonkeyword: SYSDATE '(' ')'  */
#line 10420 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 40853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1598: /* function_call_nonkeyword: SYSDATE '(' real_ulong_num ')'  */
#line 10425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, (uint) (yyvsp[-1].ulong_num)))))
               MYSQL_YYABORT;
          }
#line 40862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1599: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1600: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10436 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1601: /* function_call_nonkeyword: TRIM_ORACLE '(' trim_operands ')'  */
#line 10442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 40891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1602: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1603: /* function_call_nonkeyword: UTC_TIME_SYM opt_time_precision  */
#line 10454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40913 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1604: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM opt_time_precision  */
#line 10461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 40924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1605: /* function_call_nonkeyword: COLUMN_ADD_SYM '(' expr ',' dyncall_create_list ')'  */
#line 10469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40934 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1606: /* function_call_nonkeyword: COLUMN_DELETE_SYM '(' expr ',' expr_list ')'  */
#line 10476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1607: /* function_call_nonkeyword: COLUMN_CREATE_SYM '(' dyncall_create_list ')'  */
#line 10483 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1608: /* function_call_nonkeyword: COLUMN_GET_SYM '(' expr ',' expr AS cast_type ')'  */
#line 10490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type), (yyvsp[-1].Lex_cast_type).charset());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1609: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1610: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1611: /* function_call_conflict: IF_SYM '(' expr ',' expr ',' expr ')'  */
#line 10517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40995 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1612: /* function_call_conflict: LAST_VALUE '(' expr ')'  */
#line 10526 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1613: /* function_call_conflict: LAST_VALUE '(' expr_list ',' expr ')'  */
#line 10537 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1614: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 10544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1615: /* function_call_conflict: PASSWORD_SYM '(' expr ')'  */
#line 10550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 41043 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1616: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 10558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41053 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1617: /* function_call_conflict: REPLACE '(' expr ',' expr ',' expr ')'  */
#line 10564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 41063 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1618: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 10570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1619: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr opt_ws_levels ')'  */
#line 10576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1620: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_nweights opt_ws_levels ')'  */
#line 10582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41095 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1621: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY ws_nweights ')'  */
#line 10590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1622: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 10602 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1623: /* @142: %empty  */
#line 10621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 41145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1624: /* function_call_generic: ident_func '(' @142 opt_udf_expr_list ')'  */
#line 10640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Type_handler *h;
            Create_func *builder;
            Item *item= NULL;

            if (unlikely(check_routine_name(&(yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Constructors, like POINT(1,1)
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= Schema::find_implied(thd)->
                       find_native_function_builder(thd, (yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else if ((h= Type_handler::handler_by_name(thd, (yyvsp[-4].ident_sys))) &&
                     (item= h->make_constructor_item(thd, (yyvsp[-1].item_list))))
            {
              // Found a constructor with a proper argument count
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 41206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1625: /* function_call_generic: CONTAINS_SYM '(' opt_expr_list ')'  */
#line 10697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 41216 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1626: /* function_call_generic: OVERLAPS_SYM '(' opt_expr_list ')'  */
#line 10703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 41226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1627: /* function_call_generic: WITHIN '(' opt_expr_list ')'  */
#line 10709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 41236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1628: /* function_call_generic: ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 10715 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1629: /* function_call_generic: ident_cli '.' ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 10720 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1630: /* function_call_generic: ident_cli '.' REPLACE '(' opt_expr_list ')'  */
#line 10725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1631: /* function_call_generic: ident_cli '.' SUBSTRING '(' opt_expr_list ')'  */
#line 10730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1632: /* function_call_generic: ident_cli '.' SUBSTRING '(' substring_operands_special ')'  */
#line 10735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 41281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1633: /* function_call_generic: ident_cli '.' TRIM '(' opt_expr_list ')'  */
#line 10740 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_trim(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1634: /* function_call_generic: ident_cli '.' TRIM '(' trim_operands_special ')'  */
#line 10745 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_trim(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 41299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1635: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 10765 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 41305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1636: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 10767 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= FT_BOOL; }
#line 41311 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1637: /* opt_natural_language_mode: %empty  */
#line 10771 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 41317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1638: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 10772 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 41323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1639: /* opt_query_expansion: %empty  */
#line 10776 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 0;         }
#line 41329 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1640: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 10777 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 41335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1641: /* opt_udf_expr_list: %empty  */
#line 10781 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= NULL; }
#line 41341 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1642: /* opt_udf_expr_list: udf_expr_list  */
#line 10782 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= (yyvsp[0].item_list); }
#line 41347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1643: /* udf_expr_list: udf_expr  */
#line 10787 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 41358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1644: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 10794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 41367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1645: /* udf_expr: remember_name expr remember_end select_alias  */
#line 10802 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 41395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1646: /* sum_expr: AVG_SYM '(' in_sum_expr ')'  */
#line 10829 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41405 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1647: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10835 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41415 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1648: /* sum_expr: BIT_AND '(' in_sum_expr ')'  */
#line 10841 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41425 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1649: /* sum_expr: BIT_OR '(' in_sum_expr ')'  */
#line 10847 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1650: /* sum_expr: BIT_XOR '(' in_sum_expr ')'  */
#line 10853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41445 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1651: /* sum_expr: COUNT_SYM '(' opt_all '*' ')'  */
#line 10859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41458 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1652: /* sum_expr: COUNT_SYM '(' in_sum_expr ')'  */
#line 10868 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1653: /* $@143: %empty  */
#line 10874 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1654: /* $@144: %empty  */
#line 10876 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr--; }
#line 41480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1655: /* sum_expr: COUNT_SYM '(' DISTINCT $@143 expr_list $@144 ')'  */
#line 10878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1656: /* sum_expr: MIN_SYM '(' in_sum_expr ')'  */
#line 10884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1657: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1658: /* sum_expr: MAX_SYM '(' in_sum_expr ')'  */
#line 10901 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1659: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1660: /* sum_expr: STD_SYM '(' in_sum_expr ')'  */
#line 10913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1661: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')'  */
#line 10919 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1662: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')'  */
#line 10925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1663: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')'  */
#line 10931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41570 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1664: /* sum_expr: SUM_SYM '(' in_sum_expr ')'  */
#line 10937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1665: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')'  */
#line 10943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1666: /* $@145: %empty  */
#line 10949 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1667: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct $@145 expr_list opt_gorder_clause opt_gconcat_separator opt_glimit_clause ')'  */
#line 10953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->limit_params.select_limit,
                                        sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 41616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1668: /* $@146: %empty  */
#line 10969 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1669: /* sum_expr: JSON_ARRAYAGG_SYM '(' opt_distinct $@146 expr_list opt_gorder_clause opt_glimit_clause ')'  */
#line 10972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            List<Item> *args= (yyvsp[-3].item_list);
            sel->in_sum_expr--;
            if (args && args->elements > 1)
            {
              /* JSON_ARRAYAGG supports only one parameter */
              my_error(ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT, MYF(0), "JSON_ARRAYAGG");
              MYSQL_YYABORT;
            }
            String* s= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely(s == NULL))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root)
                  Item_func_json_arrayagg(thd, Lex->current_context(),
                                          (yyvsp[-5].num), args,
                                          sel->gorder_list, s, (yyvsp[-1].num),
                                          sel->limit_params.select_limit,
                                          sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 41653 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1670: /* $@147: %empty  */
#line 10999 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 41659 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1671: /* sum_expr: JSON_OBJECTAGG_SYM '(' $@147 expr ',' expr ')'  */
#line 11001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;

            (yyval.item)= new (thd->mem_root) Item_func_json_objectagg(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1672: /* window_func_expr: window_func OVER_SYM window_name  */
#line 11013 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 41684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1673: /* window_func_expr: window_func OVER_SYM window_spec  */
#line 11022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 41703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1676: /* window_func: function_call_generic  */
#line 11044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 41719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1677: /* simple_window_func: ROW_NUMBER_SYM '(' ')'  */
#line 11059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41729 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1678: /* simple_window_func: RANK_SYM '(' ')'  */
#line 11066 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41739 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1679: /* simple_window_func: DENSE_RANK_SYM '(' ')'  */
#line 11073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1680: /* simple_window_func: PERCENT_RANK_SYM '(' ')'  */
#line 11080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1681: /* simple_window_func: CUME_DIST_SYM '(' ')'  */
#line 11087 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41769 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1682: /* simple_window_func: NTILE_SYM '(' expr ')'  */
#line 11094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41779 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1683: /* simple_window_func: FIRST_VALUE_SYM '(' expr ')'  */
#line 11101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1684: /* simple_window_func: LAST_VALUE '(' expr ')'  */
#line 11108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1685: /* simple_window_func: NTH_VALUE_SYM '(' expr ',' expr ')'  */
#line 11115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1686: /* simple_window_func: LEAD_SYM '(' expr ')'  */
#line 11122 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41823 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1687: /* simple_window_func: LEAD_SYM '(' expr ',' expr ')'  */
#line 11133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1688: /* simple_window_func: LAG_SYM '(' expr ')'  */
#line 11140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1689: /* simple_window_func: LAG_SYM '(' expr ',' expr ')'  */
#line 11151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1690: /* inverse_distribution_function: percentile_function OVER_SYM '(' opt_window_partition_clause ')'  */
#line 11163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 41876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1691: /* $@148: %empty  */
#line 11181 "/home/buildbot/git/sql/sql_yacc.yy"
           { Select->prepare_add_window_spec(thd); }
#line 41882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1692: /* percentile_function: inverse_distribution_function_def WITHIN GROUP_SYM '(' $@148 order_by_single_element_list ')'  */
#line 11183 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 41890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1693: /* percentile_function: MEDIAN_SYM '(' expr ')'  */
#line 11187 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1694: /* inverse_distribution_function_def: PERCENTILE_CONT_SYM '(' expr ')'  */
#line 11204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1695: /* inverse_distribution_function_def: PERCENTILE_DISC_SYM '(' expr ')'  */
#line 11210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1696: /* order_by_single_element_list: ORDER_SYM BY order_ident order_dir  */
#line 11219 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 41937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1697: /* window_name: ident  */
#line 11228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 41947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1698: /* $@149: %empty  */
#line 11237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 41956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1699: /* variable: '@' $@149 variable_aux  */
#line 11242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 41964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1700: /* variable_aux: ident_or_text SET_VAR expr  */
#line 11249 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_set_user_var *item;
            if (!(yyvsp[-2].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 41983 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1701: /* variable_aux: ident_or_text  */
#line 11264 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 42000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1702: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name  */
#line 11277 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 42009 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1703: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name '.' ident  */
#line 11282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 42018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1704: /* opt_distinct: %empty  */
#line 11289 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 42024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1705: /* opt_distinct: DISTINCT  */
#line 11290 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 42030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1706: /* opt_gconcat_separator: %empty  */
#line 11295 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 42040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1707: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11300 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 42046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1710: /* gorder_list: gorder_list ',' order_ident order_dir  */
#line 11310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 42055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1711: /* gorder_list: order_ident order_dir  */
#line 11315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 42064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1712: /* opt_glimit_clause: %empty  */
#line 11322 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 42070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1713: /* opt_glimit_clause: glimit_clause  */
#line 11323 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num) = 1; }
#line 42076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1714: /* glimit_clause: LIMIT glimit_options  */
#line 11329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 42084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1715: /* glimit_options: limit_options  */
#line 11336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 42092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1716: /* $@150: %empty  */
#line 11345 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 42105 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1717: /* in_sum_expr: opt_all $@150 expr  */
#line 11354 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 42114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1718: /* cast_type: BINARY opt_field_length  */
#line 11362 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), &my_charset_bin); }
#line 42120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1719: /* cast_type: CHAR_SYM opt_field_length opt_binary  */
#line 11364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 42131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1720: /* cast_type: VARCHAR field_length opt_binary  */
#line 11371 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 42142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1721: /* cast_type: VARCHAR2_ORACLE_SYM field_length opt_binary  */
#line 11378 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 42153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1722: /* cast_type: NCHAR_SYM opt_field_length  */
#line 11385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), national_charset_info);
          }
#line 42161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1723: /* cast_type: cast_type_numeric  */
#line 11388 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 42167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1724: /* cast_type: cast_type_temporal  */
#line 11389 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 42173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1725: /* cast_type: udt_name  */
#line 11391 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 42182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1726: /* cast_type_numeric: INT_SYM  */
#line 11398 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 42188 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1727: /* cast_type_numeric: SIGNED_SYM  */
#line 11399 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 42194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1728: /* cast_type_numeric: SIGNED_SYM INT_SYM  */
#line 11400 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 42200 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1729: /* cast_type_numeric: UNSIGNED  */
#line 11401 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 42206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1730: /* cast_type_numeric: UNSIGNED INT_SYM  */
#line 11402 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 42212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1731: /* cast_type_numeric: DECIMAL_SYM float_options  */
#line 11403 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 42218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1732: /* cast_type_numeric: FLOAT_SYM  */
#line 11404 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 42224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1733: /* cast_type_numeric: DOUBLE_SYM opt_precision  */
#line 11405 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 42230 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1734: /* cast_type_temporal: DATE_SYM  */
#line 11409 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 42236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1735: /* cast_type_temporal: TIME_SYM opt_field_scale  */
#line 11410 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_time2, (yyvsp[0].Lex_length_and_dec)); }
#line 42242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1736: /* cast_type_temporal: DATETIME opt_field_scale  */
#line 11411 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_datetime2, (yyvsp[0].Lex_length_and_dec)); }
#line 42248 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1737: /* cast_type_temporal: INTERVAL_SYM DAY_SECOND_SYM field_scale  */
#line 11413 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, (yyvsp[0].Lex_length_and_dec));
          }
#line 42256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1738: /* opt_expr_list: %empty  */
#line 11419 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item_list)= NULL; }
#line 42262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1739: /* opt_expr_list: expr_list  */
#line 11420 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 42268 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1740: /* expr_list: expr  */
#line 11425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 42277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1741: /* expr_list: expr_list ',' expr  */
#line 11430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42286 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1742: /* ident_list_arg: ident_list  */
#line 11437 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[0].item_list); }
#line 42292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1743: /* ident_list_arg: '(' ident_list ')'  */
#line 11438 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 42298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1744: /* ident_list: simple_ident  */
#line 11443 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1745: /* ident_list: ident_list ',' simple_ident  */
#line 11450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1746: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11458 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 42331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1747: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 42342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1749: /* when_list_opt_else: when_list ELSE expr  */
#line 11478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42352 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1750: /* table_ref: table_factor  */
#line 11488 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1751: /* table_ref: join_table  */
#line 11490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 42371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1752: /* json_text_literal: TEXT_STRING  */
#line 11502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1753: /* json_text_literal: NCHAR_STRING  */
#line 11506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= national_charset_info;
          }
#line 42387 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1754: /* json_text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 11510 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= (yyvsp[-1].charset);
            (yyval.lex_string_with_metadata)= (yyvsp[0].lex_string_with_metadata);
          }
#line 42396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1756: /* json_text_literal_or_num: NUM  */
#line 11519 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42404 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1757: /* json_text_literal_or_num: LONG_NUM  */
#line 11523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42412 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1758: /* json_text_literal_or_num: DECIMAL_NUM  */
#line 11527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1759: /* json_text_literal_or_num: FLOAT_NUM  */
#line 11531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_text_literal_cs= NULL;
          }
#line 42428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1760: /* join_table_list: derived_table_list  */
#line 11537 "/home/buildbot/git/sql/sql_yacc.yy"
                             { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 42434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1761: /* json_table_columns_clause: COLUMNS '(' json_table_columns_list ')'  */
#line 11542 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42440 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1763: /* json_table_columns_list: json_table_columns_list ',' json_table_column  */
#line 11548 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1764: /* $@151: %empty  */
#line 11553 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));

            lex->json_table->m_cur_json_table_column=
              new (thd->mem_root) Json_table_column(f,
                                    lex->json_table->get_cur_nested_path());

            if (unlikely(!f ||
                !lex->json_table->m_cur_json_table_column))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].ident_sys));
          }
#line 42469 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1765: /* json_table_column: ident $@151 json_table_column_type  */
#line 11572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->json_table->
                           m_cur_json_table_column->m_field->check(thd)))
              MYSQL_YYABORT;
            lex->json_table->m_columns.push_back(
               lex->json_table->m_cur_json_table_column, thd->mem_root);
          }
#line 42482 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1766: /* $@152: %empty  */
#line 11581 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Json_table_nested_path *np= new (thd->mem_root)
              Json_table_nested_path();
            np->set_path(thd, (yyvsp[0].lex_string_with_metadata));
            lex->json_table->start_nested_path(np);
          }
#line 42494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1767: /* json_table_column: NESTED_SYM PATH_SYM json_text_literal $@152 json_table_columns_clause  */
#line 11589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->json_table->end_nested_path();
          }
#line 42503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1768: /* json_table_column_type: FOR_SYM ORDINALITY_SYM  */
#line 11597 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_field_type_st type;
            type.set(&type_handler_slong);
            Lex->last_field->set_attributes(thd, type,
                                            COLUMN_DEFINITION_TABLE_FIELD);
            Lex->json_table->m_cur_json_table_column->
              set(Json_table_column::FOR_ORDINALITY);
          }
#line 42516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1769: /* json_table_column_type: json_table_field_type PATH_SYM json_text_literal json_opt_on_empty_or_error  */
#line 11607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::PATH, (yyvsp[-1].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
            {
              MYSQL_YYABORT;
            }
          }
#line 42531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1770: /* json_table_column_type: json_table_field_type EXISTS PATH_SYM json_text_literal  */
#line 11618 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::EXISTS_PATH, (yyvsp[0].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
               MYSQL_YYABORT;
          }
#line 42544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1775: /* json_opt_on_empty_or_error: %empty  */
#line 11637 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 42550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1780: /* json_on_response: ERROR_SYM  */
#line 11646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_ERROR;
          }
#line 42558 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1781: /* json_on_response: NULL_SYM  */
#line 11650 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_NULL;
          }
#line 42566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1782: /* json_on_response: DEFAULT json_text_literal_or_num  */
#line 11654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_DEFAULT;
            (yyval.json_on_response).m_default= (yyvsp[0].lex_string_with_metadata);
            Lex->json_table->m_cur_json_table_column->m_defaults_cs=
                                    thd->variables.collation_connection;
          }
#line 42577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1783: /* json_on_error_response: json_on_response ON ERROR_SYM  */
#line 11664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_error= (yyvsp[-2].json_on_response);
          }
#line 42585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1784: /* json_on_empty_response: json_on_response ON EMPTY_SYM  */
#line 11671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_empty= (yyvsp[-2].json_on_response);
          }
#line 42593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1785: /* $@153: %empty  */
#line 11678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            push_table_function_arg_context(Lex, thd->mem_root);
            //TODO: introduce IN_TABLE_FUNC_ARGUMENT?
            Select->parsing_place= IN_ON;
          }
#line 42603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1786: /* $@154: %empty  */
#line 11684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_function_json_table *jt=
              new (thd->mem_root) Table_function_json_table((yyvsp[-1].item));
            if (unlikely(!jt))
              MYSQL_YYABORT;
            /* See comment for class Table_function_json_table: */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->json_table= jt;

            Select->parsing_place= NO_MATTER;
            jt->set_name_resolution_context(Lex->pop_context());
          }
#line 42620 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1787: /* table_function: JSON_TABLE_SYM '(' $@153 expr ',' $@154 json_text_literal json_table_columns_clause ')' opt_table_alias_clause  */
#line 11697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            if (unlikely((yyvsp[0].lex_str_ptr) == NULL))
            {
              /* Alias is not optional. */
              my_error(ER_JSON_TABLE_ALIAS_REQUIRED, MYF(0));
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->json_table->m_nested_path.set_path(thd, (yyvsp[-3].lex_string_with_metadata))))
              MYSQL_YYABORT;
            if (!((yyval.table_list)= sel->add_table_to_list(thd,
                           new (thd->mem_root) Table_ident(thd, &any_db,
                                                           (yyvsp[0].lex_str_ptr), TRUE),
                           NULL,
                           TL_OPTION_TABLE_FUNCTION,
                           YYPS->m_lock_type,
                           YYPS->m_mdl_type,
                           0,0,0)))
              MYSQL_YYABORT;
            (yyval.table_list)->table_function= Lex->json_table;
            Lex->json_table= 0;
            status_var_increment(thd->status_var.feature_json);
          }
#line 42648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1788: /* esc_table_ref: table_ref  */
#line 11730 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 42654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1789: /* esc_table_ref: '{' ident table_ref '}'  */
#line 11731 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 42660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1790: /* derived_table_list: esc_table_ref  */
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1791: /* derived_table_list: derived_table_list ',' esc_table_ref  */
#line 11743 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1792: /* join_table: table_ref normal_join table_ref  */
#line 11757 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 42688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1793: /* $@155: %empty  */
#line 11764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 42702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1794: /* join_table: table_ref normal_join table_ref ON $@155 expr  */
#line 11774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 42713 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1795: /* $@156: %empty  */
#line 11782 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 42723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1796: /* join_table: table_ref normal_join table_ref USING $@156 '(' using_list ')'  */
#line 11788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 42733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1797: /* join_table: table_ref NATURAL inner_join table_factor  */
#line 11794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 42745 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1798: /* $@157: %empty  */
#line 11805 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 42759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1799: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_ref ON $@157 expr  */
#line 11815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 42771 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1800: /* $@158: %empty  */
#line 11823 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1801: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_factor $@158 USING '(' using_list ')'  */
#line 11829 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 42791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1802: /* join_table: table_ref NATURAL LEFT opt_outer JOIN_SYM table_factor  */
#line 11835 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 42804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1803: /* $@159: %empty  */
#line 11847 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 42818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1804: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_ref ON $@159 expr  */
#line 11857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 42831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1805: /* $@160: %empty  */
#line 11866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 42841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1806: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_factor $@160 USING '(' using_list ')'  */
#line 11872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 42852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1807: /* join_table: table_ref NATURAL RIGHT opt_outer JOIN_SYM table_factor  */
#line 11879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 42866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1808: /* inner_join: JOIN_SYM  */
#line 11892 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 42872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1809: /* inner_join: INNER_SYM JOIN_SYM  */
#line 11893 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 42878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1810: /* inner_join: STRAIGHT_JOIN  */
#line 11894 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 1; }
#line 42884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1811: /* normal_join: inner_join  */
#line 11898 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = (yyvsp[0].num); }
#line 42890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1812: /* normal_join: CROSS JOIN_SYM  */
#line 11899 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 42896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1813: /* opt_use_partition: %empty  */
#line 11907 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.string_list)= 0;}
#line 42902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1815: /* use_partition: PARTITION_SYM '(' using_list ')' have_partitioning  */
#line 11913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 42912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1816: /* table_factor: table_primary_ident_opt_parens  */
#line 11921 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1817: /* table_factor: table_primary_derived_opt_parens  */
#line 11922 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1818: /* table_factor: join_table_parens  */
#line 11924 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 42933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1819: /* table_factor: table_reference_list_parens  */
#line 11928 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1820: /* table_factor: table_function  */
#line 11929 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1821: /* table_primary_ident_opt_parens: table_primary_ident  */
#line 11933 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1822: /* table_primary_ident_opt_parens: '(' table_primary_ident_opt_parens ')'  */
#line 11934 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1823: /* table_primary_derived_opt_parens: table_primary_derived  */
#line 11938 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.table_list)= (yyvsp[0].table_list); }
#line 42963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1824: /* table_primary_derived_opt_parens: '(' table_primary_derived_opt_parens ')'  */
#line 11939 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42969 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1825: /* table_reference_list_parens: '(' table_reference_list_parens ')'  */
#line 11943 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 42975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1826: /* table_reference_list_parens: '(' nested_table_reference_list ')'  */
#line 11945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 42984 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1827: /* nested_table_reference_list: table_ref ',' table_ref  */
#line 11953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 42996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1828: /* nested_table_reference_list: nested_table_reference_list ',' table_ref  */
#line 11961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 43005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1829: /* join_table_parens: '(' join_table_parens ')'  */
#line 11968 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 43011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1830: /* join_table_parens: '(' join_table ')'  */
#line 11970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 43024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1831: /* table_primary_ident: table_ident opt_use_partition opt_for_system_time_clause opt_table_alias_clause opt_key_definition  */
#line 11984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 43040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1832: /* table_primary_derived: subquery opt_for_system_time_clause table_alias_clause  */
#line 12000 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-2].select_lex)->master_unit(), (yyvsp[-1].num), (yyvsp[0].lex_str_ptr))))
              MYSQL_YYABORT;
          }
#line 43049 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1833: /* table_primary_derived: subquery opt_for_system_time_clause  */
#line 12007 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING alias;
            if ((yyvsp[-1].select_lex)->make_unique_derived_name(thd, &alias) ||
                !((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-1].select_lex)->master_unit(), (yyvsp[0].num), &alias)))
              MYSQL_YYABORT;
          }
#line 43060 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1834: /* opt_outer: %empty  */
#line 12017 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43066 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1835: /* opt_outer: OUTER  */
#line 12018 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 43072 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1836: /* index_hint_clause: %empty  */
#line 12023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (thd->variables.old_behavior & OLD_MODE_IGNORE_INDEX_ONLY_FOR_JOIN) ?
                INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 43081 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1837: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 12027 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 43087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1838: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 12028 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 43093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1839: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 12029 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 43099 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1840: /* index_hint_type: FORCE_SYM  */
#line 12033 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 43105 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1841: /* index_hint_type: IGNORE_SYM  */
#line 12034 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 43111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1842: /* $@161: %empty  */
#line 12039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 43119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1844: /* $@162: %empty  */
#line 12044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 43127 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1849: /* $@163: %empty  */
#line 12057 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->alloc_index_hints(thd); }
#line 43133 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1851: /* $@164: %empty  */
#line 12061 "/home/buildbot/git/sql/sql_yacc.yy"
          {  Select->clear_index_hints(); }
#line 43139 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1853: /* opt_key_usage_list: %empty  */
#line 12066 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Select->add_index_hint(thd, NULL, 0); }
#line 43145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1854: /* opt_key_usage_list: key_usage_list  */
#line 12067 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 43151 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1855: /* key_usage_element: ident  */
#line 12072 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 43157 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1856: /* key_usage_element: PRIMARY_SYM  */
#line 12074 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 43163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1859: /* using_list: ident  */
#line 12084 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 43178 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1860: /* using_list: using_list ',' ident  */
#line 12095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 43193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1861: /* interval: interval_time_stamp  */
#line 12108 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 43199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1862: /* interval: DAY_HOUR_SYM  */
#line 12109 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 43205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1863: /* interval: DAY_MICROSECOND_SYM  */
#line 12110 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 43211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1864: /* interval: DAY_MINUTE_SYM  */
#line 12111 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 43217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1865: /* interval: DAY_SECOND_SYM  */
#line 12112 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 43223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1866: /* interval: HOUR_MICROSECOND_SYM  */
#line 12113 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 43229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1867: /* interval: HOUR_MINUTE_SYM  */
#line 12114 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 43235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1868: /* interval: HOUR_SECOND_SYM  */
#line 12115 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 43241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1869: /* interval: MINUTE_MICROSECOND_SYM  */
#line 12116 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 43247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1870: /* interval: MINUTE_SECOND_SYM  */
#line 12117 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 43253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1871: /* interval: SECOND_MICROSECOND_SYM  */
#line 12118 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 43259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1872: /* interval: YEAR_MONTH_SYM  */
#line 12119 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 43265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1873: /* interval_time_stamp: DAY_SYM  */
#line 12123 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 43271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1874: /* interval_time_stamp: WEEK_SYM  */
#line 12124 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 43277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1875: /* interval_time_stamp: HOUR_SYM  */
#line 12125 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 43283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1876: /* interval_time_stamp: MINUTE_SYM  */
#line 12126 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 43289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1877: /* interval_time_stamp: MONTH_SYM  */
#line 12127 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 43295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1878: /* interval_time_stamp: QUARTER_SYM  */
#line 12128 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 43301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1879: /* interval_time_stamp: SECOND_SYM  */
#line 12129 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 43307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1880: /* interval_time_stamp: MICROSECOND_SYM  */
#line 12130 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 43313 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1881: /* interval_time_stamp: YEAR_SYM  */
#line 12131 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 43319 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1882: /* date_time_type: DATE_SYM  */
#line 12135 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 43325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1883: /* date_time_type: TIME_SYM  */
#line 12136 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 43331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1884: /* date_time_type: DATETIME  */
#line 12137 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 43337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1885: /* date_time_type: TIMESTAMP  */
#line 12138 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 43343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1889: /* opt_table_alias_clause: %empty  */
#line 12148 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str_ptr)=0; }
#line 43349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1890: /* opt_table_alias_clause: table_alias_clause  */
#line 12149 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 43355 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1891: /* table_alias_clause: table_alias ident_table_alias  */
#line 12154 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 43365 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1894: /* opt_where_clause: %empty  */
#line 12167 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->where= 0; }
#line 43371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1895: /* $@165: %empty  */
#line 12169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_WHERE;
          }
#line 43379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1896: /* opt_where_clause: WHERE $@165 expr  */
#line 12173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 43391 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1898: /* $@166: %empty  */
#line 12185 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_HAVING;
          }
#line 43399 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1899: /* opt_having_clause: HAVING $@166 expr  */
#line 12189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 43411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1902: /* group_list: group_list ',' order_ident order_dir  */
#line 12209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 43420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1903: /* group_list: order_ident order_dir  */
#line 12214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 43429 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1904: /* olap_opt: %empty  */
#line 12221 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1905: /* olap_opt: WITH_CUBE_SYM  */
#line 12223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 43456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1906: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12240 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 43475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1907: /* opt_window_clause: %empty  */
#line 12262 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1908: /* opt_window_clause: WINDOW_SYM window_def_list  */
#line 12265 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1911: /* window_def: window_name AS window_spec  */
#line 12275 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 43500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1912: /* $@167: %empty  */
#line 12287 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->prepare_add_window_spec(thd); }
#line 43506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1913: /* window_spec: '(' $@167 opt_window_ref opt_window_partition_clause opt_window_order_clause opt_window_frame_clause ')'  */
#line 12291 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 43512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1914: /* opt_window_ref: %empty  */
#line 12295 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1915: /* opt_window_ref: ident  */
#line 12297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 43528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1916: /* opt_window_partition_clause: %empty  */
#line 12305 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 43534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1918: /* opt_window_order_clause: %empty  */
#line 12310 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 43540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1919: /* opt_window_order_clause: ORDER_SYM BY order_list  */
#line 12311 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Select->order_list= *((yyvsp[0].select_order)); }
#line 43546 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1920: /* opt_window_frame_clause: %empty  */
#line 12315 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1921: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 12317 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 43567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1922: /* window_frame_units: ROWS_SYM  */
#line 12330 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 43573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1923: /* window_frame_units: RANGE_SYM  */
#line 12331 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 43579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1924: /* window_frame_extent: window_frame_start  */
#line 12336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 43593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1925: /* window_frame_extent: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 12346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 43603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1926: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 12355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1927: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 12362 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1928: /* window_frame_start: literal PRECEDING_SYM  */
#line 12369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1929: /* window_frame_bound: window_frame_start  */
#line 12378 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 43642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1930: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 12380 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43653 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1931: /* window_frame_bound: literal FOLLOWING_SYM  */
#line 12387 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 43664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1932: /* opt_window_frame_exclusion: %empty  */
#line 12396 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 43670 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1933: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 12398 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 43676 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1934: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 12400 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 43682 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1935: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 12402 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 43688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1936: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_MARIADB_SYM  */
#line 12404 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 43694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1937: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_ORACLE_SYM  */
#line 12406 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 43700 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1941: /* alter_order_item: simple_ident_nospvar order_dir  */
#line 12424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 43710 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1942: /* opt_order_clause: %empty  */
#line 12437 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= NULL; }
#line 43716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1943: /* opt_order_clause: order_clause  */
#line 12439 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= (yyvsp[0].select_order); }
#line 43722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1944: /* $@168: %empty  */
#line 12444 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= "ORDER clause";
          }
#line 43730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1945: /* order_clause: ORDER_SYM BY $@168 order_list  */
#line 12448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 43738 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1946: /* order_list: order_list ',' order_ident order_dir  */
#line 12455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 43748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1947: /* order_list: order_ident order_dir  */
#line 12461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 43758 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1948: /* order_dir: %empty  */
#line 12469 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 1; }
#line 43764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1949: /* order_dir: ASC  */
#line 12470 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 1; }
#line 43770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1950: /* order_dir: DESC  */
#line 12471 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 0; }
#line 43776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1951: /* opt_limit_clause: %empty  */
#line 12477 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit).clear(); }
#line 43782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1952: /* opt_limit_clause: limit_clause  */
#line 12479 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 43788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1953: /* limit_clause: LIMIT limit_options  */
#line 12484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1954: /* limit_clause: LIMIT limit_options ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1955: /* limit_clause: LIMIT ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12497 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).clear();
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43817 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1956: /* limit_clause: fetch_first_clause  */
#line 12502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit ||
                !(yyval.select_limit).select_limit->basic_const_item() ||
                 (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1957: /* fetch_first_clause: FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12513 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1958: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= (yyvsp[-5].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43857 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1959: /* fetch_first_clause: FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43868 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1960: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12542 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[-6].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 43879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1961: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows  */
#line 12549 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= (yyvsp[-1].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1966: /* only_or_with_ties: ONLY_SYM  */
#line 12568 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 0; }
#line 43896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1967: /* only_or_with_ties: WITH TIES_SYM  */
#line 12569 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 43902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1968: /* opt_global_limit_clause: opt_limit_clause  */
#line 12575 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 43910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1969: /* limit_options: limit_option  */
#line 12582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= NULL;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1970: /* limit_options: limit_option ',' limit_option  */
#line 12589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1971: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 12596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 43943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1972: /* limit_option: ident_cli  */
#line 12606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1973: /* limit_option: ident_cli '.' ident_cli  */
#line 12611 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 43961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1974: /* limit_option: param_marker  */
#line 12616 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 43969 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1975: /* limit_option: ULONGLONG_NUM  */
#line 12620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1976: /* limit_option: LONG_NUM  */
#line 12626 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43989 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1977: /* limit_option: NUM  */
#line 12632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43999 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1978: /* limit_rows_option: limit_option  */
#line 12641 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 44007 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1979: /* delete_limit_clause: %empty  */
#line 12648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->limit_params.select_limit= 0;
          }
#line 44016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1980: /* delete_limit_clause: LIMIT limit_option  */
#line 12653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->limit_params.select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->limit_params.explicit_limit= 1;
          }
#line 44027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1981: /* delete_limit_clause: LIMIT ROWS_SYM EXAMINED_SYM  */
#line 12659 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { thd->parse_error(); MYSQL_YYABORT; }
#line 44033 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1982: /* delete_limit_clause: LIMIT limit_option ROWS_SYM EXAMINED_SYM  */
#line 12660 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { thd->parse_error(); MYSQL_YYABORT; }
#line 44039 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1983: /* order_limit_lock: order_or_limit  */
#line 12665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 44048 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1984: /* order_limit_lock: order_or_limit select_lock_type  */
#line 12670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 44057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1985: /* order_limit_lock: select_lock_type  */
#line 12675 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.clear();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 44070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1986: /* opt_order_limit_lock: %empty  */
#line 12687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 44079 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1987: /* opt_order_limit_lock: order_limit_lock  */
#line 12691 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 44085 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1990: /* opt_procedure_or_into: %empty  */
#line 12704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock).empty();
          }
#line 44093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1991: /* opt_procedure_or_into: procedure_clause opt_select_lock_type  */
#line 12708 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 44101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1992: /* opt_procedure_or_into: into opt_select_lock_type  */
#line 12712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 44110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1993: /* order_or_limit: order_clause opt_limit_clause  */
#line 12721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 44122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1994: /* order_or_limit: limit_clause  */
#line 12729 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 44134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1997: /* int_num: opt_plus NUM  */
#line 12745 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44140 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1998: /* int_num: '-' NUM  */
#line 12746 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1999: /* ulong_num: opt_plus NUM  */
#line 12750 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44152 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2000: /* ulong_num: HEX_NUM  */
#line 12751 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= strtoul((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 44158 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2001: /* ulong_num: opt_plus LONG_NUM  */
#line 12752 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2002: /* ulong_num: opt_plus ULONGLONG_NUM  */
#line 12753 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2003: /* ulong_num: opt_plus DECIMAL_NUM  */
#line 12754 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2004: /* ulong_num: opt_plus FLOAT_NUM  */
#line 12755 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2005: /* real_ulong_num: NUM  */
#line 12759 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44188 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2006: /* real_ulong_num: HEX_NUM  */
#line 12760 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 44194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2007: /* real_ulong_num: LONG_NUM  */
#line 12761 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44200 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2008: /* real_ulong_num: ULONGLONG_NUM  */
#line 12762 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2009: /* real_ulong_num: dec_num_error  */
#line 12763 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 44212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2010: /* longlong_num: opt_plus NUM  */
#line 12767 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2011: /* longlong_num: LONG_NUM  */
#line 12768 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2012: /* longlong_num: '-' NUM  */
#line 12769 "/home/buildbot/git/sql/sql_yacc.yy"
                          { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44230 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2013: /* longlong_num: '-' LONG_NUM  */
#line 12770 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2014: /* ulonglong_num: opt_plus NUM  */
#line 12774 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2015: /* ulonglong_num: opt_plus ULONGLONG_NUM  */
#line 12775 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44248 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2016: /* ulonglong_num: opt_plus LONG_NUM  */
#line 12776 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2017: /* ulonglong_num: opt_plus DECIMAL_NUM  */
#line 12777 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2018: /* ulonglong_num: opt_plus FLOAT_NUM  */
#line 12778 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2019: /* real_ulonglong_num: NUM  */
#line 12782 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2020: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 12783 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2021: /* real_ulonglong_num: HEX_NUM  */
#line 12784 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 44284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2022: /* real_ulonglong_num: LONG_NUM  */
#line 12785 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2023: /* real_ulonglong_num: dec_num_error  */
#line 12786 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 44296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2024: /* dec_num_error: dec_num  */
#line 12791 "/home/buildbot/git/sql/sql_yacc.yy"
          { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 44302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2027: /* choice: ulong_num  */
#line 12800 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 44308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2028: /* choice: DEFAULT  */
#line 12801 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 44314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2029: /* bool: ulong_num  */
#line 12805 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 44320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2030: /* bool: TRUE_SYM  */
#line 12806 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1; }
#line 44326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2031: /* bool: FALSE_SYM  */
#line 12807 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 44332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2032: /* $@169: %empty  */
#line 12812 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           (yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 44360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2033: /* procedure_clause: PROCEDURE_SYM ident $@169 '(' procedure_list ')'  */
#line 12836 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 44369 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2034: /* procedure_list: %empty  */
#line 12843 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44375 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2035: /* procedure_list: procedure_list2  */
#line 12844 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 44381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2038: /* procedure_item: remember_name expr remember_end  */
#line 12854 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 44392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2039: /* $@170: %empty  */
#line 12863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 44404 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2040: /* select_var_list_init: $@170 select_var_list  */
#line 12871 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44410 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2042: /* select_var_list: select_var_ident  */
#line 12876 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 44416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2043: /* select_var_ident: select_outvar  */
#line 12880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 44437 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2044: /* select_outvar: '@' ident_or_text  */
#line 12900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 44451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2045: /* select_outvar: ident_or_text  */
#line 12910 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 44460 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2046: /* select_outvar: ident '.' ident  */
#line 12915 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 44469 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2047: /* into: INTO into_destination  */
#line 12923 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2048: /* $@171: %empty  */
#line 12928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 44491 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2049: /* $@172: %empty  */
#line 12940 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 44497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2051: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 12943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 44516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2052: /* into_destination: select_var_list_init  */
#line 12958 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            status_var_increment(thd->status_var.feature_into_variable);
          }
#line 44525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2053: /* $@173: %empty  */
#line 12970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 44537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2054: /* do: DO_SYM $@173 expr_list  */
#line 12978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 44548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2055: /* $@174: %empty  */
#line 12992 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 44559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2056: /* drop: DROP opt_temporary table_or_tables opt_if_exists $@174 table_list opt_lock_wait_timeout opt_restrict  */
#line 12999 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2057: /* $@175: %empty  */
#line 13001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 44574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2058: /* drop: DROP INDEX_SYM $@175 opt_if_exists_table_element ident ON table_ident opt_lock_wait_timeout  */
#line 13006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys).str, (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 44596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2059: /* drop: DROP DATABASE opt_if_exists ident  */
#line 13024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 44606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2060: /* drop: DROP USER_SYM opt_if_exists clear_privileges user_list  */
#line 13030 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 44614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2061: /* drop: DROP ROLE_SYM opt_if_exists clear_privileges role_list  */
#line 13034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 44622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2062: /* $@176: %empty  */
#line 13038 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 44633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2063: /* drop: DROP VIEW_SYM opt_if_exists $@176 table_list opt_restrict  */
#line 13045 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2064: /* drop: DROP EVENT_SYM opt_if_exists sp_name  */
#line 13047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 44648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2065: /* drop: DROP TRIGGER_SYM opt_if_exists sp_name  */
#line 13052 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 44658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2066: /* drop: DROP SERVER_SYM opt_if_exists ident_or_text  */
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 44667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2067: /* $@177: %empty  */
#line 13064 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 44679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2068: /* drop: DROP opt_temporary SEQUENCE_SYM opt_if_exists $@177 table_list  */
#line 13072 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2072: /* table_name: table_ident  */
#line 13083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 44698 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2073: /* table_name_with_opt_use_partition: table_ident opt_use_partition  */
#line 13095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 44712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2076: /* table_alias_ref: table_ident_opt_wild  */
#line 13113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 44726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2077: /* opt_if_exists_table_element: %empty  */
#line 13126 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 44735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2078: /* opt_if_exists_table_element: IF_SYM EXISTS  */
#line 13131 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 44744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2079: /* opt_if_exists: %empty  */
#line 13139 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 44752 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2080: /* opt_if_exists: IF_SYM EXISTS  */
#line 13143 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 44760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2081: /* opt_temporary: %empty  */
#line 13149 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 44766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2082: /* opt_temporary: TEMPORARY  */
#line 13150 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 44772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2083: /* $@178: %empty  */
#line 13158 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_INSERT;
            Lex->duplicates= DUP_ERROR;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 44783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2084: /* $@179: %empty  */
#line 13165 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-3].lock_type), true, false);
          }
#line 44791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2085: /* insert: INSERT $@178 insert_start insert_lock_option opt_ignore opt_into insert_table $@179 insert_field_spec opt_insert_update opt_returning stmt_end  */
#line 13170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 44800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2086: /* $@180: %empty  */
#line 13178 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REPLACE;
            Lex->duplicates= DUP_REPLACE;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 44811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2087: /* $@181: %empty  */
#line 13185 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true, false);
          }
#line 44819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2088: /* replace: REPLACE $@180 insert_start replace_lock_option opt_into insert_table $@181 insert_field_spec opt_returning stmt_end  */
#line 13190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 44828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2089: /* insert_start: %empty  */
#line 13196 "/home/buildbot/git/sql/sql_yacc.yy"
              {
                if (Lex->main_select_push())
                  MYSQL_YYABORT;
                Lex->init_select();
                Lex->inc_select_stack_outer_barrier();
                Lex->current_select->parsing_place= BEFORE_OPT_LIST;
              }
#line 44840 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2090: /* stmt_end: %empty  */
#line 13205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
              Lex->pop_select(); //main select
              if (Lex->check_main_unit_semantics())
                MYSQL_YYABORT;
            }
#line 44850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2091: /* insert_lock_option: %empty  */
#line 13214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 44863 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2093: /* insert_lock_option: HIGH_PRIORITY  */
#line 13223 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 44869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2094: /* replace_lock_option: %empty  */
#line 13227 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 44875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2096: /* insert_replace_option: LOW_PRIORITY  */
#line 13232 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 44881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2097: /* insert_replace_option: DELAYED_SYM  */
#line 13234 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 44891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2100: /* $@182: %empty  */
#line 13244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 44899 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2101: /* insert_table: $@182 table_name_with_opt_use_partition  */
#line 13248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 44910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2102: /* insert_field_spec: insert_values  */
#line 13257 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 44916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2103: /* insert_field_spec: insert_field_list insert_values  */
#line 13258 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 44922 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2104: /* $@183: %empty  */
#line 13260 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 44935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2106: /* insert_field_list: LEFT_PAREN_ALT opt_fields ')'  */
#line 13273 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 44943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2109: /* fields: fields ',' insert_ident  */
#line 13285 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44949 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2110: /* fields: insert_ident  */
#line 13286 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 44955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2111: /* insert_values: create_select_query_expression  */
#line 13292 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 44961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2116: /* ident_eq_value: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13307 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2117: /* equal: '='  */
#line 13316 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 44978 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2118: /* equal: SET_VAR  */
#line 13317 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 44984 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2119: /* opt_equal: %empty  */
#line 13321 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2120: /* opt_equal: equal  */
#line 13322 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 44996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2121: /* opt_with: opt_equal  */
#line 13326 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 45002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2122: /* opt_with: WITH  */
#line 13327 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 45008 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2123: /* opt_by: opt_equal  */
#line 13331 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 45014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2124: /* opt_by: BY  */
#line 13332 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 45020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2125: /* $@184: %empty  */
#line 13337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2126: /* no_braces: '(' $@184 opt_values ')'  */
#line 13342 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2127: /* $@185: %empty  */
#line 13353 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2128: /* no_braces_with_names: '(' $@185 opt_values_with_names ')'  */
#line 13358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45062 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2129: /* opt_values: %empty  */
#line 13368 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2131: /* opt_values_with_names: %empty  */
#line 13373 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2133: /* values: values ',' expr_or_ignore_or_default  */
#line 13379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2134: /* values: expr_or_ignore_or_default  */
#line 13384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2135: /* values_with_names: values_with_names ',' remember_name expr_or_ignore_or_default remember_end  */
#line 13392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 45104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2136: /* values_with_names: remember_name expr_or_ignore_or_default remember_end  */
#line 13400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 45116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2137: /* expr_or_ignore: expr  */
#line 13410 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)= (yyvsp[0].item);}
#line 45122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2138: /* expr_or_ignore: IGNORE_SYM  */
#line 13412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2139: /* expr_or_ignore_or_default: expr_or_ignore  */
#line 13420 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item);}
#line 45138 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2140: /* expr_or_ignore_or_default: DEFAULT  */
#line 13422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2142: /* $@186: %empty  */
#line 13431 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->duplicates= DUP_UPDATE; }
#line 45154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2143: /* $@187: %empty  */
#line 13433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 45162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2144: /* opt_insert_update: ON DUPLICATE_SYM $@186 KEY_SYM UPDATE_SYM $@187 insert_update_list  */
#line 13437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= NO_MATTER;
          }
#line 45170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2145: /* update_table_list: table_ident opt_use_partition for_portion_of_time_clause opt_table_alias_clause opt_key_definition  */
#line 13445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 45185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2146: /* update_table_list: join_table_list  */
#line 13455 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 45191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2147: /* $@188: %empty  */
#line 13462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 45204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2148: /* $@189: %empty  */
#line 13472 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_multiupdate= false;
            LEX *lex= Lex;
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
            {
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
              is_multiupdate= true;
            }
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_update(is_multiupdate)))
              MYSQL_YYABORT;
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible
              later while processing the statement.
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1, false);
          }
#line 45235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2149: /* $@190: %empty  */
#line 13499 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
          }
#line 45244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2150: /* update: UPDATE_SYM $@188 opt_low_priority opt_ignore update_table_list SET update_list $@189 opt_where_clause opt_order_clause delete_limit_clause $@190 stmt_end  */
#line 13502 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 45250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2153: /* update_elem: simple_ident_nospvar equal DEFAULT  */
#line 13512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 45261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2154: /* update_elem: simple_ident_nospvar equal expr_or_ignore  */
#line 13519 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 45270 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2157: /* insert_update_elem: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2158: /* opt_low_priority: %empty  */
#line 13541 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 45287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2159: /* opt_low_priority: LOW_PRIORITY  */
#line 13542 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 45293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2160: /* $@191: %empty  */
#line 13549 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_delete(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 45308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2161: /* delete: DELETE_SYM $@191 delete_part2  */
#line 13560 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 45317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2162: /* opt_delete_system_time: %empty  */
#line 13568 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 45325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2163: /* opt_delete_system_time: BEFORE_SYM SYSTEM_TIME_SYM history_point  */
#line 13572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 45333 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2164: /* delete_part2: opt_delete_options single_multi  */
#line 13578 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 45339 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2165: /* $@192: %empty  */
#line 13580 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->last_table()->vers_conditions= lex->vers_conditions;
            lex->sql_command= SQLCOM_DELETE;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(false)))
              MYSQL_YYABORT;
            if (lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2166: /* delete_part2: HISTORY_SYM delete_single_table opt_delete_system_time $@192 stmt_end  */
#line 13591 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2167: /* delete_single_table: FROM table_ident opt_use_partition  */
#line 13596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           0)))
              MYSQL_YYABORT;
            Select->table_list.save_and_clear(&Lex->auxiliary_table_list);
            /* Save the number of auxiliary tables */
            Lex->table_count_update= 1;

            Lex->query_tables= 0;
            Lex->query_tables_last= &Lex->query_tables;
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            Lex->auxiliary_table_list.first->correspondent_table=
              Lex->query_tables;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 45391 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2168: /* delete_single_table_for_period: delete_single_table opt_for_portion_of_time_clause  */
#line 13626 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].num))
              Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 45400 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2169: /* $@193: %empty  */
#line 13638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            lex->sql_command= SQLCOM_DELETE;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(false)))
              MYSQL_YYABORT;
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 45416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2170: /* single_multi: delete_single_table_for_period opt_where_clause opt_order_clause delete_limit_clause opt_returning $@193 stmt_end  */
#line 13649 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 45422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2171: /* $@194: %empty  */
#line 13651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE_MULTI;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(true)))
              MYSQL_YYABORT;
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 45437 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2172: /* $@195: %empty  */
#line 13662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 45446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2173: /* single_multi: table_alias_ref_list $@194 FROM join_table_list opt_where_clause $@195 stmt_end  */
#line 13665 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 45452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2174: /* $@196: %empty  */
#line 13667 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE_MULTI;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(true)))
              MYSQL_YYABORT;
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 45467 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2175: /* $@197: %empty  */
#line 13678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
          }
#line 45476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2176: /* single_multi: FROM table_alias_ref_list $@196 USING join_table_list opt_where_clause $@197 stmt_end  */
#line 13681 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 45482 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2177: /* opt_returning: %empty  */
#line 13686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
          }
#line 45490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2178: /* $@198: %empty  */
#line 13690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
            /*
              When parsing_place is IN_RETURNING, we push select items to
              item_list of builtin_select instead of current_select.
              But set parsing_place of current_select to true.

              Because parsing_place for builtin_select will be IN_RETURNING,
              regardless there is SELECT in RETURNING. Example, if
              there is RETURNING (SELECT...), then when we parse
              SELECT inside RETURNING, builtin_select->parsing_place
              will still be true. So the select items of SELECT inside
              RETURNING will be added to item_list of builtin_select which
              is incorrect. We want to prevent this from happening.
              Since for every new select, a new SELECT_LEX
              object is created and pushed to select stack, current_select
              will point to SELECT inside RETURNING, and also has
              parsing_place not set to IN_RETURNING by default.
              So items are correctly added to item_list of SELECT inside
              RETURNING instead of builtin_select.
            */

            thd->lex->current_select->parsing_place= IN_RETURNING;
            thd->lex->push_context(&thd->lex->returning()->context);
          }
#line 45520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2179: /* opt_returning: RETURNING_SYM $@198 select_item_list  */
#line 13716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->pop_context();
            thd->lex->current_select->parsing_place= NO_MATTER;
          }
#line 45529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2180: /* opt_wild: %empty  */
#line 13723 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2181: /* opt_wild: '.' '*'  */
#line 13724 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 45541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2182: /* opt_delete_options: %empty  */
#line 13728 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45547 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2183: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 13729 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 45553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2184: /* opt_delete_option: QUICK  */
#line 13733 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->options|= OPTION_QUICK; }
#line 45559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2185: /* opt_delete_option: LOW_PRIORITY  */
#line 13734 "/home/buildbot/git/sql/sql_yacc.yy"
                       { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 45565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2186: /* opt_delete_option: IGNORE_SYM  */
#line 13735 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->ignore= 1; }
#line 45571 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2187: /* $@199: %empty  */
#line 13740 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 45586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2188: /* $@200: %empty  */
#line 13751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 45598 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2189: /* truncate: TRUNCATE_SYM $@199 opt_table_sym table_name opt_lock_wait_timeout $@200 opt_truncate_table_storage_clause  */
#line 13758 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { }
#line 45604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2196: /* profile_def: CPU_SYM  */
#line 13776 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 45612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2197: /* profile_def: MEMORY_SYM  */
#line 13780 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 45620 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2198: /* profile_def: BLOCK_SYM IO_SYM  */
#line 13784 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 45628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2199: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 13788 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 45636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2200: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 13792 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 45644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2201: /* profile_def: IPC_SYM  */
#line 13796 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 45652 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2202: /* profile_def: SWAPS_SYM  */
#line 13800 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 45660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2203: /* profile_def: SOURCE_SYM  */
#line 13804 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 45668 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2204: /* profile_def: ALL  */
#line 13808 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 45676 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2205: /* opt_profile_args: %empty  */
#line 13815 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
#line 45684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2206: /* opt_profile_args: FOR_SYM QUERY_SYM NUM  */
#line 13819 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 45692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2207: /* $@201: %empty  */
#line 13828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 45707 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2208: /* show: SHOW $@201 show_param  */
#line 13839 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 45716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2209: /* show_param: DATABASES wild_and_where  */
#line 13847 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 45727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2210: /* show_param: opt_full TABLES opt_db wild_and_where  */
#line 13854 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 45739 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2211: /* show_param: opt_full TRIGGERS_SYM opt_db wild_and_where  */
#line 13862 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 45751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2212: /* show_param: EVENTS_SYM opt_db wild_and_where  */
#line 13870 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 45763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2213: /* show_param: TABLE_SYM STATUS_SYM opt_db wild_and_where  */
#line 13878 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 45775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2214: /* show_param: OPEN_SYM TABLES opt_db wild_and_where  */
#line 13886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 45787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2215: /* show_param: PLUGINS_SYM  */
#line 13894 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 45798 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2216: /* show_param: PLUGINS_SYM SONAME_SYM TEXT_STRING_sys  */
#line 13901 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 45809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2217: /* show_param: PLUGINS_SYM SONAME_SYM wild_and_where  */
#line 13908 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 45819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2218: /* show_param: ENGINE_SYM known_storage_engines show_engine_param  */
#line 13914 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 45825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2219: /* show_param: ENGINE_SYM ALL show_engine_param  */
#line 13916 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= NULL; }
#line 45831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2220: /* show_param: opt_full COLUMNS from_or_in table_ident opt_db wild_and_where  */
#line 13918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 45844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2221: /* show_param: master_or_binary LOGS_SYM  */
#line 13927 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 45852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2222: /* show_param: SLAVE HOSTS_SYM  */
#line 13931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 45860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2223: /* $@202: %empty  */
#line 13935 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 45869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2225: /* $@203: %empty  */
#line 13941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 45878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2226: /* show_param: RELAYLOG_SYM optional_connection_name EVENTS_SYM binlog_in binlog_from $@203 opt_global_limit_clause optional_for_channel  */
#line 13946 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 45884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2227: /* show_param: keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 13948 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 45897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2228: /* show_param: opt_storage ENGINES_SYM  */
#line 13957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 45908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2229: /* show_param: AUTHORS_SYM  */
#line 13964 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 45917 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2230: /* show_param: CONTRIBUTORS_SYM  */
#line 13969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 45926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2231: /* show_param: PRIVILEGES  */
#line 13974 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 45935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2232: /* show_param: COUNT_SYM '(' '*' ')' WARNINGS  */
#line 13979 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 45944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2233: /* show_param: COUNT_SYM '(' '*' ')' ERRORS  */
#line 13984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 45953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2234: /* show_param: WARNINGS opt_global_limit_clause  */
#line 13989 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 45959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2235: /* show_param: ERRORS opt_global_limit_clause  */
#line 13991 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 45965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2236: /* show_param: PROFILES_SYM  */
#line 13993 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 45971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2237: /* show_param: PROFILE_SYM opt_profile_defs opt_profile_args opt_global_limit_clause  */
#line 13995 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 45982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2238: /* show_param: opt_var_type STATUS_SYM wild_and_where  */
#line 14002 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 45994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2239: /* show_param: opt_full PROCESSLIST_SYM  */
#line 14010 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 46000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2240: /* show_param: opt_var_type VARIABLES wild_and_where  */
#line 14012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 46012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2241: /* show_param: charset wild_and_where  */
#line 14020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 46023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2242: /* show_param: COLLATION_SYM wild_and_where  */
#line 14027 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 46034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2243: /* show_param: GRANTS  */
#line 14034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 46046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2244: /* show_param: GRANTS FOR_SYM user_or_role clear_privileges  */
#line 14042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 46056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2245: /* show_param: CREATE DATABASE opt_if_not_exists ident  */
#line 14048 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 46065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2246: /* show_param: CREATE TABLE_SYM table_ident  */
#line 14053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 46077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2247: /* show_param: CREATE VIEW_SYM table_ident  */
#line 14061 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 46089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2248: /* show_param: CREATE SEQUENCE_SYM table_ident  */
#line 14069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 46101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2249: /* show_param: BINLOG_SYM STATUS_SYM  */
#line 14077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 46109 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2250: /* show_param: MASTER_SYM STATUS_SYM  */
#line 14081 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 46117 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2251: /* show_param: ALL SLAVES STATUS_SYM  */
#line 14085 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(Lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status(true)))
              MYSQL_YYABORT;
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 46128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2252: /* show_param: SLAVE optional_connection_name STATUS_SYM optional_for_channel  */
#line 14092 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(Lex->m_sql_cmd= new (thd->mem_root)
                  Sql_cmd_show_slave_status()))
              MYSQL_YYABORT;
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 46139 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2253: /* show_param: CREATE PROCEDURE_SYM sp_name  */
#line 14099 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 46150 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2254: /* show_param: CREATE FUNCTION_SYM sp_name  */
#line 14106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 46161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2255: /* show_param: CREATE PACKAGE_MARIADB_SYM sp_name  */
#line 14113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 46171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2256: /* show_param: CREATE PACKAGE_ORACLE_SYM sp_name  */
#line 14119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 46181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2257: /* show_param: CREATE PACKAGE_MARIADB_SYM BODY_MARIADB_SYM sp_name  */
#line 14125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 46191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2258: /* show_param: CREATE PACKAGE_ORACLE_SYM BODY_ORACLE_SYM sp_name  */
#line 14131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 46201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2259: /* show_param: CREATE TRIGGER_SYM sp_name  */
#line 14137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 46211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2260: /* show_param: CREATE USER_SYM  */
#line 14143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user=
                          (LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 46223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2261: /* show_param: CREATE USER_SYM user  */
#line 14151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 46232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2262: /* show_param: PROCEDURE_SYM STATUS_SYM wild_and_where  */
#line 14156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46243 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2263: /* show_param: FUNCTION_SYM STATUS_SYM wild_and_where  */
#line 14163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2264: /* show_param: PACKAGE_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2265: /* show_param: PACKAGE_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14177 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46276 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2266: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2267: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 46298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2268: /* show_param: PROCEDURE_SYM CODE_SYM sp_name  */
#line 14198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2269: /* show_param: FUNCTION_SYM CODE_SYM sp_name  */
#line 14203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2270: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM CODE_SYM sp_name  */
#line 14208 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2271: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM CODE_SYM sp_name  */
#line 14213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 46334 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2272: /* show_param: CREATE EVENT_SYM sp_name  */
#line 14218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 46343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2273: /* show_param: describe_command opt_format_json FOR_SYM expr  */
#line 14227 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 46355 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2274: /* show_param: ANALYZE_SYM opt_format_json FOR_SYM expr  */
#line 14235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_ANALYZE;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_ANALYZE_JSON : SCH_ANALYZE_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 46367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2275: /* show_param: IDENT_sys remember_tok_start wild_and_where  */
#line 14243 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 46390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2276: /* show_engine_param: STATUS_SYM  */
#line 14265 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 46396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2277: /* show_engine_param: MUTEX_SYM  */
#line 14267 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 46402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2278: /* show_engine_param: LOGS_SYM  */
#line 14269 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 46408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2283: /* opt_db: %empty  */
#line 14283 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= null_clex_str; }
#line 46414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2284: /* opt_db: from_or_in ident  */
#line 14284 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 46420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2285: /* opt_full: %empty  */
#line 14288 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=0; }
#line 46426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2286: /* opt_full: FULL  */
#line 14289 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=1; }
#line 46432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2289: /* binlog_in: %empty  */
#line 14298 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = 0; }
#line 46438 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2290: /* binlog_in: IN_SYM TEXT_STRING_sys  */
#line 14299 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 46444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2291: /* binlog_from: %empty  */
#line 14303 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = 4; /* skip magic number */ }
#line 46450 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2292: /* binlog_from: FROM ulonglong_num  */
#line 14304 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 46456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2293: /* wild_and_where: %empty  */
#line 14308 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.simple_string)= 0; }
#line 46462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2294: /* wild_and_where: LIKE remember_tok_start TEXT_STRING_sys  */
#line 14310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).length,
                                                   system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 46475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2295: /* wild_and_where: WHERE remember_tok_start expr  */
#line 14319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 46486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2296: /* $@204: %empty  */
#line 14330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 46503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2297: /* describe: describe_command table_ident $@204 opt_describe_column  */
#line 14343 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 46512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2298: /* $@205: %empty  */
#line 14348 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_NORMAL; }
#line 46518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2299: /* describe: describe_command opt_extended_describe $@205 explainable_command  */
#line 14350 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 46527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2308: /* analyze_stmt_command: ANALYZE_SYM opt_format_json explainable_command  */
#line 14372 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->analyze_stmt= true;
          }
#line 46535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2309: /* opt_extended_describe: EXTENDED_SYM  */
#line 14378 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_EXTENDED; }
#line 46541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2310: /* opt_extended_describe: EXTENDED_SYM ALL  */
#line 14380 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 46547 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2311: /* opt_extended_describe: PARTITIONS_SYM  */
#line 14381 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 46553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2312: /* opt_extended_describe: opt_format_json  */
#line 14382 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 46559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2313: /* opt_format_json: %empty  */
#line 14386 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2314: /* opt_format_json: FORMAT_SYM '=' ident_or_text  */
#line 14388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                                "EXPLAIN/ANALYZE", (yyvsp[0].lex_str).str));
          }
#line 46579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2315: /* opt_describe_column: %empty  */
#line 14400 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2316: /* opt_describe_column: text_string  */
#line 14401 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->wild= (yyvsp[0].string); }
#line 46591 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2317: /* opt_describe_column: ident  */
#line 14403 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 46603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2318: /* explain_for_connection: describe_command opt_format_json FOR_SYM CONNECTION_SYM expr  */
#line 14419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 46625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2319: /* $@206: %empty  */
#line 14442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 46636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2320: /* flush: FLUSH_SYM opt_no_write_to_binlog $@206 flush_options  */
#line 14448 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 46642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2321: /* $@207: %empty  */
#line 14453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 46656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2322: /* flush_options: table_or_tables $@207 opt_table_list opt_flush_lock  */
#line 14463 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2323: /* flush_options: flush_options_list  */
#line 14465 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46668 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2324: /* opt_flush_lock: %empty  */
#line 14469 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2325: /* opt_flush_lock: flush_lock  */
#line 14471 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 46688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2326: /* flush_lock: WITH READ_SYM LOCK_SYM optional_flush_tables_arguments  */
#line 14484 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 46694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2327: /* $@208: %empty  */
#line 14486 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 46708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2328: /* flush_lock: FOR_SYM $@208 EXPORT_SYM  */
#line 14494 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 46714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2330: /* flush_options_list: flush_option  */
#line 14500 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46720 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2331: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14505 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 46726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2332: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14507 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 46732 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2333: /* flush_option: GENERAL LOGS_SYM  */
#line 14509 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 46738 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2334: /* flush_option: SLOW LOGS_SYM  */
#line 14511 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 46744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2335: /* flush_option: BINARY LOGS_SYM opt_delete_gtid_domain  */
#line 14513 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 46750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2336: /* flush_option: RELAY LOGS_SYM optional_connection_name optional_for_channel  */
#line 14515 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 46762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2337: /* flush_option: QUERY_SYM CACHE_SYM  */
#line 14523 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 46768 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2338: /* flush_option: HOSTS_SYM  */
#line 14525 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_HOSTS; }
#line 46774 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2339: /* flush_option: PRIVILEGES  */
#line 14527 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 46780 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2340: /* flush_option: LOGS_SYM  */
#line 14529 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 46789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2341: /* flush_option: STATUS_SYM  */
#line 14534 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_STATUS; }
#line 46795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2342: /* flush_option: SLAVE optional_connection_name  */
#line 14536 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 46807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2343: /* flush_option: MASTER_SYM  */
#line 14544 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_MASTER; }
#line 46813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2344: /* flush_option: DES_KEY_FILE  */
#line 14546 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 46819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2345: /* flush_option: RESOURCES  */
#line 14548 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 46825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2346: /* flush_option: SSL_SYM  */
#line 14550 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SSL;}
#line 46831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2347: /* flush_option: THREADS_SYM  */
#line 14552 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_THREADS;}
#line 46837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2348: /* flush_option: IDENT_sys remember_tok_start  */
#line 14554 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 46855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2349: /* opt_table_list: %empty  */
#line 14570 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 46861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2350: /* opt_table_list: table_list  */
#line 14571 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 46867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2351: /* backup: BACKUP_SYM backup_statements  */
#line 14575 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 46873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2352: /* backup_statements: STAGE_SYM ident  */
#line 14580 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 46889 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2353: /* $@209: %empty  */
#line 14592 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP LOCK"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 46900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2354: /* backup_statements: LOCK_SYM $@209 table_ident  */
#line 14599 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 46912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2355: /* backup_statements: UNLOCK_SYM  */
#line 14607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP UNLOCK"));
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 46923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2356: /* opt_delete_gtid_domain: %empty  */
#line 14616 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46929 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2357: /* opt_delete_gtid_domain: DELETE_DOMAIN_ID_SYM '=' '(' delete_domain_id_list ')'  */
#line 14618 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2361: /* delete_domain_id: ulonglong_num  */
#line 14628 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 46952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2362: /* optional_flush_tables_arguments: %empty  */
#line 14643 "/home/buildbot/git/sql/sql_yacc.yy"
                             {(yyval.num)= 0;}
#line 46958 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2363: /* optional_flush_tables_arguments: AND_SYM DISABLE_SYM CHECKPOINT_SYM  */
#line 14644 "/home/buildbot/git/sql/sql_yacc.yy"
                                             {(yyval.num)= REFRESH_CHECKPOINT; }
#line 46964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2364: /* $@210: %empty  */
#line 14649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 46973 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2365: /* reset: RESET_SYM $@210 reset_options  */
#line 14654 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2368: /* $@211: %empty  */
#line 14663 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_SLAVE; }
#line 46985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2369: /* reset_option: SLAVE $@211 optional_connection_name slave_reset_options optional_for_channel  */
#line 14666 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 46991 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2370: /* $@212: %empty  */
#line 14668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 47000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2372: /* reset_option: QUERY_SYM CACHE_SYM  */
#line 14673 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_QUERY_CACHE;}
#line 47006 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2373: /* slave_reset_options: %empty  */
#line 14677 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= false; }
#line 47012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2374: /* slave_reset_options: ALL  */
#line 14678 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= true; }
#line 47018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2375: /* master_reset_options: %empty  */
#line 14682 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2376: /* master_reset_options: TO_SYM ulong_num  */
#line 14684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 47032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2377: /* purge: PURGE master_or_binary LOGS_SYM TO_SYM TEXT_STRING_sys  */
#line 14691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 47040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2378: /* $@213: %empty  */
#line 14695 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 47046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2379: /* purge: PURGE master_or_binary LOGS_SYM BEFORE_SYM $@213 expr  */
#line 14697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 47056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2380: /* $@214: %empty  */
#line 14709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
          }
#line 47068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2381: /* kill: KILL_SYM $@214 kill_type kill_option  */
#line 14717 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 47076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2382: /* kill_type: %empty  */
#line 14723 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 47082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2383: /* kill_type: HARD_SYM  */
#line 14724 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 47088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2384: /* kill_type: SOFT_SYM  */
#line 14725 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 47094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2385: /* kill_option: opt_connection kill_expr  */
#line 14729 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_CONNECTION; }
#line 47100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2386: /* kill_option: QUERY_SYM kill_expr  */
#line 14730 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_QUERY; }
#line 47106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2387: /* kill_option: QUERY_SYM ID_SYM expr  */
#line 14732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 47116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2388: /* opt_connection: %empty  */
#line 14740 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 47122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2389: /* opt_connection: CONNECTION_SYM  */
#line 14741 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 47128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2390: /* kill_expr: expr  */
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 47136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2391: /* kill_expr: USER_SYM user  */
#line 14750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 47145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2392: /* $@215: %empty  */
#line 14757 "/home/buildbot/git/sql/sql_yacc.yy"
                 { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 47151 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2393: /* shutdown: SHUTDOWN $@215 shutdown_option  */
#line 14758 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 47157 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2394: /* shutdown_option: %empty  */
#line 14762 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->is_shutdown_wait_for_slaves= false; }
#line 47163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2395: /* shutdown_option: WAIT_SYM FOR_SYM ALL SLAVES  */
#line 14764 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 47171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2396: /* use: USE_SYM ident  */
#line 14773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 47181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2397: /* $@216: %empty  */
#line 14784 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 47199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2398: /* $@217: %empty  */
#line 14798 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 47214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2399: /* $@218: %empty  */
#line 14809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 47231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2400: /* $@219: %empty  */
#line 14822 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 47237 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2401: /* load: LOAD data_or_xml $@216 load_data_lock opt_local INFILE TEXT_STRING_filesystem $@217 opt_duplicate INTO TABLE_SYM table_ident opt_use_partition $@218 opt_load_data_charset $@219 opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec stmt_end  */
#line 14827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
          }
#line 47245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2402: /* data_or_xml: DATA_SYM  */
#line 14833 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 47251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2403: /* data_or_xml: XML_SYM  */
#line 14834 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 47257 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2404: /* opt_local: %empty  */
#line 14838 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=0;}
#line 47263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2405: /* opt_local: LOCAL_SYM  */
#line 14839 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1;}
#line 47269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2406: /* load_data_lock: %empty  */
#line 14843 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 47275 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2407: /* load_data_lock: CONCURRENT  */
#line 14845 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 47287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2408: /* load_data_lock: LOW_PRIORITY  */
#line 14852 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 47293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2409: /* opt_duplicate: %empty  */
#line 14856 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->duplicates=DUP_ERROR; }
#line 47299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2410: /* opt_duplicate: REPLACE  */
#line 14857 "/home/buildbot/git/sql/sql_yacc.yy"
                  { Lex->duplicates=DUP_REPLACE; }
#line 47305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2411: /* opt_duplicate: IGNORE_SYM  */
#line 14858 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1; }
#line 47311 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2416: /* field_term: TERMINATED BY text_string  */
#line 14873 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 47320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2417: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 14878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 47331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2418: /* field_term: ENCLOSED BY text_string  */
#line 14885 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 47340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2419: /* field_term: ESCAPED BY text_string  */
#line 14890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 47349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2424: /* line_term: TERMINATED BY text_string  */
#line 14908 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 47358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2425: /* line_term: STARTING BY text_string  */
#line 14913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 47367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2426: /* opt_xml_rows_identified_by: %empty  */
#line 14920 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 47373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2427: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 14922 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->line_term = (yyvsp[0].string); }
#line 47379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2429: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 14928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 47388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2430: /* lines_or_rows: LINES  */
#line 14935 "/home/buildbot/git/sql/sql_yacc.yy"
                { }
#line 47394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2431: /* lines_or_rows: ROWS_SYM  */
#line 14936 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 47400 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2432: /* opt_field_or_var_spec: %empty  */
#line 14940 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2433: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 14941 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 47412 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2434: /* opt_field_or_var_spec: '(' ')'  */
#line 14942 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 47418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2435: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 14947 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 47424 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2436: /* fields_or_vars: field_or_var  */
#line 14949 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 47430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2437: /* field_or_var: simple_ident_nospvar  */
#line 14953 "/home/buildbot/git/sql/sql_yacc.yy"
                               {(yyval.item)= (yyvsp[0].item);}
#line 47436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2438: /* field_or_var: '@' ident_or_text  */
#line 14955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2439: /* opt_load_data_set_spec: %empty  */
#line 14969 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47458 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2440: /* opt_load_data_set_spec: SET load_data_set_list  */
#line 14970 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 47464 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2443: /* load_data_set_elem: simple_ident_nospvar equal remember_name expr_or_ignore_or_default remember_end  */
#line 14980 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 47476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2444: /* text_literal: TEXT_STRING  */
#line 14993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 47485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2445: /* text_literal: NCHAR_STRING  */
#line 14998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 47494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2446: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 15003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 47505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2447: /* text_literal: text_literal TEXT_STRING_literal  */
#line 15010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 47514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2448: /* text_string: TEXT_STRING_literal  */
#line 15018 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                           (yyvsp[0].lex_str).length,
                                           thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 47526 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2449: /* text_string: hex_or_bin_String  */
#line 15025 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.string)= (yyvsp[0].string); }
#line 47532 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2450: /* hex_or_bin_String: HEX_NUM  */
#line 15031 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 47544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2451: /* hex_or_bin_String: HEX_STRING  */
#line 15039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 47556 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2452: /* hex_or_bin_String: BIN_NUM  */
#line 15047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 47572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2453: /* param_marker: PARAM_MARKER  */
#line 15062 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 47583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2454: /* param_marker: COLON_ORACLE_SYM ident_cli  */
#line 15069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 47593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2455: /* param_marker: COLON_ORACLE_SYM NUM  */
#line 15075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 47604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2456: /* signed_literal: '+' NUM_literal  */
#line 15084 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item) = (yyvsp[0].item_num); }
#line 47610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2457: /* signed_literal: '-' NUM_literal  */
#line 15086 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 47619 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2458: /* literal: text_literal  */
#line 15093 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 47625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2459: /* literal: NUM_literal  */
#line 15094 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item) = (yyvsp[0].item_num); }
#line 47631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2460: /* literal: temporal_literal  */
#line 15095 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item)= (yyvsp[0].item); }
#line 47637 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2461: /* literal: NULL_SYM  */
#line 15097 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 47655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2462: /* literal: FALSE_SYM  */
#line 15111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2463: /* literal: TRUE_SYM  */
#line 15117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47675 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2464: /* literal: HEX_NUM  */
#line 15123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2465: /* literal: HEX_STRING  */
#line 15129 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2466: /* literal: BIN_NUM  */
#line 15135 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47705 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2467: /* literal: UNDERSCORE_CHARSET hex_or_bin_String  */
#line 15141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_string_with_introducer *item_str;
            LEX_CSTRING tmp;
            (yyvsp[0].string)->get_value(&tmp);
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, null_clex_str,
                                           tmp, (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 47729 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2468: /* NUM_literal: NUM  */
#line 15164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 47743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2469: /* NUM_literal: LONG_NUM  */
#line 15174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 47757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2470: /* NUM_literal: ULONGLONG_NUM  */
#line 15184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 47767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2471: /* NUM_literal: DECIMAL_NUM  */
#line 15190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 47778 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2472: /* NUM_literal: FLOAT_NUM  */
#line 15197 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 47788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2473: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 15207 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 47799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2474: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 15214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 47810 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2475: /* temporal_literal: TIMESTAMP TEXT_STRING  */
#line 15221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_datetime.create_literal_item(thd,
                                                            (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                            YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 47821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2476: /* $@220: %empty  */
#line 15231 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->with_cte_resolution= true;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&lex->with_clauses_list,
                                      lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 47841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2477: /* with_clause: WITH opt_recursive $@220 with_list  */
#line 15247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 47850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2478: /* opt_recursive: %empty  */
#line 15255 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 0; }
#line 47856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2479: /* opt_recursive: RECURSIVE_SYM  */
#line 15256 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 47862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2482: /* with_list_element: with_element_head opt_with_column_list AS '(' query_expression ')' opt_cycle  */
#line 15270 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-3].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].with_element_head), *(yyvsp[-5].ident_sys_list), (yyvsp[-2].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            if ((yyvsp[0].ident_sys_list))
            {
              elem->set_cycle_list((yyvsp[0].ident_sys_list));
            }
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 47884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2483: /* opt_cycle: %empty  */
#line 15291 "/home/buildbot/git/sql/sql_yacc.yy"
         { (yyval.ident_sys_list)= NULL; }
#line 47890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2484: /* $@221: %empty  */
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (!Lex->curr_with_clause->with_recursive)
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].kwd).pos());
           }
         }
#line 47901 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2485: /* opt_cycle: CYCLE_SYM $@221 comma_separated_ident_list RESTRICT  */
#line 15301 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list);
         }
#line 47909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2486: /* opt_with_column_list: %empty  */
#line 15309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>) == NULL)
              MYSQL_YYABORT;
          }
#line 47918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2487: /* opt_with_column_list: '(' with_column_list ')'  */
#line 15314 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list); }
#line 47924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2489: /* ident_sys_alloc: ident_cli  */
#line 15323 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_ptr)= new (thd->mem_root) Lex_ident_sys(thd, &(yyvsp[0].ident_cli));
          }
#line 47932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2490: /* comma_separated_ident_list: ident_sys_alloc  */
#line 15330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>;
            if (unlikely((yyval.ident_sys_list) == NULL || (yyval.ident_sys_list)->push_back((yyvsp[0].ident_sys_ptr))))
              MYSQL_YYABORT;
	  }
#line 47942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2491: /* comma_separated_ident_list: comma_separated_ident_list ',' ident_sys_alloc  */
#line 15336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= (yyvsp[-2].ident_sys_list))->push_back((yyvsp[0].ident_sys_ptr)))
              MYSQL_YYABORT;
          }
#line 47951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2492: /* with_element_head: ident  */
#line 15345 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING *name=
              (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(name);
            if (unlikely(name == NULL || (yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 47964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2493: /* insert_ident: simple_ident_nospvar  */
#line 15362 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.item)=(yyvsp[0].item); }
#line 47970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2494: /* insert_ident: table_wild  */
#line 15363 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.item)=(yyvsp[0].item); }
#line 47976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2495: /* table_wild: ident '.' '*'  */
#line 15368 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2496: /* table_wild: ident '.' ident '.' '*'  */
#line 15373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 47994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2497: /* select_sublist_qualified_asterisk: ident_cli '.' '*'  */
#line 15381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2498: /* select_sublist_qualified_asterisk: ident_cli '.' ident_cli '.' '*'  */
#line 15386 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2499: /* order_ident: expr  */
#line 15393 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 48018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2500: /* simple_ident: ident_cli  */
#line 15399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48027 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2501: /* simple_ident: ident_cli '.' ident_cli  */
#line 15404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48036 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2502: /* simple_ident: '.' ident_cli '.' ident_cli  */
#line 15409 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2503: /* simple_ident: ident_cli '.' ident_cli '.' ident_cli  */
#line 15415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2504: /* simple_ident: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15420 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2505: /* simple_ident_nospvar: ident  */
#line 15428 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 48073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2506: /* simple_ident_nospvar: ident '.' ident  */
#line 15433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 48082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2507: /* simple_ident_nospvar: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2508: /* simple_ident_nospvar: '.' ident '.' ident  */
#line 15443 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 48101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2509: /* simple_ident_nospvar: ident '.' ident '.' ident  */
#line 15449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 48110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2510: /* field_ident: ident  */
#line 15456 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 48116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2511: /* field_ident: ident '.' ident '.' ident  */
#line 15458 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-4].ident_sys).str,
                                       table->db.str)))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                                       table->table_name.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 48131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2512: /* field_ident: ident '.' ident  */
#line 15469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(my_strcasecmp(table_alias_charset, (yyvsp[-2].ident_sys).str,
                         table->alias.str)))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 48143 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2513: /* field_ident: '.' ident  */
#line 15476 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 48149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2514: /* table_ident: ident  */
#line 15481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2515: /* table_ident: ident '.' ident  */
#line 15487 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48169 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2516: /* table_ident: '.' ident  */
#line 15493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2517: /* table_ident_opt_wild: ident opt_wild  */
#line 15503 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48190 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2518: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 15509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48200 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2519: /* table_ident_nodb: ident  */
#line 15518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db= any_db;
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 48211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2524: /* ident_cli: keyword_ident  */
#line 15534 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2525: /* IDENT_sys: IDENT_cli  */
#line 15539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 48226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2528: /* ident_cli_func: keyword_func_sp_var_and_label  */
#line 15548 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2529: /* ident_cli_func: keyword_func_sp_var_not_label  */
#line 15549 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2530: /* ident_func: ident_cli_func  */
#line 15554 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 48247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2531: /* TEXT_STRING_sys: TEXT_STRING  */
#line 15563 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 48256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2532: /* TEXT_STRING_literal: TEXT_STRING  */
#line 15571 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 48265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2533: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 15579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 48274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2535: /* ident_table_alias: keyword_table_alias  */
#line 15588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2536: /* ident_cli_set_usual_case: IDENT_cli  */
#line 15595 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ident_cli)= (yyvsp[0].ident_cli); }
#line 48289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2537: /* ident_cli_set_usual_case: keyword_set_usual_case  */
#line 15596 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 48295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2539: /* ident_sysvar_name: keyword_sysvar_name  */
#line 15602 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48304 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2540: /* ident_sysvar_name: TEXT_STRING_sys  */
#line 15607 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 48313 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2542: /* ident: keyword_ident  */
#line 15617 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2544: /* label_ident: keyword_label  */
#line 15626 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 48331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2545: /* ident_or_text: ident  */
#line 15633 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 48337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2546: /* ident_or_text: TEXT_STRING_sys  */
#line 15634 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 48343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2547: /* ident_or_text: LEX_HOSTNAME  */
#line 15635 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 48349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2548: /* user_maybe_role: ident_or_text  */
#line 15640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 48364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2549: /* user_maybe_role: ident_or_text '@' ident_or_text  */
#line 15651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              /*
                Convert hostname part of username to lowercase.
                It's OK to use in-place lowercase as long as
                the character set is utf8.
              */
              my_casedn_str(system_charset_info, (char*) (yyval.lex_user)->host.str);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 48397 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2550: /* user_maybe_role: CURRENT_USER optional_braces  */
#line 15680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*)thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 48408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2553: /* user: user_maybe_role  */
#line 15691 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 48418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3280: /* $@222: %empty  */
#line 16561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
          }
#line 48427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3281: /* set: SET $@222 set_param  */
#line 16566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 48436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3284: /* $@223: %empty  */
#line 16576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= OPT_DEFAULT;
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3285: /* set_param: TRANSACTION_SYM $@223 transaction_characteristics  */
#line 16582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3286: /* $@224: %empty  */
#line 16587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 48463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3288: /* $@225: %empty  */
#line 16593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 48477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3294: /* $@226: %empty  */
#line 16620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3295: /* start_option_value_list_following_option_type: TRANSACTION_SYM $@226 transaction_characteristics  */
#line 16625 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3298: /* $@227: %empty  */
#line 16640 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 48503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3301: /* option_type: GLOBAL_SYM  */
#line 16648 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 48509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3302: /* option_type: LOCAL_SYM  */
#line 16649 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3303: /* option_type: SESSION_SYM  */
#line 16650 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3304: /* opt_var_type: %empty  */
#line 16654 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3305: /* opt_var_type: GLOBAL_SYM  */
#line 16655 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 48533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3306: /* opt_var_type: LOCAL_SYM  */
#line 16656 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3307: /* opt_var_type: SESSION_SYM  */
#line 16657 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 48545 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3308: /* opt_var_ident_type: %empty  */
#line 16661 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 48551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3309: /* opt_var_ident_type: GLOBAL_SYM '.'  */
#line 16662 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 48557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3310: /* opt_var_ident_type: LOCAL_SYM '.'  */
#line 16663 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 48563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3311: /* opt_var_ident_type: SESSION_SYM '.'  */
#line 16664 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 48569 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3312: /* $@228: %empty  */
#line 16673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 48578 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3313: /* set_stmt_option: ident_cli equal $@228 set_expr_or_default  */
#line 16678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp,
                                                  (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 48591 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3314: /* $@229: %empty  */
#line 16687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 48600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3315: /* set_stmt_option: ident_cli '.' ident equal $@229 set_expr_or_default  */
#line 16692 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type,
                         &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 48613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3316: /* $@230: %empty  */
#line 16701 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 48622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3317: /* set_stmt_option: DEFAULT '.' ident equal $@230 set_expr_or_default  */
#line 16706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 48633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3318: /* $@231: %empty  */
#line 16718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3319: /* option_value_following_option_type: ident_cli equal $@231 set_expr_or_default  */
#line 16723 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp,
                                                  (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3320: /* $@232: %empty  */
#line 16732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3321: /* option_value_following_option_type: ident_cli '.' ident equal $@232 set_expr_or_default  */
#line 16737 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type, &tmp,
                                                  &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3322: /* $@233: %empty  */
#line 16746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48686 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3323: /* option_value_following_option_type: DEFAULT '.' ident equal $@233 set_expr_or_default  */
#line 16751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3324: /* $@234: %empty  */
#line 16762 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3325: /* option_value_no_option_type: ident_cli_set_usual_case equal $@234 set_expr_or_default  */
#line 16767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3326: /* $@235: %empty  */
#line 16776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 48728 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3327: /* option_value_no_option_type: ident_cli_set_usual_case '.' ident equal $@235 set_expr_or_default  */
#line 16781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48741 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3328: /* $@236: %empty  */
#line 16790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3329: /* option_value_no_option_type: DEFAULT '.' ident equal $@236 set_expr_or_default  */
#line 16795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48762 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3330: /* $@237: %empty  */
#line 16803 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            if (sp_create_assignment_lex(thd, (yyvsp[-2].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3331: /* option_value_no_option_type: '@' ident_or_text equal $@237 remember_cpp_ptr expr remember_end  */
#line 16814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-5].lex_str), (yyvsp[-1].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3332: /* $@238: %empty  */
#line 16828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3333: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name equal $@238 set_expr_or_default  */
#line 16833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable((yyvsp[-4].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3334: /* $@239: %empty  */
#line 16839 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48823 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3335: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name '.' ident equal $@239 set_expr_or_default  */
#line 16844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-6].var_type), &(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys),
                                                  (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3336: /* $@240: %empty  */
#line 16851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 48843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3337: /* option_value_no_option_type: '@' '@' opt_var_ident_type DEFAULT '.' ident equal $@240 set_expr_or_default  */
#line 16856 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-6].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3338: /* option_value_no_option_type: charset old_or_new_charset_name_or_default  */
#line 16862 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3339: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 16880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 48890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3340: /* option_value_no_option_type: NAMES_SYM charset_name_or_default  */
#line 16891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            CHARSET_INFO *def= global_system_variables.character_set_client;
            Lex_exact_charset_opt_extended_collate tmp((yyvsp[0].charset) ? (yyvsp[0].charset) : def, false);
            Lex_extended_collation_st cl;
            cl.set_collate_default();
            if (tmp.merge_collation(thd, thd->variables.
                                      character_set_collations, cl) ||
                Lex->set_names((yyvsp[-1].kwd).pos(), tmp, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 48905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3341: /* option_value_no_option_type: NAMES_SYM charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 16903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            CHARSET_INFO *def= global_system_variables.character_set_client;
            Lex_exact_charset_opt_extended_collate tmp((yyvsp[-2].charset) ? (yyvsp[-2].charset) : def, false);
            if (tmp.merge_collation(thd, thd->variables.
                                      character_set_collations, (yyvsp[0].Lex_extended_collation)) ||
                Lex->set_names((yyvsp[-3].kwd).pos(), tmp, yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 48918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3342: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role  */
#line 16912 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user=(LEX_USER *) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3343: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role FOR_SYM user  */
#line 16934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3344: /* option_value_no_option_type: ROLE_SYM role_name  */
#line 16950 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_user)->user);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 48979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3345: /* $@241: %empty  */
#line 16961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 48988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3346: /* option_value_no_option_type: ROLE_SYM equal $@241 set_expr_or_default  */
#line 16966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].kwd));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49001 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3347: /* $@242: %empty  */
#line 16975 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3348: /* option_value_no_option_type: PASSWORD_SYM equal $@242 text_or_password  */
#line 16980 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3349: /* $@243: %empty  */
#line 16986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3350: /* option_value_no_option_type: PASSWORD_SYM FOR_SYM $@243 user equal text_or_password  */
#line 16991 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[-2].lex_user), (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49039 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3355: /* transaction_access_mode: transaction_access_mode_types  */
#line 17007 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "transaction_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3356: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 17026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "transaction_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3357: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 17043 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 49084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3358: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 17044 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 49090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3359: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 17048 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 49096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3360: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 17049 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 49102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3361: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 17050 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 49108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3362: /* isolation_types: SERIALIZABLE_SYM  */
#line 17051 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 49114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3363: /* text_or_password: TEXT_STRING  */
#line 17057 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 49123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3364: /* text_or_password: PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17062 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 49132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3365: /* text_or_password: OLD_PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
            (yyval.user_auth)->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            (yyval.user_auth)->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 49144 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3366: /* set_expr_or_default: remember_cpp_ptr expr remember_end  */
#line 17078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	      LEX_CSTRING expr_str= empty_clex_str;

              if (Lex->is_metadata_used())
              {
                expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
                if (expr_str.str == nullptr)
                  MYSQL_YYABORT;
              }

              (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 49161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3367: /* set_expr_or_default: remember_cpp_ptr set_expr_misc remember_end  */
#line 17091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].item) == nullptr))
              MYSQL_YYABORT;
            (yyval.expr_and_query_str)= {(yyvsp[-1].item), empty_clex_str};
          }
#line 49171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3368: /* set_expr_or_default: remember_cpp_ptr DEFAULT remember_end  */
#line 17097 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_and_query_str)= { nullptr, empty_clex_str };
          }
#line 49179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3369: /* set_expr_misc: ON  */
#line 17103 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "ON",  2); }
#line 49185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3370: /* set_expr_misc: ALL  */
#line 17104 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "ALL", 3); }
#line 49191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3371: /* set_expr_misc: BINARY  */
#line 17105 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "binary", 6); }
#line 49197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3372: /* $@244: %empty  */
#line 17112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 49209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3373: /* lock: LOCK_SYM table_or_tables $@244 table_lock_list opt_lock_wait_timeout  */
#line 17120 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3374: /* opt_lock_wait_timeout: %empty  */
#line 17125 "/home/buildbot/git/sql/sql_yacc.yy"
        {}
#line 49221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3375: /* opt_lock_wait_timeout: WAIT_SYM ulong_num  */
#line 17127 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 49231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3376: /* opt_lock_wait_timeout: NOWAIT_SYM  */
#line 17133 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 49241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3377: /* table_or_tables: TABLE_SYM  */
#line 17141 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 49247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3378: /* table_or_tables: TABLES  */
#line 17142 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 49253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3381: /* table_lock: table_ident opt_table_alias_clause lock_option  */
#line 17152 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_FIRST_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 49273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3382: /* lock_option: READ_SYM  */
#line 17170 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 49279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3383: /* lock_option: WRITE_SYM  */
#line 17171 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 49285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3384: /* lock_option: WRITE_SYM CONCURRENT  */
#line 17173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 49293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3385: /* lock_option: LOW_PRIORITY WRITE_SYM  */
#line 17177 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 49299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3386: /* lock_option: READ_SYM LOCAL_SYM  */
#line 17178 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 49305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3387: /* $@245: %empty  */
#line 17183 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 49317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3388: /* unlock: UNLOCK_SYM $@245 table_or_tables  */
#line 17191 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3389: /* $@246: %empty  */
#line 17200 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 49332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3390: /* handler: HANDLER_SYM $@246 handler_tail  */
#line 17205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 49340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3391: /* handler_tail: table_ident OPEN_SYM opt_table_alias_clause  */
#line 17212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 49353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3392: /* handler_tail: table_ident_nodb CLOSE_SYM  */
#line 17221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 49366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3393: /* $@247: %empty  */
#line 17230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            select->limit_params.select_limit= one;
            select->limit_params.offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 49388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3394: /* handler_tail: table_ident_nodb READ_SYM $@247 handler_read_or_scan opt_where_clause opt_global_limit_clause  */
#line 17248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->limit_params.explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              select->limit_params.select_limit= one;
              select->limit_params.offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 49414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3395: /* handler_read_or_scan: handler_scan_function  */
#line 17272 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= null_clex_str; }
#line 49420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3396: /* handler_read_or_scan: ident handler_rkey_function  */
#line 17273 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= (yyvsp[-1].ident_sys); }
#line 49426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3397: /* handler_scan_function: FIRST_SYM  */
#line 17277 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 49432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3398: /* handler_scan_function: NEXT_SYM  */
#line 17278 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 49438 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3399: /* handler_rkey_function: FIRST_SYM  */
#line 17282 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 49444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3400: /* handler_rkey_function: NEXT_SYM  */
#line 17283 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 49450 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3401: /* handler_rkey_function: PREV_SYM  */
#line 17284 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RPREV;  }
#line 49456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3402: /* handler_rkey_function: LAST_SYM  */
#line 17285 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RLAST;  }
#line 49462 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3403: /* $@248: %empty  */
#line 17287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 49474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3404: /* handler_rkey_function: handler_rkey_mode $@248 '(' values ')'  */
#line 17295 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3405: /* handler_rkey_mode: '='  */
#line 17299 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 49486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3406: /* handler_rkey_mode: GE  */
#line 17300 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 49492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3407: /* handler_rkey_mode: LE  */
#line 17301 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 49498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3408: /* handler_rkey_mode: '>'  */
#line 17302 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 49504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3409: /* handler_rkey_mode: '<'  */
#line 17303 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 49510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3410: /* revoke: REVOKE clear_privileges revoke_command  */
#line 17310 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3411: /* revoke_command: grant_privileges ON opt_table grant_ident FROM user_and_role_list  */
#line 17315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_table(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident)))
              MYSQL_YYABORT;
          }
#line 49525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3412: /* revoke_command: grant_privileges ON sp_handler grant_ident FROM user_and_role_list  */
#line 17320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_sp(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident), *(yyvsp[-3].sp_handler)))
              MYSQL_YYABORT;
          }
#line 49534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3413: /* revoke_command: ALL opt_privileges ',' GRANT OPTION FROM user_and_role_list  */
#line 17325 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 49542 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3414: /* revoke_command: PROXY_SYM ON user FROM user_list  */
#line 17329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_proxy(thd, (yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 49551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3415: /* revoke_command: admin_option_for_role FROM user_and_role_list  */
#line 17334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3416: /* admin_option_for_role: ADMIN_SYM OPTION FOR_SYM grant_role  */
#line 17343 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 49567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3417: /* admin_option_for_role: grant_role  */
#line 17345 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 49573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3418: /* grant: GRANT clear_privileges grant_command  */
#line 17350 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 49579 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3419: /* grant_command: grant_privileges ON opt_table grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_table(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 49588 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3420: /* grant_command: grant_privileges ON sp_handler grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_sp(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), *(yyvsp[-5].sp_handler), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 49597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3421: /* grant_command: PROXY_SYM ON user TO_SYM grant_list opt_grant_option  */
#line 17367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_proxy(thd, (yyvsp[-3].lex_user), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 49606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3422: /* grant_command: grant_role TO_SYM grant_list opt_with_admin_option  */
#line 17372 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3423: /* opt_with_admin: %empty  */
#line 17383 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = 0; }
#line 49624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3424: /* opt_with_admin: WITH ADMIN_SYM user_or_role  */
#line 17384 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = (yyvsp[0].lex_user); }
#line 49630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3425: /* opt_with_admin_option: %empty  */
#line 17388 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= false; }
#line 49636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3426: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 17389 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= true; }
#line 49642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3427: /* role_list: grant_role  */
#line 17394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3428: /* role_list: role_list ',' grant_role  */
#line 17399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3429: /* current_role: CURRENT_ROLE optional_braces  */
#line 17407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
          }
#line 49670 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3430: /* role_name: ident_or_text  */
#line 17416 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             CHARSET_INFO *cs= system_charset_info;
             /* trim end spaces (as they'll be lost in mysql.user anyway) */
             (yyvsp[0].lex_str).length= cs->lengthsp((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
             ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
             if (unlikely((yyvsp[0].lex_str).length == 0))
               my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
             if (unlikely(!((yyval.lex_user)=(LEX_USER*) thd->calloc(sizeof(LEX_USER)))))
               MYSQL_YYABORT;
             if (lex_string_eq(&(yyvsp[0].lex_str), &none))
               (yyval.lex_user)->user= none;
             else if (lex_string_eq(&(yyvsp[0].lex_str), &public_name))
               (yyval.lex_user)->user= public_name;
             else if (check_string_char_length(&((yyval.lex_user)->user= (yyvsp[0].lex_str)), ER_USERNAME,
                                               username_char_length, cs, 0))
               MYSQL_YYABORT;
             (yyval.lex_user)->host= empty_clex_str;
           }
#line 49693 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3436: /* grant_privileges: ALL opt_privileges  */
#line 17446 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege(GLOBAL_ACLS, true)))
              MYSQL_YYABORT;
          }
#line 49702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3439: /* object_privilege_list: object_privilege  */
#line 17459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege((yyvsp[0].privilege))))
              MYSQL_YYABORT;
          }
#line 49711 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3440: /* object_privilege_list: column_list_privilege  */
#line 17464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege()) ||
                (yyval.lex_grant)->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                   (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 49722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3441: /* object_privilege_list: object_privilege_list ',' object_privilege  */
#line 17471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            ((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_object_privilege((yyvsp[0].privilege));
          }
#line 49730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3442: /* object_privilege_list: object_privilege_list ',' column_list_privilege  */
#line 17475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                         (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 49740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3443: /* column_list_privilege: column_privilege '(' comma_separated_ident_list ')'  */
#line 17484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.column_list_privilege)= Lex_column_list_privilege((yyvsp[-1].ident_sys_list), (yyvsp[-3].privilege));
          }
#line 49748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3444: /* column_privilege: SELECT_SYM  */
#line 17490 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 49754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3445: /* column_privilege: INSERT  */
#line 17491 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 49760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3446: /* column_privilege: UPDATE_SYM  */
#line 17492 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 49766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3447: /* column_privilege: REFERENCES  */
#line 17493 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 49772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3448: /* object_privilege: SELECT_SYM  */
#line 17497 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 49778 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3449: /* object_privilege: INSERT  */
#line 17498 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 49784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3450: /* object_privilege: UPDATE_SYM  */
#line 17499 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 49790 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3451: /* object_privilege: REFERENCES  */
#line 17500 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 49796 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3452: /* object_privilege: DELETE_SYM  */
#line 17501 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_ACL;}
#line 49802 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3453: /* object_privilege: USAGE  */
#line 17502 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= NO_ACL; }
#line 49808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3454: /* object_privilege: INDEX_SYM  */
#line 17503 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INDEX_ACL;}
#line 49814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3455: /* object_privilege: ALTER  */
#line 17504 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_ACL;}
#line 49820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3456: /* object_privilege: CREATE  */
#line 17505 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_ACL;}
#line 49826 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3457: /* object_privilege: DROP  */
#line 17506 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DROP_ACL;}
#line 49832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3458: /* object_privilege: EXECUTE_SYM  */
#line 17507 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EXECUTE_ACL;}
#line 49838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3459: /* object_privilege: RELOAD  */
#line 17508 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= RELOAD_ACL;}
#line 49844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3460: /* object_privilege: SHUTDOWN  */
#line 17509 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHUTDOWN_ACL;}
#line 49850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3461: /* object_privilege: PROCESS  */
#line 17510 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= PROCESS_ACL;}
#line 49856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3462: /* object_privilege: FILE_SYM  */
#line 17511 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FILE_ACL;}
#line 49862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3463: /* object_privilege: GRANT OPTION  */
#line 17512 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= GRANT_ACL;}
#line 49868 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3464: /* object_privilege: SHOW DATABASES  */
#line 17513 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_DB_ACL;}
#line 49874 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3465: /* object_privilege: SUPER_SYM  */
#line 17514 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SUPER_ACL;}
#line 49880 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3466: /* object_privilege: CREATE TEMPORARY TABLES  */
#line 17515 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TMP_ACL;}
#line 49886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3467: /* object_privilege: LOCK_SYM TABLES  */
#line 17516 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= LOCK_TABLES_ACL; }
#line 49892 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3468: /* object_privilege: REPLICATION SLAVE  */
#line 17517 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REPL_SLAVE_ACL; }
#line 49898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3469: /* object_privilege: REPLICATION CLIENT_SYM  */
#line 17518 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= BINLOG_MONITOR_ACL; /*Compatibility*/ }
#line 49904 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3470: /* object_privilege: CREATE VIEW_SYM  */
#line 17519 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_VIEW_ACL; }
#line 49910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3471: /* object_privilege: SHOW VIEW_SYM  */
#line 17520 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_VIEW_ACL; }
#line 49916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3472: /* object_privilege: CREATE ROUTINE_SYM  */
#line 17521 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_PROC_ACL; }
#line 49922 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3473: /* object_privilege: ALTER ROUTINE_SYM  */
#line 17522 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_PROC_ACL; }
#line 49928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3474: /* object_privilege: CREATE USER_SYM  */
#line 17523 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_USER_ACL; }
#line 49934 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3475: /* object_privilege: EVENT_SYM  */
#line 17524 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EVENT_ACL;}
#line 49940 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3476: /* object_privilege: TRIGGER_SYM  */
#line 17525 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= TRIGGER_ACL; }
#line 49946 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3477: /* object_privilege: CREATE TABLESPACE  */
#line 17526 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TABLESPACE_ACL; }
#line 49952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3478: /* object_privilege: DELETE_SYM HISTORY_SYM  */
#line 17527 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_HISTORY_ACL; }
#line 49958 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3479: /* object_privilege: SET USER_SYM  */
#line 17528 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SET_USER_ACL; }
#line 49964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3480: /* object_privilege: FEDERATED_SYM ADMIN_SYM  */
#line 17529 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FEDERATED_ADMIN_ACL; }
#line 49970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3481: /* object_privilege: CONNECTION_SYM ADMIN_SYM  */
#line 17530 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= CONNECTION_ADMIN_ACL; }
#line 49976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3482: /* object_privilege: READ_SYM ONLY_SYM ADMIN_SYM  */
#line 17531 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 49982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3483: /* object_privilege: READ_ONLY_SYM ADMIN_SYM  */
#line 17532 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 49988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3484: /* object_privilege: BINLOG_SYM MONITOR_SYM  */
#line 17533 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_MONITOR_ACL; }
#line 49994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3485: /* object_privilege: BINLOG_SYM ADMIN_SYM  */
#line 17534 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_ADMIN_ACL; }
#line 50000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3486: /* object_privilege: BINLOG_SYM REPLAY_SYM  */
#line 17535 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_REPLAY_ACL; }
#line 50006 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3487: /* object_privilege: REPLICATION MASTER_SYM ADMIN_SYM  */
#line 17536 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_MASTER_ADMIN_ACL; }
#line 50012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3488: /* object_privilege: REPLICATION SLAVE ADMIN_SYM  */
#line 17537 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_SLAVE_ADMIN_ACL; }
#line 50018 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3489: /* object_privilege: SLAVE MONITOR_SYM  */
#line 17538 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SLAVE_MONITOR_ACL; }
#line 50024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3490: /* object_privilege: SHOW CREATE ROUTINE_SYM  */
#line 17539 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SHOW_CREATE_ROUTINE_ACL; }
#line 50030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3491: /* opt_and: %empty  */
#line 17543 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 50036 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3492: /* opt_and: AND_SYM  */
#line 17544 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 50042 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3495: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 17554 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 50053 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3496: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 17561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 50064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3497: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 17568 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 50075 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3498: /* grant_ident: '*'  */
#line 17578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db;
            if (unlikely(Lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(db,
                                            Lex_grant_object_name::STAR)))
              MYSQL_YYABORT;
          }
#line 50088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3499: /* grant_ident: ident '.' '*'  */
#line 17587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[-2].ident_sys),
                                            Lex_grant_object_name::IDENT_STAR)))
              MYSQL_YYABORT;
          }
#line 50098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3500: /* grant_ident: '*' '.' '*'  */
#line 17593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(
                                            null_clex_str,
                                            Lex_grant_object_name::STAR_STAR)))
              MYSQL_YYABORT;
          }
#line 50109 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3501: /* grant_ident: table_ident  */
#line 17600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 50118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3502: /* user_list: user  */
#line 17608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50127 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3503: /* user_list: user_list ',' user  */
#line 17613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3504: /* grant_list: grant_user  */
#line 17621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3505: /* grant_list: grant_list ',' grant_user  */
#line 17626 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3506: /* user_and_role_list: user_or_role  */
#line 17634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3507: /* user_and_role_list: user_and_role_list ',' user_or_role  */
#line 17639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3512: /* grant_user: user IDENTIFIED_SYM BY TEXT_STRING  */
#line 17650 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 50182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3513: /* grant_user: user IDENTIFIED_SYM BY PASSWORD_SYM TEXT_STRING  */
#line 17656 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 50192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3514: /* grant_user: user IDENTIFIED_SYM via_or_with auth_expression  */
#line 17662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 50201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3515: /* grant_user: user_or_role  */
#line 17667 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 50209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3516: /* auth_expression: auth_token OR_SYM auth_expression  */
#line 17674 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 50219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3517: /* auth_expression: auth_token  */
#line 17680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 50227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3518: /* auth_token: ident_or_text opt_auth_str  */
#line 17687 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 50236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3519: /* opt_auth_str: %empty  */
#line 17695 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
        }
#line 50245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3520: /* opt_auth_str: using_or_as TEXT_STRING_sys  */
#line 17700 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 50255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3521: /* opt_auth_str: using_or_as PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17706 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=(USER_AUTH*) thd->calloc(sizeof(USER_AUTH))))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 50265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3523: /* opt_require_clause: REQUIRE_SYM require_list  */
#line 17716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 50273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3524: /* opt_require_clause: REQUIRE_SYM SSL_SYM  */
#line 17720 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 50281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3525: /* opt_require_clause: REQUIRE_SYM X509_SYM  */
#line 17724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 50289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3526: /* opt_require_clause: REQUIRE_SYM NONE_SYM  */
#line 17728 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 50297 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3527: /* resource_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 17735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 50306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3528: /* resource_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 17740 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 50315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3529: /* resource_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 17745 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 50324 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3530: /* resource_option: MAX_USER_CONNECTIONS_SYM int_num  */
#line 17750 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 50333 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3531: /* resource_option: MAX_STATEMENT_TIME_SYM NUM_literal  */
#line 17755 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 50342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3532: /* resource_option_list: resource_option_list resource_option  */
#line 17762 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 50348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3533: /* resource_option_list: resource_option  */
#line 17763 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 50354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3534: /* opt_resource_options: %empty  */
#line 17767 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 50360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3536: /* opt_grant_options: %empty  */
#line 17773 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= NO_ACL;  }
#line 50366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3537: /* opt_grant_options: WITH grant_option_list  */
#line 17774 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= (yyvsp[0].privilege); }
#line 50372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3538: /* opt_grant_option: %empty  */
#line 17778 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= NO_ACL;    }
#line 50378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3539: /* opt_grant_option: WITH GRANT OPTION  */
#line 17779 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= GRANT_ACL; }
#line 50384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3540: /* grant_option_list: grant_option_list grant_option  */
#line 17783 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.privilege)= (yyvsp[-1].privilege) | (yyvsp[0].privilege); }
#line 50390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3542: /* grant_option: GRANT OPTION  */
#line 17788 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= GRANT_ACL;}
#line 50396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3543: /* grant_option: resource_option  */
#line 17789 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= NO_ACL; }
#line 50402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3544: /* $@249: %empty  */
#line 17794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 50412 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3545: /* begin_stmt_mariadb: BEGIN_MARIADB_SYM $@249 opt_work  */
#line 17799 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 50418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3546: /* compound_statement: sp_proc_stmt_compound_ok  */
#line 17804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 50428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3547: /* opt_not: %empty  */
#line 17812 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 50434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3548: /* opt_not: not  */
#line 17813 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 1; }
#line 50440 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3549: /* opt_work: %empty  */
#line 17817 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 50446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3550: /* opt_work: WORK_SYM  */
#line 17818 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 50452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3551: /* opt_chain: %empty  */
#line 17823 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 50458 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3552: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 17824 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 50464 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3553: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 17825 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 50470 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3554: /* opt_release: %empty  */
#line 17830 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 50476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3555: /* opt_release: RELEASE_SYM  */
#line 17831 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 50482 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3556: /* opt_release: NO_SYM RELEASE_SYM  */
#line 17832 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 50488 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3557: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 17837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 50501 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3558: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 17849 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 50514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3559: /* rollback: ROLLBACK_SYM opt_work TO_SYM SAVEPOINT_SYM ident  */
#line 17858 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3560: /* rollback: ROLLBACK_SYM opt_work TO_SYM ident  */
#line 17864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3561: /* savepoint: SAVEPOINT_SYM ident  */
#line 17873 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3562: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 17882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 50554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3563: /* unit_type_decl: UNION_SYM union_option  */
#line 17895 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 50560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3564: /* unit_type_decl: INTERSECT_SYM union_option  */
#line 17897 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 50566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3565: /* unit_type_decl: EXCEPT_SYM union_option  */
#line 17899 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 50572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3566: /* union_option: %empty  */
#line 17906 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=1; }
#line 50578 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3567: /* union_option: DISTINCT  */
#line 17907 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 50584 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3568: /* union_option: ALL  */
#line 17908 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 50590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3569: /* query_expression_option: STRAIGHT_JOIN  */
#line 17912 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 50596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3570: /* query_expression_option: HIGH_PRIORITY  */
#line 17914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 50606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3571: /* query_expression_option: DISTINCT  */
#line 17919 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 50612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3572: /* query_expression_option: UNIQUE_SYM  */
#line 17920 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 50618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3573: /* query_expression_option: SQL_SMALL_RESULT  */
#line 17921 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_SMALL_RESULT; }
#line 50624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3574: /* query_expression_option: SQL_BIG_RESULT  */
#line 17922 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_BIG_RESULT; }
#line 50630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3575: /* query_expression_option: SQL_BUFFER_RESULT  */
#line 17923 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Select->options|= OPTION_BUFFER_RESULT; }
#line 50636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3576: /* query_expression_option: SQL_CALC_FOUND_ROWS  */
#line 17924 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Select->options|= OPTION_FOUND_ROWS; }
#line 50642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3577: /* query_expression_option: ALL  */
#line 17925 "/home/buildbot/git/sql/sql_yacc.yy"
              { Select->options|= SELECT_ALL; }
#line 50648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3580: /* no_definer: %empty  */
#line 17941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 50663 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3581: /* definer: DEFINER_SYM '=' user_or_role  */
#line 17955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 50672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3582: /* view_algorithm: ALGORITHM_SYM '=' UNDEFINED_SYM  */
#line 17968 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 50678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3583: /* view_algorithm: ALGORITHM_SYM '=' MERGE_SYM  */
#line 17969 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 50684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3584: /* view_algorithm: ALGORITHM_SYM '=' TEMPTABLE_SYM  */
#line 17970 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 50690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3585: /* opt_view_suid: %empty  */
#line 17974 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 50696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3586: /* opt_view_suid: view_suid  */
#line 17975 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 50702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3587: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 17979 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 50708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3588: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 17980 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 50714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3589: /* view_list_opt: %empty  */
#line 17985 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50720 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3590: /* view_list_opt: '(' view_list ')'  */
#line 17986 "/home/buildbot/git/sql/sql_yacc.yy"
                            { }
#line 50726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3591: /* view_list: ident  */
#line 17991 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 50736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3592: /* view_list: view_list ',' ident  */
#line 17997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 50746 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3593: /* $@250: %empty  */
#line 18005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 50756 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3594: /* view_select: $@250 query_expression view_check_option  */
#line 18012 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 50765 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3595: /* view_check_option: %empty  */
#line 18019 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 50771 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3596: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 18020 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 50777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3597: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 18021 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 50783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3598: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 18022 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 50789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3599: /* trigger_action_order: FOLLOWS_SYM  */
#line 18033 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 50795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3600: /* trigger_action_order: PRECEDES_SYM  */
#line 18035 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 50801 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3601: /* trigger_follows_precedes_clause: %empty  */
#line 18040 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name.str= NULL;
              (yyval.trg_execution_order).anchor_trigger_name.length= 0;
            }
#line 50811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3602: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 18047 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 50820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3603: /* $@251: %empty  */
#line 18056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 50829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3604: /* $@252: %empty  */
#line 18065 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $9 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 50837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3605: /* $@253: %empty  */
#line 18071 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $13 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 50845 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3606: /* $@254: %empty  */
#line 18076 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 50853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3607: /* $@255: %empty  */
#line 18080 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $18 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-16].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-13].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-13].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 50878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3608: /* trigger_tail: remember_name opt_if_not_exists $@251 sp_name trg_action_time trg_event ON remember_name $@252 table_ident FOR_SYM remember_name $@253 EACH_SYM ROW_SYM $@254 trigger_follows_precedes_clause $@255 sp_proc_stmt force_lookahead  */
#line 18101 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $21 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                   TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 50901 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3609: /* $@256: %empty  */
#line 18129 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str);
          }
#line 50911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3610: /* sf_return_type: $@256 field_type  */
#line 18135 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sf_return_fill_definition((yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 50920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3611: /* create_package_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 18143 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 50926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3612: /* create_package_chistic: sp_suid  */
#line 18145 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 50932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3613: /* create_package_chistics: create_package_chistic  */
#line 18149 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 50938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3614: /* create_package_chistics: create_package_chistics create_package_chistic  */
#line 18150 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         { }
#line 50944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3615: /* opt_create_package_chistics: %empty  */
#line 18154 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 50950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3616: /* opt_create_package_chistics: create_package_chistics  */
#line 18155 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { }
#line 50956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3617: /* $@257: %empty  */
#line 18159 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.init(); }
#line 50962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3619: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 18167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 50970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3620: /* xa: XA_SYM END xid opt_suspend  */
#line 18171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 50978 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3621: /* xa: XA_SYM PREPARE_SYM xid  */
#line 18175 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 50986 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3622: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 18179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 50994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3623: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 18183 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 51002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3624: /* xa: XA_SYM RECOVER_SYM opt_format_xid  */
#line 18187 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 51011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3625: /* opt_format_xid: %empty  */
#line 18194 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= false; }
#line 51017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3626: /* opt_format_xid: FORMAT_SYM '=' ident_or_text  */
#line 18196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 51034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3627: /* xid: text_string  */
#line 18212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 51045 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3628: /* xid: text_string ',' text_string  */
#line 18219 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 51056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3629: /* xid: text_string ',' text_string ',' ulong_num  */
#line 18226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE &&
                                 (yyvsp[0].ulong_num) <= static_cast<ulong>(
                                         std::numeric_limits<int32_t>::max()));
            if (unlikely(!(Lex->xid=(XID *)thd->alloc(sizeof(XID)))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 51070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3630: /* begin_or_start: BEGIN_MARIADB_SYM  */
#line 18238 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 51076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3631: /* begin_or_start: BEGIN_ORACLE_SYM  */
#line 18239 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 51082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3632: /* begin_or_start: START_SYM  */
#line 18240 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 51088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3633: /* opt_join_or_resume: %empty  */
#line 18244 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_NONE;        }
#line 51094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3634: /* opt_join_or_resume: JOIN_SYM  */
#line 18245 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_JOIN;        }
#line 51100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3635: /* opt_join_or_resume: RESUME_SYM  */
#line 18246 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_RESUME;      }
#line 51106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3636: /* opt_one_phase: %empty  */
#line 18250 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_NONE;        }
#line 51112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3637: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18251 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_ONE_PHASE;   }
#line 51118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3638: /* opt_suspend: %empty  */
#line 18256 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_NONE;        }
#line 51124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3639: /* $@258: %empty  */
#line 18258 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_SUSPEND;     }
#line 51130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3641: /* opt_migrate: %empty  */
#line 18263 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 51136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3642: /* opt_migrate: FOR_SYM MIGRATE_SYM  */
#line 18264 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 51142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3643: /* install: INSTALL_SYM PLUGIN_SYM opt_if_not_exists ident SONAME_SYM TEXT_STRING_sys  */
#line 18269 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 51151 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3644: /* install: INSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18274 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 51159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3645: /* uninstall: UNINSTALL_SYM PLUGIN_SYM opt_if_exists ident  */
#line 18281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 51168 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3646: /* uninstall: UNINSTALL_SYM SONAME_SYM opt_if_exists TEXT_STRING_sys  */
#line 18286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 51177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3647: /* keep_gcc_happy: IMPOSSIBLE_ACTION  */
#line 18295 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYERROR;
          }
#line 51185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3652: /* $@259: %empty  */
#line 18748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // Direct procedure call (without the CALL keyword)
            Lex_ident_sys tmp(thd, &(yyvsp[0].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp)))
              MYSQL_YYABORT;
          }
#line 51197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3653: /* sp_statement: ident_cli_directly_assignable $@259 opt_sp_cparam_list  */
#line 18756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 51206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3654: /* $@260: %empty  */
#line 18761 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-2].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3655: /* sp_statement: ident_cli_directly_assignable '.' ident $@260 opt_sp_cparam_list  */
#line 18768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 51226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3656: /* $@261: %empty  */
#line 18773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-4].ident_cli));
            if (unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3657: /* sp_statement: ident_cli_directly_assignable '.' ident '.' ident $@261 opt_sp_cparam_list  */
#line 18779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 51245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3658: /* sp_if_then_statements: sp_proc_stmts1_implicit_block  */
#line 18786 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { }
#line 51251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3659: /* sp_case_then_statements: sp_proc_stmts1_implicit_block  */
#line 18790 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { }
#line 51257 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3664: /* sp_package_function_body: sp_body  */
#line 18810 "/home/buildbot/git/sql/sql_yacc.yy"
                  { }
#line 51263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3665: /* sp_package_procedure_body: sp_body  */
#line 18814 "/home/buildbot/git/sql/sql_yacc.yy"
                  { }
#line 51269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3689: /* row_field_name: ident_directly_assignable  */
#line 18864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3690: /* $@262: %empty  */
#line 18872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_while_loop_expression(thd)))
              MYSQL_YYABORT;
          }
#line 51287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3691: /* while_body: expr_lex LOOP_SYM $@262 sp_proc_stmts1 END LOOP_SYM  */
#line 18877 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 51296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3692: /* for_loop_statements: LOOP_SYM sp_proc_stmts1 END LOOP_SYM  */
#line 18885 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 51302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3694: /* sp_block_label: labels_declaration_oracle  */
#line 18895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 51312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3695: /* sp_opt_default: _empty  */
#line 18904 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.expr_and_query_str)= { nullptr, empty_clex_str}; }
#line 51318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3696: /* sp_opt_default: DEFAULT remember_cpp_ptr expr remember_end  */
#line 18906 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }

            (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 51335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3697: /* sp_opt_default: SET_VAR remember_cpp_ptr expr remember_end  */
#line 18919 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string) );
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }

            (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 51352 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3698: /* sp_opt_inout: _empty  */
#line 18934 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 51358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3700: /* sp_opt_inout: IN_SYM OUT_SYM  */
#line 18936 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 51364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3701: /* $@263: %empty  */
#line 18940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 51372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3702: /* sp_proc_stmts1_implicit_block: $@263 sp_proc_stmts1  */
#line 18944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 51381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3712: /* ident_directly_assignable: keyword_directly_assignable  */
#line 18965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 51390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3714: /* ident_cli_directly_assignable: keyword_directly_assignable  */
#line 18973 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 51396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3715: /* $@264: %empty  */
#line 18979 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 51407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3716: /* set_assign: ident_cli_directly_assignable SET_VAR $@264 set_expr_or_default  */
#line 18986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 51421 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3717: /* $@265: %empty  */
#line 18996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 51432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3718: /* set_assign: ident_cli_directly_assignable '.' ident SET_VAR $@265 set_expr_or_default  */
#line 19003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 51448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3719: /* $@266: %empty  */
#line 19015 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 51464 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3720: /* set_assign: COLON_ORACLE_SYM ident '.' ident SET_VAR $@266 set_expr_or_default  */
#line 19027 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr,
                                                (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 51477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3721: /* labels_declaration_oracle: label_declaration_oracle  */
#line 19039 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 51483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3722: /* labels_declaration_oracle: labels_declaration_oracle label_declaration_oracle  */
#line 19040 "/home/buildbot/git/sql/sql_yacc.yy"
                                                             { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 51489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3723: /* label_declaration_oracle: SHIFT_LEFT label_ident SHIFT_RIGHT  */
#line 19045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 51499 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3724: /* opt_exception_clause: _empty  */
#line 19053 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.num)= 0; }
#line 51505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3725: /* opt_exception_clause: EXCEPTION_ORACLE_SYM exception_handlers  */
#line 19054 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.num)= (yyvsp[0].num); }
#line 51511 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3726: /* exception_handlers: exception_handler  */
#line 19058 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 1; }
#line 51517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3727: /* exception_handlers: exception_handlers exception_handler  */
#line 19059 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 51523 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3728: /* $@267: %empty  */
#line 19064 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 51532 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3729: /* exception_handler: WHEN_SYM $@267 sp_hcond_list THEN_SYM sp_proc_stmts1_implicit_block  */
#line 19071 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 51541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3730: /* sp_no_param: _empty  */
#line 19079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 51550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3735: /* opt_trailing_sp_name: _empty  */
#line 19097 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spname)= NULL; }
#line 51556 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3736: /* opt_trailing_sp_name: sp_name  */
#line 19098 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spname)= (yyvsp[0].spname); }
#line 51562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3737: /* opt_package_routine_end_name: _empty  */
#line 19103 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 51568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3738: /* opt_package_routine_end_name: ident  */
#line 19104 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 51574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3741: /* sp_instr_addr: %empty  */
#line 19113 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 51580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3742: /* $@268: %empty  */
#line 19117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 51588 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3743: /* $@269: %empty  */
#line 19121 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 51597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3744: /* $@270: %empty  */
#line 19127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 51607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3748: /* package_implementation_declare_section_list: package_implementation_declare_section_list1 package_implementation_declare_section_list2  */
#line 19143 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 51613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3749: /* package_implementation_declare_section: package_implementation_declare_section_list  */
#line 19148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Add a jump "end of declarations -> start of exceptions"
              (over the executable sectition).
            */
            if (Lex->sp_block_with_exceptions_finalize_declarations(thd))
              MYSQL_YYABORT;
          }
#line 51626 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3750: /* package_implementation_executable_section: END  */
#line 19160 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Backpatch the jump generated in
              package_implementation_declare_section
              and generate a backward jump:
              "end of exceptions -> start of the executable section".
            */
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 51642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3751: /* package_implementation_executable_section: BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 19171 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                  { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 51648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3753: /* package_implementation_declare_section_list1: package_implementation_declare_section_list1 package_implementation_item_declaration  */
#line 19181 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 51654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3755: /* package_implementation_declare_section_list2: package_implementation_declare_section_list2 package_implementation_routine_definition  */
#line 19188 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 51660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3756: /* $@271: %empty  */
#line 19194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex->package_routine_start(thd,
                                   &sp_handler_package_function, (yyvsp[0].ident_sys));
            if (!lex)
              MYSQL_YYABORT;
            thd->lex= lex;
          }
#line 51672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3757: /* package_specification_function: remember_lex ident $@271 sf_parameters sf_returned_type_clause sp_c_chistics  */
#line 19204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
          }
#line 51683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3758: /* $@272: %empty  */
#line 19214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex->package_routine_start(thd,
                                   &sp_handler_package_procedure, (yyvsp[0].ident_sys));
            if (!lex)
              MYSQL_YYABORT;
            thd->lex= lex;
          }
#line 51695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3759: /* package_specification_procedure: remember_lex ident $@272 sp_parameters sp_c_chistics  */
#line 19223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-4].lex);
          }
#line 51706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3760: /* package_implementation_routine_definition: FUNCTION_SYM package_specification_function package_implementation_function_body ';'  */
#line 19235 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 51718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3761: /* package_implementation_routine_definition: PROCEDURE_SYM package_specification_procedure package_implementation_procedure_body ';'  */
#line 19244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 51730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3762: /* package_implementation_routine_definition: package_specification_element  */
#line 19251 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.spblock).init(); }
#line 51736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3763: /* $@273: %empty  */
#line 19257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3764: /* package_implementation_function_body: sp_tail_is remember_lex $@273 sp_package_function_body opt_package_routine_end_name  */
#line 19266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 51760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3765: /* $@274: %empty  */
#line 19276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51773 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3766: /* package_implementation_procedure_body: sp_tail_is remember_lex $@274 sp_package_procedure_body opt_package_routine_end_name  */
#line 19285 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 51784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3771: /* package_specification_element: FUNCTION_SYM package_specification_function ';'  */
#line 19306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 51795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3772: /* package_specification_element: PROCEDURE_SYM package_specification_procedure ';'  */
#line 19313 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 51806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3773: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM TYPE_SYM sp_opt_default  */
#line 19328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident),
                           (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 51817 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3774: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM sp_opt_default  */
#line 19337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num),
			   (yyvsp[-3].qualified_column_ident), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 51828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3775: /* sp_param_name_and_mode: sp_param_name sp_opt_inout  */
#line 19347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             (yyvsp[-1].spvar)->mode= (yyvsp[0].spvar_mode);
             (yyval.spvar)= (yyvsp[-1].spvar);
          }
#line 51837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3776: /* sp_param: sp_param_name_and_mode field_type  */
#line 19355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar), (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 51846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3777: /* sp_param: sp_param_name_and_mode ROW_SYM row_type_body  */
#line 19360 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 51855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3779: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3780: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3781: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3782: /* sp_param_anchored: sp_param_name_and_mode sp_decl_ident '.' ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19384 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 51891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3783: /* $@275: %empty  */
#line 19393 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51901 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3784: /* sf_c_chistics_and_body_standalone: sp_c_chistics $@275 sp_tail_is sp_body force_lookahead  */
#line 19399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 51910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3785: /* $@276: %empty  */
#line 19407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 51921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3786: /* $@277: %empty  */
#line 19415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 51930 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3787: /* sp_tail_standalone: sp_name $@276 opt_sp_parenthesized_pdparam_list sp_c_chistics $@277 sp_tail_is sp_body opt_trailing_sp_name  */
#line 19422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_procedure_standalone(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 51939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3788: /* $@278: %empty  */
#line 19433 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 51948 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3789: /* create_routine: create_or_replace definer_opt PROCEDURE_SYM opt_if_not_exists $@278 sp_tail_standalone  */
#line 19438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_create_routine_finalize();
          }
#line 51956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3790: /* $@279: %empty  */
#line 19443 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3791: /* create_routine: create_or_replace definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@279 sf_parameters sf_returned_type_clause sf_c_chistics_and_body_standalone opt_trailing_sp_name  */
#line 19451 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3792: /* $@280: %empty  */
#line 19457 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51983 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3793: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@280 sf_parameters sf_returned_type_clause sf_c_chistics_and_body_standalone opt_trailing_sp_name  */
#line 19465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 51992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3794: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 19471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 52002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3795: /* $@281: %empty  */
#line 19478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd, &sp_handler_package_spec,
                                                (yyvsp[-1].spname), (yyvsp[-5].object_ddl_options) | (yyvsp[-2].object_ddl_options),
                                                Lex->sp_chistics))))
              MYSQL_YYABORT;
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 52016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3796: /* create_routine: create_or_replace definer_opt sp_handler_package_spec opt_if_not_exists sp_name opt_create_package_chistics_init $@281 sp_tail_is opt_package_specification_element_list END remember_end_opt opt_trailing_sp_name  */
#line 19490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-7].spname), (yyvsp[0].spname), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 52025 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3797: /* $@282: %empty  */
#line 19496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd, &sp_handler_package_body,
                                                (yyvsp[-1].spname), (yyvsp[-5].object_ddl_options) | (yyvsp[-2].object_ddl_options),
                                                Lex->sp_chistics))))
              MYSQL_YYABORT;
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
            Lex->sp_block_init(thd);
          }
#line 52040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3798: /* $@283: %empty  */
#line 19509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 52050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3799: /* create_routine: create_or_replace definer_opt sp_handler_package_body opt_if_not_exists sp_name opt_create_package_chistics_init $@282 sp_tail_is package_implementation_declare_section package_implementation_executable_section $@283 remember_end_opt opt_trailing_sp_name  */
#line 19515 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 52059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3800: /* opt_sp_decl_body_list: _empty  */
#line 19526 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).init();
          }
#line 52067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3801: /* opt_sp_decl_body_list: sp_decl_body_list  */
#line 19529 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.spblock)= (yyvsp[0].spblock); }
#line 52073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3802: /* $@284: %empty  */
#line 19534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 52082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3803: /* sp_decl_body_list: sp_decl_non_handler_list $@284 opt_sp_decl_handler_list  */
#line 19539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 52090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3805: /* sp_decl_non_handler_list: sp_decl_non_handler ';'  */
#line 19546 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 52096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3806: /* sp_decl_non_handler_list: sp_decl_non_handler_list sp_decl_non_handler ';'  */
#line 19548 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 52104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3807: /* sp_decl_handler_list: sp_decl_handler ';'  */
#line 19554 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 52110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3808: /* sp_decl_handler_list: sp_decl_handler_list sp_decl_handler ';'  */
#line 19556 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 52118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3809: /* opt_sp_decl_handler_list: _empty  */
#line 19562 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.spblock).init(); }
#line 52124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3812: /* sp_decl_non_handler: ident_directly_assignable CONDITION_SYM FOR_SYM sp_cond  */
#line 19569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-3].ident_sys), (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 52135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3813: /* sp_decl_non_handler: ident_directly_assignable EXCEPTION_ORACLE_SYM  */
#line 19576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd, &(yyvsp[-1].ident_sys), spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 52149 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3814: /* $@285: %empty  */
#line 19586 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 52157 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3815: /* sp_decl_non_handler: CURSOR_SYM ident_directly_assignable $@285 opt_parenthesized_cursor_formal_parameters IS sp_cursor_stmt  */
#line 19591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 52171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3821: /* sp_proc_stmt: labels_declaration_oracle sp_labelable_stmt  */
#line 19609 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 52177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3832: /* sp_labelable_stmt: NULL_SYM  */
#line 19623 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 52183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3837: /* $@286: %empty  */
#line 19637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3838: /* sp_labeled_block: sp_block_label BEGIN_ORACLE_SYM $@286 sp_block_statements_and_exceptions END sp_opt_label  */
#line 19645 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 52202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3839: /* $@287: %empty  */
#line 19651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 52210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3840: /* $@288: %empty  */
#line 19655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3841: /* sp_labeled_block: sp_block_label DECLARE_ORACLE_SYM $@287 opt_sp_decl_body_list $@288 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END sp_opt_label  */
#line 19663 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 52229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3844: /* $@289: %empty  */
#line 19677 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3845: /* sp_unlabeled_block: BEGIN_ORACLE_SYM opt_not_atomic $@289 sp_block_statements_and_exceptions END  */
#line 19686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 52250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3846: /* $@290: %empty  */
#line 19691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 52260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3847: /* $@291: %empty  */
#line 19697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3848: /* sp_unlabeled_block: DECLARE_ORACLE_SYM $@290 opt_sp_decl_body_list $@291 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 19704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 52279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3849: /* $@292: %empty  */
#line 19714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 52288 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3850: /* sp_block_statements_and_exceptions: sp_instr_addr sp_proc_stmts $@292 opt_exception_clause  */
#line 19719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 52298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;


#line 52302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (thd, YY_("syntax error"));
    }

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

