/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "/home/buildbot/git/mkdist/sql/myskel.m4"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         ORAparse
#define yylex           ORAlex
#define yyerror         ORAerror
#define yydebug         ORAdebug
#define yynerrs         ORAnerrs

/* First part of user prologue.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy"

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"                          // classes sp_instr,...
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"
#include "json_table.h"
#include "sql_update.h"
#include "sql_delete.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#if defined (__GNUC__) || defined (__clang__)
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

/* Stack size 28200 with clang for MYSQLparse() and ORAparse() */
PRAGMA_DISABLE_CHECK_STACK_FRAME

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void yyerror(THD *thd, const char *s)
{
  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
#define __CONCAT_UNDERSCORED(x,y)  x ## _ ## y
#define _CONCAT_UNDERSCORED(x,y)   __CONCAT_UNDERSCORED(x,y)
void _CONCAT_UNDERSCORED(turn_parser_debug_on,yyparse)()
{
  /*
     MYSQLdebug is in sql/yy_*.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

#ifndef _AIX
  extern int yydebug;
#else
  static int yydebug;
#endif
  yydebug= 1;
}
#endif



#line 247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "yy_oracle.hh"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_3_ = 3,                         /* '@'  */
  YYSYMBOL_ABORT_SYM = 4,                  /* ABORT_SYM  */
  YYSYMBOL_IMPOSSIBLE_ACTION = 5,          /* IMPOSSIBLE_ACTION  */
  YYSYMBOL_FORCE_LOOKAHEAD = 6,            /* FORCE_LOOKAHEAD  */
  YYSYMBOL_END_OF_INPUT = 7,               /* END_OF_INPUT  */
  YYSYMBOL_COLON_ORACLE_SYM = 8,           /* COLON_ORACLE_SYM  */
  YYSYMBOL_PARAM_MARKER = 9,               /* PARAM_MARKER  */
  YYSYMBOL_FOR_SYSTEM_TIME_SYM = 10,       /* FOR_SYSTEM_TIME_SYM  */
  YYSYMBOL_LEFT_PAREN_ALT = 11,            /* LEFT_PAREN_ALT  */
  YYSYMBOL_LEFT_PAREN_WITH = 12,           /* LEFT_PAREN_WITH  */
  YYSYMBOL_LEFT_PAREN_LIKE = 13,           /* LEFT_PAREN_LIKE  */
  YYSYMBOL_ORACLE_CONCAT_SYM = 14,         /* ORACLE_CONCAT_SYM  */
  YYSYMBOL_PERCENT_ORACLE_SYM = 15,        /* PERCENT_ORACLE_SYM  */
  YYSYMBOL_WITH_CUBE_SYM = 16,             /* WITH_CUBE_SYM  */
  YYSYMBOL_WITH_ROLLUP_SYM = 17,           /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITH_SYSTEM_SYM = 18,           /* WITH_SYSTEM_SYM  */
  YYSYMBOL_IDENT = 19,                     /* IDENT  */
  YYSYMBOL_IDENT_QUOTED = 20,              /* IDENT_QUOTED  */
  YYSYMBOL_LEX_HOSTNAME = 21,              /* LEX_HOSTNAME  */
  YYSYMBOL_UNDERSCORE_CHARSET = 22,        /* UNDERSCORE_CHARSET  */
  YYSYMBOL_BIN_NUM = 23,                   /* BIN_NUM  */
  YYSYMBOL_DECIMAL_NUM = 24,               /* DECIMAL_NUM  */
  YYSYMBOL_FLOAT_NUM = 25,                 /* FLOAT_NUM  */
  YYSYMBOL_HEX_NUM = 26,                   /* HEX_NUM  */
  YYSYMBOL_HEX_STRING = 27,                /* HEX_STRING  */
  YYSYMBOL_LONG_NUM = 28,                  /* LONG_NUM  */
  YYSYMBOL_NCHAR_STRING = 29,              /* NCHAR_STRING  */
  YYSYMBOL_NUM = 30,                       /* NUM  */
  YYSYMBOL_TEXT_STRING = 31,               /* TEXT_STRING  */
  YYSYMBOL_ULONGLONG_NUM = 32,             /* ULONGLONG_NUM  */
  YYSYMBOL_AND_AND_SYM = 33,               /* AND_AND_SYM  */
  YYSYMBOL_DOT_DOT_SYM = 34,               /* DOT_DOT_SYM  */
  YYSYMBOL_EQUAL_SYM = 35,                 /* EQUAL_SYM  */
  YYSYMBOL_GE = 36,                        /* GE  */
  YYSYMBOL_LE = 37,                        /* LE  */
  YYSYMBOL_MYSQL_CONCAT_SYM = 38,          /* MYSQL_CONCAT_SYM  */
  YYSYMBOL_NE = 39,                        /* NE  */
  YYSYMBOL_NOT2_SYM = 40,                  /* NOT2_SYM  */
  YYSYMBOL_OR2_SYM = 41,                   /* OR2_SYM  */
  YYSYMBOL_SET_VAR = 42,                   /* SET_VAR  */
  YYSYMBOL_SHIFT_LEFT = 43,                /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 44,               /* SHIFT_RIGHT  */
  YYSYMBOL_ACCESSIBLE_SYM = 45,            /* ACCESSIBLE_SYM  */
  YYSYMBOL_ADD = 46,                       /* ADD  */
  YYSYMBOL_ALL = 47,                       /* ALL  */
  YYSYMBOL_ALTER = 48,                     /* ALTER  */
  YYSYMBOL_ANALYZE_SYM = 49,               /* ANALYZE_SYM  */
  YYSYMBOL_AND_SYM = 50,                   /* AND_SYM  */
  YYSYMBOL_ASC = 51,                       /* ASC  */
  YYSYMBOL_ASENSITIVE_SYM = 52,            /* ASENSITIVE_SYM  */
  YYSYMBOL_AS = 53,                        /* AS  */
  YYSYMBOL_BEFORE_SYM = 54,                /* BEFORE_SYM  */
  YYSYMBOL_BETWEEN_SYM = 55,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT = 56,                    /* BIGINT  */
  YYSYMBOL_BINARY = 57,                    /* BINARY  */
  YYSYMBOL_BIT_AND = 58,                   /* BIT_AND  */
  YYSYMBOL_BIT_OR = 59,                    /* BIT_OR  */
  YYSYMBOL_BIT_XOR = 60,                   /* BIT_XOR  */
  YYSYMBOL_BLOB_MARIADB_SYM = 61,          /* BLOB_MARIADB_SYM  */
  YYSYMBOL_BLOB_ORACLE_SYM = 62,           /* BLOB_ORACLE_SYM  */
  YYSYMBOL_BODY_ORACLE_SYM = 63,           /* BODY_ORACLE_SYM  */
  YYSYMBOL_BOTH = 64,                      /* BOTH  */
  YYSYMBOL_BY = 65,                        /* BY  */
  YYSYMBOL_CALL_SYM = 66,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 67,                   /* CASCADE  */
  YYSYMBOL_CASE_SYM = 68,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 69,                  /* CAST_SYM  */
  YYSYMBOL_CHANGE = 70,                    /* CHANGE  */
  YYSYMBOL_CHAR_SYM = 71,                  /* CHAR_SYM  */
  YYSYMBOL_CHECK_SYM = 72,                 /* CHECK_SYM  */
  YYSYMBOL_COLLATE_SYM = 73,               /* COLLATE_SYM  */
  YYSYMBOL_CONDITION_SYM = 74,             /* CONDITION_SYM  */
  YYSYMBOL_CONSTRAINT = 75,                /* CONSTRAINT  */
  YYSYMBOL_CONTINUE_MARIADB_SYM = 76,      /* CONTINUE_MARIADB_SYM  */
  YYSYMBOL_CONTINUE_ORACLE_SYM = 77,       /* CONTINUE_ORACLE_SYM  */
  YYSYMBOL_CONVERT_SYM = 78,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 79,                 /* COUNT_SYM  */
  YYSYMBOL_CREATE = 80,                    /* CREATE  */
  YYSYMBOL_CROSS = 81,                     /* CROSS  */
  YYSYMBOL_CUME_DIST_SYM = 82,             /* CUME_DIST_SYM  */
  YYSYMBOL_CURDATE = 83,                   /* CURDATE  */
  YYSYMBOL_CURRENT_ROLE = 84,              /* CURRENT_ROLE  */
  YYSYMBOL_CURRENT_USER = 85,              /* CURRENT_USER  */
  YYSYMBOL_CURSOR_SYM = 86,                /* CURSOR_SYM  */
  YYSYMBOL_CURTIME = 87,                   /* CURTIME  */
  YYSYMBOL_DATABASE = 88,                  /* DATABASE  */
  YYSYMBOL_DATABASES = 89,                 /* DATABASES  */
  YYSYMBOL_DATE_ADD_INTERVAL = 90,         /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 91,         /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DAY_HOUR_SYM = 92,              /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 93,       /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 94,            /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 95,            /* DAY_SECOND_SYM  */
  YYSYMBOL_DECIMAL_SYM = 96,               /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_MARIADB_SYM = 97,       /* DECLARE_MARIADB_SYM  */
  YYSYMBOL_DECLARE_ORACLE_SYM = 98,        /* DECLARE_ORACLE_SYM  */
  YYSYMBOL_DEFAULT = 99,                   /* DEFAULT  */
  YYSYMBOL_DELETE_DOMAIN_ID_SYM = 100,     /* DELETE_DOMAIN_ID_SYM  */
  YYSYMBOL_DELETE_SYM = 101,               /* DELETE_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 102,           /* DENSE_RANK_SYM  */
  YYSYMBOL_DESCRIBE = 103,                 /* DESCRIBE  */
  YYSYMBOL_DESC = 104,                     /* DESC  */
  YYSYMBOL_DETERMINISTIC_SYM = 105,        /* DETERMINISTIC_SYM  */
  YYSYMBOL_DISTINCT = 106,                 /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 107,                  /* DIV_SYM  */
  YYSYMBOL_DO_DOMAIN_IDS_SYM = 108,        /* DO_DOMAIN_IDS_SYM  */
  YYSYMBOL_DOUBLE_SYM = 109,               /* DOUBLE_SYM  */
  YYSYMBOL_DROP = 110,                     /* DROP  */
  YYSYMBOL_DUAL_SYM = 111,                 /* DUAL_SYM  */
  YYSYMBOL_EACH_SYM = 112,                 /* EACH_SYM  */
  YYSYMBOL_ELSEIF_MARIADB_SYM = 113,       /* ELSEIF_MARIADB_SYM  */
  YYSYMBOL_ELSE = 114,                     /* ELSE  */
  YYSYMBOL_ELSIF_ORACLE_SYM = 115,         /* ELSIF_ORACLE_SYM  */
  YYSYMBOL_EMPTY_SYM = 116,                /* EMPTY_SYM  */
  YYSYMBOL_ENCLOSED = 117,                 /* ENCLOSED  */
  YYSYMBOL_ESCAPED = 118,                  /* ESCAPED  */
  YYSYMBOL_EXCEPT_SYM = 119,               /* EXCEPT_SYM  */
  YYSYMBOL_EXISTS = 120,                   /* EXISTS  */
  YYSYMBOL_EXTRACT_SYM = 121,              /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 122,                /* FALSE_SYM  */
  YYSYMBOL_FETCH_SYM = 123,                /* FETCH_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 124,          /* FIRST_VALUE_SYM  */
  YYSYMBOL_FLOAT_SYM = 125,                /* FLOAT_SYM  */
  YYSYMBOL_FOREIGN = 126,                  /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 127,                  /* FOR_SYM  */
  YYSYMBOL_FROM = 128,                     /* FROM  */
  YYSYMBOL_FULLTEXT_SYM = 129,             /* FULLTEXT_SYM  */
  YYSYMBOL_GOTO_ORACLE_SYM = 130,          /* GOTO_ORACLE_SYM  */
  YYSYMBOL_GRANT = 131,                    /* GRANT  */
  YYSYMBOL_GROUP_CONCAT_SYM = 132,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_JSON_ARRAYAGG_SYM = 133,        /* JSON_ARRAYAGG_SYM  */
  YYSYMBOL_JSON_OBJECTAGG_SYM = 134,       /* JSON_OBJECTAGG_SYM  */
  YYSYMBOL_JSON_TABLE_SYM = 135,           /* JSON_TABLE_SYM  */
  YYSYMBOL_GROUP_SYM = 136,                /* GROUP_SYM  */
  YYSYMBOL_HAVING = 137,                   /* HAVING  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 138,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 139,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 140,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_IF_SYM = 141,                   /* IF_SYM  */
  YYSYMBOL_IGNORE_DOMAIN_IDS_SYM = 142,    /* IGNORE_DOMAIN_IDS_SYM  */
  YYSYMBOL_IGNORE_SYM = 143,               /* IGNORE_SYM  */
  YYSYMBOL_IGNORED_SYM = 144,              /* IGNORED_SYM  */
  YYSYMBOL_INDEX_SYM = 145,                /* INDEX_SYM  */
  YYSYMBOL_INFILE = 146,                   /* INFILE  */
  YYSYMBOL_INNER_SYM = 147,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 148,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 149,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT = 150,                   /* INSERT  */
  YYSYMBOL_IN_SYM = 151,                   /* IN_SYM  */
  YYSYMBOL_INTERSECT_SYM = 152,            /* INTERSECT_SYM  */
  YYSYMBOL_INTERVAL_SYM = 153,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 154,                     /* INTO  */
  YYSYMBOL_INT_SYM = 155,                  /* INT_SYM  */
  YYSYMBOL_IS = 156,                       /* IS  */
  YYSYMBOL_ITERATE_SYM = 157,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 158,                 /* JOIN_SYM  */
  YYSYMBOL_KEYS = 159,                     /* KEYS  */
  YYSYMBOL_KEY_SYM = 160,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 161,                 /* KILL_SYM  */
  YYSYMBOL_LAG_SYM = 162,                  /* LAG_SYM  */
  YYSYMBOL_LEADING = 163,                  /* LEADING  */
  YYSYMBOL_LEAD_SYM = 164,                 /* LEAD_SYM  */
  YYSYMBOL_LEAVE_SYM = 165,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 166,                     /* LEFT  */
  YYSYMBOL_LIKE = 167,                     /* LIKE  */
  YYSYMBOL_LIMIT = 168,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 169,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 170,                    /* LINES  */
  YYSYMBOL_LOAD = 171,                     /* LOAD  */
  YYSYMBOL_LOCALTIMESTAMP = 172,           /* LOCALTIMESTAMP  */
  YYSYMBOL_LOCATOR_SYM = 173,              /* LOCATOR_SYM  */
  YYSYMBOL_LOCK_SYM = 174,                 /* LOCK_SYM  */
  YYSYMBOL_LONGBLOB = 175,                 /* LONGBLOB  */
  YYSYMBOL_LONG_SYM = 176,                 /* LONG_SYM  */
  YYSYMBOL_LONGTEXT = 177,                 /* LONGTEXT  */
  YYSYMBOL_LOOP_SYM = 178,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 179,             /* LOW_PRIORITY  */
  YYSYMBOL_MASTER_SSL_VERIFY_SERVER_CERT_SYM = 180, /* MASTER_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_MATCH = 181,                    /* MATCH  */
  YYSYMBOL_MAX_SYM = 182,                  /* MAX_SYM  */
  YYSYMBOL_MAXVALUE_SYM = 183,             /* MAXVALUE_SYM  */
  YYSYMBOL_MEDIAN_SYM = 184,               /* MEDIAN_SYM  */
  YYSYMBOL_MEDIUMBLOB = 185,               /* MEDIUMBLOB  */
  YYSYMBOL_MEDIUMINT = 186,                /* MEDIUMINT  */
  YYSYMBOL_MEDIUMTEXT = 187,               /* MEDIUMTEXT  */
  YYSYMBOL_MIN_SYM = 188,                  /* MIN_SYM  */
  YYSYMBOL_MINUS_ORACLE_SYM = 189,         /* MINUS_ORACLE_SYM  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 190,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 191,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MODIFIES_SYM = 192,             /* MODIFIES_SYM  */
  YYSYMBOL_MOD_SYM = 193,                  /* MOD_SYM  */
  YYSYMBOL_NATURAL = 194,                  /* NATURAL  */
  YYSYMBOL_NEG = 195,                      /* NEG  */
  YYSYMBOL_NESTED_SYM = 196,               /* NESTED_SYM  */
  YYSYMBOL_NOT_SYM = 197,                  /* NOT_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 198,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NOW_SYM = 199,                  /* NOW_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 200,            /* NTH_VALUE_SYM  */
  YYSYMBOL_NTILE_SYM = 201,                /* NTILE_SYM  */
  YYSYMBOL_NULL_SYM = 202,                 /* NULL_SYM  */
  YYSYMBOL_NUMERIC_SYM = 203,              /* NUMERIC_SYM  */
  YYSYMBOL_ON = 204,                       /* ON  */
  YYSYMBOL_OPTIMIZE = 205,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIONALLY = 206,               /* OPTIONALLY  */
  YYSYMBOL_ORDER_SYM = 207,                /* ORDER_SYM  */
  YYSYMBOL_ORDINALITY_SYM = 208,           /* ORDINALITY_SYM  */
  YYSYMBOL_OR_SYM = 209,                   /* OR_SYM  */
  YYSYMBOL_OTHERS_ORACLE_SYM = 210,        /* OTHERS_ORACLE_SYM  */
  YYSYMBOL_OUTER = 211,                    /* OUTER  */
  YYSYMBOL_OUTFILE = 212,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 213,                  /* OUT_SYM  */
  YYSYMBOL_OVER_SYM = 214,                 /* OVER_SYM  */
  YYSYMBOL_PACKAGE_ORACLE_SYM = 215,       /* PACKAGE_ORACLE_SYM  */
  YYSYMBOL_PAGE_CHECKSUM_SYM = 216,        /* PAGE_CHECKSUM_SYM  */
  YYSYMBOL_PARSE_VCOL_EXPR_SYM = 217,      /* PARSE_VCOL_EXPR_SYM  */
  YYSYMBOL_PARTITION_SYM = 218,            /* PARTITION_SYM  */
  YYSYMBOL_PATH_SYM = 219,                 /* PATH_SYM  */
  YYSYMBOL_PERCENTILE_CONT_SYM = 220,      /* PERCENTILE_CONT_SYM  */
  YYSYMBOL_PERCENTILE_DISC_SYM = 221,      /* PERCENTILE_DISC_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 222,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PORTION_SYM = 223,              /* PORTION_SYM  */
  YYSYMBOL_POSITION_SYM = 224,             /* POSITION_SYM  */
  YYSYMBOL_PRECISION = 225,                /* PRECISION  */
  YYSYMBOL_PRIMARY_SYM = 226,              /* PRIMARY_SYM  */
  YYSYMBOL_PROCEDURE_SYM = 227,            /* PROCEDURE_SYM  */
  YYSYMBOL_PURGE = 228,                    /* PURGE  */
  YYSYMBOL_RAISE_ORACLE_SYM = 229,         /* RAISE_ORACLE_SYM  */
  YYSYMBOL_RANGE_SYM = 230,                /* RANGE_SYM  */
  YYSYMBOL_RANK_SYM = 231,                 /* RANK_SYM  */
  YYSYMBOL_READS_SYM = 232,                /* READS_SYM  */
  YYSYMBOL_READ_SYM = 233,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 234,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL = 235,                     /* REAL  */
  YYSYMBOL_RECURSIVE_SYM = 236,            /* RECURSIVE_SYM  */
  YYSYMBOL_REFERENCES = 237,               /* REFERENCES  */
  YYSYMBOL_REF_SYSTEM_ID_SYM = 238,        /* REF_SYSTEM_ID_SYM  */
  YYSYMBOL_REGEXP = 239,                   /* REGEXP  */
  YYSYMBOL_RELEASE_SYM = 240,              /* RELEASE_SYM  */
  YYSYMBOL_RENAME = 241,                   /* RENAME  */
  YYSYMBOL_REPEAT_SYM = 242,               /* REPEAT_SYM  */
  YYSYMBOL_REQUIRE_SYM = 243,              /* REQUIRE_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 244,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESTRICT = 245,                 /* RESTRICT  */
  YYSYMBOL_RETURNING_SYM = 246,            /* RETURNING_SYM  */
  YYSYMBOL_RETURN_MARIADB_SYM = 247,       /* RETURN_MARIADB_SYM  */
  YYSYMBOL_RETURN_ORACLE_SYM = 248,        /* RETURN_ORACLE_SYM  */
  YYSYMBOL_REVOKE = 249,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 250,                    /* RIGHT  */
  YYSYMBOL_ROW_NUMBER_SYM = 251,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_ROWS_SYM = 252,                 /* ROWS_SYM  */
  YYSYMBOL_ROWTYPE_ORACLE_SYM = 253,       /* ROWTYPE_ORACLE_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 254,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SELECT_SYM = 255,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 256,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 257,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERVER_OPTIONS = 258,           /* SERVER_OPTIONS  */
  YYSYMBOL_SET = 259,                      /* SET  */
  YYSYMBOL_SHOW = 260,                     /* SHOW  */
  YYSYMBOL_SIGNAL_SYM = 261,               /* SIGNAL_SYM  */
  YYSYMBOL_SMALLINT = 262,                 /* SMALLINT  */
  YYSYMBOL_SPATIAL_SYM = 263,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 264,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQL_BIG_RESULT = 265,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQLEXCEPTION_SYM = 266,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQL_SMALL_RESULT = 267,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQLSTATE_SYM = 268,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQL_SYM = 269,                  /* SQL_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 270,           /* SQLWARNING_SYM  */
  YYSYMBOL_SSL_SYM = 271,                  /* SSL_SYM  */
  YYSYMBOL_STARTING = 272,                 /* STARTING  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 273,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 274,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 275,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 276,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 277,                  /* STD_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 278,            /* STRAIGHT_JOIN  */
  YYSYMBOL_SUM_SYM = 279,                  /* SUM_SYM  */
  YYSYMBOL_SYSDATE = 280,                  /* SYSDATE  */
  YYSYMBOL_TABLE_REF_PRIORITY = 281,       /* TABLE_REF_PRIORITY  */
  YYSYMBOL_TABLE_SYM = 282,                /* TABLE_SYM  */
  YYSYMBOL_TERMINATED = 283,               /* TERMINATED  */
  YYSYMBOL_THEN_SYM = 284,                 /* THEN_SYM  */
  YYSYMBOL_TINYBLOB = 285,                 /* TINYBLOB  */
  YYSYMBOL_TINYINT = 286,                  /* TINYINT  */
  YYSYMBOL_TINYTEXT = 287,                 /* TINYTEXT  */
  YYSYMBOL_TO_SYM = 288,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 289,                 /* TRAILING  */
  YYSYMBOL_TRIGGER_SYM = 290,              /* TRIGGER_SYM  */
  YYSYMBOL_TRUE_SYM = 291,                 /* TRUE_SYM  */
  YYSYMBOL_UNDO_SYM = 292,                 /* UNDO_SYM  */
  YYSYMBOL_UNION_SYM = 293,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 294,               /* UNIQUE_SYM  */
  YYSYMBOL_UNLOCK_SYM = 295,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED = 296,                 /* UNSIGNED  */
  YYSYMBOL_UPDATE_SYM = 297,               /* UPDATE_SYM  */
  YYSYMBOL_USAGE = 298,                    /* USAGE  */
  YYSYMBOL_USE_SYM = 299,                  /* USE_SYM  */
  YYSYMBOL_USING = 300,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 301,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 302,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 303,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALUES_IN_SYM = 304,            /* VALUES_IN_SYM  */
  YYSYMBOL_VALUES_LESS_SYM = 305,          /* VALUES_LESS_SYM  */
  YYSYMBOL_VALUES = 306,                   /* VALUES  */
  YYSYMBOL_VARBINARY = 307,                /* VARBINARY  */
  YYSYMBOL_VARCHAR = 308,                  /* VARCHAR  */
  YYSYMBOL_VARIANCE_SYM = 309,             /* VARIANCE_SYM  */
  YYSYMBOL_VAR_SAMP_SYM = 310,             /* VAR_SAMP_SYM  */
  YYSYMBOL_VARYING = 311,                  /* VARYING  */
  YYSYMBOL_VECTOR_SYM = 312,               /* VECTOR_SYM  */
  YYSYMBOL_WHEN_SYM = 313,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 314,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 315,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 316,                     /* WITH  */
  YYSYMBOL_XOR = 317,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 318,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_ZEROFILL = 319,                 /* ZEROFILL  */
  YYSYMBOL_BODY_MARIADB_SYM = 320,         /* BODY_MARIADB_SYM  */
  YYSYMBOL_ELSEIF_ORACLE_SYM = 321,        /* ELSEIF_ORACLE_SYM  */
  YYSYMBOL_ELSIF_MARIADB_SYM = 322,        /* ELSIF_MARIADB_SYM  */
  YYSYMBOL_EXCEPTION_ORACLE_SYM = 323,     /* EXCEPTION_ORACLE_SYM  */
  YYSYMBOL_GOTO_MARIADB_SYM = 324,         /* GOTO_MARIADB_SYM  */
  YYSYMBOL_NOCOPY_SYM = 325,               /* NOCOPY_SYM  */
  YYSYMBOL_OTHERS_MARIADB_SYM = 326,       /* OTHERS_MARIADB_SYM  */
  YYSYMBOL_PACKAGE_MARIADB_SYM = 327,      /* PACKAGE_MARIADB_SYM  */
  YYSYMBOL_RAISE_MARIADB_SYM = 328,        /* RAISE_MARIADB_SYM  */
  YYSYMBOL_RECORD_SYM = 329,               /* RECORD_SYM  */
  YYSYMBOL_ROWTYPE_MARIADB_SYM = 330,      /* ROWTYPE_MARIADB_SYM  */
  YYSYMBOL_ROWNUM_SYM = 331,               /* ROWNUM_SYM  */
  YYSYMBOL_REPLACE = 332,                  /* REPLACE  */
  YYSYMBOL_SUBSTRING = 333,                /* SUBSTRING  */
  YYSYMBOL_TRIM = 334,                     /* TRIM  */
  YYSYMBOL_ACCOUNT_SYM = 335,              /* ACCOUNT_SYM  */
  YYSYMBOL_ACTION = 336,                   /* ACTION  */
  YYSYMBOL_ADMIN_SYM = 337,                /* ADMIN_SYM  */
  YYSYMBOL_ADDDATE_SYM = 338,              /* ADDDATE_SYM  */
  YYSYMBOL_AFTER_SYM = 339,                /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 340,                  /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 341,            /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 342,            /* ALGORITHM_SYM  */
  YYSYMBOL_ALWAYS_SYM = 343,               /* ALWAYS_SYM  */
  YYSYMBOL_ANY_SYM = 344,                  /* ANY_SYM  */
  YYSYMBOL_ASCII_SYM = 345,                /* ASCII_SYM  */
  YYSYMBOL_AT_SYM = 346,                   /* AT_SYM  */
  YYSYMBOL_ATOMIC_SYM = 347,               /* ATOMIC_SYM  */
  YYSYMBOL_AUTHORS_SYM = 348,              /* AUTHORS_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 349,      /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 350,                 /* AUTO_INC  */
  YYSYMBOL_AUTO_SYM = 351,                 /* AUTO_SYM  */
  YYSYMBOL_AVG_ROW_LENGTH = 352,           /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 353,                  /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 354,               /* BACKUP_SYM  */
  YYSYMBOL_BEGIN_MARIADB_SYM = 355,        /* BEGIN_MARIADB_SYM  */
  YYSYMBOL_BEGIN_ORACLE_SYM = 356,         /* BEGIN_ORACLE_SYM  */
  YYSYMBOL_BINLOG_SYM = 357,               /* BINLOG_SYM  */
  YYSYMBOL_BIT_SYM = 358,                  /* BIT_SYM  */
  YYSYMBOL_BLOCK_SYM = 359,                /* BLOCK_SYM  */
  YYSYMBOL_BOOL_SYM = 360,                 /* BOOL_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 361,              /* BOOLEAN_SYM  */
  YYSYMBOL_BTREE_SYM = 362,                /* BTREE_SYM  */
  YYSYMBOL_BYTE_SYM = 363,                 /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 364,                /* CACHE_SYM  */
  YYSYMBOL_CASCADED = 365,                 /* CASCADED  */
  YYSYMBOL_CATALOG_NAME_SYM = 366,         /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 367,                /* CHAIN_SYM  */
  YYSYMBOL_CHANGED = 368,                  /* CHANGED  */
  YYSYMBOL_CHANNEL_SYM = 369,              /* CHANNEL_SYM  */
  YYSYMBOL_CHARSET = 370,                  /* CHARSET  */
  YYSYMBOL_CHECKPOINT_SYM = 371,           /* CHECKPOINT_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 372,             /* CHECKSUM_SYM  */
  YYSYMBOL_CIPHER_SYM = 373,               /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 374,         /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 375,               /* CLIENT_SYM  */
  YYSYMBOL_CLOB_MARIADB_SYM = 376,         /* CLOB_MARIADB_SYM  */
  YYSYMBOL_CLOB_ORACLE_SYM = 377,          /* CLOB_ORACLE_SYM  */
  YYSYMBOL_CLOSE_SYM = 378,                /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 379,                 /* COALESCE  */
  YYSYMBOL_CODE_SYM = 380,                 /* CODE_SYM  */
  YYSYMBOL_COLLATION_SYM = 381,            /* COLLATION_SYM  */
  YYSYMBOL_COLUMNS = 382,                  /* COLUMNS  */
  YYSYMBOL_COLUMN_ADD_SYM = 383,           /* COLUMN_ADD_SYM  */
  YYSYMBOL_COLUMN_CHECK_SYM = 384,         /* COLUMN_CHECK_SYM  */
  YYSYMBOL_COLUMN_CREATE_SYM = 385,        /* COLUMN_CREATE_SYM  */
  YYSYMBOL_COLUMN_DELETE_SYM = 386,        /* COLUMN_DELETE_SYM  */
  YYSYMBOL_COLUMN_GET_SYM = 387,           /* COLUMN_GET_SYM  */
  YYSYMBOL_COLUMN_SYM = 388,               /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 389,          /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 390,              /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 391,            /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 392,               /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 393,              /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 394,           /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 395,           /* COMPRESSED_SYM  */
  YYSYMBOL_CONCURRENT = 396,               /* CONCURRENT  */
  YYSYMBOL_CONNECTION_SYM = 397,           /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 398,           /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 399,   /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 400,      /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 401,    /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 402,             /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 403,              /* CONTEXT_SYM  */
  YYSYMBOL_CONTRIBUTORS_SYM = 404,         /* CONTRIBUTORS_SYM  */
  YYSYMBOL_CPU_SYM = 405,                  /* CPU_SYM  */
  YYSYMBOL_CUBE_SYM = 406,                 /* CUBE_SYM  */
  YYSYMBOL_CURRENT_SYM = 407,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_POS_SYM = 408,          /* CURRENT_POS_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 409,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CYCLE_SYM = 410,                /* CYCLE_SYM  */
  YYSYMBOL_DATAFILE_SYM = 411,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 412,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME = 413,                 /* DATETIME  */
  YYSYMBOL_DATE_SYM = 414,                 /* DATE_SYM  */
  YYSYMBOL_DAY_SYM = 415,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 416,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DEFINER_SYM = 417,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 418,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 419,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DES_KEY_FILE = 420,             /* DES_KEY_FILE  */
  YYSYMBOL_DIAGNOSTICS_SYM = 421,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 422,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 423,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD = 424,                  /* DISCARD  */
  YYSYMBOL_DISK_SYM = 425,                 /* DISK_SYM  */
  YYSYMBOL_DO_SYM = 426,                   /* DO_SYM  */
  YYSYMBOL_DUMPFILE = 427,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 428,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 429,              /* DYNAMIC_SYM  */
  YYSYMBOL_ENABLE_SYM = 430,               /* ENABLE_SYM  */
  YYSYMBOL_END = 431,                      /* END  */
  YYSYMBOL_ENDS_SYM = 432,                 /* ENDS_SYM  */
  YYSYMBOL_ENGINES_SYM = 433,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 434,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM = 435,                     /* ENUM  */
  YYSYMBOL_ERROR_SYM = 436,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 437,                   /* ERRORS  */
  YYSYMBOL_ESCAPE_SYM = 438,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 439,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 440,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 441,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 442,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXAMINED_SYM = 443,             /* EXAMINED_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 444,              /* EXCLUDE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 445,              /* EXECUTE_SYM  */
  YYSYMBOL_EXCEPTION_MARIADB_SYM = 446,    /* EXCEPTION_MARIADB_SYM  */
  YYSYMBOL_EXIT_MARIADB_SYM = 447,         /* EXIT_MARIADB_SYM  */
  YYSYMBOL_EXIT_ORACLE_SYM = 448,          /* EXIT_ORACLE_SYM  */
  YYSYMBOL_EXPANSION_SYM = 449,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPIRE_SYM = 450,               /* EXPIRE_SYM  */
  YYSYMBOL_EXPORT_SYM = 451,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 452,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 453,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_FAST_SYM = 454,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 455,               /* FAULTS_SYM  */
  YYSYMBOL_FEDERATED_SYM = 456,            /* FEDERATED_SYM  */
  YYSYMBOL_FILE_SYM = 457,                 /* FILE_SYM  */
  YYSYMBOL_FIRST_SYM = 458,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 459,                /* FIXED_SYM  */
  YYSYMBOL_FLUSH_SYM = 460,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 461,              /* FOLLOWS_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 462,            /* FOLLOWING_SYM  */
  YYSYMBOL_FORCE_SYM = 463,                /* FORCE_SYM  */
  YYSYMBOL_FORMAT_SYM = 464,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 465,                /* FOUND_SYM  */
  YYSYMBOL_FULL = 466,                     /* FULL  */
  YYSYMBOL_FUNCTION_SYM = 467,             /* FUNCTION_SYM  */
  YYSYMBOL_GENERAL = 468,                  /* GENERAL  */
  YYSYMBOL_GENERATED_SYM = 469,            /* GENERATED_SYM  */
  YYSYMBOL_GET_FORMAT = 470,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 471,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 472,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANTS = 473,                   /* GRANTS  */
  YYSYMBOL_HANDLER_SYM = 474,              /* HANDLER_SYM  */
  YYSYMBOL_HARD_SYM = 475,                 /* HARD_SYM  */
  YYSYMBOL_HASH_SYM = 476,                 /* HASH_SYM  */
  YYSYMBOL_HELP_SYM = 477,                 /* HELP_SYM  */
  YYSYMBOL_HIGH_PRIORITY = 478,            /* HIGH_PRIORITY  */
  YYSYMBOL_HISTORY_SYM = 479,              /* HISTORY_SYM  */
  YYSYMBOL_HOST_SYM = 480,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 481,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_SYM = 482,                 /* HOUR_SYM  */
  YYSYMBOL_ID_SYM = 483,                   /* ID_SYM  */
  YYSYMBOL_IDENTIFIED_SYM = 484,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 485,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMMEDIATE_SYM = 486,            /* IMMEDIATE_SYM  */
  YYSYMBOL_IMPORT = 487,                   /* IMPORT  */
  YYSYMBOL_INCREMENT_SYM = 488,            /* INCREMENT_SYM  */
  YYSYMBOL_INDEXES = 489,                  /* INDEXES  */
  YYSYMBOL_INITIAL_SIZE_SYM = 490,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INSERT_METHOD = 491,            /* INSERT_METHOD  */
  YYSYMBOL_INSTALL_SYM = 492,              /* INSTALL_SYM  */
  YYSYMBOL_INVOKER_SYM = 493,              /* INVOKER_SYM  */
  YYSYMBOL_IO_SYM = 494,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 495,                  /* IPC_SYM  */
  YYSYMBOL_ISOLATION = 496,                /* ISOLATION  */
  YYSYMBOL_ISOPEN_SYM = 497,               /* ISOPEN_SYM  */
  YYSYMBOL_ISSUER_SYM = 498,               /* ISSUER_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 499,            /* INVISIBLE_SYM  */
  YYSYMBOL_JSON_SYM = 500,                 /* JSON_SYM  */
  YYSYMBOL_KEY_BLOCK_SIZE = 501,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_LANGUAGE_SYM = 502,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 503,                 /* LAST_SYM  */
  YYSYMBOL_LAST_VALUE = 504,               /* LAST_VALUE  */
  YYSYMBOL_LASTVAL_SYM = 505,              /* LASTVAL_SYM  */
  YYSYMBOL_LEAVES = 506,                   /* LEAVES  */
  YYSYMBOL_LESS_SYM = 507,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 508,                /* LEVEL_SYM  */
  YYSYMBOL_LIST_SYM = 509,                 /* LIST_SYM  */
  YYSYMBOL_LOCAL_SYM = 510,                /* LOCAL_SYM  */
  YYSYMBOL_LOCKED_SYM = 511,               /* LOCKED_SYM  */
  YYSYMBOL_LOCKS_SYM = 512,                /* LOCKS_SYM  */
  YYSYMBOL_LOGFILE_SYM = 513,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 514,                 /* LOGS_SYM  */
  YYSYMBOL_MASTER_CONNECT_RETRY_SYM = 515, /* MASTER_CONNECT_RETRY_SYM  */
  YYSYMBOL_MASTER_DELAY_SYM = 516,         /* MASTER_DELAY_SYM  */
  YYSYMBOL_MASTER_GTID_POS_SYM = 517,      /* MASTER_GTID_POS_SYM  */
  YYSYMBOL_MASTER_HOST_SYM = 518,          /* MASTER_HOST_SYM  */
  YYSYMBOL_MASTER_LOG_FILE_SYM = 519,      /* MASTER_LOG_FILE_SYM  */
  YYSYMBOL_MASTER_LOG_POS_SYM = 520,       /* MASTER_LOG_POS_SYM  */
  YYSYMBOL_MASTER_PASSWORD_SYM = 521,      /* MASTER_PASSWORD_SYM  */
  YYSYMBOL_MASTER_PORT_SYM = 522,          /* MASTER_PORT_SYM  */
  YYSYMBOL_MASTER_SERVER_ID_SYM = 523,     /* MASTER_SERVER_ID_SYM  */
  YYSYMBOL_MASTER_SSL_CAPATH_SYM = 524,    /* MASTER_SSL_CAPATH_SYM  */
  YYSYMBOL_MASTER_SSL_CA_SYM = 525,        /* MASTER_SSL_CA_SYM  */
  YYSYMBOL_MASTER_SSL_CERT_SYM = 526,      /* MASTER_SSL_CERT_SYM  */
  YYSYMBOL_MASTER_SSL_CIPHER_SYM = 527,    /* MASTER_SSL_CIPHER_SYM  */
  YYSYMBOL_MASTER_SSL_CRL_SYM = 528,       /* MASTER_SSL_CRL_SYM  */
  YYSYMBOL_MASTER_SSL_CRLPATH_SYM = 529,   /* MASTER_SSL_CRLPATH_SYM  */
  YYSYMBOL_MASTER_SSL_KEY_SYM = 530,       /* MASTER_SSL_KEY_SYM  */
  YYSYMBOL_MASTER_SSL_SYM = 531,           /* MASTER_SSL_SYM  */
  YYSYMBOL_MASTER_SYM = 532,               /* MASTER_SYM  */
  YYSYMBOL_MASTER_USER_SYM = 533,          /* MASTER_USER_SYM  */
  YYSYMBOL_MASTER_USE_GTID_SYM = 534,      /* MASTER_USE_GTID_SYM  */
  YYSYMBOL_MASTER_HEARTBEAT_PERIOD_SYM = 535, /* MASTER_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_MASTER_DEMOTE_TO_SLAVE_SYM = 536, /* MASTER_DEMOTE_TO_SLAVE_SYM  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 537, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 538,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 539,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 540,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 541,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_STATEMENT_TIME_SYM = 542,   /* MAX_STATEMENT_TIME_SYM  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 543, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MEDIUM_SYM = 544,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 545,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 546,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 547,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 548,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 549,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_SYM = 550,               /* MINUTE_SYM  */
  YYSYMBOL_MINVALUE_SYM = 551,             /* MINVALUE_SYM  */
  YYSYMBOL_MIN_ROWS = 552,                 /* MIN_ROWS  */
  YYSYMBOL_MODE_SYM = 553,                 /* MODE_SYM  */
  YYSYMBOL_MODIFY_SYM = 554,               /* MODIFY_SYM  */
  YYSYMBOL_MONITOR_SYM = 555,              /* MONITOR_SYM  */
  YYSYMBOL_MONTH_SYM = 556,                /* MONTH_SYM  */
  YYSYMBOL_MUTEX_SYM = 557,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_SYM = 558,                /* MYSQL_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 559,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 560,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 561,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 562,             /* NATIONAL_SYM  */
  YYSYMBOL_NCHAR_SYM = 563,                /* NCHAR_SYM  */
  YYSYMBOL_NEVER_SYM = 564,                /* NEVER_SYM  */
  YYSYMBOL_NEXT_SYM = 565,                 /* NEXT_SYM  */
  YYSYMBOL_NEXTVAL_SYM = 566,              /* NEXTVAL_SYM  */
  YYSYMBOL_NOCACHE_SYM = 567,              /* NOCACHE_SYM  */
  YYSYMBOL_NOCYCLE_SYM = 568,              /* NOCYCLE_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 569,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 570,                 /* NONE_SYM  */
  YYSYMBOL_NOTFOUND_SYM = 571,             /* NOTFOUND_SYM  */
  YYSYMBOL_NO_SYM = 572,                   /* NO_SYM  */
  YYSYMBOL_NOMAXVALUE_SYM = 573,           /* NOMAXVALUE_SYM  */
  YYSYMBOL_NOMINVALUE_SYM = 574,           /* NOMINVALUE_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 575,              /* NO_WAIT_SYM  */
  YYSYMBOL_NOWAIT_SYM = 576,               /* NOWAIT_SYM  */
  YYSYMBOL_NUMBER_MARIADB_SYM = 577,       /* NUMBER_MARIADB_SYM  */
  YYSYMBOL_NUMBER_ORACLE_SYM = 578,        /* NUMBER_ORACLE_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 579,             /* NVARCHAR_SYM  */
  YYSYMBOL_OF_SYM = 580,                   /* OF_SYM  */
  YYSYMBOL_OFFSET_SYM = 581,               /* OFFSET_SYM  */
  YYSYMBOL_OLD_PASSWORD_SYM = 582,         /* OLD_PASSWORD_SYM  */
  YYSYMBOL_ONE_SYM = 583,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 584,                 /* ONLY_SYM  */
  YYSYMBOL_ONLINE_SYM = 585,               /* ONLINE_SYM  */
  YYSYMBOL_OPEN_SYM = 586,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIONS_SYM = 587,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 588,                   /* OPTION  */
  YYSYMBOL_OVERLAPS_SYM = 589,             /* OVERLAPS_SYM  */
  YYSYMBOL_OWNER_SYM = 590,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 591,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 592,                 /* PAGE_SYM  */
  YYSYMBOL_PARSER_SYM = 593,               /* PARSER_SYM  */
  YYSYMBOL_PARTIAL = 594,                  /* PARTIAL  */
  YYSYMBOL_PARTITIONS_SYM = 595,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 596,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD_SYM = 597,             /* PASSWORD_SYM  */
  YYSYMBOL_PERIOD_SYM = 598,               /* PERIOD_SYM  */
  YYSYMBOL_PERSISTENT_SYM = 599,           /* PERSISTENT_SYM  */
  YYSYMBOL_PHASE_SYM = 600,                /* PHASE_SYM  */
  YYSYMBOL_PLUGINS_SYM = 601,              /* PLUGINS_SYM  */
  YYSYMBOL_PLUGIN_SYM = 602,               /* PLUGIN_SYM  */
  YYSYMBOL_PORT_SYM = 603,                 /* PORT_SYM  */
  YYSYMBOL_PRECEDES_SYM = 604,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECEDING_SYM = 605,            /* PRECEDING_SYM  */
  YYSYMBOL_PREPARE_SYM = 606,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 607,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 608,                 /* PREV_SYM  */
  YYSYMBOL_PREVIOUS_SYM = 609,             /* PREVIOUS_SYM  */
  YYSYMBOL_PRIVILEGES = 610,               /* PRIVILEGES  */
  YYSYMBOL_PROCESS = 611,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 612,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 613,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 614,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 615,                /* PROXY_SYM  */
  YYSYMBOL_QUARTER_SYM = 616,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 617,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 618,                    /* QUICK  */
  YYSYMBOL_RAW_MARIADB_SYM = 619,          /* RAW_MARIADB_SYM  */
  YYSYMBOL_RAW_ORACLE_SYM = 620,           /* RAW_ORACLE_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 621,            /* READ_ONLY_SYM  */
  YYSYMBOL_REBUILD_SYM = 622,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 623,              /* RECOVER_SYM  */
  YYSYMBOL_REDOFILE_SYM = 624,             /* REDOFILE_SYM  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 625,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 626,            /* REDUNDANT_SYM  */
  YYSYMBOL_RELAY = 627,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 628,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 629,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 630,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 631,             /* RELAY_THREAD  */
  YYSYMBOL_RELOAD = 632,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 633,               /* REMOVE_SYM  */
  YYSYMBOL_REORGANIZE_SYM = 634,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 635,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 636,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPLAY_SYM = 637,               /* REPLAY_SYM  */
  YYSYMBOL_REPLICATION = 638,              /* REPLICATION  */
  YYSYMBOL_RESET_SYM = 639,                /* RESET_SYM  */
  YYSYMBOL_RESTART_SYM = 640,              /* RESTART_SYM  */
  YYSYMBOL_RESOURCES = 641,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 642,              /* RESTORE_SYM  */
  YYSYMBOL_RESUME_SYM = 643,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 644,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 645,              /* RETURNS_SYM  */
  YYSYMBOL_REUSE_SYM = 646,                /* REUSE_SYM  */
  YYSYMBOL_REVERSE_SYM = 647,              /* REVERSE_SYM  */
  YYSYMBOL_ROLE_SYM = 648,                 /* ROLE_SYM  */
  YYSYMBOL_ROLLBACK_SYM = 649,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 650,               /* ROLLUP_SYM  */
  YYSYMBOL_ROUTINE_SYM = 651,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWCOUNT_SYM = 652,             /* ROWCOUNT_SYM  */
  YYSYMBOL_ROW_SYM = 653,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 654,            /* ROW_COUNT_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 655,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_RTREE_SYM = 656,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 657,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 658,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 659,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_SYM = 660,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 661,             /* SECURITY_SYM  */
  YYSYMBOL_SEQUENCE_SYM = 662,             /* SEQUENCE_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 663,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 664,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 665,              /* SESSION_SYM  */
  YYSYMBOL_SESSION_USER_SYM = 666,         /* SESSION_USER_SYM  */
  YYSYMBOL_SERVER_SYM = 667,               /* SERVER_SYM  */
  YYSYMBOL_SETVAL_SYM = 668,               /* SETVAL_SYM  */
  YYSYMBOL_SHARE_SYM = 669,                /* SHARE_SYM  */
  YYSYMBOL_SHUTDOWN = 670,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNED_SYM = 671,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 672,               /* SIMPLE_SYM  */
  YYSYMBOL_SKIP_SYM = 673,                 /* SKIP_SYM  */
  YYSYMBOL_SLAVE = 674,                    /* SLAVE  */
  YYSYMBOL_SLAVES = 675,                   /* SLAVES  */
  YYSYMBOL_SLAVE_POS_SYM = 676,            /* SLAVE_POS_SYM  */
  YYSYMBOL_SLOW = 677,                     /* SLOW  */
  YYSYMBOL_SNAPSHOT_SYM = 678,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 679,               /* SOCKET_SYM  */
  YYSYMBOL_SOFT_SYM = 680,                 /* SOFT_SYM  */
  YYSYMBOL_SONAME_SYM = 681,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 682,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 683,               /* SOURCE_SYM  */
  YYSYMBOL_SQL_AFTER_GTIDS_SYM = 684,      /* SQL_AFTER_GTIDS_SYM  */
  YYSYMBOL_SQL_BEFORE_GTIDS_SYM = 685,     /* SQL_BEFORE_GTIDS_SYM  */
  YYSYMBOL_SQL_BUFFER_RESULT = 686,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_SQL_CACHE_SYM = 687,            /* SQL_CACHE_SYM  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 688,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 689,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_THREAD = 690,               /* SQL_THREAD  */
  YYSYMBOL_STAGE_SYM = 691,                /* STAGE_SYM  */
  YYSYMBOL_STARTS_SYM = 692,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 693,                /* START_SYM  */
  YYSYMBOL_STATEMENT_SYM = 694,            /* STATEMENT_SYM  */
  YYSYMBOL_STATUS_SYM = 695,               /* STATUS_SYM  */
  YYSYMBOL_STOP_SYM = 696,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 697,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 698,               /* STORED_SYM  */
  YYSYMBOL_STRING_SYM = 699,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 700,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 701,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 702,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 703,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 704,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUPER_SYM = 705,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 706,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 707,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 708,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSTEM = 709,                   /* SYSTEM  */
  YYSYMBOL_SYSTEM_TIME_SYM = 710,          /* SYSTEM_TIME_SYM  */
  YYSYMBOL_TABLES = 711,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 712,               /* TABLESPACE  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 713,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 714,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 715,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 716,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TEXT_SYM = 717,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 718,                 /* THAN_SYM  */
  YYSYMBOL_TIES_SYM = 719,                 /* TIES_SYM  */
  YYSYMBOL_TIMESTAMP = 720,                /* TIMESTAMP  */
  YYSYMBOL_TIMESTAMP_ADD = 721,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 722,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 723,                 /* TIME_SYM  */
  YYSYMBOL_TRANSACTION_SYM = 724,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRANSACTIONAL_SYM = 725,        /* TRANSACTIONAL_SYM  */
  YYSYMBOL_THREADS_SYM = 726,              /* THREADS_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 727,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIM_ORACLE = 728,              /* TRIM_ORACLE  */
  YYSYMBOL_TRUNCATE_SYM = 729,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPE_SYM = 730,                 /* TYPE_SYM  */
  YYSYMBOL_UDF_RETURNS_SYM = 731,          /* UDF_RETURNS_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 732,            /* UNBOUNDED_SYM  */
  YYSYMBOL_UNCOMMITTED_SYM = 733,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 734,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDOFILE_SYM = 735,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 736,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNICODE_SYM = 737,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 738,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 739,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNTIL_SYM = 740,                /* UNTIL_SYM  */
  YYSYMBOL_UPGRADE_SYM = 741,              /* UPGRADE_SYM  */
  YYSYMBOL_USER_SYM = 742,                 /* USER_SYM  */
  YYSYMBOL_USE_FRM = 743,                  /* USE_FRM  */
  YYSYMBOL_VALIDATION_SYM = 744,           /* VALIDATION_SYM  */
  YYSYMBOL_VALUE_SYM = 745,                /* VALUE_SYM  */
  YYSYMBOL_VARCHAR2_MARIADB_SYM = 746,     /* VARCHAR2_MARIADB_SYM  */
  YYSYMBOL_VARCHAR2_ORACLE_SYM = 747,      /* VARCHAR2_ORACLE_SYM  */
  YYSYMBOL_VARIABLES = 748,                /* VARIABLES  */
  YYSYMBOL_VERSIONING_SYM = 749,           /* VERSIONING_SYM  */
  YYSYMBOL_VIA_SYM = 750,                  /* VIA_SYM  */
  YYSYMBOL_VIEW_SYM = 751,                 /* VIEW_SYM  */
  YYSYMBOL_VISIBLE_SYM = 752,              /* VISIBLE_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 753,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 754,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 755,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 756,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 757,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WINDOW_SYM = 758,               /* WINDOW_SYM  */
  YYSYMBOL_WITHIN = 759,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 760,                  /* WITHOUT  */
  YYSYMBOL_WORK_SYM = 761,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 762,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 763,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 764,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 765,                   /* XA_SYM  */
  YYSYMBOL_XML_SYM = 766,                  /* XML_SYM  */
  YYSYMBOL_YEAR_SYM = 767,                 /* YEAR_SYM  */
  YYSYMBOL_CONDITIONLESS_JOIN = 768,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_ON_SYM = 769,                   /* ON_SYM  */
  YYSYMBOL_PREC_BELOW_NOT = 770,           /* PREC_BELOW_NOT  */
  YYSYMBOL_771_ = 771,                     /* '='  */
  YYSYMBOL_772_ = 772,                     /* '>'  */
  YYSYMBOL_773_ = 773,                     /* '<'  */
  YYSYMBOL_774_ = 774,                     /* '|'  */
  YYSYMBOL_775_ = 775,                     /* '&'  */
  YYSYMBOL_776_ = 776,                     /* '-'  */
  YYSYMBOL_777_ = 777,                     /* '+'  */
  YYSYMBOL_778_ = 778,                     /* '*'  */
  YYSYMBOL_779_ = 779,                     /* '/'  */
  YYSYMBOL_780_ = 780,                     /* '%'  */
  YYSYMBOL_781_ = 781,                     /* '^'  */
  YYSYMBOL_782_ = 782,                     /* '~'  */
  YYSYMBOL_SUBQUERY_AS_EXPR = 783,         /* SUBQUERY_AS_EXPR  */
  YYSYMBOL_PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 784, /* PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE  */
  YYSYMBOL_USER = 785,                     /* USER  */
  YYSYMBOL_PREC_BELOW_SP_OBJECT_TYPE = 786, /* PREC_BELOW_SP_OBJECT_TYPE  */
  YYSYMBOL_PREC_BELOW_CONTRACTION_TOKEN2 = 787, /* PREC_BELOW_CONTRACTION_TOKEN2  */
  YYSYMBOL_788_ = 788,                     /* '('  */
  YYSYMBOL_789_ = 789,                     /* ')'  */
  YYSYMBOL_EMPTY_FROM_CLAUSE = 790,        /* EMPTY_FROM_CLAUSE  */
  YYSYMBOL_791_ = 791,                     /* ','  */
  YYSYMBOL_792_ = 792,                     /* '!'  */
  YYSYMBOL_793_ = 793,                     /* '{'  */
  YYSYMBOL_794_ = 794,                     /* '}'  */
  YYSYMBOL_795_ = 795,                     /* ';'  */
  YYSYMBOL_796_ = 796,                     /* '.'  */
  YYSYMBOL_YYACCEPT = 797,                 /* $accept  */
  YYSYMBOL_query = 798,                    /* query  */
  YYSYMBOL_799_1 = 799,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 800,         /* opt_end_of_input  */
  YYSYMBOL_directly_executable_statement = 801, /* directly_executable_statement  */
  YYSYMBOL_verb_clause = 802,              /* verb_clause  */
  YYSYMBOL_deallocate = 803,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 804,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 805,                  /* prepare  */
  YYSYMBOL_806_2 = 806,                    /* $@2  */
  YYSYMBOL_execute = 807,                  /* execute  */
  YYSYMBOL_808_3 = 808,                    /* $@3  */
  YYSYMBOL_809_4 = 809,                    /* $@4  */
  YYSYMBOL_execute_using = 810,            /* execute_using  */
  YYSYMBOL_811_5 = 811,                    /* $@5  */
  YYSYMBOL_execute_params = 812,           /* execute_params  */
  YYSYMBOL_help = 813,                     /* help  */
  YYSYMBOL_814_6 = 814,                    /* $@6  */
  YYSYMBOL_change = 815,                   /* change  */
  YYSYMBOL_816_7 = 816,                    /* $@7  */
  YYSYMBOL_master_defs = 817,              /* master_defs  */
  YYSYMBOL_master_def = 818,               /* master_def  */
  YYSYMBOL_ignore_server_id_list = 819,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 820,         /* ignore_server_id  */
  YYSYMBOL_do_domain_id_list = 821,        /* do_domain_id_list  */
  YYSYMBOL_do_domain_id = 822,             /* do_domain_id  */
  YYSYMBOL_ignore_domain_id_list = 823,    /* ignore_domain_id_list  */
  YYSYMBOL_ignore_domain_id = 824,         /* ignore_domain_id  */
  YYSYMBOL_master_file_def = 825,          /* master_file_def  */
  YYSYMBOL_optional_connection_name = 826, /* optional_connection_name  */
  YYSYMBOL_connection_name = 827,          /* connection_name  */
  YYSYMBOL_optional_for_channel = 828,     /* optional_for_channel  */
  YYSYMBOL_for_channel = 829,              /* for_channel  */
  YYSYMBOL_create = 830,                   /* create  */
  YYSYMBOL_831_8 = 831,                    /* $@8  */
  YYSYMBOL_832_9 = 832,                    /* $@9  */
  YYSYMBOL_833_10 = 833,                   /* $@10  */
  YYSYMBOL_834_11 = 834,                   /* $@11  */
  YYSYMBOL_835_12 = 835,                   /* $@12  */
  YYSYMBOL_836_13 = 836,                   /* $@13  */
  YYSYMBOL_837_14 = 837,                   /* $@14  */
  YYSYMBOL_838_15 = 838,                   /* $@15  */
  YYSYMBOL_839_16 = 839,                   /* $@16  */
  YYSYMBOL_840_17 = 840,                   /* $@17  */
  YYSYMBOL_841_18 = 841,                   /* $@18  */
  YYSYMBOL_842_19 = 842,                   /* $@19  */
  YYSYMBOL_843_20 = 843,                   /* $@20  */
  YYSYMBOL_844_21 = 844,                   /* $@21  */
  YYSYMBOL_845_22 = 845,                   /* $@22  */
  YYSYMBOL_846_23 = 846,                   /* $@23  */
  YYSYMBOL_847_24 = 847,                   /* $@24  */
  YYSYMBOL_opt_sequence = 848,             /* opt_sequence  */
  YYSYMBOL_sequence_defs = 849,            /* sequence_defs  */
  YYSYMBOL_sequence_def = 850,             /* sequence_def  */
  YYSYMBOL_force_lookahead = 851,          /* force_lookahead  */
  YYSYMBOL_server_def = 852,               /* server_def  */
  YYSYMBOL_853_25 = 853,                   /* $@25  */
  YYSYMBOL_server_options_list = 854,      /* server_options_list  */
  YYSYMBOL_server_option = 855,            /* server_option  */
  YYSYMBOL_event_tail = 856,               /* event_tail  */
  YYSYMBOL_857_26 = 857,                   /* $@26  */
  YYSYMBOL_ev_schedule_time = 858,         /* ev_schedule_time  */
  YYSYMBOL_859_27 = 859,                   /* $@27  */
  YYSYMBOL_opt_ev_status = 860,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 861,                /* ev_starts  */
  YYSYMBOL_ev_ends = 862,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 863,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 864,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 865,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 866,              /* ev_sql_stmt  */
  YYSYMBOL_867_28 = 867,                   /* $@28  */
  YYSYMBOL_clear_privileges = 868,         /* clear_privileges  */
  YYSYMBOL_opt_aggregate = 869,            /* opt_aggregate  */
  YYSYMBOL_sp_handler = 870,               /* sp_handler  */
  YYSYMBOL_sp_handler_package_spec = 871,  /* sp_handler_package_spec  */
  YYSYMBOL_sp_handler_package_body = 872,  /* sp_handler_package_body  */
  YYSYMBOL_drop_routine = 873,             /* drop_routine  */
  YYSYMBOL_sp_name = 874,                  /* sp_name  */
  YYSYMBOL_sp_a_chistics = 875,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 876,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 877,               /* sp_chistic  */
  YYSYMBOL_sp_c_chistic = 878,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 879,                  /* sp_suid  */
  YYSYMBOL_call = 880,                     /* call  */
  YYSYMBOL_881_29 = 881,                   /* $@29  */
  YYSYMBOL_882_30 = 882,                   /* $@30  */
  YYSYMBOL_883_31 = 883,                   /* $@31  */
  YYSYMBOL_opt_sp_cparam_list = 884,       /* opt_sp_cparam_list  */
  YYSYMBOL_885_32 = 885,                   /* $@32  */
  YYSYMBOL_opt_sp_cparams = 886,           /* opt_sp_cparams  */
  YYSYMBOL_sp_cparams = 887,               /* sp_cparams  */
  YYSYMBOL_sp_fdparam_list = 888,          /* sp_fdparam_list  */
  YYSYMBOL_889_33 = 889,                   /* $@33  */
  YYSYMBOL_sp_fdparams = 890,              /* sp_fdparams  */
  YYSYMBOL_sp_fdparams_no_default = 891,   /* sp_fdparams_no_default  */
  YYSYMBOL_sp_param_name = 892,            /* sp_param_name  */
  YYSYMBOL_sp_param_name_and_mode_init_vars = 893, /* sp_param_name_and_mode_init_vars  */
  YYSYMBOL_sp_pdparam_list = 894,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 895,              /* sp_pdparams  */
  YYSYMBOL_sp_parameter_type = 896,        /* sp_parameter_type  */
  YYSYMBOL_sp_parenthesized_pdparam_list = 897, /* sp_parenthesized_pdparam_list  */
  YYSYMBOL_898_34 = 898,                   /* $@34  */
  YYSYMBOL_sp_param_default = 899,         /* sp_param_default  */
  YYSYMBOL_sp_param = 900,                 /* sp_param  */
  YYSYMBOL_sp_parenthesized_fdparam_list = 901, /* sp_parenthesized_fdparam_list  */
  YYSYMBOL_sp_proc_stmts = 902,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 903,           /* sp_proc_stmts1  */
  YYSYMBOL_optionally_qualified_column_ident = 904, /* optionally_qualified_column_ident  */
  YYSYMBOL_row_field_definition = 905,     /* row_field_definition  */
  YYSYMBOL_row_field_definition_list = 906, /* row_field_definition_list  */
  YYSYMBOL_row_type_body = 907,            /* row_type_body  */
  YYSYMBOL_rec_field_definition = 908,     /* rec_field_definition  */
  YYSYMBOL_rec_field_definition_anchored = 909, /* rec_field_definition_anchored  */
  YYSYMBOL_rec_field_definition_list = 910, /* rec_field_definition_list  */
  YYSYMBOL_rec_type_body = 911,            /* rec_type_body  */
  YYSYMBOL_sp_decl_idents_init_vars = 912, /* sp_decl_idents_init_vars  */
  YYSYMBOL_sp_decl_variable_list = 913,    /* sp_decl_variable_list  */
  YYSYMBOL_914_35 = 914,                   /* $@35  */
  YYSYMBOL_sp_decl_handler = 915,          /* sp_decl_handler  */
  YYSYMBOL_916_36 = 916,                   /* $@36  */
  YYSYMBOL_opt_parenthesized_cursor_formal_parameters = 917, /* opt_parenthesized_cursor_formal_parameters  */
  YYSYMBOL_sp_cursor_stmt_lex = 918,       /* sp_cursor_stmt_lex  */
  YYSYMBOL_sp_cursor_stmt = 919,           /* sp_cursor_stmt  */
  YYSYMBOL_920_37 = 920,                   /* $@37  */
  YYSYMBOL_sp_handler_type = 921,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 922,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 923,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 924,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 925,                 /* sqlstate  */
  YYSYMBOL_opt_value = 926,                /* opt_value  */
  YYSYMBOL_sp_hcond = 927,                 /* sp_hcond  */
  YYSYMBOL_raise_stmt_oracle = 928,        /* raise_stmt_oracle  */
  YYSYMBOL_signal_stmt = 929,              /* signal_stmt  */
  YYSYMBOL_signal_value = 930,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 931,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 932, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 933, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 934,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 935, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 936,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 937,          /* get_diagnostics  */
  YYSYMBOL_938_38 = 938,                   /* $@38  */
  YYSYMBOL_which_area = 939,               /* which_area  */
  YYSYMBOL_diagnostics_information = 940,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 941,    /* statement_information  */
  YYSYMBOL_statement_information_item = 942, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 943, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 944, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 945,         /* condition_number  */
  YYSYMBOL_condition_information = 946,    /* condition_information  */
  YYSYMBOL_condition_information_item = 947, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 948, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_ident = 949,            /* sp_decl_ident  */
  YYSYMBOL_sp_decl_idents = 950,           /* sp_decl_idents  */
  YYSYMBOL_sp_proc_stmt_if = 951,          /* sp_proc_stmt_if  */
  YYSYMBOL_952_39 = 952,                   /* $@39  */
  YYSYMBOL_sp_proc_stmt_statement = 953,   /* sp_proc_stmt_statement  */
  YYSYMBOL_954_40 = 954,                   /* $@40  */
  YYSYMBOL_RETURN_ALLMODES_SYM = 955,      /* RETURN_ALLMODES_SYM  */
  YYSYMBOL_sp_proc_stmt_return = 956,      /* sp_proc_stmt_return  */
  YYSYMBOL_957_41 = 957,                   /* $@41  */
  YYSYMBOL_sp_proc_stmt_exit_oracle = 958, /* sp_proc_stmt_exit_oracle  */
  YYSYMBOL_959_42 = 959,                   /* $@42  */
  YYSYMBOL_960_43 = 960,                   /* $@43  */
  YYSYMBOL_sp_proc_stmt_continue_oracle = 961, /* sp_proc_stmt_continue_oracle  */
  YYSYMBOL_962_44 = 962,                   /* $@44  */
  YYSYMBOL_963_45 = 963,                   /* $@45  */
  YYSYMBOL_sp_proc_stmt_leave = 964,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 965,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_goto_oracle = 966, /* sp_proc_stmt_goto_oracle  */
  YYSYMBOL_expr_lex = 967,                 /* expr_lex  */
  YYSYMBOL_968_46 = 968,                   /* @46  */
  YYSYMBOL_assignment_source_lex = 969,    /* assignment_source_lex  */
  YYSYMBOL_assignment_source_expr = 970,   /* assignment_source_expr  */
  YYSYMBOL_971_47 = 971,                   /* $@47  */
  YYSYMBOL_for_loop_bound_expr = 972,      /* for_loop_bound_expr  */
  YYSYMBOL_973_48 = 973,                   /* $@48  */
  YYSYMBOL_cursor_actual_parameters = 974, /* cursor_actual_parameters  */
  YYSYMBOL_opt_parenthesized_cursor_actual_parameters = 975, /* opt_parenthesized_cursor_actual_parameters  */
  YYSYMBOL_sp_proc_stmt_with_cursor = 976, /* sp_proc_stmt_with_cursor  */
  YYSYMBOL_sp_proc_stmt_open = 977,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch_head = 978,  /* sp_proc_stmt_fetch_head  */
  YYSYMBOL_sp_proc_stmt_fetch = 979,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_sp_proc_stmt_close = 980,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_fetch_list = 981,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 982,                    /* sp_if  */
  YYSYMBOL_983_49 = 983,                   /* $@49  */
  YYSYMBOL_984_50 = 984,                   /* $@50  */
  YYSYMBOL_sp_elseifs = 985,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 986,  /* case_stmt_specification  */
  YYSYMBOL_987_51 = 987,                   /* $@51  */
  YYSYMBOL_case_stmt_body = 988,           /* case_stmt_body  */
  YYSYMBOL_989_52 = 989,                   /* $@52  */
  YYSYMBOL_simple_when_clause_list = 990,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 991, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 992,       /* simple_when_clause  */
  YYSYMBOL_993_53 = 993,                   /* $@53  */
  YYSYMBOL_searched_when_clause = 994,     /* searched_when_clause  */
  YYSYMBOL_995_54 = 995,                   /* $@54  */
  YYSYMBOL_else_clause_opt = 996,          /* else_clause_opt  */
  YYSYMBOL_sp_opt_label = 997,             /* sp_opt_label  */
  YYSYMBOL_opt_sp_for_loop_direction = 998, /* opt_sp_for_loop_direction  */
  YYSYMBOL_sp_for_loop_index_and_bounds = 999, /* sp_for_loop_index_and_bounds  */
  YYSYMBOL_sp_for_loop_bounds = 1000,      /* sp_for_loop_bounds  */
  YYSYMBOL_loop_body = 1001,               /* loop_body  */
  YYSYMBOL_repeat_body = 1002,             /* repeat_body  */
  YYSYMBOL_pop_sp_loop_label = 1003,       /* pop_sp_loop_label  */
  YYSYMBOL_sp_labeled_control = 1004,      /* sp_labeled_control  */
  YYSYMBOL_1005_55 = 1005,                 /* $@55  */
  YYSYMBOL_1006_56 = 1006,                 /* $@56  */
  YYSYMBOL_1007_57 = 1007,                 /* $@57  */
  YYSYMBOL_1008_58 = 1008,                 /* $@58  */
  YYSYMBOL_1009_59 = 1009,                 /* $@59  */
  YYSYMBOL_1010_60 = 1010,                 /* $@60  */
  YYSYMBOL_sp_unlabeled_control = 1011,    /* sp_unlabeled_control  */
  YYSYMBOL_1012_61 = 1012,                 /* $@61  */
  YYSYMBOL_1013_62 = 1013,                 /* $@62  */
  YYSYMBOL_1014_63 = 1014,                 /* $@63  */
  YYSYMBOL_1015_64 = 1015,                 /* $@64  */
  YYSYMBOL_1016_65 = 1016,                 /* $@65  */
  YYSYMBOL_trg_action_time = 1017,         /* trg_action_time  */
  YYSYMBOL_trg_event = 1018,               /* trg_event  */
  YYSYMBOL_create_body = 1019,             /* create_body  */
  YYSYMBOL_1020_66 = 1020,                 /* $@66  */
  YYSYMBOL_create_like = 1021,             /* create_like  */
  YYSYMBOL_opt_create_select = 1022,       /* opt_create_select  */
  YYSYMBOL_create_select_query_expression = 1023, /* create_select_query_expression  */
  YYSYMBOL_opt_create_partitioning = 1024, /* opt_create_partitioning  */
  YYSYMBOL_opt_partitioning = 1025,        /* opt_partitioning  */
  YYSYMBOL_partitioning = 1026,            /* partitioning  */
  YYSYMBOL_1027_67 = 1027,                 /* $@67  */
  YYSYMBOL_have_partitioning = 1028,       /* have_partitioning  */
  YYSYMBOL_partition_entry = 1029,         /* partition_entry  */
  YYSYMBOL_1030_68 = 1030,                 /* $@68  */
  YYSYMBOL_partition = 1031,               /* partition  */
  YYSYMBOL_1032_69 = 1032,                 /* $@69  */
  YYSYMBOL_part_type_def = 1033,           /* part_type_def  */
  YYSYMBOL_1034_70 = 1034,                 /* $@70  */
  YYSYMBOL_1035_71 = 1035,                 /* $@71  */
  YYSYMBOL_1036_72 = 1036,                 /* $@72  */
  YYSYMBOL_opt_linear = 1037,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1038,            /* opt_key_algo  */
  YYSYMBOL_part_field_list = 1039,         /* part_field_list  */
  YYSYMBOL_part_field_item_list = 1040,    /* part_field_item_list  */
  YYSYMBOL_part_field_item = 1041,         /* part_field_item  */
  YYSYMBOL_part_column_list = 1042,        /* part_column_list  */
  YYSYMBOL_part_func = 1043,               /* part_func  */
  YYSYMBOL_sub_part_func = 1044,           /* sub_part_func  */
  YYSYMBOL_opt_num_parts = 1045,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1046,            /* opt_sub_part  */
  YYSYMBOL_1047_73 = 1047,                 /* $@73  */
  YYSYMBOL_1048_74 = 1048,                 /* $@74  */
  YYSYMBOL_sub_part_field_list = 1049,     /* sub_part_field_list  */
  YYSYMBOL_sub_part_field_item = 1050,     /* sub_part_field_item  */
  YYSYMBOL_part_func_expr = 1051,          /* part_func_expr  */
  YYSYMBOL_opt_num_subparts = 1052,        /* opt_num_subparts  */
  YYSYMBOL_part_defs = 1053,               /* part_defs  */
  YYSYMBOL_part_def_list = 1054,           /* part_def_list  */
  YYSYMBOL_opt_partition = 1055,           /* opt_partition  */
  YYSYMBOL_part_definition = 1056,         /* part_definition  */
  YYSYMBOL_1057_75 = 1057,                 /* $@75  */
  YYSYMBOL_part_name = 1058,               /* part_name  */
  YYSYMBOL_opt_part_values = 1059,         /* opt_part_values  */
  YYSYMBOL_1060_76 = 1060,                 /* $@76  */
  YYSYMBOL_1061_77 = 1061,                 /* $@77  */
  YYSYMBOL_part_func_max = 1062,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1063,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1064,         /* part_value_list  */
  YYSYMBOL_part_value_item = 1065,         /* part_value_item  */
  YYSYMBOL_1066_78 = 1066,                 /* $@78  */
  YYSYMBOL_1067_79 = 1067,                 /* $@79  */
  YYSYMBOL_part_value_item_list = 1068,    /* part_value_item_list  */
  YYSYMBOL_part_value_expr_item = 1069,    /* part_value_expr_item  */
  YYSYMBOL_opt_sub_partition = 1070,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1071,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1072,     /* sub_part_definition  */
  YYSYMBOL_1073_80 = 1073,                 /* $@80  */
  YYSYMBOL_sub_name = 1074,                /* sub_name  */
  YYSYMBOL_opt_part_options = 1075,        /* opt_part_options  */
  YYSYMBOL_part_option_list = 1076,        /* part_option_list  */
  YYSYMBOL_part_option = 1077,             /* part_option  */
  YYSYMBOL_opt_subpart_options = 1078,     /* opt_subpart_options  */
  YYSYMBOL_subpart_option_list = 1079,     /* subpart_option_list  */
  YYSYMBOL_server_part_option = 1080,      /* server_part_option  */
  YYSYMBOL_opt_versioning_rotation = 1081, /* opt_versioning_rotation  */
  YYSYMBOL_1082_81 = 1082,                 /* $@81  */
  YYSYMBOL_opt_versioning_interval_start = 1083, /* opt_versioning_interval_start  */
  YYSYMBOL_opt_vers_auto_part = 1084,      /* opt_vers_auto_part  */
  YYSYMBOL_opt_as = 1085,                  /* opt_as  */
  YYSYMBOL_opt_create_database_options = 1086, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1087, /* create_database_options  */
  YYSYMBOL_create_database_option = 1088,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists_table_element = 1089, /* opt_if_not_exists_table_element  */
  YYSYMBOL_opt_if_not_exists = 1090,       /* opt_if_not_exists  */
  YYSYMBOL_create_or_replace = 1091,       /* create_or_replace  */
  YYSYMBOL_opt_create_table_options = 1092, /* opt_create_table_options  */
  YYSYMBOL_create_table_options_space_separated = 1093, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1094,    /* create_table_options  */
  YYSYMBOL_create_table_option = 1095,     /* create_table_option  */
  YYSYMBOL_1096_82 = 1096,                 /* $@82  */
  YYSYMBOL_engine_defined_option = 1097,   /* engine_defined_option  */
  YYSYMBOL_ident_options = 1098,           /* ident_options  */
  YYSYMBOL_keyword_options = 1099,         /* keyword_options  */
  YYSYMBOL_opt_versioning_option = 1100,   /* opt_versioning_option  */
  YYSYMBOL_versioning_option = 1101,       /* versioning_option  */
  YYSYMBOL_default_charset = 1102,         /* default_charset  */
  YYSYMBOL_default_collation = 1103,       /* default_collation  */
  YYSYMBOL_storage_engines = 1104,         /* storage_engines  */
  YYSYMBOL_known_storage_engines = 1105,   /* known_storage_engines  */
  YYSYMBOL_row_types = 1106,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1107,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1108,                /* udf_type  */
  YYSYMBOL_create_field_list = 1109,       /* create_field_list  */
  YYSYMBOL_create_field_list_parens = 1110, /* create_field_list_parens  */
  YYSYMBOL_field_list = 1111,              /* field_list  */
  YYSYMBOL_field_list_item = 1112,         /* field_list_item  */
  YYSYMBOL_column_def = 1113,              /* column_def  */
  YYSYMBOL_key_def = 1114,                 /* key_def  */
  YYSYMBOL_1115_83 = 1115,                 /* $@83  */
  YYSYMBOL_1116_84 = 1116,                 /* $@84  */
  YYSYMBOL_1117_85 = 1117,                 /* $@85  */
  YYSYMBOL_1118_86 = 1118,                 /* $@86  */
  YYSYMBOL_1119_87 = 1119,                 /* $@87  */
  YYSYMBOL_1120_88 = 1120,                 /* $@88  */
  YYSYMBOL_1121_89 = 1121,                 /* $@89  */
  YYSYMBOL_constraint_def = 1122,          /* constraint_def  */
  YYSYMBOL_period_for_system_time = 1123,  /* period_for_system_time  */
  YYSYMBOL_period_for_application_time = 1124, /* period_for_application_time  */
  YYSYMBOL_opt_check_constraint = 1125,    /* opt_check_constraint  */
  YYSYMBOL_check_constraint = 1126,        /* check_constraint  */
  YYSYMBOL_opt_constraint_no_id = 1127,    /* opt_constraint_no_id  */
  YYSYMBOL_opt_constraint = 1128,          /* opt_constraint  */
  YYSYMBOL_constraint = 1129,              /* constraint  */
  YYSYMBOL_field_spec = 1130,              /* field_spec  */
  YYSYMBOL_1131_90 = 1131,                 /* @90  */
  YYSYMBOL_field_type_or_serial = 1132,    /* field_type_or_serial  */
  YYSYMBOL_1133_91 = 1133,                 /* $@91  */
  YYSYMBOL_1134_92 = 1134,                 /* $@92  */
  YYSYMBOL_opt_serial_attribute = 1135,    /* opt_serial_attribute  */
  YYSYMBOL_opt_serial_attribute_list = 1136, /* opt_serial_attribute_list  */
  YYSYMBOL_opt_asrow_attribute = 1137,     /* opt_asrow_attribute  */
  YYSYMBOL_opt_asrow_attribute_list = 1138, /* opt_asrow_attribute_list  */
  YYSYMBOL_field_def = 1139,               /* field_def  */
  YYSYMBOL_1140_93 = 1140,                 /* $@93  */
  YYSYMBOL_opt_generated_always = 1141,    /* opt_generated_always  */
  YYSYMBOL_vcol_opt_specifier = 1142,      /* vcol_opt_specifier  */
  YYSYMBOL_vcol_opt_attribute = 1143,      /* vcol_opt_attribute  */
  YYSYMBOL_vcol_opt_attribute_list = 1144, /* vcol_opt_attribute_list  */
  YYSYMBOL_vcol_attribute = 1145,          /* vcol_attribute  */
  YYSYMBOL_parse_vcol_expr = 1146,         /* parse_vcol_expr  */
  YYSYMBOL_1147_94 = 1147,                 /* $@94  */
  YYSYMBOL_parenthesized_expr = 1148,      /* parenthesized_expr  */
  YYSYMBOL_virtual_column_func = 1149,     /* virtual_column_func  */
  YYSYMBOL_expr_or_literal = 1150,         /* expr_or_literal  */
  YYSYMBOL_column_default_expr = 1151,     /* column_default_expr  */
  YYSYMBOL_field_type = 1152,              /* field_type  */
  YYSYMBOL_qualified_field_type = 1153,    /* qualified_field_type  */
  YYSYMBOL_udt_name = 1154,                /* udt_name  */
  YYSYMBOL_field_type_all_builtin = 1155,  /* field_type_all_builtin  */
  YYSYMBOL_field_type_all = 1156,          /* field_type_all  */
  YYSYMBOL_field_type_all_with_record = 1157, /* field_type_all_with_record  */
  YYSYMBOL_field_type_numeric = 1158,      /* field_type_numeric  */
  YYSYMBOL_opt_binary_and_compression = 1159, /* opt_binary_and_compression  */
  YYSYMBOL_field_type_string = 1160,       /* field_type_string  */
  YYSYMBOL_field_type_temporal = 1161,     /* field_type_temporal  */
  YYSYMBOL_field_type_lob = 1162,          /* field_type_lob  */
  YYSYMBOL_field_type_misc = 1163,         /* field_type_misc  */
  YYSYMBOL_char = 1164,                    /* char  */
  YYSYMBOL_nchar = 1165,                   /* nchar  */
  YYSYMBOL_varchar = 1166,                 /* varchar  */
  YYSYMBOL_nvarchar = 1167,                /* nvarchar  */
  YYSYMBOL_int_type = 1168,                /* int_type  */
  YYSYMBOL_real_type = 1169,               /* real_type  */
  YYSYMBOL_srid_option = 1170,             /* srid_option  */
  YYSYMBOL_float_options = 1171,           /* float_options  */
  YYSYMBOL_precision = 1172,               /* precision  */
  YYSYMBOL_field_options = 1173,           /* field_options  */
  YYSYMBOL_last_field_options = 1174,      /* last_field_options  */
  YYSYMBOL_field_length_str = 1175,        /* field_length_str  */
  YYSYMBOL_field_length = 1176,            /* field_length  */
  YYSYMBOL_field_scale = 1177,             /* field_scale  */
  YYSYMBOL_opt_field_length = 1178,        /* opt_field_length  */
  YYSYMBOL_opt_field_scale = 1179,         /* opt_field_scale  */
  YYSYMBOL_opt_precision = 1180,           /* opt_precision  */
  YYSYMBOL_attribute_list = 1181,          /* attribute_list  */
  YYSYMBOL_attribute = 1182,               /* attribute  */
  YYSYMBOL_opt_compression_method = 1183,  /* opt_compression_method  */
  YYSYMBOL_opt_compressed = 1184,          /* opt_compressed  */
  YYSYMBOL_opt_enable = 1185,              /* opt_enable  */
  YYSYMBOL_compressed = 1186,              /* compressed  */
  YYSYMBOL_asrow_attribute = 1187,         /* asrow_attribute  */
  YYSYMBOL_serial_attribute = 1188,        /* serial_attribute  */
  YYSYMBOL_with_or_without_system = 1189,  /* with_or_without_system  */
  YYSYMBOL_charset = 1190,                 /* charset  */
  YYSYMBOL_charset_name = 1191,            /* charset_name  */
  YYSYMBOL_charset_name_or_default = 1192, /* charset_name_or_default  */
  YYSYMBOL_opt_load_data_charset = 1193,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1194, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1195, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1196,          /* collation_name  */
  YYSYMBOL_collation_name_or_default = 1197, /* collation_name_or_default  */
  YYSYMBOL_opt_default = 1198,             /* opt_default  */
  YYSYMBOL_charset_or_alias = 1199,        /* charset_or_alias  */
  YYSYMBOL_opt_binary = 1200,              /* opt_binary  */
  YYSYMBOL_binary = 1201,                  /* binary  */
  YYSYMBOL_opt_bin_mod = 1202,             /* opt_bin_mod  */
  YYSYMBOL_ws_nweights = 1203,             /* ws_nweights  */
  YYSYMBOL_1204_95 = 1204,                 /* $@95  */
  YYSYMBOL_ws_level_flag_desc = 1205,      /* ws_level_flag_desc  */
  YYSYMBOL_ws_level_flag_reverse = 1206,   /* ws_level_flag_reverse  */
  YYSYMBOL_ws_level_flags = 1207,          /* ws_level_flags  */
  YYSYMBOL_ws_level_number = 1208,         /* ws_level_number  */
  YYSYMBOL_ws_level_list_item = 1209,      /* ws_level_list_item  */
  YYSYMBOL_ws_level_list = 1210,           /* ws_level_list  */
  YYSYMBOL_ws_level_range = 1211,          /* ws_level_range  */
  YYSYMBOL_ws_level_list_or_range = 1212,  /* ws_level_list_or_range  */
  YYSYMBOL_opt_ws_levels = 1213,           /* opt_ws_levels  */
  YYSYMBOL_opt_primary = 1214,             /* opt_primary  */
  YYSYMBOL_references = 1215,              /* references  */
  YYSYMBOL_opt_ref_list = 1216,            /* opt_ref_list  */
  YYSYMBOL_ref_list = 1217,                /* ref_list  */
  YYSYMBOL_opt_match_clause = 1218,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1219,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1220,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1221,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1222,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1223,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1224,           /* keys_or_index  */
  YYSYMBOL_fulltext = 1225,                /* fulltext  */
  YYSYMBOL_spatial_or_vector = 1226,       /* spatial_or_vector  */
  YYSYMBOL_normal_key_options = 1227,      /* normal_key_options  */
  YYSYMBOL_fulltext_key_options = 1228,    /* fulltext_key_options  */
  YYSYMBOL_spatial_key_options = 1229,     /* spatial_key_options  */
  YYSYMBOL_normal_key_opts = 1230,         /* normal_key_opts  */
  YYSYMBOL_spatial_key_opts = 1231,        /* spatial_key_opts  */
  YYSYMBOL_fulltext_key_opts = 1232,       /* fulltext_key_opts  */
  YYSYMBOL_opt_USING_key_algorithm = 1233, /* opt_USING_key_algorithm  */
  YYSYMBOL_opt_key_algorithm_clause = 1234, /* opt_key_algorithm_clause  */
  YYSYMBOL_key_using_alg = 1235,           /* key_using_alg  */
  YYSYMBOL_all_key_opt = 1236,             /* all_key_opt  */
  YYSYMBOL_normal_key_opt = 1237,          /* normal_key_opt  */
  YYSYMBOL_spatial_key_opt = 1238,         /* spatial_key_opt  */
  YYSYMBOL_fulltext_key_opt = 1239,        /* fulltext_key_opt  */
  YYSYMBOL_btree_or_rtree = 1240,          /* btree_or_rtree  */
  YYSYMBOL_ignorability = 1241,            /* ignorability  */
  YYSYMBOL_key_list = 1242,                /* key_list  */
  YYSYMBOL_opt_without_overlaps = 1243,    /* opt_without_overlaps  */
  YYSYMBOL_key_part = 1244,                /* key_part  */
  YYSYMBOL_key_part_simple = 1245,         /* key_part_simple  */
  YYSYMBOL_opt_ident = 1246,               /* opt_ident  */
  YYSYMBOL_string_list = 1247,             /* string_list  */
  YYSYMBOL_alter = 1248,                   /* alter  */
  YYSYMBOL_1249_96 = 1249,                 /* $@96  */
  YYSYMBOL_1250_97 = 1250,                 /* $@97  */
  YYSYMBOL_1251_98 = 1251,                 /* $@98  */
  YYSYMBOL_1252_99 = 1252,                 /* $@99  */
  YYSYMBOL_1253_100 = 1253,                /* $@100  */
  YYSYMBOL_1254_101 = 1254,                /* $@101  */
  YYSYMBOL_1255_102 = 1255,                /* $@102  */
  YYSYMBOL_1256_103 = 1256,                /* $@103  */
  YYSYMBOL_1257_104 = 1257,                /* $@104  */
  YYSYMBOL_1258_105 = 1258,                /* $@105  */
  YYSYMBOL_1259_106 = 1259,                /* $@106  */
  YYSYMBOL_1260_107 = 1260,                /* $@107  */
  YYSYMBOL_1261_108 = 1261,                /* $@108  */
  YYSYMBOL_account_locking_option = 1262,  /* account_locking_option  */
  YYSYMBOL_opt_password_expire_option = 1263, /* opt_password_expire_option  */
  YYSYMBOL_opt_account_locking_and_opt_password_expiration = 1264, /* opt_account_locking_and_opt_password_expiration  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1265, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1266,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1267,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1268,          /* ident_or_empty  */
  YYSYMBOL_alter_commands = 1269,          /* alter_commands  */
  YYSYMBOL_1270_109 = 1270,                /* $@109  */
  YYSYMBOL_1271_110 = 1271,                /* $@110  */
  YYSYMBOL_1272_111 = 1272,                /* $@111  */
  YYSYMBOL_1273_112 = 1273,                /* $@112  */
  YYSYMBOL_remove_partitioning = 1274,     /* remove_partitioning  */
  YYSYMBOL_all_or_alt_part_name_list = 1275, /* all_or_alt_part_name_list  */
  YYSYMBOL_add_partition_rule = 1276,      /* add_partition_rule  */
  YYSYMBOL_1277_113 = 1277,                /* $@113  */
  YYSYMBOL_add_part_extra = 1278,          /* add_part_extra  */
  YYSYMBOL_reorg_partition_rule = 1279,    /* reorg_partition_rule  */
  YYSYMBOL_1280_114 = 1280,                /* $@114  */
  YYSYMBOL_reorg_parts_rule = 1281,        /* reorg_parts_rule  */
  YYSYMBOL_1282_115 = 1282,                /* $@115  */
  YYSYMBOL_alt_part_name_list = 1283,      /* alt_part_name_list  */
  YYSYMBOL_alt_part_name_item = 1284,      /* alt_part_name_item  */
  YYSYMBOL_alter_list = 1285,              /* alter_list  */
  YYSYMBOL_add_column = 1286,              /* add_column  */
  YYSYMBOL_alter_list_item = 1287,         /* alter_list_item  */
  YYSYMBOL_opt_without_validation = 1288,  /* opt_without_validation  */
  YYSYMBOL_opt_index_lock_algorithm = 1289, /* opt_index_lock_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1290,  /* alter_algorithm_option  */
  YYSYMBOL_alter_lock_option = 1291,       /* alter_lock_option  */
  YYSYMBOL_opt_column = 1292,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1293,              /* opt_ignore  */
  YYSYMBOL_alter_options = 1294,           /* alter_options  */
  YYSYMBOL_1295_116 = 1295,                /* $@116  */
  YYSYMBOL_alter_options_part2 = 1296,     /* alter_options_part2  */
  YYSYMBOL_alter_option_list = 1297,       /* alter_option_list  */
  YYSYMBOL_alter_option = 1298,            /* alter_option  */
  YYSYMBOL_opt_restrict = 1299,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1300,               /* opt_place  */
  YYSYMBOL_opt_to = 1301,                  /* opt_to  */
  YYSYMBOL_slave = 1302,                   /* slave  */
  YYSYMBOL_1303_117 = 1303,                /* $@117  */
  YYSYMBOL_1304_118 = 1304,                /* $@118  */
  YYSYMBOL_start = 1305,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1306, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1307, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1308, /* start_transaction_option  */
  YYSYMBOL_slave_thread_opts = 1309,       /* slave_thread_opts  */
  YYSYMBOL_1310_119 = 1310,                /* $@119  */
  YYSYMBOL_slave_thread_opt_list = 1311,   /* slave_thread_opt_list  */
  YYSYMBOL_slave_thread_opt = 1312,        /* slave_thread_opt  */
  YYSYMBOL_slave_until = 1313,             /* slave_until  */
  YYSYMBOL_slave_until_opts = 1314,        /* slave_until_opts  */
  YYSYMBOL_checksum = 1315,                /* checksum  */
  YYSYMBOL_1316_120 = 1316,                /* $@120  */
  YYSYMBOL_opt_checksum_type = 1317,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_or_view = 1318,    /* repair_table_or_view  */
  YYSYMBOL_1319_121 = 1319,                /* $@121  */
  YYSYMBOL_repair = 1320,                  /* repair  */
  YYSYMBOL_1321_122 = 1321,                /* $@122  */
  YYSYMBOL_opt_mi_repair_type = 1322,      /* opt_mi_repair_type  */
  YYSYMBOL_mi_repair_types = 1323,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1324,          /* mi_repair_type  */
  YYSYMBOL_opt_view_repair_type = 1325,    /* opt_view_repair_type  */
  YYSYMBOL_analyze = 1326,                 /* analyze  */
  YYSYMBOL_1327_123 = 1327,                /* $@123  */
  YYSYMBOL_analyze_table_list = 1328,      /* analyze_table_list  */
  YYSYMBOL_analyze_table_elem_spec = 1329, /* analyze_table_elem_spec  */
  YYSYMBOL_opt_persistent_stat_clause = 1330, /* opt_persistent_stat_clause  */
  YYSYMBOL_persistent_stat_spec = 1331,    /* persistent_stat_spec  */
  YYSYMBOL_persistent_column_stat_spec = 1332, /* persistent_column_stat_spec  */
  YYSYMBOL_1333_124 = 1333,                /* $@124  */
  YYSYMBOL_persistent_index_stat_spec = 1334, /* persistent_index_stat_spec  */
  YYSYMBOL_1335_125 = 1335,                /* $@125  */
  YYSYMBOL_table_column_list = 1336,       /* table_column_list  */
  YYSYMBOL_table_index_list = 1337,        /* table_index_list  */
  YYSYMBOL_table_index_name = 1338,        /* table_index_name  */
  YYSYMBOL_binlog_base64_event = 1339,     /* binlog_base64_event  */
  YYSYMBOL_check_view_or_table = 1340,     /* check_view_or_table  */
  YYSYMBOL_1341_126 = 1341,                /* $@126  */
  YYSYMBOL_check = 1342,                   /* check  */
  YYSYMBOL_1343_127 = 1343,                /* $@127  */
  YYSYMBOL_opt_mi_check_type = 1344,       /* opt_mi_check_type  */
  YYSYMBOL_mi_check_types = 1345,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1346,           /* mi_check_type  */
  YYSYMBOL_opt_view_check_type = 1347,     /* opt_view_check_type  */
  YYSYMBOL_optimize = 1348,                /* optimize  */
  YYSYMBOL_1349_128 = 1349,                /* $@128  */
  YYSYMBOL_opt_no_write_to_binlog = 1350,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1351,                  /* rename  */
  YYSYMBOL_1352_129 = 1352,                /* $@129  */
  YYSYMBOL_rename_list = 1353,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1354,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1355,          /* table_to_table  */
  YYSYMBOL_keycache = 1356,                /* keycache  */
  YYSYMBOL_1357_130 = 1357,                /* $@130  */
  YYSYMBOL_keycache_list_or_parts = 1358,  /* keycache_list_or_parts  */
  YYSYMBOL_keycache_list = 1359,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1360,      /* assign_to_keycache  */
  YYSYMBOL_assign_to_keycache_parts = 1361, /* assign_to_keycache_parts  */
  YYSYMBOL_key_cache_name = 1362,          /* key_cache_name  */
  YYSYMBOL_preload = 1363,                 /* preload  */
  YYSYMBOL_1364_131 = 1364,                /* $@131  */
  YYSYMBOL_preload_list_or_parts = 1365,   /* preload_list_or_parts  */
  YYSYMBOL_preload_list = 1366,            /* preload_list  */
  YYSYMBOL_preload_keys = 1367,            /* preload_keys  */
  YYSYMBOL_preload_keys_parts = 1368,      /* preload_keys_parts  */
  YYSYMBOL_adm_partition = 1369,           /* adm_partition  */
  YYSYMBOL_1370_132 = 1370,                /* $@132  */
  YYSYMBOL_cache_keys_spec = 1371,         /* cache_keys_spec  */
  YYSYMBOL_1372_133 = 1372,                /* $@133  */
  YYSYMBOL_cache_key_list_or_empty = 1373, /* cache_key_list_or_empty  */
  YYSYMBOL_opt_ignore_leaves = 1374,       /* opt_ignore_leaves  */
  YYSYMBOL_select = 1375,                  /* select  */
  YYSYMBOL_1376_134 = 1376,                /* $@134  */
  YYSYMBOL_1377_135 = 1377,                /* $@135  */
  YYSYMBOL_select_into = 1378,             /* select_into  */
  YYSYMBOL_1379_136 = 1379,                /* $@136  */
  YYSYMBOL_1380_137 = 1380,                /* $@137  */
  YYSYMBOL_simple_table = 1381,            /* simple_table  */
  YYSYMBOL_table_value_constructor = 1382, /* table_value_constructor  */
  YYSYMBOL_1383_138 = 1383,                /* $@138  */
  YYSYMBOL_query_specification_start = 1384, /* query_specification_start  */
  YYSYMBOL_1385_139 = 1385,                /* $@139  */
  YYSYMBOL_1386_140 = 1386,                /* $@140  */
  YYSYMBOL_query_specification = 1387,     /* query_specification  */
  YYSYMBOL_select_into_query_specification = 1388, /* select_into_query_specification  */
  YYSYMBOL_query_expression = 1389,        /* query_expression  */
  YYSYMBOL_query_expression_no_with_clause = 1390, /* query_expression_no_with_clause  */
  YYSYMBOL_query_expression_body_ext = 1391, /* query_expression_body_ext  */
  YYSYMBOL_1392_141 = 1392,                /* $@141  */
  YYSYMBOL_1393_142 = 1393,                /* $@142  */
  YYSYMBOL_query_expression_body_ext_parens = 1394, /* query_expression_body_ext_parens  */
  YYSYMBOL_query_expression_body = 1395,   /* query_expression_body  */
  YYSYMBOL_1396_143 = 1396,                /* $@143  */
  YYSYMBOL_query_primary = 1397,           /* query_primary  */
  YYSYMBOL_query_simple = 1398,            /* query_simple  */
  YYSYMBOL_subselect = 1399,               /* subselect  */
  YYSYMBOL_subquery = 1400,                /* subquery  */
  YYSYMBOL_opt_from_clause = 1401,         /* opt_from_clause  */
  YYSYMBOL_from_clause = 1402,             /* from_clause  */
  YYSYMBOL_table_reference_list = 1403,    /* table_reference_list  */
  YYSYMBOL_select_options = 1404,          /* select_options  */
  YYSYMBOL_opt_history_unit = 1405,        /* opt_history_unit  */
  YYSYMBOL_history_point = 1406,           /* history_point  */
  YYSYMBOL_for_portion_of_time_clause = 1407, /* for_portion_of_time_clause  */
  YYSYMBOL_opt_for_portion_of_time_clause = 1408, /* opt_for_portion_of_time_clause  */
  YYSYMBOL_opt_for_system_time_clause = 1409, /* opt_for_system_time_clause  */
  YYSYMBOL_system_time_expr = 1410,        /* system_time_expr  */
  YYSYMBOL_select_option_list = 1411,      /* select_option_list  */
  YYSYMBOL_select_option = 1412,           /* select_option  */
  YYSYMBOL_select_lock_type = 1413,        /* select_lock_type  */
  YYSYMBOL_opt_select_lock_type = 1414,    /* opt_select_lock_type  */
  YYSYMBOL_opt_lock_wait_timeout_new = 1415, /* opt_lock_wait_timeout_new  */
  YYSYMBOL_select_item_list = 1416,        /* select_item_list  */
  YYSYMBOL_select_item = 1417,             /* select_item  */
  YYSYMBOL_remember_tok_start = 1418,      /* remember_tok_start  */
  YYSYMBOL_remember_name = 1419,           /* remember_name  */
  YYSYMBOL_remember_end = 1420,            /* remember_end  */
  YYSYMBOL_remember_cpp_ptr = 1421,        /* remember_cpp_ptr  */
  YYSYMBOL_remember_start_opt = 1422,      /* remember_start_opt  */
  YYSYMBOL_remember_end_opt = 1423,        /* remember_end_opt  */
  YYSYMBOL_remember_lex = 1424,            /* remember_lex  */
  YYSYMBOL_select_alias = 1425,            /* select_alias  */
  YYSYMBOL_opt_default_time_precision = 1426, /* opt_default_time_precision  */
  YYSYMBOL_opt_time_precision = 1427,      /* opt_time_precision  */
  YYSYMBOL_optional_braces = 1428,         /* optional_braces  */
  YYSYMBOL_search_condition = 1429,        /* search_condition  */
  YYSYMBOL_expr = 1430,                    /* expr  */
  YYSYMBOL_boolean_test = 1431,            /* boolean_test  */
  YYSYMBOL_predicate = 1432,               /* predicate  */
  YYSYMBOL_bit_expr = 1433,                /* bit_expr  */
  YYSYMBOL_or = 1434,                      /* or  */
  YYSYMBOL_and = 1435,                     /* and  */
  YYSYMBOL_not = 1436,                     /* not  */
  YYSYMBOL_not2 = 1437,                    /* not2  */
  YYSYMBOL_comp_op = 1438,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1439,              /* all_or_any  */
  YYSYMBOL_opt_dyncol_type = 1440,         /* opt_dyncol_type  */
  YYSYMBOL_dyncol_type = 1441,             /* dyncol_type  */
  YYSYMBOL_numeric_dyncol_type = 1442,     /* numeric_dyncol_type  */
  YYSYMBOL_temporal_dyncol_type = 1443,    /* temporal_dyncol_type  */
  YYSYMBOL_string_dyncol_type = 1444,      /* string_dyncol_type  */
  YYSYMBOL_dyncall_create_element = 1445,  /* dyncall_create_element  */
  YYSYMBOL_dyncall_create_list = 1446,     /* dyncall_create_list  */
  YYSYMBOL_plsql_cursor_attr = 1447,       /* plsql_cursor_attr  */
  YYSYMBOL_explicit_cursor_attr = 1448,    /* explicit_cursor_attr  */
  YYSYMBOL_trim_operands = 1449,           /* trim_operands  */
  YYSYMBOL_trim_operands_regular = 1450,   /* trim_operands_regular  */
  YYSYMBOL_trim_operands_special = 1451,   /* trim_operands_special  */
  YYSYMBOL_column_default_non_parenthesized_expr = 1452, /* column_default_non_parenthesized_expr  */
  YYSYMBOL_primary_expr = 1453,            /* primary_expr  */
  YYSYMBOL_string_factor_expr = 1454,      /* string_factor_expr  */
  YYSYMBOL_simple_expr = 1455,             /* simple_expr  */
  YYSYMBOL_mysql_concatenation_expr = 1456, /* mysql_concatenation_expr  */
  YYSYMBOL_function_call_keyword_timestamp = 1457, /* function_call_keyword_timestamp  */
  YYSYMBOL_function_call_keyword = 1458,   /* function_call_keyword  */
  YYSYMBOL_substring_operands = 1459,      /* substring_operands  */
  YYSYMBOL_substring_operands_regular = 1460, /* substring_operands_regular  */
  YYSYMBOL_substring_operands_special = 1461, /* substring_operands_special  */
  YYSYMBOL_function_call_nonkeyword = 1462, /* function_call_nonkeyword  */
  YYSYMBOL_function_call_conflict = 1463,  /* function_call_conflict  */
  YYSYMBOL_function_call_generic = 1464,   /* function_call_generic  */
  YYSYMBOL_1465_144 = 1465,                /* @144  */
  YYSYMBOL_fulltext_options = 1466,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1467, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1468,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1469,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1470,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1471,                /* udf_expr  */
  YYSYMBOL_sum_expr = 1472,                /* sum_expr  */
  YYSYMBOL_1473_145 = 1473,                /* $@145  */
  YYSYMBOL_1474_146 = 1474,                /* $@146  */
  YYSYMBOL_1475_147 = 1475,                /* $@147  */
  YYSYMBOL_1476_148 = 1476,                /* $@148  */
  YYSYMBOL_1477_149 = 1477,                /* $@149  */
  YYSYMBOL_window_func_expr = 1478,        /* window_func_expr  */
  YYSYMBOL_window_func = 1479,             /* window_func  */
  YYSYMBOL_simple_window_func = 1480,      /* simple_window_func  */
  YYSYMBOL_inverse_distribution_function = 1481, /* inverse_distribution_function  */
  YYSYMBOL_percentile_function = 1482,     /* percentile_function  */
  YYSYMBOL_1483_150 = 1483,                /* $@150  */
  YYSYMBOL_inverse_distribution_function_def = 1484, /* inverse_distribution_function_def  */
  YYSYMBOL_order_by_single_element_list = 1485, /* order_by_single_element_list  */
  YYSYMBOL_window_name = 1486,             /* window_name  */
  YYSYMBOL_variable = 1487,                /* variable  */
  YYSYMBOL_1488_151 = 1488,                /* $@151  */
  YYSYMBOL_variable_aux = 1489,            /* variable_aux  */
  YYSYMBOL_opt_distinct = 1490,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1491,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1492,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1493,             /* gorder_list  */
  YYSYMBOL_opt_glimit_clause = 1494,       /* opt_glimit_clause  */
  YYSYMBOL_glimit_clause = 1495,           /* glimit_clause  */
  YYSYMBOL_glimit_options = 1496,          /* glimit_options  */
  YYSYMBOL_in_sum_expr = 1497,             /* in_sum_expr  */
  YYSYMBOL_1498_152 = 1498,                /* $@152  */
  YYSYMBOL_cast_type = 1499,               /* cast_type  */
  YYSYMBOL_cast_type_numeric = 1500,       /* cast_type_numeric  */
  YYSYMBOL_cast_type_temporal = 1501,      /* cast_type_temporal  */
  YYSYMBOL_opt_expr_list = 1502,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1503,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1504,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1505,              /* ident_list  */
  YYSYMBOL_when_list = 1506,               /* when_list  */
  YYSYMBOL_when_list_opt_else = 1507,      /* when_list_opt_else  */
  YYSYMBOL_table_ref = 1508,               /* table_ref  */
  YYSYMBOL_json_text_literal = 1509,       /* json_text_literal  */
  YYSYMBOL_join_table_list = 1510,         /* join_table_list  */
  YYSYMBOL_json_table_columns_clause = 1511, /* json_table_columns_clause  */
  YYSYMBOL_json_table_columns_list = 1512, /* json_table_columns_list  */
  YYSYMBOL_json_table_column = 1513,       /* json_table_column  */
  YYSYMBOL_1514_153 = 1514,                /* $@153  */
  YYSYMBOL_1515_154 = 1515,                /* $@154  */
  YYSYMBOL_json_table_column_type = 1516,  /* json_table_column_type  */
  YYSYMBOL_json_table_field_type = 1517,   /* json_table_field_type  */
  YYSYMBOL_json_opt_on_empty_or_error = 1518, /* json_opt_on_empty_or_error  */
  YYSYMBOL_json_default_literal = 1519,    /* json_default_literal  */
  YYSYMBOL_json_on_response = 1520,        /* json_on_response  */
  YYSYMBOL_json_on_error_response = 1521,  /* json_on_error_response  */
  YYSYMBOL_json_on_empty_response = 1522,  /* json_on_empty_response  */
  YYSYMBOL_table_function = 1523,          /* table_function  */
  YYSYMBOL_1524_155 = 1524,                /* $@155  */
  YYSYMBOL_1525_156 = 1525,                /* $@156  */
  YYSYMBOL_esc_table_ref = 1526,           /* esc_table_ref  */
  YYSYMBOL_derived_table_list = 1527,      /* derived_table_list  */
  YYSYMBOL_join_table = 1528,              /* join_table  */
  YYSYMBOL_1529_157 = 1529,                /* $@157  */
  YYSYMBOL_1530_158 = 1530,                /* $@158  */
  YYSYMBOL_1531_159 = 1531,                /* $@159  */
  YYSYMBOL_1532_160 = 1532,                /* $@160  */
  YYSYMBOL_1533_161 = 1533,                /* $@161  */
  YYSYMBOL_1534_162 = 1534,                /* $@162  */
  YYSYMBOL_inner_join = 1535,              /* inner_join  */
  YYSYMBOL_normal_join = 1536,             /* normal_join  */
  YYSYMBOL_opt_use_partition = 1537,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1538,           /* use_partition  */
  YYSYMBOL_table_factor = 1539,            /* table_factor  */
  YYSYMBOL_table_primary_ident_opt_parens = 1540, /* table_primary_ident_opt_parens  */
  YYSYMBOL_table_primary_derived_opt_parens = 1541, /* table_primary_derived_opt_parens  */
  YYSYMBOL_table_reference_list_parens = 1542, /* table_reference_list_parens  */
  YYSYMBOL_nested_table_reference_list = 1543, /* nested_table_reference_list  */
  YYSYMBOL_join_table_parens = 1544,       /* join_table_parens  */
  YYSYMBOL_table_primary_ident = 1545,     /* table_primary_ident  */
  YYSYMBOL_derived_column_list = 1546,     /* derived_column_list  */
  YYSYMBOL_table_primary_derived = 1547,   /* table_primary_derived  */
  YYSYMBOL_opt_outer = 1548,               /* opt_outer  */
  YYSYMBOL_index_hint_clause = 1549,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1550,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1551,   /* index_hint_definition  */
  YYSYMBOL_1552_163 = 1552,                /* $@163  */
  YYSYMBOL_1553_164 = 1553,                /* $@164  */
  YYSYMBOL_index_hints_list = 1554,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1555,    /* opt_index_hints_list  */
  YYSYMBOL_1556_165 = 1556,                /* $@165  */
  YYSYMBOL_opt_key_definition = 1557,      /* opt_key_definition  */
  YYSYMBOL_1558_166 = 1558,                /* $@166  */
  YYSYMBOL_opt_key_usage_list = 1559,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1560,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1561,          /* key_usage_list  */
  YYSYMBOL_using_list = 1562,              /* using_list  */
  YYSYMBOL_interval = 1563,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1564,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1565,          /* date_time_type  */
  YYSYMBOL_table_alias = 1566,             /* table_alias  */
  YYSYMBOL_opt_table_alias_clause = 1567,  /* opt_table_alias_clause  */
  YYSYMBOL_table_alias_clause = 1568,      /* table_alias_clause  */
  YYSYMBOL_opt_all = 1569,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1570,        /* opt_where_clause  */
  YYSYMBOL_1571_167 = 1571,                /* $@167  */
  YYSYMBOL_opt_having_clause = 1572,       /* opt_having_clause  */
  YYSYMBOL_1573_168 = 1573,                /* $@168  */
  YYSYMBOL_opt_group_clause = 1574,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1575,              /* group_list  */
  YYSYMBOL_olap_opt = 1576,                /* olap_opt  */
  YYSYMBOL_opt_window_clause = 1577,       /* opt_window_clause  */
  YYSYMBOL_window_def_list = 1578,         /* window_def_list  */
  YYSYMBOL_window_def = 1579,              /* window_def  */
  YYSYMBOL_window_spec = 1580,             /* window_spec  */
  YYSYMBOL_1581_169 = 1581,                /* $@169  */
  YYSYMBOL_opt_window_ref = 1582,          /* opt_window_ref  */
  YYSYMBOL_opt_window_partition_clause = 1583, /* opt_window_partition_clause  */
  YYSYMBOL_opt_window_order_clause = 1584, /* opt_window_order_clause  */
  YYSYMBOL_opt_window_frame_clause = 1585, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_units = 1586,      /* window_frame_units  */
  YYSYMBOL_window_frame_extent = 1587,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1588,      /* window_frame_start  */
  YYSYMBOL_window_frame_bound = 1589,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1590, /* opt_window_frame_exclusion  */
  YYSYMBOL_alter_order_clause = 1591,      /* alter_order_clause  */
  YYSYMBOL_alter_order_list = 1592,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1593,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1594,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1595,            /* order_clause  */
  YYSYMBOL_1596_170 = 1596,                /* $@170  */
  YYSYMBOL_order_list = 1597,              /* order_list  */
  YYSYMBOL_order_dir = 1598,               /* order_dir  */
  YYSYMBOL_opt_limit_clause = 1599,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause = 1600,            /* limit_clause  */
  YYSYMBOL_fetch_first_clause = 1601,      /* fetch_first_clause  */
  YYSYMBOL_first_or_next = 1602,           /* first_or_next  */
  YYSYMBOL_row_or_rows = 1603,             /* row_or_rows  */
  YYSYMBOL_only_or_with_ties = 1604,       /* only_or_with_ties  */
  YYSYMBOL_opt_global_limit_clause = 1605, /* opt_global_limit_clause  */
  YYSYMBOL_limit_options = 1606,           /* limit_options  */
  YYSYMBOL_limit_option = 1607,            /* limit_option  */
  YYSYMBOL_limit_rows_option = 1608,       /* limit_rows_option  */
  YYSYMBOL_delete_limit_clause = 1609,     /* delete_limit_clause  */
  YYSYMBOL_order_limit_lock = 1610,        /* order_limit_lock  */
  YYSYMBOL_opt_order_limit_lock = 1611,    /* opt_order_limit_lock  */
  YYSYMBOL_query_expression_tail = 1612,   /* query_expression_tail  */
  YYSYMBOL_opt_query_expression_tail = 1613, /* opt_query_expression_tail  */
  YYSYMBOL_opt_procedure_or_into = 1614,   /* opt_procedure_or_into  */
  YYSYMBOL_opt_order_or_limit = 1615,      /* opt_order_or_limit  */
  YYSYMBOL_order_or_limit = 1616,          /* order_or_limit  */
  YYSYMBOL_opt_plus = 1617,                /* opt_plus  */
  YYSYMBOL_int_num = 1618,                 /* int_num  */
  YYSYMBOL_ulong_num = 1619,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1620,          /* real_ulong_num  */
  YYSYMBOL_sequence_value_num = 1621,      /* sequence_value_num  */
  YYSYMBOL_sequence_value_hybrid_num = 1622, /* sequence_value_hybrid_num  */
  YYSYMBOL_sequence_truncated_value_hybrid_num = 1623, /* sequence_truncated_value_hybrid_num  */
  YYSYMBOL_ulonglong_num = 1624,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1625,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1626,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1627,                 /* dec_num  */
  YYSYMBOL_choice = 1628,                  /* choice  */
  YYSYMBOL_bool = 1629,                    /* bool  */
  YYSYMBOL_procedure_clause = 1630,        /* procedure_clause  */
  YYSYMBOL_1631_171 = 1631,                /* $@171  */
  YYSYMBOL_procedure_list = 1632,          /* procedure_list  */
  YYSYMBOL_procedure_list2 = 1633,         /* procedure_list2  */
  YYSYMBOL_procedure_item = 1634,          /* procedure_item  */
  YYSYMBOL_select_var_list_init = 1635,    /* select_var_list_init  */
  YYSYMBOL_1636_172 = 1636,                /* $@172  */
  YYSYMBOL_select_var_list = 1637,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1638,        /* select_var_ident  */
  YYSYMBOL_select_outvar = 1639,           /* select_outvar  */
  YYSYMBOL_into = 1640,                    /* into  */
  YYSYMBOL_into_destination = 1641,        /* into_destination  */
  YYSYMBOL_1642_173 = 1642,                /* $@173  */
  YYSYMBOL_1643_174 = 1643,                /* $@174  */
  YYSYMBOL_do = 1644,                      /* do  */
  YYSYMBOL_1645_175 = 1645,                /* $@175  */
  YYSYMBOL_drop = 1646,                    /* drop  */
  YYSYMBOL_1647_176 = 1647,                /* $@176  */
  YYSYMBOL_1648_177 = 1648,                /* $@177  */
  YYSYMBOL_1649_178 = 1649,                /* $@178  */
  YYSYMBOL_1650_179 = 1650,                /* $@179  */
  YYSYMBOL_table_list = 1651,              /* table_list  */
  YYSYMBOL_table_name = 1652,              /* table_name  */
  YYSYMBOL_table_name_with_opt_use_partition = 1653, /* table_name_with_opt_use_partition  */
  YYSYMBOL_table_alias_ref_list = 1654,    /* table_alias_ref_list  */
  YYSYMBOL_table_alias_ref = 1655,         /* table_alias_ref  */
  YYSYMBOL_opt_if_exists_table_element = 1656, /* opt_if_exists_table_element  */
  YYSYMBOL_opt_if_exists = 1657,           /* opt_if_exists  */
  YYSYMBOL_opt_temporary = 1658,           /* opt_temporary  */
  YYSYMBOL_insert = 1659,                  /* insert  */
  YYSYMBOL_1660_180 = 1660,                /* $@180  */
  YYSYMBOL_1661_181 = 1661,                /* $@181  */
  YYSYMBOL_replace = 1662,                 /* replace  */
  YYSYMBOL_1663_182 = 1663,                /* $@182  */
  YYSYMBOL_1664_183 = 1664,                /* $@183  */
  YYSYMBOL_insert_start = 1665,            /* insert_start  */
  YYSYMBOL_stmt_end = 1666,                /* stmt_end  */
  YYSYMBOL_insert_lock_option = 1667,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1668,     /* replace_lock_option  */
  YYSYMBOL_insert_replace_option = 1669,   /* insert_replace_option  */
  YYSYMBOL_opt_into = 1670,                /* opt_into  */
  YYSYMBOL_insert_table = 1671,            /* insert_table  */
  YYSYMBOL_1672_184 = 1672,                /* $@184  */
  YYSYMBOL_insert_field_spec = 1673,       /* insert_field_spec  */
  YYSYMBOL_1674_185 = 1674,                /* $@185  */
  YYSYMBOL_insert_field_list = 1675,       /* insert_field_list  */
  YYSYMBOL_opt_fields = 1676,              /* opt_fields  */
  YYSYMBOL_fields = 1677,                  /* fields  */
  YYSYMBOL_insert_values = 1678,           /* insert_values  */
  YYSYMBOL_values_list = 1679,             /* values_list  */
  YYSYMBOL_ident_eq_list = 1680,           /* ident_eq_list  */
  YYSYMBOL_ident_eq_value = 1681,          /* ident_eq_value  */
  YYSYMBOL_equal = 1682,                   /* equal  */
  YYSYMBOL_opt_equal = 1683,               /* opt_equal  */
  YYSYMBOL_opt_with = 1684,                /* opt_with  */
  YYSYMBOL_opt_by = 1685,                  /* opt_by  */
  YYSYMBOL_no_braces = 1686,               /* no_braces  */
  YYSYMBOL_1687_186 = 1687,                /* $@186  */
  YYSYMBOL_no_braces_with_names = 1688,    /* no_braces_with_names  */
  YYSYMBOL_1689_187 = 1689,                /* $@187  */
  YYSYMBOL_opt_values = 1690,              /* opt_values  */
  YYSYMBOL_opt_values_with_names = 1691,   /* opt_values_with_names  */
  YYSYMBOL_values = 1692,                  /* values  */
  YYSYMBOL_values_with_names = 1693,       /* values_with_names  */
  YYSYMBOL_expr_or_ignore = 1694,          /* expr_or_ignore  */
  YYSYMBOL_expr_or_ignore_or_default = 1695, /* expr_or_ignore_or_default  */
  YYSYMBOL_opt_insert_update = 1696,       /* opt_insert_update  */
  YYSYMBOL_1697_188 = 1697,                /* $@188  */
  YYSYMBOL_1698_189 = 1698,                /* $@189  */
  YYSYMBOL_update_table_list = 1699,       /* update_table_list  */
  YYSYMBOL_update = 1700,                  /* update  */
  YYSYMBOL_1701_190 = 1701,                /* $@190  */
  YYSYMBOL_1702_191 = 1702,                /* $@191  */
  YYSYMBOL_1703_192 = 1703,                /* $@192  */
  YYSYMBOL_update_list = 1704,             /* update_list  */
  YYSYMBOL_update_elem = 1705,             /* update_elem  */
  YYSYMBOL_insert_update_list = 1706,      /* insert_update_list  */
  YYSYMBOL_insert_update_elem = 1707,      /* insert_update_elem  */
  YYSYMBOL_opt_low_priority = 1708,        /* opt_low_priority  */
  YYSYMBOL_delete = 1709,                  /* delete  */
  YYSYMBOL_1710_193 = 1710,                /* $@193  */
  YYSYMBOL_opt_delete_system_time = 1711,  /* opt_delete_system_time  */
  YYSYMBOL_delete_part2 = 1712,            /* delete_part2  */
  YYSYMBOL_1713_194 = 1713,                /* $@194  */
  YYSYMBOL_delete_single_table = 1714,     /* delete_single_table  */
  YYSYMBOL_delete_single_table_for_period = 1715, /* delete_single_table_for_period  */
  YYSYMBOL_single_multi = 1716,            /* single_multi  */
  YYSYMBOL_1717_195 = 1717,                /* $@195  */
  YYSYMBOL_1718_196 = 1718,                /* $@196  */
  YYSYMBOL_1719_197 = 1719,                /* $@197  */
  YYSYMBOL_1720_198 = 1720,                /* $@198  */
  YYSYMBOL_1721_199 = 1721,                /* $@199  */
  YYSYMBOL_opt_returning = 1722,           /* opt_returning  */
  YYSYMBOL_1723_200 = 1723,                /* $@200  */
  YYSYMBOL_opt_wild = 1724,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1725,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1726,       /* opt_delete_option  */
  YYSYMBOL_truncate = 1727,                /* truncate  */
  YYSYMBOL_1728_201 = 1728,                /* $@201  */
  YYSYMBOL_1729_202 = 1729,                /* $@202  */
  YYSYMBOL_opt_table_sym = 1730,           /* opt_table_sym  */
  YYSYMBOL_opt_profile_defs = 1731,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1732,            /* profile_defs  */
  YYSYMBOL_profile_def = 1733,             /* profile_def  */
  YYSYMBOL_opt_profile_args = 1734,        /* opt_profile_args  */
  YYSYMBOL_show = 1735,                    /* show  */
  YYSYMBOL_1736_203 = 1736,                /* $@203  */
  YYSYMBOL_show_param = 1737,              /* show_param  */
  YYSYMBOL_1738_204 = 1738,                /* $@204  */
  YYSYMBOL_1739_205 = 1739,                /* $@205  */
  YYSYMBOL_show_engine_param = 1740,       /* show_engine_param  */
  YYSYMBOL_master_or_binary = 1741,        /* master_or_binary  */
  YYSYMBOL_opt_storage = 1742,             /* opt_storage  */
  YYSYMBOL_opt_db = 1743,                  /* opt_db  */
  YYSYMBOL_opt_full = 1744,                /* opt_full  */
  YYSYMBOL_from_or_in = 1745,              /* from_or_in  */
  YYSYMBOL_binlog_in = 1746,               /* binlog_in  */
  YYSYMBOL_binlog_from = 1747,             /* binlog_from  */
  YYSYMBOL_wild_and_where = 1748,          /* wild_and_where  */
  YYSYMBOL_describe = 1749,                /* describe  */
  YYSYMBOL_1750_206 = 1750,                /* $@206  */
  YYSYMBOL_1751_207 = 1751,                /* $@207  */
  YYSYMBOL_explainable_command = 1752,     /* explainable_command  */
  YYSYMBOL_describe_command = 1753,        /* describe_command  */
  YYSYMBOL_analyze_stmt_command = 1754,    /* analyze_stmt_command  */
  YYSYMBOL_opt_extended_describe = 1755,   /* opt_extended_describe  */
  YYSYMBOL_opt_format_json = 1756,         /* opt_format_json  */
  YYSYMBOL_opt_describe_column = 1757,     /* opt_describe_column  */
  YYSYMBOL_explain_for_connection = 1758,  /* explain_for_connection  */
  YYSYMBOL_flush = 1759,                   /* flush  */
  YYSYMBOL_1760_208 = 1760,                /* $@208  */
  YYSYMBOL_flush_options = 1761,           /* flush_options  */
  YYSYMBOL_1762_209 = 1762,                /* $@209  */
  YYSYMBOL_opt_flush_lock = 1763,          /* opt_flush_lock  */
  YYSYMBOL_flush_lock = 1764,              /* flush_lock  */
  YYSYMBOL_1765_210 = 1765,                /* $@210  */
  YYSYMBOL_flush_options_list = 1766,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1767,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1768,          /* opt_table_list  */
  YYSYMBOL_backup = 1769,                  /* backup  */
  YYSYMBOL_backup_statements = 1770,       /* backup_statements  */
  YYSYMBOL_1771_211 = 1771,                /* $@211  */
  YYSYMBOL_opt_delete_gtid_domain = 1772,  /* opt_delete_gtid_domain  */
  YYSYMBOL_delete_domain_id_list = 1773,   /* delete_domain_id_list  */
  YYSYMBOL_delete_domain_id = 1774,        /* delete_domain_id  */
  YYSYMBOL_optional_flush_tables_arguments = 1775, /* optional_flush_tables_arguments  */
  YYSYMBOL_reset = 1776,                   /* reset  */
  YYSYMBOL_1777_212 = 1777,                /* $@212  */
  YYSYMBOL_reset_options = 1778,           /* reset_options  */
  YYSYMBOL_reset_option = 1779,            /* reset_option  */
  YYSYMBOL_1780_213 = 1780,                /* $@213  */
  YYSYMBOL_1781_214 = 1781,                /* $@214  */
  YYSYMBOL_slave_reset_options = 1782,     /* slave_reset_options  */
  YYSYMBOL_master_reset_options = 1783,    /* master_reset_options  */
  YYSYMBOL_purge = 1784,                   /* purge  */
  YYSYMBOL_1785_215 = 1785,                /* $@215  */
  YYSYMBOL_kill = 1786,                    /* kill  */
  YYSYMBOL_1787_216 = 1787,                /* $@216  */
  YYSYMBOL_kill_type = 1788,               /* kill_type  */
  YYSYMBOL_kill_option = 1789,             /* kill_option  */
  YYSYMBOL_opt_connection = 1790,          /* opt_connection  */
  YYSYMBOL_kill_expr = 1791,               /* kill_expr  */
  YYSYMBOL_shutdown = 1792,                /* shutdown  */
  YYSYMBOL_1793_217 = 1793,                /* $@217  */
  YYSYMBOL_shutdown_option = 1794,         /* shutdown_option  */
  YYSYMBOL_use = 1795,                     /* use  */
  YYSYMBOL_load = 1796,                    /* load  */
  YYSYMBOL_1797_218 = 1797,                /* $@218  */
  YYSYMBOL_1798_219 = 1798,                /* $@219  */
  YYSYMBOL_1799_220 = 1799,                /* $@220  */
  YYSYMBOL_1800_221 = 1800,                /* $@221  */
  YYSYMBOL_data_or_xml = 1801,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1802,               /* opt_local  */
  YYSYMBOL_load_data_lock = 1803,          /* load_data_lock  */
  YYSYMBOL_opt_duplicate = 1804,           /* opt_duplicate  */
  YYSYMBOL_opt_field_term = 1805,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1806,         /* field_term_list  */
  YYSYMBOL_field_term = 1807,              /* field_term  */
  YYSYMBOL_opt_line_term = 1808,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1809,          /* line_term_list  */
  YYSYMBOL_line_term = 1810,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1811, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1812,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1813,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1814,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1815,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1816,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1817,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1818,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1819,      /* load_data_set_elem  */
  YYSYMBOL_text_literal = 1820,            /* text_literal  */
  YYSYMBOL_text_string = 1821,             /* text_string  */
  YYSYMBOL_hex_or_bin_String = 1822,       /* hex_or_bin_String  */
  YYSYMBOL_param_marker = 1823,            /* param_marker  */
  YYSYMBOL_signed_literal = 1824,          /* signed_literal  */
  YYSYMBOL_literal = 1825,                 /* literal  */
  YYSYMBOL_NUM_literal = 1826,             /* NUM_literal  */
  YYSYMBOL_temporal_literal = 1827,        /* temporal_literal  */
  YYSYMBOL_with_clause = 1828,             /* with_clause  */
  YYSYMBOL_1829_222 = 1829,                /* $@222  */
  YYSYMBOL_opt_recursive = 1830,           /* opt_recursive  */
  YYSYMBOL_with_list = 1831,               /* with_list  */
  YYSYMBOL_with_column_list = 1832,        /* with_column_list  */
  YYSYMBOL_with_list_element = 1833,       /* with_list_element  */
  YYSYMBOL_opt_cycle = 1834,               /* opt_cycle  */
  YYSYMBOL_1835_223 = 1835,                /* $@223  */
  YYSYMBOL_opt_column_name_list = 1836,    /* opt_column_name_list  */
  YYSYMBOL_ident_sys_alloc = 1837,         /* ident_sys_alloc  */
  YYSYMBOL_comma_separated_ident_list = 1838, /* comma_separated_ident_list  */
  YYSYMBOL_with_element_head = 1839,       /* with_element_head  */
  YYSYMBOL_insert_ident = 1840,            /* insert_ident  */
  YYSYMBOL_table_wild = 1841,              /* table_wild  */
  YYSYMBOL_select_sublist_qualified_asterisk = 1842, /* select_sublist_qualified_asterisk  */
  YYSYMBOL_order_ident = 1843,             /* order_ident  */
  YYSYMBOL_simple_ident = 1844,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1845,    /* simple_ident_nospvar  */
  YYSYMBOL_field_ident = 1846,             /* field_ident  */
  YYSYMBOL_table_ident = 1847,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1848,    /* table_ident_opt_wild  */
  YYSYMBOL_table_ident_nodb = 1849,        /* table_ident_nodb  */
  YYSYMBOL_IDENT_cli = 1850,               /* IDENT_cli  */
  YYSYMBOL_ident_cli = 1851,               /* ident_cli  */
  YYSYMBOL_IDENT_sys = 1852,               /* IDENT_sys  */
  YYSYMBOL_ident_cli_func = 1853,          /* ident_cli_func  */
  YYSYMBOL_ident_func = 1854,              /* ident_func  */
  YYSYMBOL_TEXT_STRING_sys = 1855,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1856,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1857,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_ident_table_alias = 1858,       /* ident_table_alias  */
  YYSYMBOL_ident_cli_set_usual_case = 1859, /* ident_cli_set_usual_case  */
  YYSYMBOL_ident_sysvar_name = 1860,       /* ident_sysvar_name  */
  YYSYMBOL_ident = 1861,                   /* ident  */
  YYSYMBOL_label_ident = 1862,             /* label_ident  */
  YYSYMBOL_ident_or_text = 1863,           /* ident_or_text  */
  YYSYMBOL_user_maybe_role = 1864,         /* user_maybe_role  */
  YYSYMBOL_user_or_role = 1865,            /* user_or_role  */
  YYSYMBOL_user = 1866,                    /* user  */
  YYSYMBOL_keyword_table_alias = 1867,     /* keyword_table_alias  */
  YYSYMBOL_keyword_ident = 1868,           /* keyword_ident  */
  YYSYMBOL_keyword_sysvar_name = 1869,     /* keyword_sysvar_name  */
  YYSYMBOL_keyword_set_usual_case = 1870,  /* keyword_set_usual_case  */
  YYSYMBOL_non_reserved_keyword_udt = 1871, /* non_reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_var_not_label = 1872, /* keyword_sp_var_not_label  */
  YYSYMBOL_keyword_sp_head = 1873,         /* keyword_sp_head  */
  YYSYMBOL_keyword_verb_clause = 1874,     /* keyword_verb_clause  */
  YYSYMBOL_keyword_set_special_case = 1875, /* keyword_set_special_case  */
  YYSYMBOL_keyword_sysvar_type = 1876,     /* keyword_sysvar_type  */
  YYSYMBOL_keyword_data_type = 1877,       /* keyword_data_type  */
  YYSYMBOL_keyword_cast_type = 1878,       /* keyword_cast_type  */
  YYSYMBOL_keyword_func_sp_var_and_label = 1879, /* keyword_func_sp_var_and_label  */
  YYSYMBOL_keyword_func_sp_var_not_label = 1880, /* keyword_func_sp_var_not_label  */
  YYSYMBOL_keyword_sp_var_and_label = 1881, /* keyword_sp_var_and_label  */
  YYSYMBOL_reserved_keyword_udt_not_param_type = 1882, /* reserved_keyword_udt_not_param_type  */
  YYSYMBOL_set = 1883,                     /* set  */
  YYSYMBOL_1884_224 = 1884,                /* $@224  */
  YYSYMBOL_set_param = 1885,               /* set_param  */
  YYSYMBOL_1886_225 = 1886,                /* $@225  */
  YYSYMBOL_1887_226 = 1887,                /* $@226  */
  YYSYMBOL_1888_227 = 1888,                /* $@227  */
  YYSYMBOL_set_stmt_option_list = 1889,    /* set_stmt_option_list  */
  YYSYMBOL_start_option_value_list_following_option_type = 1890, /* start_option_value_list_following_option_type  */
  YYSYMBOL_1891_228 = 1891,                /* $@228  */
  YYSYMBOL_option_value_list = 1892,       /* option_value_list  */
  YYSYMBOL_option_value = 1893,            /* option_value  */
  YYSYMBOL_1894_229 = 1894,                /* $@229  */
  YYSYMBOL_option_type = 1895,             /* option_type  */
  YYSYMBOL_opt_var_type = 1896,            /* opt_var_type  */
  YYSYMBOL_opt_var_ident_type = 1897,      /* opt_var_ident_type  */
  YYSYMBOL_set_stmt_option = 1898,         /* set_stmt_option  */
  YYSYMBOL_1899_230 = 1899,                /* $@230  */
  YYSYMBOL_1900_231 = 1900,                /* $@231  */
  YYSYMBOL_1901_232 = 1901,                /* $@232  */
  YYSYMBOL_option_value_following_option_type = 1902, /* option_value_following_option_type  */
  YYSYMBOL_1903_233 = 1903,                /* $@233  */
  YYSYMBOL_1904_234 = 1904,                /* $@234  */
  YYSYMBOL_1905_235 = 1905,                /* $@235  */
  YYSYMBOL_option_value_no_option_type = 1906, /* option_value_no_option_type  */
  YYSYMBOL_1907_236 = 1907,                /* $@236  */
  YYSYMBOL_1908_237 = 1908,                /* $@237  */
  YYSYMBOL_1909_238 = 1909,                /* $@238  */
  YYSYMBOL_1910_239 = 1910,                /* $@239  */
  YYSYMBOL_1911_240 = 1911,                /* $@240  */
  YYSYMBOL_1912_241 = 1912,                /* $@241  */
  YYSYMBOL_1913_242 = 1913,                /* $@242  */
  YYSYMBOL_1914_243 = 1914,                /* $@243  */
  YYSYMBOL_1915_244 = 1915,                /* $@244  */
  YYSYMBOL_1916_245 = 1916,                /* $@245  */
  YYSYMBOL_transaction_characteristics = 1917, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1918, /* transaction_access_mode  */
  YYSYMBOL_isolation_level = 1919,         /* isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1920, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1921,         /* isolation_types  */
  YYSYMBOL_text_or_password = 1922,        /* text_or_password  */
  YYSYMBOL_set_expr_or_default = 1923,     /* set_expr_or_default  */
  YYSYMBOL_set_expr_misc = 1924,           /* set_expr_misc  */
  YYSYMBOL_lock = 1925,                    /* lock  */
  YYSYMBOL_1926_246 = 1926,                /* $@246  */
  YYSYMBOL_opt_lock_wait_timeout = 1927,   /* opt_lock_wait_timeout  */
  YYSYMBOL_table_or_tables = 1928,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1929,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1930,              /* table_lock  */
  YYSYMBOL_lock_option = 1931,             /* lock_option  */
  YYSYMBOL_unlock = 1932,                  /* unlock  */
  YYSYMBOL_1933_247 = 1933,                /* $@247  */
  YYSYMBOL_handler = 1934,                 /* handler  */
  YYSYMBOL_1935_248 = 1935,                /* $@248  */
  YYSYMBOL_handler_tail = 1936,            /* handler_tail  */
  YYSYMBOL_1937_249 = 1937,                /* $@249  */
  YYSYMBOL_handler_read_or_scan = 1938,    /* handler_read_or_scan  */
  YYSYMBOL_handler_scan_function = 1939,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1940,   /* handler_rkey_function  */
  YYSYMBOL_1941_250 = 1941,                /* $@250  */
  YYSYMBOL_handler_rkey_mode = 1942,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1943,                  /* revoke  */
  YYSYMBOL_revoke_command = 1944,          /* revoke_command  */
  YYSYMBOL_admin_option_for_role = 1945,   /* admin_option_for_role  */
  YYSYMBOL_grant = 1946,                   /* grant  */
  YYSYMBOL_grant_command = 1947,           /* grant_command  */
  YYSYMBOL_opt_with_admin = 1948,          /* opt_with_admin  */
  YYSYMBOL_opt_with_admin_option = 1949,   /* opt_with_admin_option  */
  YYSYMBOL_role_list = 1950,               /* role_list  */
  YYSYMBOL_current_role = 1951,            /* current_role  */
  YYSYMBOL_role_name = 1952,               /* role_name  */
  YYSYMBOL_grant_role = 1953,              /* grant_role  */
  YYSYMBOL_opt_table = 1954,               /* opt_table  */
  YYSYMBOL_grant_privileges = 1955,        /* grant_privileges  */
  YYSYMBOL_opt_privileges = 1956,          /* opt_privileges  */
  YYSYMBOL_object_privilege_list = 1957,   /* object_privilege_list  */
  YYSYMBOL_column_list_privilege = 1958,   /* column_list_privilege  */
  YYSYMBOL_column_privilege = 1959,        /* column_privilege  */
  YYSYMBOL_object_privilege = 1960,        /* object_privilege  */
  YYSYMBOL_opt_and = 1961,                 /* opt_and  */
  YYSYMBOL_require_list = 1962,            /* require_list  */
  YYSYMBOL_require_list_element = 1963,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1964,             /* grant_ident  */
  YYSYMBOL_user_list = 1965,               /* user_list  */
  YYSYMBOL_grant_list = 1966,              /* grant_list  */
  YYSYMBOL_user_and_role_list = 1967,      /* user_and_role_list  */
  YYSYMBOL_via_or_with = 1968,             /* via_or_with  */
  YYSYMBOL_using_or_as = 1969,             /* using_or_as  */
  YYSYMBOL_grant_user = 1970,              /* grant_user  */
  YYSYMBOL_auth_expression = 1971,         /* auth_expression  */
  YYSYMBOL_auth_token = 1972,              /* auth_token  */
  YYSYMBOL_opt_auth_str = 1973,            /* opt_auth_str  */
  YYSYMBOL_opt_require_clause = 1974,      /* opt_require_clause  */
  YYSYMBOL_resource_option = 1975,         /* resource_option  */
  YYSYMBOL_resource_option_list = 1976,    /* resource_option_list  */
  YYSYMBOL_opt_resource_options = 1977,    /* opt_resource_options  */
  YYSYMBOL_opt_grant_options = 1978,       /* opt_grant_options  */
  YYSYMBOL_opt_grant_option = 1979,        /* opt_grant_option  */
  YYSYMBOL_grant_option_list = 1980,       /* grant_option_list  */
  YYSYMBOL_grant_option = 1981,            /* grant_option  */
  YYSYMBOL_begin_stmt_mariadb = 1982,      /* begin_stmt_mariadb  */
  YYSYMBOL_1983_251 = 1983,                /* $@251  */
  YYSYMBOL_compound_statement = 1984,      /* compound_statement  */
  YYSYMBOL_opt_not = 1985,                 /* opt_not  */
  YYSYMBOL_opt_work = 1986,                /* opt_work  */
  YYSYMBOL_opt_chain = 1987,               /* opt_chain  */
  YYSYMBOL_opt_release = 1988,             /* opt_release  */
  YYSYMBOL_commit = 1989,                  /* commit  */
  YYSYMBOL_rollback = 1990,                /* rollback  */
  YYSYMBOL_savepoint = 1991,               /* savepoint  */
  YYSYMBOL_release = 1992,                 /* release  */
  YYSYMBOL_unit_type_decl = 1993,          /* unit_type_decl  */
  YYSYMBOL_union_option = 1994,            /* union_option  */
  YYSYMBOL_query_expression_option = 1995, /* query_expression_option  */
  YYSYMBOL_definer_opt = 1996,             /* definer_opt  */
  YYSYMBOL_no_definer = 1997,              /* no_definer  */
  YYSYMBOL_definer = 1998,                 /* definer  */
  YYSYMBOL_view_algorithm = 1999,          /* view_algorithm  */
  YYSYMBOL_opt_view_suid = 2000,           /* opt_view_suid  */
  YYSYMBOL_view_suid = 2001,               /* view_suid  */
  YYSYMBOL_view_list_opt = 2002,           /* view_list_opt  */
  YYSYMBOL_view_list = 2003,               /* view_list  */
  YYSYMBOL_view_select = 2004,             /* view_select  */
  YYSYMBOL_2005_252 = 2005,                /* $@252  */
  YYSYMBOL_view_check_option = 2006,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 2007,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 2008, /* trigger_follows_precedes_clause  */
  YYSYMBOL_opt_on_update_cols = 2009,      /* opt_on_update_cols  */
  YYSYMBOL_on_update_cols = 2010,          /* on_update_cols  */
  YYSYMBOL_trigger_tail = 2011,            /* trigger_tail  */
  YYSYMBOL_2012_253 = 2012,                /* $@253  */
  YYSYMBOL_2013_254 = 2013,                /* $@254  */
  YYSYMBOL_2014_255 = 2014,                /* $@255  */
  YYSYMBOL_2015_256 = 2015,                /* $@256  */
  YYSYMBOL_2016_257 = 2016,                /* $@257  */
  YYSYMBOL_create_package_chistic = 2017,  /* create_package_chistic  */
  YYSYMBOL_create_package_chistics = 2018, /* create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics = 2019, /* opt_create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics_init = 2020, /* opt_create_package_chistics_init  */
  YYSYMBOL_2021_258 = 2021,                /* $@258  */
  YYSYMBOL_xa = 2022,                      /* xa  */
  YYSYMBOL_opt_format_xid = 2023,          /* opt_format_xid  */
  YYSYMBOL_xid = 2024,                     /* xid  */
  YYSYMBOL_begin_or_start = 2025,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 2026,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 2027,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 2028,             /* opt_suspend  */
  YYSYMBOL_2029_259 = 2029,                /* $@259  */
  YYSYMBOL_opt_migrate = 2030,             /* opt_migrate  */
  YYSYMBOL_install = 2031,                 /* install  */
  YYSYMBOL_uninstall = 2032,               /* uninstall  */
  YYSYMBOL_keep_gcc_happy = 2033,          /* keep_gcc_happy  */
  YYSYMBOL__empty = 2034,                  /* _empty  */
  YYSYMBOL_statement = 2035,               /* statement  */
  YYSYMBOL_sp_statement = 2036,            /* sp_statement  */
  YYSYMBOL_2037_260 = 2037,                /* $@260  */
  YYSYMBOL_2038_261 = 2038,                /* $@261  */
  YYSYMBOL_2039_262 = 2039,                /* $@262  */
  YYSYMBOL_sp_if_then_statements = 2040,   /* sp_if_then_statements  */
  YYSYMBOL_sp_case_then_statements = 2041, /* sp_case_then_statements  */
  YYSYMBOL_sp_parameters = 2042,           /* sp_parameters  */
  YYSYMBOL_sf_parameters = 2043,           /* sf_parameters  */
  YYSYMBOL_sf_returned_type_clause = 2044, /* sf_returned_type_clause  */
  YYSYMBOL_2045_263 = 2045,                /* $@263  */
  YYSYMBOL_sf_return_type = 2046,          /* sf_return_type  */
  YYSYMBOL_package_implementation_item_declaration = 2047, /* package_implementation_item_declaration  */
  YYSYMBOL_sp_package_function_body = 2048, /* sp_package_function_body  */
  YYSYMBOL_sp_package_procedure_body = 2049, /* sp_package_procedure_body  */
  YYSYMBOL_reserved_keyword_udt = 2050,    /* reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_block_section = 2051, /* keyword_sp_block_section  */
  YYSYMBOL_keyword_label = 2052,           /* keyword_label  */
  YYSYMBOL_keyword_sp_decl = 2053,         /* keyword_sp_decl  */
  YYSYMBOL_opt_truncate_table_storage_clause = 2054, /* opt_truncate_table_storage_clause  */
  YYSYMBOL_ident_for_loop_index = 2055,    /* ident_for_loop_index  */
  YYSYMBOL_row_field_name = 2056,          /* row_field_name  */
  YYSYMBOL_while_body = 2057,              /* while_body  */
  YYSYMBOL_2058_264 = 2058,                /* $@264  */
  YYSYMBOL_for_loop_statements = 2059,     /* for_loop_statements  */
  YYSYMBOL_sp_control_label = 2060,        /* sp_control_label  */
  YYSYMBOL_sp_block_label = 2061,          /* sp_block_label  */
  YYSYMBOL_sp_opt_default = 2062,          /* sp_opt_default  */
  YYSYMBOL_sp_opt_nocopy = 2063,           /* sp_opt_nocopy  */
  YYSYMBOL_sp_opt_inout = 2064,            /* sp_opt_inout  */
  YYSYMBOL_sp_proc_stmts1_implicit_block = 2065, /* sp_proc_stmts1_implicit_block  */
  YYSYMBOL_2066_265 = 2066,                /* $@265  */
  YYSYMBOL_keyword_directly_assignable = 2067, /* keyword_directly_assignable  */
  YYSYMBOL_ident_directly_assignable = 2068, /* ident_directly_assignable  */
  YYSYMBOL_ident_cli_directly_assignable = 2069, /* ident_cli_directly_assignable  */
  YYSYMBOL_set_assign = 2070,              /* set_assign  */
  YYSYMBOL_2071_266 = 2071,                /* $@266  */
  YYSYMBOL_2072_267 = 2072,                /* $@267  */
  YYSYMBOL_2073_268 = 2073,                /* $@268  */
  YYSYMBOL_labels_declaration_oracle = 2074, /* labels_declaration_oracle  */
  YYSYMBOL_label_declaration_oracle = 2075, /* label_declaration_oracle  */
  YYSYMBOL_opt_exception_clause = 2076,    /* opt_exception_clause  */
  YYSYMBOL_exception_handlers = 2077,      /* exception_handlers  */
  YYSYMBOL_exception_handler = 2078,       /* exception_handler  */
  YYSYMBOL_2079_269 = 2079,                /* $@269  */
  YYSYMBOL_sp_no_param = 2080,             /* sp_no_param  */
  YYSYMBOL_opt_sp_parenthesized_fdparam_list = 2081, /* opt_sp_parenthesized_fdparam_list  */
  YYSYMBOL_opt_sp_parenthesized_pdparam_list = 2082, /* opt_sp_parenthesized_pdparam_list  */
  YYSYMBOL_opt_trailing_sp_name = 2083,    /* opt_trailing_sp_name  */
  YYSYMBOL_opt_package_routine_end_name = 2084, /* opt_package_routine_end_name  */
  YYSYMBOL_sp_tail_is = 2085,              /* sp_tail_is  */
  YYSYMBOL_sp_instr_addr = 2086,           /* sp_instr_addr  */
  YYSYMBOL_sp_body = 2087,                 /* sp_body  */
  YYSYMBOL_2088_270 = 2088,                /* $@270  */
  YYSYMBOL_2089_271 = 2089,                /* $@271  */
  YYSYMBOL_2090_272 = 2090,                /* $@272  */
  YYSYMBOL_package_implementation_declare_section_list = 2091, /* package_implementation_declare_section_list  */
  YYSYMBOL_package_implementation_declare_section = 2092, /* package_implementation_declare_section  */
  YYSYMBOL_package_implementation_executable_section = 2093, /* package_implementation_executable_section  */
  YYSYMBOL_package_implementation_declare_section_list1 = 2094, /* package_implementation_declare_section_list1  */
  YYSYMBOL_package_implementation_declare_section_list2 = 2095, /* package_implementation_declare_section_list2  */
  YYSYMBOL_package_specification_function = 2096, /* package_specification_function  */
  YYSYMBOL_2097_273 = 2097,                /* $@273  */
  YYSYMBOL_package_specification_procedure = 2098, /* package_specification_procedure  */
  YYSYMBOL_2099_274 = 2099,                /* $@274  */
  YYSYMBOL_package_implementation_routine_definition = 2100, /* package_implementation_routine_definition  */
  YYSYMBOL_package_implementation_function_body = 2101, /* package_implementation_function_body  */
  YYSYMBOL_2102_275 = 2102,                /* $@275  */
  YYSYMBOL_package_implementation_procedure_body = 2103, /* package_implementation_procedure_body  */
  YYSYMBOL_2104_276 = 2104,                /* $@276  */
  YYSYMBOL_opt_package_specification_element_list = 2105, /* opt_package_specification_element_list  */
  YYSYMBOL_package_specification_element_list = 2106, /* package_specification_element_list  */
  YYSYMBOL_package_specification_element = 2107, /* package_specification_element  */
  YYSYMBOL_sp_decl_variable_list_anchored = 2108, /* sp_decl_variable_list_anchored  */
  YYSYMBOL_sp_param_name_and_mode = 2109,  /* sp_param_name_and_mode  */
  YYSYMBOL_sp_param_init_vars = 2110,      /* sp_param_init_vars  */
  YYSYMBOL_sp_param_anchored = 2111,       /* sp_param_anchored  */
  YYSYMBOL_sf_c_chistics_and_body_standalone = 2112, /* sf_c_chistics_and_body_standalone  */
  YYSYMBOL_2113_277 = 2113,                /* $@277  */
  YYSYMBOL_sp_tail_standalone = 2114,      /* sp_tail_standalone  */
  YYSYMBOL_2115_278 = 2115,                /* $@278  */
  YYSYMBOL_2116_279 = 2116,                /* $@279  */
  YYSYMBOL_create_routine = 2117,          /* create_routine  */
  YYSYMBOL_2118_280 = 2118,                /* $@280  */
  YYSYMBOL_2119_281 = 2119,                /* $@281  */
  YYSYMBOL_2120_282 = 2120,                /* $@282  */
  YYSYMBOL_2121_283 = 2121,                /* $@283  */
  YYSYMBOL_2122_284 = 2122,                /* $@284  */
  YYSYMBOL_2123_285 = 2123,                /* $@285  */
  YYSYMBOL_opt_sp_decl_body_list = 2124,   /* opt_sp_decl_body_list  */
  YYSYMBOL_sp_decl_body_list = 2125,       /* sp_decl_body_list  */
  YYSYMBOL_2126_286 = 2126,                /* $@286  */
  YYSYMBOL_sp_decl_non_handler_list = 2127, /* sp_decl_non_handler_list  */
  YYSYMBOL_sp_decl_handler_list = 2128,    /* sp_decl_handler_list  */
  YYSYMBOL_opt_sp_decl_handler_list = 2129, /* opt_sp_decl_handler_list  */
  YYSYMBOL_sp_decl_non_handler = 2130,     /* sp_decl_non_handler  */
  YYSYMBOL_2131_287 = 2131,                /* $@287  */
  YYSYMBOL_sp_proc_stmt = 2132,            /* sp_proc_stmt  */
  YYSYMBOL_sp_labelable_stmt = 2133,       /* sp_labelable_stmt  */
  YYSYMBOL_sp_proc_stmt_compound_ok = 2134, /* sp_proc_stmt_compound_ok  */
  YYSYMBOL_sp_labeled_block = 2135,        /* sp_labeled_block  */
  YYSYMBOL_2136_288 = 2136,                /* $@288  */
  YYSYMBOL_2137_289 = 2137,                /* $@289  */
  YYSYMBOL_2138_290 = 2138,                /* $@290  */
  YYSYMBOL_opt_not_atomic = 2139,          /* opt_not_atomic  */
  YYSYMBOL_sp_unlabeled_block = 2140,      /* sp_unlabeled_block  */
  YYSYMBOL_2141_291 = 2141,                /* $@291  */
  YYSYMBOL_2142_292 = 2142,                /* $@292  */
  YYSYMBOL_2143_293 = 2143,                /* $@293  */
  YYSYMBOL_sp_block_statements_and_exceptions = 2144, /* sp_block_statements_and_exceptions  */
  YYSYMBOL_2145_294 = 2145                 /* $@294  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Second part of user prologue.  */
#line 345 "/home/buildbot/git/sql/sql_yacc.yy"

/* avoid unintentional %union size increases, it's what a parser stack made of */
static_assert(sizeof(YYSTYPE) == sizeof(void*)*2+8, "%union size check");
bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 2432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"


#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  765
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   110063

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  797
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1349
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3908
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6545

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1030


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   792,     2,     2,     2,   780,   775,     2,
     788,   789,   778,   777,   791,   776,   796,   779,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,   795,
     773,   771,   772,     2,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   781,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   793,   774,   794,   782,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     4,     5,
       6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   783,   784,   785,   786,   787,
     790
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  2035,  2035,  2045,  2044,  2069,  2076,  2078,  2082,  2083,
    2084,  2089,  2090,  2091,  2092,  2093,  2094,  2095,  2096,  2097,
    2098,  2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,  2123,  2124,  2125,  2126,  2127,
    2128,  2129,  2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,
    2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,  2146,  2147,
    2148,  2152,  2159,  2160,  2165,  2164,  2179,  2185,  2191,  2184,
    2200,  2202,  2201,  2211,  2216,  2228,  2227,  2244,  2243,  2253,
    2254,  2258,  2262,  2266,  2270,  2274,  2278,  2288,  2293,  2297,
    2301,  2305,  2309,  2313,  2318,  2322,  2327,  2355,  2359,  2363,
    2368,  2371,  2373,  2374,  2378,  2384,  2386,  2387,  2391,  2397,
    2399,  2400,  2404,  2411,  2415,  2430,  2434,  2440,  2446,  2452,
    2458,  2466,  2470,  2474,  2486,  2489,  2494,  2516,  2528,  2515,
    2551,  2550,  2608,  2615,  2607,  2627,  2634,  2626,  2647,  2653,
    2646,  2665,  2671,  2664,  2684,  2683,  2697,  2695,  2711,  2709,
    2723,  2722,  2733,  2732,  2742,  2749,  2756,  2756,  2759,  2763,
    2764,  2768,  2769,  2773,  2785,  2796,  2803,  2810,  2819,  2826,
    2833,  2841,  2849,  2857,  2865,  2873,  2881,  2893,  2910,  2910,
    2914,  2913,  2925,  2926,  2930,  2943,  2956,  2969,  2982,  2995,
    3008,  3020,  3041,  3056,  3055,  3088,  3087,  3094,  3101,  3102,
    3108,  3114,  3124,  3130,  3136,  3138,  3145,  3146,  3150,  3160,
    3161,  3169,  3169,  3211,  3220,  3221,  3226,  3227,  3228,  3229,
    3233,  3234,  3238,  3239,  3243,  3248,  3257,  3262,  3270,  3271,
    3275,  3276,  3281,  3283,  3285,  3287,  3289,  3291,  3293,  3299,
    3300,  3304,  3305,  3310,  3309,  3320,  3319,  3330,  3329,  3342,
    3345,  3344,  3351,  3353,  3357,  3361,  3370,  3375,  3375,  3385,
    3386,  3390,  3391,  3395,  3403,  3411,  3413,  3417,  3418,  3422,
    3423,  3424,  3429,  3428,  3440,  3448,  3456,  3460,  3461,  3465,
    3466,  3471,  3477,  3483,  3493,  3501,  3506,  3514,  3519,  3524,
    3528,  3535,  3545,  3550,  3558,  3563,  3572,  3570,  3585,  3595,
    3600,  3599,  3613,  3615,  3620,  3630,  3629,  3658,  3659,  3660,
    3661,  3666,  3668,  3673,  3688,  3696,  3700,  3720,  3721,  3725,
    3729,  3735,  3741,  3747,  3753,  3763,  3768,  3776,  3784,  3789,
    3795,  3796,  3802,  3805,  3809,  3817,  3834,  3836,  3854,  3860,
    3862,  3864,  3866,  3868,  3870,  3872,  3874,  3876,  3878,  3880,
    3882,  3884,  3889,  3898,  3897,  3918,  3919,  3924,  3930,  3939,
    3946,  3955,  3964,  3969,  3983,  3985,  3987,  3996,  4001,  4008,
    4017,  4026,  4028,  4030,  4032,  4034,  4036,  4038,  4040,  4042,
    4044,  4046,  4048,  4050,  4052,  4057,  4058,  4066,  4078,  4094,
    4093,  4104,  4104,  4126,  4127,  4132,  4131,  4139,  4150,  4155,
    4162,  4161,  4169,  4168,  4178,  4183,  4189,  4188,  4195,  4194,
    4204,  4212,  4220,  4229,  4229,  4262,  4272,  4271,  4302,  4301,
    4331,  4337,  4345,  4346,  4350,  4351,  4352,  4356,  4364,  4369,
    4374,  4382,  4383,  4391,  4409,  4425,  4445,  4450,  4444,  4462,
    4464,  4465,  4466,  4471,  4470,  4541,  4540,  4547,  4552,  4553,
    4557,  4558,  4563,  4562,  4578,  4577,  4593,  4603,  4607,  4608,
    4613,  4614,  4618,  4626,  4631,  4638,  4647,  4661,  4669,  4678,
    4677,  4685,  4684,  4692,  4697,  4704,  4691,  4714,  4713,  4724,
    4723,  4733,  4732,  4742,  4749,  4741,  4764,  4763,  4775,  4777,
    4782,  4784,  4786,  4792,  4791,  4794,  4795,  4809,  4810,  4814,
    4815,  4825,  4830,  4841,  4878,  4879,  4884,  4883,  4899,  4914,
    4913,  4935,  4934,  4940,  4948,  4947,  4950,  4952,  4955,  4954,
    4963,  4966,  4965,  4974,  4975,  4981,  4982,  4999,  5000,  5004,
    5005,  5009,  5023,  5033,  5044,  5053,  5054,  5067,  5069,  5068,
    5073,  5071,  5082,  5083,  5087,  5101,  5113,  5114,  5127,  5136,
    5158,  5159,  5162,  5164,  5169,  5168,  5192,  5204,  5220,  5219,
    5234,  5233,  5247,  5254,  5261,  5281,  5299,  5303,  5330,  5342,
    5343,  5348,  5357,  5347,  5382,  5383,  5387,  5398,  5417,  5430,
    5456,  5457,  5462,  5461,  5498,  5508,  5509,  5513,  5514,  5518,
    5519,  5527,  5528,  5532,  5533,  5537,  5539,  5545,  5551,  5553,
    5555,  5557,  5559,  5561,  5566,  5567,  5567,  5576,  5588,  5591,
    5599,  5602,  5612,  5613,  5617,  5618,  5622,  5623,  5627,  5628,
    5629,  5638,  5641,  5648,  5652,  5659,  5663,  5669,  5671,  5675,
    5676,  5680,  5681,  5682,  5686,  5701,  5706,  5711,  5716,  5721,
    5726,  5731,  5746,  5752,  5767,  5772,  5787,  5793,  5811,  5816,
    5821,  5826,  5831,  5836,  5842,  5841,  5867,  5868,  5869,  5874,
    5879,  5884,  5886,  5888,  5890,  5896,  5901,  5906,  5910,  5915,
    5919,  5928,  5937,  5944,  5953,  5954,  5965,  5966,  5969,  5971,
    5975,  5994,  6003,  6013,  6023,  6034,  6035,  6036,  6037,  6038,
    6039,  6040,  6044,  6045,  6046,  6050,  6051,  6052,  6053,  6058,
    6065,  6072,  6073,  6077,  6078,  6079,  6080,  6081,  6085,  6087,
    6098,  6097,  6105,  6104,  6112,  6111,  6119,  6118,  6131,  6128,
    6139,  6137,  6146,  6145,  6164,  6172,  6180,  6188,  6189,  6193,
    6203,  6204,  6208,  6209,  6213,  6218,  6217,  6256,  6255,  6271,
    6270,  6281,  6282,  6286,  6287,  6291,  6292,  6296,  6297,  6301,
    6302,  6304,  6303,  6311,  6317,  6326,  6327,  6332,  6335,  6339,
    6343,  6350,  6351,  6355,  6356,  6360,  6366,  6372,  6373,  6381,
    6380,  6402,  6403,  6413,  6421,  6433,  6433,  6436,  6437,  6444,
    6451,  6455,  6463,  6464,  6465,  6469,  6470,  6471,  6472,  6473,
    6477,  6478,  6486,  6490,  6510,  6514,  6515,  6529,  6533,  6537,
    6541,  6543,  6550,  6552,  6558,  6559,  6560,  6564,  6568,  6573,
    6577,  6581,  6585,  6590,  6594,  6601,  6614,  6615,  6622,  6629,
    6637,  6641,  6645,  6649,  6653,  6657,  6661,  6665,  6667,  6669,
    6671,  6673,  6675,  6677,  6679,  6686,  6688,  6693,  6697,  6698,
    6702,  6703,  6707,  6708,  6709,  6710,  6711,  6715,  6716,  6717,
    6718,  6719,  6723,  6729,  6730,  6735,  6737,  6744,  6745,  6746,
    6750,  6754,  6755,  6756,  6757,  6758,  6759,  6763,  6767,  6768,
    6769,  6770,  6773,  6777,  6782,  6783,  6787,  6788,  6792,  6793,
    6798,  6804,  6808,  6814,  6819,  6827,  6828,  6835,  6839,  6843,
    6844,  6848,  6849,  6853,  6854,  6858,  6866,  6870,  6876,  6880,
    6881,  6885,  6898,  6904,  6914,  6915,  6919,  6926,  6930,  6931,
    6935,  6936,  6940,  6949,  6953,  6954,  6958,  6966,  6967,  6968,
    6976,  6977,  6981,  6982,  6983,  6991,  6992,  6996,  7000,  7004,
    7009,  7010,  7015,  7022,  7031,  7035,  7039,  7049,  7058,  7059,
    7064,  7063,  7076,  7077,  7081,  7084,  7085,  7086,  7087,  7091,
    7099,  7106,  7107,  7111,  7121,  7122,  7126,  7127,  7130,  7132,
    7136,  7148,  7149,  7153,  7160,  7173,  7174,  7176,  7178,  7184,
    7189,  7195,  7201,  7208,  7218,  7219,  7220,  7221,  7222,  7226,
    7227,  7231,  7232,  7236,  7237,  7241,  7242,  7243,  7247,  7251,
    7255,  7259,  7260,  7264,  7265,  7269,  7270,  7274,  7275,  7279,
    7280,  7284,  7285,  7289,  7290,  7295,  7296,  7297,  7301,  7303,
    7308,  7313,  7315,  7319,  7323,  7330,  7331,  7335,  7339,  7340,
    7350,  7351,  7352,  7356,  7357,  7361,  7366,  7374,  7375,  7383,
    7384,  7396,  7405,  7406,  7410,  7412,  7422,  7438,  7421,  7461,
    7460,  7477,  7476,  7491,  7500,  7499,  7507,  7506,  7514,  7513,
    7527,  7521,  7535,  7534,  7574,  7573,  7580,  7587,  7596,  7606,
    7586,  7622,  7626,  7634,  7637,  7641,  7645,  7653,  7655,  7656,
    7657,  7658,  7662,  7663,  7664,  7665,  7669,  7670,  7682,  7683,
    7688,  7689,  7692,  7694,  7702,  7711,  7713,  7715,  7716,  7724,
    7725,  7731,  7740,  7738,  7751,  7764,  7763,  7776,  7774,  7787,
    7794,  7804,  7805,  7811,  7823,  7822,  7862,  7869,  7873,  7879,
    7877,  7894,  7896,  7901,  7909,  7908,  7922,  7926,  7925,  7937,
    7938,  7942,  7955,  7956,  7960,  7964,  7971,  7976,  7980,  7987,
    7994,  7998,  8003,  8011,  8019,  8029,  8040,  8050,  8061,  8071,
    8077,  8083,  8090,  8100,  8105,  8111,  8116,  8126,  8132,  8139,
    8144,  8148,  8153,  8154,  8155,  8160,  8165,  8169,  8179,  8181,
    8185,  8191,  8193,  8194,  8195,  8196,  8200,  8204,  8212,  8217,
    8225,  8226,  8230,  8231,  8235,  8235,  8238,  8240,  8244,  8245,
    8249,  8250,  8258,  8259,  8260,  8264,  8265,  8270,  8279,  8280,
    8281,  8282,  8287,  8286,  8296,  8295,  8303,  8310,  8320,  8337,
    8340,  8347,  8351,  8358,  8362,  8366,  8373,  8373,  8379,  8380,
    8384,  8385,  8386,  8390,  8391,  8400,  8405,  8410,  8418,  8419,
    8424,  8423,  8435,  8436,  8437,  8441,  8443,  8442,  8449,  8448,
    8469,  8470,  8474,  8475,  8479,  8480,  8481,  8482,  8486,  8487,
    8488,  8493,  8492,  8513,  8514,  8518,  8523,  8524,  8531,  8533,
    8538,  8540,  8539,  8552,  8554,  8553,  8567,  8568,  8573,  8582,
    8583,  8584,  8588,  8595,  8605,  8613,  8622,  8624,  8623,  8629,
    8628,  8651,  8652,  8656,  8657,  8661,  8662,  8663,  8664,  8665,
    8666,  8670,  8671,  8676,  8675,  8696,  8697,  8698,  8703,  8702,
    8713,  8720,  8726,  8735,  8736,  8740,  8756,  8755,  8768,  8769,
    8773,  8774,  8778,  8789,  8800,  8801,  8806,  8805,  8820,  8821,
    8825,  8826,  8830,  8841,  8853,  8852,  8860,  8860,  8869,  8870,
    8875,  8876,  8886,  8885,  8900,  8899,  8918,  8917,  8934,  8932,
    8953,  8954,  8959,  8958,  8972,  8981,  8971,  8991,  9003,  9067,
    9072,  9087,  9088,  9103,  9102,  9118,  9117,  9130,  9132,  9147,
    9155,  9153,  9168,  9186,  9188,  9198,  9202,  9243,  9252,  9262,
    9263,  9267,  9271,  9277,  9284,  9286,  9295,  9299,  9303,  9310,
    9319,  9323,  9330,  9347,  9350,  9358,  9361,  9368,  9372,  9376,
    9380,  9387,  9388,  9392,  9393,  9402,  9415,  9421,  9432,  9435,
    9443,  9446,  9452,  9458,  9467,  9468,  9469,  9489,  9494,  9516,
    9522,  9528,  9534,  9540,  9549,  9558,  9564,  9565,  9566,  9567,
    9568,  9572,  9573,  9574,  9578,  9579,  9580,  9584,  9585,  9589,
    9594,  9645,  9652,  9695,  9701,  9705,  9711,  9717,  9723,  9729,
    9735,  9741,  9747,  9753,  9759,  9765,  9771,  9775,  9781,  9790,
    9796,  9804,  9810,  9819,  9825,  9833,  9843,  9849,  9856,  9863,
    9871,  9877,  9886,  9890,  9896,  9902,  9908,  9914,  9921,  9927,
    9933,  9939,  9945,  9952,  9958,  9964,  9970,  9976,  9982,  9988,
    9994, 10000, 10004, 10005, 10009, 10010, 10014, 10015, 10019, 10020,
   10024, 10025, 10026, 10027, 10028, 10029, 10033, 10034, 10039, 10042,
   10046, 10047, 10048, 10052, 10053, 10054, 10055, 10056, 10057, 10061,
   10062, 10063, 10067, 10074, 10081, 10103, 10110, 10119, 10120, 10121,
   10122, 10126, 10135, 10136, 10140, 10144, 10145, 10146, 10147, 10148,
   10149, 10150, 10182, 10183, 10184, 10185, 10186, 10187, 10188, 10189,
   10190, 10198, 10206, 10207, 10214, 10220, 10225, 10235, 10240, 10245,
   10251, 10256, 10264, 10275, 10282, 10287, 10292, 10297, 10302, 10308,
   10314, 10324, 10325, 10326, 10327, 10335, 10336, 10345, 10346, 10352,
   10356, 10362, 10368, 10377, 10378, 10387, 10394, 10408, 10414, 10422,
   10431, 10440, 10447, 10453, 10459, 10465, 10480, 10491, 10497, 10503,
   10510, 10516, 10522, 10530, 10538, 10545, 10549, 10555, 10563, 10573,
   10574, 10578, 10582, 10589, 10593, 10613, 10620, 10626, 10633, 10640,
   10646, 10652, 10658, 10664, 10671, 10678, 10684, 10695, 10702, 10708,
   10715, 10721, 10726, 10731, 10737, 10743, 10748, 10755, 10762, 10770,
   10777, 10784, 10791, 10806, 10812, 10818, 10827, 10838, 10845, 10851,
   10859, 10865, 10871, 10877, 10883, 10891, 10903, 10923, 10922, 11004,
   11010, 11016, 11022, 11027, 11032, 11037, 11042, 11047, 11052, 11072,
   11074, 11079, 11080, 11084, 11085, 11089, 11090, 11094, 11101, 11109,
   11136, 11142, 11148, 11154, 11160, 11166, 11175, 11182, 11184, 11181,
   11191, 11202, 11208, 11214, 11220, 11226, 11232, 11238, 11244, 11250,
   11257, 11256, 11277, 11276, 11307, 11306, 11320, 11329, 11347, 11349,
   11351, 11366, 11373, 11380, 11387, 11394, 11401, 11408, 11415, 11422,
   11429, 11440, 11447, 11458, 11469, 11489, 11488, 11494, 11511, 11517,
   11526, 11535, 11545, 11544, 11556, 11571, 11584, 11589, 11597, 11598,
   11603, 11608, 11611, 11613, 11617, 11622, 11630, 11631, 11636, 11643,
   11653, 11652, 11669, 11671, 11678, 11685, 11692, 11696, 11697, 11698,
   11706, 11707, 11708, 11709, 11710, 11711, 11712, 11713, 11717, 11718,
   11719, 11720, 11727, 11728, 11732, 11737, 11745, 11746, 11750, 11757,
   11765, 11774, 11784, 11785, 11796, 11797, 11809, 11810, 11811, 11818,
   11822, 11827, 11828, 11834, 11833, 11862, 11861, 11877, 11886, 11898,
   11910, 11911, 11912, 11913, 11918, 11919, 11920, 11921, 11922, 11926,
   11927, 11932, 11936, 11940, 11948, 11955, 11963, 11969, 11962, 12015,
   12016, 12022, 12027, 12041, 12049, 12047, 12067, 12065, 12078, 12090,
   12088, 12108, 12107, 12119, 12132, 12130, 12151, 12150, 12163, 12177,
   12178, 12179, 12183, 12184, 12192, 12193, 12197, 12206, 12207, 12208,
   12213, 12214, 12218, 12219, 12223, 12224, 12228, 12229, 12237, 12245,
   12253, 12254, 12267, 12283, 12287, 12296, 12308, 12309, 12314, 12318,
   12319, 12320, 12324, 12325, 12330, 12329, 12335, 12334, 12342, 12343,
   12346, 12348, 12348, 12352, 12352, 12357, 12358, 12362, 12364, 12369,
   12370, 12374, 12385, 12399, 12400, 12401, 12402, 12403, 12404, 12405,
   12406, 12407, 12408, 12409, 12410, 12414, 12415, 12416, 12417, 12418,
   12419, 12420, 12421, 12422, 12426, 12427, 12428, 12429, 12432, 12434,
   12435, 12439, 12440, 12444, 12452, 12454, 12458, 12460, 12459, 12473,
   12476, 12475, 12493, 12495, 12499, 12504, 12512, 12513, 12530, 12553,
   12554, 12560, 12561, 12565, 12578, 12577, 12586, 12587, 12596, 12597,
   12601, 12602, 12606, 12607, 12621, 12622, 12626, 12636, 12645, 12652,
   12659, 12669, 12670, 12677, 12687, 12688, 12690, 12692, 12694, 12696,
   12705, 12709, 12710, 12714, 12728, 12729, 12735, 12734, 12745, 12751,
   12760, 12761, 12762, 12768, 12769, 12774, 12781, 12787, 12792, 12803,
   12813, 12824, 12831, 12839, 12849, 12850, 12854, 12855, 12859, 12860,
   12865, 12872, 12879, 12886, 12896, 12901, 12906, 12910, 12916, 12922,
   12931, 12939, 12943, 12950, 12951, 12955, 12960, 12965, 12978, 12982,
   12986, 12990, 12995, 12998, 13002, 13011, 13015, 13023, 13031, 13042,
   13044, 13048, 13049, 13053, 13054, 13055, 13056, 13057, 13058, 13062,
   13063, 13064, 13065, 13066, 13074, 13079, 13084, 13089, 13094, 13110,
   13116, 13122, 13128, 13134, 13140, 13156, 13162, 13168, 13174, 13175,
   13181, 13187, 13188, 13192, 13193, 13194, 13195, 13196, 13200, 13201,
   13202, 13203, 13204, 13208, 13213, 13214, 13218, 13219, 13223, 13224,
   13225, 13230, 13229, 13261, 13262, 13266, 13267, 13271, 13281, 13281,
   13293, 13294, 13297, 13317, 13327, 13332, 13340, 13346, 13358, 13345,
   13360, 13375, 13388, 13387, 13410, 13409, 13419, 13418, 13441, 13447,
   13451, 13456, 13455, 13464, 13469, 13475, 13482, 13480, 13491, 13495,
   13496, 13500, 13512, 13525, 13526, 13530, 13544, 13548, 13556, 13560,
   13567, 13568, 13576, 13583, 13575, 13596, 13603, 13595, 13614, 13623,
   13632, 13640, 13641, 13645, 13646, 13650, 13651, 13659, 13659, 13662,
   13662, 13675, 13676, 13678, 13677, 13690, 13696, 13698, 13702, 13704,
   13710, 13714, 13715, 13719, 13720, 13724, 13734, 13735, 13739, 13740,
   13744, 13745, 13749, 13750, 13755, 13754, 13771, 13770, 13786, 13787,
   13791, 13792, 13796, 13801, 13809, 13817, 13828, 13829, 13838, 13839,
   13847, 13849, 13851, 13849, 13861, 13873, 13880, 13890, 13917, 13879,
   13924, 13925, 13929, 13936, 13944, 13945, 13949, 13959, 13960, 13967,
   13966, 13986, 13989, 13996, 13998, 13997, 14013, 14043, 14056, 14051,
   14069, 14080, 14068, 14090, 14101, 14089, 14114, 14118, 14117, 14151,
   14152, 14156, 14157, 14161, 14162, 14163, 14168, 14179, 14167, 14189,
   14191, 14194, 14196, 14199, 14200, 14203, 14207, 14211, 14215, 14219,
   14223, 14227, 14231, 14235, 14243, 14246, 14256, 14255, 14274, 14281,
   14289, 14297, 14305, 14313, 14321, 14328, 14335, 14341, 14343, 14345,
   14354, 14358, 14363, 14362, 14369, 14368, 14375, 14384, 14391, 14396,
   14401, 14406, 14411, 14416, 14418, 14420, 14422, 14429, 14437, 14439,
   14447, 14454, 14461, 14468, 14474, 14479, 14487, 14495, 14503, 14507,
   14511, 14521, 14531, 14538, 14545, 14551, 14557, 14563, 14569, 14575,
   14581, 14588, 14593, 14600, 14607, 14614, 14621, 14628, 14635, 14640,
   14645, 14650, 14655, 14660, 14672, 14680, 14702, 14704, 14706, 14711,
   14712, 14715, 14717, 14721, 14722, 14726, 14727, 14731, 14732, 14736,
   14737, 14741, 14742, 14746, 14747, 14756, 14768, 14767, 14786, 14785,
   14795, 14796, 14797, 14798, 14799, 14800, 14804, 14805, 14809, 14816,
   14817, 14819, 14820, 14824, 14825, 14838, 14839, 14840, 14856, 14880,
   14879, 14891, 14890, 14902, 14907, 14908, 14921, 14924, 14923, 14936,
   14937, 14942, 14944, 14946, 14948, 14950, 14952, 14960, 14962, 14964,
   14966, 14971, 14978, 14980, 14982, 14990, 14992, 14994, 14996, 14998,
   15000, 15017, 15018, 15022, 15026, 15039, 15038, 15053, 15063, 15064,
   15067, 15069, 15070, 15074, 15090, 15091, 15096, 15095, 15105, 15106,
   15110, 15110, 15115, 15114, 15120, 15124, 15125, 15129, 15130, 15137,
   15142, 15141, 15156, 15155, 15172, 15173, 15174, 15178, 15179, 15180,
   15189, 15190, 15194, 15198, 15206, 15206, 15211, 15212, 15221, 15233,
   15247, 15258, 15271, 15232, 15282, 15283, 15287, 15288, 15292, 15293,
   15301, 15305, 15306, 15307, 15310, 15312, 15316, 15317, 15321, 15326,
   15333, 15338, 15345, 15347, 15351, 15352, 15356, 15361, 15369, 15370,
   15374, 15376, 15384, 15385, 15389, 15390, 15391, 15395, 15397, 15402,
   15403, 15418, 15419, 15423, 15424, 15428, 15441, 15446, 15451, 15458,
   15466, 15474, 15479, 15487, 15495, 15510, 15517, 15523, 15533, 15534,
   15542, 15543, 15544, 15545, 15559, 15565, 15571, 15577, 15583, 15589,
   15612, 15622, 15632, 15638, 15645, 15655, 15662, 15669, 15680, 15679,
   15704, 15705, 15710, 15711, 15715, 15719, 15743, 15746, 15745, 15760,
   15764, 15769, 15776, 15782, 15791, 15808, 15809, 15813, 15818, 15826,
   15831, 15839, 15844, 15849, 15854, 15860, 15865, 15873, 15878, 15883,
   15888, 15894, 15902, 15903, 15912, 15919, 15923, 15929, 15935, 15945,
   15951, 15960, 15970, 15971, 15975, 15976, 15977, 15981, 15989, 15990,
   15991, 15992, 15996, 16005, 16013, 16021, 16029, 16030, 16038, 16039,
   16043, 16044, 16049, 16058, 16059, 16067, 16068, 16076, 16077, 16078,
   16082, 16093, 16117, 16126, 16126, 16128, 16138, 16139, 16140, 16141,
   16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149, 16154, 16155,
   16156, 16157, 16158, 16159, 16160, 16161, 16162, 16163, 16164, 16165,
   16166, 16168, 16173, 16174, 16175, 16176, 16177, 16178, 16179, 16180,
   16181, 16182, 16183, 16184, 16185, 16189, 16190, 16191, 16192, 16193,
   16194, 16195, 16196, 16197, 16198, 16199, 16200, 16201, 16205, 16206,
   16207, 16208, 16209, 16210, 16211, 16212, 16225, 16226, 16227, 16228,
   16229, 16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238,
   16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248,
   16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258,
   16259, 16260, 16261, 16262, 16263, 16264, 16265, 16266, 16267, 16268,
   16269, 16270, 16271, 16272, 16273, 16274, 16275, 16276, 16277, 16318,
   16319, 16320, 16321, 16322, 16323, 16334, 16335, 16336, 16337, 16338,
   16339, 16340, 16341, 16342, 16343, 16347, 16348, 16349, 16353, 16354,
   16355, 16364, 16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372,
   16373, 16374, 16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382,
   16383, 16384, 16385, 16386, 16387, 16388, 16389, 16394, 16399, 16400,
   16401, 16402, 16403, 16404, 16405, 16406, 16407, 16408, 16409, 16410,
   16411, 16412, 16413, 16414, 16415, 16416, 16417, 16418, 16419, 16420,
   16421, 16422, 16423, 16424, 16425, 16426, 16427, 16428, 16429, 16430,
   16431, 16432, 16433, 16434, 16435, 16436, 16437, 16438, 16439, 16440,
   16441, 16442, 16447, 16448, 16449, 16450, 16451, 16452, 16453, 16454,
   16455, 16456, 16457, 16458, 16459, 16460, 16461, 16462, 16463, 16464,
   16465, 16466, 16467, 16468, 16469, 16470, 16471, 16472, 16473, 16474,
   16475, 16476, 16477, 16478, 16479, 16480, 16481, 16482, 16483, 16484,
   16485, 16486, 16487, 16488, 16489, 16490, 16491, 16492, 16493, 16494,
   16495, 16496, 16497, 16498, 16499, 16500, 16501, 16502, 16503, 16504,
   16505, 16506, 16507, 16508, 16509, 16510, 16511, 16512, 16513, 16514,
   16515, 16516, 16517, 16518, 16519, 16520, 16521, 16522, 16523, 16524,
   16525, 16526, 16527, 16528, 16529, 16530, 16531, 16532, 16533, 16534,
   16535, 16536, 16537, 16538, 16539, 16540, 16541, 16542, 16543, 16544,
   16545, 16546, 16547, 16548, 16549, 16550, 16551, 16552, 16553, 16554,
   16555, 16556, 16557, 16561, 16562, 16563, 16564, 16565, 16566, 16567,
   16568, 16569, 16570, 16571, 16572, 16573, 16574, 16575, 16576, 16577,
   16578, 16579, 16580, 16581, 16582, 16583, 16584, 16585, 16586, 16587,
   16588, 16589, 16590, 16591, 16592, 16593, 16594, 16595, 16596, 16597,
   16598, 16599, 16600, 16601, 16602, 16603, 16604, 16605, 16606, 16607,
   16608, 16609, 16610, 16611, 16612, 16613, 16614, 16615, 16616, 16617,
   16618, 16619, 16620, 16621, 16622, 16623, 16624, 16625, 16626, 16627,
   16628, 16629, 16630, 16631, 16632, 16633, 16634, 16635, 16636, 16637,
   16638, 16639, 16640, 16641, 16642, 16643, 16644, 16645, 16646, 16647,
   16648, 16649, 16650, 16651, 16652, 16653, 16654, 16655, 16656, 16657,
   16658, 16659, 16660, 16661, 16662, 16663, 16664, 16665, 16666, 16667,
   16668, 16669, 16670, 16671, 16672, 16673, 16674, 16675, 16676, 16677,
   16678, 16679, 16680, 16681, 16682, 16683, 16684, 16685, 16689, 16690,
   16691, 16692, 16693, 16694, 16695, 16696, 16697, 16698, 16699, 16700,
   16701, 16702, 16703, 16704, 16705, 16706, 16707, 16708, 16709, 16710,
   16714, 16715, 16721, 16722, 16723, 16724, 16725, 16726, 16727, 16728,
   16729, 16730, 16731, 16732, 16733, 16734, 16735, 16736, 16740, 16741,
   16742, 16743, 16747, 16748, 16749, 16750, 16751, 16752, 16753, 16758,
   16759, 16760, 16761, 16762, 16763, 16764, 16765, 16766, 16767, 16768,
   16769, 16770, 16771, 16772, 16773, 16774, 16775, 16776, 16777, 16778,
   16779, 16780, 16781, 16782, 16783, 16784, 16785, 16786, 16787, 16788,
   16789, 16790, 16791, 16792, 16793, 16794, 16795, 16796, 16797, 16798,
   16799, 16800, 16801, 16802, 16803, 16804, 16805, 16806, 16807, 16808,
   16809, 16810, 16811, 16812, 16813, 16814, 16815, 16816, 16817, 16818,
   16819, 16820, 16821, 16822, 16823, 16824, 16825, 16826, 16827, 16828,
   16829, 16830, 16831, 16832, 16833, 16834, 16835, 16836, 16837, 16838,
   16839, 16840, 16841, 16842, 16843, 16844, 16845, 16846, 16847, 16848,
   16849, 16850, 16851, 16852, 16853, 16854, 16855, 16856, 16857, 16858,
   16859, 16860, 16861, 16862, 16863, 16864, 16865, 16866, 16867, 16868,
   16869, 16870, 16871, 16872, 16873, 16874, 16875, 16876, 16877, 16879,
   16881, 16882, 16883, 16884, 16885, 16886, 16887, 16888, 16889, 16890,
   16891, 16892, 16893, 16894, 16895, 16896, 16897, 16898, 16899, 16900,
   16901, 16902, 16903, 16904, 16905, 16906, 16907, 16908, 16909, 16910,
   16911, 16912, 16913, 16914, 16915, 16916, 16917, 16918, 16919, 16920,
   16921, 16922, 16923, 16924, 16925, 16926, 16927, 16928, 16929, 16930,
   16931, 16932, 16933, 16934, 16935, 16936, 16937, 16938, 16939, 16940,
   16941, 16942, 16943, 16944, 16945, 16946, 16947, 16948, 16949, 16950,
   16951, 16952, 16953, 16954, 16955, 16956, 16957, 16958, 16959, 16960,
   16961, 16962, 16963, 16964, 16965, 16966, 16967, 16968, 16969, 16970,
   16971, 16972, 16973, 16974, 16975, 16976, 16977, 16978, 16979, 16980,
   16981, 16982, 16983, 16984, 16985, 16986, 16987, 16988, 16989, 16990,
   16991, 16992, 16993, 16994, 16995, 16996, 17008, 17007, 17020, 17021,
   17023, 17022, 17034, 17033, 17040, 17038, 17058, 17059, 17064, 17065,
   17067, 17066, 17080, 17081, 17087, 17086, 17091, 17095, 17096, 17097,
   17101, 17102, 17103, 17104, 17108, 17109, 17110, 17111, 17120, 17119,
   17134, 17133, 17148, 17147, 17165, 17164, 17179, 17178, 17193, 17192,
   17209, 17208, 17223, 17222, 17237, 17236, 17250, 17249, 17275, 17274,
   17286, 17285, 17298, 17297, 17308, 17326, 17337, 17344, 17350, 17372,
   17388, 17400, 17399, 17414, 17413, 17425, 17424, 17438, 17439, 17440,
   17441, 17445, 17464, 17482, 17483, 17487, 17488, 17489, 17490, 17495,
   17500, 17505, 17516, 17529, 17535, 17542, 17543, 17544, 17551, 17550,
   17564, 17565, 17571, 17580, 17581, 17585, 17586, 17590, 17609, 17610,
   17611, 17616, 17617, 17622, 17621, 17639, 17638, 17650, 17659, 17669,
   17668, 17711, 17712, 17716, 17717, 17721, 17722, 17723, 17724, 17726,
   17725, 17738, 17739, 17740, 17741, 17742, 17748, 17753, 17758, 17763,
   17767, 17772, 17781, 17783, 17788, 17793, 17799, 17805, 17810, 17822,
   17823, 17827, 17828, 17832, 17837, 17845, 17854, 17875, 17875, 17878,
   17879, 17883, 17884, 17891, 17893, 17897, 17902, 17909, 17913, 17922,
   17929, 17930, 17931, 17932, 17936, 17937, 17938, 17939, 17940, 17941,
   17942, 17943, 17944, 17945, 17946, 17947, 17948, 17949, 17950, 17951,
   17952, 17953, 17954, 17955, 17956, 17957, 17958, 17959, 17960, 17961,
   17962, 17963, 17964, 17965, 17966, 17967, 17968, 17969, 17970, 17971,
   17972, 17973, 17974, 17975, 17976, 17977, 17978, 17982, 17983, 17987,
   17988, 17992, 17999, 18006, 18016, 18025, 18031, 18038, 18046, 18051,
   18059, 18064, 18072, 18077, 18084, 18084, 18085, 18085, 18088, 18094,
   18100, 18105, 18112, 18118, 18125, 18134, 18138, 18144, 18152, 18154,
   18158, 18162, 18166, 18173, 18178, 18183, 18188, 18193, 18201, 18202,
   18206, 18207, 18212, 18213, 18217, 18218, 18222, 18223, 18227, 18228,
   18233, 18232, 18242, 18251, 18252, 18256, 18257, 18262, 18263, 18264,
   18269, 18270, 18271, 18275, 18287, 18296, 18302, 18311, 18320, 18333,
   18335, 18337, 18345, 18346, 18347, 18351, 18352, 18358, 18359, 18360,
   18361, 18362, 18363, 18364, 18374, 18375, 18380, 18393, 18407, 18408,
   18409, 18413, 18414, 18418, 18419, 18424, 18425, 18429, 18435, 18444,
   18444, 18458, 18459, 18460, 18461, 18471, 18473, 18479, 18484, 18493,
   18496, 18507, 18524, 18540, 18550, 18556, 18561, 18565, 18538, 18614,
   18616, 18621, 18622, 18626, 18627, 18631, 18631, 18638, 18642, 18646,
   18650, 18654, 18658, 18666, 18667, 18683, 18690, 18697, 18710, 18711,
   18712, 18716, 18717, 18718, 18722, 18723, 18728, 18730, 18729, 18735,
   18736, 18740, 18745, 18752, 18757, 18766, 18772, 19257, 19258, 19262,
   19264, 19263, 19277, 19276, 19289, 19288, 19302, 19306, 19310, 19314,
   19319, 19318, 19328, 19333, 19338, 19344, 19350, 19356, 19366, 19370,
   19374, 19378, 19383, 19384, 19390, 19391, 19392, 19393, 19394, 19395,
   19396, 19397, 19401, 19402, 19403, 19404, 19405, 19406, 19407, 19408,
   19412, 19413, 19414, 19419, 19423, 19432, 19431, 19444, 19450, 19454,
   19464, 19465, 19478, 19494, 19495, 19499, 19500, 19501, 19505, 19505,
   19517, 19518, 19519, 19520, 19521, 19522, 19523, 19524, 19528, 19529,
   19537, 19538, 19544, 19543, 19561, 19560, 19580, 19579, 19604, 19605,
   19609, 19618, 19619, 19623, 19624, 19629, 19628, 19643, 19651, 19652,
   19656, 19657, 19662, 19663, 19668, 19669, 19673, 19674, 19678, 19682,
   19686, 19692, 19682, 19704, 19705, 19706, 19712, 19724, 19736, 19743,
   19744, 19750, 19751, 19759, 19758, 19779, 19778, 19798, 19807, 19816,
   19822, 19821, 19841, 19840, 19860, 19861, 19865, 19866, 19870, 19877,
   19890, 19899, 19911, 19919, 19924, 19929, 19933, 19938, 19943, 19948,
   19958, 19957, 19972, 19980, 19971, 19998, 19997, 20008, 20006, 20022,
   20020, 20034, 20043, 20041, 20061, 20074, 20059, 20090, 20094, 20099,
   20098, 20107, 20111, 20112, 20119, 20120, 20127, 20128, 20132, 20133,
   20142, 20155, 20154, 20169, 20181, 20182, 20183, 20184, 20185, 20186,
   20190, 20191, 20192, 20193, 20194, 20195, 20196, 20197, 20198, 20199,
   20200, 20204, 20205, 20206, 20207, 20214, 20212, 20228, 20232, 20226,
   20248, 20249, 20254, 20253, 20268, 20274, 20267, 20291, 20289
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "'@'", "ABORT_SYM",
  "IMPOSSIBLE_ACTION", "FORCE_LOOKAHEAD", "END_OF_INPUT",
  "COLON_ORACLE_SYM", "PARAM_MARKER", "FOR_SYSTEM_TIME_SYM",
  "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "ORACLE_CONCAT_SYM", "PERCENT_ORACLE_SYM", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITH_SYSTEM_SYM", "IDENT", "IDENT_QUOTED",
  "LEX_HOSTNAME", "UNDERSCORE_CHARSET", "BIN_NUM", "DECIMAL_NUM",
  "FLOAT_NUM", "HEX_NUM", "HEX_STRING", "LONG_NUM", "NCHAR_STRING", "NUM",
  "TEXT_STRING", "ULONGLONG_NUM", "AND_AND_SYM", "DOT_DOT_SYM",
  "EQUAL_SYM", "GE", "LE", "MYSQL_CONCAT_SYM", "NE", "NOT2_SYM", "OR2_SYM",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "ACCESSIBLE_SYM", "ADD", "ALL",
  "ALTER", "ANALYZE_SYM", "AND_SYM", "ASC", "ASENSITIVE_SYM", "AS",
  "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BIT_AND", "BIT_OR",
  "BIT_XOR", "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM",
  "BOTH", "BY", "CALL_SYM", "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE",
  "CHAR_SYM", "CHECK_SYM", "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT",
  "CONTINUE_MARIADB_SYM", "CONTINUE_ORACLE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CREATE", "CROSS", "CUME_DIST_SYM", "CURDATE",
  "CURRENT_ROLE", "CURRENT_USER", "CURSOR_SYM", "CURTIME", "DATABASE",
  "DATABASES", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DAY_HOUR_SYM",
  "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESCRIBE",
  "DESC", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DO_DOMAIN_IDS_SYM",
  "DOUBLE_SYM", "DROP", "DUAL_SYM", "EACH_SYM", "ELSEIF_MARIADB_SYM",
  "ELSE", "ELSIF_ORACLE_SYM", "EMPTY_SYM", "ENCLOSED", "ESCAPED",
  "EXCEPT_SYM", "EXISTS", "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM",
  "FIRST_VALUE_SYM", "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FROM",
  "FULLTEXT_SYM", "GOTO_ORACLE_SYM", "GRANT", "GROUP_CONCAT_SYM",
  "JSON_ARRAYAGG_SYM", "JSON_OBJECTAGG_SYM", "JSON_TABLE_SYM", "GROUP_SYM",
  "HAVING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM",
  "IF_SYM", "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "IGNORED_SYM",
  "INDEX_SYM", "INFILE", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "IN_SYM", "INTERSECT_SYM", "INTERVAL_SYM", "INTO", "INT_SYM",
  "IS", "ITERATE_SYM", "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM",
  "LAG_SYM", "LEADING", "LEAD_SYM", "LEAVE_SYM", "LEFT", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LOAD", "LOCALTIMESTAMP", "LOCATOR_SYM",
  "LOCK_SYM", "LONGBLOB", "LONG_SYM", "LONGTEXT", "LOOP_SYM",
  "LOW_PRIORITY", "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM",
  "MAXVALUE_SYM", "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MIN_SYM", "MINUS_ORACLE_SYM", "MINUTE_MICROSECOND_SYM",
  "MINUTE_SECOND_SYM", "MODIFIES_SYM", "MOD_SYM", "NATURAL", "NEG",
  "NESTED_SYM", "NOT_SYM", "NO_WRITE_TO_BINLOG", "NOW_SYM",
  "NTH_VALUE_SYM", "NTILE_SYM", "NULL_SYM", "NUMERIC_SYM", "ON",
  "OPTIMIZE", "OPTIONALLY", "ORDER_SYM", "ORDINALITY_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARSE_VCOL_EXPR_SYM",
  "PARTITION_SYM", "PATH_SYM", "PERCENTILE_CONT_SYM",
  "PERCENTILE_DISC_SYM", "PERCENT_RANK_SYM", "PORTION_SYM", "POSITION_SYM",
  "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM",
  "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM", "READ_WRITE_SYM",
  "REAL", "RECURSIVE_SYM", "REFERENCES", "REF_SYSTEM_ID_SYM", "REGEXP",
  "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REQUIRE_SYM", "RESIGNAL_SYM",
  "RESTRICT", "RETURNING_SYM", "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM",
  "REVOKE", "RIGHT", "ROW_NUMBER_SYM", "ROWS_SYM", "ROWTYPE_ORACLE_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SHOW", "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQL_BIG_RESULT", "SQLEXCEPTION_SYM", "SQL_SMALL_RESULT",
  "SQLSTATE_SYM", "SQL_SYM", "SQLWARNING_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM", "TERMINATED",
  "THEN_SYM", "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING",
  "TRIGGER_SYM", "TRUE_SYM", "UNDO_SYM", "UNION_SYM", "UNIQUE_SYM",
  "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES_IN_SYM",
  "VALUES_LESS_SYM", "VALUES", "VARBINARY", "VARCHAR", "VARIANCE_SYM",
  "VAR_SAMP_SYM", "VARYING", "VECTOR_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM", "ELSIF_MARIADB_SYM",
  "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM", "NOCOPY_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "RECORD_SYM", "ROWTYPE_MARIADB_SYM", "ROWNUM_SYM", "REPLACE",
  "SUBSTRING", "TRIM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM",
  "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM",
  "ANY_SYM", "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHANNEL_SYM", "CHARSET", "CHECKPOINT_SYM",
  "CHECKSUM_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_ADD_SYM",
  "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM",
  "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM",
  "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM",
  "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM",
  "CURRENT_SYM", "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DES_KEY_FILE", "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM",
  "DISCARD", "DISK_SYM", "DO_SYM", "DUMPFILE", "DUPLICATE_SYM",
  "DYNAMIC_SYM", "ENABLE_SYM", "END", "ENDS_SYM", "ENGINES_SYM",
  "ENGINE_SYM", "ENUM", "ERROR_SYM", "ERRORS", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM",
  "EXECUTE_SYM", "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM",
  "EXIT_ORACLE_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FEDERATED_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM", "FOUND_SYM",
  "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM", "GET_FORMAT",
  "GET_SYM", "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LIST_SYM", "LOCAL_SYM", "LOCKED_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MASTER_DEMOTE_TO_SLAVE_SYM",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONITOR_SYM",
  "MONTH_SYM", "MUTEX_SYM", "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM",
  "NAME_SYM", "NATIONAL_SYM", "NCHAR_SYM", "NEVER_SYM", "NEXT_SYM",
  "NEXTVAL_SYM", "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OVERLAPS_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM",
  "PARTIAL", "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM",
  "PERIOD_SYM", "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPLAY_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SESSION_USER_SYM", "SERVER_SYM",
  "SETVAL_SYM", "SHARE_SYM", "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM",
  "SKIP_SYM", "SLAVE", "SLAVES", "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SOFT_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SQL_AFTER_GTIDS_SYM", "SQL_BEFORE_GTIDS_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "THREADS_SYM", "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNKNOWN_SYM", "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM",
  "VALIDATION_SYM", "VALUE_SYM", "VARCHAR2_MARIADB_SYM",
  "VARCHAR2_ORACLE_SYM", "VARIABLES", "VERSIONING_SYM", "VIA_SYM",
  "VIEW_SYM", "VISIBLE_SYM", "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS",
  "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN", "WITHOUT",
  "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM",
  "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT", "'='",
  "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'",
  "'~'", "SUBQUERY_AS_EXPR", "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE",
  "USER", "PREC_BELOW_SP_OBJECT_TYPE", "PREC_BELOW_CONTRACTION_TOKEN2",
  "'('", "')'", "EMPTY_FROM_CLAUSE", "','", "'!'", "'{'", "'}'", "';'",
  "'.'", "$accept", "query", "$@1", "opt_end_of_input",
  "directly_executable_statement", "verb_clause", "deallocate",
  "deallocate_or_drop", "prepare", "$@2", "execute", "$@3", "$@4",
  "execute_using", "$@5", "execute_params", "help", "$@6", "change", "$@7",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "do_domain_id_list", "do_domain_id", "ignore_domain_id_list",
  "ignore_domain_id", "master_file_def", "optional_connection_name",
  "connection_name", "optional_for_channel", "for_channel", "create",
  "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15", "$@16",
  "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24",
  "opt_sequence", "sequence_defs", "sequence_def", "force_lookahead",
  "server_def", "$@25", "server_options_list", "server_option",
  "event_tail", "$@26", "ev_schedule_time", "$@27", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@28", "clear_privileges",
  "opt_aggregate", "sp_handler", "sp_handler_package_spec",
  "sp_handler_package_body", "drop_routine", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@29",
  "$@30", "$@31", "opt_sp_cparam_list", "$@32", "opt_sp_cparams",
  "sp_cparams", "sp_fdparam_list", "$@33", "sp_fdparams",
  "sp_fdparams_no_default", "sp_param_name",
  "sp_param_name_and_mode_init_vars", "sp_pdparam_list", "sp_pdparams",
  "sp_parameter_type", "sp_parenthesized_pdparam_list", "$@34",
  "sp_param_default", "sp_param", "sp_parenthesized_fdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "optionally_qualified_column_ident",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "rec_field_definition", "rec_field_definition_anchored",
  "rec_field_definition_list", "rec_type_body", "sp_decl_idents_init_vars",
  "sp_decl_variable_list", "$@35", "sp_decl_handler", "$@36",
  "opt_parenthesized_cursor_formal_parameters", "sp_cursor_stmt_lex",
  "sp_cursor_stmt", "$@37", "sp_handler_type", "sp_hcond_list",
  "sp_hcond_element", "sp_cond", "sqlstate", "opt_value", "sp_hcond",
  "raise_stmt_oracle", "signal_stmt", "signal_value", "opt_signal_value",
  "opt_set_signal_information", "signal_information_item_list",
  "signal_allowed_expr", "signal_condition_information_item_name",
  "resignal_stmt", "get_diagnostics", "$@38", "which_area",
  "diagnostics_information", "statement_information",
  "statement_information_item", "simple_target_specification",
  "statement_information_item_name", "condition_number",
  "condition_information", "condition_information_item",
  "condition_information_item_name", "sp_decl_ident", "sp_decl_idents",
  "sp_proc_stmt_if", "$@39", "sp_proc_stmt_statement", "$@40",
  "RETURN_ALLMODES_SYM", "sp_proc_stmt_return", "$@41",
  "sp_proc_stmt_exit_oracle", "$@42", "$@43",
  "sp_proc_stmt_continue_oracle", "$@44", "$@45", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle", "expr_lex", "@46",
  "assignment_source_lex", "assignment_source_expr", "$@47",
  "for_loop_bound_expr", "$@48", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_with_cursor",
  "sp_proc_stmt_open", "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch",
  "sp_proc_stmt_close", "sp_fetch_list", "sp_if", "$@49", "$@50",
  "sp_elseifs", "case_stmt_specification", "$@51", "case_stmt_body",
  "$@52", "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@53", "searched_when_clause", "$@54",
  "else_clause_opt", "sp_opt_label", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "repeat_body", "pop_sp_loop_label", "sp_labeled_control", "$@55", "$@56",
  "$@57", "$@58", "$@59", "$@60", "sp_unlabeled_control", "$@61", "$@62",
  "$@63", "$@64", "$@65", "trg_action_time", "trg_event", "create_body",
  "$@66", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@67", "have_partitioning",
  "partition_entry", "$@68", "partition", "$@69", "part_type_def", "$@70",
  "$@71", "$@72", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@73",
  "$@74", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "opt_partition",
  "part_definition", "$@75", "part_name", "opt_part_values", "$@76",
  "$@77", "part_func_max", "part_values_in", "part_value_list",
  "part_value_item", "$@78", "$@79", "part_value_item_list",
  "part_value_expr_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "$@80", "sub_name", "opt_part_options",
  "part_option_list", "part_option", "opt_subpart_options",
  "subpart_option_list", "server_part_option", "opt_versioning_rotation",
  "$@81", "opt_versioning_interval_start", "opt_vers_auto_part", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists_table_element",
  "opt_if_not_exists", "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@82", "engine_defined_option", "ident_options",
  "keyword_options", "opt_versioning_option", "versioning_option",
  "default_charset", "default_collation", "storage_engines",
  "known_storage_engines", "row_types", "merge_insert_types", "udf_type",
  "create_field_list", "create_field_list_parens", "field_list",
  "field_list_item", "column_def", "key_def", "$@83", "$@84", "$@85",
  "$@86", "$@87", "$@88", "$@89", "constraint_def",
  "period_for_system_time", "period_for_application_time",
  "opt_check_constraint", "check_constraint", "opt_constraint_no_id",
  "opt_constraint", "constraint", "field_spec", "@90",
  "field_type_or_serial", "$@91", "$@92", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@93", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@94", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "udt_name",
  "field_type_all_builtin", "field_type_all", "field_type_all_with_record",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc", "char",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "srid_option",
  "float_options", "precision", "field_options", "last_field_options",
  "field_length_str", "field_length", "field_scale", "opt_field_length",
  "opt_field_scale", "opt_precision", "attribute_list", "attribute",
  "opt_compression_method", "opt_compressed", "opt_enable", "compressed",
  "asrow_attribute", "serial_attribute", "with_or_without_system",
  "charset", "charset_name", "charset_name_or_default",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name",
  "collation_name_or_default", "opt_default", "charset_or_alias",
  "opt_binary", "binary", "opt_bin_mod", "ws_nweights", "$@95",
  "ws_level_flag_desc", "ws_level_flag_reverse", "ws_level_flags",
  "ws_level_number", "ws_level_list_item", "ws_level_list",
  "ws_level_range", "ws_level_list_or_range", "opt_ws_levels",
  "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "fulltext", "spatial_or_vector", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "opt_USING_key_algorithm",
  "opt_key_algorithm_clause", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "ignorability", "key_list", "opt_without_overlaps",
  "key_part", "key_part_simple", "opt_ident", "string_list", "alter",
  "$@96", "$@97", "$@98", "$@99", "$@100", "$@101", "$@102", "$@103",
  "$@104", "$@105", "$@106", "$@107", "$@108", "account_locking_option",
  "opt_password_expire_option",
  "opt_account_locking_and_opt_password_expiration",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@109", "$@110", "$@111", "$@112",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@113", "add_part_extra", "reorg_partition_rule", "$@114",
  "reorg_parts_rule", "$@115", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "opt_without_validation",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "alter_options",
  "$@116", "alter_options_part2", "alter_option_list", "alter_option",
  "opt_restrict", "opt_place", "opt_to", "slave", "$@117", "$@118",
  "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_thread_opts", "$@119", "slave_thread_opt_list",
  "slave_thread_opt", "slave_until", "slave_until_opts", "checksum",
  "$@120", "opt_checksum_type", "repair_table_or_view", "$@121", "repair",
  "$@122", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "opt_view_repair_type", "analyze", "$@123", "analyze_table_list",
  "analyze_table_elem_spec", "opt_persistent_stat_clause",
  "persistent_stat_spec", "persistent_column_stat_spec", "$@124",
  "persistent_index_stat_spec", "$@125", "table_column_list",
  "table_index_list", "table_index_name", "binlog_base64_event",
  "check_view_or_table", "$@126", "check", "$@127", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "opt_view_check_type", "optimize",
  "$@128", "opt_no_write_to_binlog", "rename", "$@129", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@130",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@131",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@132", "cache_keys_spec",
  "$@133", "cache_key_list_or_empty", "opt_ignore_leaves", "select",
  "$@134", "$@135", "select_into", "$@136", "$@137", "simple_table",
  "table_value_constructor", "$@138", "query_specification_start", "$@139",
  "$@140", "query_specification", "select_into_query_specification",
  "query_expression", "query_expression_no_with_clause",
  "query_expression_body_ext", "$@141", "$@142",
  "query_expression_body_ext_parens", "query_expression_body", "$@143",
  "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end",
  "remember_cpp_ptr", "remember_start_opt", "remember_end_opt",
  "remember_lex", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "search_condition", "expr",
  "boolean_test", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands", "trim_operands_regular",
  "trim_operands_special", "column_default_non_parenthesized_expr",
  "primary_expr", "string_factor_expr", "simple_expr",
  "mysql_concatenation_expr", "function_call_keyword_timestamp",
  "function_call_keyword", "substring_operands",
  "substring_operands_regular", "substring_operands_special",
  "function_call_nonkeyword", "function_call_conflict",
  "function_call_generic", "@144", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@145", "$@146", "$@147",
  "$@148", "$@149", "window_func_expr", "window_func",
  "simple_window_func", "inverse_distribution_function",
  "percentile_function", "$@150", "inverse_distribution_function_def",
  "order_by_single_element_list", "window_name", "variable", "$@151",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "opt_glimit_clause", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@152", "cast_type",
  "cast_type_numeric", "cast_type_temporal", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "when_list", "when_list_opt_else",
  "table_ref", "json_text_literal", "join_table_list",
  "json_table_columns_clause", "json_table_columns_list",
  "json_table_column", "$@153", "$@154", "json_table_column_type",
  "json_table_field_type", "json_opt_on_empty_or_error",
  "json_default_literal", "json_on_response", "json_on_error_response",
  "json_on_empty_response", "table_function", "$@155", "$@156",
  "esc_table_ref", "derived_table_list", "join_table", "$@157", "$@158",
  "$@159", "$@160", "$@161", "$@162", "inner_join", "normal_join",
  "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "derived_column_list",
  "table_primary_derived", "opt_outer", "index_hint_clause",
  "index_hint_type", "index_hint_definition", "$@163", "$@164",
  "index_hints_list", "opt_index_hints_list", "$@165",
  "opt_key_definition", "$@166", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias_clause",
  "table_alias_clause", "opt_all", "opt_where_clause", "$@167",
  "opt_having_clause", "$@168", "opt_group_clause", "group_list",
  "olap_opt", "opt_window_clause", "window_def_list", "window_def",
  "window_spec", "$@169", "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@170", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "fetch_first_clause", "first_or_next", "row_or_rows",
  "only_or_with_ties", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into",
  "opt_order_or_limit", "order_or_limit", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "sequence_value_num",
  "sequence_value_hybrid_num", "sequence_truncated_value_hybrid_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@171", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@172",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@173", "$@174", "do", "$@175", "drop", "$@176",
  "$@177", "$@178", "$@179", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@180", "$@181", "replace", "$@182", "$@183",
  "insert_start", "stmt_end", "insert_lock_option", "replace_lock_option",
  "insert_replace_option", "opt_into", "insert_table", "$@184",
  "insert_field_spec", "$@185", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@186", "no_braces_with_names", "$@187", "opt_values",
  "opt_values_with_names", "values", "values_with_names", "expr_or_ignore",
  "expr_or_ignore_or_default", "opt_insert_update", "$@188", "$@189",
  "update_table_list", "update", "$@190", "$@191", "$@192", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@193", "opt_delete_system_time",
  "delete_part2", "$@194", "delete_single_table",
  "delete_single_table_for_period", "single_multi", "$@195", "$@196",
  "$@197", "$@198", "$@199", "opt_returning", "$@200", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "$@201", "$@202",
  "opt_table_sym", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@203", "show_param", "$@204", "$@205",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "$@206", "$@207", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "explain_for_connection", "flush", "$@208",
  "flush_options", "$@209", "opt_flush_lock", "flush_lock", "$@210",
  "flush_options_list", "flush_option", "opt_table_list", "backup",
  "backup_statements", "$@211", "opt_delete_gtid_domain",
  "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@212", "reset_options",
  "reset_option", "$@213", "$@214", "slave_reset_options",
  "master_reset_options", "purge", "$@215", "kill", "$@216", "kill_type",
  "kill_option", "opt_connection", "kill_expr", "shutdown", "$@217",
  "shutdown_option", "use", "load", "$@218", "$@219", "$@220", "$@221",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "with_clause", "$@222",
  "opt_recursive", "with_list", "with_column_list", "with_list_element",
  "opt_cycle", "$@223", "opt_column_name_list", "ident_sys_alloc",
  "comma_separated_ident_list", "with_element_head", "insert_ident",
  "table_wild", "select_sublist_qualified_asterisk", "order_ident",
  "simple_ident", "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "ident_cli_func", "ident_func", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident_table_alias",
  "ident_cli_set_usual_case", "ident_sysvar_name", "ident", "label_ident",
  "ident_or_text", "user_maybe_role", "user_or_role", "user",
  "keyword_table_alias", "keyword_ident", "keyword_sysvar_name",
  "keyword_set_usual_case", "non_reserved_keyword_udt",
  "keyword_sp_var_not_label", "keyword_sp_head", "keyword_verb_clause",
  "keyword_set_special_case", "keyword_sysvar_type", "keyword_data_type",
  "keyword_cast_type", "keyword_func_sp_var_and_label",
  "keyword_func_sp_var_not_label", "keyword_sp_var_and_label",
  "reserved_keyword_udt_not_param_type", "set", "$@224", "set_param",
  "$@225", "$@226", "$@227", "set_stmt_option_list",
  "start_option_value_list_following_option_type", "$@228",
  "option_value_list", "option_value", "$@229", "option_type",
  "opt_var_type", "opt_var_ident_type", "set_stmt_option", "$@230",
  "$@231", "$@232", "option_value_following_option_type", "$@233", "$@234",
  "$@235", "option_value_no_option_type", "$@236", "$@237", "$@238",
  "$@239", "$@240", "$@241", "$@242", "$@243", "$@244", "$@245",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "set_expr_misc", "lock",
  "$@246", "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@247", "handler", "$@248",
  "handler_tail", "$@249", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@250", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "role_name", "grant_role", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "column_list_privilege",
  "column_privilege", "object_privilege", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "user_and_role_list", "via_or_with", "using_or_as", "grant_user",
  "auth_expression", "auth_token", "opt_auth_str", "opt_require_clause",
  "resource_option", "resource_option_list", "opt_resource_options",
  "opt_grant_options", "opt_grant_option", "grant_option_list",
  "grant_option", "begin_stmt_mariadb", "$@251", "compound_statement",
  "opt_not", "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@252", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "opt_on_update_cols", "on_update_cols", "trigger_tail", "$@253", "$@254",
  "$@255", "$@256", "$@257", "create_package_chistic",
  "create_package_chistics", "opt_create_package_chistics",
  "opt_create_package_chistics_init", "$@258", "xa", "opt_format_xid",
  "xid", "begin_or_start", "opt_join_or_resume", "opt_one_phase",
  "opt_suspend", "$@259", "opt_migrate", "install", "uninstall",
  "keep_gcc_happy", "_empty", "statement", "sp_statement", "$@260",
  "$@261", "$@262", "sp_if_then_statements", "sp_case_then_statements",
  "sp_parameters", "sf_parameters", "sf_returned_type_clause", "$@263",
  "sf_return_type", "package_implementation_item_declaration",
  "sp_package_function_body", "sp_package_procedure_body",
  "reserved_keyword_udt", "keyword_sp_block_section", "keyword_label",
  "keyword_sp_decl", "opt_truncate_table_storage_clause",
  "ident_for_loop_index", "row_field_name", "while_body", "$@264",
  "for_loop_statements", "sp_control_label", "sp_block_label",
  "sp_opt_default", "sp_opt_nocopy", "sp_opt_inout",
  "sp_proc_stmts1_implicit_block", "$@265", "keyword_directly_assignable",
  "ident_directly_assignable", "ident_cli_directly_assignable",
  "set_assign", "$@266", "$@267", "$@268", "labels_declaration_oracle",
  "label_declaration_oracle", "opt_exception_clause", "exception_handlers",
  "exception_handler", "$@269", "sp_no_param",
  "opt_sp_parenthesized_fdparam_list", "opt_sp_parenthesized_pdparam_list",
  "opt_trailing_sp_name", "opt_package_routine_end_name", "sp_tail_is",
  "sp_instr_addr", "sp_body", "$@270", "$@271", "$@272",
  "package_implementation_declare_section_list",
  "package_implementation_declare_section",
  "package_implementation_executable_section",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2",
  "package_specification_function", "$@273",
  "package_specification_procedure", "$@274",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@275",
  "package_implementation_procedure_body", "$@276",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "sp_decl_variable_list_anchored", "sp_param_name_and_mode",
  "sp_param_init_vars", "sp_param_anchored",
  "sf_c_chistics_and_body_standalone", "$@277", "sp_tail_standalone",
  "$@278", "$@279", "create_routine", "$@280", "$@281", "$@282", "$@283",
  "$@284", "$@285", "opt_sp_decl_body_list", "sp_decl_body_list", "$@286",
  "sp_decl_non_handler_list", "sp_decl_handler_list",
  "opt_sp_decl_handler_list", "sp_decl_non_handler", "$@287",
  "sp_proc_stmt", "sp_labelable_stmt", "sp_proc_stmt_compound_ok",
  "sp_labeled_block", "$@288", "$@289", "$@290", "opt_not_atomic",
  "sp_unlabeled_block", "$@291", "$@292", "$@293",
  "sp_block_statements_and_exceptions", "$@294", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5746)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3908)

#define yytable_value_is_error(Yyn) \
  0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
   40329, -5746, -5746, 97402, -5746, -5746,  3762,  1111, 97402, -5746,
      99, -5746,   472, -5746, -5746, -5746, -5746, -5746,  4038, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746,   590,   198, -5746, -5746,
     290, -5746, -5746, -5746, -5746,   327, 83171,    44,  1035, -5746,
   86916, -5746, -5746, -5746, -5746, 86916, -5746, -5746, 97402, -5746,
   -5746,  1272, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,   282, -5746,  1393,   691, -5746, -5746, -5746, -5746,
   -5746, -5746,   582, -5746, -5746, -5746, -5746, -5746, -5746,   198,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,   760, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
     967, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, 98151, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
     427, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  2206,
   -5746, -5746, -5746, -5746, -5746,   283, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  1733,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, 97402, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746,   290, -5746, -5746, -5746,
     986, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
     760, -5746, -5746, -5746, -5746, -5746, -5746, -5746, 97402, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,   595, -5746, -5746,   261, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  1814, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,  3700, -5746, -5746,   156,  1947,  2244, -5746, -5746,  1424,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  4414, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  2133, -5746, -5746, -5746, -5746,  4340,  2092,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   48596, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,   156, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,   315,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  1405, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, 98900, 97402,  1507,  1570,
   97402,  2369, 83920,  2369, -5746,   119, -5746, -5746,  2144, -5746,
    1832, -5746,   198,  2697,  1789,  2342,  2621,   573,  2381, 84669,
    1246,  2369, -5746,  2608, -5746,  2369,  2401,  2369, -5746,  2369,
    2369, -5746,  2369,  2369,  2369, -5746, -5746,  1008,106390, 71936,
   -5746, -5746,  1055,  2582, -5746, -5746, -5746, -5746, -5746, -5746,
    8070,   198, 24156,  2674, -5746, -5746,  2241,  5251,  2020, -5746,
    2512, -5746, -5746, 97402, -5746,  2369,  8070, -5746,  2512, 72685,
    4108, 52352, 10153,  2512,   198,  2600, -5746,  1986, -5746, -5746,
   -5746, -5746, -5746, -5746, 97402, -5746,   760, -5746, -5746,  2450,
   -5746, -5746, 83920, -5746, -5746, -5746, -5746, -5746,  2758, 24156,
     254,  2513, -5746, -5746,  2407, 49345, 83920,  2693,  2621,  2723,
   -5746,  1858,   502, -5746,  2101,  2187,  2621,   430,  2191,  2621,
    2588,  2369,  2369, -5746, -5746,  2798,  2798,  2798,  2415,  2798,
   -5746,  2798,  2770,  2100,   465, -5746, -5746,  2125, 97402,  2693,
   -5746,  2693, -5746,  2765, -5746,  2693,  2693,  2258,  2784,  2788,
     351,  2668,  1928,  1928,  2144, 44102,  1457,  2624, -5746,  2770,
    1625,  1886,  2286,  2286,  2286,  1625,   156,  1625, -5746,  1498,
    1832,  3128, 97402, -5746,  2829, -5746,  2166, -5746, -5746, -5746,
   97402, 97402,   393, -5746,  2238, -5746,  2176,  1419, 74183, -5746,
    2885, -5746, -5746, -5746, -5746, -5746, -5746,  2729,   284,  2361,
    2596,  2310, -5746,  2799, 83920, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, 97402,  2289, -5746, -5746, -5746,  2968,  2342,
   -5746,  2809, -5746, -5746, -5746, -5746, 49345, -5746, -5746, -5746,
  106390, -5746, -5746, -5746,106390,  1397, 67442, -5746,  2311,  2651,
   -5746,  2300,  1422,  1572, -5746, -5746,  1582,  1637,  1655, -5746,
   -5746, -5746,  1745, -5746, -5746, -5746,104143,  1482,  2348, -5746,
   -5746,  3019, -5746, -5746, 87665,   637, 97402,  3026, -5746, 97402,
   -5746, 97402, -5746, 83920, -5746, -5746, 97402,  2369,  2369, -5746,
   -5746,  3027, -5746,  2584,  2567,  2007,  2417,  2740, -5746,  2646,
   -5746,  2467,  2528,  2682,  2468,  2487,  2534,   205, -5746,  2491,
   -5746,  1257,  2957,   117,   120,  2967,   132,   154,  3107,  2980,
     158,   148,   162,  2768,   164, -5746, -5746, -5746, -5746,  3038,
    3123,  2542, -5746,  2568, -5746,  3076,  2932,  1184, -5746, -5746,
    1027,  3011,   387, 49345,107810, 16010, 85418,107810,107810,107810,
   -5746, -5746,   273, 97402,107100, 97402,  7430, -5746, -5746, 41855,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, 97402,
   -5746, -5746, -5746, -5746, -5746, -5746,  1845,   440,  8209, -5746,
    2581, -5746, -5746, -5746, -5746, -5746, 88414, -5746,   230,   244,
    2826, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, 30356,  2591,  2592,  2597, 19506,  2598,  2602,  2611,
    2615,  2625,  2417,  2417,  2417,  2630,  2660,  2663,  2678,  2698,
    2706,  2712, -5746,  2719,  2722,  2726,  2730,  2738,  2743, 24931,
    2744,  2755,  2771,  2630, 38056,  2774,  2800,  2801,  2805, 24156,
    2630,  2818,  2821, -5746,  2824,  2825,  2835,  2836,  2845,  2848,
    2859,  2874,  3422,  2882,  2886,  2887,  2891, -5746,  2417,  2630,
    2630,  2892,  2896,  2417,  2897,  2900,  2901,  2904,  2912,  2915,
    2916,  2920,  2922,  2937,  2938,  2943,   296,  2946,  2954,  2961,
    2962,  2964,  2965,  2979,  2752,  2983,  2985,  2986,  2794,  2987,
    2989,  2990,  2992,  3004,   340,  3005,  3008,   345,  3010,  3014,
    3015,  3016,  3020,  3022,  3024, 31131, 31906, 30356, 17181, -5746,
   97402, 99649, -5746, -5746,  2384,  2650,  3230,   672, 30356, -5746,
   -5746, -5746,  3399, -5746,  3508, -5746, -5746, -5746, -5746,  3358,
    3369, -5746,  3373, -5746, -5746,  3383,  2858, -5746,  3612, -5746,
   -5746, -5746, -5746, -5746,  2852, -5746,  3028,  3706,  3720,  3032,
    3044, -5746, -5746,  1373, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  2977,  3046, -5746,
    3612, -5746, -5746, 79426, -5746,  6717, -5746, -5746,  2584,  3140,
    3544, -5746,  3687, -5746,  3629, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  4108, -5746, -5746,
   53112,  3577,  1265, -5746, -5746,   383, -5746,   416,   428, 65944,
   -5746,   233, 66693,   447, 89163,   293, -5746, 74932, -5746,   503,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    3047, -5746,  3164,  3376,  3057,  3934,  1826, -5746, -5746,   243,
     153,  3156,   984, -5746,   129, -5746,  1826, -5746, 80175,  1216,
    1948, -5746,   997, -5746,  3725, -5746, -5746,  3158,  3146,  3177,
   -5746,  2504, -5746,  2621, -5746,   515, -5746,  1216,  1826,  1948,
   -5746,  3345,  3430,  1231,  3376, -5746,   841, -5746, -5746, -5746,
    3728, -5746,  3082, -5746,  3697, -5746, 97402,   369, 49345, -5746,
   -5746, -5746, -5746,  3086, 49345, 49345,  1566,  1122,  2384,  3088,
   24156, -5746, -5746,  5795, -5746,  3294,  1682,  1059, -5746, -5746,
    1393, 97402, -5746, -5746,  1115, -5746,  3518, -5746,  3101, -5746,
  100398,  1122,  3768, -5746, -5746, -5746,   852,  3500, -5746,  3113,
   -5746, -5746, -5746, -5746, 49345, 97402,  2621, -5746, -5746, -5746,
   -5746,  3117, -5746, -5746,  3328,  3207, -5746,  3143, -5746, -5746,
     229, -5746, -5746,  3908, -5746, 97402, -5746,  2693, -5746, -5746,
    2693, -5746, -5746, -5746,  2693,  2693,  2693, -5746, -5746,  2693,
    2693,  3168, -5746,  3455,  3456,  2799, -5746,  3136, 43353, 97402,
    3915, -5746,  3273, -5746, -5746, -5746,  3141, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  3716,  3911,  3911, -5746, 53872,
   -5746, -5746,  3808,  2624,  1821,  3648, 57672,  3803,  3885, 59952,
   -5746,  1216, -5746, -5746, -5746, -5746,  1892, 97402, -5746,  1892,
    1892, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,   156, -5746, -5746,  2697,  3560, 75681, 97402,
    1625,  1886, -5746,  3918,  3924, -5746, -5746, -5746,  2621,  1283,
    3556, -5746, 97402, -5746, -5746, -5746,  2417,  3966, -5746, -5746,
   -5746, -5746, -5746, 49345,  3386, 74183,  2369, -5746, -5746, -5746,
     284, -5746,  1084, 97402, 49345,  3224, -5746, 49345,  3190, -5746,
   -5746, -5746,  3665, 24156, -5746,  3561, -5746, -5746, 49345,  1712,
   -5746, -5746, -5746,  3831, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746,  3200, -5746, -5746, -5746,
    3200,   373, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,  3205, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  3769, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    3205, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,   235, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  3600,  3620,  1804, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  3600, -5746,  1804, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    3205, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  3209, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  3600, -5746,
    1804, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  3200,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  3200, -5746, -5746,  1804,  3200,
   -5746,  3210,  3205,  3600,   509,  2231,  3205, -5746, -5746,  3200,
    3212,  3200,  3200,  3200,  3200, -5746,  3200,  3990,  3216,  3205,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,    72,  3200,  3200,
    3200,  3200,  3225,   237, -5746,   250,   277,   286,   292,   300,
     316, -5746, -5746, -5746, -5746,  3890, 97402,  3893, -5746,  3670,
    1482,  3226,  3232, -5746, 49345,  3976, 49345,  3241, -5746,  3909,
    2624, -5746, -5746,  3242, -5746, -5746,  3919, 97402, -5746, -5746,
   80924, -5746, 79426, 49345,  3244, -5746, -5746,  3865,  3397, -5746,
   -5746, -5746, -5746, -5746, -5746,  3335, -5746, -5746,  3258, -5746,
   -5746, -5746, -5746,  3714, -5746,  3406, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, 79426, -5746, -5746,  3727,  3729, -5746, 74183,
    2194,  5893, 99649, -5746,  3921, -5746, -5746, -5746,  3728, -5746,
   -5746, 25706, -5746, 26481, -5746, -5746, -5746,  3564,   594,  1136,
   -5746, -5746, -5746, -5746, -5746, -5746,  4031, -5746, -5746, -5746,
   -5746, -5746, -5746,  3763, 97402,  3512,  3955,  3937, -5746, -5746,
   -5746, -5746, -5746,  3775,  3305,  3920,  3304, -5746, -5746,   338,
   -5746,  3310, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, 49345, 54632, -5746, -5746, -5746,  3307, -5746, -5746,
   -5746,  3318, 30356, 30356, -5746,  4060,  4060,  4060, 24156,  2059,
     451,  3678, 24156, 24156, 24156,  2421,  3321, -5746, -5746, -5746,
     425, -5746, 24156, 24156, 38811,  3323,  1157,  3869, 24156,  4008,
    4008, -5746, 24156, 24156, 17181,  5629, 24156, 24156, 24156, -5746,
   99649, 38811,  3776,  3326, -5746,  3324,  2425, 24156,  2457, 24156,
   -5746, -5746, 24156, 24156, 24156, 24156,  3333, 32681,  3336, 24156,
   24156,  3339,  3477,  4060,  4060,  2473,   488, -5746, -5746, -5746,
    4060,  4060, -5746, 24156, 24156, 17956, 24156, 24156,  2519, 24156,
   24156, 24156, 24156, 24156, 24156, -5746, 24156, 24156,  1449, 24156,
   24156, 49345, 24156, 24156,  4005, 49345, 24156, 24156,  4010, 24156,
   24156,  3352, 49345, 24156, -5746, 24156,  3502,  3502, -5746, 24156,
   17956, 24156,  3354, 39566, 24156, 24156, 24156, 24931, -5746, 24931,
   -5746, -5746,  3355,  3549,   397,   156, 24156,  3351, -5746, -5746,
   -5746, -5746, 24156, 24156, 24156, 32681, -5746, -5746, -5746,  1487,
   -5746, -5746, -5746, 27256, 32681,  3360, 32681, 32681,  3991,  2533,
   32681, 32681, 32681, 32681, 32681, 32681, 32681, 33456, 34231, 32681,
   32681, 32681, 32681, -5746, 83920, 30356, 51592,  3371,  4021, -5746,
   81673, -5746,  1713,   474, -5746,  2621,  5251, 35781, -5746,  3384,
   -5746,  3892, 49345, -5746,  3390,  4055, 79426, 74183,  2194,  3407,
   -5746,  1490,   400, -5746, 80924, 97402, -5746, -5746, -5746,  4111,
   24156, -5746, -5746, -5746, -5746, -5746,  3394,   522,  3404, -5746,
    1241, -5746, -5746, -5746, -5746, -5746, 97402, -5746, 89912, 55392,
    3501,  4073,  3428,  2693, 90661, 97402, 49345, 97402,101147, 97402,
   97402, 49345, 83920, 79426, 49345, -5746, -5746, -5746,  1001,  1826,
   97402,  1826,  1948,  1023,  1826,  4061, -5746, -5746,    59,    59,
   -5746, -5746, -5746, -5746, -5746, -5746,  1826, 97402, 97402,  1826,
   74183, -5746,  1948,  1513, -5746,  3717,  3509, -5746, -5746, -5746,
    3766, -5746, -5746,  4091,  3432, -5746,  3786, -5746,  3535, -5746,
   -5746, 49345, -5746, -5746,  1948, -5746,  1948,  1948,  4104,  1826,
    1826,  1826, -5746, 44851,  3443,  3445, -5746,  3444, -5746,  3446,
   -5746,  4083, -5746, -5746, -5746,  3809,  4238,  4092,  3453, -5746,
   -5746,  4032,   858, -5746,  3882, -5746,  4012, -5746, 24156,  2384,
   20281,  3740, -5746, -5746,  3741,  3752,  3753,  3578, -5746, -5746,
   -5746, -5746,  3910,  3782, -5746,  3581,  2621,  3783, -5746, -5746,
   -5746,  3486, -5746, -5746, -5746, 56152,   303, -5746, -5746,  4160,
    3601, 24156, -5746, -5746, 49345,  4011, -5746,  2621,  1858, 97402,
   -5746, -5746,  4253, -5746,    52,  4178, -5746, -5746,  3631,   430,
   -5746,  4178,    20, -5746, -5746,  2798,  3718, -5746, -5746, -5746,
   83920, -5746, -5746, -5746, -5746, -5746, -5746, 97402, -5746, 80924,
   74183, 83920,  2693,  2693, -5746, 49345, -5746, -5746, -5746, 97402,
   97402,  2693,  2693,  2693,  3565, -5746,  1596,  3532,  3533,  3538,
    3541,  2029,  3542, 45600,  2547,  6967,  4166,  4174, -5746,  4122,
    2296,  4122, -5746, -5746, 45600, 44851,  3547,  3915, -5746, -5746,
   -5746, -5746, 83920,  3548, -5746, -5746,  3550, -5746, 24156,  4275,
    4208,  3808, -5746, -5746, 58432,  1652, 88414, -5746, -5746, -5746,
    3900,  4100,  1141, -5746,  3558,  3684, -5746,   253, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, 24156, -5746, -5746, -5746,
   -5746, -5746, -5746, 18731, -5746, -5746, -5746, -5746, -5746,   400,
     248, -5746, -5746, -5746,  1321,  3936,  3881, -5746, -5746, 83920,
    3881, -5746,  3571,  3872, -5746,  3877,    83, -5746, 49345, -5746,
   -5746, -5746, -5746, -5746, 49345,  3575, -5746,  3770, 97402,  2289,
   24156,  4093, -5746,  3665, -5746,  2384, -5746, -5746,  8070,  4299,
    7382,   140,  3637, -5746, -5746, -5746, -5746, -5746, 49345, -5746,
   -5746,  1313,  3592,  4052,  3114, -5746, -5746, -5746,  3600,   400,
    3600, -5746, -5746,  3363,  1158, -5746, -5746, -5746,  1158, -5746,
     234,  3577, 76430,  3600, -5746, -5746, -5746, -5746,  4071,  1804,
     505, 82422,   651, -5746, -5746, -5746, -5746,  1158,  2798, -5746,
   -5746,  3600, -5746, -5746, -5746,  2798,  1158, -5746,  4074, -5746,
   -5746, -5746,  1158,  3600,106390,   613,  1804, -5746, -5746,  1804,
    1158,   175, 97402,  4146,   613, -5746,   505,  4330,  1804,  3600,
    1158,  4358, -5746,  1158, -5746, -5746,   231, -5746, -5746,  1482,
   -5746, -5746, -5746,  3182,  3679, -5746,  3241,    75, 97402,  4263,
    4169, -5746, -5746,  4187, 61450, -5746, -5746,  4191,  3606, -5746,
   -5746,  3607,   216, 97402, 49345, 49345,  8070, -5746, -5746,  3611,
   -5746, -5746, -5746, -5746,  4112, -5746, -5746,   150, -5746, 46349,
   46349,  1257,  2957, -5746, -5746,  2967, -5746, -5746,  2980, -5746,
     148, -5746,  2768, -5746, -5746, -5746, -5746,  2055, -5746, -5746,
   -5746,  4083, 24156, 50843,  2384, -5746, -5746, 49345, -5746,  4257,
   -5746, -5746,104892,   161, -5746, -5746,   308, 49345, -5746, -5746,
   -5746, -5746,  4251,  3754, 97402, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, 97402,  2289, -5746, 97402,106390,  8070,  8070, -5746,
   84669, -5746,  1340,  1490, -5746,  4367, 99649, 24156, -5746,  3621,
   -5746,  3623,  3624,  3497,  3985, 24156, 24156, -5746,  3279,   409,
     382, -5746,  3633,  3640, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,  3639, -5746, -5746,   469,   585,  3641, -5746, -5746,
   -5746,  3643,   156, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  4292, -5746,   459, -5746, -5746, -5746, 24156,
    1388,  1500,  1531,  3659,   404,   517,  1535,  3307,  2085,  3649,
   38811, 99649,  4060,  3652,  1499,  4060,  3655,  1551,  1554,  1887,
    2408,  2483, -5746,   555, -5746,  1649,  1708, -5746, -5746,  3656,
    3657,  4060,  3658, -5746,  3660,  3666,  3667,  1709,   569,  3669,
   -5746, -5746, 21056, 21831, 22606,  3472,  3673, -5746, -5746,  1746,
    2514,  4060,  3675,  2521,  1787,  1991, -5746,  2112,  2004,  2023,
    3676,  3088,  2539,  2595, -5746, -5746, -5746, -5746,  3647,  2627,
    2709,  3680,  3677,  2710,  2782, 49345,  3683,  3690,  2831, 49345,
    2087,  2863, -5746,  3685,  2109,   626,  3692,  3693,  2864,  3698,
    2115, -5746, 99649, 97402,  3701,  3702,  1226,  3705,  2889,  5629,
    5629, -5746, 24156,  3711,   322, 99649,  2536,  1697, -5746,  3230,
   -5746, -5746, -5746, -5746,   518, -5746,  3715,  3230,  3721,  2960,
   17181, -5746,  1369,  1393, 32681, 32681,  3722, 32681, 32681,  1632,
     736,   736,  3707,  3707,   429,   568, 24931,  1632, 24931,  1632,
    3707,  3707,  3707, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,  4271,  3723,  3730,  3733,  3736,  1527,  3712, -5746, -5746,
   -5746, -5746, -5746, -5746,   507,  4124, -5746,  3930,  1209, 24156,
   -5746,  3745,  4496,  4499,  4501, -5746, -5746, -5746, -5746, 79426,
   79426,  3742, -5746,    20,  4103,  4404, 80924,  4410, -5746,  3749,
   46349, 46349, -5746,  3759, -5746, 24156,  3755,  3761,  3764,103394,
   -5746,  4427,   400, 77179,  2384, 79426,   360, -5746, 97402, 97402,
   -5746, 89163,  4428,   874,  4050, -5746,  3771,  3774, -5746,   400,
   -5746,  3765,  1322,   529, -5746,  3778,  3788, -5746, -5746, -5746,
   -5746, 24156,  3777, 97402, 97402, -5746, -5746, -5746, -5746, 97402,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  2621, 24156, 97402,
    1826, -5746, -5746, -5746,  1826, 97402,  1826, -5746,  2621,  4453,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    1826, -5746, -5746, -5746, -5746, -5746,  3965,  1216,  2504,  4061,
    4178,  1948, 49345,  1826,  1826, 24156, -5746, -5746, -5746, -5746,
    4324,  3716, 20281,  3795,  3797, -5746, -5746,  8070, 97402, 99649,
    4542, -5746, -5746, -5746,  7165, -5746, 83920, 91410, 49345, -5746,
   -5746, -5746,  2334, -5746, -5746, -5746, -5746, -5746,  2384,  2513,
    2678, -5746,  3806,  2384, -5746, -5746,  4498, -5746, -5746, -5746,
   -5746, -5746,  2621, -5746, -5746, -5746,  4014, -5746, 49345, 83920,
   35781, -5746,  3811, -5746,  3829, -5746, -5746,101896, -5746,  2621,
    2384, 49345,  1512,   308, -5746,  4556, -5746, -5746,  3929, -5746,
   -5746, -5746,  3815, -5746,  4239, -5746, -5746, -5746, -5746, -5746,
   -5746,  3816, -5746,  4482, -5746,  1852,   510, 97402,   368,    83,
   -5746, 97402, 97402, 49345, -5746, 97402,  2693, -5746, -5746,  2693,
   -5746, -5746, 49345, 97402, 97402,  2693, 24156, 45600, -5746, -5746,
   -5746, -5746, -5746, 45600, -5746,  1273, -5746,  4030,  1762,  1762,
   -5746,  3446, -5746, -5746, -5746,  4454,  4122,  4122, 45600,  4456,
    4782, -5746, 97402,  6250,   423, -5746, 53872, 97402, -5746,  2384,
   24156, -5746,  3853,  4208, -5746,  1103,  1182,   253, -5746,  4107,
     308, -5746, -5746, 59952,  4172, 59952, 59952, 99649,  4066, 24156,
   -5746,  4509,  3846,  2384, -5746, 30356,  2678, -5746,  2384, -5746,
   -5746, -5746,  1852,  2621, -5746,   400,   400,  4076,  4366,  4369,
    3979,  2621,  4376,  4378,  4379, -5746, -5746, -5746, -5746, -5746,
    4569,  3382,   226,  2200, 74183,  4326,    20,  4445,  3862, -5746,
   49345,  4525, -5746, -5746, -5746,  3867,  3863,  2384, -5746, -5746,
   -5746, -5746,  6868, -5746,  3886,  3887,  3888,  3889,  3891,  3897,
    3898,  3903,  3907,  3912,  3913,  3927,  3928,  3935,  3939,  3940,
    3941,  3943,  3944,  3945,  3946,  3948,  3949,  3951,  3952,   155,
   -5746, -5746,  3922, -5746, -5746, -5746, -5746, 97402,  4505,  3876,
    3901,  3906,  3950,  3953, -5746, -5746, 97402, -5746,  2276,  4352,
    4386, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, 77928, -5746,  2337, -5746, -5746,
    2363, -5746, -5746, -5746, -5746, -5746,  2388, 71187, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746,   613,   613,  3904,  3957,
   -5746, -5746, -5746, -5746, -5746, -5746,  4330, -5746,  3933, -5746,
   65195, -5746, -5746, -5746, -5746,  2860, -5746,  4258, -5746,  1762,
   -5746,  4401, 61450, -5746, 44851,  4149,  4564, -5746, -5746,  3938,
   49345, 80924, 79426, -5746, -5746, -5746, -5746,  3947,  1340,  7646,
   -5746, -5746,  4707, 74183,  4406, -5746,  3954, -5746,  3959,  4461,
    4463, -5746, 99649, -5746, -5746, -5746,  2384, -5746, -5746,  3968,
   -5746, -5746,  4032,  3911, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  3981,
    4247,  4364, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  4607,
   -5746, -5746, -5746, -5746,  2402,   359, -5746, -5746, -5746,107810,
  107810,107810, -5746,  4331, -5746,105641, 24156, -5746,  2130, -5746,
   24156, -5746, -5746, 24156, -5746,  2384,  3557,108549, 82422, -5746,
   82422,108549, 24156, -5746,  3975, -5746,  4612,  4613, -5746, -5746,
   -5746, 24156, -5746, 24156, 24156,  2196, 24156, 24156, 24156, 24156,
   -5746, 24156, -5746, 24156, 24156, -5746, 32681, -5746,  3971,  3980,
   -5746, -5746,  3982, -5746, 24156, 24156, -5746, -5746, -5746, 24156,
   24156, 24156, -5746, -5746,  3983, -5746, -5746, -5746, -5746, 24156,
   24156, 24156, -5746, 24156,  3828, 24156,  3969, 24156,  4153, 24156,
   -5746, 28031, -5746,  3984, -5746, -5746, 24156, 24156, -5746, 24156,
   24156, 24156, -5746, -5746, -5746, 24156, -5746,  4554, 24156, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, 24156, -5746,  2026,
   28806, -5746, 24156, 24156, 24156, -5746, -5746, 24156,  3978,  3987,
   -5746, 97402,  2695,  3758,   308,  3989, -5746, -5746,  3999,  4002,
    3088, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  1157, 32681,
     652, 32681,  1393,  3402, 17181, -5746,  1444,  1393,  5629,  5629,
   97402,  4716,  3995, -5746, 24156, 24156, 17956, 24156, 99649, 24156,
    3996,  4000, -5746,  3998, 32681, -5746, -5746,  4004, -5746,  2414,
    3758,  4089,  4458, -5746,  2384, 35781,  4513, -5746, 49345,  4514,
    4545,  4215, -5746, 79426, 74183,  4686,  4695, -5746,  2384, -5746,
    4034, -5746, -5746, -5746,  4036, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,   544, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, 79426, -5746, -5746, -5746, -5746, -5746,   400,
   -5746,  4039,  4045, -5746, -5746,   400,   400, -5746, -5746, 41092,
   -5746, -5746,  1135,  4338,  4604, -5746, -5746, 97402,  1241, 97402,
   -5746, 55392, 55392, 92159,  2384,    70, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  4064, -5746, -5746,
   -5746,  4808, -5746, -5746,  4453, -5746,  2624,  1948, -5746, -5746,
    2384, 39566,   618, -5746, -5746, -5746, 20281,  8068, -5746,  2419,
    4054, -5746, 49345,  4053,  4523, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  4059, -5746, -5746, 20281,  4090,
   -5746,  4178, -5746,  3947,  1769, -5746, -5746, 56912, 56912,  1882,
     225,   306,  1533,  2624, -5746, -5746,   487, -5746, -5746, -5746,
   -5746, -5746, -5746,  1358, -5746, -5746,  4178, -5746,    52,  2621,
    4120,   355,   308,  4315, -5746, -5746,  1852,   189,   189,  4662,
     510,  4533, -5746,  4326,  4745,  4669,  4671, -5746,  4569, -5746,
   -5746, -5746, 97402, -5746,  1685, -5746, -5746, -5746,   746, -5746,
   49345,  2198,  3273,  3273, -5746,  1762,   354, -5746, 32681,  4828,
   -5746,  4589, -5746, -5746, 45600,  4721,  4729, -5746, 45600, -5746,
   -5746,  2426, -5746, -5746, 78677, -5746, -5746, -5746,  2384,   302,
    2380, 24156, 97402, -5746,  3853,  4170, -5746, -5746,  1182, -5746,
   -5746, -5746, -5746, 59952, -5746, -5746, -5746,  1652,  4097,  2380,
    1821,  4102, -5746, -5746, -5746, -5746, -5746, -5746, -5746, 77179,
   78677, -5746,  4480,  4483,  1856, -5746, -5746, -5746, -5746,  2243,
     400,   400, -5746,   246,   400, -5746, -5746,  1144, -5746, -5746,
    1584,   421,  4569, -5746,  2621,  2621,  2621,  2621,   460,  2621,
    2621,  2434, -5746,  2621,   321, -5746, -5746, 83920, -5746,  4863,
    4867, -5746,  4869, -5746, -5746,   272, -5746,  2517,  1031, -5746,
     101, -5746,  4660, 97402,  4849,  3862, -5746,   438,  2289, -5746,
   24156, -5746,  4621,  4119,  4121,   308,  4123,   308,   308,  2621,
    2621,  4064,  2621,   308,  2621,  2621,  2621,  2621,  2621,  2621,
    2621,   308,  2621,  1166,  3626,   461,  2621,   308,  7382, -5746,
   -5746,  2451,  2181, 68191, -5746, -5746, -5746, -5746, -5746, -5746,
  106390, -5746, -5746, -5746, -5746, -5746, -5746,  4878, -5746, -5746,
   -5746, -5746, -5746,   505,  2798,   505, -5746,106390, -5746, -5746,
    3205, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   24156, 24156, -5746, -5746, 97402,  4880, -5746, -5746, -5746, -5746,
    4249, -5746, -5746, -5746,  4447, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,  3716,  1179, -5746, -5746, 44851,   511,  2624, -5746,
   59192,  4668,  4139, -5746,    20, -5746, -5746,   574,  4740, -5746,
    4130, -5746, -5746,   439,  4332,  4144, 62199, 74183, 74183, -5746,
    2846, -5746, 49345, -5746,  4781, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, 97402,  2289,  3865, -5746, -5746,
   -5746, -5746, -5746,  4571,107810,  4129,  2384, 24156,  2384,  2384,
   24156,  3200,  3200,  3205,  3225, -5746,  4833, -5746,  4775,  3200,
    3200, -5746,  3200,  4777,  3200,  3200, -5746,  4147, -5746, -5746,
    4148,  4152,  4156,  3088, -5746, 24156, 24156,  2924,    88,    88,
   24156,  2221,  2226,  1338, -5746,  2940,  2947,  2973,  1207, 99649,
   -5746, -5746,  2975,  3029,  3045,  3060,  3071, -5746,  2233,  2658,
    2248,  2384, 24156,  2384, 24156,  2384, 24156,  2384, 24931,  3112,
   -5746,  2454,  4195, -5746,  2482,  4390,  3157,  3159,  2497,  2919,
    3075,  2502, 24931,  3162,  3163,  2260,  2350,  3187, 99649, 97402,
    4151,  4150,  4150,   599, -5746,  4159, -5746, -5746, -5746,  4161,
   -5746, 24156, 24156,  4162,  3230, -5746, 24156,  1393, 32681,  1469,
   32681, -5746, -5746,  4271, -5746, 24156, -5746,  4735,  4164,  4206,
    4168,  4171,  3472,  4173,  4175,  4176,  4179,  2384, -5746, -5746,
   97402,  4177,   672, -5746,  4064, -5746,  4805, -5746,  4894,  4180,
    4190,  4181,  4004, -5746, 79426, -5746, 49345, -5746,  4842,  3607,
   -5746, 74183, 74183, -5746, 86167, -5746, 60701, 97402, 97402, -5746,
   24156, -5746, -5746,   360,  4940,  4942, -5746, -5746, -5746, -5746,
      93,  4741, -5746, -5746, -5746, -5746, -5746,   400, -5746,   400,
   -5746,  3788, -5746, -5746, -5746, -5746,  3713, -5746,  1216, -5746,
   -5746, -5746,  1826,  4184, -5746,   400,  1514, -5746, 20281,  4188,
    4189, -5746,  4800, -5746,  1157,   342, -5746,  3716, -5746,  4672,
   -5746, -5746,  4193, 92908, -5746,  4199, -5746, -5746,  4756, -5746,
   -5746,  4220,  4202, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    1216,  4254,  4436, -5746, -5746, -5746, -5746, -5746,  4051, -5746,
    4300,  4301, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, 49345,  4792, 74183,  1031,  4605, 49345, 49345,  9037,  9468,
    4569,  4228, 97402, -5746,  1960,  2621, -5746, -5746,  1685, -5746,
    1960,  3862,  4230,   536,  4230, -5746, -5746, -5746, -5746,   672,
    1762,  1762,  4373,  4719, 45600, 45600,  4788,  4723, 24156,  4236,
   -5746, 97402, -5746, -5746,  4643, -5746, -5746, 24156, -5746, -5746,
   -5746, -5746, -5746,  4973,  4240, -5746, -5746, -5746, -5746, -5746,
   -5746, 24156, -5746, 58432, 24156,  4244,  4243, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,  1158,  2117,  2190, -5746, -5746,  2190,
    2117, -5746, -5746, -5746, -5746,  2026,  2026, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  3382, -5746,
   -5746,  4996,   532, -5746,  4826, -5746, -5746, -5746, -5746,  1152,
     308,   308,   308,  3626,  2265, -5746,  2517,  1910,  4586, -5746,
    6806,  1393,  2073,  4749,  2303, -5746,  2509, -5746,  4986, -5746,
     209, -5746, -5746,  2384, -5746,   405,   442, -5746,   450, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, 97402, -5746,  4830,
   -5746, -5746, -5746,  4720,  3212,   317, -5746, -5746, -5746, -5746,
    2510, 70438,  4252, -5746, -5746, -5746, -5746,  4146,  2384,  2384,
   -5746, -5746, 65195, -5746, -5746, -5746, -5746,  1247,  2624,  1219,
   97402,  4603,  4795, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   24156, -5746,  4918, -5746, -5746, -5746, -5746,    83,    83, -5746,
   -5746, -5746, -5746,   342, -5746, -5746,  4781,  4544, -5746,   449,
   24156, -5746, -5746, -5746, -5746, -5746, -5746, 97402,  1338,  2384,
   -5746,   505, -5746, -5746,  3200, -5746,   505, -5746, -5746, -5746,
   -5746, -5746, -5746,   505, -5746, -5746, -5746, -5746,  4262,  5629,
    5629, -5746,  4987,  4797,  4887,  3217, 24156, 24156, -5746, 24156,
   -5746, -5746, -5746,  1859,  4267,  4747, -5746, -5746, -5746, -5746,
   -5746, -5746, 24156, 24156, 24156,  2384,  2384,  2384,  5629, -5746,
   -5746,  4067, -5746, -5746,108549, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,   461,  5629, -5746, -5746, 24156,
   24156, -5746, -5746, -5746, 97402,  3758,  4272,  4557, -5746, -5746,
   -5746,  3758,  4420, -5746, -5746,  3758,   308, -5746, -5746, -5746,
    2545,  3230, -5746, 24156,  1393,  4861,  4278,  5005,  4282, -5746,
   -5746, -5746, -5746, -5746, -5746, 24156, 86167, -5746,  4284,  4283,
   -5746, -5746, -5746,  4724, 24156,  4909,  4862, -5746,  3758, 97402,
   -5746, -5746, -5746, 74183,  3749,  3749, 93657, -5746, -5746, -5746,
   -5746,  1841,   400,   400, -5746,  2384, -5746, -5746,  4294,  4295,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  1216, -5746, 39566,  2624, 23381,
   -5746, -5746, -5746, 20281, -5746,  4296, 39566,  4771, -5746, -5746,
   -5746,  4668,   228, -5746, -5746, -5746,  4672, -5746, 94406, -5746,
    4302, -5746,  4297, -5746,  1820,  4638,  4916,  5167, 56912,  4304,
   -5746, -5746, -5746,  4323,  4327,  4329, -5746,  4306, -5746, -5746,
   -5746, 49345, -5746, -5746,  4339, -5746, -5746, 42604,  4935,  4360,
    4685, 49345,   400,   400,   400,   400,   400,   400,   400,   400,
     400,   400,  4689,   400,   400,   400,   400,   400,   400,   400,
     400, -5746,   400,   400,   252, 97402,   400,   400, -5746, -5746,
   -5746,  4896, -5746,  7911, -5746,   400, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,   489,  4908,
   -5746, -5746,  1336, -5746, -5746,109297,  5066,  4333, -5746,  4873,
   -5746, -5746, -5746, -5746, -5746, -5746,  4442,  4873,  3862,  2732,
   -5746, -5746, -5746,  4831, -5746, -5746, -5746,  4834,  2384, 97402,
   -5746, -5746,  2261,  4956,  2380,  4342, 97402,  2380,  1182,   253,
    2384, -5746, -5746, -5746,  3487,  3731, -5746,  3233,  3064, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,   343,
   -5746, 83920, -5746, -5746, -5746, -5746, -5746,  5097,  5098, -5746,
   -5746, -5746, -5746,  4538,   759,  5104,  1465,  4920,  4752,  4929,
    2252,  3006,   400,  4931,  5086, -5746,  1300,   400,  4934,  4998,
    4446,  5000,  4944, -5746,  4448,  4752,  4945,  4568,  4948,  4949,
    4950, -5746, -5746,  9468, -5746, -5746, -5746, -5746,   960, 47098,
   -5746, -5746, -5746, -5746, -5746,  4562, 24156, 24156,  4966, 97402,
    4967, -5746,  4783, -5746, 97402, -5746,  1157, -5746, -5746, -5746,
    4683, -5746,  2551, -5746, -5746,  2554, -5746, -5746,  2564, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  4921, 97402, -5746,
  106390,  4381, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  2334,
   -5746,  2334, -5746,  1247,  1219, -5746, -5746,  5047, -5746,  4737,
    3407, -5746,  1157,  2384,  4590,  4866,  4866, -5746, -5746, -5746,
    4980, -5746, -5746, -5746, -5746,  5031,  2384,  2289,107810,  4755,
   -5746, -5746, -5746, -5746, -5746, -5746,  4398,  4399, 24156,  2798,
    4887, 59952,  4400, -5746, -5746,  3227,  2395,  2578,  4688,  4640,
   -5746,  4578, -5746,  3256,  2384,  2384,  1771,  3205, -5746, -5746,
   -5746, -5746,  5041,  3200, -5746,  5127, -5746,  3200,   505, -5746,
   -5746, -5746, -5746, -5746,  4416,  2617,  1831,  3274,  3297, -5746,
   -5746, -5746,  4417, -5746, -5746,   619, -5746,  4408, -5746,  2623,
    5138,  2305, 24156, -5746,  4421, -5746, -5746, 97402, -5746, -5746,
    5629,  1210, -5746,  2628, -5746, -5746, -5746,  4422,  3749, -5746,
   -5746, 62948, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,  4178, -5746,  4187,  2678, -5746, -5746, -5746, -5746,
    4803,  4426,  4429, -5746, -5746, -5746,  4423,   156, 39566, -5746,
   -5746, 65195, -5746, -5746,  4433,  4432, -5746, -5746, -5746, 92908,
   -5746,  2641, -5746, -5746,  5175, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, 20281,  2621,  2621,  2621,  2339,  4438, -5746, 83920,  4441,
    4444, 50094,  2165, 97402,  2644, -5746, -5746, -5746, -5746, -5746,
     481, -5746,  1761,  2693,  2334,  2334, -5746,  4440, 49345, -5746,
     400, -5746,   491,   495,   496,   504, -5746,  4064,   308,   308,
    2621,  2621,   400,   308, 83920,  1543,   308,  4064,  4064,   506,
    2621,  1576,   491, -5746, -5746, -5746,   308,   491,   256, -5746,
   -5746,  4727, -5746, 73434,  9468, 97402,  3568, -5746, -5746,  1784,
    4559, -5746, -5746, -5746,  4807,  1336, -5746, -5746, -5746,  4449,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,   297,109297,  1400,
   -5746, -5746, -5746,  4450, 97402, -5746, -5746,  2621, -5746,  5187,
    5212, -5746, -5746,  4864, 24156,  4457, 24156,  4459,  2649,  5185,
    5186,  5136,  5189,  2261, -5746,  2391, -5746, -5746, -5746, -5746,
   -5746, -5746,  1182, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  4467, -5746,
   -5746, -5746, -5746,  4806, -5746,  5227, -5746,  4923, 47847,  2693,
   -5746,   636,  4510, -5746, -5746, -5746,  5119,  3026,  3026,   290,
    3026, 94406, 97402, 49345,   423,  2094,  5101,  2369,  1964,  4516,
    5037,  3026,  3026, 95155,   290, 39566, -5746, -5746, -5746,  3026,
   -5746,  3026, 49345, 95904,   290, -5746, -5746, -5746, 97402, -5746,
    3026,   290, -5746,   290,   290, 94406, -5746,  9172, -5746, -5746,
   42604,  1161, -5746,  2384,  5629,  4874, -5746, -5746,  4593,  2621,
    4843, -5746, -5746,  4954, -5746, 97402,   227, -5746,   308, -5746,
     308, -5746,   308, -5746,   323, -5746, 97402,  5144,  5144, -5746,
   -5746, -5746, 32681, -5746,  3759, -5746, -5746,   156, -5746, -5746,
    2246, -5746, -5746,  4845,  4668,  4992, -5746, -5746, -5746,107810,
   -5746, -5746,  4484,  2380, -5746,  4487, -5746, -5746, -5746, -5746,
   24156, -5746,  4725, -5746,  4835, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  4064, -5746, -5746, -5746,  4488,
   -5746,   308, -5746, 24156, -5746, -5746,  4491,  4142,  2380, -5746,
   -5746,  4591,  4458,  4494, -5746,  4862, 97402, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,  4564, -5746, -5746, -5746, 39566, 63697,
    4497,  4500, -5746,   400, -5746,   168, -5746, 97402, -5746, -5746,
    4064,  4865, -5746,  2652, -5746, -5746, -5746, -5746, 97402,  4502,
    4700, 97402, 97402, -5746, -5746,  4504, 97402, -5746, -5746, -5746,
   42604,  4506,  5133,  5135,  2334, -5746,  2693,  5060, 50094, -5746,
    2693,  2693, 68940, 97402,  4512,  2621, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  4515, -5746, -5746, -5746, -5746,
   -5746,  2621, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746,  5249, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  4896,  4518,  4517,
   -5746,   613, -5746, -5746,  5199,  1960, -5746, -5746, -5746,  4731,
    2073, 97402,  4528, 97402,  4532, -5746, -5746,   217,   437, -5746,
   -5746, -5746, -5746, -5746,  1400, -5746, -5746, -5746,  4537, -5746,
   69689,  3568, 97402, -5746, 97402, -5746, -5746,  4521,  4540, -5746,
   97402,  2384, 97402, -5746,  2798,  2798,  5240,  2798, -5746,  5269,
    5271,  2391, -5746, -5746,  5307,   759,  4924,  1910,  1393,   290,
    1393,  5213, -5746, -5746, 97402, 50094, 94406, 50094, -5746,  5053,
   -5746, 78677, 50094,  3026, 97402, -5746,  5215, -5746,  5183, 50094,
   50094, -5746, -5746, 94406,  4553, -5746,  2380,  2674, 97402, 50094,
   -5746, -5746, -5746,  3758,  5029, 50094, 94406, -5746, 94406, -5746,
    5833,  5058,  3854, -5746,  4558,  4560, 97402, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,  1213, -5746, -5746,  2667, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,   222, 97402,   326,  2463, -5746,
   -5746, -5746, -5746,  2394, -5746,  4761, -5746,  2246, -5746, -5746,
   -5746, 49345, -5746, 24156, -5746, -5746,  3311, -5746, -5746,  4561,
   -5746,  4567,  4097, -5746,  4827,  4704,  4496,  4499,  4501,  4753,
    4915, -5746,  4757, -5746,  4981,  4724,  4576, 32681, -5746, -5746,
    1857, -5746, -5746, -5746, -5746, 99649, -5746, -5746,  4570, -5746,
   39566, 20281, -5746, -5746, -5746,  4994, -5746,  2672,  2380, -5746,
    4581, 97402,  4582,  2704,  4583, -5746, 97402,  4585, -5746, 24156,
    2693, -5746, -5746, 50094, 49345, -5746,  5071,   -43, 50094, 50094,
   -5746,  4580,  5305, -5746, -5746,  4584, -5746, -5746, 49345, -5746,
   -5746,   228,   256, -5746, 97402, -5746, -5746, -5746, 97402,  5174,
    4966, -5746, -5746, -5746, -5746, 97402, -5746,  4592, -5746,  4595,
    4953, -5746, 97402,  3212,   328, -5746, -5746,  1960, -5746, -5746,
   -5746, -5746, -5746,102645,  7563,  2751,  2761, -5746, -5746,  2798,
   -5746,  2798,  2798, -5746,  4597, -5746, -5746, -5746,  5259, -5746,
    5261, -5746,  2309,  1937, -5746, 50094,  1313,  5106,  5103,  5319,
   -5746, 50094,  4432, 97402, -5746, -5746,   574, -5746, 39566, -5746,
   -5746,  5108,  5109, -5746,  5112,  1161, -5746, 97402, -5746, -5746,
   -5746,  4708, -5746,  8070,  4811,  5329,  5330, -5746, 97402, 96653,
   -5746, -5746,  5389,  4675, 97402,  5341, -5746,  5344,  4622,  4623,
   -5746, 32681, -5746, -5746,  5257, -5746,  3716,  2380, -5746, -5746,
   -5746,   125, -5746,  5369,  1593, -5746, -5746,   846, -5746, -5746,
   -5746, -5746, 97402,  4631,  4718, -5746, -5746,  4705, -5746, -5746,
    3699, -5746,   124, 64446, -5746, -5746, -5746, -5746,    20, 97402,
   -5746,  5392,  4634,  3382,    20,    20,  4635, 97402,  3332, 50094,
    5071,  1282,  4639,   189, -5746,   189, -5746, -5746,  2727, 71187,
   -5746, -5746,  4573, 97402,  4641,  5410, -5746, -5746, 97402, 84669,
   -5746,  4644, -5746,  2303, -5746,  4228,  4230, -5746, -5746, -5746,
   -5746, -5746, -5746, 97402, -5746, -5746,  5176, 97402, -5746,  5217,
    2766, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   50094,  1348, -5746, -5746,  5287, -5746,  5333,  5338,  1161, -5746,
   49345,  5223, 77179, -5746, -5746, -5746,   290, -5746, 97402, 50094,
   49345, -5746, -5746,  4432,  1358, 24156,  5010,  5437, -5746,  4859,
    4860, -5746, -5746,  2767, -5746, -5746,  4726, -5746,  5434, -5746,
   -5746, 92908, 92908,   672,  5154, -5746, -5746, -5746,  4827, -5746,
   -5746,  4802,  2047, -5746,  2790, -5746, -5746, -5746,  3758, -5746,
    4665, -5746,  5035,   400,   400,  5036,   400,   400,   400,   400,
    4678,  3699, -5746, -5746, -5746,  5025, -5746, -5746, -5746,  3458,
    2380,  4674, 97402,  4681,  2795,  2083,  2612, 97402,  4676, -5746,
   -5746, -5746,   189, 97402,  5279, -5746,  4684, -5746,  4687,  4690,
   -5746, -5746,  5311,  2621, -5746,  4765, -5746, -5746,  2727, -5746,
   -5746, -5746,  4730,  5316,  5278, -5746, 83920, 35006, -5746,  5184,
   -5746,  5139,  5384, -5746,  5431,  5335, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, 97402, -5746,  4783, -5746, -5746,  4873,
   -5746, -5746, -5746, -5746,   330,  5437,  2732, -5746,102645, 10513,
    5305,  3758,  4862, -5746, -5746, -5746, 35006, -5746,    97,  4862,
   -5746, -5746, -5746, -5746,    97,  5332, -5746,  2384, 24156, -5746,
   -5746, -5746, -5746, -5746, -5746, 96653, -5746,  4758,  4702,  2803,
   -5746,   423, -5746, -5746, -5746, -5746, -5746, 97402, -5746,  4706,
   -5746, -5746,   116,   400,  2621,  2621,   400,  3840,  3840,  3758,
   83920,  4789, -5746, -5746,   400,   189,  2621,   400,   189, -5746,
   -5746,  1426,  3458, -5746, -5746, -5746, -5746, -5746, -5746,   721,
      20, -5746,  4903,  1426,  2083, -5746, -5746,  1426,  2612, -5746,
   -5746,  4709, 97402,  4711,  4713, -5746,  2812, -5746,  1002,  5293,
   97402,  4715, 97402, 97402, -5746, -5746, -5746, -5746, -5746, -5746,
    5074, -5746,  4717,  4722,  3626,  3626, 17181, -5746, -5746, -5746,
   -5746, -5746, -5746,  5309, -5746,  4766,   -32, -5746,  5156, -5746,
   49345,  5087,  3568, -5746, 97402, -5746, 97402, -5746,   275, 97402,
   -5746, -5746, -5746,  5306, -5746, -5746, -5746, -5746, -5746,  2177,
   -5746, -5746,  2827, -5746,  4776,  4779, -5746,    97, -5746,  4733,
    2384, -5746, -5746, -5746, -5746, 39566, -5746,  4718, -5746, -5746,
    2838, -5746, 29581, -5746, -5746, -5746,  2621, -5746, -5746,  2621,
   -5746, -5746, -5746, -5746, -5746,  2841, -5746, 83920, -5746, -5746,
     308, -5746, -5746,  5345,  5173, -5746,  4936,  3458,  2963, -5746,
   -5746, -5746, -5746, -5746,  4739, 97402, 97402,  4738, -5746, 97402,
   -5746, -5746, -5746,  1879, -5746,  2855, 97402,  2868,  4742, -5746,
   -5746, -5746, -5746,  4746,  4748, -5746,   109, -5746, -5746,  5403,
   -5746,  3568, -5746, -5746, -5746, -5746, -5746, -5746,  5519,  4864,
   -5746,  5321,  2732, -5746, -5746, -5746, -5746, -5746, -5746,  4862,
    4751, -5746,   400,  5286, -5746, -5746,  4706, -5746,  4754, -5746,
     672, -5746, -5746, 83920, -5746,  4789, -5746, -5746, -5746, -5746,
   -5746, -5746,  1426, -5746, -5746,  2872,  4634, 97402, -5746,  1363,
    1363,  3458,  2880,  2083,  2612, -5746,   531, -5746,  1696,  1696,
    1695, -5746, -5746, -5746,  4813, -5746,  2732,  1333, -5746,  2925,
   39566, 20281,  5062,  4643, -5746, 29581,  4759,  3357, -5746, -5746,
   -5746,  5060,  4760,  4634, -5746, -5746,  2220,  5208,  5348,  5350,
   -5746,  3458, -5746, -5746, -5746,  4768, -5746,  1696, -5746, -5746,
   -5746, -5746, -5746,  1734,  5124, -5746, -5746, -5746,  3799, -5746,
   -5746, -5746,  5358,  1333,  1333, -5746, -5746, -5746,  5499,  4956,
   -5746, -5746, -5746,  3357, -5746, -5746,  3458,  4780, -5746, -5746,
   -5746,  5268,  5469, -5746, -5746, -5746, -5746,  1734, -5746, -5746,
    5459, -5746, -5746, -5746,   413,  5368, -5746,  5370, -5746,  2798,
    5432, -5746, -5746,  3458,  1363,  1363, -5746,  4925, -5746, -5746,
    5461,  5146, -5746,  5550,  4796, -5746, -5746, -5746, -5746,  1305,
   36541,  5324,  1661, -5746, -5746, -5746, 83920, -5746,  2933, -5746,
   -5746, 39566, -5746, -5746, -5746, 83920, -5746, -5746, -5746, 37301,
    4794, -5746,   400, -5746, -5746,  8070, -5746, 39566, -5746,  5437,
   -5746, 20281, -5746, -5746, -5746
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
       0,  3695,     2,     0,  2562,  2563,  1046,  2353,     0,   453,
       0,  1279,   635,  2806,  3904,  2199,  2347,  2346,  2120,  2821,
     493,   223,  2869,   399,  2122,  2422,     0,     0,   489,  2922,
    1295,  2940,   779,   519,  2947,     0,   342,     0,     0,   496,
     340,   223,  1344,  3326,  2246,     0,  3433,  2186,     0,  1342,
     491,  2520,  2774,  2819,  2820,  2849,  2930,  2682,  2941,  2964,
    3077,  2992,  2125,  2759,  2758,  2760,  3063,  2761,  2762,  2763,
    2764,  2765,  3064,  2657,  2766,  2767,  2768,  2770,  2769,  2771,
    2772,  3065,  2658,  3590,  3696,  2659,  2731,  2773,  2733,  2732,
    2775,  2660,  2661,  2776,  2777,  2778,  2780,  2779,  2663,  2662,
    2781,  2783,  2782,  2734,  2735,  2784,  3066,  2785,  2787,  2664,
    3061,  2665,  2666,  2667,  2786,  2668,  2788,  3595,  2789,  2790,
    2669,  2791,  2792,  2793,  2794,  2796,  2795,  2797,  2798,  2800,
    2801,  2802,  2799,  2803,  2804,  2807,  2805,  2737,  2736,  3067,
    2670,  2808,  2809,  2810,  2811,  2813,  2814,  2812,  2815,  2092,
    2816,  2817,  2818,  2826,  2827,  2829,  2828,  2738,  2830,  2831,
    2832,  2834,  2833,  2835,  2837,  2671,  2672,  2673,  2836,  2838,
    2822,  2823,  2824,  2825,  2840,  2839,  2841,  2842,  2843,  2739,
    1295,  2675,  3060,  2844,  2845,  3766,  2846,  2847,  3068,  2676,
    2728,  2848,  3435,  2851,  2850,    85,  2852,  2678,  2853,  3069,
    3070,  2854,  2855,  2857,  2859,  2856,  2860,  2861,  2867,  2679,
    2858,  2862,  2863,  2864,  2865,  2866,  2868,  2740,  2870,  2871,
    3071,  3072,  2872,  2873,  2874,  2875,  2729,  2876,  2877,  2878,
    2879,  2892,  2893,  2883,  2884,  2886,  2887,  2890,  2885,  2891,
    2896,  2895,  2897,  2898,  2899,  2900,  2901,  2894,  2881,  2888,
    2889,  2882,  2902,  2903,  2880,  2904,  2906,  2905,  2907,  2741,
    2908,  2909,  2910,  2911,  2912,  3073,  2913,  2914,  2916,  2915,
    2917,  3074,  2918,  2919,  2920,  2725,  2921,  2742,  2743,  2923,
    2924,  3075,  2925,  2926,  2932,  2933,  2934,  2928,  2927,  2929,
    2931,  2744,  2745,  2746,  2935,  2936,  2937,  2939,  2938,  2681,
    2680,  3076,  2683,  2942,  2943,  2684,  2944,  2946,  2945,  2727,
    2685,  2948,  2949,  2951,  2950,  2686,  2687,  2688,  2952,  2953,
    2954,  2955,  2956,  2957,  2958,  2959,  2960,  2961,  2962,  2963,
    2747,  2748,  2965,  2966,  2967,  2969,  2968,  2970,  2971,  2975,
    2972,  2973,  2974,  2976,  2689,  2977,  1295,  2978,  2979,  2980,
    2690,  2982,  2981,  2691,  2983,  2984,  2985,  2986,  2987,  2726,
    3595,  2988,  2989,  2991,  2749,  2990,  2993,  2994,     0,  2995,
    2996,  3078,  2692,  2997,  2998,  2750,  2730,  3088,  2693,  3079,
    3000,  2434,  2757,  2999,  3001,  2695,  2696,  3002,  3003,  3004,
    2694,  3005,  2697,  3080,  3006,  3008,  3007,  3009,  3010,  3011,
    3012,  2698,  3013,  3014,  2699,  3015,  2700,  3016,  3017,  3081,
    3018,  3020,  3019,  3021,  3022,  3023,  3024,  3025,  3026,  3028,
    3030,  3029,  3027,  3031,  3032,  2751,  3033,  2701,  2752,  3083,
    3084,  2753,  3034,  3035,  3036,  3037,  3082,  2226,  3038,  2704,
    3039,  3040,  3042,  3041,  2702,  2703,  3043,  3044,  2708,  3085,
    3045,  3051,  3086,  2754,  2755,  3046,  3047,  3058,  3048,  3050,
    3049,  3053,  3052,  3059,  3087,  3767,  2705,  3054,  3055,  2706,
    3056,  2707,  3057,  2756,     0,     0,     3,  3697,    22,     0,
      45,    27,    33,    17,    21,  2108,    16,    47,    60,    53,
      30,  3891,  3892,  3894,    43,  3626,    42,    11,    63,    64,
      19,    50,    12,    15,    18,    41,    49,    37,    44,    57,
      58,  1365,  1341,  1369,  1340,  1336,  1332,  1351,  1352,  1353,
    1359,    25,    26,    34,    51,    68,    23,    65,    61,    24,
    2353,    13,    28,    29,    14,    52,    46,    38,    62,    69,
      39,     0,  3770,  3764,  3762,  3765,  3760,  3761,  3062,  2656,
    3763,    59,    40,    67,    32,    54,    31,     9,    10,    20,
      55,    56,    48,    70,    35,    66,    36,     8,  3771,     0,
    3698,   168,  3592,  3893,  2620,  2619,  2658,  3722,  2659,  2661,
    2712,  2662,  2715,  2716,  2709,  2670,  2717,  3723,  2673,  2674,
    2713,  2617,  2676,  2718,  2677,  2679,  2710,  2711,  2719,  2714,
    2688,  2720,  2690,  2721,  2722,  2723,  2698,  2699,  2724,  2621,
    2703,  2618,  2707,  2567,  2583,     0,  2584,  2614,  2612,  2616,
    2610,  2615,  2608,  2609,  2613,  2611,  1090,     0,     0,     0,
       0,  2118,     0,  2118,  1184,  1410,  3624,  3625,  3626,  1296,
       0,  1297,     0,     0,   253,   423,   131,     0,     0,  3696,
    2221,  2118,  2096,   230,   227,  2118,   231,  2118,   226,  2118,
    2118,  2121,  2118,  2118,  2118,   228,   229,     0,     0,     0,
     423,  2128,  2424,     0,  2444,  2445,  2439,  3423,  3424,  3418,
     401,     0,     0,     0,  2320,  2319,     0,     0,   327,   339,
     342,   335,   338,     0,   223,  2118,   401,   341,   342,     0,
    1374,     0,  2325,   342,     0,  2197,  2438,     0,   423,  2521,
    2518,  2128,  2395,  2397,     0,  2393,  3595,  1487,  1486,     0,
    3900,  3902,     0,  2573,  1274,  1306,  1230,  3596,  3597,     0,
      77,    80,  2359,   366,     0,     0,     0,   633,     0,     0,
    1238,     0,  3597,  3607,  2436,     0,   131,  1209,     0,   131,
    2229,  2118,  2118,  3678,  3679,     0,     0,     0,  3673,     0,
    3680,     0,  1369,     0,  1355,     1,     5,     0,     0,   633,
     998,   633,   999,     0,  1000,   633,   633,     0,     0,     0,
       0,  3631,  3624,  3625,  3626,     0,  2078,  1916,  1370,  1369,
    2008,  2012,  3612,  3612,  3612,     0,     0,  2008,  1360,  2824,
    3060,  2946,     0,  2338,  2352,  2336,  2556,  1338,  1334,  3772,
       0,     0,  2668,  1049,  1091,  1054,   237,     0,     0,  1056,
       0,  1067,  2589,  2588,  2587,  1064,   223,     0,  1186,     0,
       0,     0,  3632,  3631,     0,  1251,  2340,  2341,  2342,  2343,
    2344,  2345,  2348,     0,   259,   423,   455,  1413,   466,   457,
     460,     0,   132,   133,  1277,  1280,     0,   636,   318,   320,
       0,  3739,   317,   319,     0,  3738,     0,  3868,     0,     0,
     397,   305,   395,  3735,  3732,  3737,  3733,  3736,  3734,  3857,
     396,  3769,     0,   309,  3905,  3858,  3859,  3861,     0,  2225,
    2224,     0,  2223,  2200,     0,  2221,     0,  2116,   232,     0,
     233,     0,   223,     0,   223,  2101,     0,  2118,  2118,   494,
    3768,     0,  3743,  3483,  3501,  3502,  1427,  3498,  3503,     0,
    3500,  3495,     0,     0,  3497,  3494,     0,     0,  3522,  3496,
    3499,  2659,  2792,  2833,  2673,  2841,  2842,  2956,  2960,  2965,
    2976,  2980,  2723,  2695,  3021,  3476,  3464,  3478,  3477,     0,
       0,  3481,  3486,     0,  3485,     0,     0,  2130,  2425,  2426,
    2430,     0,  2448,     0,     0,   414,     0,     0,     0,     0,
    3890,   403,   404,     0,   408,     0,   401,  3888,  3880,     0,
     423,  3887,  3882,  3881,  3883,  3884,  3885,  3886,   434,     0,
     435,   436,  3889,   490,  3876,  3877,     0,     0,   401,  3778,
       0,  3878,  3874,  3875,  1293,  1722,     0,  2495,  2564,  2565,
       0,  2508,  2513,  2514,  2506,  2507,  2511,  2487,  2510,  2486,
    2512,  1489,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1427,  1427,  1427,  1424,     0,     0,     0,     0,
       0,     0,  2504,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1424,     0,     0,     0,     0,     0,     0,
    1424,     0,     0,  2503,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1620,  2505,  1427,  1424,
    1424,     0,     0,  1427,     0,     0,     0,  3063,  2657,  3065,
    2712,  2664,  2665,  2666,  2667,  2709,  2736,  3067,  3068,  3069,
    3071,  3072,  3073,  3074,  2924,  3075,  3076,  2727,  2954,  2749,
    3078,  3088,  3079,  3081,  2752,  3083,  3084,  2753,  3082,  2724,
    3085,  3086,  3087,  2705,  2756,     0,     0,     0,     0,  1488,
       0,     0,  1367,  1564,   780,  1434,  1446,  1462,     0,  1562,
    1561,  1565,  1567,  1573,  1481,  1595,  1533,  1534,  1536,  1535,
    1540,  1541,     0,  1698,  1542,     0,     0,  1539,  2500,  1538,
    1537,  2501,  2502,  1532,  2542,  2572,     0,     0,  2566,  3062,
    2656,   521,   520,     0,   361,   354,   349,   357,   351,   353,
     352,   358,   359,   360,   355,   350,   356,   343,     0,   328,
       0,   336,  3608,     0,  1298,   401,   497,   362,  3483,  2760,
    2960,  3456,     0,  3463,     0,  3623,  3617,  3620,  3619,  3615,
    3618,  3616,  3621,  1395,  3622,  1394,  1345,  1375,  1392,  1393,
       0,     0,     0,  2646,  2645,   915,  2643,  3347,  3348,     0,
    2647,     0,     0,  3349,  3013,  3034,  2644,     0,  2578,     0,
    2579,  2640,  2638,  2642,  2641,  2635,  2636,  2639,  3327,  3332,
    3328,  2637,     0,  2353,     0,     0,  2333,   996,   995,     0,
       0,     0,     0,  2268,     0,   915,  2333,  2269,     0,  1973,
    2323,  2326,     0,  3351,  2282,   997,  3352,  2319,     0,  2254,
    2270,  2231,  2275,   131,  3353,   131,  2322,  1973,  2333,     0,
    2247,     0,     0,     0,  2353,  1409,     0,   337,  3434,  2198,
    1182,  2166,  1343,  2152,     0,   492,     0,  2133,     0,  2394,
    3591,  3901,  3798,     0,     0,     0,     0,  3600,  1764,  2093,
       0,    81,    76,     0,   363,     0,     0,  2561,  3436,    86,
       0,     0,  3692,    74,     0,  2412,     0,  2410,  2407,  2409,
       0,  3600,     0,  2435,  1216,  1216,     0,     0,  1208,  1210,
    1211,  1216,  1216,  2230,     0,     0,     0,  2494,  2492,  2493,
    2574,  3675,  2491,  2490,  3684,  3686,  3669,     0,  3672,  3671,
    3681,  1358,  1357,     6,    71,     0,   142,   633,   223,   223,
     633,   167,   148,   151,   633,   633,   633,   160,   162,   633,
     633,     0,   225,     0,     0,  3631,  1373,  2869,     0,     0,
    1385,  1371,  1809,  1372,  1841,  1811,  1779,  1775,  1774,  1837,
    1838,  1840,  1839,  1842,  1844,  1834,     0,     0,  2091,     0,
    2086,  1917,  1922,  1916,     0,     0,     0,     0,     0,     0,
    2007,  1973,  2018,  1978,  2009,  1337,  2005,     0,  1333,  1398,
    1398,  3614,  3613,  3611,  3610,  3609,  2010,  1356,  1364,  1362,
    1363,  2011,  1354,     0,  2350,  2558,     0,     0,  2355,     0,
    2008,  2012,  1412,     0,     0,  2157,  2156,  2159,     0,   930,
       0,   238,     0,  3629,  3630,  3628,  1427,  2590,  2593,  3627,
    2594,   238,  2119,     0,     0,     0,  2118,  1190,  1191,  1185,
    1187,  1189,     0,     0,     0,     0,  2354,     0,   255,   260,
     254,   464,     0,     0,  3758,     0,   461,    87,     0,  1281,
    2109,  2111,  3871,     0,  3089,  3090,  3091,  3092,  3093,  3094,
    3096,  3097,  3095,  3098,  3099,   861,   884,  3100,  3101,  3102,
     884,   901,  3103,  3104,  3105,  3106,  3107,  3108,  3109,  3110,
     847,  3111,  3112,  3113,  3114,  3115,  3116,  3117,  3118,  3119,
    3120,  3121,  3123,  3122,  3124,  3125,  3126,  3127,  3128,  3129,
    3130,  3131,   867,  3132,  3133,  3134,  3135,  3136,  3137,  3139,
    3138,  3140,  3141,  3142,  3143,   863,  3144,  3145,  3146,  3148,
    3147,  3149,  3150,  3151,  3152,  3153,  3154,  3155,  3156,  3157,
     867,  3158,  3159,  3160,  3161,  3162,  3164,  3163,  3167,  3168,
    3169,  3170,  3171,  3172,  3173,  3174,  3175,  3176,  3177,  3178,
    3179,  3180,  3181,  3182,   857,  3183,  3184,  3185,  3186,  3187,
    3188,  3165,  3189,  3166,  3190,  3191,  3192,  3193,  3194,  3195,
    3196,  3197,  3198,   901,   814,   814,  3199,  3200,  3201,  3202,
    3203,  3204,  3205,   901,   860,   814,  3208,  3209,  3206,  3207,
    3210,  3211,  3212,  3213,  3214,  3216,  3215,  3219,  3217,  3218,
     867,  3220,  3221,  3222,  3223,  3224,  3225,  3226,  3227,  3228,
    3229,  3230,  3231,  3232,  3234,  3235,  3233,  3236,  3237,  3238,
    3239,  3240,  3241,  3242,  3243,  3244,  3245,  3246,  3247,   862,
    3248,  3250,  3249,  3251,  3252,  3253,  3254,  3256,  3257,  3258,
    3259,  3260,  3261,  3262,  3263,  3266,  3264,  3265,  3267,  3268,
    3269,  3270,  3271,     0,  3272,  3273,   859,  3274,  3275,  3279,
    3276,  3280,  3277,  3281,  3278,  3282,  3283,  3284,  3285,  3286,
    3287,  3288,  3289,  3291,  3292,  3293,  3294,  3295,   901,   858,
     814,  3296,  3297,  3298,  3300,  3301,  3302,  3303,  3304,  3305,
    3306,  3307,  3308,  3309,  3310,  3311,  3313,  3314,  3312,   884,
     851,  3315,  3317,  3316,  3318,  3319,  3320,  3321,  3322,  3323,
    3324,  3325,  3255,  3290,  3299,   884,   808,   809,   814,   884,
     826,     0,   867,   901,     0,   848,   867,   853,  2655,   884,
       0,   884,   884,   884,   884,  3738,   884,     0,   291,   867,
     802,   306,   795,   797,   796,   798,   799,   884,   884,   884,
     884,   884,   888,   792,   794,  2648,  2649,  2650,  2651,  2653,
    2654,  3721,   793,  2652,  3864,     0,     0,     0,  3870,     0,
    3696,     0,     0,  3862,     0,  2201,     0,  2210,  2113,  1383,
    1916,  2203,  2115,  2219,  2222,  2098,     0,     0,  2104,  2103,
       0,  2105,     0,     0,   235,  2106,  2094,     0,   470,   472,
    3484,  3482,  3519,  3518,  3523,     0,  3520,  3516,     0,  3475,
    3524,  3509,  3513,     0,  3525,     0,  3510,  3517,  3531,  3530,
    3532,  3527,  3526,     0,  3529,  3515,     0,  3514,  3535,     0,
    3479,     0,     0,   446,     0,  2135,  2136,  2132,  1182,  2131,
    2431,     0,  2423,     0,  1316,  2450,  2449,  2446,  1908,  3420,
    3425,  3731,  3730,  3729,  3728,  2585,     0,  3725,  3727,  3724,
    3726,  2586,   423,   415,     0,     0,  2924,     0,   422,   421,
     420,   443,   423,   409,   432,     0,     0,  3699,   402,  3700,
     405,   441,   444,   483,   479,   487,   481,  3897,  3895,  3779,
    3879,   289,     0,     0,  2564,  2565,  2497,  2496,  2566,  2488,
    2509,     0,     0,     0,  1568,  1914,  1914,  1914,     0,     0,
    1772,     0,     0,     0,     0,  1914,     0,  1607,  1580,  1579,
       0,  1608,     0,     0,     0,     0,     0,     0,     0,  1728,
    1728,  1694,     0,     0,     0,     0,     0,     0,     0,  1613,
       0,     0,     0,  1766,  1768,  2542,  1914,     0,  1914,     0,
    1433,  1614,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1914,  1914,  1914,     0,  1626,  1628,  1627,
    1914,  1914,  1616,     0,     0,     0,     0,     0,  1914,     0,
       0,     0,     0,     0,  1762,  2515,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1762,     0,     0,     0,
       0,     0,     0,     0,  2517,     0,     0,     0,  2516,     0,
       0,     0,     0,     0,     0,  1762,     0,     0,  1570,     0,
    1569,  1571,     0,  1367,   781,     0,     0,     0,  1485,  1483,
    1484,  1482,     0,     0,     0,     0,  1491,  1493,  1495,     0,
    1490,  1492,  1494,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1572,     0,     0,     0,     0,     0,  2489,
       0,  1647,     0,   533,  2420,     0,     0,     0,   326,  1300,
    2595,     0,     0,   423,  3482,     0,     0,     0,  3479,  1410,
    1391,  3354,     0,   914,     0,     0,   917,   919,   918,  3386,
       0,   916,  3395,  3393,  3391,  3390,     0,     0,  3334,  3336,
       0,   923,   925,   924,  3384,   922,     0,  3370,     0,     0,
       0,     0,     0,   633,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2300,     0,  1409,  1409,  2248,     0,  2333,
       0,  2333,  2323,     0,  2333,  2329,  2288,  2281,     0,     0,
     694,  1990,  1974,  2274,  2327,  2328,  2333,     0,     0,  2333,
       0,  2289,  2323,  2333,  2243,     0,     0,  2235,  2240,  2236,
       0,  2242,  2241,  2244,  2232,  2233,     0,  2261,     0,  2273,
    2280,     0,  2260,  2267,     0,  2278,  2323,  2323,     0,  2333,
    2333,  2333,  1183,     0,  1410,     0,  3745,  2519,  2522,  2529,
    2534,  2137,  2134,  2396,   287,     0,     0,     0,  1308,  1310,
    1309,  1326,  1232,  3599,     0,  3601,     0,  3603,     0,    78,
       0,     0,  2388,  2386,     0,     0,     0,     0,  2378,  2380,
    2385,  2379,     0,     0,  2387,     0,   131,     0,  2381,  2389,
    2360,  2363,  2370,  1409,  2361,     0,  1908,  3439,  3438,     0,
       0,     0,  1236,  1239,     0,  2417,  2414,   131,     0,  2722,
    3606,  3604,     0,  1204,  1220,   134,  1214,  1215,     0,     0,
    1207,   134,  3420,  3693,  3694,     0,     0,  3670,  3687,  3668,
       0,  3682,  3683,  3667,     7,     4,   154,     0,   145,     0,
       0,     0,   633,   633,   137,     0,  3845,  1410,  1410,     0,
       0,   633,   633,   633,     0,  1806,     0,  1775,  1837,  1838,
    1840,     0,  1839,     0,     0,  1908,     0,     0,  1829,  1856,
       0,  1856,  1831,  1832,     0,     0,     0,  1385,  1835,  2575,
    2087,  2090,     0,  2079,  2081,  2082,  2587,  2084,     0,     0,
    1919,  1922,  1984,  1985,     0,  1400,     0,  1998,  1999,  1997,
       0,  1975,  1991,  1996,  1994,     0,  1966,     0,  2017,  2006,
    2071,  1399,  2013,  2014,  1361,  2339,     0,  2337,  2356,  2357,
    2557,  1339,  1335,     0,  3773,  3774,  3776,  1051,   931,  2158,
     930,   626,   629,   628,     0,     0,  2129,   236,  2592,     0,
    2129,  1068,     0,  2593,  3561,     0,  3568,  3550,     0,  1188,
    3633,  3634,  1062,  1060,     0,  1252,  1253,  1256,     0,   259,
     262,     0,   423,   456,   458,  1411,   467,  3707,   401,     0,
       0,  1291,     0,  1289,  1288,  1286,  1287,  1285,     0,  1276,
    1282,  1283,   312,     0,     0,   882,   885,   819,   901,   899,
     901,   833,   902,     0,   871,   869,   868,   864,   871,   835,
     940,   847,     0,   901,   933,   937,   934,   843,     0,   814,
     935,     0,   938,   815,   841,   834,   840,   871,     0,   830,
     838,   901,   807,   842,   829,     0,   871,   844,   849,   852,
     854,   856,   871,   901,     0,  3696,   814,   828,   827,   814,
     871,     0,     0,   865,  3696,   850,   935,   948,   814,   901,
     871,     0,   889,   871,   310,   398,  2019,  3798,  3866,  3867,
    3860,  3863,  3865,  1908,     0,  2204,  2213,  2556,     0,     0,
       0,  1384,  2207,  1964,     0,  2559,  2117,     0,  2100,  3473,
    3548,  2099,  1192,     0,     0,     0,   401,   495,   471,   425,
    3512,  1428,  3528,  3536,     0,  3533,  3534,  3471,  3480,     0,
       0,     0,     0,  3521,  3504,     0,  3508,  3507,     0,  3505,
       0,  3506,     0,  3511,  3488,  3487,  2532,     0,  2531,  3758,
     400,  2137,  3070,  3085,  2432,  2428,  2427,     0,  2447,     0,
    1909,  1910,     0,     0,  1912,  3422,  2019,     0,  3419,  3780,
     416,   423,     0,     0,     0,   438,   410,   423,   425,   437,
     476,   290,     0,   259,   406,     0,     0,   401,   401,   423,
    3696,  3798,  3420,  3354,  1723,  1725,     0,     0,  1915,     0,
    1740,     0,     0,     0,     0,     0,     0,  1548,     0,     0,
       0,  1677,     0,  1740,  1705,  2064,  2065,  2030,  2031,  2029,
    2032,  1425,     0,  2033,  2063,     0,     0,     0,  1703,  1366,
    1349,     0,     0,  1884,  1885,  1886,  1887,  1888,  1889,  1890,
    1891,  1892,  1893,  1894,  1895,  1897,  1902,  1898,  1899,  1900,
    1901,  1896,  1903,     0,  1883,     0,  1729,  1690,  1692,     0,
       0,     0,   781,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1914,     0,     0,  1914,     0,     0,     0,     0,
       0,     0,  1704,     0,  1702,     0,     0,  1701,  1592,     0,
       0,  1914,     0,  1621,     0,     0,     0,     0,     0,     0,
    1599,  1600,     0,     0,     0,  1524,     0,  1522,  1523,     0,
       0,  1914,     0,     0,     0,     0,  1515,     0,     0,     0,
       0,  1763,     0,     0,  1906,  1904,  1907,  1905,     0,     0,
    1764,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1593,     0,     0,     0,     0,     0,     0,     0,
       0,  1597,     0,     0,     0,  2547,   966,     0,     0,     0,
       0,  1563,     0,     0,     0,     0,  1431,  1430,  1432,  1443,
    1437,  1441,  1435,  1439,     0,  1496,  3064,  1444,     0,     0,
       0,  1447,  1456,  1460,     0,     0,     0,     0,     0,  1467,
    1465,  1466,  1478,  1479,  1463,  1464,     0,  1469,     0,  1468,
    1475,  1476,  1477,  1480,  1566,   926,  1574,  1934,  1696,  1697,
    1721,  1938,     0,     0,     0,     0,  2543,  1410,  1518,  1517,
    1519,  1520,  1521,   534,     0,   528,   531,   545,     0,     0,
    2419,     0,  2736,  2752,  2753,   344,   347,   346,   348,     0,
       0,  1299,  1303,  3420,     0,     0,     0,     0,  3552,  3461,
       0,     0,  1406,  1346,  1405,     0,     0,     0,     0,     0,
    3376,  3388,     0,     0,  3385,     0,     0,  1412,     0,     0,
    3358,     0,     0,     0,     0,  3331,  3397,  3398,  3401,     0,
    1412,     0,  3034,     0,  3333,  3338,  3329,  3342,  3344,  3346,
    2290,     0,     0,     0,     0,  2295,  2292,  2285,  2299,  2774,
    2294,  2312,  2293,  2287,  2298,  2301,  2286,     0,     0,     0,
    2333,  2305,  2308,  2302,  2333,     0,  2333,  2304,     0,  2331,
    2318,  2317,  2316,  2258,  2257,  2251,  2324,  2309,  2303,   223,
    2333,  2256,  2255,  2237,  2238,  2239,     0,  1973,     0,  2329,
     134,  2323,     0,  2333,  2333,     0,  2315,  2277,  2279,  2185,
       0,  1834,     0,     0,  2171,  2164,  2151,   401,     0,     0,
       0,  2524,  2138,  2139,   401,  3903,     0,     0,     0,   518,
    1326,  1312,  1328,  1234,  1233,  1231,  3598,  3602,  1765,    80,
    2179,  2177,    82,  2176,  2178,    83,  2398,  2372,  2371,  2373,
    2383,  2377,   131,  2382,  2384,  2374,     0,  2390,  2391,     0,
       0,   364,   367,   369,     0,   372,  3437,     0,   634,     0,
      75,     0,  1240,  2019,  2413,  2415,  2408,  3605,     0,  1205,
    1222,  1221,  1217,  1218,     0,  1202,   135,  1213,  1212,  1206,
    2227,  3676,  3685,  3689,  3674,   624,  1015,     0,  3469,  3568,
     190,     0,     0,     0,   140,     0,   633,   161,   163,   633,
    3665,  3665,     0,     0,     0,   633,     0,     0,  1851,  1843,
    1845,  1846,  1847,     0,  1850,     0,  1388,     0,  1376,  1376,
    1386,  2529,  1833,  1830,  1857,     0,  1856,  1856,     0,     0,
    1813,  1812,     0,  1908,   920,  2083,     0,     0,  1918,  1429,
       0,  1920,  1929,  1919,  1987,  2749,     0,     0,  1402,     0,
    2019,  1396,  2496,     0,     0,     0,     0,     0,     0,     0,
    1986,  1983,     0,  2358,  3416,  3417,  1411,  3415,  1411,  1411,
    1412,  1412,   624,     0,   627,  2158,  2158,     0,     0,     0,
       0,     0,     0,     0,     0,   239,   248,  1055,  2591,  1057,
       0,     0,     0,     0,     0,  3580,  3420,  1082,  3635,  1058,
       0,     0,  1255,   257,   256,     0,   263,   265,  3758,   462,
     459,   424,   401,   454,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   134,
      89,   110,     0,  1278,  1290,  2110,  1284,     0,     0,     0,
       0,     0,     0,     0,   831,   905,     0,   832,     0,   873,
     874,   872,   877,   810,   806,   941,   947,   945,   944,   836,
     837,   816,   936,   932,   939,     0,   812,     0,  1044,   823,
       0,   813,   855,   811,   824,   295,     0,     0,  3744,  1412,
    1412,  3750,   308,   839,   821,   825,  3696,  3696,   292,     0,
     803,   307,   817,   949,   818,   820,   948,   804,     0,   805,
    2019,  2024,  2020,  3869,   325,     0,   324,     0,  1873,  1376,
    2129,     0,     0,  2114,     0,     0,  2001,  1965,  2220,  2219,
       0,     0,     0,  1194,  1193,  2102,   234,  2107,  3420,   401,
     314,   428,   474,     0,     0,  3468,  3544,  3547,  2556,     0,
       0,  3489,     0,   447,  3706,  2139,  2429,  2433,  1317,  1319,
    1320,  1318,  1326,     0,  2607,  2606,  2605,  2576,  1913,  2577,
    2602,  2600,  2604,  2598,  2603,  2596,  2597,  2601,  2599,     0,
    3428,  3429,  3427,  3421,  3426,   417,   418,   439,   442,     0,
     411,   412,   426,   430,     0,  3702,  3701,   445,   484,   468,
     468,   468,  3898,     0,  1294,     0,     0,  2546,     0,  1672,
       0,  1673,  1674,     0,  1549,  1773,     0,     0,     0,  1577,
       0,     0,     0,  1676,     0,  1426,     0,     0,  1552,  1544,
    1350,     0,  1707,     0,     0,     0,     0,     0,     0,     0,
    1712,     0,  1710,     0,     0,  1767,     0,  1769,  2543,     0,
    1682,  1717,     0,  1680,     0,     0,  1706,  1718,  1719,     0,
       0,     0,  1686,  1684,     0,  1688,  1622,  1685,  1687,     0,
       0,     0,  1619,     0,     0,     0,     0,     0,     0,     0,
    1596,     0,  1633,     0,  1670,  1634,     0,     0,  1631,     0,
       0,     0,  1649,  1581,  1582,     0,  1583,  1636,     0,  1557,
    1588,  1589,  1554,  1555,  1650,  1639,  1556,     0,  1591,  2019,
       0,  1575,     0,     0,     0,  1594,  1625,     0,     0,     0,
    1553,     0,     0,     0,  2019,     0,  1651,  1598,     0,     0,
     782,  1368,  1545,  2544,  1438,  1442,  1436,  1440,     0,     0,
       0,     0,  1455,     0,     0,  1448,  1458,  1461,     0,     0,
    1936,     0,     0,  1715,  1762,  1762,  1762,  1762,     0,     0,
       0,  1666,  1667,     0,     0,   527,   526,     0,   530,   614,
       0,   547,   535,   524,  2421,     0,     0,  1301,     0,     0,
       0,     0,  3462,     0,     0,     0,     0,  1410,  1411,  1411,
    2542,  3355,  3356,  3357,     0,  2633,  2632,  2630,  2634,  2631,
    2580,  2582,     0,  2581,  2628,  2626,  2629,  2624,  2622,  2623,
    2627,  2625,  1412,     0,  3374,   929,   928,   927,  3387,     0,
    3409,     0,     0,  3394,  3392,     0,     0,  1412,  3337,     0,
    3403,  3404,     0,     0,     0,  3372,  3371,     0,     0,     0,
    3364,     0,     0,     0,  2314,     0,  2284,  2297,  2296,  2334,
    2335,  2311,  2307,  2252,  2310,  2306,  2330,  2019,  2262,  2283,
    2253,     0,  2276,  2234,  2331,  2291,  1916,  2323,  2249,  2250,
    2313,     0,  1385,  1411,  2167,  1410,  2168,   401,  2523,     0,
       0,  2126,     0,     0,  3696,  1275,  1315,  1307,  1314,  1311,
    1326,  1324,  1313,   992,   991,     0,  1327,    79,     0,     0,
    2375,   134,  2369,  2392,  2364,   373,   377,     0,     0,     0,
    2843,  2924,     0,  1916,  3441,  3691,  1248,  1245,  1247,  1244,
    1246,  1235,  1241,  1242,  2418,  2416,   134,  2437,  1220,     0,
    1223,  3696,  2019,     0,  3688,   155,   625,     0,     0,     0,
    1015,     0,   165,  3580,     0,     0,     0,   138,   169,  3842,
    3846,  3653,     0,  3852,  3663,  3854,   156,  3849,   237,  3847,
       0,     0,  1848,  1849,  1810,  1376,  1378,  1377,     0,     0,
    1380,     0,  1854,  1853,     0,     0,     0,  1818,     0,  1814,
    1816,     0,  1881,  1873,     0,  2088,  2080,  2085,  2541,  1926,
    1970,     0,     0,  1347,  1929,     0,  1988,  1979,     0,  1403,
    1401,  2000,  1977,     0,  1993,  1992,  1995,  1400,  1967,  1970,
       0,  1410,  3414,  3412,  3413,  3775,  3777,  1052,   630,     0,
       0,  1053,     0,     0,     0,   242,   245,   243,   244,     0,
    2158,  2158,   184,  2158,  2158,   183,   185,     0,   179,   176,
     186,  2158,  1069,   171,     0,     0,     0,     0,  2019,     0,
       0,     0,   192,     0,     0,  3555,  3554,     0,  3570,     0,
       0,  3572,     0,  3571,  3569,  3540,  3551,     0,  1077,  1047,
       0,  1084,  1086,     0,     0,  3635,  1254,     0,   259,   261,
       0,   465,     0,     0,     0,  2019,     0,  2019,  2019,     0,
       0,  2019,     0,  2019,     0,     0,     0,     0,     0,     0,
       0,  2019,     0,     0,     0,  2019,     0,  2019,     0,    88,
    1292,     0,  3696,     0,   272,   273,   274,   285,  3835,   314,
       0,  3873,   880,   878,   881,   879,   900,     0,   875,   876,
     946,   942,   943,   935,     0,   935,   297,     0,  3174,   294,
     867,   800,   789,   792,  2648,  2649,  2650,  2651,  2653,  2654,
       0,     0,  3831,  3830,     0,     0,   822,   334,   333,   331,
     401,   321,   329,   323,     0,   330,  2027,  2028,  2025,  2023,
    2026,  3906,  1834,  1870,  2202,  2205,     0,  2557,  1916,  1409,
       0,  2216,     0,  2560,  3420,  3474,  3549,  1192,     0,   315,
       0,  1412,   425,  3584,     0,     0,     0,     0,     0,  2533,
     449,  2123,     0,  1326,  1330,  2440,  3431,  3432,  3430,   419,
     440,   413,  1412,   433,   425,     0,   259,     0,   478,   480,
     469,   488,   482,     0,   468,  1726,  1724,     0,  1741,  1770,
       0,   884,   884,   867,   888,  1756,  3181,  1750,  1753,     0,
     886,  1758,   884,  1751,   886,     0,  1749,     0,  1747,  1748,
       0,     0,     0,  1678,  1675,     0,     0,     0,  1732,  1732,
       0,     0,     0,     0,  1472,     0,     0,     0,  1661,     0,
    1683,  1681,     0,     0,     0,     0,     0,  1689,     0,  1604,
    1602,  1530,     0,  1528,     0,  1529,     0,  1531,     0,     0,
    1671,     0,  1498,  1516,     0,     0,     0,  1765,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2548,     0,     0,   955,   961,   964,   965,   967,   959,     0,
    1643,     0,     0,     0,  1453,  1449,     0,  1457,     0,     0,
       0,  1471,  1470,  1938,  1937,     0,  1714,     0,     0,  1764,
       0,     0,  1764,     0,     0,     0,  2545,  1411,  1648,  1410,
     537,     0,   555,   529,  2019,   532,     0,   546,     0,   558,
       0,     0,     0,   345,     0,  1304,     0,   477,     0,  3460,
    3553,     0,     0,  1404,  1416,  1407,     0,     0,     0,  3378,
       0,  3389,  1412,     0,     0,     0,  3362,  3360,  3359,  3335,
       0,     0,  3408,  3402,  3399,  3400,  1412,     0,  3341,     0,
    1412,  3339,  3343,  3345,  2272,  2271,     0,  2332,  1973,  2245,
    2264,  2266,  2333,  2187,  2191,     0,  1908,  2175,     0,     0,
    2169,  2173,     0,  2530,     0,     0,  2140,  1834,   288,     0,
    3781,  3908,     0,  1875,    84,     0,  2376,  2367,     0,  2362,
    2365,     0,   368,   378,   370,   374,   375,   376,   371,  3452,
    3453,  3445,  3448,  3446,  3447,  3451,  3454,  3455,  3442,  3449,
    1973,     0,     0,  1237,  1243,  2411,  1219,   136,     0,  1203,
       0,     0,  3740,  2228,  3677,  3690,  1030,  1032,  1031,  1016,
    1017,     0,     0,     0,  1077,     0,     0,     0,   637,   637,
     170,  3696,     0,   203,     0,     0,  3660,  3661,  3664,  3666,
       0,  3635,  3696,     0,  3696,   158,  1807,  1387,  1379,  1381,
    1376,  1376,     0,  1774,     0,     0,     0,  1774,     0,     0,
     518,     0,  1852,   921,  2454,  1927,  1928,     0,  1923,  1971,
    1972,  1925,  1921,     0,  1930,  1932,  1348,  1989,  1981,  1976,
    1397,     0,  1969,     0,     0,     0,  2074,  2076,   692,   691,
     247,   246,   251,   252,   871,  2019,  2019,  2163,  2162,  2019,
    2019,   178,   175,  2161,  2160,  2019,  2019,   172,  2129,   196,
     195,   197,   198,   200,   201,   199,   194,  1065,     0,   202,
    3558,     0,  3565,  3560,  3563,  3543,  3542,  3541,  3538,     0,
    2019,  2019,  2019,     0,  2019,  3579,  3581,     0,     0,  1066,
     930,  3593,     0,     0,   208,  3637,     0,  3639,     0,  1258,
       0,  1257,   258,   264,  3758,  2019,  2019,   103,  2019,    95,
      96,    91,   123,   124,    93,    94,    99,    98,   100,   101,
     104,   105,   102,    97,    92,   127,   129,   128,   106,  2070,
    2069,  2068,   130,   125,   126,    90,   313,     0,   281,   279,
     280,  3756,  3755,  3696,     0,     0,  3833,  3872,   302,   299,
       0,     0,     0,   846,  1045,   845,   296,   865,  1411,  1411,
     293,   866,  2019,   311,   332,  2206,  1874,     0,  1916,  2015,
       0,     0,  2002,  2217,  2208,  2097,  2095,  3747,  1410,   475,
       0,   473,     0,  3467,  3472,  3546,  3545,  3568,  3568,   423,
    3758,   423,   448,     0,  1321,  1326,  1330,     0,  1322,  2451,
       0,   431,  3704,  3703,   485,  3798,  3896,     0,     0,  1771,
    1742,   935,  1755,  1757,     0,  1754,   935,   883,   887,  1760,
    1746,  1752,  1759,   935,  1547,  1578,  1551,  1550,     0,     0,
       0,  1611,     0,  1730,  1736,     0,     0,     0,  1585,     0,
    1713,  1711,  1587,     0,     0,  1663,  2545,  1638,  1709,  1615,
    1640,  1590,     0,     0,     0,  1527,  1525,  1526,     0,  1605,
    1629,     0,  1514,  1630,     0,  1612,  1637,  1543,  2043,  2042,
    2044,  2040,  2039,  2041,  1558,  2019,     0,  1617,  1576,     0,
       0,  1642,  2549,  2550,     0,     0,     0,   966,   952,   953,
     954,     0,   956,   958,   960,     0,  2019,  1474,  1473,  1445,
       0,  1454,  1451,     0,  1459,  1940,  1939,     0,     0,  1654,
    1656,  1655,  1658,  1657,  1652,  1762,  1416,  1668,     0,   538,
     539,   541,   543,   620,     0,   533,   562,   522,     0,   537,
     525,  1302,  1305,     0,  3458,  3457,     0,  1408,  1420,  1419,
    2539,  2543,     0,     0,  1412,  1411,  3375,  3396,     0,     0,
    1412,  1412,  3406,  3405,  3407,  3373,  3368,  3366,  3365,  2056,
    2057,  2055,  2053,  2054,  2263,  1973,  2259,     0,  1916,     0,
    1873,  1411,  2165,     0,  3746,     0,  2146,     0,  2143,  2150,
     511,  2216,     0,  2141,  2112,  3785,  3782,  3783,     0,  1878,
       0,  1879,  1876,  1877,  2019,     0,     0,     0,     0,     0,
    3440,  1249,  1250,     0,     0,     0,  1228,  1224,  3741,  3742,
     143,     0,  3470,   164,     0,   149,   152,   742,     0,     0,
       0,     0,  2158,  2158,  2158,  2158,  2158,  2158,  2158,  2158,
    2158,  2158,     0,  2158,  2158,  2158,  2158,  2158,  2158,  2158,
    2158,   686,  2158,  2158,     0,     0,  2158,  2158,   687,   139,
     506,   514,   638,   641,   677,     0,   685,   679,   666,   667,
     503,   684,   141,   282,  3791,  3787,  3790,   240,     0,     0,
    3797,  3796,  3696,  3659,  3662,     0,     0,   267,  3789,     0,
    3788,  3709,   707,   708,   706,   705,     0,     0,  3635,     0,
    1390,  1389,  1819,     0,  1823,  1828,  1824,     0,  1815,     0,
    1836,  1882,     0,  2462,  1970,     0,     0,  1970,     0,     0,
    1411,  2072,  1410,   173,     0,     0,   177,     0,     0,   182,
     181,   174,   187,   180,  1070,   193,  3559,  3557,  3556,     0,
    3564,     0,  3539,  3575,  3573,  3574,  3577,     0,     0,  3576,
    3578,  1071,  1072,  1078,  1073,  1180,  1180,     0,  1180,     0,
       0,  1180,  2158,     0,     0,   518,  1198,  2158,     0,     0,
       0,     0,     0,  1160,     0,  1180,     0,     0,     0,     0,
       0,  1098,  1159,   639,  1048,  1097,  1099,  1111,   514,     0,
    1132,  1162,  1163,  1161,  3594,     0,     0,     0,  1083,     0,
     211,   209,   219,  3636,     0,  2129,     0,  3639,  1260,  1261,
       0,   463,     0,   116,   118,     0,   120,   122,     0,   112,
     114,   271,  3757,  3754,  3753,  3832,  3834,     0,     0,   304,
       0,     0,   298,   870,   801,  3752,  3751,   322,  1863,     0,
    1862,     0,  1868,  1872,  2015,  2211,  2016,     0,  2003,     0,
    1410,  2129,     0,  1411,     0,  3582,  3582,   450,   452,   451,
    2180,  1323,  1331,  2453,  2452,     0,  1411,   259,   468,     0,
    1727,  1743,  1761,  1744,  1745,  1679,     0,     0,     0,     0,
    1736,     0,     0,  1737,  1695,     0,     0,     0,     0,     0,
    1546,     0,  1659,     0,  1603,  1601,     0,   867,  1505,  1507,
    1503,  1506,     0,   886,  1509,     0,   848,   886,   935,  1513,
    1499,  1500,  1501,  1502,     0,     0,     0,     0,     0,  2551,
     950,  1645,     0,   963,   957,   955,   962,     0,  1450,     0,
       0,  1942,     0,  1716,     0,  1669,   542,     0,   621,   617,
       0,     0,   563,     0,   564,   560,   536,     0,  3459,  1418,
    1417,     0,  3382,  3380,  3379,  3377,  3411,  3410,  3363,  3361,
    1412,  1412,   134,  2190,  1964,  2192,  2193,  2184,  2174,  2172,
    2526,     0,  2147,  2149,  2536,  2535,  2547,     0,     0,  2129,
    2142,  2019,  3784,  1117,     0,  1118,  1129,  1131,  1329,     0,
    2403,     0,  2401,  2368,  2404,   394,   386,   381,   389,   383,
     385,   384,   390,   391,   392,   393,   387,   382,   388,   380,
     379,     0,     0,     0,     0,     0,     0,   146,     0,     0,
       0,  1042,  2685,     0,     0,   711,   713,   714,   715,   716,
       0,   743,   718,   633,   993,   993,   745,  2552,     0,   690,
    2158,   507,  2019,  2019,  2019,  2019,   664,  2019,  2019,  2019,
       0,     0,  2158,  2019,     0,     0,  2019,  2019,  2019,  2019,
       0,     0,  2019,   672,   673,   671,  2019,  2019,  2451,   513,
     515,   930,   642,     0,   637,   275,  3843,   498,   499,     0,
       0,  1415,  1415,  3824,     0,  3825,  3826,  1415,  1415,     0,
     395,  3735,  3733,  3736,  3734,  3809,  3806,     0,  3803,  3804,
    3811,  3819,  3639,     0,     0,  3710,   240,     0,   240,     0,
       0,  1777,  1776,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2455,  2457,     0,  2089,  1924,  1933,  1931,
    1968,  1980,     0,  2077,  2075,  2052,  2050,  2049,  2051,  2048,
    2046,  2045,  2047,  2037,  2036,  2038,  2035,  2034,     0,  3566,
    3562,  2022,  2021,     0,  1075,     0,  1074,  1079,  1042,   633,
    1181,   631,     0,  1136,  1140,  1137,   631,  2116,  2116,  1295,
    2116,     0,     0,     0,     0,  2116,     0,  2118,  2116,     0,
       0,  2116,  2116,     0,  1295,     0,   516,  1201,  1199,  2116,
    1200,  2116,     0,     0,  1295,  1149,  1093,  1150,     0,  1094,
    2116,  1295,  1116,  1295,  1295,     0,   640,   930,  1095,  1096,
     742,  1195,   218,   207,     0,     0,  1085,  1087,     0,     0,
    1088,  3638,  1061,  3641,  2129,  1266,     0,   108,  2019,   109,
    2019,   107,  2019,  3838,     0,   303,     0,  1858,  1858,  1869,
    2214,  2129,     0,  2004,  2218,  2209,  1411,     0,   429,  3585,
       0,  3466,  3465,     0,  2216,     0,   427,  3705,   486,   468,
    1609,  1610,  1733,  1970,  1731,     0,  1738,  1739,  1693,  1635,
       0,  1586,     0,  1660,     0,  1641,  1606,  1508,  1504,  1511,
     849,  1510,  1512,  1632,  1559,  2019,  1618,  1623,  1624,     0,
    1644,  2019,  1452,     0,  1945,  1944,     0,     0,  1970,  1653,
     540,   618,   535,     0,   559,   562,     0,   523,  2540,  1412,
    1412,  3369,  3367,  2265,  2001,  2527,  2525,  2145,     0,     0,
       0,  2144,  2154,     0,  2127,     0,  1325,     0,  1880,  2399,
    2019,     0,  2366,     0,  1225,  1226,  1227,  1229,     0,     0,
       0,     0,     0,   744,  1043,     0,     0,   717,  2555,   710,
     742,     0,     0,     0,   993,   734,   633,     0,  1042,   994,
     633,   633,     0,     0,     0,     0,  2067,  2066,   661,   654,
     653,   656,   655,   658,   657,     0,   650,   647,   659,   649,
     674,     0,   662,   644,   703,   704,   702,   668,   675,   645,
     646,   652,   651,   648,   695,   700,   698,   697,   696,   701,
     699,   663,   678,   660,   676,   505,   622,   643,  2060,  2061,
    2058,  2059,   683,   682,  2062,   680,   681,   514,     0,   276,
     278,  3696,   249,   241,     0,     0,   502,   500,   501,  3649,
       0,     0,     0,     0,     0,  1414,  3827,     0,     0,  3718,
    3798,  3807,  3855,  3810,  3805,  3812,   157,   286,   268,   270,
       0,  3840,  3696,  3851,  3696,  3639,  1778,     0,     0,  1820,
       0,  1825,     0,  1817,     0,     0,     0,     0,  2456,     0,
       0,  2463,  2465,  1982,     0,  1073,     0,     0,     0,  1295,
       0,     0,  1164,  1134,     0,     0,     0,     0,  1105,     0,
    1114,     0,     0,  2116,     0,  1166,     0,  1165,     0,     0,
       0,  1178,  1179,     0,  1960,  1962,  1970,     0,     0,     0,
    1154,  1176,  1177,     0,     0,     0,     0,  1124,     0,  1110,
    1180,     0,  1180,  1133,     0,   709,     0,  1197,  1135,   205,
     210,   220,   221,  1063,     0,  3640,  1059,     0,  1267,  1263,
    1264,  1259,   117,   121,   113,     0,     0,     0,     0,  1866,
    1864,  2129,  2212,     0,   316,     0,  3589,  3583,  3587,  2181,
    2129,     0,  3899,     0,  1735,  1691,     0,  1662,  1664,     0,
     951,     0,  1941,  1935,     0,     0,     0,     0,     0,     0,
    1954,  1946,     0,  1720,     0,   620,     0,     0,   548,   561,
     567,   566,  3383,  3381,  2188,     0,  2148,  2537,  2548,   512,
       0,     0,  3758,  1130,  2402,     0,  3450,     0,  1970,  1039,
    1041,     0,     0,     0,     0,  1041,     0,     0,   712,     0,
     633,   989,   990,  1042,     0,   719,  1013,  2552,  1042,  1042,
     749,     0,   737,   747,   790,  2554,   508,   670,  2391,   669,
     623,     0,  2451,   283,     0,   284,   250,  3799,     0,     0,
     216,  3815,  3829,  3813,  3828,  3696,  1415,     0,  1415,     0,
       0,  1414,     0,     0,     0,  3712,  3711,     0,  3793,  3792,
    3850,  3848,   159,     0,  1908,     0,     0,  2460,  2461,     0,
    2458,     0,     0,  2464,     0,  1080,  1076,  1081,     0,  1119,
       0,  1138,     0,     0,  1104,     0,  1281,     0,     0,  1157,
    1145,     0,  1100,     0,  1147,  1148,  1192,  1102,     0,  1963,
     517,     0,     0,  1109,     0,  1195,  1101,  1126,  1107,  1139,
    1196,   212,  1089,   401,     0,     0,     0,  1262,     0,  1269,
    3839,  3836,     0,     0,     0,     0,  1859,     0,     0,     0,
    2215,     0,  3588,  3586,     0,  2124,  1834,  1970,  1584,  1560,
    1646,     0,  1951,     0,     0,  1949,  1948,     0,  1943,  1950,
     619,   616,     0,     0,   556,   574,   570,     0,   572,   573,
     595,  2129,     0,     0,  2153,  2155,  3786,  2405,  3420,     0,
    1036,     0,  1037,     0,  3420,  3420,     0,     0,     0,  1042,
    1013,  2552,   971,     0,   720,     0,   724,   726,   751,     0,
     746,   738,   759,     0,     0,   688,   504,   277,  3696,  3696,
    3651,  3650,  1410,   208,   217,  3696,  3696,  3853,  3822,  3818,
    3820,  3817,  3808,  3696,   269,  3713,     0,     0,  3799,  2922,
       0,  1781,  1783,  1808,  1822,  1827,  2459,  2467,  2466,  3567,
       0,  1121,   632,  1033,     0,  1152,     0,     0,  1195,  1106,
       0,     0,     0,  1146,  1167,  1144,  1295,  1961,     0,     0,
       0,  1143,  1125,  1127,  1240,     0,   214,   188,  3642,     0,
       0,  1268,  1273,     0,  1270,  1272,     0,   300,     0,  1861,
    1860,  1875,     0,  1382,     0,  2441,  1734,  1952,     0,  1953,
    1956,     0,     0,  1957,     0,   552,   554,   544,     0,   549,
       0,   568,     0,  2158,  2158,     0,  2158,  2158,  2158,  2158,
     588,   596,   598,   599,   600,     0,  2189,  2528,  2538,  1001,
    1970,     0,     0,     0,     0,  1003,  1005,     0,     0,   739,
     732,   728,     0,     0,   975,  1014,     0,   722,     0,     0,
     912,   969,   775,     0,   778,     0,   910,   750,   752,   908,
     909,   754,     0,     0,     0,   791,     0,     0,   892,     0,
     895,     0,     0,   748,     0,   760,   891,   898,  2553,   665,
     510,   689,  3844,  3800,     0,  3654,   219,   240,  3708,     0,
    3799,  3799,  3856,  3714,     0,   188,     0,  1780,     0,     0,
       0,     0,   562,  1120,  1034,  1153,     0,  1142,  1168,   562,
    1158,  1103,  1155,  1156,  1168,     0,  1108,   213,     0,   206,
     189,   222,  3643,  3644,  1265,     0,  3837,     0,     0,     0,
    2182,   920,  1947,  1955,  1959,  1958,   550,     0,   557,   581,
     571,   577,     0,  2158,     0,     0,  2158,     0,     0,     0,
       0,     0,   565,   597,  2158,     0,     0,  2158,     0,  1022,
    1024,  1171,  1002,  1026,  1025,  1007,  1023,  1035,  1040,  1041,
    3420,   191,     0,  1171,  1004,  1028,  1011,  1171,  1006,  1027,
    1009,     0,     0,     0,     0,   730,     0,   974,     0,   979,
       0,     0,     0,     0,   776,   777,   913,   753,   911,   907,
     903,   897,  2564,  2565,     0,     0,     0,   787,   788,   893,
     784,   785,   786,     0,   766,     0,     0,   890,     0,  3652,
       0,     0,  3816,   240,  3696,  3720,  3696,  3719,     0,     0,
    3841,  1785,  1782,     0,  1790,  1792,  1791,  1793,  1784,     0,
    1141,  1123,     0,  1151,     0,     0,   518,  1168,   518,     0,
     215,  1271,   301,  1867,  1865,     0,  2442,   556,   553,   581,
       0,   579,     0,   575,   569,   576,     0,   613,   607,     0,
     609,   610,   608,   605,   592,     0,   590,     0,  1018,  1021,
    2019,  1019,   144,  1173,  1172,  1008,     0,  1001,     0,   150,
    1012,   153,  1010,   735,     0,     0,     0,     0,   972,     0,
     976,   977,   978,     0,   970,     0,     0,     0,     0,   904,
     906,  2499,  2498,     0,  1421,   896,     0,   761,  3798,     0,
     221,  3814,  3795,  3794,  3823,  3821,  3715,  3716,     0,     0,
    1787,     0,     0,  1122,  1169,  1170,  1113,   518,  1112,   562,
    2183,  2195,     0,  2468,   551,   578,     0,   586,   582,   584,
     587,   612,   611,     0,   589,     0,   606,   693,  1020,  1175,
    1174,  1038,  1171,  1029,   736,     0,  1037,     0,   973,     0,
       0,  1001,     0,  1003,  1005,   783,     0,   894,   755,   755,
     767,  3801,  1410,   204,     0,  1786,     0,  1794,  1115,     0,
       0,     0,     0,  2454,   580,     0,     0,   601,   594,   591,
     147,     0,     0,  1037,   985,   984,     0,     0,   981,   980,
     721,  1001,   725,   727,  1422,     0,   764,   756,   758,   763,
     769,   770,   768,   771,     0,  3655,  3717,  1789,     0,  1802,
    1801,  1788,     0,  1795,  1797,  1128,  2194,  2196,     0,  2462,
     585,   583,   593,   602,   604,   733,  1001,     0,   988,   986,
     987,     0,     0,   723,  1423,   757,   762,   772,   774,  3802,
       0,  1803,  1800,  1799,     0,     0,  1796,     0,  1798,     0,
    2470,   603,   729,  1001,     0,     0,   773,     0,  1805,  1804,
       0,     0,  2469,     0,  2474,   731,   983,   982,  3656,     0,
       0,  2481,  3647,  2472,  2473,  2471,     0,  2476,     0,  2478,
    2479,     0,  2129,  3645,  3646,     0,  3657,  2480,  2475,     0,
    2482,  2484,     0,  2443,  3648,   401,  2477,     0,  1410,   188,
    2483,     0,  3658,  1411,  2485
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5746, -5746, -5746, -5746,  1927, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  2529, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,  1654, -5746,   232, -5746,   238, -5746,   239, -4069,  -649,
   -5746, -2232, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746,  1815, -3413, -5303, -5746, -5746,  -318,  1189, -5746,
   -5746,    41, -5746,  -345, -5746, -5746, -5746, -4711,  -506,  -737,
   -5746,    -5,  4822, -1353,  4825,  4829, -5746,  -487,  4126, -4637,
     247, -5746, -3392, -5746, -5746, -5746, -5746, -2379, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -4911,  1131, -5746, -5746,  -586, -5746,  1642, -5746,
   -4305,   655, -5746, -5746, -5746, -5746, -4398, -5746,  -754, -5746,
   -5746, -5746,  1667, -5746, -5746,   512,  1118,  3056,  2754, -5746,
   -5746, -5746, -5746,  2684, -5746,  1950, -5746, -2729,  3488, -5746,
   -5746, -5746, -5746, -5746, -5746,  1890, -3535, -5746, -5746, -5746,
     893, -5746,  -853, -5746,    38, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    -439, -5746, -2483,  1588, -5746,  1611, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -1346, -5746, -5746, -5746,    43,
   -5746, -5746, -5746, -5746, -5746,  3166, -5746,  4798, -5746, -5746,
   -3878, -5746,  2971, -5746,  2981,  2976, -3271, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,    46, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  -126,  -122,   108,   738,  1227,
   -5746, -4224, -5746, -5746,    22, -5746, -5746, -5746, -5746, -5746,
     996,   236,   994, -5746,   597,  2760, -3297, -5746, -5746, -5746,
   -5746, -5746, -5746,  -491,   -50,  -606, -5746, -5541, -5746, -5162,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -4221, -5746,
   -5746, -5746,  -746, -5746, -5746,  -703, -5746, -5746, -5746, -5746,
    -367, -5746, -5746, -5745, -5746, -5746, -5746,   -40, -5746,  2475,
    4211, -2262,   386,  -646, -5746, -4107,   770, -4223, -4200, -5746,
   -4021, -5746, -5746, -5746,  -251, -1351, -1333, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,   347,   210,   774, -4639, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -4608, -4598,    78, -5746, -4449,
   -5746,   533, -5746, -3767, -5746, -5746, -5746, -5746, -5746, -5746,
    -705, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -3921, -5746,
   -5746,  -530,  -539, -5746,  -428, -3786, -5746,  -832,  4837, -5046,
   -5746,  -420, -1401,  -419,  -414,  -413, -5746, -1567,  1106,  4075,
   -5746,  1849, -5746,  1214, -1518, -1700,  1328,  1545, -3856, -1453,
    1159, -1389, -3861,  1651, -5746,  -379, -5746, -1357, -5746, -1396,
   -3693, -4027, -5746,  -687, -2310, -3664,  -434, -5746, -5746, -2104,
   -3733, -5746,  3208, -2468, -2437,  2383,  1578, -5746, -5746,  1096,
   -5746, -1798,  1095, -5746, -5746, -5746,  1104, -5746,  -689, -5746,
   -5746, -5746, -5746, -4031, -5746, -2972, -3801, -5746,  5238,  5239,
   -3941,  -658,  -657, -5746, -5746, -5746,  -184,  1969, -5746, -4040,
    -442,  -457,  -452, -3682,   -78, -5235, -4111, -3752, -5028, -3850,
    3211, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,   138,   143,  1435, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,   834, -2992, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -4072, -3263, -5746, -5746,
     424, -4142, -4166, -4296, -4292, -4527,  3855, -5746, -5746, -5746,
   -5746,  4276, -3890, -3609, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,  3433,  1603, -5746, -5746,  2014, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  -221,  2021, -5746, -5746, -5746,
   -5746, -5746,  2546, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746,  -365, -5746, -5746, -5746, -5746, -5746,   -48,  3290, -5746,
   -5746, -5746, -5746,   -18, -5746, -5746, -5746, -5746,  2175, -5746,
   -5746, -5746, -5746,  2736, -5746, -5746, -5746, -5746, -5746, -5746,
    1753, -5746,  2396, -5746, -2884, -5746, -5746,  1250,  -627, -5746,
   -5746,  -402, -5746, -5746, -5746, -5746, -5746,    31, -5746, -5746,
   -5746,  5246, -1916,     6,  -472, -5746, -5746,     8, -5746, -5746,
    4337,  -503,  2223,  -719,  5003, -5746, -5746, -5746, -5746, -2933,
    2091, -5746,  4394, -5746, -5746,  4587,  1371,  4355,  1962,   817,
    2184, -2050,  -625, -3094, -2482, -5746,    12, -4427,  1146, -5746,
    1635,  1808, -2873, 11058, -5746, -1951, -1922, -5746, -5746,   -81,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  2287,  2291,
   -5746, -5746,  3738, -5746,  2230, -3824, -5746, -5746,  -905, -5746,
   -2939, -5746, -5746, -5746,  2224, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,  1633, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,  3691,
   -1970, -5746, -5746,  3833, -5746,  1729, -5746,   811, -5746, -5746,
   -1527, -5746, -3266, -5746, -5746, -1953,  -672, -5746,  3823, -5746,
    3856, -1278, -5601, -2102,  -522, -5746,  -289, -5746, -5746, -5746,
   -5746, -5746, -5746, -3397,  -623,  -621, -5746, -5746, -5746,  3448,
   -5746,  4439, -5746, -5746, -5746, -5746, -5746, -5746,  3459, -5746,
   -2968, -5746, -2931,  4443,  4451,  4452, -5746,  4455, -5746, -5746,
   -5746, -2133,   468, -5746,   867, -5746, -5746, -5746, -5746, -5746,
   -3605, -5746,  -169,   724,  -167, -4379, -1920,  1049, -5746, -5746,
   -2224,  3471,  3873, -1369, -5746,  2681, -5746,  3457,  1692, -5746,
    2035, -5746,  1014,  1017, -5746, -5746,  1702, -5746, -5746, -5746,
   -5746,   441,  -149, -5746, -5746, -5746,    34,   779, -2498, -5746,
     452, -3700,  4460,  -765, -5746,  2036, -2330, -3657, -1237,   866,
   -1345,  2046,   436,  5089,  -495, -5746, -5746,  4424,   908, -4008,
   -3098, -5746,  -885, -1961,  1497, -1235,  1503, -3524, -2966, -4998,
   -5746, -2419,  1275, -5746, -5746, -5746, -5746,  1042, -5746, -5746,
   -5746,  2721, -5746,  5382, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,  -707, -1226, -5746,  4062,  3319,  -415,
    -604,  5401,  -401, -5746, -5746,  -400, -5746, -5746,  5188, -2428,
   -5746, -5746,  4594,  3271,  2518, -5746,  1374, -5746, -5746, -5746,
   -5746,  1187, -5746, -5746,   174, -1158,    42,  2040, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,   771, -5746,  1206, -2269, -5746,
   -5746, -5746, -5746,  -396, -5746, -5746, -5746, -5746,  1211, -5746,
    -493, -5746,  -392, -5746, -5746, -5746, -5746,  5026, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -4405, -5746, -3039,  5024, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746,  2903, -5746, -5746, -5746,
   -5746, -5746, -5746,  3719,  5220,  5221, -2021, -5746, -1086,  2905,
    2232, -1084, -5746, -5746, -5746,  4469,  5225, -5746, -5746,  -163,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    2853,   163, -5746, -5746, -5746, -5746, -5746,   473, -5746, -5746,
   -5746, -5746,  3614, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746,  4035, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,  1395,  -476, -5746,
     686,  -519, -5746,   341, -5746, -5746, -5746, -5746, -5746,  -585,
   -5746, -5746,  -594, -5746, -1441,  4939, -1377,  -488, -2119, -3823,
   -5746,     1, -5746, -5746, -5746, -5746,  2907, -5746, -5746,  2804,
    2579, -2963, -5746,   516, -5746, -5746, -3110,  -948, -1984, -4359,
    2084, -5746, -5746,    40,  -962,  1143, -5746, -5746,    11,   348,
   -1296, -5746, -5746,  2531,    -3,  1967,  -568,  -797,  -792, -1085,
   -5746,  4632, -5746, -5746, -5746,   184,  -608,  -536,    98,    61,
     135,    68,  6922,  9212,    24, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746,  2298,  2299, -5746,  5273, -5746,
    3299,  3025, -5746, -5746, -5746,  2297, -5746, -5746, -5746,  5274,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    2312,  2317,  2319, -5746, -5746,  1770, -2723, -5746, -5746, -5746,
   -2293,   197, -5746,  3337, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746,  3642,  -575,  4763,  -592,  3841,  5289,  4804,
   -5746,  4101, -5746,  4105, -5746,  1579, -5746, -2117,  2392, -1775,
   -3806, -5746, -5746,  2777,  1133, -5746, -5746, -2945, -3580, -5746,
    2237,  1020, -5746, -5746,   324, -5746, -5746, -5746,  1581,    76,
    5275,  4677, -5746, -5746, -5746, -5746,  5494,  2458, -5746,   942,
    5520,  5521,  5524,  -444, -5746, -3677, -5746, -4595, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746, -5746,
    1693, -5746, -5746,  2894, -5746, -5746, -5746,  2557, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746,   -75,  5043, -5746,
   -5746, -5746, -5746,  1493, -3061, -5746, -4176, -4644, -5746, -5746,
     792, -5746, -5746, -5746,  -694, -5746, -5746, -5746, -5746, -3763,
    3359, -5746,  1979, -5746, -5746, -2485, -5746, -5746, -2567, -5746,
      35,  -645,  5050, -5746, -5746, -5746, -5746, -5746,  5032, -5746,
   -5746,  1306, -5746, -4160, -5746,    86, -4162,  -213, -4157, -5746,
   -4061, -5746, -5746, -5746, -5746, -5746, -5746, -5746,   806,   818,
   -5746,   822, -5746, -4694, -5746, -5746, -5746, -5746, -5746, -5746,
   -3491, -5746, -5746, -3097, -5746,   797, -5746, -5746, -5746, -5746,
   -5746, -5746, -5746, -5746, -5746, -5746, -5746, -2643, -5746, -5746,
   -5746,  4210, -5746,  5155, -5746,  -972,  5044, -5746, -5746, -5746,
   -5746, -5746, -5746,    48, -5746, -5746, -5746, -2539, -5746
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,   475,   767,  2345,   476,   477,   478,   479,   480,  2311,
     481,  1320,  3059,  1322,  2280,  3062,   482,   736,   483,  2480,
    3269,  3270,  4948,  4949,  4942,  4943,  4945,  4946,  3271,   851,
     852,  3105,  3106,   484,  3123,  4318,  3778,  2347,  5146,  3117,
    5469,  2352,  5149,  2353,  5150,  3115,  4331,  4828,  2357,  2358,
     777,  4319,  3872,  3873,  6141,  1381,  3774,  3881,  3882,  3128,
    4809,  4928,  5851,  4932,  5996,  6139,  5943,  3901,  5350,  5852,
    5853,   669,  1393,   664,   665,   666,   485,  5798,  2446,  5581,
    5552,  5553,  3216,   486,   844,  2469,  3908,  1500,  2470,  3235,
    3236,  5233,  5234,  5578,  3941,  3942,  3943,  5548,  5549,  4481,
    4804,  5205,  5550,  3944,  4818,  3044,   976,  1797,  3315,  3316,
    2545,  4488,  4489,  4490,  3951,   866,   867,  2554,   868,  3340,
    3278,  4019,  4020,  4518,   869,  3990,  3991,  3992,  3344,  1190,
    3993,   487,   488,   690,   698,   691,  1187,  2915,  1188,   489,
     490,  2305,   734,  3081,  3082,  3083,  3084,  4278,  3737,  4272,
    4273,  5139,   870,   871,   977,   670,   978,   979,   980,   981,
    2664,   982,  3420,  4041,   983,  3415,  4039,   984,   985,   986,
     955,   847,  3371,  3423,  4042,  3372,  4021,  3424,  2659,   987,
     988,   989,   990,   991,  1941,   956,  2629,  4030,  4532,   992,
     645,   848,  1502,  2473,   849,  2474,  3912,   850,  2471,  1505,
    4048,  2599,   909,  1859,   993,  1196,  4049,   994,  2667,  2669,
    2666,  4047,  4998,  2668,   995,   680,   708,   668,  1857,   696,
    5209,  5559,  4789,  5204,  4790,  5535,  4719,  5198,  5199,  5200,
    5637,  3721,   494,   683,  1172,  2133,  2907,  4192,  3597,  3599,
    2908,  4191,  4658,  4659,  4660,  3595,  3596,  5718,  3601,  4189,
    5894,  6277,  6024,  6025,  4181,  6029,  4667,  5073,  5074,  5075,
    5436,  5720,  5900,  6162,  6030,  6284,  6160,  6280,  6161,  6282,
    6416,  6368,  6369,  6172,  6295,  6296,  6373,  6417,  6040,  6041,
    6042,  6462,  6463,  6043,  4185,  4186,  5715,  5069,  5771,  3765,
    3766,  2441,  5611,  1331,   495,  4791,  4912,  4792,  4793,  5505,
    6180,  4795,  4796,  6100,  4797,  4798,  4799,  6376,  2209,  5531,
    5517,  4826,  5654,  4800,  5154,  5155,  5156,  5157,  6066,  6211,
    6068,  6069,  6204,  6317,  6203,  5158,  5159,  5477,  5930,  5485,
    5310,  5160,  5161,  5162,  5492,  5762,  5932,  5928,  6077,  6078,
    6436,  6437,  6093,  6400,  6094,  6443,  6476,  6477,  6079,   496,
     682,  2082,  6227,  6228,  6229,  3969,  5763,  3970,  3971,  3972,
    1801,  1802,  2517,  1803,  1804,  1805,  1806,  1807,  1808,  1809,
    1810,  1811,  1812,  3330,  2504,  2505,  3292,  3293,  2495,  2496,
    4558,  2497,  4559,  2563,  6095,  6096,  3285,  2501,  6330,  2502,
    6080,  6097,  6082,  2521,  2158,  2159,  3815,  2173,  2174,  3647,
    3648,  2444,  2522,  3301,  2523,  3334,  4626,  5419,  4632,  4633,
    4634,  4143,  4144,  4145,  4146,  4147,  3555,  6083,  5755,  6064,
    6206,  6209,  6324,  6428,  5486,  5163,  5490,  1289,  5164,  5165,
    6181,  6193,  6197,  6182,  6198,  6194,  5924,  3769,  6183,  6184,
    6185,  6200,  6196,  4309,  6186,  5737,  6053,  5738,  5739,  5473,
    3307,   497,   634,  4430,  1469,  3202,  1471,  1481,  3905,  3228,
    3227,  1484,  1483,  3220,  4398,  4883,  5287,  4429,  3902,  4434,
    5663,   813,  4914,  5986,  5826,  5994,  5828,  4915,  5114,  4916,
    5971,  6123,  4917,  5847,  5992,  6135,  5115,  5116,  4918,  4919,
    4920,  6266,  6302,  6303,  6304,  5296,  2253,   827,   828,  1489,
    1490,  1491,  3365,  5658,  5322,   498,  3760,  3099,   499,  1348,
    1349,  1350,  2323,  2324,  3102,  3103,  4299,  4747,   500,  1315,
    3055,  2313,  3091,   501,  1334,  3751,  3752,  3753,  4293,   502,
    1497,  2465,  2466,  3232,  4441,  4940,  5355,  5671,  5859,  5667,
    6003,  6004,   503,   855,  1508,   504,   647,  2489,  2490,  2491,
    3273,   505,  1952,   642,   506,  2142,  2139,  2921,  2922,   507,
    1314,  2267,  2268,  2269,  2270,  3717,   508,  2637,  3388,  3389,
    3390,  3391,  3050,  4262,  3051,  3052,  3726,  4538,   509,   791,
    1461,   510,   790,  1460,   511,   512,   707,   762,   700,  2149,
     514,   515,  4720,  2710,   517,   797,   795,  1132,   519,  1453,
    1449,   520,  2711,  1133,   787,   788,  1401,  1216,  3798,  3799,
    2581,  2582,  3163,  3150,  1217,  1218,  1430,  2422,  3181,  2933,
    2934,  2249,  2935,  3241,  2433,  1503,  5785,  5561,  4677,  6397,
    1981,  1869,  3168,  1318,  1135,  1136,  1137,  2093,  2094,  2109,
    1138,  2103,  2858,  4602,  5040,  5041,  5042,  5043,  2796,  2797,
    2902,  1139,  2786,  2787,  2788,  1140,  1141,  1142,  1143,  1144,
    1145,  1146,  2779,  2780,  2781,  1147,  1148,  1149,  2897,  4584,
    4585,  5022,  3590,  3591,  3592,  1150,  3452,  4568,  3463,  3464,
    2739,  1151,  1152,  1153,  1154,  1155,  4167,  1156,  4648,  4363,
    1157,  1953,  2674,  2737,  5010,  4573,  5392,  5012,  5013,  5396,
    2679,  3440,  4077,  4078,  4079,  2800,  2801,  2002,  2003,  1970,
    1971,  1402,  5243,  1403,  5588,  5960,  5961,  6119,  6349,  6258,
    6259,  6451,  6481,  6452,  6453,  6454,  1404,  3136,  4829,  1405,
    1406,  1407,  4348,  4349,  5244,  4833,  5246,  4837,  2383,  2384,
    2387,  2388,  1408,  1409,  1410,  1411,  2371,  1412,  1413,  3802,
    1414,  3155,  5679,  4971,  4972,  5869,  5868,  4973,  4506,  4507,
    4002,  4003,  4730,  4731,  4732,  3811,  2733,  2734,  2808,  2642,
    2643,  2644,  2680,  1422,  2398,  3172,  3821,  2400,  3819,  4358,
    3823,  4364,  4365,  2889,  3580,  4163,  3582,  5061,  5426,  5427,
    5710,  5882,  5883,  5888,  4923,  5634,  5635,  3356,  1431,  3189,
    3838,  4361,  2211,  2212,  1433,  2404,  3176,  3827,  2213,  2411,
    2412,  3832,  4011,  1434,  1435,  1447,  1452,  1438,  4975,  1436,
    3345,  4879,  3346,  4148,  4859,  4131,  4856,  5120,  5543,  2703,
    2704,  5498,  4472,  1439,  3192,  4375,  4376,  4377,  1418,  1419,
    2393,  2394,  2395,  1440,  1420,  3164,  4354,   521,   729,   522,
    2595,   897,  1853,  2594,  3733,  1510,  4256,  1837,  1838,  1847,
     821,   667,   523,   671,  4533,   524,   711,  4255,   957,  3217,
    1898,  2261,  1899,  3043,  3711,  3712,  4721,  5108,  4722,  5101,
    5102,  4723,  1302,  5451,  5452,  1467,  4394,  4395,  4389,  3036,
    3706,  1303,  2254,  4249,  3033,  4250,  3034,  3064,  4251,  5384,
    5874,  6275,  3030,   525,   705,  4708,  5901,  4243,  4244,  6360,
    6361,  1300,   526,   650,  2575,   893,  3350,  1835,  1840,  1841,
    4981,  2579,  5371,  3351,  5681,  4514,  4980,  2585,   894,   895,
     527,   750,  3761,  1354,  2233,  2234,  2235,  3017,   528,   702,
    1290,  4238,  4705,  3003,   686,  6045,  2216,  1293,  2217,  2999,
    3688,  2197,   529,  1458,  1456,   842,   530,   531,   803,   643,
    2427,   532,   533,  1323,  2300,  3078,  4269,  4270,  4735,  2301,
    2302,  3734,   534,   715,  1308,  3730,  5121,  5122,  5462,   535,
     741,  1338,  1339,  2317,  2315,  3756,  3094,   536,  2909,   537,
     672,   960,  1902,  1903,  2635,   538,   744,  1343,   539,   540,
     962,  4539,  6151,  6363,   676,  2639,  1907,  5536,  4843,  5253,
    5254,  5256,  5601,  5602,  6413,  6504,  6515,  6511,  6518,  6519,
    6522,  6530,  6531,  1158,  1361,  1362,  1159,  6232,  1160,  1161,
    1162,  2712,  1306,   710,  2257,  3040,  2258,  5446,  5725,  3041,
    2626,  2627,  2259,  5103,  5104,  3619,  3820,  1163,  4245,  5474,
    1511,  1842,  1326,   613,  1164,   614,  1165,  1166,   823,  1363,
    2390,  3398,  1239,  3632,  1167,  4050,  1477,  2140,  2454,  2455,
    3399,   616,  3633,  1240,  1814,   617,   618,   619,   620,   621,
     622,   623,   548,   549,   624,  1821,   551,   701,  1248,  2170,
    2178,  2952,  2168,  2964,  3668,  2966,  2967,  3673,  2968,  1296,
    2939,  2169,  3657,  4691,  4690,  2965,  4230,  5091,  5090,  2969,
    2960,  4226,  4212,  3642,  4684,  5440,  5439,  2947,  2946,  2945,
    2955,  2956,  2957,  2958,  4223,  3653,  2434,  3199,   552,   963,
    2648,   679,  1909,  1910,  3412,   553,   704,   554,   735,  1328,
    3087,  3743,  3744,  4288,  4739,  4289,   555,  1201,  1202,   556,
     946,  3772,  3375,  2588,  1480,   948,  2589,  2610,   950,  1861,
     951,   952,   953,   954,  4419,  3894,  3895,  3379,  2591,  2456,
    2929,  3887,  4869,  2457,  4413,  4414,  4870,  3225,  5686,  4426,
    3898,  5381,  4523,  5687,  5688,   557,   716,   558,  5554,   728,
    1317,  2277,   559,   560,   561,   562,   796,  1443,  1219,   635,
     636,   637,   638,   831,   832,  3904,  4436,  4935,  4936,  5665,
    6525,  6526,  5779,  5941,  3127,  4322,  6240,  6480,  6512,  6535,
    4327,  4328,  4329,  3783,  3784,   563,  1368,  1364,   761,  2343,
    2337,  2339,  3113,  3764,   564,   565,   566,  3321,   567,  1938,
    2663,  4046,  4997,  3383,  2476,  6107,  4819,  5236,  5580,  5796,
    5225,  6246,  6244,  1822,   625,  1921,   880,  4303,   911,  3317,
    1305,  3037,  2597,   996,   997,  3322,  4955,  4483,  2477,  2478,
     881,   882,   569,   570,  1462,  3200,  3201,   998,   999,  4261,
    4726,  4727,  5111,  4820,  4821,  4807,  5800,  6344,  4812,  2264,
    5938,  5939,  6238,  6444,  5226,  5227,  5572,  5228,  5229,  5564,
    5946,  5562,  5945,  5230,  5789,  6111,  5787,  6110,  5214,  5215,
    5231,   883,  3946,  5551,  3948,  5582,  5797,  3780,  4321,  5555,
     571,  3125,  4334,  4332,  4324,  4330,  5791,   884,   885,  1830,
     886,   887,  2570,   888,  2492,  1000,  1001,   572,  1002,  2671,
    2670,  4053,   721,  1003,  1312,   649,  1829,  2265,  3714
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     615,   541,   763,   719,  1936,   644,   516,  1251,   518,   720,
     830,  3065,   681,  1798,  1237,  1288,   836,  2428,  2917,  2702,
    2884,  1478,  3219,   912,   550,  1432,  1479,  3432,  3347,   826,
    1432,   513,  1432,   692,  1799,   568,   699,   692,   491,  3110,
     542,   874,   692,   492,  1957,   706,   493,   896,   573,  2413,
    2239,   899,  2413,   901,  2401,   902,   903,  1319,   904,   905,
     906,   545,  3384,  3702,   825,  2774,  1400,  2518,   547,  3331,
    2709,  2160,  2508,  2163,  2164,  2743,  3709,   949,  2500,  3839,
    3725,  2177,  3086,  3302,  2417,  3357,  4310,  3191,  3332,  2834,
    3234,  1194,  2005,  1242,   947,  2763,   724,  1345,   544,  3109,
    1352,   945,  3842,  2817,  3843,  3844,  2004,  1203,  2141,  2506,
    1195,  4468,  2562,   875,  2607,  3680,  4378,  1964,  2442,  3302,
    2366,  2391,  2837,  1375,   947,  1376,  4840,  4516,  2332,  1378,
    1379,   945,  3433,  1832,  4921,   546,  2443,  2506,  4922,  4372,
     815,  2498,  2527,   819,  2849,  2987,  2988,  1355,  1356,  1509,
    4353,  3029,  2857,  2859,  1313,  2862,  2863,  4486,  4827,  4051,
    4052,  4806,   732,  4237,   731,  1243,  3722,  2916,  1329,  2087,
    5206,  4368,  1823,  4815,  3773,  3422,  4546,  3911,  3204,  4956,
    3947,  2994,  2207,  5238,   543,  4082,  4379,  4491,  2869,  2870,
    2871,  2872,  2873,  2874,  2875,  2877,  2879,  2880,  2881,  2882,
    2883,  3010,  4271,  2241,  2240,  5544,   846,  2506,  4352,  3800,
    3800,  3303,  4802,  4562,  4557,  1512,  3801,  5346,  4557,  1513,
    2078,  2080,  2081,  1936,  3654,  3023,  3024,  3807,  4438,  4746,
    4913, -3443, -3443,  2123,  2524,   695,  5743,  3666,  2520,  2520,
    4717,   837,   838,   839,  2526, -2562,  5293,   840,  3159,  2520,
   -3739,   841,  -395,  3077, -1050, -1050,  4938,  3341,  1816, -2563,
   -2857, -2857,  -509,  -509,  2536, -3735,  1496,  3272,  2542,  1304,
    4810,  2467,  2167,  5719,  5669,  1465,  2509,  5294,   874,  -407,
    -407,  2553,  3104,  3363,  3426,  1875,  2525,  5295,  1465, -2677,
   -2677,  3884, -3732,  1450,  1876,  4572,   726,  4794,  4794,  6283,
    4183, -3737,  1451,  1855,  1856,  1221,  2198, -3733,   748, -1911,
   -1911,  4387, -3444, -3444,   739, -3736,  5109,  4425,  4355,  4356,
    4013, -3521,  4418,  5579, -3504, -2677,  3223,  2045,   740,  2506,
    1817, -3734,  4957,  2506,  3341,  1851, -3508,  1391,  5675,  2530,
    3409,  5863,  5354,  5956,  2520,  6248,  2506,  2438, -3443,  3348,
     875,  3736,  4410,  4716,  4717,  2088,  2640,   809, -3507,  5298,
    2162,  5300, -3505,  2089,  5312,   743, -3506,   804, -3511,  6047,
    2531,  2064,  2090,  4811,   723, -2219,  2068,  2533,  5330,  3434,
     809,  2529,  2520,  2555,   684,  4338,  2532,  2341,   829,  1495,
    2534,  3650,  4326, -3443,  3410,  4674,  4675,  4453,  5166,  4993,
    2543,  2435,  2546,  2547,  2548,  2549,  1501,  2550,  3298,  4794,
    3800,    42,  1848,  6264,  1849,  2088,  4004,  5219,  2556,  2557,
    2558,  2559,  2560,  2089, -2158, -2712,  2537,  1487,  3326, -3444,
    2088,  3341,  2090, -2674, -2674,  1465,   742,  2088,  2089,  2681,
    2682,  4130,  1465,  2110,  5744,  2089,  5764,  2090,  2692,  2695,
    2696,  2697,  5732,  2698,  2090,  2699,   712,  2700, -2728,  4397,
    5248,  3364,    49,  1465,  2414,  4300,  3374,  2414,  3341, -2674,
   -2729,  2583,  2111,  2112, -3444,  5860,  3341,  3845,  3846,  2753,
     677,  2756,   764,    42,  4692,  4439,  3341,  3341,   639, -2730,
    4810,   723,  2088,  3380,  1221,  4431,  2769,  2770,  2772,   688,
    2089,  4976,  2088,  2775,  2776,  3174,  5912,  4234,  4034,  2090,
    2089,  2792,  2695,  2696,  2697,  6251,  2698,  3341,  2699,  2090,
    2700,  3341,  3341,  1885,  4204,  4205, -3330,   806,  6346,  6498,
    3341,  2091,  3341,  2200,    49,  5575,  2113,  2609,  1947, -3443,
    6398,  1940,  3885,  5207,    51,  1465,   723,   808,  1895,   518,
    2088,  4306,  1316,  5481, -2857,  2695,  2696,  2697,  2089,  2698,
    5166,  2699,  2510,  2700,  1465,  2685,  1905,  2090,  2205,  2110,
    5202,  1465,   513,  3000,   879,  3119,  1221,   713,  2512,  2514,
    2538,  6262,  2110,  4469,   792,  4867,  1465,  6017,  4994,  4236,
    5496,  2091,  4993,  4811,  5499,  5501,  2645,    42,  2111,  2112,
    4876,  4718,  2088,  5503,  1265,  5521,  2091,  5482,  2272,  4247,
    2089,  2111,  2112,  2091,  4291,  4292,  3001,   793,  2088,  2090,
   -3444,  6336,  2114,   814,   816,   639,  2089,   816,  2374,   824,
    3609,   646,  4822,  1384,  2236,  2090,  2238,  5576,  2439,  2092,
    3564,  3363,   745,  2903,   541, -3537,  5475,  2640,    49,   516,
    4628,   518,  2152,  5570,  4816,  3319,   763,   853,    51,  2088,
    4663,  2161,  2113,  1346,   945,  4307,   824,  2089,  2091,  2175,
    4628,  5316,  6464,   878,   513,  2113,  2090,  5193,  2091,  1400,
    1886,   648,  3450,  3100,  3771,  2088,  2110,  5925,  2453,  1193,
    1192,  4823,   550,  2089,   722,  1432,   824,  3500,  4557,  2092,
    2210,   693,  2090,  4629,  2904,  4962,  3489,  5483,  3304,  3448,
     877,  1309,  3320,  4913,  2092,  2111,  2112,   547,  6491,   824,
    3565,  2092,   723,  4629,  3305,  1247,  2091,   725,  5571,   545,
    5886,  2348,  1327,   824,  2351,   673,   547,  4393,  2354,  2355,
    2356,  1238,  3101,  2359,  2360,  2580,  1347,   876,  2114,  1332,
    2110,  6407,  4470,  5493,  3002,  4522,  6226,   853,   794,  4432,
     853,  2114,  1244,  3703,  2686,  1374,   544,  2590,  2499,  1246,
   -3537,  4824,  4794, -1911,  2646,  5484,  2092,  5610,  2091,  2113,
     889,  4994,   806,  1906,   546,  5563,  2092,  1896,  3695, -3330,
    1340,  5563,  1310,  1265,  2091,  2930,  1948,  5194,  2604,  1455,
     641,  2481,  6399,   546,  1448,  6447, -3443,  1463,  1464,  3566,
    3767, -2219,  6250,  3615,  3616,   824,   890,  2539,  6409,  3364,
    4440,  1485,  1887,  4236,  2206,  4235,  4693, -1911,  5208,   836,
    5219,   824,  4868,   873,  2092,  2091,  1245,  3980,  3981,   835,
    1498,  3982,  3983,  2113,   856,  4308,  4880,  3828,  2201,  6499,
    2514,  2397,   543,   806,  1468,   677,  3800,  6265,  5284,   685,
    2494,  2091,  4337,  5937,   908,  2114, -2219,  5078,  2515,  1488,
   -3631,  3352,  2342,  4343,  3224,  1265,  4193,  4347,  1004,  2278,
    5575,  5954,  2458,  6085,   550,  1241,  2092, -3444,   550,  3593,
    1820,  1843,  4794,  1845,  3111,  4670,   816,  1850,   816,  1852,
     824,  1298,  2092,  1854,  6279,  3327,  3190,  4397, -3521,   678,
     878, -3504,  5285,  3572,  3573,  3382,  3576,  3577,  4411,  3558,
    3559,   545,  4005, -3508,  3411,   545,   763,  1819,   547,  2114,
    2628,  2488,   547,  3899,  4218,   749,  4326,   641,  2199,  3813,
    5278,  3224,  3651,  2092,   474, -3507,  3938,   877,  4362, -3505,
    1450,  2364,  5861, -3506,   547, -3511,  1877,  3652,   544,  4502,
     806,  2917,   544,  1927,  1818,  2431,  4976,  6267,  4013,  2092,
    1931,  2516,  1934,   714, -3537,  6325,  3886,  6327,  5537,  5690,
     541,  5166,  6020,  2905,   876,   516,  1942,   518,  1920,  1920,
    5802,  1920,  1920,  1920,  2940,   546,  2237,  4939,  1920,   546,
    3696,  4301,   674,   550,  1466,  6347,  2462,  2488,  3342,  2950,
     513,  5293,  5782,  1385,   568,  5670,   474,  1466, -2568,   542,
   -3443,   546,  2005,  3805,  3806,  1918,  1918,  2413,  1918,  1918,
    1918, -3739, -2569,  -395,  4505,  1918,  2707,  3939,  2747,  2005,
     545,  4921,  5294, -1050,   543,  4922, -3735,   547,   543, -2857,
    1815,  -509,  5295,  2004,   837,   838,   839,  2078,  2080,  3177,
     840,  2927,  1917,  1917,   841,  1917,  1917,  1917,  -407,  5944,
     873, -2677,  1917, -3732,  2641,  4017,  5467,   544, -2677, -2677,
    6385,  6386, -3737,  4656,  2046,  3342,  4236,  3308, -3733,  2442,
    2181,  6392,  2453,  4357,  3308,  3145, -3736,  5547, -1911,  1919,
    1919, -3444,  1919,  1919,  1919,  5097,  3160,  2443,  2985,  1919,
    2916,   810, -3734,  4958,   546,  2991,  3562,  2993,  3300,  5676,
    2997,  5166,  5864,  2520,  5957,  5312,  6249,  2086,  2065,  2085,
     474,  2248,  3005,  2069,  2662,  3008,  2083,  4913,  4080,  3011,
    4081,  3284,  2065,  3287,  5257,  3323,  2592,  5260,  3324,  4536,
    2520,  5239,  6423,  2520, -2712,  4045,  3299,  3335,  3022,  3361,
    4210,  2494,  2520,   543,  1466,  3026,  3027,  3028,  2896,  5544,
    5544,  1466,  5409,  3451,  3309,  2005,  5411,  4557,  4895, -2712,
    4794,  4557,  3342,  4794,  2906,  6328,  3314, -2728,  2842,  2918,
     824,  5261,  1466,  3470,  -115,  3471,  -115,  4491,  3449, -2729,
    2278,  3962,  3336,  4271,  2116,  2117,  2118,  2119,  2120,  2121,
    2122,  5805, -2728,  5806,  2701, -2674,  2963,   824, -2730,  3342,
    2886,  2110, -2674, -2674, -2729,  3479,   824,  3342,  3482,   824,
    3224,  -119,  5784,  -119,   824,  4825,  6542,  3342,  3342,  -111,
    3768,  -111,  2516, -2730,  3494,  2672,  4630,  4844,  3462,  2309,
    2111,  2112,  4008,  6021,  1372,   892,  5823,  3567,  5825,  2088,
    3456,  4847,  3275,  5830,  3513,   824,  4630,  2089,  3342,   746,
    5835,  5836,  3342,  3342,  1466,   947,  2090,  2773,  2488,  3552,
    5842,  3342,   945,  3342,   678,  5854,  5166,  4855,  4858,  4724,
     677,  4858,  4855,  1466,   853,  3594,   853,  4130,  4130,  2176,
    1466,  2689, -2219,  2260,  2203,   806,  3472,  4012,  3473,   639,
    3053,   806,   806,  5931,  2113,  1466,  4794,   677,  2949,   747,
    6434,  5216, -1871,  5286,   854,  3669,  4878,  4391,  2310,  2115,
    2116,  2117,  2118,  2119,  2120,  2121,  2122,  2320,  5044,  1424,
    4208,  3286,  1424,  3085,  2117,  2118,  2119,  2120,  2121,  2122,
    1478,   806,  2333,  5317,  2376,  2928,   675, -1911,  4583,  5948,
    3501,  5950,  2275,  1895,  5491,  2641,  4427,  2334,  4220,  3602,
    5432,  2088,  2346,  2349,  2350,  4631,  3457,  2218,  2811,  2089,
    3947,  2989,  2438,  4941,  1426,  2675,  2861,  1426,  2090,   889,
    4968,  4333,  1221, -1295,  3205,   806,  2373,   677,  5777,  2085,
    2114,  3800,  3800,  2995,  4965,  4966,  2083,  4830,  4831,   717,
    5786,  5788,    42,  4834,  4835,  3541,  2396,  3542,  6022, -1986,
    2377,  2088,  5801,  1478,  1900,   890,  1428,  2134,  3009,  2089,
    6424,  2378,  6448,   717,  2420,  2091,  2326,   781,  2090,  2379,
    2482,  4155,  2414,  4156,  3182,  3723,  2115,  2116,  2117,  2118,
    2119,  2120,  2121,  2122,  3289,  2429,  2430,   541,  3660,  4264,
    3724,  1448,   516,    49,   518,  6243,  5166,  2380,  6320,  2447,
    6242, -3767,  5983,    51,  2953,  6513,  3054,  3290, -1871,  2437,
     806,  6306,   824,  2650,   717,  1251,  2917,   513,  5955,  4686,
     816,   806,  1237,  2656,   806,  4493, -3768,  4495,  3825,  4266,
    5656,  2460,  2088,  4695,  3204,   806,  2129,  4698,   709,  5911,
    2089,  5692,  2117,  2118,  2119,  2120,  2121,  2122, -2406,  2090,
    2304,   727,   763,  2381,  4295,  3889,  3302,   717,  3302,  4442,
     958,  2314,  2088,  2088,  1400,  6449,  2250,  2973,  2138,  4520,
    2089,  2089,  1472,  2092,   723,  1454,  4969,  2091,  3387,  2090,
    2090,  2382,  5832,  2453,  4098, -3340,  2885,  6514,   858,   859,
    4540,  3422,  2941,  5211,  2088,  6023,   718,  2640,  2088,  4279,
    4280,  1242,  2089,   -72,  4465,   640,  2089,  2461,  5855,   947,
     833,  2090,  4985,  4986,  2088,  2090,   945,  2088,  5318,  2251,
     718,  5085,  2089,  4907,  1878,  2089,  6321,  2091,  4023, -2349,
    4892,  2090,  1896, -2406,  2090,  5603,  6341,  3092,  6425,  2850,
    3723,  6120, -2158,  2244, -2158,  2327, -2158,  5098,  4154,  5657,
    4157,   641,  6426,  5947,  2984,  3724,  1465,  5217,  4428,  3032,
    6133,  4168,  4171,  4174,  4175,  2916,  4236,  3661,  5756,  4187,
    5958,   718, -1871,  1243,  1901, -2556, -3764,  3074, -2349,  2488,
    3890,  4034,  2709,  5506,  1400,  2092, -3762, -1911,  4161,  4162,
   -2406,  2135,  1897,  5519,  5520,  1400,  1400,  4543,  3095,  1416,
     907,  6260,  4182,  2439,  6322,  5524,  4242,  2376,  2091,  2204,
    2195,  2483,  2088,  5752,   718,  3603,  5433, -1986,  5319,  2851,
    2089,  1265,  2219,  5694,  2276,  4392,  2990,  2975,  2976,  2090,
    2978,  2980,  2981,  2982,  2924,  2092,  3121,  3122,  2091,  2091,
    4970, -3765,  2645,  2992,  3437,  3132,  3133,  3134,  2996,   678,
   -3767,  4515,  3185,  5856,  5566,   891,  1395,  5388,  5713, -3763,
    2088,  3007,  3126,  3129,  3553,   959,   717,  2954,  4466,  2113,
    2091,  2088,  2088,  2377,  2091, -3768,   678,  2090,  1424,  2089,
    2089,  5337,  1425, -2349,  2378,  2568,  5263,  3206,  2090,  2090,
    2091,  3413,  2379,  2091,  2442,  2484,  3826,  2485,  4897,  6450,
    6109,  4221,  3114, -1911,   947,  5993,  6102,   694,  2852,  2088,
    3692,   945,  2443,  3120,  3644,  4806,  2092,  2089,  2005,  3478,
    2380,  6112,   872,  1426,  5795, -2349,  2090,  1429,  4222,  1427,
    1429,  3665,  3477,  5212, -2349,  3670,  2413,  3571,  2413,  2413,
    3747,   910,  1879, -1911, -2349,  1832,  2092,  2092, -3340,  1827,
    2088,  3748, -1295,  2565,  3165,  2114,   678,  2196,  2089,  3291,
   -2349,   806,  1428,  2577,  3606,  3607,  5151,  2090,  3831,  2482,
    3834,  3835,  4467,  2245,  2587,  1295,  2381,   824,  2092,   824,
     806,  2442,  2092,  5290,  3892,  1459,  -968,  2486,  2091,  3792,
    3649,  2510,  2804,  2805,   892,  3793,  2312,  5218,  2092,  2443,
    3548,  2092,  3130,  3131,  2382,  1221,  4339,  2512,  5845,  6044,
     824,  3218,  4160,  3563,  1417,  5556,   824,  3367,  3368,  5378,
    2646,  5699,  3242,   718,  1880, -3764,  4267,  6115,  5393,  3318,
    4393,  6081,  5386,  5920,  4508, -3762,  3682,  6076,  5926,  5927,
    3683,  6076,  3685,  2154,  5297,  2307,  2645,  2091,  2091,  5311,
    2088,  2652,  6071,  -930,  5321,  -930,  3690,  2647,  2089,   862,
     863,  2487,  3186,  2273,  5557,  6427,  5839,  2090,  6281,  3698,
    3699,  6285,  2246,  6121,  2885,   474,  5985,   765,  3408,   806,
     824,  2438,  5428,  2161,  3210,  2091,  5895,  5829,  2247,  4510,
   -3765,  5084,  2936,  3384,  3747,  1473,  2092,  5088,  5089,  5525,
    4864,  5526,  1943,  3620,  5625,  3748,  3749, -1911, -3763,  4711,
    6389,  2115,  2116,  2117,  2118,  2119,  2120,  2121,  2122,  2167,
    6072,  4281,  6268,  2195,   518,  2085,  2091,  5367,  -742,  5368,
    2937,  5514,  2083,   910,  2467,  5527,  4999,   910,  6380,  1813,
    3369,  6379,  6062,  4810,  2092,  6195,  6199,  3554,  2854,  1425,
    6044,   912,  4710,  1944,  2088,  2092,  2092,  6309,  6072,   872,
     768,  6311,  2089,  3239,  3401,  5528,  4282,  2088,  5910,  5619,
     786,  2090,  6356,  4848,  6358,  2089,  5515,  5976,   806,  6245,
    6247,  6217,   806,  5018,  2090,  6019,  2088,  6076,  5978,   806,
    2308,  2155,   874,  2092,  2089,  5644,  1427,  3794,  1828,  6060,
    2835,  5320,  3713,  2090,  6076,  4325,  2214,  2628,  5493,  4236,
    2483,  5558,  1195,  5001,  4881,  4268,  6073,  1945,  5003,  4236,
    4236,  2843,  2088,   518,  2646,  5004,  2091,  4035,  4283,  2215,
    2089,  3750,     4,     5,  2092,  1846,  3402,  1915,  1915,  2090,
    1915,  1915,  1915,  1437,  3302,  5516,  4811,  1915,  2005,  3302,
    2088,   824,  6523,  2890,  6073,  6357,  3302,  4578,  2089,  4579,
    3749,  2488,  2918,  6408,   875,  1474,  6122,  2090,  2274,   806,
    2196,  4284,  2088,   824,   824,  6414,  2910,  3575,  2088,  2514,
    2089,   824,  2942,  1475,  6195,  2938,  2089,  6050,  6199,  2090,
    1946,  5896,  5897,  2088,  2484,  2090,  2485,  2515,  5529,  2806,
    3560,  2089,  2807,  2959,  1265,  5475,  6390,  6016,  2898,  3466,
    2090,   816,   816,   806,   816,   816,   816,   816,   806,   824,
     824,   806,  5489,  5489,  5733,  6074,  5977,   816,  5889,  2499,
    2091,   811,  5530,  1247,  2092,  4882,  1429,  4641,  3754,  4644,
    2899,   792,  3416,  2091,  3006,   816,  6420,   824,  3421,  1238,
    5019,  2414,  -930,  2414,  2414,  3836,  2853,  5973,  3178,  2088,
    1304,  2088,  2091,  6074,  3012,  1846,  5991,  2089,   806,  2089,
    1244,  6065,  2439,  6067,   793,  3641,  2090,  1246,  2090,  6130,
     806,   766,  4527,  4528,  2088,  3750,  2486,  6154,  4642,  2088,
    4643,   785,  2089,  6231,  5898,  6524,  2088,  2089,  2091,  1392,
    1936,  2090,  3589,  4382,  2089,  6422,  2090,  4016,   817,  2402,
    5974,  2088,  5684,  2090,  2900,  2641, -2349,   786,  3481,  2089,
    1964,  3467,  5476,  2088,  6440,  3830,  2091,  6351,  2090,  1525,
    6050,  2089,  6231,  2488,  4285,  4286,  4287,   853,  2092,  5618,
    2090,   806,  6467,  3839,  1245,  3587,  3097,  4236,  2091,  6468,
    -741,  2092,  3468,  3588,  2091,  3179,  3474,  4241,   853,  4478,
    2487,  3635,  4479,  1441,  3612,   737,  5899,   824,  4715,  2091,
    2092,   818,  3484,  5649,  3116,  3485,   824,   824,   824,  4383,
    6187,   947,   806,  6195,  6199,  1466,   816,   816,   945,  6429,
   -2158, -2158,  4236,  1241,  2562,  2901,  6382,  5441,  5442,  6127,
     806,  5589,  1968,  6155,  4290,  2885,  2092,  5685,  5249,  5250,
    6205,   806,   806,  2088,  3746,   794,  2403,  3137,   763,   824,
    1335,  2089,  1442,  6441,  4480,  -224,  6352,  1936,  1614,  6192,
    2090,  6331,  6332,  3636,  2092,  2091,  3180,  2091,  2110,   653,
    2119,  2120,  2121,  2122,   738,  2442,   751,  2088,  1400,  4926,
    2628,   654,  6469,  3731,  1400,  2089,  2092,  2453,  2088,  1644,
    2091,  4359,  2092,  2443,  2090,  2091,  2089,  2111,  2112,  1400,
    3490,  2088,  2091,  2377,  5099,  2090,   824,  2092,  6442,  2089,
    6430,  3707,  4497,  5973,  2378,   806,  2413,  2091,  2090,  4275,
    4276,   806,  3156,  6506,  6507,  3233,  2303,  5251,  2678,  2091,
    5302,  3888,  2678,  6176,  4209,  1336,  2608,  3814,  3715,  3723,
    3781,  3203,  3796,  3782,  4360,   806,  3797,  3677,  3831,  3790,
    6473,  4213,  3678,  6298,  3724,   752,  6301,  4216,  4217,  3491,
    3499,  2113,  3681,  2488,  2678,  1716,  5974,  5352,  3684,   824,
     820,  3735,  5489,  2092,  4927,  2092,  2088,  2506,   824,  5262,
    2678,   656,  6478,  4494,  2089,  6492,  4342,  2691,  2590,  1739,
    4346,  2752,  1337,  2090,  5303,  5424,  4277,  3511,  2092,  2540,
    5304,  2516,  2541,  2092,  5252,  4552,  3157,  2088,  3469,  3328,
    2092,  2224,  6505,  5375,  2088,  2089,  6496,  5425,  4211,  2091,
    5406,   629,  2089,  2755,  2090,  2092,  2678,  -615,   550,  2088,
    5412,  2090,  2088,  3889,  2382,  1843,  2453,  2092,  3516,  2771,
    2089,  3359,  4184,  5877,  6177,   843,  2090,  2114,  2865,  2090,
    3366,   806,   806,  2091,  3146,   879,  3357,  3342,  2397,  5865,
    3147,  3302,  3148,   834,  2091,   545,  3378,  3378,  3469, -2400,
    2506, -2400,   547,   733,   805,  4076,  4556,  2091,  5387,  4076,
    5416,  5866,  4563,  1823,  5824,  2791,  4176,  -365,  2088,  3587,
     824,     4,     5,  2413,   806,  1400,  2089,  5081,  3779,  4509,
    1191,  5837,   544,  2005,   806,  2090,  3787,  3789,  1197,  5006,
    5007,  3419,   723,  1297,  5846,   845,  5848,  2918,  1863,  3425,
    2088,   658,  3427,  5599,  5050,  4512,  3407,  2092,  2089,  4149,
    5867,   898,  4550,  4551,  5600,  3149,  3486,  2090,  5026,   546,
    5311,  5454,  5871,  4560,  2866,  2095,  2096,  2097,  1999,  2098,
     550,  2088,  2091,  3215,   878,  2011,  5046,  3215,  3890,  2089,
    2867,  2092,  5064,  3404,  4781,  6438,  6438,  5076,  2090,  3975,
    3406,  2963,  2092,   857,  2028,  2029,  5722,  5723,  3460,  1864,
     518,   900,  1865,  2091,   697,  2092,  4930,   545,   543,   703,
    2091,   877,  5105,  4931,   547,  1936,   961,  2885,   547,  1171,
    3403,  3641,  2088,  2088,  6475,  6070,     4,     5,  2091,  1866,
    2089,  2089,  4141,  1823,  5240,  1173,  5973,  1823,  1867,  2090,
    2090,  5241,  5902,  5242,   544,  1189,  4142,   717,   876,  4015,
    3891,   687,  2868,  5532,  1301,  3085,  3085,  3405,  5534,  1299,
    4083,  3976,  3517,  4420,  4421,  4593,   947,  4422,  4423,  4424,
     689,  4088,  4089,   945,   689,  3520,  3560,  1311,    15,   689,
    2092,   546,  4129,  3342,  2091,   546,  2099,  2419,  1316,  5974,
    2421,  2421,   806,  1321,  3521,  2088,   806,  1478,  3142,  1325,
    3143,  1357,  4200,  2089,  1358,  1359,  3400,  3635,  1324,  1360,
    3549,  2092,  2090,  5053,  1330,  6179,  2091,  5055,  2092,  3975,
    1977,  1978,  1979,  3975,  3381,  4788,  3382,    24,  4124,  1357,
     543,  1333,  1358,  1359,   873,  1342,  2092,  1959,  3251,  3252,
    5443,  2085,  1344,  2225,  2088,  4128,  1351,  2091,  2083,  1415,
    1353,  2414,  2089,  3264,  3475,  3266,  2750,  4304,  3537,  1367,
    2161,  2090,  2161,   653,  3996,  3997,  2027,  -968,  3998,  1371,
    3999,  2032,  4000,  4854,  3342,  1386,  2088,  2088,   785,  3636,
    3540,  3518,  3892,  3519,  2089,  2089,  3547,  2226,  6015,  2227,
    1377,  3976,  2092,  2090,  2090,  3976,   824,   824,  2091,  2091,
    1373,  4057,  2088,   824,   718,  1380,  5666,  3378,  3378,  1382,
    2089,  1916,  1923,  1383,  1928,  1929,  1930,   829,  1421,  2090,
     824,  1933,   824,  5682,  2092,  3655,  3656,  4608,  2325,  4609,
    3631,  4610,    42,  6071,  2330,  2331,  1457,  2088,  1387,  4529,
    4530,  4531,  1459,  3640,  3893,  2089,  4857,  3342,  3267,  3268,
    3676,   816,  1472,  2088,  2090,  2092,   816,  1251,  1251,  1470,
    2088,  2089,     4,     5,  1237,  1237,   816,  4090,  2089,  4336,
    2090,  2091,   816,  4403,    47,   656,  2413,  2090,  3679,  2228,
     717,  4704,  6176,    49,  3689,  1482,  2088,  3639,  2088,  3686,
    3569,  1486,  4576,    51,  2089,  2104,  2089,  4577,  4503,   806,
    5353,  6072,  1492,  2090,  4592,  2090,  2092,  2092,  4849,    62,
    4447,  5790,  4449,  4450,  5038,  2260,  1493,  3637,  4455,  4594,
    2091,  4877,  3342,   824,  3718,   806,  4463,  1908,  2414,  2229,
    4471,  4619,  4474,  4740,  4420,  4421,  6485,  6487,  4422,  4423,
    4424,  1494,  2088,  1242,  1242,  3954,  5775,  3957,   829,  4696,
    2089,  4697,  2091,  2091,  3638,   806,   824,  1499,  2088,  2090,
    4248,  5305,  1504,   853,  3742,  1400,  2089,  4709,   806,  1400,
    4485,  1826,  5276,  2088,  5277,  2090,  2230,  1507,  2091,  2092,
    3745,  2089,   763,  4611,  2088,  4612,  1824,  4613,  1388,  4671,
    2090,  2105,  2089,  6177,  3770,  2826,  2827,  6073,  3775,  3776,
     806,  2090,   816,  3634,  5453,  1825,  3963,  2106,  3964,   806,
    3788,   816,  5306,  2091,   806,  1243,  1243,  4586,  3280,  4974,
     806,  4620,  3281,  1833,  3282,  2088,  3283,  1834,  2092,  2091,
    5431,  3723,  3965,  2089,  3964,   806,  2091,   718,  4706,  3812,
    4862,  4863,  2090,  2396,  3817,  5906,  3724,  1846,  2115,  2116,
    2117,  2118,  2119,  2120,  2121,  2122,  4622,  3966,  1858,  3967,
    2092,  2092,  2091,  4987,  2091,  4989,  5400,  2231, -1911, -1911,
    2088,  4043,  2088,  4044,  1860,  2088,  2088,  3487,  2089,  2107,
    2089,  6290,  6291,  2089,  2089,  1868,  2092,  2090,  4253,  2090,
    3382,  2232,  2090,  2090,  3848,  4350,  4374,  4351,  1862,  1870,
    2088,   824,  3855,  4407,  5307,  4408,  6074,   806,  2089, -2351,
    2453,  2453,  -740,  4781,  1871,  2640, -1911,  2090,  2091,  1872,
    4476,  2092,  4477,  4600,  4681,  3519,  2161,  3849,  3850,  1823,
    2088,  1444,  1445,  5870,  2091, -3491, -3493,  2092,  2089,  3994,
    2088,  5273,  5875,  5274,  2092,  5275,  1873,  2090,  2089,  2091,
     717,  4603,  3488,  2278,  3945, -3490,  1874,  2090, -2351, -3492,
    2091,  2885,  2161,  3956,  2448,  2104,  4607,  1400,  2278,  2088,
    2092,  4614,  2092,  4615,  1881,  4323,  6103,  2089,  4933,  4959,
    4934,  4960,   824,  3512,  1882,  3318,  2090,  2088,  5712, -1911,
    3515,  1883,  2088,  1365,  1366,  2089,  1369,  1884,  1370,  4412,
    2089,  2091,  3318,  1888,  2090, -1911,  1889,  1890,  3523,  2090,
    2088,  5636,  3447,  1891,  5058,  1816,  2278,  3995,  2089,  5094,
    5357,  3979,  5358,  5359,  2088,  5360,  2092,  2090,  4781,  4007,
   -1911,   806,  2089,  5361,  2376,  5362,  1892,   806,   824,   824,
    1893,  2090,  2092,  1894,  6179,  2088,  2091,  5401,  2091,  2278,
     824,  2091,  2091,  2089,  4788,  1904,  1951,  2092,  3978,  1965,
    1966,  2105,  2090, -2351,  3524,  1967,  1972,  3280,  2092, -1911,
    1973,  3281,  2263,  3288,  5290,  3283,  2091,  2106,  2271,  1974,
   -1911,     4,     5,  1975,  1478,  1478,  5414,  1817,  5415,  2928,
    2928,  2414,  5422,  1976,  2278,  3977,  3526,  5434,  1980,  5435,
    2377,  2100,  2101,  2102,  5659, -2351,  2091,   718, -1911,  2092,
    5459,  2378,  5460,  5479, -2351,  5480,  2091,  2022,  5593,  2379,
    4351,  5736,   717,  4713, -2351,   824,  3631,   824,  1982,  6544,
    5683,  1983,  4158,  1920,  1920,  1920,  5857,  2104,  5858,  3640,
   -2351,  5908,  5905,  5909,  5105,  2091,  1984,  2380,  5092,  2107,
    3874,  3979,  2124,  6046,  2092,  3979,  2092,     4,     5,  2092,
    2092, -1911,  1415,  2091,  4640,   474,  1985,  6075,  2091,  4788,
    1918,  1918,  1918,  5914,  1986,  5909, -1911,  2054,  3527,  3530,
    1987,  3974,  6032,  3639,  2092,  2088,  2091,  1988,  3978,  5407,
    1989,  5265,  3978,  2089,  1990,  5266,  1478,  5267,  1991,  5268,
    2091,  4752,  2090,  2381,  5082,  5083,  1992,  1917,  1917,  1917,
    2088,  1993,  1996,  3637,  2092,  4873,  4874,  4875,  2089,  2058,
    5964,  2091,  4351,  1997,  2092,  3977,  2125,  2090,  4140,  3977,
    5965,  2382,  4351,  2105,  3589,  6117,  6144,  6118,  6145,  1998,
    4944,  4947,  2006,  4950,  1919,  1919,  1919,  2451,  5394,  2106,
    3638,  3531, -1700,  2092,  2506,  2085,   518,  4164,  2463,  6156,
    5963,  6157,  2083, -1699,  6191,  5884,  4408,  2126,  2007,  2008,
    2088,  2092,  6274,  2009,  5119,  5890,  2092,  2127,  2089,   718,
    3509,  6318,  5973,  6319,  5308,   806,  2012,  2090,   717,  2013,
     824,   824,  2014,  2015,  2092,  6049,  6353,  2128,  5435,  3634,
    3535,  6055,  6056,  2016,  2017,  1400,  1400,  6365,  2092,  6366,
    6374,  3974,  6375,  2018,  2413,  3974,  2019,  5203,  4961,  4260,
     824,  2107,  2108,  1360,  6391, -1911,  5909,  2020,  2130,  2092,
    1012,  1013,  3538,  3545,  1016,  5974,  1018,  6393,  1020,  5909,
     541,  6421,  2021,  5909,  4227,   516,  4229,   518,   792,  6431,
    2023,  5909, -1355, -3593,  2024,  2025, -1355,  2510,  3557,  2026,
    2030,  2091,  5843,   550,  2031,  2033,  4302,   910,  2034,  2035,
     513,  2511,  2036,  2512,   568,  1247,  1247,   491,  2835,   542,
    2037,   793,   492,  2038,  2039,   493,  2091,   573,  2040,   806,
    2041,  1238,  1238,  4571,  6455,  5309,  5435, -1355,     4,     5,
     545,  2132,  6528, -1355,  6529,  2042,  2043,   547,  2145,  4580,
    4471,  2044,  1244,  1244,  2047, -2584,  4581,  4699,  4700,  1246,
    1246,  4701,  2048,  4702,  1432,  4703,  5453,  6033,  2146,  2049,
    2050,  5057,  2051,  2052,  6034,  5269, -1355,   544,  6175,  5270,
    3208,  5271,  4582,  5272,  4587,   718,  2091,  2053,  2136,  6035,
    4297,  2055,  4076,  2056,  2057,  2059,  3085,  2060,  2061,   816,
    2062,  3443,  2695,  2696,  2697,  3397,  2698,   806,  2699,  2092,
    2700, -2321,  2063,  2066,   546,  4182,  2067,  1823,  2070,  6401,
    3209,   806,  2071,  2072,  2073,   806,  1245,  1245,  2074,   910,
    2075,   824,  2076,   872,  2092,  2147,  2131,  2137,  4588,  2890,
   -2570,  1010,  1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,
    1019,  1020, -2571,  2148,  4589,  4808,  2153,  3210,  2179,  2180,
     640,  4060,   794,   543,  6032,  2182,   824,   824,  6176,  4590,
     626,  2202,  2220,  2221,  5636,  1241,  1241,  2222,  2223,  2242,
    4591,  2088,  3875,  2243,  2695,  2696,  5538,  4482,  5539,  2089,
    5540,  2252,  5541,  2255,  2092,  2256,  1478,  2266,  2090,  2278,
    2306,  2928,  2316,  1816,   824,  4399,  4400,  4401,  4402,  4404,
    4405,  4406,  2318,  4982,  4409,  2322,  6036,  6307,  2328,  5884,
    4435,  4599,  4385,  4386,  2329,  4388,  4390,  5017,  2335,  6037,
    1823,  2336,  2108,  2338,  2340,  2344, -2351,  2724,  2573,  2361,
    2573,  1042,  2362,  2363,  2365,  2374,  6038,  2513,  1760,  5305,
    4451,  4452,  2385,  4454,  2386,  4456,  4457,  4458,  4459,  4460,
    4461,  4462,  2389,  4464,  2399,  2405,  4605,  4473,  4606,  6013,
    2416,  4617,  4618,  2641,  2415,  1817,  4112,  2426,  3211,  6177,
    2435,  2713,  2714,  2715,  2716,  2514,  2436,  1820,  2445,  2449,
    3212,  5059,  3876,  2452,   550,  2464,  4621, -1911,  2472,  3877,
    5306,  4500,  6221,  2515,  2725,  3878,  2468,  2493,  2494,   627,
    1265,   550,  2479,  2503,  2507,  2499,  3975,  2528,  2535,  3723,
    2544,  1063,  2088,   806,  1819,  2551,  5014,  2717,  2718,  2719,
    2089,   545,  2552,  2561,  3724,  2499,  5399,  2564,   547,  2090,
    2566,  2571,  2183,  2430,   824,   824,  2567,  2572,   545,   806,
    2574, -3626,  2578,     4,     5,   547,  2580,  2091,  2584,  2586,
    2593,  1818,  4542,  2596,  2598,  5405,  2600,  2601,   544,  2414,
    2726,  2602,  2727,  3294,  1286,   753,   754,  2603,  2728,  2720,
    2721,  3879,  2630,  5417,  2605,   544,  2606,  6158,  3976,  6039,
    3213,  2281,  3306,  3208,  2638,  2649,  2651,  2653,  1920,  4781,
    -740,  3311,  3630,  2654,  2108,   546,  5418,  3313,  2657,  6033,
    1077,  2655,   755,  2658,  6533,  3325,  6034,  4114,  2660,  2661,
    5878,  2665,   546,  2676,   628,  3337,  2677,  2678,  3339,  2687,
    2694,  6035,  2708,  3209,  2736,  1918,  2749,  2750,  2729,  4176,
    2751,  6059,  2762,  2722,  3880,  2764,   651,  1815,  2767,  2768,
   -1355,   756,  2815, -2321,   543,  2812,  4623,  2819,  1540,  2816,
    3214,  2822,  6457,  2831,  2841,  2092,  2823,  2845,  2860,  2184,
    3210,   543,  1917,  5807,  5808,  1205,  5810,  2892,  2864,  2891,
    6261,  2185,  2730,  5027,  1010,  1011,  1012,  1013,  1014,  1015,
    1016,  1017,  1018,  1019,  1020,  2919,  5028,  4661,  2091,   629,
    2920,  2925,  2926,   652,  2943,  2932,  2088,  2723,  6178,  1919,
    2948,   824,  5029,   806,  2089,  2951,  2970,  5704,   824,   824,
    2971,  4679, -3626,  2090,  4682,  4683,  2972,   874,  6292,  1432,
    6179,  3013,  2998,  5706,  1206,  4678,  2186,  3014,  3016,  2303,
    4788,  3015,  5030,  3018,  2187,  3019,  2923,  4374,  2088,   630,
    3020,  3025, -2170,  3035,  3039,  3038,  2089,  3042,  6036,  2088,
    3045,  3046,  5290,  3047,  3048,  2090,  4805,  2089,  4601,  3056,
    3049,  6037,  3057,   653,  3066,  3067,  2090,  4805,  2731,  4805,
    4733,  2188,   518,   518,  1042,   654,  3068,  3069,  6038,  2732,
    2977,  3211,  6543,  3070,  3071,  2983,  3073,  3076,  2986,   875,
    3088,  4116,  3089,  3212,  2724,  2282,  2092,  5497,  5500,  5502,
    5504,  6362,   964,  5507,  5508,  5731,  3072,  3075,  5512,  3093,
    3098,  5518,  5031,  4412,  5522,  3104,   757,  5497,   806,  3107,
     824,  5533,  5497,   806,   806,  3318,  3135,     9,  3112,   816,
    4781,  3138,  3139,   758,  3152,  3021,   965,  3140,   655,  6483,
    3141,  3144,  3153,  3154,  3500,  3162,  4813,  3031,  1372,  3166,
    3170,   806,   806,  3183,  1063,  3171,  3167,    14,  4841,   759,
    4924,  2725,  3184,  3188,  3187,  5376, -2595,  2516,  3207,  3221,
    6370,  3222,  2091,  5032,  3883,   656,  3230,  3243,  5966,  3231,
    5967,  5968,   966,  1207,  2189,  1208,    20,  3238,  3274,   967,
    3277,  3279,  2555,  3213,  3329,  3312,  1209,  3333,  3338,  3349,
      23,  3354,  3355,   760,  1428,  3360,  1286,  3361,  3362,  3370,
    3373,  2190,  1210,  3393,  2091,  3417,   968,  3418,  4954,  3436,
    3439,  6039,  3441,  3442,   969,  2091,  3444,  2726,  3454,  2727,
    3461,  3994,  3453,  2088,   631,  2728,  6362,    28,  3455,   632,
    3458,  2089,  3459,  1077,  2283,  6435,  3469,  3476,  3525,  3124,
    2090,  3480,  5347,  4604,  3483,  3492,  3493,  3495,  2284,  3496,
    2285,   970,  5308,  3214,  2376,  3497,  3498,  1415,  3502,   792,
    3973,  4788,  3510, -1355,  3514,  3522,  3529, -1355,  1415,  1415,
    2092,  3528,  3533,  4944,  3945,  4947,  3539,  4950,   657,  3534,
    5033,  5034,  2286,  3543,  3544,  2729,  2287,  3546,  2122,  3581,
    3550,    39,   793,  6370,  3556,  2288,   971,   972,  3551,  3995,
    3561, -1665,   769, -1497,   633,   658,  3593,  4977, -1355,  3568,
    3574,  3583,  2092, -3626, -1355,  1820,  3605,  5488,  3584,  5707,
    2377,  3585,  5708,  2092,  3586,  3600,  6520,  2045,  2289,  2730,
    2064,  2378,  2068,  3608,  3610,  3611,  5701,  6532,  3613,  2379,
    3614,   518,  3226,   770,  5000,  6520,  2290, -1355,  3229,  5705,
    3617,  3621,  1819,  6532,  3643,  3659,  5706,  3622,  3662,   771,
    3623,  3667,  3663,  5309,    50,  3664,  3675,  2380,  4743,  3671,
    3251,  3252,  1915,  1915,  1915,  6224,  6225,  4832,  3630,  3672,
    5470,  3687,  3691,  3701,  3704,  3264,  1211,  3266,  3705,  1818,
    3973,  6070,     4,     5,  3973,  3710,  2191,  3728,  3729,  2091,
    3739,  2192,  3738,  3755,  3757,    84,  3758,  3762,  3759,  3763,
    3795,  3822,  3804,   717,  3808,  3833,  5513,  5621,  3829,  3837,
     874,  5049,  3859,  2381,  2291,  2731,  -765,   973,  3979,  5035,
    5036,  2292,  3840,   794,  3841,  3852,  2732,  3851,  3853,  5761,
    3854,  2293,  3897,  5609,   -73,  3856,  6086,  3857,  3858,  3900,
    3903,  2382,  3907,  4679,  3910,  2294,  3909,  3913,  3914,  3915,
    3916,  3949,  3917,  3940,  3950,  3978,  4661,  4678,  3918,  3919,
     824,  3958,  6087,  5080,  3920,  1815,  2193,   772,  3921,  2295,
    3267,  3268,  3959,  3922,  3923,  2194,   659,  5079,  2296,  4001,
    3952,  2297,   875,  3377,  3377,  3953, -2120,   974,  3924,  3925,
    3984,  4006,  3977,  5624,  2835,   660,  3926,  2092,   773,  2298,
    3927,  3928,  3929,  5106,  3930,  3931,  3932,  3933,  5107,  3934,
    3935,  3392,  3936,  3937,  3957,  5117,   774,  5794,  3985,  4009,
     518,  1908,  4010,  -968,  4012,  4744,  4745,  5213,  2488,  3954,
    2299,  4022,  3955,  4024,  4036,  4759,     4,     5,   806,  4027,
    4025,  4028,  3860,   661,  5167,  4026,   628,  4037,   806,  4032,
    4038,  4040,  4054,  2628,  4084,  4085,  4086,  4099, -1708,  4100,
     718,  4101,  4107,  4120,  4138,  6088,  4151,  6089,  4150,  4152,
     662,  4165,  5195,  4139,  4166,  4178,  4180,  4197,  3974,   663,
    5037,  4179,  3594,  4188,  1212,  1213,  1214,  1215,  1823,  6071,
    4190,  4194,  4196,  4198,  5172,  5173,  5174,  5175,  5176,  5177,
    5178,  5179,  5180,  5181,  4201,  5183,  5184,  5185,  5186,  5187,
    5188,  5189,  5190,  4202,  5191,  5192,  2438,  4214,  5196,  5197,
    4206,   629,  4207,  4215,  2954,   975,  3812,  2953,  4239,  5224,
    5753,  3342,  4254,  2890,  5758,  5759,  4259,  4263,  4258,  1010,
    1011,  1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,
    4298,  4265,  5707,  2376,  4305,  5708,  4311,  6072,   824,  2376,
    4313,  4315,  4760,  4316,  5709,  4317,  5223,  4341,  4340,  4344,
    5279,  5997,  5614,  5615,  1816,  5617,  1823,  4345,  4371,  4367,
    5622, -2073,  4380,  5626,  4415,  4381,  5629,  5630,  4416,  3532,
    4417,  4433,  4437,  3536,  5638,  4444,  5639,  4445,  4492,  4446,
    4501,  4448,  4504,  5222,  4513,  5645,  5167,  3358,  4517,  4519,
    4524, -1355,  4525,  6090,  4537,  4547,   816,  4545,  4554,  2377,
    4555,  5351,  4561,  3861,  5313,  2377,  4564,  4565,  4625,  5323,
    2378,  4566,  4647,  4762,   518,  4567,  2378,  4624,  2379,  1042,
    4635,  4639,  4636,  4649,  2379,  5364,  1817,  4650,  4664,  4665,
    4651,  4668,  4652,  6073,  4653,  4654,  4662,  4655,  4666,  4669,
    4673,  4688,  1816,  4689,  4694,  4707,  2380,  4712,  4714,  3862,
    4713,  4728,  2380,  5377,   550,  4725,  3809,  4734,   516,  4736,
     518,  4737,  4836,  4738,  4742,  4741,  4751,  4748,  4749,  5221,
    4763,  4764,  4765,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,  3377,  3377,  4803,  4754,  4817, -1821,
    4766,   545,  1920, -1826,  4839,  4842,  4845,  4866,   547,  1063,
    3994,  4846,  2381,  4851,  4852,  4871,  4884,  4929,  2381,  4937,
    4502,  4963,  6091,  4952,  1817,  4953,  4978,  4979,  6502,  4984,
    4992,  5005,  5008,  2161,  5009,  5011,  5020,  3863,   544,  1918,
    2382,  5051,   775,  5021,  4661,  3553,  2382,  4630,  5060,  4357,
    5062,  5063,  6074,  5066,  5067,  5068, -2120,  4767,  2903,  4768,
    5072,  -166,  3810,  5086,  5087,  5100,  1813,    51,  5119,  5123,
    5124,  5118,  5141,   910,  5142,   546,  1917,  5145,  5143,  4769,
    5144,  5148,  5168,  1042,  5919,  2835,  3697,  5170,  3995,  5169,
     910,  5182,  5210,  5450,  4895,   518,  4733,  4770,  1077,  5232,
    3864,  5235,  -266,  5237,  4771,  4924,  5255,  5281,  5282,   661,
    2887,  5245,  3720,  1919,  5247,  5283,  3865,  3866,  5299,  4772,
    5290,  3867,  3868,  3869,   543,   824,  4773,  5301,  5167,  5314,
    5478,  5315,  5324,  5464,  5465,  5466,   776,  5325,  5326,  5327,
    5329,  4774,  5328,  5331,  5332,   806,  5333,  5334,  5335,  5342,
    5345,  5348,  5356,  5349,  5363,  5372,  -742,  5366,  5379,  5288,
    5373,   824,  5380,  1063,  5383,  5385,  5389,  5390,  5391,  5398,
    5402,  5509,  5510,  5403,  4781,  5404,  5408,  1915,  5410,  5421,
    5546,  5523,  3945,  5423,  6411,  5413,  5420,  3777,  5831,  3870,
    5429,  5437,  5495,  5445,  5545,  5447,  3786,  5560,  4775,  5449,
    5448,  1415,  5456,  5457,  5511,  5461,  5468,  1415,  4776,  5471,
    -742,  3945,  5472,   770,  5705,  1823,  5493,  6092,  5565,  5577,
    5585,  5706,  1415,  5586,  5569,  5590,  5587,  5592,  5583,  3723,
    5594,  5595,  5224,  5596,  5597,  5604,  5605,  5606,  5607,  5612,
    5610,  5623,  3871,  5628,  3724,  5627,  4777,  5660,  4431,  5662,
    5664,  5678,  1077,  5689,  5691,  5693,  5695,  5700,  5697,  4778,
    5703,  5616,  5717,  5714,  5698,  5167,  5729,  5742,  5735,  5223,
    5741,  5730,  5746,  5750,  5749,  5751,  5633,  5754,  5117,  5117,
     806,  5766,  5770,  5768,  5776,  5809,  5643,  5773,  5774,  5803,
    5632,  5778,  2835,  5646,  1168,  5647,  5648,  6105,  4779,   806,
    5642,  3975,  5289,  5782,  4780,  5117,  5222,  5784,  5792,  5804,
    -742,   874,  5117,  6075,  5811,  4788,  5812,  5167,  5814,  5816,
    5476,  5827,  5833,  5834,  5838,  5844,  5304,  5849,  4781,  5872,
    5879,  5480,  5668,  6070,     4,     5,  5880,  5885,  5886,  5887,
    5661,  1168,  5889,  5677,  5892,  5907,  5903,   772,  6230,  5911,
    5913,  5923,  5915,  5917,  6538,   717,  5929,  5481,  5942,  5970,
    5933,  5972,  4782,   808,  5952,   518,  5969,  5949,  5980,  4783,
    5951,  5981,  5982,  3976,  5990,  5706,  5988,  5989,  -742,  5998,
    5995,  5999,  6000,   875,  6006,  6007,  6009,  6230,  6086,  6010,
    6011,  6012,  5221,  1920,  2885,  6378,   774,  6014,  5125,  6018,
    6027,  6028,  6051,  6031,  4784,  6052,  6057,  6063,  4759,  6113,
    6099,  6124,  6125,  5721,  6087,  6104,  6116,  6126,  1415,  4785,
    4786,  6129,  6138,  6140,  4014,  5106,  5728,  6142,  6143,  6147,
    1918,  6150,  4787,  6159,  5117,  6153,  6146,  6163,  6166,  6174,
    6208,  4801,  4801,  6188,  3814,  5740,  6171,  6202,  5740,  5745,
    6190,  6214,  6210,  5747,  6216,  6212,  6219,  5167,  6213,  6218,
    6220,  6233,  6234,  6235,  6236,  5757,  6269,  1917,  6272,  4788,
    5765,  6273,  5290,  6294,  6279,  -968,  6308,  6323,  6313,  6315,
    4924,  6316,  1174,  6326,  6329, -2568,  5767,  5799,  6334,  5799,
   -2569,  6335,  6338,  6340,  6350,  4897,  1820,  6230,  2885,  4892,
    6354,  6359,  5769,  6355,  1919,  6381,  6387,  5818,  6384,  5820,
    6402,  6394,   718,  5126,  6404,  6395,  6396,  6088,  6412,  6089,
    6406,  5127,  6410,  6446,  6470,  6415,  6458,  5707,  6461,  6466,
    5708,  3883,  6471,  1819,  6472,  6479,  5128,  6474,  5781,  5881,
    5783,  6071,  6484,  6539,  6489,  6494,  5129,  5130,  5131,  6493,
    6495,  6497,  6500,  4801,  6501,  6503,  5132,  6498,  6508,   816,
    6509,   816,  6499,  6521,  6510,  6537,  4219,  3812,  3727,  3812,
    1818,  5819,  4475,  4320,  5674,  6054,  5672,  4865,  6106,  5673,
    6241,  5780,  6293,  6403,  1820,  1394,  1389,  2450,  4951,  4496,
    1390,  5822,  5167,  5117,  5167,  5365,  4487,  1175,   824,  5167,
    4967,  5117,  3343,  5455,  2911,  1176,  5167,  5167,  4274,  6072,
    5117,  5140,  4541,  4521,  1813,  5841,  5167,  3428,  1958,  3240,
    1177,  1819,  5167,  5117,  3430,  5117,  5936,  1506,  3429,  5935,
    1178,  1179,  1180,  5850,  1168,  5772,  5338,  4911,  1168,  5840,
    1181,  5071,  2088,  5077,  5430,  3598,  6278,  5893,  5716,  6460,
    2089,  6364,  6419,  5862,  6173,  5891,  1815,  3847,  1818,  2090,
    2440,  1168,  5613,  5336,  6101,  6090,  1958,  5655,   806,  5821,
    5748,  1168,  2923,  5341,  6439,  5487,  6333,  6337,  6263,  6254,
    6255,  5707,  5291,  1800,  5708,  6256,  6257,  5039,  4384,  2519,
    5799,  4964,  4853,  5002,  5133,  4553,  6237,  6276,  3295,  3986,
    4627,  2713,  2714,  2715,  2716,  6073,  5134,  2835,  5054,  6377,
    5056,  5052,  6465,   778,   779,  6432,  6061,  6433,  5740,  4312,
    6305,  6312,  6310,  5916,  5975,  5817,  3310,  3973,  5815,  4753,
    5921,   806,  5339,  2631,   763,  5167,  5167,  1168,  1168,  1168,
    1168,  5653,  3108,  1958,  1815,   806,  2459,  2717,  2718,  2719,
    1168,  3945,  4296,  6136,  4294,  5940,  3906,  6445,  5979,   518,
    6271,  3276,   816,  4195,  3719,  4534,  4991,   807,  4033,  3945,
    2424,  4153,  1423,  4246,  2375,  2423,  4257,  5374,  1182,  4370,
    5962,  4203,  5065,  5953,  2150,  6418,  4123,  4121,  2829,  4170,
    1183,  5135,  4657,  5292,     4,     5,  4173,  2888,  4574,  2720,
    2721,  5395,  5167,  2738,  2748,  2684,  5136,  6405,  5167,  6252,
    5984,  6488,  6486,  3161,  6074,  2835,  5680,  2367,  2091,  3158,
    5369,  2368,  6148,  5458,  5117,  6149,  3151,  6084,  2693,  2369,
    2370,  6084,  2281,  2372,  3824,  6001,  6005,  4646,  3173,  4366,
    5259,  6008,  5258,  5799,   879,  4645,  1958,  5137,  5711,  6152,
    4805,  4805,  5987,  5444,  4335,  5702,  4373,  5397,  5799,  4369,
    5724,  5138,  5370,  2722,  1446,  2432,  4860,  3816,  1415,  6026,
    5045,  2418,  1415,  4861,  5264,   789,   780,  3353,  2576,  1307,
    5049,  2262,  3385,  4031,  5904,  -742,  5740,  4990,  5288,  5110,
    1184,  4396,  5463,  6541,  6058,  5096,  5167,  6456,  5093,  1844,
    1839,  3693,  1291,  1292,  3694,  2425,  4240,  1294,  3004,  3732,
    6098,  5934,  3096,  5734,  4995,   816,  4801,  6459,  2636,  5598,
    6490,   914,  5813,  6540,  6536,  3708,  2092,  2723,  6527,  1960,
     816,  1185,  1168,  3979,  6114,  3803,  4781,  6534,  5220,  -742,
    6482,  4029,   770,   878,  5726,  1186,  4055,  5167,  6131,  4231,
    4233,  4232,  3435,   915,  1249,  1250,  3658,   806,  3723,   824,
    4228,  4225,  4224,  4687,  3414,  6132,  5167,   806,  1204,  2931,
    3978,  3118,  2624,  3724,   917,  2165,  2625,  6084,  4872,  6092,
     877,  3896,  2144,   918,  5280,  4199,  5382,   547,  4733,  4733,
    4314,  5873,  4925,   798,  6084,   782,   783,  1341,  2321,   784,
    5573,  4814,  1937,  4988,   919,  3785,  4544,  3977,  3431,  1939,
    1949,  6108,  5112,  6345,  5574,  5584,  5568,   876,   920,  5567,
    2569,  1831,  1950,   921,  2724,     0,     0,     0,     0,  6189,
       0,     0,     0,     0,  6201,     0,  4801,     0,  1958,  -742,
    6207,  1958,     0,     0,     0,     0,  2282,   922,     0,     0,
       0,     0,     0,     0,   546,  6164,  6165,   677,  6167,  6168,
    6169,  6170,     0,   824,  6215,     0,     0,     0,     0,     0,
    1415,     0,     0,     0,     0,  6075,   772,  4788,     0,     0,
       0,  6239,     0,   910,     0,     0,     0,     0,     0,     0,
       0,  2725,     0,  3974,     0,  5962,  4535,     0,     0,     0,
       0,     0,     0,   873,     0,     0,   923,  -742,     0,     0,
     924,     0,     0,     0,     0,  1168,     0,     0,     0,     0,
       0,  1915,  6005,     0,     0,   774,     0,     0,   925,     0,
       0,     0,   926,   927,  6026,     0,     0,     0,     0,     0,
       0,  4924,     0,     0,     0,     0,     0,   824,     0,  6343,
       0,  6343,     0,     0,     0,  6287,  6288,  2726,     0,  2727,
       0,     0,     0,   928,     0,  2728,     0,  6299,     0,     0,
     929,   930,     0,     0,     0,     0,     0,     0,     0,  6314,
       0,     0,     0,     0,     0,  6286,     0,  5740,  6289,  5740,
    5745,     0,     0,     0,     0,  2283,  6297,     0,     0,  6300,
       0,  5290,     0,     0,     0,     0,     0,  2085,     0,  2284,
       0,  2285,     0,     0,  2083,     0,     0,   806,     0,     0,
       0,  6342,     0,  6342,     0,  2729,  6348,     0,     0,     0,
    2611,     0,     0,     0,     0,     0, -1911, -1911,     0,     0,
    4924,     0,     0,  2286,     0,     0,     0,  2287, -1911,     0,
       0,     0,  2835,     0,     0,     0,  2288,     0,     0,     0,
    4672,     0,     0,     0,     0,     0,     0,     0,     0,  2730,
    2612,     0,     0,     0,   824,     0,     0,  6371,     0,     0,
    6372,     0,     0,  2640,     0,     0,     0,     0,     0,  2289,
       0,     0,  5740,  5740,     0,     0,  6388,  6084,  6084,     0,
       0,     0,     0,  5740,     0,     0,     0,  2290,     0,     0,
       0, -1911,     0,  2613,     0,     0,     0,     0,  2614,     0,
       0,     0,     0,     0,  4801,     0,     0,  4801,     0,  2615,
    2616,     0,     0,     0,     0,     0,  6084,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0, -1911,
     824,  5220,     0, -1911,     0,     0,     0, -1911,     0,     0,
       0,     0,     0,     0,  5740,  2731, -1911, -1911,     0,     0,
       0,     0,     0, -1911,     0,  4750,  2732, -1911,     0,     0,
    4755,  4756, -1911,     0, -1911,  2291,     0,  2835, -1911,     0,
       0,     0,  2292,     0,     0,     0, -1911,     0, -1911,     0,
       0,     0,  2293,     0, -1911,     0,     0,     0,  1415,  1415,
       0,  5291,     0,     0,     0,     0,  2294,     0,     0,     0,
       0,     0,     0,     0, -1911,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1911,     0,     0, -1911,     0,     0,
    2295,     0,     0,     0,     0,     0,     0,     0,     0,  2296,
       0,     0,  2297,     0,     0,     0,     0, -1911,     0,     0,
    4801,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2298,     0,     0,     0,     0,     0, -1911,     0,     0,     0,
   -1911,     0,     0,     0,  2617,     0,   678,  2835,     0, -1911,
       0,     0,     0,   824,  2618,     0,     0,     0,  2835,     0,
       0,  2299,   824,     0,  1958,  2619,  2835,     0, -1911,     0,
       0,  2620,  1915,  1168,  2835,  1168,     0,     0,     0,     0,
       0,     0,  5292, -1911,     0,     0,     0,     0,     0, -1911,
   -1911,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2621, -1911,     0, -1911,  2622,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1168,  1168,     0,     0,  2623,     0,
    1168,     0,     0,     0,  1168,  1168,  1168,     0,     0,     0,
       0,     0,     0,     0,  1168,  1168,  1958,     0,     0,     0,
    1168,     0,     0,     0,  1168,  1168,  1168,     0,  1168,  1168,
    1168,     0,  1958,  1958,     0,  1813,     0,     0,     0,  1168,
       0,  1168,     0,     0,  1168,  1168,  1168,  1168,     0,  1168,
       0,  1168,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1168,  1168,  1168,  1168,  1168,
       0,  1168,  1168,  1168,  1168,  1168,  1168,     0,  1168,  1168,
       0,  1168,  1168,     0,  1168,  1168,     0,     0,  1168,  1168,
       0,  1168,  1168,     0,     0,  1168,     0,  1168,     0,     0,
       0,  1168,  1168,  1168,     0,     0,  1168,  1168,  1168,  1168,
       0,  1168,     0, -1911,     0,     0,     0,     0,  1168,     0,
       0,     0,     0,  1813,  1168,  1168,  1168,  1168,     0,     0,
       0,     0,     0,     0,     0,  1168,  1168,     0,  1168,  1168,
       0,     0,  1168,  1168,  1168,  1168,  1168,  1168,  1168,  1168,
    1168,  1168,  1168,  1168,  1168,     0,     0,  1168,     0,     0,
     964,     0,  1958,     0,     0,     0,     0,     0,     0,  1958,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     9,     0,     0,     0,     0,
       0,     0,  1168,     0,   965,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1958,     0, -1092, -1092,     0,    14,     0,     0,     0,     0,
       0,     0,     0,     0,  4759,     4,     5,     0,     0,     0,
       0, -1911,     0,     0,     0,  5147,     0,     0,     0,     0,
     966,     0,     0,     0,    20,  5171,     0,   967,     0,     0,
       0,     0,  4885,     0,  4886,  4887,     0,     0,    23,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   968,     0,  4888,     0,  4889,     0,
       0,     0,   969,     0,  4890,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    28,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2438,     0,     0,     0,     0,
    1168,   964,  1168,     0,     0,     0,  4891,     0,     0,   970,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     9,  1958,     0,     0,
       0,     0,     0,  1168,     0,   965,     0,     0,     0,     0,
       0,  4760,     0,     0,     0,     0,     0,     0,     0,    39,
       0,     0,     0,     0,   971,   972,    14,     0,     0,     0,
       0,     0,     0, -1855, -1855,     0,     0,     0,     0,     0,
    4892, -3759, -3759, -3759,     0, -1855,     0,     0,     0,     0,
       0,   966,     0,     0,     0,    20,     0,     0,   967,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1911,    23,
       0,  4893,     0,  4894,     0,     0,     0,     0,     0,     0,
    2640,  2641,  4762,     0,  4895,   968,     0,     0,     0,     0,
    1168,     0,    50,   969,     0,     0,  1958,     0,  1958, -1911,
       0, -1911,     0,  4801, -1911, -1911,    28,  4896, -1855,     0,
       0,     0,     0,     0,     0,     0,  3883,     0,  1168,     0,
       0,     0,     0,     0,     0,  1168,     0,     0,     0,     0,
     970,  4801,  3973,    84,     0,  4801,     0,     0,     0,  4763,
    4764,  4765,   872,     0,     0,     0, -1855,     0,     0,     0,
   -1855,     0,     0,     0, -1855,   973,     0,     0,     0,  4766,
       0,     0,  1168, -1855, -1855,     0,     0,     0,     0,     0,
      39,     0,     0,     0, -1855,   971,   972,     0,     0, -1855,
       0, -1855,     0,     0,     0, -1855,     0,     0,     0,     0,
       0,     0,     0, -1855,     0, -1855,     0,     0,     0,     0,
       0, -1855,     0,     0,     0,     0,     0,     0,  4897,     0,
       0,     0,     0,     0,     0,     0,  4767,     0,  4768,     0,
       0, -1855,     0,     0,     0,   974,     0,     0,     0,     0,
       0, -1855,     0,     0, -1855,     0,     0,     0,  4769,     0,
       0, -3759,     0,    50,  4801,  4898,     0,     0,     0,     0,
       0,     0,  4801,     0, -1855,     0,  4770,     0,  4801,  4801,
       0,     0,     0,  4771,     0,     0,     0,     0,   964,     0,
       0,     0,     0, -1855,     0,     0,     0, -1855,  4772,     0,
       0,  4801,     0,     0,    84,  4773, -1855,     0,     0,  4899,
    4900,     0,     0,     9,     0,     0,  4901,     0,  4801,     0,
    4774,     0,   965,     0,     0, -1855,   973,     0,  4902,     0,
       0,     0,  5494,     0,     0,     0,     0,     0,     0,     0,
   -1855,     0,     0,    14,  1168,     0,     0, -1855,     0,  4903,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -1855,     0, -1855,     0,     0,     0,     0,   966,     0,
       0,     0,    20,  4904,     0,   967,     0,  4775,     0, -3759,
       0,     0,     0,   975,     0,     0,    23,  4776,  1958,  1168,
       0,     0,     0,     0,     0,     0,   974,  1168,  1168,     0,
       0,     0,   968,     0,     0,  4801,     0,     0,     0,     0,
     969,     0,     0,     0,     0,     0,     0,  4801,     0,     0,
       0,  4801,     0,    28,     0,  4777,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4778,     0,
    4905,     0,     0,     0,     0,     0,     0,   970,     0,     0,
       0,  1168,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1958,  1958,     0,     0,     0,  5620,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4779,     0,     0,
       0,     0,     0,  4780,     0,     0,  5640,    39,     0,     0,
       0,     0,   971,   972,  1168,  1168,  1168,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4781,  4906,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4907,
    4908,  4909,     0,     0,     0,     0,     0,     0,     0,     0,
    4801,  6383,     0,     0,   975,     0,     0,  2143,     0,     0,
       0,  4782,     0,     0,  1958,     0,     0,     0,  4783,     0,
       0,     0,     0,   964,  1168,     0,     0,  1958,     0,     0,
      50,     0,     0,     0,     0,     0,     0,     0, -3907,     0,
    3244,     0,  1168,     0,     0,     0,  1168,  1168,     9,  1168,
    1168,     0,     0,  4784,     0,     0,     0,   965,  1168,     0,
    1168,     0,     0,     0,     0,     0,     0,     0,  4785,  4786,
       0,    84,     0,     0,  3245,     0,     0,     0,    14,     0,
       0,  4787,     0,     0,  4801,  4910,  4801,  4801,     0,     0,
       0,  1168,     0,   973,     0,     0,     0,     0, -1855,     0,
       0,     0,     0,   966,     0,     0,     0,    20,     0,     0,
     967,     0,  3246,     0,     0,     0,     0,  1168,  4788, -1911,
   -1911,    23,     0,     0,  4801,     0,     0,     0,     0,     0,
       0, -1911,     0,  1958,     0,     0,     0,   968,     0,     0,
       0,     0,     0,     0,     0,   969, -3907,     0,     0,     0,
       0, -1092,     0,  1168,  1169,     0,     0,     0,    28,  4801,
       0,     0,     0,   974,     0,     0,  2640,     0,     0,     0,
    1168,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   970,     0,     0,     0,  4801,     0,     0,     0,
       0,     0,     0,     0, -1911,     0,     0,     0,     0,     0,
       0,  1169,     0,     0,     0,     0,     0,  1168,     0,     0,
       0,     0,     0,     0,  1168,     0,     0,     0,     0,     0,
       0,  1958,    39,     0,     0,     0,     0,   971,   972,     0,
       0,     0, -1911,     0,     0,     0, -1911,     0,     0,   964,
   -1911,     0,     0,     0,     0,     0,     0,     0,     0, -1911,
   -1911,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1911,     0,  1958,     0,     9, -1911,     0, -1911,     0,     0,
       0, -1911,     0,   965,     0, -1855,     0,     0,     0, -1911,
       0, -1911,     0,     0,     0,     0,     0, -1911,  2641,     0,
       0,     0,     0,     0,    14,    50,     0,     0,     0,     0,
       0,   975,     0,     0,     0,     0, -1855, -1911, -1855,     0,
       0, -1855, -1855,     0,     0,     0,     0, -1911,  1168,   966,
   -1911,     0,     0,    20,     0,  5876,   967,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    84,    23,     0,     0,
   -1911,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1168,   968,     0,     0,     0,     0,   973, -1911,
       0,   969,     0, -1911,     0,  1958,     0,  1958,  1958,  1958,
       0,  1168, -1911,     0,    28,     0,     0,  1168,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5922,     0,
       0, -1911,     0,     0,     0,     0,     0,     0,   970,     0,
       0,     0,     0,     0,     0,     0, -1911,     0,     0,     0,
       0,  1935,     0, -1911,     0,     0,     0,  3247,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1911,   974, -1911,
       0,     0,     0,     0,     0,     0,     0,     0,    39,     0,
       0,     0,     0,   971,   972,     0,     0,  3248,  3249,     0,
    3250,  3251,  3252,  3253,  3254,     0,  3255,  3256,  3257,  3258,
    3259,  3260,  3261,  3262,     0,  3263,  3264,  3265,  3266,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4759,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,  1169,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    50,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1169,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1169,  -930,     0,  -930,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    84,     0,     0,     0,     0,     0,     0,     0,
    2438,  3267,  3268,     0,  1958,     0,   975,     0,     0,     0,
       0,     0,     0,     0,   973,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1169,  1169,  1169,
    1169,     0,     0,     0,     0,     0,  4760,     0,     0,     0,
    1169,     0,     0,     0,  6128,     0,     0,     0,  1168,     0,
       0,     0,  1168,     0,  6134,  1168,     0,  4018,     0,     0,
       0,     0,     0,     0,  1168,     0,     0,     0,     0,     0,
       0,     0,     0,  1168,   974,  1168,  1168,     0,  1168,  1168,
    1168,  1168,     0,  1168,     0,  1168,  1168,     0,  1168,     0,
       0,   964,     0,   964,     0,     0,  1168,  1168,     0,     0,
       0,  1168,  1168,  1168,     0,     0,     0,  4762,     0,     0,
       0,  1168,  1168,  1168,     0,  1168,     9,  1168,     9,  1168,
       0,  1168,     0,  1168, -1911,   965,     0,   965,  1168,  1168,
       0,  1168,  1168,  1168,     0,     0,     0,  1168,     0,     0,
    1168,     0,     0,     0,     0,     0,    14,     0,    14,  1168,
       0,     0,  1168,     0,  1168,  1168,  1168,     0,     0,  1168,
       0,     0,     0,     0,  4763,  4764,  4765,     0,     0,     0,
       0,   966,     0,   966,     0,    20,     0,    20,   967,     0,
     967,  1168,     0,  1168,  4766,     0,  1168,     0,     0,    23,
       0,    23,     0,     0,     0,     0,  1168,  1168,  1168,  1168,
    1958,  1168,     0,     0,     0,   968,  1168,   968,     0,     0,
       0,     0,   975,   969,     0,   969,     0,  1958,     0,     0,
       0,     0,  1169,     0,     0,     0,    28,     0,    28,     0,
       0,     0,   964,     0,     0,     0,     0,     0,     0,     0,
       0,  4767,     0,  4768,     0,     0,     0,     0,     0,     0,
     970,     0,   970,     0,     0,     0,     0,     9,     0,     0,
       0,  -930,     0,  4769,     0,     0,   965,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4770,     0,     0,     0,  1958,     0, -3749,  4771,     0,
      39,     0,    39,     0,     0,   971,   972,   971,   972,     0,
       0, -1911,     0,  4772,  6339,     0,     0,     0,     0,     0,
    4773,     0,   966,     0,  2641,     0, -3748,     0,  1168,   967,
       0,     0,     0,     0,     0,  4774,     0,     0,     0,     0,
      23,     0, -1911,     0, -1911,     0,     0, -1911, -1911,     0,
    1168,     0,     0,     0,     0,     0,   968,     0,     0,  1958,
    1958,     0,     0,     0,   969,     0,     0,     0,     0,     0,
       0,     0,     0,    50,     0,    50,     0, -3748,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4775,     0,     0,     0,     0,     0,     0,     0,
       0,   970,  4776,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    84,  1169,    84,     0,     0,     0,
    1168,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   973,     0,   973,     0,
    4777, -3748,     0,  1168,     0,     0,   971,   972,     0,     0,
       0,     0,     0,  4778,     0,  1958,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4252,
       0,     0,  4779,     0,     0,     0,     0,     0,  4780,     0,
       0,     0,     0,     0,     0,     0,   974,     0,   974,     0,
       0,     0,     0,     0, -3748,     0,     0,     0,     0,     0,
       0,     0,  4781,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0, -3749,  4782,     0,     0,     0,
       0,     0,     0,  4783,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   973,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4784,     0,
       0,     0,  1168,  1168,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4785,  4786,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4787,     0,     0,     0,
       0,     0,  1958,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   975,     0,   975,   974,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4788,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1168,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5201,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1168,  1168,     0,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,  1958,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1168,     0,  1168,     0,  1168,     0,
    1168,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1168,     0,     0,     0,     0,     0,
    1958,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1168,  1168,     0,     0,     0,  1168,     0,
    1168,     0,  1168,     0,     0,   975,     0,  1168,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1169,     0,  1169,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1958,     0,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1168,     0,     0,     0,  1169,  1169,     0,     0,     0,     0,
    1169,     0,     0,     0,  1169,  1169,  1169,     0,     0,     0,
       0,     0,     0,     0,  1169,  1169,     0,     0,     0,     0,
    1169,     0,     0,     0,  1169,  1169,  1169,     0,  1169,  1169,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,  1169,
       0,  1169,     0,     0,  1169,  1169,  1169,  1169,     0,  1169,
       0,  1169,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1169,  1169,  1169,  1169,  1169,
       0,  1169,  1169,  1169,  1169,  1169,  1169,     0,  1169,  1169,
       0,  1169,  1169,     0,  1169,  1169,     0,     0,  1169,  1169,
    1168,  1169,  1169,     0,     0,  1169,     0,  1169,     0,  1168,
       0,  1169,  1169,  1169,     0,     0,  1169,  1169,  1169,  1169,
       0,  1169,     0,  1168,     0,  1958,  1168,     0,  1169,     0,
       0,     0,     0,     0,  1169,  1169,  1169,  1169,     0,     0,
       0,     0,     0,     0,     0,  1169,  1169,     0,  1169,  1169,
       0,     0,  1169,  1169,  1169,  1169,  1169,  1169,  1169,  1169,
    1169,  1169,  1169,  1169,  1169,     0,     0,  1169,  4757,     0,
    4758,     0,     0,     0,     0,  4759,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  -930,     0,
    -930,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2438,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4760,     0,     0,     0,     0,     0,     0,     0,
    4759,     4,     5,     0,     0,     0,     0,     0,     0,     0,
    1169,     0,  1169,     0,  4761,     0,     0,     0,  1168,  1168,
       0,  1168,     0,     0,     0,     0,     0,     0,  5650,     0,
    4886,     0,     0,     0,  1168,  1168,  1168,     0,     0,     0,
       0,     0,     0,  1169,     0,     0,     0,     0,     0,     0,
       0,     0,  4888,     0,     0,     0,     0,     0,     0,     0,
    5651,  1168,  1168,  4762,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2438,     0,     0,     0,  1168,     0,     0,     0,     0,
       0,     0,  5652,     0,     0,     0,     0,  1168,     0,     0,
       0,     0,     0,     0,     0,     0,  1168,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4763,  4764,  4765,     0,     0,     0,     0,  4760,     0,     0,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4766,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1168,     0,     0,     0,  1168,  4892,     0,  1169,     0,
       0,     0,     0,     0,     0,  1169,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1958,     0,     0,     0,     0,     0,     0,     0,     0,  4894,
       0,     0,     0,     0,     0,     0,     0,  4767,  4762,  4768,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  -930,     0,  4769,
       0,     0,     0,  4896,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4770,     0,     0,
       0,     0,     0,     0,  4771,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4763,  4764,  4765,     0,  4772,
       0,     0,     0,     0,     0,     0,  4773,     0,     0,     0,
       0,     0,     0,     0,     0,  4766,     0,     0,     0,     0,
       0,  4774,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4759,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4897,     0,     0,     0,     0,     0,
       0,     0,  4767,     0,  4768,     0,     0,     0,  4775,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4776,  -930,
       0,  -930,     0,     0,  4769,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,  1168,  1168,
       0,     0,  4770,     0,     0,     0,     0,  2438,     0,  4771,
       0,     0,     0,     0,     0,     0,  4777,     0,     0,     0,
       0,     0,     0,     0,  4772,     0,     0,     0,     0,  4778,
       0,  4773,     0,     0,     0,  4899,     0,     0,     0,  1169,
       0,     0,  4901,     0,     0,     0,  4774,  1169,  1169,     0,
       0,     0,     0,  4760,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4779,     0,
       0,     0,     0,     0,  4780,  4903,     0,     0,     0,     0,
    1168,     0,     0,  1958,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4781,     0,
       0,  1169,     0,  4775,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4776,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4762,     0,     0,     0,     0,     0,
       0,     0,  4782,     0,  1168,     0,     0,     0,     0,  4783,
       0,     0,     0,     0,  1169,  1169,  1169,     0,     0,     0,
       0,  4777,     0,  1958,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4778,     0,  4905,     0,     0,     0,
       0,     0,     0,     0,  4784,     0,     0,     0,     0,     0,
       0,  4763,  4764,  4765,     0,     0,     0,     0,     0,  4785,
    4786,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4766,  4787,  4779,  1169,     0,     0,     0,     0,  4780,
       0,     0,     0,  1168,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,  1169,  1169,     0,  1169,
    1169,     0,     0,  4781,     0,     0,     0,     0,  1169,  4788,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4767,     0,
    4768,     0,     0,     0,     0,     0,     0,  4782,     0,     0,
       0,  1169,     0,     0,  4783,     0,     0,     0,  -930,     0,
    4769,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1169,  4770,     0,
       0,     0,     0,     0,     0,  4771,     0,     0,     0,  4784,
       0,     0,     0,     0,     0,     0,  1168,     0,  1168,     0,
    4772,     0,     0,     0,  4785,  4786,     0,  4773,     0,     0,
       0,     0,     0,  1169,  1170,     0,     0,  4787,     0,     0,
       0,     0,  4774,     0,     0,     0,     0,     0,     0,     0,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4788,     0,     0,     0,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,  1169,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,     0,  4775,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4776,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1168,     0,     0,  4777,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4778,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1168,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1168,     0,     0,  1169,  4779,
       0,     0,     0,     0,     0,  4780,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4781,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1169,     0,     0,     0,     0,     0,  1169,     0,     0,
       0,     0,     0,  4782,     0,     0,     0,     0,     0,     0,
    4783,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4784,     0,     0,     0,     0,
       0,     0,     4,     5,     0,     0,     0,     0,     0,     0,
    4785,  4786,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4787,     0,     0,     0,     0,     0,     0,
    1252,     0,  1253,     0,     0,     0,     0,     0,     0,     0,
     684,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1221,     0,     0,     0,     0,     0,
    4788,     0,  1254,  1255,  1170,     0,     0,     0,  1170,     0,
       0,     0,  1256,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    16,    17,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1257,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1258,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1168,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1170,  1170,  1170,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,  1168,
    1170,     0,     0,     0,     0,     0,     0,  1958,  1169,     0,
       0,     0,  1169,  1168,     0,  1169,     0,     0,  1259,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,     0,     0,
    1260,  1168,     0,  1169,     0,  1169,  1169,     0,  1169,  1169,
    1169,  1169,     0,  1169,     0,  1169,  1169,     0,  1169,     0,
       0,     0,     0,     0,     0,     0,  1169,  1169,     0,     0,
       0,  1169,  1169,  1169,     0,     0,     0,     0,     0,     0,
       0,  1169,  1169,  1169,     0,  1169,     0,  1169,     0,  1169,
       0,  1169,     0,  1169,     0,  1261,     0,     0,  1169,  1169,
       0,  1169,  1169,  1169,     0,     0,     0,  1169,     0,     0,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,  1169,
       0,     0,  1169,     0,  1169,  1169,  1169,     0,     0,  1169,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1262,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1169,     0,  1169,     0,     0,  1169,     0,     0,     0,
       0,  1263,     0,  1168,     0,     0,  1169,  1169,  1169,  1169,
    1264,  1169,     0,     0,     0,     0,  1169,     0,     0,     0,
       0,     0,     0,  1265,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,  1266,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1267,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1525,
    1526,     0,     0,     0,  1530,  1531,     0,     0,     0,     0,
       0,     0,     0,     0,  1540,     0, -2321,  1268,     0,     0,
    1269,     0,  1270,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1562,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1271,
    1272,     0,  1575,     0,     0,  1273,  1274,  1168,  1169,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1590,     0,
    6253,     0,  1275,     0,     0,     0,     0,     0,     0,     0,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1276,     0,     0,     0,     0,  1614,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1277,     0,     0,  1633,  1634,
    1635,     0,     0,     0,     0,     0,     0,     0,  1643,  1644,
    1645,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1170,  1660,     0,     0,  1958,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1278,
       0,     0,     0,  1169,     0,     0,     0,     0,  1689,     0,
       0,     0,     0,     0,  1279,     0,     0,     0,  1958,     0,
       0,     0,     0,  1280,     0,     0,  1281,  1282,     0,     0,
    1168,     0,     0,     0,     0,  1716,     0,     0,     0,     0,
       0,  1283,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1738,  1739,
    1740,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1284,     0,
    1759,  1760,     0,     0,     0,     0,     0,  1285,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -3350,     0,
    1286,     0,     0,     0,     0,     0,     0,     0,  1168,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1775,     0,  1776,  1777,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1778,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0, -3350,  1169,  1169,     0,     0,     0,     0,  1287,     0,
       0,     0,     0,     0,  1168,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1779,  1780,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1782,     0,     0,     0,     0,     0,     0,  1169,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1169,  1169,     0,
       0,     0,  1169,  1783,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,     0,  1169,     0,  1169,     0,
    1169,     0,     0,  1168,     0,     0,     0,  1168,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1169,  1169,  1784,  1785,     0,  1169,     0,
    1169,     0,  1169,     0,     0,     0,     0,  1169,     0,     0,
       0,  1786,  1787,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,  1789,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1169,     0,     0,  1168,  1170,  1170,     0,     0,     0,     0,
    1170,     0,     0,     0,  1170,  1170,  1170,     0,     0,     0,
       0,     0,     0,     0,  1170,  1170,     0,     0,     0,     0,
    1170,     0,     0,     0,  1170,  1170,  1170,     0,  1170,  1170,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,  1170,     0,     0,  1170,  1170,  1170,  1170,     0,  1170,
    1791,  1170,  1170,  1792,     0,     0,  1793,     0,     0,     0,
       0,     0,     0,     0,     0,  1170,  1170,  1170,  1170,  1170,
       0,  1170,  1170,  1170,  1170,  1170,  1170,     0,  1170,  1170,
    1794,  1170,  1170,     0,  1170,  1170,     0,     0,  1170,  1170,
    1169,  1170,  1170,     0,     0,  1170,     0,  1170,     0,  1169,
    1796,  1170,  1170,  1170,     0,     0,  1170,  1170,  1170,  1170,
       0,  1170,     0,  1169,     0,     0,  1169,     0,  1170,     0,
       0,     0,     0,     0,  1170,  1170,  1170,  1170,     0,     0,
       0,     0,     0,     0,     0,  1170,  1170,     0,  1170,  1170,
       0,     0,  1170,  1170,  1170,  1170,  1170,  1170,  1170,  1170,
    1170,  1170,  1170,  1170,  1170,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,  1170,     0,     0,     0,     0,     0,  1169,  1169,
       0,  1169,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,  1169,  1169,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1169,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1169,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1169,     0,     0,
       0,     0,     0,     0,     0,     0,  1169,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1169,     0,     0,     0,  1169,     0,     0,  1170,     0,
       0,     0,     0,     0,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1134,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,  1169,  1169,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,     0,     0,     0,     0,     0,     0,  1170,  1170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1169,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,  1170,  1170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
       0,     0,     0,  1169,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,     0,  1170,  1170,     0,  1170,
    1170,     0,     0,     0,  1969,     0,     0,     0,  1170,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1995,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2010,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1169,     0,  1169,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,  2084,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1169,     0,     0,  1170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2279,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2475,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1169,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1169,
       0,     0,     0,     0,     0,     0,     0,     0,  1170,     0,
       0,     0,  1170,  1169,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
       0,  1169,     0,  1170,     0,  1170,  1170,     0,  1170,  1170,
    1170,  1170,     0,  1170,     0,  1170,  1170,     0,  1170,     0,
       0,     0,     0,     0,     0,     0,  1170,  1170,     0,     0,
       0,  1170,  1170,  1170,     0,     0,     0,     0,     0,     0,
       0,  1170,  1170,  1170,     0,  1170,     0,  1170,     0,  1170,
       0,  1170,     0,  1170,     0,     0,     0,     0,  1170,  1170,
       0,  1170,  1170,  1170,     0,     0,     0,  1170,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,     0,  1170,     0,  1170,  1170,  1170,     0,     0,  1170,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1170,     0,  1170,     0,     0,  1170,     0,     0,     0,
       0,     0,     0,  1169,     0,     0,  1170,  1170,  1170,  1170,
       0,  1170,     0,     0,     0,     0,  1170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1169,  1170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2634,
       0,  2634,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1169,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2683,     0,     0,     0,
    2688,     0,  2690,  1170,     0,     0,     0,     0,     0,     0,
    2705,  2706,     0,     0,     0,     0,  2735,     0,  1169,     0,
    2740,  2741,  2742,     0,  2744,  2745,  2746,     0,     0,     0,
    1169,     0,     0,     0,     0,  2754,     0,  2757,     0,     0,
    2758,  2759,  2760,  2761,     0,     0,     0,  2765,  2766,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2777,  2778,  2785,  2789,  2790,     0,  2793,  2794,  2795,
    2798,  2799,     0,     0,  2802,  2803,     0,  2809,  2810,     0,
    2813,  2814,     0,     0,     0,  2818,     0,  2820,  2821,     0,
       0,  2824,  1170,  2825,     0,     0,     0,  2828,  2785,  2830,
       0,     0,  2836,     0,  2838,  2839,     0,  2840,     0,     0,
       0,     0,     0,     0,  2844,     0,     0,     0,  1169,     0,
    2846,  2847,  2848,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,  1170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1169,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2944,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1170,  1170,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,  1170,     0,  1170,     0,
    1170,     0,     0,  1169,     0,     0,  3058,  1169,  3063,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,  1170,     0,     0,     0,  1170,  3090,
    1170,     0,  1170,     0,     0,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3169,     0,     0,     0,
    1170,     0,     0,  1169,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3193,     0,     0,     0,     0,     0,
       0,  3198,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3237,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,  1170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3386,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,  3438,     0,     0,     0,     0,
       0,     0,     0,  3445,  3446,     0,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1170,  1170,
       0,  1170,     0,     0,     0,     0,     0,  3465,     0,     0,
       0,     0,     0,     0,  1170,  1170,  1170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1170,  1170,     0,     0,     0,     0,     0,     0,     0,
    3504,  3506,  3508,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,     0,     0,  1170,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3570,     0,
       0,  1170,     0,     0,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,     0,  3578,     0,  3579,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3604,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3618,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3674,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3169,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3700,     0,     0,     0,     0,     0,     0,
    3063,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1170,  1170,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3791,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,  3818,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3818,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1170,     0,  1170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4056,     0,     0,     0,  4058,     0,
       0,  4059,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4087,
       0,     0,     0,     0,  4091,  4092,  4093,  4094,     0,  4095,
       0,  4096,  4097,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4102,  4103,     0,     0,     0,  4104,  4105,  4106,
       0,     0,     0,     0,     0,     0,     0,  4108,  4109,  4110,
       0,  4111,     0,  4113,     0,  4115,     0,  4117,     0,  4119,
       0,     0,     0,     0,  2795,  4122,     0,  2795,     0,  4125,
       0,     0,     0,  4126,  1170,     0,  4127,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4133,     0,
    4134,  4135,  4136,     0,     0,  4137,     0,     0,     0,     0,
       0,     0,  1170,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4159,     0,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,  4169,  4172,     0,     0,  4177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3063,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3063,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3169,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1170,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1170,     0,     0,     0,     0,     0,     0,  4443,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4498,  4499,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4548,     0,     0,  4549,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4569,  4570,     0,     0,     0,  4575,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4595,     0,  4596,     0,  4597,     0,  4598,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4616,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1170,     0,  4637,
    4638,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3818,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4685,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1170,
       0,     0,     0,     0,     0,     0,  3063,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1170,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4838,     0,     0,     0,
       0,     0,     0,     0,     0,  3818,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3818,
       0,     0,  4850,     0,     0,     0,     0,     0,  1170,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1170,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4983,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4996,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,     0,  1170,     0,     0,
       0,     0,     0,     0,  5015,  5016,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5023,  5024,  5025,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5047,  5048,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5070,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1170,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3063,     0,     0,
       0,  3063,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5343,  5344,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3818,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3818,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,  1911,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3063,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3169,     0,  5591,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1922,     0,     0,     0,     0,     0,     0,
      52,    53,    54,  1912,    55,    56,     0,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,     0,    74,    75,    76,    77,
      78,    79,    80,    81,     0,     0,     0,     0,    86,    87,
      88,    89,    90,     0,     0,    93,    94,    95,    96,    97,
       0,     0,     0,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   108,     0,     0,     0,     0,     0,     0,   114,
       0,   116,     0,   118,   119,  1913,   121,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   141,     0,   142,
     143,   144,   145,   146,   147,   148,     0,   150,   151,   152,
     153,     0,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,     0,     0,   168,     0,  5696,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
       0,     0,     0,     0,     0,   183,   184,  1914,   186,   187,
     188,  3818,   190,   191,     0,   193,   194,     0,     0,   196,
       0,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,     0,   210,   211,   212,   213,   214,   215,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,     0,     0,     0,   301,
       0,   303,   304,     0,   306,   307,   308,   309,     0,   311,
     312,   313,   314,     0,     0,     0,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,     0,   345,     0,   347,   348,   349,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,   365,   366,   367,     0,   369,   370,
     371,     0,   373,   374,   375,   376,   377,     0,   379,   380,
       0,     0,   383,   384,     0,     0,   387,   388,   389,     0,
     391,     0,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,     0,   402,   403,     0,   405,     0,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,     0,
       0,   438,     0,   440,   441,   442,   443,     0,     0,   446,
     447,  3818,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,     0,     0,
     467,   468,     0,     0,   470,     0,   472,   473,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3063,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5918,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  6137,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1005,     0,     0,     0,     0,  1006,
    1007,     0,     0,     0,     0,     0,  6270,     0,     0,     0,
    1008,  1009,     0,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,  2084,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,    42,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,  3063,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,    49,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,    51,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,  3063,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
    2782,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,  2783,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,  2784,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,  3194,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3195,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    3196,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,  3197,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,  1968,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    3060,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,  3061,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,  3503,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,  3505,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,  3507,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    5095,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,  3061,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1994,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,  2632,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  2633,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  2633,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,  2855,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1049,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,     0,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
    2856,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  4118,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,  1059,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  4132,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,  1059,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,  6367,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,     0,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1961,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,     0,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1962,  1963,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  2077,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,     0,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1962,  1963,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  2079,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,     0,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1962,  1963,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  1049,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,     0,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  1008,  1009,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,  1021,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1022,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  2876,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,     0,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1126,  1005,     0,     0,     0,  1127,  1006,
    1007,     0,     0,     0,  1128,     0,     0,     0,  1129,  1130,
    1008,  1009,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,  1021,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1022,  1023,
    1024,  1025,     0,     0,     0,     0,     0,     0,     0,  1026,
    1027,     0,  1028,     0,     0,     0,     0,     0,     0,  1029,
    1030,     0,     0,  1031,  1032,  1033,  1034,     0,  1035,    13,
       0,  1036,  1037,     0,     0,     0,     0,     0,     0,     0,
    1038,     0,     0,  1039,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,  1040,  1041,  1042,     0,  1043,     0,     0,     0,     0,
       0,     0,     0,  1044,  1045,  1046,    22,     0,     0,     0,
       0,     0,  1047,     0,     0,   574,     0,     0,     0,     0,
       0,  1048,     0,     0,  2878,     0,     0,     0,     0,     0,
       0,     0,     0,  1050,     0,  1051,     0,  1052,     0,     0,
       0,     0,     0,  1053,     0,     0,     0,     0,     0,     0,
       0,     0,  1054,  1055,     0,  1056,     0,     0,     0,  1057,
       0,     0,     0,     0,  1058,     0,     0,    29,     0,     0,
    1060,  1061,  1062,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,  1064,  1065,  1066,     0,  1067,     0,     0,     0,     0,
       0,     0,  1068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1069,     0,     0,     0,     0,     0,     0,
       0,  1070,  1071,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1072,     0,     0,     0,     0,     0,     0,  1073,  1074,     0,
    1075,  1076,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1078,  1079,  1080,     0,     0,     0,     0,     0,
    1081,  1082,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,  1083,  1084,  1085,  1086,    63,    64,    65,  1087,
      67,    68,    69,    70,    71,    72,  1088,    74,    75,    76,
      77,    78,    79,    80,  1089,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,  1090,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,  1091,   110,  1092,  1093,  1094,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,  1095,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  1096,  1097,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,  1098,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,  1099,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,  1100,  1101,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,  1102,   266,   267,   268,   269,   270,  1103,   272,   273,
     274,   275,   276,   277,   278,   279,  1104,  1105,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
    1106,   302,   303,   304,   305,   306,   307,   308,  1107,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
    1108,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  1109,   365,   366,   367,   604,   369,
     370,  1110,   372,   373,   374,   375,   376,  1111,   378,  1112,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,  1113,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  1114,  1115,  1116,  1117,   432,   433,   434,   435,  1118,
    1119,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,  1120,   450,   451,  1121,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,  1122,   611,
    1123,   467,   468,   469,     0,   470,   612,   472,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,  1126,  1005,
       0,     0,     0,  1127,  1006,  1007,     0,     0,     0,  1128,
       0,     0,     0,  1129,  1130,  6222,  6223,  1131,  1010,  1011,
    1012,  1013,  1014,  1015,  1016,  1017,  1018,  1019,  1020,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1023,  1024,  1025,     0,     0,     0,
       0,     0,     0,     0,  1026,  1027,     0,  1028,     0,     0,
       0,     0,     0,     0,  1029,  1030,     0,     0,  1031,  1032,
    1033,  1034,     0,  1035,    13,     0,  1036,  1037,     0,     0,
       0,     0,     0,     0,     0,  1038,     0,     0,  1039,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,  1040,  1041,  1042,     0,
    1043,     0,     0,     0,     0,     0,     0,     0,  1044,  1045,
    1046,    22,     0,     0,     0,     0,     0,  1047,     0,     0,
     574,     0,     0,     0,     0,     0,  1048,     0,     0,  1961,
       0,     0,     0,     0,     0,     0,     0,     0,  1050,     0,
    1051,     0,  1052,     0,     0,     0,     0,     0,  1053,     0,
       0,     0,     0,     0,     0,     0,     0,  1054,  1055,     0,
    1056,     0,     0,     0,  1057,     0,     0,     0,     0,  1058,
       0,     0,    29,     0,     0,  1060,  1061,  1062,  1063,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,  1064,  1065,  1066,     0,
    1067,     0,     0,     0,     0,     0,     0,  1068,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1069,     0,
       0,     0,     0,     0,     0,     0,  1070,  1071,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1072,     0,     0,     0,     0,
       0,     0,  1073,  1074,     0,  1075,  1076,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1077,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1078,  1079,  1080,
       0,     0,     0,     0,     0,  1081,  1082,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,  1083,  1084,  1085,
    1086,    63,    64,    65,  1087,    67,    68,    69,    70,    71,
      72,  1088,    74,    75,    76,    77,    78,    79,    80,  1089,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,  1090,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,  1091,
     110,  1092,  1093,  1094,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,  1095,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
    1096,  1097,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,  1098,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,  1099,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
    1100,  1101,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,  1102,   266,   267,   268,
     269,   270,  1103,   272,   273,   274,   275,   276,   277,   278,
     279,  1104,  1105,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,  1106,   302,   303,   304,   305,
     306,   307,   308,  1107,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,  1108,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,  1109,
     365,   366,   367,   604,   369,   370,  1110,   372,   373,   374,
     375,   376,  1111,   378,  1112,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,  1113,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,  1114,  1115,  1116,  1117,
     432,   433,   434,   435,  1118,  1119,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,  1120,   450,
     451,  1121,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,  1122,   611,  1123,   467,   468,   469,     0,
     470,   612,   472,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,  6224,  6225,  1005,     0,     0,     0,     0,  2000,
       0,     0,     0,     0,  6226,     0,     0,     0,     0,  1130,
    1954,  1955,  1131,  1010,  1011,  1012,  1013,  1014,  1015,  1016,
    1017,  1018,  1019,  1020,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,  1042,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,  1063,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1077,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,  2912,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,  2913,   429,   430,  2914,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,  6516,   470,   612,   472,   473,  2832,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1131,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,  6516,   470,   612,   472,   473,  2832,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
    6517,     0,     0,     0,     0,     0,     0,  2833,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,  2000,   470,   612,   472,   473,     0,
       0,     0,     0,     0,     0,  1954,  1955,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2833,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,  2000,
     470,   612,   472,   473,     0,     0,     0,     0,     0,     0,
    1954,  1955,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2001,     0,     0,     0,     0,     0,
       0,     0,  1131,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,  2832,   470,   612,   472,   473,     0,
       0,     0,     0,     0,     0,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1131,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     1,     0,     2,     3,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2833,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     6,     7,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     8,     0,     9,     0,    10,
       0,    11,     0,     0,     0,     0,     0,     0,     0,    12,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    14,     0,     0,
      15,     0,    16,    17,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    20,     0,     0,     0,
      21,     0,     0,     0,    22,     0,     0,     0,     0,     0,
      23,     0,     0,     0,     0,     0,     0,     0,     0,    24,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      25,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      26,     0,     0,    27,     0,     0,     0,    28,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,    30,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,    32,    33,    34,     0,
       0,     0,     0,     0,     0,     0,     0,    35,    36,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    37,
      38,    39,     0,    40,     0,     0,     0,     0,    41,     0,
       0,     0,     0,     0,    42,     0,     0,     0,    43,    44,
      45,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    46,     0,    47,     0,    48,     0,
       0,     0,     0,     0,     0,    49,     0,     0,     0,     0,
       0,     0,     0,     0,    50,    51,     0,     0,     0,    52,
      53,    54,     0,    55,    56,    57,    58,    59,    60,    61,
       0,    62,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    86,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,     0,
      98,    99,   100,   101,   102,   103,   104,     0,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,     0,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   180,
       0,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
     218,     0,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,     0,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,     0,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,     0,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,     0,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,     0,   470,   471,   472,   473,     1,     0,     0,
       3,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     4,     5,     0,     0,     0,     0,   474,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       6,     7,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     8,     0,
       9,     0,    10,     0,    11,     0,     0,     0,     0,     0,
       0,     0,    12,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      14,     0,     0,    15,     0,    16,    17,     0,     0,     0,
       0,     0,    18,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    20,
       0,     0,     0,    21,     0,     0,     0,    22,     0,     0,
       0,     0,     0,    23,     0,     0,     0,     0,     0,     0,
       0,     0,    24,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    25,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    26,     0,     0,    27,     0,     0,     0,
      28,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,    32,
      33,    34,     0,     0,     0,     0,     0,     0,     0,     0,
      35,    36,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    37,    38,    39,     0,    40,     0,     0,     0,
       0,    41,     0,     0,     0,     0,     0,    42,     0,     0,
       0,    43,    44,    45,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    46,     0,    47,
       0,    48,     0,     0,     0,     0,     0,     0,    49,     0,
       0,     0,     0,     0,     0,     0,     0,    50,    51,     0,
       0,     0,    52,    53,    54,     0,    55,    56,    57,    58,
      59,    60,    61,     0,    62,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,     0,    98,    99,   100,   101,   102,   103,   104,
       0,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,     0,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   140,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   149,   150,
     151,   152,   153,     0,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   180,     0,   181,     0,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,     0,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,     0,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,     0,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,     0,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,     0,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,     0,   470,   471,   472,   473,
       1,     0,     0,     3,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     4,     5,     0,     0,     0,     0,
     474,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     6,     7,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     8,     0,     0,     0,    10,     0,    11,     0,     0,
       0,     0,     0,     0,     0,    12,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    15,     0,    16,    17,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    21,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    24,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    25,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    26,     0,     0,    27,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
      30,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,    32,    33,    34,     0,     0,     0,     0,     0,
       0,     0,     0,    35,    36,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    37,    38,     0,     0,    40,
       0,     0,     0,     0,    41,     0,     0,     0,     0,     0,
      42,     0,     0,     0,    43,    44,    45,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      46,     0,    47,     0,    48,     0,     0,     0,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    51,     0,     0,     0,    52,    53,    54,     0,    55,
      56,    57,    58,    59,    60,    61,     0,    62,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,    82,
       0,     0,    85,    86,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,     0,    98,    99,   100,   101,
     102,   103,   104,     0,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,     0,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   140,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   149,   150,   151,   152,   153,     0,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,     0,   181,     0,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,   218,     0,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,     0,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,     0,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,     0,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,     0,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,     0,   470,
     471,   472,   473,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   474,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5151,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   770,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,  3723,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3724,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   772,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   774,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,  5152,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5153,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1397,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    42,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    51,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1398,     0,     0,     0,     0,     0,     0,     0,   802,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1396,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1397,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1398,     0,     0,     0,     0,  1399,     0,     0,   802,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1397,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1398,
       0,     0,     0,     0,  1399,     0,     0,   802,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1397,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   575,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,   103,   104,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,   590,   181,     0,   182,   183,   184,   591,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,   364,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     605,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   608,
     609,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   611,   466,
     467,   468,   469,     0,   470,   612,   472,   473,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1398,     0,
       0,     0,     0,     0,     0,     0,   802,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   575,    55,    56,    57,    58,    59,    60,    61,
       0,     0,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,    86,    87,    88,
      89,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,   103,   104,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   589,
     590,   181,     0,   182,   183,   184,   591,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,   364,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   605,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   608,   609,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   611,   466,   467,
     468,   469,     0,   470,   612,   472,   473,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,  3376,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   802,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   575,    55,    56,    57,    58,    59,    60,    61,     0,
       0,     0,     0,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,    86,    87,    88,    89,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,   103,   104,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   589,   590,
     181,     0,   182,   183,   184,   591,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,   364,   365,   366,   367,   604,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   605,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   608,   609,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   611,   466,   467,   468,
     469,     0,   470,   612,   472,   473,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5340,     0,     0,     0,
       0,     0,     0,     0,  5153,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,  5608,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     575,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,    86,    87,    88,    89,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,   103,   104,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   589,   590,   181,
       0,   182,   183,   184,   591,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
     364,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   605,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   608,   609,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   611,   466,   467,   468,   469,
       0,   470,   612,   472,   473,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5153,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   799,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     800,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   801,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   802,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   578,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     588,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     601,   347,   348,   349,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   605,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   802,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,     4,     5,   822,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   723,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5153,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1476,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,     0,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2072,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,  1220,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     4,     5,     0,     0,     0,     0,     0,     0,     0,
    2887,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1221,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1222,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,  1223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,  1224,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,  1225,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,  1226,
     186,   187,   188,   592,  1227,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,  1228,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,  1229,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,  1230,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,  1231,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
    1232,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,  1233,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,  1234,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,  1235,   433,   434,   435,
     436,   608,     0,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
    1236,   466,   467,   468,   469,  2151,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     4,     5,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,  2392,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     4,     5,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,  2673,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     4,     5,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,  1220,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1221,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1222,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,  1223,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,  1224,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,  1225,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,  1226,
     186,   187,   188,   592,  1227,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,  1228,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,  1229,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,  1230,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,  1231,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
    1232,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,  1233,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,     0,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
    1236,   466,   467,   468,   469,  3079,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3080,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,  3079,   470,   612,   472,   473,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
    2406,  1007,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
    2407,     0,  2408,     0,  2409,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2410,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
    2406,  1007,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
    2407,     0,  2408,     0,  2409,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3174,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,  3175,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
    2406,  1007,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
    2407,     0,  2408,     0,  2409,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4511,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
    2406,  1007,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
    2407,     0,  2408,     0,  2409,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
    1954,  1955,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,  2893,  2894,  2895,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,  4680,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   575,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,   103,   104,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,   590,   181,     0,   182,   183,   184,   591,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,   364,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     605,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   608,
     609,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   611,   466,
     467,   468,   469,     0,   470,   612,   472,   473,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,  3358,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   575,    55,    56,    57,    58,    59,    60,    61,
       0,     0,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,    86,    87,    88,
      89,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,   103,   104,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   589,
     590,   181,     0,   182,   183,   184,   591,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,   364,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   605,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   608,   609,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   611,   466,   467,
     468,   469,     0,   470,   612,   472,   473,  1954,  1955,     0,
       0,     0,     0,     0,     0,     0,     0,  4526,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   575,    55,    56,    57,    58,    59,    60,    61,     0,
       0,     0,     0,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,    86,    87,    88,    89,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,   103,   104,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   589,   590,
     181,     0,   182,   183,   184,   591,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,   364,   365,   366,   367,   604,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   605,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   608,   609,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   611,   466,   467,   468,
     469,     0,   470,   612,   472,   473,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,  5438,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     575,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,    86,    87,    88,    89,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,   103,   104,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   589,   590,   181,
       0,   182,   183,   184,   591,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
     364,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   605,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   608,   609,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   611,   466,   467,   468,   469,
       0,   470,   612,   472,   473,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,  5727,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,     0,     0,     0,     0,
       0,  3341,     0,     0,  6048,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   717,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,   718,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,  3987,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3988,     0,   688,     0,  3989,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   578,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     588,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     601,   347,   348,   349,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   605,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,     4,     5,   822,     0,     0,     0,     0,
       0,     0,  3342,     0,     0,   723,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1465,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2156,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2157,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,     4,     5,   822,  1466,     0,     0,     0,     0,
       0,     0,     0,     0,   723,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1465,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,     0,  1466,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1514,  1515,  1516,
    1517,  1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,
    1527,  1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,
    1537,  1538,  1539,  1540,  1541,  1542,     0,  1543,  1544,  1545,
    1546,  1547,  1548,  1549,  1550,  1551,  1552,  1553,     0,  1554,
      13,  1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,
    1564,  1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,
    1574,  1575,  1576,  1577,  1578,  1579,  1580,  1581,    19,  1582,
    1583,  1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,     0,
    1592,  1593,  1594,  1595,  1596,     0,     0,    22,  1597,  1598,
    1599,  1600,  1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,
       0,  1609,  1610,     0,  1611,  1612,  1613,  1614,  1615,  1616,
    1617,  1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,
    1627,  1628,  1629,  1630,     0,  1631,  1632,  1633,  1634,  1635,
    1636,  1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,
    1646,  1647,  1648,  1649,  1650,  1651,  1652,  1653,    29,  1654,
    1655,  1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,
      31,  1665,  1666,  1667,  1668,     0,  1669,  1670,  1671,  1672,
    1673,    34,  1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,
    1682,  1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,
    1692,  1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,
    1702,  1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,
    1712,  1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,
    1722,  1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,
    1732,  1733,     0,  1734,  1735,  1736,  1737,  1738,  1739,  1740,
    1741,  1742,  1743,  1744,  1745,  1746,  1747,  1748,     0,  1749,
    1750,  1751,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,
    1760,  1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,
    1770,  1771,    52,    53,    54,     0,    55,    56,    57,    58,
      59,    60,    61,     0,  1772,  1773,  1774,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
    1775,    87,  1776,  1777,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,     0,  1778,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,  1779,  1780,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,  1781,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,  1782,   589,   590,   181,     0,   182,   183,   184,     0,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,  1783,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,     0,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,  1784,  1785,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,     0,
    1786,  1787,   294,  1788,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,     0,  1789,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,  1790,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,     0,   376,   377,   378,
     379,   380,   605,     0,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,  1791,
     426,   427,  1792,   429,   430,  1793,   432,   433,   434,   435,
     436,   608,     0,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,     0,  1794,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
    1795,   466,   467,   468,   469,     0,   470,   612,   472,  1796,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1514,  1515,  1516,  1517,
    1518,  1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,
    1528,  1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,
    1538,  1539,  1540,  1541,  1542,     0,  1543,  1544,  1545,  1546,
    1547,  1548,  1549,  1550,  1551,  1552,  1553,     0,  1554,    13,
    1555,  1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,
    1565,  1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,
    1575,  1576,  1577,  1578,  1579,  1580,  1581,    19,  1582,  1583,
    1584,  1585,  1586,  1587,  1588,  1589,  1590,  1591,     0,  1592,
    1593,  1594,  1595,  1596,     0,     0,    22,  1597,  1598,  1599,
    1600,  1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,     0,
    1609,  1610,     0,  1611,  1612,  1613,  1614,  1615,  1616,  1617,
    1618,  1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,
    1628,  1629,  1630,     0,  1631,  1632,  1633,  1634,  1635,  1636,
    1637,  1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,
    1647,  1648,  1649,  1650,  1651,  1652,  1653,    29,  1654,  1655,
    1656,  1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,    31,
    1665,  1666,  1667,  1668,     0,  1669,  1670,  1671,  1672,  1673,
      34,  1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,
    1683,  1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,
    1693,  1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,
    1703,  1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,
    1713,  1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,
    1723,  1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,
    1733,     0,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,
    1742,  1743,  1744,  1745,  1746,  1747,  1748,     0,  1749,  1750,
    1751,  1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,
    1761,  1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,
    1771,    52,    53,    54,     0,    55,    56,    57,    58,    59,
      60,    61,     0,  1772,  1773,  1774,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,  1775,
      87,  1776,  1777,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,     0,  1778,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,  1779,  1780,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,  1781,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
    1782,   589,   590,   181,     0,   182,   183,   184,     0,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,  1783,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,     0,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,  1784,  1785,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,     0,  1786,
    1787,   294,  1788,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
       0,  1789,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,  4484,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,     0,   376,   377,   378,   379,
     380,   605,     0,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,  1791,   426,
     427,  1792,   429,   430,  1793,   432,   433,   434,   435,   436,
     608,     0,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,     0,  1794,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  1795,
     466,   467,   468,   469,     0,   470,   612,   472,  1796,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1514,  1515,  1516,  1517,  1518,
    1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,
    1529,  1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,
    1539,  1540,  1541,  1542,     0,  1543,  1544,  1545,  1546,  1547,
    1548,  1549,  1550,  1551,  1552,  1553,     0,  1554,    13,  1555,
    1556,  1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,
    1566,  1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,
    1576,  1577,  1578,  1579,  1580,  1581,    19,  1582,  1583,  1584,
    1585,  1586,  1587,  1588,  1589,  1590,  1591,     0,  1592,  1593,
    1594,  1595,  1596,     0,     0,    22,  1597,  1598,  1599,  1600,
    1601,  1602,  1603,  1604,  1605,  1606,  1607,  1608,     0,  1609,
    1610,     0,  1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,
    1619,  1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,
    1629,  1630,     0,  1631,  1632,  1633,  1634,  1635,  1636,  1637,
    1638,  1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,
    1648,  1649,  1650,  1651,  1652,  1653,    29,  1654,  1655,  1656,
    1657,  1658,  1659,  1660,  1661,  1662,  1663,  1664,    31,  1665,
    1666,  1667,  1668,     0,  1669,  1670,  1671,  1672,  1673,    34,
    1674,  1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,
    1684,  1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,
    1694,  1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,
    1704,  1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,
    1714,  1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,
    1724,  1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,
       0,  1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,
    1743,  1744,  1745,  1746,  1747,  1748,     0,  1749,  1750,  1751,
    1752,  1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,
    1762,  1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,
      52,    53,    54,     0,    55,    56,    57,    58,    59,    60,
      61,     0,  1772,  1773,  1774,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,  1775,    87,
    1776,  1777,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,     0,  1778,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,  1779,  1780,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,  1781,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,  1782,
     589,   590,   181,     0,   182,   183,   184,     0,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
    1783,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,     0,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,  1784,  1785,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,     0,  1786,  1787,
     294,  1788,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,     0,
    1789,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,     0,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,  5760,   376,   377,   378,   379,   380,
     605,     0,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,  1791,   426,   427,
    1792,   429,   430,  1793,   432,   433,   434,   435,   436,   608,
       0,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,     0,  1794,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,  1795,   466,
     467,   468,   469,     0,   470,   612,   472,  1796,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,
    1530,  1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    1540,  1541,  1542,     0,  1543,  1544,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,     0,  1554,    13,  1555,  1556,
    1557,  1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,
    1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,
    1577,  1578,  1579,  1580,  1581,    19,  1582,  1583,  1584,  1585,
    1586,  1587,  1588,  1589,  1590,  1591,     0,  1592,  1593,  1594,
    1595,  1596,     0,     0,    22,  1597,  1598,  1599,  1600,  1601,
    1602,  1603,  1604,  1605,  1606,  1607,  1608,     0,  1609,  1610,
       0,  1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,
    1630,     0,  1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,
    1639,  1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,
    1649,  1650,  1651,  1652,  1653,    29,  1654,  1655,  1656,  1657,
    1658,  1659,  1660,  1661,  1662,  1663,  1664,    31,  1665,  1666,
    1667,  1668,     0,  1669,  1670,  1671,  1672,  1673,    34,  1674,
    1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,
    1685,  1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,
    1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,
    1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,
    1715,  1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,
    1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,     0,
    1734,  1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,
    1744,  1745,  1746,  1747,  1748,     0,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,
    1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,    52,
      53,    54,     0,    55,    56,    57,    58,    59,    60,    61,
       0,  1772,  1773,  1774,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,  1775,    87,  1776,
    1777,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,     0,  1778,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,  1779,  1780,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,  1781,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,  1782,   589,
     590,   181,     0,   182,   183,   184,     0,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,  1783,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,     0,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,  1784,  1785,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,     0,  1786,  1787,   294,
    1788,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,  1789,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,  5793,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   379,   380,   605,
       0,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,  1791,   426,   427,  1792,
     429,   430,  1793,   432,   433,   434,   435,   436,   608,     0,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,     0,  1794,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,  1795,   466,   467,
     468,   469,     0,   470,   612,   472,  1796,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1514,  1515,  1516,  1517,  1518,  1519,  1520,
    1521,  1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,
    1531,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,
    1541,  1542,     0,  1543,  1544,  1545,  1546,  1547,  1548,  1549,
    1550,  1551,  1552,  1553,     0,  1554,    13,  1555,  1556,  1557,
    1558,  1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,
    1568,  1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,
    1578,  1579,  1580,  1581,    19,  1582,  1583,  1584,  1585,  1586,
    1587,  1588,  1589,  1590,  1591,     0,  1592,  1593,  1594,  1595,
    1596,     0,     0,    22,  1597,  1598,  1599,  1600,  1601,  1602,
    1603,  1604,  1605,  1606,  1607,  1608,     0,  1609,  1610,     0,
    1611,  1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,
    1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,
       0,  1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,
    1640,  1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,
    1650,  1651,  1652,  1653,    29,  1654,  1655,  1656,  1657,  1658,
    1659,  1660,  1661,  1662,  1663,  1664,    31,  1665,  1666,  1667,
    1668,     0,  1669,  1670,  1671,  1672,  1673,    34,  1674,  1675,
    1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,
    1686,  1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,
    1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,
    1706,  1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,
    1716,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,
    1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,     0,  1734,
    1735,  1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,
    1745,  1746,  1747,  1748,     0,  1749,  1750,  1751,  1752,  1753,
    1754,  1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,  1763,
    1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,    52,    53,
      54,     0,    55,    56,    57,    58,    59,    60,    61,     0,
    1772,  1773,  1774,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,  1775,    87,  1776,  1777,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,     0,  1778,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,  1779,  1780,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,  1781,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,  1782,   589,   590,
     181,     0,   182,   183,   184,     0,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,  1783,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,     0,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
    1784,  1785,   279,   280,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,     0,  1786,  1787,   294,  1788,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,     0,  1789,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,     0,   365,   366,   367,   604,   369,   370,   371,   372,
     373,   374,     0,   376,   377,   378,   379,   380,   605,     0,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,  1791,   426,   427,  1792,   429,
     430,  1793,   432,   433,   434,   435,   436,   608,     0,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,     0,  1794,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,  1795,   466,   467,   468,
     469,     0,   470,   612,   472,  1796,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1514,  1515,  1516,  1517,  1518,  1519,  1520,  1521,
    1522,  1523,  1524,  1525,  1526,  1527,  1528,  1529,  1530,  1531,
    1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,  1540,  1541,
    1542,     0,  1543,  1544,  1545,  1546,  1547,  1548,  1549,  1550,
    1551,  1552,  1553,     0,  1554,    13,  1555,  1556,  1557,  1558,
    1559,  1560,  1561,  1562,  1563,  1564,  1565,  1566,  1567,  1568,
    1569,  1570,  1571,  1572,  1573,  1574,  1575,  1576,  1577,  1578,
    1579,  1580,  1581,    19,  1582,  1583,  1584,  1585,  1586,  1587,
    1588,  1589,  1590,  1591,     0,  1592,  1593,  1594,  1595,  1596,
       0,     0,    22,  1597,  1598,  1599,  1600,  1601,  1602,  1603,
    1604,  3968,  1606,  1607,  1608,     0,  1609,  1610,     0,  1611,
    1612,  1613,  1614,  1615,  1616,  1617,  1618,  1619,  1620,  1621,
    1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,  1630,     0,
    1631,  1632,  1633,  1634,  1635,  1636,  1637,  1638,  1639,  1640,
    1641,  1642,  1643,  1644,  1645,  1646,  1647,  1648,  1649,  1650,
    1651,  1652,  1653,    29,  1654,  1655,  1656,  1657,  1658,  1659,
    1660,  1661,  1662,  1663,  1664,    31,  1665,  1666,  1667,  1668,
       0,  1669,  1670,  1671,  1672,  1673,    34,  1674,  1675,  1676,
    1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,  1685,  1686,
    1687,  1688,  1689,  1690,  1691,  1692,  1693,  1694,  1695,  1696,
    1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,  1705,  1706,
    1707,  1708,  1709,  1710,  1711,  1712,  1713,  1714,  1715,  1716,
    1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,  1725,  1726,
    1727,  1728,  1729,  1730,  1731,  1732,  1733,     0,  1734,  1735,
    1736,  1737,  1738,  1739,  1740,  1741,  1742,  1743,  1744,  1745,
    1746,  1747,  1748,     0,  1749,  1750,  1751,  1752,  1753,  1754,
    1755,  1756,  1757,  1758,  1759,  1760,  1761,  1762,  1763,  1764,
    1765,  1766,  1767,  1768,  1769,  1770,  1771,    52,    53,    54,
       0,    55,    56,    57,    58,    59,    60,    61,     0,  1772,
    1773,  1774,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,  1775,    87,  1776,  1777,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,     0,  1778,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
    1779,  1780,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,  1781,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,  1782,   589,   590,   181,
       0,   182,   183,   184,     0,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,  1783,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,     0,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,  1784,
    1785,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,     0,  1786,  1787,   294,  1788,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,  1789,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
       0,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,     0,   376,   377,   378,   379,   380,   605,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,  1791,   426,   427,  1792,   429,   430,
    1793,   432,   433,   434,   435,   436,   608,     0,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,     0,  1794,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,     0,   466,   467,   468,   469,
       0,   470,   612,   472,  1796,     4,     5,   822,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   723,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   913,   914,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   915,     0,     0,     0,
     916,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   917,     0,     0,
       0,     0,     0,     0,     0,     0,   918,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   919,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,   920,     0,     0,     0,     0,   921,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     922,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   923,
       0,     0,     0,   924,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   925,     0,     0,     0,   926,   927,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   928,     0,     0,     0,
       0,     0,     0,   929,   930,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   931,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   932,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   933,   163,   164,   165,
     166,   934,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   935,   936,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   937,   323,   324,
     325,   938,   327,   328,   329,   330,   331,   939,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   940,   344,
     345,   601,   347,   348,   941,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   942,   382,   383,   384,
     943,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   944,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,   822,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   723,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1198,   914,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   915,     0,     0,     0,   916,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   917,     0,     0,     0,
       0,     0,     0,     0,     0,   918,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   919,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
     920,     0,     0,     0,     0,   921,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   922,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   923,     0,
       0,     0,   924,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     925,     0,     0,     0,   926,   927,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   928,     0,     0,     0,     0,
       0,     0,   929,   930,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,  1199,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   931,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   932,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   933,   163,   164,   165,   166,
     934,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   935,   936,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   937,   323,   324,   325,
    1200,   327,   328,   329,   330,   331,   939,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   940,   344,   345,
     601,   347,   348,   941,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   942,   382,   383,   384,   943,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     944,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,     4,     5,     0,     0,     0,  2695,  2696,
    5538,     0,  5539,     0,  5540,   723,  5541,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5542,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,     4,     5,   822,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   723,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   916,  1476,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2171,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2172,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
       4,     5,     0,     0,  1357,     0,     0,  1358,  1359,     0,
       0,     0,  1360,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,   822,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   723,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3296,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3297,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   575,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,   103,   104,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,   590,   181,     0,   182,   183,   184,   591,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,   364,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     605,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   608,
     609,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   611,   466,
     467,   468,   469,     0,   470,   612,   472,   473,     4,     5,
     822,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     723,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3645,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3646,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   575,    55,    56,    57,    58,    59,    60,    61,
       0,     0,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,    86,    87,    88,
      89,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,   103,   104,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   589,
     590,   181,     0,   182,   183,   184,   591,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,   364,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   605,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   608,   609,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   611,   466,   467,
     468,   469,     0,   470,   612,   472,   473,     4,     5,   822,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   723,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3960,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3961,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   575,    55,    56,    57,    58,    59,    60,    61,     0,
       0,     0,     0,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,    86,    87,    88,    89,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,   103,   104,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   589,   590,
     181,     0,   182,   183,   184,   591,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,   364,   365,   366,   367,   604,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   605,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   608,   609,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   611,   466,   467,   468,
     469,     0,   470,   612,   472,   473,     4,     5,   822,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   723,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2156,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2157,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     575,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,    86,    87,    88,    89,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,   103,   104,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   589,   590,   181,
       0,   182,   183,   184,   591,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
     364,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   605,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   608,   609,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   611,   466,   467,   468,   469,
       0,   470,   612,   472,   473,     4,     5,   822,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   723,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1476,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,   822,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   723,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2208,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   578,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     588,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     601,   347,   348,   349,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   605,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,     4,     5,   822,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   723,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   916,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,  1954,  1955,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,  2893,  2894,  2895,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,   822,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   723,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2156,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     687,     0,     0,     0,     0,     0,     0,     0,     0,   688,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,   822,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   723,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   575,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,   103,   104,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,   590,   181,     0,   182,   183,   184,   591,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,   364,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     605,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   608,
     609,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   611,   466,
     467,   468,   469,     0,   470,   612,   472,   473,     4,     5,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   858,   859,     0,     0,     0,
       0,     0,     0,     0,     0,   860,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   861,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,     0,    55,    56,    57,    58,    59,    60,    61,
       0,     0,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,     0,   578,    86,    87,    88,
      89,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,   103,   104,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
       0,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,   862,   863,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   589,
     590,   181,     0,   182,   183,   184,   185,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,   364,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   605,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   608,   864,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   865,   466,   467,
     468,   469,     0,   470,   612,   472,   473,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1924,     0,     0,     0,
       0,     0,     0,    22,  1925,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   575,    55,    56,    57,    58,    59,    60,    61,     0,
       0,     0,     0,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,    86,    87,    88,    89,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,   103,   104,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   589,   590,
     181,     0,   182,   183,   184,   591,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,  1926,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,   364,   365,   366,   367,   604,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   605,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   608,   609,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   611,   466,   467,   468,
     469,     0,   470,   612,   472,   473,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   723,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4676,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     575,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,    86,    87,    88,    89,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,   103,   104,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   589,   590,   181,
       0,   182,   183,   184,   591,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
     364,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   605,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   608,   609,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   611,   466,   467,   468,   469,
       0,   470,   612,   472,   473,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   688,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1836,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   578,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     588,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     601,   347,   348,   349,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   605,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,  1954,  1955,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1956,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,  1954,  1955,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2166,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,  1954,  1955,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2961,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,  2962,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2974,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3716,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   575,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,   103,   104,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,   590,   181,     0,   182,   183,   184,   591,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,   364,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     605,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   608,
     609,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   611,   466,
     467,   468,   469,     0,   470,   612,   472,   473,  1954,  1955,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2961,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   575,    55,    56,    57,    58,    59,    60,    61,
       0,     0,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,    86,    87,    88,
      89,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,   103,   104,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   589,
     590,   181,     0,   182,   183,   184,   591,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,   364,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   605,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   608,   609,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   611,   466,   467,
     468,   469,     0,   470,   612,   472,   473,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,  4729,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   575,    55,    56,    57,    58,    59,    60,    61,     0,
       0,     0,     0,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,    86,    87,    88,    89,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,   103,   104,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   589,   590,
     181,     0,   182,   183,   184,   591,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,   364,   365,   366,   367,   604,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   605,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   608,   609,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   611,   466,   467,   468,
     469,     0,   470,   612,   472,   473,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   723,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
     575,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,    86,    87,    88,    89,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,   103,   104,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   589,   590,   181,
       0,   182,   183,   184,   591,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
     364,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   605,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   608,   609,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   611,   466,   467,   468,   469,
       0,   470,   612,   472,   473,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5113,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,   178,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5631,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   578,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     588,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     601,   347,   348,   349,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   605,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5641,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,   574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,   575,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,   591,   186,   187,   188,   592,   190,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,     0,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,   609,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   611,   466,   467,   468,   469,     0,   470,   612,
     472,   473,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   574,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,  6002,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,   575,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,   577,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,   587,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     591,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   609,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   611,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,   574,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,   575,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,   591,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,   609,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     611,   466,   467,   468,   469,     0,   470,   612,   472,   473,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,   574,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,   575,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,   591,   186,
     187,   188,   592,   190,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   730,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,     0,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,   609,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   611,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,   574,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,   575,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,   577,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
     580,    98,   581,   100,   101,   102,   103,   104,   582,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     812,   116,   583,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   584,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,   586,   150,   151,   152,
     153,   587,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,   590,   181,     0,   182,   183,   184,   591,   186,   187,
     188,   592,   190,   191,   593,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   596,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   597,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,   598,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   599,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   601,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   603,
     361,   362,   363,   364,   365,   366,   367,   604,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     605,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   608,
     609,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   611,   466,
     467,   468,   469,     0,   470,   612,   472,   473,  1954,  1955,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    13,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    22,     0,     0,     0,     0,     0,
       0,     0,     0,   574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    34,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
      53,    54,   575,    55,    56,    57,    58,    59,    60,    61,
       0,     0,     0,     0,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,    86,    87,    88,
      89,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,   103,   104,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,   179,   589,
     590,   181,     0,   182,   183,   184,   591,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,   217,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,   291,   292,   293,   294,
       0,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,   364,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   605,
     382,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   608,   609,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   611,   466,   467,
     468,   469,     0,   470,   612,   472,   473,     4,     5,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    19,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,     0,     0,     0,     0,     0,     0,
       0,     0,   574,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    29,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    31,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    34,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    52,    53,
      54,   575,    55,    56,    57,    58,    59,    60,    61,     0,
       0,     0,     0,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    74,    75,    76,    77,    78,    79,
      80,    81,   576,     0,   577,   578,    86,    87,    88,    89,
      90,    91,   579,    93,    94,    95,    96,    97,   580,    98,
     581,   100,   101,   102,   103,   104,   582,   105,   106,   107,
     108,   109,   110,   111,   112,   113,     0,   114,   115,   116,
     583,   118,   119,   120,   121,   122,   123,   124,   125,   126,
     584,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   585,   141,     0,   142,   143,   144,
     145,   146,   147,   148,   586,   150,   151,   152,   153,   587,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   588,   168,     0,     0,   169,   170,   171,
     172,   173,   174,   175,   176,   177,   178,   179,   589,   590,
     181,     0,   182,   183,   184,   591,   186,   187,   188,   592,
     190,   191,   593,   193,   194,   594,     0,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     595,   210,   211,   212,   213,   214,   215,   216,   217,   218,
     596,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,     0,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     597,   287,   288,   289,   290,   291,   292,   293,   294,     0,
     295,   296,   297,   298,   598,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   599,   316,   600,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   601,   347,   348,   349,   602,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   603,   361,   362,
     363,   364,   365,   366,   367,  2319,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   605,   382,
     383,   384,   385,   386,   387,   388,   389,   390,   391,   392,
     393,   394,     0,     0,   395,   396,     0,   397,   398,   399,
     400,   606,   402,   403,   607,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   608,   609,   438,
     439,   440,   441,   442,   443,   444,   610,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   611,   466,   467,   468,
     469,     0,   470,   612,   472,   473,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   574,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2979,    53,    54,
     575,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,   577,   578,    86,    87,    88,    89,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,   103,   104,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
     137,   138,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,   587,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,   179,   589,   590,   181,
       0,   182,   183,   184,   591,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,   217,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,   291,   292,   293,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
     364,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   605,   382,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   608,   609,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   611,   466,   467,   468,   469,
       0,   470,   612,   472,   473,     4,     5,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    19,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    22,     0,     0,     0,     0,     0,     0,     0,     0,
     574,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    29,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    31,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    34,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    52,    53,    54,   575,
      55,    56,    57,    58,    59,    60,    61,     0,     0,     0,
       0,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    74,    75,    76,    77,    78,    79,    80,    81,
     576,     0,   577,   578,    86,    87,    88,    89,    90,    91,
     579,    93,    94,    95,    96,    97,   580,    98,   581,   100,
     101,   102,   103,   104,   582,   105,   106,   107,   108,   109,
     110,   111,   112,   113,     0,   114,   115,   116,   583,   118,
     119,   120,   121,   122,   123,   124,   125,   126,   584,   127,
     128,   129,   130,   131,   132,   133,   134,   135,   136,   137,
     138,   139,   585,   141,     0,   142,   143,   144,   145,   146,
     147,   148,   586,   150,   151,   152,   153,   587,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   588,   168,     0,     0,   169,   170,   171,   172,   173,
     174,   175,   176,   177,  3740,   179,   589,   590,   181,     0,
     182,   183,   184,   591,   186,   187,   188,   592,   190,   191,
     593,   193,   194,   594,     0,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   595,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   596,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,     0,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,  3741,   281,   282,   283,   284,   285,   286,   597,   287,
     288,   289,   290,   291,   292,   293,   294,     0,   295,   296,
     297,   298,   598,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     599,   316,   600,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   601,   347,   348,   349,   602,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   603,   361,   362,   363,   364,
     365,   366,   367,   604,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   605,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
       0,     0,   395,   396,     0,   397,   398,   399,   400,   606,
     402,   403,   607,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   608,   609,   438,   439,   440,
     441,   442,   443,   444,   610,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   611,   466,   467,   468,   469,     0,
     470,   612,   472,   473,     4,     5,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    13,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    19,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      22,     0,     0,     0,     0,     0,     0,     0,     0,   574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5959,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    31,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    34,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    52,    53,    54,   575,    55,
      56,    57,    58,    59,    60,    61,     0,     0,     0,     0,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    74,    75,    76,    77,    78,    79,    80,    81,   576,
       0,   577,   578,    86,    87,    88,    89,    90,    91,   579,
      93,    94,    95,    96,    97,   580,    98,   581,   100,   101,
     102,   103,   104,   582,   105,   106,   107,   108,   109,   110,
     111,   112,   113,     0,   114,   115,   116,   583,   118,   119,
     120,   121,   122,   123,   124,   125,   126,   584,   127,   128,
     129,   130,   131,   132,   133,   134,   135,   136,   137,   138,
     139,   585,   141,     0,   142,   143,   144,   145,   146,   147,
     148,   586,   150,   151,   152,   153,   587,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     588,   168,     0,     0,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   589,   590,   181,     0,   182,
     183,   184,   591,   186,   187,   188,   592,   190,   191,   593,
     193,   194,   594,     0,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   595,   210,   211,
     212,   213,   214,   215,   216,   217,   218,   596,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,     0,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   597,   287,   288,
     289,   290,   291,   292,   293,   294,     0,   295,   296,   297,
     298,   598,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   599,
     316,   600,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     601,   347,   348,   349,   602,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   603,   361,   362,   363,   364,   365,
     366,   367,   604,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   605,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,     0,
       0,   395,   396,     0,   397,   398,   399,   400,   606,   402,
     403,   607,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   608,   609,   438,   439,   440,   441,
     442,   443,   444,   610,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   611,   466,   467,   468,   469,     0,   470,
     612,   472,   473,     4,     5,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   723,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    13,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3624,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    22,
       0,     0,     0,     0,     0,     0,     0,     0,  3625,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    31,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    34,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    52,    53,    54,  3626,    55,    56,
      57,    58,    59,    60,    61,     0,     0,     0,     0,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      74,    75,    76,    77,    78,    79,    80,    81,   576,     0,
     577,   578,    86,    87,    88,    89,    90,    91,   579,    93,
      94,    95,    96,    97,   580,    98,   581,   100,   101,   102,
     103,   104,   582,   105,   106,   107,   108,   109,   110,   111,
     112,   113,     0,   114,   115,   116,   583,   118,   119,   120,
     121,   122,   123,   124,   125,   126,   584,   127,   128,   129,
     130,   131,   132,   133,   134,   135,   136,   137,   138,   139,
     585,   141,     0,   142,   143,   144,   145,   146,   147,   148,
     586,   150,   151,   152,   153,   587,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   588,
     168,     0,     0,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   589,   590,   181,     0,   182,   183,
     184,  3627,   186,   187,   188,   592,     0,   191,   593,   193,
     194,   594,     0,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   595,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   596,   219,   220,   221,
     222,   223,   224,   225,     0,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
       0,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   597,   287,   288,   289,
     290,   291,   292,   293,   294,  3628,   295,   296,   297,   298,
     598,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   599,   316,
     600,   318,   319,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   601,
     347,   348,   349,   602,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   603,   361,   362,   363,   364,   365,   366,
     367,   604,   369,   370,   371,   372,   373,   374,   375,     0,
     377,   378,   379,   380,   605,   382,   383,   384,   385,   386,
     387,   388,   389,   390,   391,   392,   393,   394,     0,     0,
     395,   396,     0,   397,   398,   399,   400,   606,   402,   403,
     607,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   608,     0,   438,   439,   440,   441,   442,
     443,   444,   610,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,  3629,   466,   467,   468,   469,     0,   470,   612,
     472,   473,     4,     5,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   860,
       0,    13,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    22,     0,
       0,     0,     0,     0,     0,     0,     0,   861,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    31,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    34,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    52,    53,    54,     0,    55,    56,    57,
      58,    59,    60,    61,     0,     0,     0,     0,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,   576,     0,     0,
     578,    86,    87,    88,    89,    90,    91,   579,    93,    94,
      95,    96,    97,   580,    98,   581,   100,   101,   102,   103,
     104,   582,   105,   106,   107,   108,   109,   110,   111,   112,
     113,     0,   114,   115,   116,   583,   118,   119,   120,   121,
     122,   123,   124,   125,   126,   584,   127,   128,   129,   130,
     131,   132,   133,   134,   135,   136,   137,   138,   139,   585,
     141,     0,   142,   143,   144,   145,   146,   147,   148,   586,
     150,   151,   152,   153,     0,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   588,   168,
       0,     0,   169,   170,   171,   172,   173,   174,   175,   176,
     177,   178,   179,   589,   590,   181,     0,   182,   183,   184,
     185,   186,   187,   188,   592,   190,   191,   593,   193,   194,
     594,     0,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   595,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   596,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,     0,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   597,   287,   288,   289,   290,
     291,   292,   293,   294,     0,   295,   296,   297,   298,   598,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   599,   316,   600,
     318,   319,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   601,   347,
     348,   349,   602,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   603,   361,   362,   363,   364,   365,   366,   367,
     604,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   605,   382,   383,   384,   385,   386,   387,
     388,   389,   390,   391,   392,   393,   394,     0,     0,   395,
     396,     0,   397,   398,   399,   400,   606,   402,   403,   607,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   608,   864,   438,   439,   440,   441,   442,   443,
     444,   610,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   865,   466,   467,   468,   469,     0,   470,   612,   472,
     473,     4,     5,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      13,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    19,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    22,     0,     0,
       0,     0,     0,     0,     0,     0,  3394,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    29,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    34,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    52,    53,    54,  3395,    55,    56,    57,    58,
      59,    60,    61,     0,     0,     0,     0,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,   576,     0,   577,   578,
      86,    87,    88,    89,    90,    91,   579,    93,    94,    95,
      96,    97,   580,    98,   581,   100,   101,   102,   103,   104,
     582,   105,   106,   107,   108,   109,   110,   111,   112,   113,
       0,   114,   115,   116,   583,   118,   119,   120,   121,   122,
     123,   124,   125,   126,   584,   127,   128,   129,   130,   131,
     132,   133,   134,   135,   136,   137,   138,   139,   585,   141,
       0,   142,   143,   144,   145,   146,   147,   148,   586,   150,
     151,   152,   153,   587,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   588,   168,     0,
       0,   169,   170,   171,   172,   173,   174,   175,   176,   177,
     178,   179,   589,   590,   181,     0,   182,   183,   184,  3396,
     186,   187,   188,   592,   190,   191,   593,   193,   194,   594,
       0,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   595,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   596,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,     0,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   597,   287,   288,   289,   290,   291,
     292,   293,   294,     0,   295,   296,   297,   298,   598,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   599,   316,   600,   318,
     319,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   601,   347,   348,
     349,   602,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   603,   361,   362,   363,   364,   365,   366,   367,   604,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   605,   382,   383,   384,   385,   386,   387,   388,
     389,   390,   391,   392,   393,   394,     0,     0,   395,   396,
       0,   397,   398,   399,   400,   606,   402,   403,   607,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   608,     0,   438,   439,   440,   441,   442,   443,   444,
     610,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
       0,   466,   467,   468,   469,     0,   470,   612,   472,   473,
       4,     5,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   723,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    19,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    22,     0,     0,     0,
       0,     0,     0,     0,     0,  3625,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    31,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      34,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    52,    53,    54,  3626,    55,    56,    57,    58,    59,
      60,    61,     0,     0,     0,     0,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    74,    75,    76,
      77,    78,    79,    80,    81,   576,     0,   577,   578,    86,
      87,    88,    89,    90,    91,   579,    93,    94,    95,    96,
      97,   580,    98,   581,   100,   101,   102,   103,   104,   582,
     105,   106,   107,   108,   109,   110,   111,   112,   113,     0,
     114,   115,   116,   583,   118,   119,   120,   121,   122,   123,
     124,   125,   126,   584,   127,   128,   129,   130,   131,   132,
     133,   134,   135,   136,   137,   138,   139,   585,   141,     0,
     142,   143,   144,   145,   146,   147,   148,   586,   150,   151,
     152,   153,   587,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   588,   168,     0,     0,
     169,   170,   171,   172,   173,   174,   175,   176,   177,   178,
     179,   589,   590,   181,     0,   182,   183,   184,  3627,   186,
     187,   188,   592,     0,   191,   593,   193,   194,   594,     0,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   595,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   596,   219,   220,   221,   222,   223,   224,
     225,     0,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,     0,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   597,   287,   288,   289,   290,   291,   292,
     293,   294,  3628,   295,   296,   297,   298,   598,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   599,   316,   600,   318,   319,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   601,   347,   348,   349,
     602,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     603,   361,   362,   363,   364,   365,   366,   367,   604,   369,
     370,   371,   372,   373,   374,   375,     0,   377,   378,   379,
     380,   605,   382,   383,   384,   385,   386,   387,   388,   389,
     390,   391,   392,   393,   394,     0,     0,   395,   396,     0,
     397,   398,   399,   400,   606,   402,   403,   607,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     608,     0,   438,   439,   440,   441,   442,   443,   444,   610,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,  3629,
     466,   467,   468,   469,     0,   470,   612,   472,   473,     4,
       5,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,     0,    55,    56,    57,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    74,    75,    76,    77,
      78,    79,    80,    81,   576,     0,     0,   578,    86,    87,
      88,    89,    90,    91,   579,    93,    94,    95,    96,    97,
       0,    98,   581,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   108,   109,   110,   111,   112,   113,     0,   114,
     115,   116,     0,   118,   119,   120,   121,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,   585,   141,     0,   142,
     143,   144,   145,   146,   147,   148,     0,   150,   151,   152,
     153,     0,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   588,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
     589,     0,   181,     0,   182,   183,   184,   185,   186,   187,
     188,   592,   190,   191,     0,   193,   194,   594,     0,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   595,   210,   211,   212,   213,   214,   215,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,     0,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,     0,   316,   600,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,     0,   347,   348,   349,   602,
     351,   352,   353,   354,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,   365,   366,   367,     0,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
       0,   382,   383,   384,   385,   386,   387,   388,   389,   390,
     391,   392,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,   606,   402,   403,   607,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,     4,
       5,   438,   439,   440,   441,   442,   443,   444,   610,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,     0,   470,   612,   472,   473,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,  1911,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1932,     0,     0,     0,     0,     0,     0,
      52,    53,    54,  1912,    55,    56,     0,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,     0,    74,    75,    76,    77,
      78,    79,    80,    81,     0,     0,     0,     0,    86,    87,
      88,    89,    90,     0,     0,    93,    94,    95,    96,    97,
       0,     0,     0,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   108,     0,     0,     0,     0,     0,     0,   114,
       0,   116,     0,   118,   119,  1913,   121,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   141,     0,   142,
     143,   144,   145,   146,   147,   148,     0,   150,   151,   152,
     153,     0,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,     0,     0,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
       0,     0,     0,     0,     0,   183,   184,  1914,   186,   187,
     188,     0,   190,   191,     0,   193,   194,     0,     0,   196,
       0,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,     0,   210,   211,   212,   213,   214,   215,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,     0,     0,     0,   301,
       0,   303,   304,     0,   306,   307,   308,   309,     0,   311,
     312,   313,   314,     0,     0,     0,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,     0,   345,     0,   347,   348,   349,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,   365,   366,   367,     0,   369,   370,
     371,     0,   373,   374,   375,   376,   377,     0,   379,   380,
       0,     0,   383,   384,     0,     0,   387,   388,   389,     0,
     391,     0,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,     0,   402,   403,     0,   405,     0,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,     4,
       5,   438,     0,   440,   441,   442,   443,     0,     0,   446,
     447,     0,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,     0,     0,
     467,   468,     0,     0,   470,     0,   472,   473,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    19,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    22,     0,     0,     0,     0,
       0,     0,     0,     0,  1911,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    29,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    34,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      52,    53,    54,  1912,    55,    56,     0,    58,    59,    60,
      61,     0,     0,     0,     0,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,     0,    74,    75,    76,    77,
      78,    79,    80,    81,     0,     0,     0,     0,    86,    87,
      88,    89,    90,     0,     0,    93,    94,    95,    96,    97,
       0,     0,     0,   100,   101,   102,   103,   104,     0,   105,
     106,   107,   108,     0,     0,     0,     0,     0,     0,   114,
       0,   116,     0,   118,   119,  1913,   121,   122,   123,   124,
     125,   126,     0,   127,   128,   129,   130,   131,   132,   133,
     134,   135,   136,   137,   138,   139,     0,   141,     0,   142,
     143,   144,   145,   146,   147,   148,     0,   150,   151,   152,
     153,     0,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,     0,     0,     0,   168,     0,     0,   169,
     170,   171,   172,   173,   174,   175,   176,   177,   178,   179,
       0,     0,     0,     0,     0,   183,   184,  1914,   186,   187,
     188,     0,   190,   191,     0,   193,   194,     0,     0,   196,
       0,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,     0,   210,   211,   212,   213,   214,   215,   216,
     217,   218,     0,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,     0,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,     0,   287,   288,   289,   290,   291,   292,   293,
     294,     0,   295,   296,   297,   298,     0,     0,     0,   301,
       0,   303,   304,     0,   306,   307,   308,   309,     0,   311,
     312,   313,   314,     0,     0,     0,     0,   318,   319,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,     0,   345,     0,   347,   348,   349,     0,
     351,   352,     0,   354,   355,   356,   357,   358,   359,     0,
     361,   362,   363,   364,   365,   366,   367,     0,   369,   370,
     371,     0,   373,   374,   375,   376,   377,     0,   379,   380,
       0,     0,   383,   384,     0,     0,   387,   388,   389,     0,
     391,     0,   393,   394,     0,     0,   395,   396,     0,   397,
     398,   399,   400,     0,   402,   403,     0,   405,     0,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     428,   429,   430,   431,   432,   433,   434,   435,   436,     0,
       0,   438,     0,   440,   441,   442,   443,     0,     0,   446,
     447,     0,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,     4,     5,
     467,   468,     0,     0,   470,     0,   472,   473,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1514,  1515,  1516,  1517,  1518,  1519,
    1520,  1521,  1522,  1523,  1524,     0,  4061,  1527,  1528,  1529,
       0,     0,  1532,  1533,  1534,  1535,  1536,  1537,  1538,  1539,
    4062,  1541,  1542,     0,  1543,  1544,  1545,  1546,  1547,  1548,
    1549,  1550,  1551,  1552,  1553,     0,  1554,    13,  1555,  1556,
    1557,  1558,  1559,  1560,  1561,  4063,  1563,  1564,  1565,  1566,
    1567,  1568,  1569,  1570,  1571,  1572,  1573,  1574,  4064,  1576,
    1577,  1578,  1579,  1580,  1581,    19,  1582,  1583,  1584,  1585,
    1586,  1587,  1588,  1589,  4065,  1591,     0,  1592,  1593,  1594,
    1595,  1596,     0,     0,    22,  1597,  1598,  1599,  1600,  1601,
    1602,  1603,  1604,  3968,  1606,  1607,  1608,     0,  1609,  1610,
       0,  1611,  4066,  1613,  4067,  1615,  1616,  1617,  1618,  1619,
    1620,  1621,  1622,  1623,  1624,  1625,  1626,  1627,  1628,  1629,
    1630,     0,  1631,  1632,     0,     0,     0,  1636,  1637,  1638,
    1639,  1640,  1641,  1642,     0,     0,     0,  1646,  1647,  1648,
    1649,  1650,  1651,  1652,  1653,    29,  1654,  1655,  1656,  1657,
    1658,  1659,     0,  1661,  1662,  1663,  1664,    31,  1665,  1666,
    1667,  1668,     0,  1669,  1670,  1671,  1672,  1673,    34,  1674,
    1675,  1676,  1677,  1678,  1679,  1680,  1681,  1682,  1683,  1684,
    1685,  1686,  1687,  1688,     0,  1690,  1691,  1692,  1693,  1694,
    1695,  1696,  1697,  1698,  1699,  1700,  1701,  1702,  1703,  1704,
    1705,  1706,  1707,  1708,  1709,  1710,  1711,  1712,     0,  1714,
    1715,     0,  1717,  1718,  1719,  1720,  1721,  1722,  1723,  1724,
    1725,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,     0,
    1734,  1735,  1736,  1737,     0,     0,     0,  1741,  1742,  1743,
    1744,  1745,  1746,  1747,  1748,  4068,  1749,  1750,  1751,  1752,
    1753,  1754,  1755,  1756,  1757,  1758,     0,  4069,  1761,  1762,
    1763,  1764,  1765,  1766,  1767,  1768,  1769,  1770,  1771,    52,
      53,    54,     0,    55,    56,    57,    58,    59,    60,    61,
       0,  1772,  1773,  1774,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    74,    75,    76,    77,    78,
      79,    80,    81,   576,     0,   577,   578,     0,    87,     0,
       0,    90,    91,   579,    93,    94,    95,    96,    97,   580,
      98,   581,   100,   101,   102,     0,     0,   582,   105,   106,
     107,   108,   109,   110,   111,   112,   113,     0,   114,   115,
     116,   583,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   584,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,  4070,  4071,   139,   585,   141,     0,   142,   143,
     144,   145,   146,   147,   148,   586,   150,   151,   152,   153,
     587,   154,   155,   156,     0,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   588,   168,     0,     0,   169,   170,
     171,   172,   173,   174,   175,   176,   177,   178,     0,   589,
     590,   181,     0,   182,   183,   184,     0,   186,   187,   188,
     592,   190,   191,   593,   193,   194,   594,     0,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   595,   210,   211,   212,   213,   214,   215,   216,     0,
     218,   596,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,     0,   252,   253,   254,   255,
     256,   257,   258,     0,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,     0,  4072,   279,   280,   281,   282,   283,   284,   285,
     286,   597,   287,   288,   289,   290,     0,     0,     0,   294,
    1788,   295,   296,   297,   298,   598,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   599,   316,   600,   318,   319,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,     0,     0,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   601,   347,   348,   349,   602,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   603,   361,
     362,   363,     0,   365,   366,   367,   604,   369,   370,   371,
     372,   373,   374,     0,   376,   377,   378,   379,   380,   605,
    4073,   383,   384,   385,   386,   387,   388,   389,   390,   391,
     392,   393,   394,     0,     0,   395,   396,     0,   397,   398,
     399,   400,   606,   402,   403,   607,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,     0,   426,   427,     0,
     429,   430,  4074,   432,   433,   434,   435,   436,   608,     0,
     438,   439,   440,   441,   442,   443,   444,   610,   446,   447,
     448,   449,   450,   451,   452,     0,  4075,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,     0,   466,   467,
     468,   469,     0,   470,   612,   472,     4,     5,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    13,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    22,     0,     0,     0,     0,     0,     0,     0,
       0,   861,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    31,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    34,     0,     0,     0,
       0,     0,     0,     0,  5217,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    52,    53,    54,
       0,    55,    56,    57,    58,    59,    60,    61,     0,     0,
       0,     0,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    74,    75,    76,    77,    78,    79,    80,
      81,   576,     0,     0,   578,     0,    87,     0,     0,    90,
      91,   579,    93,    94,    95,    96,    97,   580,    98,   581,
     100,   101,   102,     0,     0,   582,   105,   106,   107,   108,
     109,   110,   111,   112,   113,     0,   114,   115,   116,   583,
     118,   119,   120,   121,   122,   123,   124,   125,   126,   584,
     127,   128,   129,   130,   131,   132,   133,   134,   135,   136,
       0,     0,   139,   585,   141,     0,   142,   143,   144,   145,
     146,   147,   148,   586,   150,   151,   152,   153,     0,   154,
     155,   156,     0,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   588,   168,     0,     0,   169,   170,   171,   172,
     173,   174,   175,   176,   177,   178,     0,   589,   590,   181,
       0,   182,   183,   184,  5218,   186,   187,   188,   592,   190,
     191,   593,   193,   194,   594,     0,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   595,
     210,   211,   212,   213,   214,   215,   216,     0,   218,   596,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,     0,   252,   253,   254,   255,   256,   257,
     258,     0,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,     0,
       0,   279,   280,   281,   282,   283,   284,   285,   286,   597,
     287,   288,   289,   290,     0,     0,     0,   294,     0,   295,
     296,   297,   298,   598,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   599,   316,   600,   318,   319,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,     0,     0,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   601,   347,   348,   349,   602,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   603,   361,   362,   363,
       0,   365,   366,   367,   604,   369,   370,   371,   372,   373,
     374,     0,   376,   377,   378,   379,   380,   605,     0,   383,
     384,   385,   386,   387,   388,   389,   390,   391,   392,   393,
     394,     0,     0,   395,   396,     0,   397,   398,   399,   400,
     606,   402,   403,   607,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,     0,   426,   427,     0,   429,   430,
       0,   432,   433,   434,   435,   436,   608,     0,   438,   439,
     440,   441,   442,   443,   444,   610,   446,   447,   448,   449,
     450,   451,   452,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,  1795,   466,   467,   468,   469,
       0,   470,   612,   472
};

static const yytype_int16 yycheck[] =
{
       3,     0,   474,    84,   976,     8,     0,   701,     0,    84,
     635,  2280,    30,   866,   701,   702,   643,  1458,  2137,  1980,
    2124,   818,  2450,   668,     0,   790,   818,  2670,  2567,   633,
     795,     0,   797,    36,   866,     0,    41,    40,     0,  2332,
       0,   649,    45,     0,  1006,    48,     0,   651,     0,  1426,
    1287,   655,  1429,   657,  1423,   659,   660,   729,   662,   663,
     664,     0,  2629,  3031,   632,  2026,   785,  1634,     0,  2554,
    1986,  1229,  1590,  1231,  1232,  1995,  3039,   669,  1531,  3189,
    3052,  1239,  2306,  2520,  1429,  2583,  3768,  2417,  2556,  2073,
    2469,   695,  1054,   701,   669,  2017,    85,   746,     0,  2331,
     749,   669,  3196,  2056,  3198,  3199,  1054,   699,  1193,  1562,
     696,  3934,  1812,   649,  1889,  2988,  3849,  1022,  1469,  2556,
    1398,  1417,  2075,   769,   699,   771,  4350,  4017,  1354,   775,
     776,   699,  2671,   887,  4430,     0,  1469,  1590,  4430,  3839,
     627,  1530,  1660,   630,  2095,  2195,  2196,   751,   752,   856,
    3814,  2253,  2103,  2104,   722,  2106,  2107,  3943,  4334,  3430,
    3431,  4321,   180,  3687,   167,   701,  3050,  2137,   736,  1131,
    4807,  3828,   866,  4330,  3119,  2658,  4054,  3238,  2440,  4484,
    3277,  2202,  1266,  4827,     0,  3451,  3850,  3950,  2110,  2111,
    2112,  2113,  2114,  2115,  2116,  2117,  2118,  2119,  2120,  2121,
    2122,  2222,  3737,  1289,  1288,  5203,   645,  1660,  3813,  3148,
    3149,  2521,  4319,  4074,  4070,   860,  3149,  4928,  4074,   864,
    1125,  1126,  1127,  1195,  2947,  2246,  2247,  3158,  3905,  4298,
    4430,     6,     7,  1138,  1635,    38,  5471,  2960,  1634,  1635,
      12,   643,   643,   643,  1645,    15,  4885,   643,  2381,  1645,
      15,   643,    15,  2303,     6,     7,    47,    26,   866,    15,
       6,     7,     6,     7,  1782,    15,   834,   127,  1786,   708,
      53,  1497,  1234,  5435,    47,    42,  1633,  4885,   886,     6,
       7,  1799,   127,    67,  2663,    80,  1643,  4885,    42,     6,
       7,    65,    15,   796,    89,   207,    99,  4318,  4319,   183,
    3597,    15,   797,   907,   908,    71,    63,    15,    47,     6,
       7,    65,     6,     7,   317,    15,  4721,  3897,    16,    17,
    3359,   204,    50,  5234,   204,    42,   243,    31,   346,  1782,
     866,    15,    15,  1786,    26,   903,   204,   781,    15,  1740,
     179,    15,  4937,    15,  1740,    15,  1799,    99,   123,  2573,
     886,  3080,    31,    11,    12,    33,    53,    42,   204,  4886,
     127,  4888,   204,    41,  4891,   368,   204,   530,   204,   245,
    1759,    31,    50,   156,    31,   300,    31,  1778,  4905,  2672,
      42,  1738,  1778,   311,    57,    31,  1775,   158,   269,   833,
    1779,    31,  3784,   168,   233,  4201,  4202,  3921,  4757,   143,
    1789,    42,  1791,  1792,  1793,  1794,   845,  1796,  2512,  4430,
    3349,   255,   899,   316,   901,    33,  3349,  4815,  1807,  1808,
    1809,  1810,  1811,    41,    31,    42,  1783,   143,   253,   123,
      33,    26,    50,     6,     7,    42,   360,    33,    41,  1966,
    1967,  3539,    42,    14,  5472,    41,  5492,    50,  1975,    24,
      25,    26,   284,    28,    50,    30,   174,    32,    42,  3872,
    4839,   245,   306,    42,  1426,   110,   316,  1429,    26,    42,
      42,  1840,    43,    44,   168,   253,    26,  3200,  3201,  2006,
     282,  2008,   474,   255,   391,    47,    26,    26,   198,    42,
      53,    31,    33,  2610,    71,   394,  2023,  2024,  2025,   268,
      41,  4509,    33,  2030,  2031,   252,  5741,   437,  3392,    50,
      41,  2038,    24,    25,    26,  6116,    28,    26,    30,    50,
      32,    26,    26,   375,  3618,  3619,   233,   530,   253,   116,
      26,   209,    26,   380,   306,  5229,   107,  1890,    98,   314,
     431,   980,   316,    54,   316,    42,    31,   541,   179,   541,
      33,   362,    50,    72,   300,    24,    25,    26,    41,    28,
    4919,    30,    57,    32,    42,   114,   179,    50,   439,    14,
    4793,    42,   541,   514,   649,  2350,    71,   295,    73,   345,
      71,  6122,    14,   122,   119,    53,    42,   462,   332,  3687,
      99,   209,   143,   156,    99,    99,   576,   255,    43,    44,
    4423,   259,    33,    99,   370,    99,   209,   126,  1315,  3703,
      41,    43,    44,   209,   127,   128,   557,   152,    33,    50,
     314,   653,   193,   626,   627,   198,    41,   630,    10,   632,
    2923,   532,    96,   282,  1283,    50,  1285,  5232,   390,   317,
     122,    67,    47,   169,   643,   373,    10,    53,   306,   643,
      51,   643,  1220,   356,  4331,    42,  1128,   646,   316,    33,
    4184,  1229,   107,   233,  1232,   476,   669,    41,   209,  1237,
      51,  4895,  6417,   649,   643,   107,    50,   425,   209,  1398,
     532,   209,   300,   631,   316,    33,    14,   730,  1485,   694,
     693,   155,   668,    41,     3,  1460,   699,   128,  4554,   317,
    1268,   657,    50,   104,   230,  4491,   151,   226,    57,   300,
     649,   714,    99,  4913,   317,    43,    44,   649,  6463,   722,
     202,   317,    31,   104,    73,   701,   209,   145,   431,   668,
     605,  1377,   735,   736,  1380,   145,   668,   316,  1384,  1385,
    1386,   701,   690,  1389,  1390,   127,   316,   649,   193,   738,
      14,  6352,   291,   796,   695,   316,   788,   746,   293,   658,
     749,   193,   701,  3032,   313,   768,   668,  1852,   395,   701,
     498,   235,  4793,   179,   754,   294,   317,   141,   209,   107,
     143,   332,   785,   396,   649,  5212,   317,   418,  3020,   496,
     288,  5218,   716,   370,   209,  2148,   356,   545,  1883,   802,
     510,  1508,   693,   668,   796,  6406,   581,   810,   811,   291,
     300,   300,  6115,  2930,  2931,   818,   179,   308,  6359,   245,
     382,   826,   674,  3921,   695,   755,   733,   233,   339,  1456,
    5228,   834,   300,   649,   317,   209,   701,  3319,  3320,   642,
     843,  3326,  3327,   107,   647,   656,  4426,  3177,   695,   436,
     345,  1419,   668,   856,   812,   282,  3795,   760,    99,   532,
     788,   209,  3795,  5774,   667,   193,   791,  4673,   363,   585,
     751,   796,   643,  3804,   791,   370,  3605,  3808,   681,   791,
    5574,  5792,  1486,  5929,   860,   701,   317,   581,   864,   382,
     866,   894,  4913,   896,  2335,  4192,   899,   902,   901,   904,
     903,   704,   317,   906,   788,   730,   653,  4320,   791,   711,
     886,   791,   153,  2864,  2865,   791,  2867,  2868,   597,  2839,
    2840,   860,  3350,   791,   763,   864,  1398,   866,   860,   193,
    1892,   791,   864,  3226,  3657,   674,  4328,   510,   695,  3163,
     597,   791,   582,   317,   788,   791,   791,   886,  3821,   791,
    1453,  1395,   730,   791,   886,   791,   751,   597,   860,   791,
     963,  3080,   864,   966,   866,  1460,  4974,  6129,  4007,   317,
     973,   737,   975,   691,   702,  6210,   750,  6212,  5201,  5384,
     979,  5340,   136,   509,   886,   979,   989,   979,   964,   965,
    5585,   967,   968,   969,  2152,   860,   481,   788,   974,   864,
    3021,   646,   412,   979,   771,   730,  1493,   791,   777,  2167,
     979,  5650,   795,   662,   979,   788,   788,   771,   788,   979,
     795,   886,  1984,  3156,  3157,   964,   965,  2404,   967,   968,
     969,   796,   788,   796,  4002,   974,  1984,  3269,  2000,  2001,
     979,  5337,  5650,   795,   860,  5337,   796,   979,   864,   795,
     866,   795,  5650,  2001,  1456,  1456,  1456,  1962,  1963,  2404,
    1456,  2146,   964,   965,  1456,   967,   968,   969,   795,  5780,
     886,   788,   974,   796,   771,  3368,  5145,   979,   795,   796,
    6315,  6316,   796,  4177,   788,   777,  4184,  2528,   796,  2440,
    1253,  6326,  1889,   791,  2535,  2373,   796,  5204,   795,   964,
     965,   795,   967,   968,   969,  4710,  2384,  2440,  2193,   974,
    3080,   796,   796,   796,   979,  2199,   794,  2201,  2519,   796,
    2204,  5480,   796,  2519,   796,  5652,   796,  1130,   788,  1128,
     788,  1294,  2216,   788,   796,  2219,  1128,  5337,  3448,  2223,
    3450,  2498,   788,  2500,  4844,  2546,  1853,  4847,  2549,  4033,
    2546,  4828,  6387,  2549,   771,   796,  2513,  2558,  2244,   791,
    3642,   788,  2558,   979,   771,  2249,  2250,  2251,  2130,  6167,
    6168,   771,  5033,   791,  2531,  2137,  5037,  5033,   218,   796,
    5201,  5037,   777,  5204,   710,  6213,  2543,   771,   791,  2137,
    1193,  4848,   771,   789,   789,   791,   791,  4960,   789,   771,
     791,  3305,  2559,  4738,   775,   776,   777,   778,   779,   780,
     781,  5590,   796,  5592,   789,   788,  2178,  1220,   771,   777,
    2125,    14,   795,   796,   796,  2752,  1229,   777,  2755,  1232,
     791,   789,   795,   791,  1237,   699,  6539,   777,   777,   789,
     730,   791,   737,   796,  2771,  1952,   647,  4357,   789,  1330,
      43,    44,  3354,   407,   789,   618,  5615,   739,  5617,    33,
     791,  4371,  2488,  5622,  2791,  1268,   647,    41,   777,   674,
    5629,  5630,   777,   777,   771,  1850,    50,   789,   791,    53,
    5639,   777,  1850,   777,   711,    72,  5645,  4385,  4386,  4257,
     282,  4389,  4390,   771,  1283,   788,  1285,  4395,  4396,   796,
     771,  1973,   791,  1306,   320,  1308,   789,   796,   791,   198,
     452,  1314,  1315,  5762,   107,   771,  5337,   282,   796,   724,
     789,  4812,   143,   564,   751,   796,  4424,   183,  1331,   774,
     775,   776,   777,   778,   779,   780,   781,  1340,  4604,   123,
     796,  2499,   123,  2305,   776,   777,   778,   779,   780,   781,
    2147,  1354,  1355,    53,    81,  2147,   766,   763,   151,  5786,
     791,  5788,   240,   179,  5165,   771,   335,  1356,   233,   160,
     160,    33,  1375,  1378,  1379,   776,   791,   380,  2050,    41,
    4477,   380,    99,  4444,   168,  1953,  2105,   168,    50,   143,
     143,   645,    71,   282,    73,  1398,  1399,   282,  5555,  1398,
     193,  4340,  4341,   380,  4498,  4499,  1398,  4340,  4341,    40,
    5567,  5568,   255,  4344,  4345,   789,  1419,   791,   572,   316,
     147,    33,  5584,  2220,   397,   179,   207,    54,  2220,    41,
      67,   158,    99,    40,  1437,   209,   584,   495,    50,   166,
     127,   789,  2404,   791,  2406,   145,   774,   775,   776,   777,
     778,   779,   780,   781,   296,  1458,  1459,  1456,   584,  3728,
     160,  1453,  1456,   306,  1456,  6109,  5825,   194,   466,  1472,
    6107,    74,  5831,   316,   233,   170,   618,   319,   299,  1468,
    1483,   760,  1485,  1922,    40,  2179,  3605,  1456,  5793,  4212,
    1493,  1494,  2179,  1932,  1497,  3963,    74,  3965,   316,  3731,
     339,   417,    33,  4226,  3766,  1508,  1158,  4230,   236,   788,
      41,  5389,   776,   777,   778,   779,   780,   781,   532,    50,
    1323,   761,  1994,   250,  3756,   373,  3963,    40,  3965,  3908,
     475,  1334,    33,    33,  2253,   202,   695,  2183,  1190,  4021,
      41,    41,   796,   317,    31,    47,   299,   209,  2633,    50,
      50,   278,  5624,  2350,  3476,   233,  2124,   252,    76,    77,
    4042,  4044,  2154,   227,    33,   719,   197,    53,    33,    36,
      37,  2179,    41,   606,   408,   464,    41,   493,   365,  2154,
     638,    50,  4527,  4528,    33,    50,  2154,    33,   288,   748,
     197,  4685,    41,   633,   337,    41,   594,   209,  3373,   101,
     174,    50,   418,   617,    50,  5262,  6243,  2314,   245,   122,
     145,  5970,    28,   382,    30,   763,    32,  4711,  3569,   458,
    3571,   510,   259,  5785,  2192,   160,    42,   227,   597,  2254,
    5989,  3584,  3585,  3586,  3587,  3605,  4734,   763,  5488,  3600,
    5797,   197,   463,  2179,   617,   586,    74,  2296,   150,   791,
     498,  4535,  3568,  5177,  2373,   317,    74,   143,  3578,  3579,
     674,   288,   478,  5187,  5188,  2384,  2385,  4046,  2317,   212,
     662,  6120,  3594,   390,   672,    99,  3697,    81,   209,   695,
     167,   368,    33,  5484,   197,   476,   476,   584,   388,   202,
      41,   370,   695,  5393,   572,   551,   695,  2184,  2185,    50,
    2187,  2188,  2189,  2190,  2143,   317,  2352,  2353,   209,   209,
     463,    74,   576,  2200,  2676,  2361,  2362,  2363,   695,   711,
     323,  4014,   581,   510,  5215,   479,   784,  4998,  5428,    74,
      33,  2218,  2357,  2358,   508,   680,    40,   496,   572,   107,
     209,    33,    33,   147,   209,   323,   711,    50,   123,    41,
      41,   791,   127,   255,   158,  1830,  4850,  2444,    50,    50,
     209,  2646,   166,   209,  3115,   452,   584,   454,   342,   436,
    5946,   636,  2340,   259,  2349,  5847,  5938,   742,   291,    33,
    3017,  2349,  3115,  2351,  2942,  5945,   317,    41,  2750,  2751,
     194,  5953,   649,   168,  5580,   297,    50,   581,   663,   174,
     581,  2959,  2750,   467,   306,  2963,  3183,   438,  3185,  3186,
     452,   668,   555,   299,   316,  2569,   317,   317,   496,    74,
      33,   463,   711,  1826,  2392,   193,   711,   314,    41,   671,
     332,  1834,   207,  1836,  2919,  2920,    75,    50,  3183,   127,
    3185,  3186,   676,   612,  1847,   702,   250,  1850,   317,  1852,
    1853,  3202,   317,   388,   702,   796,   160,   544,   209,  3137,
    2945,    57,   413,   414,   618,  3143,   751,   467,   317,  3202,
    2832,   317,  2359,  2360,   278,    71,  3798,    73,  5645,  5900,
    1883,  2449,   438,  2845,   427,   101,  1889,  2594,  2595,  4983,
     754,  5415,  2478,   197,   637,   323,   127,  5958,  5008,  2544,
     316,  5928,  4996,  5753,  4006,   323,  2990,  5928,  5758,  5759,
    2994,  5932,  2996,   648,  4886,   233,   576,   209,   209,  4891,
      33,  1924,   226,    71,  4896,    73,  3010,   791,    41,   447,
     448,   618,   791,   367,   150,   572,  5636,    50,  6159,  3023,
    3024,  6162,   711,   595,  2512,   788,  5836,     0,  2642,  1952,
    1953,    99,  5062,  2521,   269,   209,    99,  5621,   727,  4009,
     323,  4684,   472,  4530,   452,   546,   317,  4690,  4691,   393,
    4398,   395,   127,  2935,    10,   463,   618,   463,   323,  4248,
     101,   774,   775,   776,   777,   778,   779,   780,   781,  2951,
     294,   458,  6134,   167,  1986,  1994,   209,  4969,   237,  4971,
     510,   458,  1994,   860,  3230,   429,  4545,   864,  6304,   866,
    2596,  6303,   730,    53,   317,  6055,  6056,   791,  2099,   127,
    6041,  2666,  4246,   178,    33,   317,   317,  6193,   294,   886,
     606,  6197,    41,  2472,  2642,   459,   503,    33,  5738,  5302,
     154,    50,  6266,  4373,  6268,    41,   503,   110,  2051,  6110,
    6111,  6078,  2055,   194,    50,   462,    33,  6078,  5825,  2062,
     378,   796,  2670,   317,    41,  5328,   174,   794,   323,  5919,
    2073,   771,  3044,    50,  6095,   390,   128,  3039,   796,  5177,
     368,   297,  2668,  4551,   174,   316,   390,   242,  4556,  5187,
    5188,  2085,    33,  2085,   754,  4563,   209,  3393,   565,   151,
      41,   743,    19,    20,   317,   141,  2642,   964,   965,    50,
     967,   968,   969,   227,  4551,   572,   156,   974,  3080,  4556,
      33,  2124,   461,  2126,   390,  6267,  4563,   789,    41,   791,
     618,   791,  3080,  6357,  2670,   716,   788,    50,   572,  2142,
     314,   608,    33,  2146,  2147,  6366,  2135,  2866,    33,   345,
      41,  2154,  2155,   734,  6194,   665,    41,  5909,  6198,    50,
     315,   304,   305,    33,   452,    50,   454,   363,   592,   720,
    2842,    41,   723,  2176,   370,    10,   297,  5877,   465,   791,
      50,  2184,  2185,  2186,  2187,  2188,  2189,  2190,  2191,  2192,
    2193,  2194,  5164,  5165,  5457,   499,   259,  2200,   605,   395,
     209,   796,   626,  2179,   317,   295,   581,  4158,  3093,  4160,
     497,   119,  2651,   209,  2217,  2218,  6382,  2220,  2657,  2179,
     361,  3183,   370,  3185,  3186,  3187,   739,   144,   576,    33,
    2669,    33,   209,   499,  2223,   141,  5845,    41,  2241,    41,
    2179,  5923,   390,  5925,   152,  2939,    50,  2179,    50,  5982,
    2253,     7,  4027,  4028,    33,   743,   544,   210,   789,    33,
     791,   128,    41,  6087,   407,   604,    33,    41,   209,   341,
    3242,    50,  2897,   417,    41,  6386,    50,  3362,   771,   458,
     197,    33,  5376,    50,   571,   771,   788,   154,   789,    41,
    3195,   791,   127,    33,   599,  3180,   209,   120,    50,    56,
    6052,    41,  6126,   791,   771,   772,   773,  2296,   317,  5301,
      50,  2314,  6423,  5423,  2179,   788,  2319,  5415,   209,    99,
     226,   317,   791,   796,   209,   673,   791,  3696,  2317,   148,
     618,  2939,   151,    47,  2926,   602,   479,  2340,  4254,   209,
     317,   771,   791,  5335,  2347,   791,  2349,  2350,  2351,   493,
    6050,  2926,  2355,  6393,  6394,   771,  2359,  2360,  2926,  6390,
     776,   777,  5460,  2179,  4064,   652,  6307,  5090,  5091,  5978,
    2373,  5244,   313,   326,  3743,  2943,   317,   131,   117,   118,
    6062,  2384,  2385,    33,  3091,   293,   565,   791,  2860,  2392,
     532,    41,   106,   698,   213,   467,   219,  3369,   155,   316,
      50,  6224,  6225,  2939,   317,   209,   754,   209,    14,   215,
     778,   779,   780,   781,   681,  3766,   602,    33,  3137,   346,
    3382,   227,   202,  3072,  3143,    41,   317,  3224,    33,   186,
     209,    51,   317,  3766,    50,   209,    41,    43,    44,  3158,
     791,    33,   209,   147,  4713,    50,  2449,   317,   753,    41,
    6391,  3037,  3970,   144,   158,  2458,  3833,   209,    50,   577,
     578,  2464,   166,  6494,  6495,  2468,  1323,   206,    47,   209,
     218,   271,    47,   390,  3632,   617,   282,  3164,  3046,   145,
    3126,  2439,   720,  3129,   104,  2488,   724,  2974,  3833,  3135,
    6431,  3649,  2979,  6175,   160,   681,  6178,  3655,  3656,   791,
     791,   107,  2989,   791,    47,   262,   197,  4935,  2995,  2512,
     141,  3079,  5484,   317,   441,   317,    33,  3970,  2521,  4849,
      47,   327,  6443,  3964,    41,  6466,  3804,   106,  3613,   286,
    3808,   106,   674,    50,   282,   230,   654,   791,   317,   308,
     288,   737,   311,   317,   283,  4063,   250,    33,   777,  2552,
     317,    47,  6493,  4981,    33,    41,  6477,   252,  3643,   209,
     789,   417,    41,   106,    50,   317,    47,   153,  2544,    33,
    5038,    50,    33,   373,   278,  2578,  3373,   317,   791,   106,
      41,  2584,   168,  5693,   501,   796,    50,   193,    55,    50,
    2593,  2594,  2595,   209,    47,  2670,  5094,   777,  3166,   136,
      53,  5038,    55,   771,   209,  2544,  2609,  2610,   777,   789,
    4063,   791,  2544,   407,   530,  3447,  4069,   209,  4997,  3451,
     789,   158,  4075,  3317,  5616,   106,  3588,   421,    33,   788,
    2633,    19,    20,  4010,  2637,  3354,    41,   796,  3125,  4008,
     690,  5633,  2544,  3605,  2647,    50,  3133,  3134,   698,  4569,
    4570,  2654,    31,   703,  5646,   313,  5648,  3605,   651,  2662,
      33,   467,  2665,   272,  4625,  4010,  2642,   317,    41,  3554,
     207,    63,  4061,  4062,   283,   128,   789,    50,  4598,  2544,
    5652,  5109,   288,  4072,   151,    35,    36,    37,  1053,    39,
    2666,    33,   209,  2446,  2670,  1060,  4616,  2450,   498,    41,
     167,   317,  4655,  2642,   621,  6398,  6399,  4668,    50,  3317,
    2642,  3673,   317,   332,  1079,  1080,  5439,  5440,  2712,   712,
    2712,   320,   715,   209,    40,   317,   423,  2666,  2544,    45,
     209,  2670,  4716,   430,  2666,  3707,   154,  3305,  2670,    65,
    2642,  3435,    33,    33,  6437,    18,    19,    20,   209,   742,
      41,    41,    57,  3447,    22,   514,   144,  3451,   751,    50,
      50,    29,  5725,    31,  2666,   745,    71,    40,  2670,  3361,
     570,   259,   239,  5192,   788,  3737,  3738,  2642,  5197,   179,
    3452,  3317,   791,   537,   538,   127,  3361,   541,   542,   543,
      36,  3463,  3464,  3361,    40,   791,  3468,   347,   101,    45,
     317,  2666,   776,   777,   209,  2670,   156,  1436,    50,   197,
    1439,  1440,  2815,   300,   791,    33,  2819,  3614,   789,   735,
     791,    23,  3614,    41,    26,    27,  2642,  3435,   421,    31,
    2833,   317,    50,  4631,   141,   752,   209,  4635,   317,  3447,
    1032,  1033,  1034,  3451,   789,   762,   791,   150,  3520,    23,
    2666,   128,    26,    27,  2670,   754,   317,    31,   519,   520,
    5092,  2860,   675,   359,    33,  3537,   675,   209,  2860,   785,
     282,  3833,    41,   534,   789,   536,   791,  3762,   791,   464,
    3448,    50,  3450,   215,    24,    25,  1078,   160,    28,   789,
      30,  1083,    32,   776,   777,   227,    33,    33,   128,  3435,
     791,   789,   702,   791,    41,    41,   791,   403,  5876,   405,
     145,  3447,   317,    50,    50,  3451,  2919,  2920,   209,   209,
     795,   791,    33,  2926,   197,   667,  5354,  2930,  2931,   145,
      41,   964,   965,   145,   967,   968,   969,   269,   314,    50,
    2943,   974,  2945,  5371,   317,  2948,  2949,    28,  1345,    30,
    2939,    32,   255,   226,  1351,  1352,   127,    33,   290,   113,
     114,   115,   796,  2939,   764,    41,   776,   777,   629,   630,
    2973,  2974,   796,    33,    50,   317,  2979,  3671,  3672,   741,
      33,    41,    19,    20,  3671,  3672,  2989,   791,    41,   791,
      50,   209,  2995,  3878,   297,   327,  4373,    50,  2987,   495,
      40,  4238,   390,   306,  3009,   120,    33,  2939,    33,  2998,
      50,   282,   791,   316,    41,    55,    41,   791,  3990,  3022,
    4936,   294,   661,    50,   791,    50,   317,   317,  4373,   332,
    3915,  5570,  3917,  3918,  4601,  3038,   440,  2939,  3923,   791,
     209,   776,   777,  3046,  3047,  3048,  3931,   963,  4010,   545,
    3935,   791,  3937,  4290,   537,   538,  6453,  6454,   541,   542,
     543,   751,    33,  3671,  3672,   789,  5551,   791,   269,  4227,
      41,  4229,   209,   209,  2939,  3078,  3079,   788,    33,    50,
    3705,    75,   114,  3072,  3087,  3804,    41,  4245,  3091,  3808,
    3943,   791,    28,    33,    30,    50,   592,   288,   209,   317,
    3089,    41,  3574,    28,    33,    30,   795,    32,   440,  4194,
      50,   151,    41,   501,  3117,  2066,  2067,   390,  3121,  3122,
    3123,    50,  3125,  2939,  5108,   474,   789,   167,   791,  3132,
    3133,  3134,   126,   209,  3137,  3671,  3672,  4099,    24,  4508,
    3143,   791,    28,   795,    30,    33,    32,   128,   317,   209,
    5070,   145,   789,    41,   791,  3158,   209,   197,  4242,  3162,
    4395,  4396,    50,  3166,  3167,  5732,   160,   141,   774,   775,
     776,   777,   778,   779,   780,   781,  4138,   789,   151,   791,
     317,   317,   209,  4529,   209,  4531,   791,   683,     6,     7,
      33,   789,    33,   791,   610,    33,    33,   789,    41,   239,
      41,  6167,  6168,    41,    41,   788,   317,    50,   789,    50,
     791,   707,    50,    50,  3203,   789,  3841,   791,   651,   479,
      33,  3224,  3211,   789,   218,   791,   499,  3230,    41,   101,
    4027,  4028,   226,   621,   588,    53,    54,    50,   209,   711,
     789,   317,   791,   789,  4206,   791,  3814,  3205,  3206,  3943,
      33,   793,   794,  5681,   209,   788,   788,   317,    41,  3340,
      33,    28,  5690,    30,   317,    32,   584,    50,    41,   209,
      40,   789,   789,   791,  3277,   788,   742,    50,   150,   788,
     209,  3849,  3850,  3286,  1476,    55,   789,  4006,   791,    33,
     317,   789,   317,   791,   337,  3782,  5939,    41,   789,   789,
     791,   791,  3305,   789,   337,  3950,    50,    33,  5427,   127,
     789,   204,    33,   756,   757,    41,   759,   337,   761,  3887,
      41,   209,  3967,   555,    50,   143,   288,   204,   789,    50,
      33,  5315,    53,   791,   789,  3943,   791,  3340,    41,  4708,
     789,  3317,   791,   789,    33,   791,   317,    50,   621,  3352,
     168,  3354,    41,   789,    81,   791,   788,  3360,  3361,  3362,
     284,    50,   317,   431,   752,    33,   209,   789,   209,   791,
    3373,   209,   209,    41,   762,   364,   795,   317,  3317,   788,
     788,   151,    50,   255,   789,   788,   788,    24,   317,   207,
     788,    28,  1308,    30,   388,    32,   209,   167,  1314,   788,
     218,    19,    20,   788,  4201,  4202,   789,  3943,   791,  4201,
    4202,  4373,   789,   788,   791,  3317,   789,   789,   788,   791,
     147,   771,   772,   773,  5344,   297,   209,   197,   246,   317,
     789,   158,   791,   789,   306,   791,   209,    15,   789,   166,
     791,   789,    40,   791,   316,  3448,  3435,  3450,   788,  6543,
    5372,   788,    50,  3429,  3430,  3431,   789,    55,   791,  3435,
     332,   789,  5731,   791,  5448,   209,   788,   194,  4705,   239,
      88,  3447,    73,  5901,   317,  3451,   317,    19,    20,   317,
     317,   299,  1398,   209,  4156,   788,   788,   760,   209,   762,
    3429,  3430,  3431,   789,   788,   791,   314,   745,   789,   789,
     788,  3317,   145,  3435,   317,    33,   209,   788,  3447,  5027,
     788,    24,  3451,    41,   788,    28,  4313,    30,   788,    32,
     209,  4313,    50,   250,  4682,  4683,   788,  3429,  3430,  3431,
      33,   788,   788,  3435,   317,  4420,  4421,  4422,    41,   745,
     789,   209,   791,   788,   317,  3447,    38,    50,  3551,  3451,
     789,   278,   791,   151,  4179,   789,   789,   791,   791,   788,
    4445,  4446,   788,  4448,  3429,  3430,  3431,  1483,  5009,   167,
    3435,   789,   214,   317,  5027,  3574,  3568,  3580,  1494,   789,
    5804,   791,  3574,   214,   789,  5704,   791,   214,   788,   788,
      33,   317,   789,   788,   791,  5714,   317,   214,    41,   197,
     128,   789,   144,   791,   598,  3608,   788,    50,    40,   788,
    3613,  3614,   788,   788,   317,  5908,   789,   759,   791,  3435,
     789,  5914,  5915,   788,   788,  4344,  4345,   789,   317,   791,
     789,  3447,   791,   788,  5011,  3451,   788,  4795,  4491,  3714,
    3643,   239,   682,    31,   789,   463,   791,   788,   796,   317,
      24,    25,   789,   789,    28,   197,    30,   789,    32,   791,
    3659,   789,   788,   791,  3667,  3659,  3669,  3659,   119,   789,
     788,   791,   123,   105,   788,   788,   127,    57,   789,   788,
     788,   209,  5643,  3659,   788,   788,  3761,  2544,   788,   788,
    3659,    71,   788,    73,  3659,  3671,  3672,  3659,  3701,  3659,
     788,   152,  3659,   788,   788,  3659,   209,  3659,   788,  3712,
     788,  3671,  3672,   789,   789,   709,   791,   168,    19,    20,
    3659,    15,   789,   174,   791,   788,   788,  3659,   588,   789,
    4615,   788,  3671,  3672,   788,    15,   789,    24,    25,  3671,
    3672,    28,   788,    30,  4509,    32,  5730,   390,   204,   788,
     788,  4636,   788,   788,   397,    24,   207,  3659,   300,    28,
     192,    30,   789,    32,   789,   197,   209,   788,   791,   412,
    3759,   788,  4604,   788,   788,   788,  4738,   788,   788,  3782,
     788,   284,    24,    25,    26,  2642,    28,  3790,    30,   317,
      32,   434,   788,   788,  3659,  5717,   788,  4491,   788,  6338,
     232,  3804,   788,   788,   788,  3808,  3671,  3672,   788,  2666,
     788,  3814,   788,  2670,   317,   128,   788,   771,   789,  3822,
     788,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,   788,   204,   789,  4322,   259,   269,   791,   675,
     464,   284,   293,  3659,   145,   788,  3849,  3850,   390,   789,
      88,   695,   127,   695,  5838,  3671,  3672,   711,   681,   514,
     789,    33,   480,   433,    24,    25,    26,  3942,    28,    41,
      30,   143,    32,   791,   317,   178,  4673,   791,    50,   791,
     586,  4673,   364,  4491,  3887,  3874,  3875,  3876,  3877,  3878,
    3879,  3880,   791,  4518,  3883,   127,   539,  6190,   398,  6018,
    3903,   789,  3860,  3861,   791,  3863,  3864,  4579,   791,   552,
    4604,   583,   682,   706,   771,     7,   788,   415,  1834,   751,
    1836,   122,   467,   467,   788,    10,   569,   307,   308,    75,
    3919,  3920,   791,  3922,   218,  3924,  3925,  3926,  3927,  3928,
    3929,  3930,    31,  3932,   136,   297,   789,  3936,   789,  5871,
      65,   789,   789,   771,   151,  4491,   128,   397,   390,   501,
      42,    92,    93,    94,    95,   345,    42,  3943,   412,     3,
     402,  4643,   590,   587,  3950,   751,   789,   795,   313,   597,
     126,  3984,  6086,   363,   482,   603,   796,   156,   788,   227,
     370,  3967,   431,   788,   225,   395,  4604,   788,   788,   145,
     788,   202,    33,  4006,  3943,    15,   789,   138,   139,   140,
      41,  3950,   796,   788,   160,   395,   789,   127,  3950,    50,
     127,   795,    88,  4026,  4027,  4028,   356,   795,  3967,  4032,
      54,   269,   791,    19,    20,  3967,   127,   209,   796,   120,
     796,  3943,  4045,   178,   647,   789,   711,   789,  3950,  5011,
     548,   337,   550,  2508,   697,   355,   356,   651,   556,   190,
     191,   679,   141,   789,   337,  3967,   337,  6028,  4604,   712,
     502,    57,  2527,   192,   510,    44,   313,   565,  4054,   621,
     226,  2536,  2939,   128,   682,  3950,   789,  2542,   313,   390,
     291,   154,   392,   788,  6522,  2550,   397,   128,   178,   795,
     789,   791,  3967,   796,   342,  2560,   788,    47,  2563,   431,
     789,   412,   789,   232,   106,  4054,   340,   791,   616,  5081,
     796,   789,   789,   254,   742,   789,    88,  3943,   789,   652,
     581,   431,   127,   434,  3950,  2051,  4139,   127,    71,  2055,
     572,   789,  6411,   789,   789,   317,  2062,   796,   788,   215,
     269,  3967,  4054,  5594,  5595,    47,  5597,   136,   167,   788,
    6121,   227,   660,    96,    22,    23,    24,    25,    26,    27,
      28,    29,    30,    31,    32,   791,   109,  4180,   209,   417,
     288,   791,   127,   145,    73,   778,    33,   318,   730,  4054,
     796,  4194,   125,  4196,    41,   791,   695,    55,  4201,  4202,
     127,  4204,   440,    50,  4207,  4208,   778,  4815,  6169,  4974,
     752,   494,   151,   414,   106,  4204,   282,   708,   127,  3076,
     762,   455,   155,   791,   290,   439,  2142,  4852,    33,   467,
     695,   127,   789,   788,   788,   791,    41,   154,   539,    33,
     431,     3,   388,   151,   791,    50,  4321,    41,    53,   367,
     218,   552,   240,   215,   514,   514,    50,  4332,   756,  4334,
    4263,   327,  4254,  4255,   122,   227,   514,   514,   569,   767,
    2186,   390,  6541,   695,   364,  2191,   695,   791,  2194,  4815,
     120,   128,   681,   402,   415,   271,   317,  5172,  5173,  5174,
    5175,  6275,    43,  5178,  5179,  5453,   514,   514,  5183,   288,
      47,  5186,   235,  4871,  5189,   127,   606,  5192,  4311,   678,
    4313,  5196,  5197,  4316,  4317,  4960,   751,    68,   600,  4322,
     621,   789,   789,   623,   158,  2241,    77,   789,   290,  6448,
     789,   789,   158,   211,   128,   788,  4325,  2253,   789,   791,
      65,  4344,  4345,   443,   202,   137,   796,    98,  4351,   649,
    4431,   482,   252,   669,   796,  4982,   484,   737,   422,   788,
    6282,   484,   209,   296,  3221,   327,   791,    68,  5809,   599,
    5811,  5812,   123,   265,   440,   267,   127,   284,   741,   130,
     788,   329,   311,   502,   238,   311,   278,    57,    30,   710,
     141,   128,   223,   693,   207,   204,   697,   791,   791,   788,
     288,   467,   294,   146,   209,   154,   157,   653,  4483,    42,
     789,   712,   789,   789,   165,   209,   431,   548,   778,   550,
     128,  4502,   789,    33,   662,   556,  6410,   178,   789,   667,
     789,    41,   789,   291,   420,  6396,   777,   788,   791,  2355,
      50,   789,  4929,    53,   789,   789,   789,   789,   434,   789,
     436,   202,   598,   572,    81,   789,   789,  2373,   789,   119,
    3317,   762,   789,   123,   789,   789,   789,   127,  2384,  2385,
     317,   791,   789,  5358,  4477,  5360,   791,  5362,   440,   789,
     413,   414,   468,   791,   791,   616,   472,   789,   781,   218,
     789,   242,   152,  6415,   789,   481,   247,   248,   796,  4502,
     789,   789,    88,   788,   742,   467,   382,  4510,   168,   788,
     788,   788,   317,   751,   174,  4491,   771,  5163,   788,   720,
     147,   788,   723,   317,   788,   595,  6510,    31,   514,   660,
      31,   158,    31,   791,   431,   131,  5421,  6521,   128,   166,
     791,  4533,  2458,   129,  4547,  6529,   532,   207,  2464,   407,
     791,   796,  4491,  6537,   127,   127,   414,   796,   508,   145,
     796,   796,   791,   709,   315,   791,   789,   194,   517,   791,
     519,   520,  3429,  3430,  3431,   776,   777,   204,  3435,   791,
    5148,   128,   617,   259,   789,   534,   478,   536,   791,  4491,
    3447,    18,    19,    20,  3451,    53,   662,   791,   100,   209,
     771,   667,   791,    47,   675,   356,   791,   791,   369,   127,
     580,   758,   158,    40,   158,   443,  5184,  5304,   511,   553,
    5228,  4624,    53,   250,   610,   756,    53,   378,  4604,   562,
     563,   617,   123,   293,   788,   269,   767,   561,   269,  5492,
     661,   627,   316,  5289,   606,   269,    73,   269,   269,   204,
     788,   278,   127,  4656,   791,   641,   789,   771,   771,   771,
     771,   156,   771,   741,   788,  4604,  4669,  4656,   771,   771,
    4673,   319,    99,  4676,   771,  4491,   742,   263,   771,   665,
     629,   630,   296,   771,   771,   751,   648,  4676,   674,   431,
     789,   677,  5228,  2609,  2610,   789,   282,   448,   771,   771,
     796,   300,  4604,  5307,  4707,   667,   771,   317,   294,   695,
     771,   771,   771,  4716,   771,   771,   771,   771,  4717,   771,
     771,  2637,   771,   771,   791,  4728,   312,  5580,   771,   580,
    4722,  2647,   168,   160,   796,   684,   685,  4812,   791,   789,
     726,    34,   789,   337,   763,    18,    19,    20,  4751,   288,
     796,   288,   183,   715,  4757,   796,   342,   510,  4761,   791,
     396,   154,   431,  5725,   789,   153,   153,   796,   214,   789,
     197,   789,   789,   789,   796,   202,   777,   204,   789,   777,
     742,    65,  4785,   796,   789,   789,   788,   242,  4604,   751,
     723,   791,   788,   704,   686,   687,   688,   689,  5492,   226,
     342,   288,   288,   588,  4762,  4763,  4764,  4765,  4766,  4767,
    4768,  4769,  4770,  4771,   128,  4773,  4774,  4775,  4776,  4777,
    4778,  4779,  4780,   128,  4782,  4783,    99,   788,  4786,  4787,
     796,   417,   796,   788,   496,   586,  4839,   233,    30,  4815,
    5486,   777,   788,  4846,  5490,  5491,   323,   788,   795,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
     740,   771,   720,    81,   549,   723,   204,   294,  4871,    81,
     337,   126,   145,   204,   732,   204,  4815,   288,    50,   158,
    4869,  5853,  5297,  5298,  5492,  5300,  5580,   158,   791,   719,
    5305,   789,   412,  5308,    31,   412,  5311,  5312,    31,  2815,
      31,   241,    53,  2819,  5319,   284,  5321,   788,    30,   788,
      30,   788,   465,  4815,   246,  5330,  4919,   778,   178,   789,
     588,   581,   778,   350,   143,   796,  4929,   356,    95,   147,
     155,  4934,   155,   364,  4892,   147,   789,   789,   788,  4897,
     158,   789,   207,   216,  4936,   789,   158,   796,   166,   122,
     791,   789,   791,   789,   166,  4958,  5492,   789,   153,    65,
     789,   771,   789,   390,   789,   789,   789,   788,   788,   788,
     128,    31,  5580,    31,   233,   791,   194,   789,   178,   410,
     791,   788,   194,  4982,  4960,   313,   204,   788,  4982,   233,
    4982,   771,   204,   791,   558,   741,   204,   697,   697,  4815,
     273,   274,   275,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,  2930,  2931,   788,   412,   788,   300,
     293,  4960,  4998,   300,   788,   382,    53,    31,  4960,   202,
    5111,   791,   250,   789,   791,   209,   450,   288,   250,    53,
     791,   789,   469,   213,  5580,   325,   443,   252,  6489,   131,
     506,   789,    65,  5621,   257,   168,   789,   488,  4960,  4998,
     278,   789,   648,   316,  5067,   508,   278,   647,   207,   791,
      65,   789,   499,   789,   791,   351,   662,   350,   169,   352,
     218,   667,   300,   789,   789,   789,  3943,   316,   791,   451,
     174,   789,   788,  3950,   771,  4960,  4998,   791,   771,   372,
     771,   762,   167,   122,  5750,  5108,  3022,   422,  5111,   749,
    3967,   422,   204,  5107,   218,  5107,  5119,   390,   291,    53,
     551,   248,   789,   681,   397,  5206,   170,    30,    30,   715,
     788,   300,  3048,  4998,   300,   597,   567,   568,   218,   412,
     388,   572,   573,   574,  4960,  5148,   419,   218,  5151,   218,
    5153,    65,   218,  5142,  5143,  5144,   742,   159,   712,   159,
     712,   434,   218,   218,   596,  5168,   218,   218,   218,   607,
     204,   204,   489,   390,   253,   128,    72,   796,   588,    75,
     443,  5184,   316,   202,   204,   154,   431,   789,   789,   789,
     502,  5180,  5181,   553,   621,   617,   155,  4054,    71,   791,
    5203,  5190,  5205,    65,  6362,   789,   789,  3123,  5623,   640,
     789,   789,  5170,   410,  5203,   789,  3132,   658,   491,   796,
     791,  3137,   789,   791,  5182,    50,   788,  3143,   501,   788,
     126,  5234,   788,   129,   407,  5929,   796,   664,   431,   789,
      53,   414,  3158,    31,   795,   788,   382,   788,  5237,   145,
      65,    65,  5228,   117,    65,   788,   450,    30,   335,   749,
     141,   160,   693,   226,   160,   749,   539,   674,   394,   426,
     316,   127,   291,   428,   282,   791,   789,   789,   553,   552,
     789,  5299,   788,   692,   449,  5288,   789,   587,   423,  5228,
     788,   791,   788,   160,   788,   160,  5314,   237,  5301,  5302,
    5303,   789,    53,   788,   105,    65,  5324,   789,   791,   788,
    5313,   580,  5315,  5331,   682,  5333,  5334,  5942,   591,  5322,
    5323,  5929,   218,   795,   597,  5328,  5228,   795,   791,   789,
     226,  5939,  5335,   760,    65,   762,    65,  5340,    31,   415,
     127,   288,   127,   160,   791,   316,   288,   789,   621,   588,
     789,   791,  5355,    18,    19,    20,   789,   653,   605,   444,
    5349,   729,   605,  5366,   788,   371,   796,   263,  6087,   788,
     788,   300,   789,   788,  6532,    40,   796,    72,   204,   120,
     796,   120,   655,  5377,   431,  5377,   789,   795,   282,   662,
     795,   288,    73,  5929,   282,   414,   288,   288,   294,   588,
     692,    72,    72,  5939,    15,   730,    65,  6126,    73,    65,
     788,   788,  5228,  5389,  5982,  6300,   312,   160,   251,    50,
     789,   703,    30,   718,   697,   791,   791,   788,    18,   253,
     789,   144,    99,  5436,    99,   791,   219,    99,  3354,   712,
     713,   218,   432,     6,  3360,  5448,  5449,   588,   588,    15,
    5389,   297,   725,   788,  5457,   653,   730,   422,   422,   434,
     181,  4318,  4319,   789,  6151,  5468,   788,   791,  5471,  5472,
     789,   160,   788,  5476,   709,   788,   160,  5480,   788,   749,
     202,   297,   343,    99,    53,  5488,   154,  5389,   730,   762,
    5493,   789,   388,   704,   788,   160,   593,   204,   789,   788,
    5581,   788,   251,   788,   430,   788,  5495,  5582,   199,  5584,
     788,   745,   356,   426,   208,   342,  5492,  6236,  6086,   174,
     744,   788,  5511,   744,  5389,   589,   788,  5608,   789,  5610,
     127,   789,   197,   366,    15,   789,   788,   202,   252,   204,
     219,   374,   791,   730,   336,   791,   484,   720,   789,   789,
     723,  4408,   204,  5492,   204,   431,   389,   789,  5561,   732,
    5563,   226,   204,  6535,    65,   297,   399,   400,   401,   789,
     101,   112,   204,  4430,   204,   143,   409,   116,   653,  5582,
      30,  5584,   436,   259,   788,   791,  3659,  5590,  3059,  5592,
    5492,  5609,  3938,  3778,  5362,  5913,  5358,  4408,  5943,  5360,
    6106,  5560,  6170,  6340,  5580,   783,   781,  1481,  4477,  3967,
     781,  5614,  5615,  5616,  5617,  4960,  3949,   366,  5621,  5622,
    4502,  5624,  2566,  5111,  2136,   374,  5629,  5630,  3738,   294,
    5633,  4738,  4044,  4022,  4491,  5638,  5639,  2666,  1006,  2473,
     389,  5580,  5645,  5646,  2668,  5648,  5772,   849,  2667,  5771,
     399,   400,   401,  5656,  1022,  5547,  4918,  4430,  1026,  5637,
     409,  4665,    33,  4669,  5067,  2905,  6157,  5717,  5432,  6415,
      41,  6277,  6375,  5676,  6041,  5715,  5492,  3202,  5580,    50,
    1469,  1049,  5296,  4913,  5935,   350,  1054,  5340,  5691,  5611,
    5480,  1059,  3608,  4919,  6399,  5162,  6226,  6236,  6126,  6119,
    6119,   720,   598,   866,   723,  6119,  6119,  4601,  3859,  1634,
    5785,  4497,  4384,  4554,   547,  4064,  6095,  6151,  2510,  3336,
    4142,    92,    93,    94,    95,   390,   559,  5730,  4632,  6297,
    4635,  4627,  6421,   495,   495,  6393,  5920,  6394,  5741,  3770,
    6182,  6198,  6194,  5746,  5822,  5607,  2535,  4604,  5605,  4314,
    5753,  5754,  4918,  1898,  6226,  5758,  5759,  1125,  1126,  1127,
    1128,  5337,  2329,  1131,  5580,  5768,  1490,   138,   139,   140,
    1138,  5774,  3758,  5994,  3753,  5778,  3230,  6402,  5826,  5771,
    6145,  2491,  5785,  3608,  3048,  4032,  4536,   541,  3392,  5792,
    1453,  3568,   789,  3702,  1400,  1440,  3712,  4980,   547,  3837,
    5803,  3617,  4656,  5791,  1217,  6373,  3519,  3516,  2070,  3585,
     559,   644,  4179,   709,    19,    20,  3586,  2126,  4089,   190,
     191,  5010,  5825,  1990,  2001,  1969,   659,  6349,  5831,  6118,
    5833,  6454,  6453,  2385,   499,  5838,  5368,  1398,   209,  2380,
    4973,  1398,  6011,  5119,  5847,  6012,  2375,  5928,  1975,  1398,
    1398,  5932,    57,  1398,  3173,  5858,  5859,  4165,  2401,  3824,
    4846,  5864,  4845,  5938,  5939,  4163,  1234,   700,  5427,  6018,
    5945,  5946,  5838,  5094,  3790,  5423,  3840,  5011,  5953,  3833,
    5444,   714,  4974,   254,   795,  1461,  4389,  3166,  3804,  5892,
    4615,  1431,  3808,  4390,  4852,   513,   495,  2578,  1836,   711,
    5903,  1307,  2631,  3385,  5730,    72,  5909,  4533,    75,  4722,
     659,  3871,  5141,  6538,  5917,  4709,  5919,  6410,  4707,   895,
     894,  3018,   702,   702,  3019,  1456,  3694,   702,  2209,  3076,
    5933,  5768,  2318,  5460,  4539,  5938,  4793,  6413,  1903,  5253,
    6459,    48,  5601,  6537,  6529,  3038,   317,   318,  6516,  1010,
    5953,   700,  1320,  5929,  5957,  3151,   621,  6525,  4815,   126,
    6448,  3382,   129,  5939,  5448,   714,  3435,  5970,  5986,  3671,
    3673,  3672,  2673,    80,   701,   701,  2951,  5980,   145,  5982,
    3668,  3664,  3663,  4213,  2647,  5988,  5989,  5990,   699,  2148,
    5929,  2349,  1891,   160,   101,  1232,  1891,  6078,  4419,   664,
    5939,  3224,  1198,   110,  4871,  3613,  4986,  5939,  6011,  6012,
    3773,  5687,  4431,   519,  6095,   495,   495,   742,  1341,   495,
    5228,  4328,   979,  4530,   131,  3131,  4047,  5929,  2669,   979,
     998,  5945,  4726,  6246,  5228,  5238,  5218,  5939,   145,  5217,
    1830,   886,   998,   150,   415,    -1,    -1,    -1,    -1,  6052,
      -1,    -1,    -1,    -1,  6057,    -1,  4913,    -1,  1426,   226,
    6063,  1429,    -1,    -1,    -1,    -1,   271,   174,    -1,    -1,
      -1,    -1,    -1,    -1,  5939,  6033,  6034,   282,  6036,  6037,
    6038,  6039,    -1,  6086,  6073,    -1,    -1,    -1,    -1,    -1,
    4006,    -1,    -1,    -1,    -1,   760,   263,   762,    -1,    -1,
      -1,  6104,    -1,  4960,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   482,    -1,  5929,    -1,  6118,  4032,    -1,    -1,    -1,
      -1,    -1,    -1,  5939,    -1,    -1,   233,   294,    -1,    -1,
     237,    -1,    -1,    -1,    -1,  1503,    -1,    -1,    -1,    -1,
      -1,  4998,  6145,    -1,    -1,   312,    -1,    -1,   255,    -1,
      -1,    -1,   259,   260,  6157,    -1,    -1,    -1,    -1,    -1,
      -1,  6242,    -1,    -1,    -1,    -1,    -1,  6170,    -1,  6244,
      -1,  6246,    -1,    -1,    -1,  6164,  6165,   548,    -1,   550,
      -1,    -1,    -1,   290,    -1,   556,    -1,  6176,    -1,    -1,
     297,   298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6202,
      -1,    -1,    -1,    -1,    -1,  6163,    -1,  6210,  6166,  6212,
    6213,    -1,    -1,    -1,    -1,   420,  6174,    -1,    -1,  6177,
      -1,   388,    -1,    -1,    -1,    -1,    -1,  6226,    -1,   434,
      -1,   436,    -1,    -1,  6226,    -1,    -1,  6240,    -1,    -1,
      -1,  6244,    -1,  6246,    -1,   616,  6249,    -1,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,     6,     7,    -1,    -1,
    6341,    -1,    -1,   468,    -1,    -1,    -1,   472,    18,    -1,
      -1,    -1,  6275,    -1,    -1,    -1,   481,    -1,    -1,    -1,
    4196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   660,
     397,    -1,    -1,    -1,  6297,    -1,    -1,  6286,    -1,    -1,
    6289,    -1,    -1,    53,    -1,    -1,    -1,    -1,    -1,   514,
      -1,    -1,  6315,  6316,    -1,    -1,  6319,  6398,  6399,    -1,
      -1,    -1,    -1,  6326,    -1,    -1,    -1,   532,    -1,    -1,
      -1,    81,    -1,   440,    -1,    -1,    -1,    -1,   445,    -1,
      -1,    -1,    -1,    -1,  5201,    -1,    -1,  5204,    -1,   456,
     457,    -1,    -1,    -1,    -1,    -1,  6437,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   119,
    6373,  5228,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,
      -1,    -1,    -1,    -1,  6387,   756,   136,   137,    -1,    -1,
      -1,    -1,    -1,   143,    -1,  4311,   767,   147,    -1,    -1,
    4316,  4317,   152,    -1,   154,   610,    -1,  6410,   158,    -1,
      -1,    -1,   617,    -1,    -1,    -1,   166,    -1,   168,    -1,
      -1,    -1,   627,    -1,   174,    -1,    -1,    -1,  4344,  4345,
      -1,   598,    -1,    -1,    -1,    -1,   641,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   204,    -1,    -1,   207,    -1,    -1,
     665,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   674,
      -1,    -1,   677,    -1,    -1,    -1,    -1,   227,    -1,    -1,
    5337,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     695,    -1,    -1,    -1,    -1,    -1,   246,    -1,    -1,    -1,
     250,    -1,    -1,    -1,   611,    -1,   711,  6510,    -1,   259,
      -1,    -1,    -1,  6516,   621,    -1,    -1,    -1,  6521,    -1,
      -1,   726,  6525,    -1,  1892,   632,  6529,    -1,   278,    -1,
      -1,   638,  5389,  1901,  6537,  1903,    -1,    -1,    -1,    -1,
      -1,    -1,   709,   293,    -1,    -1,    -1,    -1,    -1,   299,
     300,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   670,   314,    -1,   316,   674,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1962,  1963,    -1,    -1,   705,    -1,
    1968,    -1,    -1,    -1,  1972,  1973,  1974,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1982,  1983,  1984,    -1,    -1,    -1,
    1988,    -1,    -1,    -1,  1992,  1993,  1994,    -1,  1996,  1997,
    1998,    -1,  2000,  2001,    -1,  5492,    -1,    -1,    -1,  2007,
      -1,  2009,    -1,    -1,  2012,  2013,  2014,  2015,    -1,  2017,
      -1,  2019,  2020,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2033,  2034,  2035,  2036,  2037,
      -1,  2039,  2040,  2041,  2042,  2043,  2044,    -1,  2046,  2047,
      -1,  2049,  2050,    -1,  2052,  2053,    -1,    -1,  2056,  2057,
      -1,  2059,  2060,    -1,    -1,  2063,    -1,  2065,    -1,    -1,
      -1,  2069,  2070,  2071,    -1,    -1,  2074,  2075,  2076,  2077,
      -1,  2079,    -1,   463,    -1,    -1,    -1,    -1,  2086,    -1,
      -1,    -1,    -1,  5580,  2092,  2093,  2094,  2095,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2103,  2104,    -1,  2106,  2107,
      -1,    -1,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,    -1,    -1,  2125,    -1,    -1,
      43,    -1,  2130,    -1,    -1,    -1,    -1,    -1,    -1,  2137,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,
      -1,    -1,  2160,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2178,    -1,     6,     7,    -1,    98,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    18,    19,    20,    -1,    -1,    -1,
      -1,   581,    -1,    -1,    -1,  4751,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,   127,  4761,    -1,   130,    -1,    -1,
      -1,    -1,    46,    -1,    48,    49,    -1,    -1,   141,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,    -1,    70,    -1,    72,    -1,
      -1,    -1,   165,    -1,    78,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
    2278,    43,  2280,    -1,    -1,    -1,   110,    -1,    -1,   202,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    68,  2305,    -1,    -1,
      -1,    -1,    -1,  2311,    -1,    77,    -1,    -1,    -1,    -1,
      -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,   247,   248,    98,    -1,    -1,    -1,
      -1,    -1,    -1,     6,     7,    -1,    -1,    -1,    -1,    -1,
     174,   113,   114,   115,    -1,    18,    -1,    -1,    -1,    -1,
      -1,   123,    -1,    -1,    -1,   127,    -1,    -1,   130,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   758,   141,
      -1,   205,    -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,
      53,   771,   216,    -1,   218,   157,    -1,    -1,    -1,    -1,
    2398,    -1,   315,   165,    -1,    -1,  2404,    -1,  2406,   789,
      -1,   791,    -1,  5900,   794,   795,   178,   241,    81,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5913,    -1,  2426,    -1,
      -1,    -1,    -1,    -1,    -1,  2433,    -1,    -1,    -1,    -1,
     202,  5928,  5929,   356,    -1,  5932,    -1,    -1,    -1,   273,
     274,   275,  5939,    -1,    -1,    -1,   119,    -1,    -1,    -1,
     123,    -1,    -1,    -1,   127,   378,    -1,    -1,    -1,   293,
      -1,    -1,  2470,   136,   137,    -1,    -1,    -1,    -1,    -1,
     242,    -1,    -1,    -1,   147,   247,   248,    -1,    -1,   152,
      -1,   154,    -1,    -1,    -1,   158,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   166,    -1,   168,    -1,    -1,    -1,    -1,
      -1,   174,    -1,    -1,    -1,    -1,    -1,    -1,   342,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   350,    -1,   352,    -1,
      -1,   194,    -1,    -1,    -1,   448,    -1,    -1,    -1,    -1,
      -1,   204,    -1,    -1,   207,    -1,    -1,    -1,   372,    -1,
      -1,   313,    -1,   315,  6041,   379,    -1,    -1,    -1,    -1,
      -1,    -1,  6049,    -1,   227,    -1,   390,    -1,  6055,  6056,
      -1,    -1,    -1,   397,    -1,    -1,    -1,    -1,    43,    -1,
      -1,    -1,    -1,   246,    -1,    -1,    -1,   250,   412,    -1,
      -1,  6078,    -1,    -1,   356,   419,   259,    -1,    -1,   423,
     424,    -1,    -1,    68,    -1,    -1,   430,    -1,  6095,    -1,
     434,    -1,    77,    -1,    -1,   278,   378,    -1,   442,    -1,
      -1,    -1,  5168,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,    -1,    98,  2632,    -1,    -1,   300,    -1,   463,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   314,    -1,   316,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,   127,   487,    -1,   130,    -1,   491,    -1,   431,
      -1,    -1,    -1,   586,    -1,    -1,   141,   501,  2676,  2677,
      -1,    -1,    -1,    -1,    -1,    -1,   448,  2685,  2686,    -1,
      -1,    -1,   157,    -1,    -1,  6182,    -1,    -1,    -1,    -1,
     165,    -1,    -1,    -1,    -1,    -1,    -1,  6194,    -1,    -1,
      -1,  6198,    -1,   178,    -1,   539,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   552,    -1,
     554,    -1,    -1,    -1,    -1,    -1,    -1,   202,    -1,    -1,
      -1,  2739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2750,  2751,    -1,    -1,    -1,  5303,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   591,    -1,    -1,
      -1,    -1,    -1,   597,    -1,    -1,  5322,   242,    -1,    -1,
      -1,    -1,   247,   248,  2782,  2783,  2784,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,   622,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   633,
     634,   635,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6307,  6308,    -1,    -1,   586,    -1,    -1,   740,    -1,    -1,
      -1,   655,    -1,    -1,  2832,    -1,    -1,    -1,   662,    -1,
      -1,    -1,    -1,    43,  2842,    -1,    -1,  2845,    -1,    -1,
     315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   323,    -1,
     108,    -1,  2860,    -1,    -1,    -1,  2864,  2865,    68,  2867,
    2868,    -1,    -1,   697,    -1,    -1,    -1,    77,  2876,    -1,
    2878,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   712,   713,
      -1,   356,    -1,    -1,   142,    -1,    -1,    -1,    98,    -1,
      -1,   725,    -1,    -1,  6391,   729,  6393,  6394,    -1,    -1,
      -1,  2909,    -1,   378,    -1,    -1,    -1,    -1,   581,    -1,
      -1,    -1,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,
     130,    -1,   180,    -1,    -1,    -1,    -1,  2935,   762,     6,
       7,   141,    -1,    -1,  6431,    -1,    -1,    -1,    -1,    -1,
      -1,    18,    -1,  2951,    -1,    -1,    -1,   157,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   165,   431,    -1,    -1,    -1,
      -1,   795,    -1,  2971,   682,    -1,    -1,    -1,   178,  6466,
      -1,    -1,    -1,   448,    -1,    -1,    53,    -1,    -1,    -1,
    2988,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   202,    -1,    -1,    -1,  6493,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    81,    -1,    -1,    -1,    -1,    -1,
      -1,   729,    -1,    -1,    -1,    -1,    -1,  3025,    -1,    -1,
      -1,    -1,    -1,    -1,  3032,    -1,    -1,    -1,    -1,    -1,
      -1,  3039,   242,    -1,    -1,    -1,    -1,   247,   248,    -1,
      -1,    -1,   119,    -1,    -1,    -1,   123,    -1,    -1,    43,
     127,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   136,
     137,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     147,    -1,  3080,    -1,    68,   152,    -1,   154,    -1,    -1,
      -1,   158,    -1,    77,    -1,   758,    -1,    -1,    -1,   166,
      -1,   168,    -1,    -1,    -1,    -1,    -1,   174,   771,    -1,
      -1,    -1,    -1,    -1,    98,   315,    -1,    -1,    -1,    -1,
      -1,   586,    -1,    -1,    -1,    -1,   789,   194,   791,    -1,
      -1,   794,   795,    -1,    -1,    -1,    -1,   204,  3136,   123,
     207,    -1,    -1,   127,    -1,  5691,   130,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   356,   141,    -1,    -1,
     227,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3170,   157,    -1,    -1,    -1,    -1,   378,   246,
      -1,   165,    -1,   250,    -1,  3183,    -1,  3185,  3186,  3187,
      -1,  3189,   259,    -1,   178,    -1,    -1,  3195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5754,    -1,
      -1,   278,    -1,    -1,    -1,    -1,    -1,    -1,   202,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,    -1,
      -1,   431,    -1,   300,    -1,    -1,    -1,   485,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   314,   448,   316,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,   247,   248,    -1,    -1,   515,   516,    -1,
     518,   519,   520,   521,   522,    -1,   524,   525,   526,   527,
     528,   529,   530,   531,    -1,   533,   534,   535,   536,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    18,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1022,    -1,    -1,    -1,  1026,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   315,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1049,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1059,    71,    -1,    73,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   356,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,   629,   630,    -1,  3382,    -1,   586,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   378,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1125,  1126,  1127,
    1128,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,    -1,
    1138,    -1,    -1,    -1,  5980,    -1,    -1,    -1,  3436,    -1,
      -1,    -1,  3440,    -1,  5990,  3443,    -1,   431,    -1,    -1,
      -1,    -1,    -1,    -1,  3452,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3461,   448,  3463,  3464,    -1,  3466,  3467,
    3468,  3469,    -1,  3471,    -1,  3473,  3474,    -1,  3476,    -1,
      -1,    43,    -1,    43,    -1,    -1,  3484,  3485,    -1,    -1,
      -1,  3489,  3490,  3491,    -1,    -1,    -1,   216,    -1,    -1,
      -1,  3499,  3500,  3501,    -1,  3503,    68,  3505,    68,  3507,
      -1,  3509,    -1,  3511,   581,    77,    -1,    77,  3516,  3517,
      -1,  3519,  3520,  3521,    -1,    -1,    -1,  3525,    -1,    -1,
    3528,    -1,    -1,    -1,    -1,    -1,    98,    -1,    98,  3537,
      -1,    -1,  3540,    -1,  3542,  3543,  3544,    -1,    -1,  3547,
      -1,    -1,    -1,    -1,   273,   274,   275,    -1,    -1,    -1,
      -1,   123,    -1,   123,    -1,   127,    -1,   127,   130,    -1,
     130,  3569,    -1,  3571,   293,    -1,  3574,    -1,    -1,   141,
      -1,   141,    -1,    -1,    -1,    -1,  3584,  3585,  3586,  3587,
    3588,  3589,    -1,    -1,    -1,   157,  3594,   157,    -1,    -1,
      -1,    -1,   586,   165,    -1,   165,    -1,  3605,    -1,    -1,
      -1,    -1,  1320,    -1,    -1,    -1,   178,    -1,   178,    -1,
      -1,    -1,    43,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   350,    -1,   352,    -1,    -1,    -1,    -1,    -1,    -1,
     202,    -1,   202,    -1,    -1,    -1,    -1,    68,    -1,    -1,
      -1,   370,    -1,   372,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   390,    -1,    -1,    -1,  3673,    -1,    98,   397,    -1,
     242,    -1,   242,    -1,    -1,   247,   248,   247,   248,    -1,
      -1,   758,    -1,   412,  6240,    -1,    -1,    -1,    -1,    -1,
     419,    -1,   123,    -1,   771,    -1,   127,    -1,  3706,   130,
      -1,    -1,    -1,    -1,    -1,   434,    -1,    -1,    -1,    -1,
     141,    -1,   789,    -1,   791,    -1,    -1,   794,   795,    -1,
    3728,    -1,    -1,    -1,    -1,    -1,   157,    -1,    -1,  3737,
    3738,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   315,    -1,   315,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   491,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   202,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   356,  1503,   356,    -1,    -1,    -1,
    3798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   378,    -1,   378,    -1,
     539,   242,    -1,  3821,    -1,    -1,   247,   248,    -1,    -1,
      -1,    -1,    -1,   552,    -1,  3833,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   431,
      -1,    -1,   591,    -1,    -1,    -1,    -1,    -1,   597,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   448,    -1,   448,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   621,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3910,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   356,   655,    -1,    -1,    -1,
      -1,    -1,    -1,   662,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   378,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   697,    -1,
      -1,    -1,  3980,  3981,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   712,   713,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   725,    -1,    -1,    -1,
      -1,    -1,  4010,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   586,    -1,   586,   448,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4057,
      -1,    -1,  4060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4085,  4086,    -1,
      -1,    -1,  4090,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4099,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4112,    -1,  4114,    -1,  4116,    -1,
    4118,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4132,    -1,    -1,    -1,    -1,    -1,
    4138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4151,  4152,    -1,    -1,    -1,  4156,    -1,
    4158,    -1,  4160,    -1,    -1,   586,    -1,  4165,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1901,    -1,  1903,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4206,    -1,
      -1,    -1,  4210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4248,    -1,    -1,    -1,  1962,  1963,    -1,    -1,    -1,    -1,
    1968,    -1,    -1,    -1,  1972,  1973,  1974,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1982,  1983,    -1,    -1,    -1,    -1,
    1988,    -1,    -1,    -1,  1992,  1993,  1994,    -1,  1996,  1997,
    1998,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2007,
      -1,  2009,    -1,    -1,  2012,  2013,  2014,  2015,    -1,  2017,
      -1,  2019,  2020,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2033,  2034,  2035,  2036,  2037,
      -1,  2039,  2040,  2041,  2042,  2043,  2044,    -1,  2046,  2047,
      -1,  2049,  2050,    -1,  2052,  2053,    -1,    -1,  2056,  2057,
    4348,  2059,  2060,    -1,    -1,  2063,    -1,  2065,    -1,  4357,
      -1,  2069,  2070,  2071,    -1,    -1,  2074,  2075,  2076,  2077,
      -1,  2079,    -1,  4371,    -1,  4373,  4374,    -1,  2086,    -1,
      -1,    -1,    -1,    -1,  2092,  2093,  2094,  2095,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2103,  2104,    -1,  2106,  2107,
      -1,    -1,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,    -1,    -1,  2125,    11,    -1,
      13,    -1,    -1,    -1,    -1,    18,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,
      73,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      18,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2278,    -1,  2280,    -1,   167,    -1,    -1,    -1,  4576,  4577,
      -1,  4579,    -1,    -1,    -1,    -1,    -1,    -1,    46,    -1,
      48,    -1,    -1,    -1,  4592,  4593,  4594,    -1,    -1,    -1,
      -1,    -1,    -1,  2311,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    70,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      78,  4619,  4620,   216,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,  4643,    -1,    -1,    -1,    -1,
      -1,    -1,   110,    -1,    -1,    -1,    -1,  4655,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4664,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     273,   274,   275,    -1,    -1,    -1,    -1,   145,    -1,    -1,
    2398,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     293,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4709,    -1,    -1,    -1,  4713,   174,    -1,  2426,    -1,
      -1,    -1,    -1,    -1,    -1,  2433,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4738,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   207,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   350,   216,   352,
      -1,    -1,  2470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   370,    -1,   372,
      -1,    -1,    -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   390,    -1,    -1,
      -1,    -1,    -1,    -1,   397,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   273,   274,   275,    -1,   412,
      -1,    -1,    -1,    -1,    -1,    -1,   419,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,    -1,    -1,
      -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    18,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   342,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   350,    -1,   352,    -1,    -1,    -1,   491,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,    71,
      -1,    73,    -1,    -1,   372,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2632,    -1,    -1,    -1,  4926,  4927,
      -1,    -1,   390,    -1,    -1,    -1,    -1,    99,    -1,   397,
      -1,    -1,    -1,    -1,    -1,    -1,   539,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   412,    -1,    -1,    -1,    -1,   552,
      -1,   419,    -1,    -1,    -1,   423,    -1,    -1,    -1,  2677,
      -1,    -1,   430,    -1,    -1,    -1,   434,  2685,  2686,    -1,
      -1,    -1,    -1,   145,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   591,    -1,
      -1,    -1,    -1,    -1,   597,   463,    -1,    -1,    -1,    -1,
    5008,    -1,    -1,  5011,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,    -1,
      -1,  2739,    -1,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   655,    -1,  5062,    -1,    -1,    -1,    -1,   662,
      -1,    -1,    -1,    -1,  2782,  2783,  2784,    -1,    -1,    -1,
      -1,   539,    -1,  5081,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   552,    -1,   554,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   697,    -1,    -1,    -1,    -1,    -1,
      -1,   273,   274,   275,    -1,    -1,    -1,    -1,    -1,   712,
     713,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   293,   725,   591,  2842,    -1,    -1,    -1,    -1,   597,
      -1,    -1,    -1,  5141,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2860,    -1,    -1,    -1,  2864,  2865,    -1,  2867,
    2868,    -1,    -1,   621,    -1,    -1,    -1,    -1,  2876,   762,
    2878,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   350,    -1,
     352,    -1,    -1,    -1,    -1,    -1,    -1,   655,    -1,    -1,
      -1,  2909,    -1,    -1,   662,    -1,    -1,    -1,   370,    -1,
     372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2935,   390,    -1,
      -1,    -1,    -1,    -1,    -1,   397,    -1,    -1,    -1,   697,
      -1,    -1,    -1,    -1,    -1,    -1,  5244,    -1,  5246,    -1,
     412,    -1,    -1,    -1,   712,   713,    -1,   419,    -1,    -1,
      -1,    -1,    -1,  2971,   682,    -1,    -1,   725,    -1,    -1,
      -1,    -1,   434,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2988,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,    -1,
      -1,   729,    -1,    -1,    -1,    -1,    -1,  3025,    -1,    -1,
      -1,    -1,    -1,    -1,  3032,    -1,    -1,    -1,    -1,   491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   501,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5372,    -1,    -1,   539,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     552,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5423,    -1,    -1,  3136,   591,
      -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   621,
      -1,    -1,  3170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3189,    -1,    -1,    -1,    -1,    -1,  3195,    -1,    -1,
      -1,    -1,    -1,   655,    -1,    -1,    -1,    -1,    -1,    -1,
     662,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   697,    -1,    -1,    -1,    -1,
      -1,    -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
     712,   713,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   725,    -1,    -1,    -1,    -1,    -1,    -1,
      47,    -1,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,
     762,    -1,    79,    80,  1022,    -1,    -1,    -1,  1026,    -1,
      -1,    -1,    89,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   103,   104,    -1,    -1,
      -1,  1049,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1059,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5693,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1125,  1126,  1127,
    1128,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5717,
    1138,    -1,    -1,    -1,    -1,    -1,    -1,  5725,  3436,    -1,
      -1,    -1,  3440,  5731,    -1,  3443,    -1,    -1,   215,    -1,
      -1,    -1,    -1,    -1,  3452,    -1,    -1,    -1,    -1,    -1,
     227,  5749,    -1,  3461,    -1,  3463,  3464,    -1,  3466,  3467,
    3468,  3469,    -1,  3471,    -1,  3473,  3474,    -1,  3476,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3484,  3485,    -1,    -1,
      -1,  3489,  3490,  3491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3499,  3500,  3501,    -1,  3503,    -1,  3505,    -1,  3507,
      -1,  3509,    -1,  3511,    -1,   282,    -1,    -1,  3516,  3517,
      -1,  3519,  3520,  3521,    -1,    -1,    -1,  3525,    -1,    -1,
    3528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3537,
      -1,    -1,  3540,    -1,  3542,  3543,  3544,    -1,    -1,  3547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     327,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3569,    -1,  3571,    -1,    -1,  3574,    -1,    -1,    -1,
      -1,   348,    -1,  5871,    -1,    -1,  3584,  3585,  3586,  3587,
     357,  3589,    -1,    -1,    -1,    -1,  3594,    -1,    -1,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1320,    -1,   381,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    56,
      57,    -1,    -1,    -1,    61,    62,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    71,    -1,   433,   434,    -1,    -1,
     437,    -1,   439,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    96,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
     467,    -1,   109,    -1,    -1,   472,   473,  5995,  3706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,
     127,    -1,   489,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3728,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,    -1,    -1,    -1,   155,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   532,    -1,    -1,   175,   176,
     177,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1503,   203,    -1,    -1,  6087,
    3798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   586,
      -1,    -1,    -1,  3821,    -1,    -1,    -1,    -1,   235,    -1,
      -1,    -1,    -1,    -1,   601,    -1,    -1,    -1,  6126,    -1,
      -1,    -1,    -1,   610,    -1,    -1,   613,   614,    -1,    -1,
    6138,    -1,    -1,    -1,    -1,   262,    -1,    -1,    -1,    -1,
      -1,   628,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   665,    -1,
     307,   308,    -1,    -1,    -1,    -1,    -1,   674,    -1,    -1,
      -1,    -1,  3910,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   695,    -1,
     697,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   358,    -1,   360,   361,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     377,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   748,  3980,  3981,    -1,    -1,    -1,    -1,   755,    -1,
      -1,    -1,    -1,    -1,  6282,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   413,   414,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   459,    -1,    -1,    -1,    -1,    -1,    -1,  4057,
      -1,    -1,  4060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4085,  4086,    -1,
      -1,    -1,  4090,   500,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4112,    -1,  4114,    -1,  4116,    -1,
    4118,    -1,    -1,  6411,    -1,    -1,    -1,  6415,    -1,    -1,
      -1,    -1,    -1,    -1,  4132,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4151,  4152,   562,   563,    -1,  4156,    -1,
    4158,    -1,  4160,    -1,    -1,    -1,    -1,  4165,    -1,    -1,
      -1,   578,   579,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1901,    -1,  1903,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4210,   620,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4248,    -1,    -1,  6541,  1962,  1963,    -1,    -1,    -1,    -1,
    1968,    -1,    -1,    -1,  1972,  1973,  1974,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1982,  1983,    -1,    -1,    -1,    -1,
    1988,    -1,    -1,    -1,  1992,  1993,  1994,    -1,  1996,  1997,
    1998,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2007,
      -1,  2009,    -1,    -1,  2012,  2013,  2014,  2015,    -1,  2017,
     717,  2019,  2020,   720,    -1,    -1,   723,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2033,  2034,  2035,  2036,  2037,
      -1,  2039,  2040,  2041,  2042,  2043,  2044,    -1,  2046,  2047,
     747,  2049,  2050,    -1,  2052,  2053,    -1,    -1,  2056,  2057,
    4348,  2059,  2060,    -1,    -1,  2063,    -1,  2065,    -1,  4357,
     767,  2069,  2070,  2071,    -1,    -1,  2074,  2075,  2076,  2077,
      -1,  2079,    -1,  4371,    -1,    -1,  4374,    -1,  2086,    -1,
      -1,    -1,    -1,    -1,  2092,  2093,  2094,  2095,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2103,  2104,    -1,  2106,  2107,
      -1,    -1,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,    -1,    -1,  2125,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4520,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2278,    -1,  2280,    -1,    -1,    -1,    -1,    -1,  4576,  4577,
      -1,  4579,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4592,  4593,  4594,    -1,    -1,    -1,
      -1,    -1,    -1,  2311,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4619,  4620,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4643,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4655,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4664,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2398,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4709,    -1,    -1,    -1,  4713,    -1,    -1,  2426,    -1,
      -1,    -1,    -1,    -1,    -1,  2433,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2470,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     682,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2632,    -1,    -1,    -1,  4926,  4927,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2677,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2685,  2686,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5008,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2739,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5062,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2782,  2783,  2784,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2842,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5141,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2860,    -1,    -1,    -1,  2864,  2865,    -1,  2867,
    2868,    -1,    -1,    -1,  1026,    -1,    -1,    -1,  2876,    -1,
    2878,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1049,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1059,    -1,    -1,
      -1,  2909,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2935,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5244,    -1,  5246,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2971,    -1,    -1,  1128,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2988,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3025,    -1,    -1,
      -1,    -1,    -1,    -1,  3032,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5372,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5423,    -1,    -1,  3136,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1320,    -1,
      -1,    -1,  3170,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3189,    -1,    -1,    -1,    -1,    -1,  3195,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1503,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5693,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5717,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3436,    -1,
      -1,    -1,  3440,  5731,    -1,  3443,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3452,    -1,    -1,    -1,    -1,    -1,
      -1,  5749,    -1,  3461,    -1,  3463,  3464,    -1,  3466,  3467,
    3468,  3469,    -1,  3471,    -1,  3473,  3474,    -1,  3476,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3484,  3485,    -1,    -1,
      -1,  3489,  3490,  3491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3499,  3500,  3501,    -1,  3503,    -1,  3505,    -1,  3507,
      -1,  3509,    -1,  3511,    -1,    -1,    -1,    -1,  3516,  3517,
      -1,  3519,  3520,  3521,    -1,    -1,    -1,  3525,    -1,    -1,
    3528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3537,
      -1,    -1,  3540,    -1,  3542,  3543,  3544,    -1,    -1,  3547,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3569,    -1,  3571,    -1,    -1,  3574,    -1,    -1,    -1,
      -1,    -1,    -1,  5871,    -1,    -1,  3584,  3585,  3586,  3587,
      -1,  3589,    -1,    -1,    -1,    -1,  3594,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5995,  3706,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3728,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1901,
      -1,  1903,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6087,
    3798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1968,    -1,    -1,    -1,
    1972,    -1,  1974,  3821,    -1,    -1,    -1,    -1,    -1,    -1,
    1982,  1983,    -1,    -1,    -1,    -1,  1988,    -1,  6126,    -1,
    1992,  1993,  1994,    -1,  1996,  1997,  1998,    -1,    -1,    -1,
    6138,    -1,    -1,    -1,    -1,  2007,    -1,  2009,    -1,    -1,
    2012,  2013,  2014,  2015,    -1,    -1,    -1,  2019,  2020,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2033,  2034,  2035,  2036,  2037,    -1,  2039,  2040,  2041,
    2042,  2043,    -1,    -1,  2046,  2047,    -1,  2049,  2050,    -1,
    2052,  2053,    -1,    -1,    -1,  2057,    -1,  2059,  2060,    -1,
      -1,  2063,  3910,  2065,    -1,    -1,    -1,  2069,  2070,  2071,
      -1,    -1,  2074,    -1,  2076,  2077,    -1,  2079,    -1,    -1,
      -1,    -1,    -1,    -1,  2086,    -1,    -1,    -1,  6226,    -1,
    2092,  2093,  2094,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3980,  3981,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6282,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2160,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4057,
      -1,    -1,  4060,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4085,  4086,    -1,
      -1,    -1,  4090,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4112,    -1,  4114,    -1,  4116,    -1,
    4118,    -1,    -1,  6411,    -1,    -1,  2278,  6415,  2280,    -1,
      -1,    -1,    -1,    -1,  4132,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4151,  4152,    -1,    -1,    -1,  4156,  2311,
    4158,    -1,  4160,    -1,    -1,    -1,    -1,  4165,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2398,    -1,    -1,    -1,
    4248,    -1,    -1,  6541,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2426,    -1,    -1,    -1,    -1,    -1,
      -1,  2433,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2470,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4348,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4357,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4371,    -1,    -1,  4374,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2632,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4520,    -1,    -1,  2677,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2685,  2686,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4540,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4576,  4577,
      -1,  4579,    -1,    -1,    -1,    -1,    -1,  2739,    -1,    -1,
      -1,    -1,    -1,    -1,  4592,  4593,  4594,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4619,  4620,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2782,  2783,  2784,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4643,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4655,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4664,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2860,    -1,
      -1,  4709,    -1,    -1,    -1,  4713,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2876,    -1,  2878,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2909,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2935,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2971,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2988,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3025,    -1,    -1,    -1,    -1,    -1,    -1,
    3032,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4926,  4927,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5008,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3170,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3189,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5062,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5141,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5244,    -1,  5246,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3436,    -1,    -1,    -1,  3440,    -1,
      -1,  3443,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3461,
      -1,    -1,    -1,    -1,  3466,  3467,  3468,  3469,    -1,  3471,
      -1,  3473,  3474,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3484,  3485,    -1,    -1,    -1,  3489,  3490,  3491,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3499,  3500,  3501,
      -1,  3503,    -1,  3505,    -1,  3507,    -1,  3509,    -1,  3511,
      -1,    -1,    -1,    -1,  3516,  3517,    -1,  3519,    -1,  3521,
      -1,    -1,    -1,  3525,  5372,    -1,  3528,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3540,    -1,
    3542,  3543,  3544,    -1,    -1,  3547,    -1,    -1,    -1,    -1,
      -1,    -1,  5400,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3574,    -1,    -1,  5423,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3585,  3586,    -1,    -1,  3589,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3706,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3728,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3821,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5693,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5717,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5731,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5749,    -1,    -1,    -1,    -1,    -1,    -1,  3910,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3980,  3981,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5871,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4057,    -1,    -1,  4060,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4085,  4086,    -1,    -1,    -1,  4090,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4112,    -1,  4114,    -1,  4116,    -1,  4118,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4132,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5995,    -1,  4151,
    4152,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4165,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4210,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6087,
      -1,    -1,    -1,    -1,    -1,    -1,  4248,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6126,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6138,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4348,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4357,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4371,
      -1,    -1,  4374,    -1,    -1,    -1,    -1,    -1,  6226,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6282,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4520,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4540,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  6411,    -1,    -1,    -1,  6415,    -1,    -1,
      -1,    -1,    -1,    -1,  4576,  4577,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4592,  4593,  4594,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4619,  4620,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4664,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  6541,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4709,    -1,    -1,
      -1,  4713,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4926,  4927,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5008,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5062,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5141,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5244,    -1,  5246,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,   365,   366,   367,   368,   369,
      -1,    -1,    -1,   373,   374,   375,   376,   377,    -1,   379,
     380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,
      -1,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,    -1,   446,    -1,  5400,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,    -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,
     470,  5423,   472,   473,    -1,   475,   476,    -1,    -1,   479,
      -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,    -1,   493,   494,   495,   496,   497,   498,   499,
     500,   501,    -1,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,    -1,    -1,    -1,   589,
      -1,   591,   592,    -1,   594,   595,   596,   597,    -1,   599,
     600,   601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,    -1,   634,    -1,   636,   637,   638,    -1,
     640,   641,    -1,   643,   644,   645,   646,   647,   648,    -1,
     650,   651,   652,   653,   654,   655,   656,    -1,   658,   659,
     660,    -1,   662,   663,   664,   665,   666,    -1,   668,   669,
      -1,    -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,
     680,    -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,    -1,   694,   695,    -1,   697,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,    -1,
      -1,   731,    -1,   733,   734,   735,   736,    -1,    -1,   739,
     740,  5693,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,    -1,
     760,   761,    -1,    -1,   764,    -1,   766,   767,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5731,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5749,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5995,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,     3,    -1,    -1,    -1,    -1,     8,
       9,    -1,    -1,    -1,    -1,    -1,  6138,    -1,    -1,    -1,
      19,    20,    -1,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,  6226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,   255,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6411,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,   306,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,   316,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,  6541,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      64,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,   163,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   289,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,   204,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,   313,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,   143,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,   143,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,   183,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
      -1,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,    -1,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,    -1,     8,
      -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,    -1,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,   122,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,     3,   764,   765,   766,   767,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,     3,   764,   765,   766,   767,     8,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     789,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,     8,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,     8,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,     8,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,     5,    -1,     7,     8,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    48,    49,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    66,    -1,    68,    -1,    70,
      -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    98,    -1,    -1,
     101,    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,   110,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
     131,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
     141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   150,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     171,    -1,    -1,   174,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   205,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   217,   218,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   228,   229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   240,
     241,   242,    -1,   244,    -1,    -1,    -1,    -1,   249,    -1,
      -1,    -1,    -1,    -1,   255,    -1,    -1,    -1,   259,   260,
     261,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,   299,    -1,
      -1,    -1,    -1,    -1,    -1,   306,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,   316,    -1,    -1,    -1,   320,
     321,   322,    -1,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,    -1,
     371,   372,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
      -1,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,    -1,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,    -1,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,    -1,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,    -1,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,     5,    -1,    -1,
       8,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,   788,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      48,    49,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    66,    -1,
      68,    -1,    70,    -1,    72,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    80,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      98,    -1,    -1,   101,    -1,   103,   104,    -1,    -1,    -1,
      -1,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   127,
      -1,    -1,    -1,   131,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,   141,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   161,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   171,    -1,    -1,   174,    -1,    -1,    -1,
     178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   205,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   217,
     218,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     228,   229,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   240,   241,   242,    -1,   244,    -1,    -1,    -1,
      -1,   249,    -1,    -1,    -1,    -1,    -1,   255,    -1,    -1,
      -1,   259,   260,   261,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
      -1,   299,    -1,    -1,    -1,    -1,    -1,    -1,   306,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,   316,    -1,
      -1,    -1,   320,   321,   322,    -1,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,    -1,   371,   372,   373,   374,   375,   376,   377,
      -1,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,    -1,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,    -1,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,    -1,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,    -1,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,    -1,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,    -1,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,    -1,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
       5,    -1,    -1,     8,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,    -1,
     788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    48,    49,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    66,    -1,    -1,    -1,    70,    -1,    72,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,    -1,   103,   104,
      -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   161,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   171,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     205,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   217,   218,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   228,   229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   240,   241,    -1,    -1,   244,
      -1,    -1,    -1,    -1,   249,    -1,    -1,    -1,    -1,    -1,
     255,    -1,    -1,    -1,   259,   260,   261,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,    -1,   299,    -1,    -1,    -1,    -1,    -1,
      -1,   306,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   316,    -1,    -1,    -1,   320,   321,   322,    -1,   324,
     325,   326,   327,   328,   329,   330,    -1,   332,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,    -1,   371,   372,   373,   374,
     375,   376,   377,    -1,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,    -1,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,    -1,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,    -1,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,    -1,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,    -1,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   788,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    75,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,   145,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   160,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   263,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   312,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   255,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   306,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   316,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     788,    -1,    -1,    -1,    -1,   793,    -1,    -1,   796,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   788,
      -1,    -1,    -1,    -1,   793,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   788,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    85,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,    -1,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    74,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,     3,   764,   765,   766,   767,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
       8,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      28,    -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   252,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
       8,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      28,    -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   252,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
       8,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      28,    -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   252,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
       8,     9,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      28,    -1,    30,    -1,    32,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    26,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,   197,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   266,    -1,   268,    -1,   270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,   777,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    21,   771,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    42,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,   771,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,    46,    47,
      48,    49,    50,    51,    52,    53,    54,    55,    56,    57,
      58,    59,    60,    61,    62,    63,    64,    65,    66,    67,
      68,    69,    70,    71,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    95,    96,    97,
      98,    99,   100,   101,   102,   103,   104,   105,   106,   107,
     108,   109,   110,   111,   112,   113,   114,   115,   116,   117,
     118,   119,   120,   121,   122,   123,   124,   125,   126,    -1,
     128,   129,   130,   131,   132,    -1,    -1,   135,   136,   137,
     138,   139,   140,   141,   142,   143,   144,   145,   146,   147,
      -1,   149,   150,    -1,   152,   153,   154,   155,   156,   157,
     158,   159,   160,   161,   162,   163,   164,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,   182,   183,   184,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,    -1,   214,   215,   216,   217,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
     278,   279,    -1,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   320,   321,   322,    -1,   324,   325,   326,   327,
     328,   329,   330,    -1,   332,   333,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,    -1,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,    -1,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,    -1,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,    -1,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,    -1,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,    -1,   665,   666,   667,
     668,   669,   670,    -1,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,    -1,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    56,    57,    58,
      59,    60,    61,    62,    63,    64,    65,    66,    67,    68,
      69,    70,    71,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    95,    96,    97,    98,
      99,   100,   101,   102,   103,   104,   105,   106,   107,   108,
     109,   110,   111,   112,   113,   114,   115,   116,   117,   118,
     119,   120,   121,   122,   123,   124,   125,   126,    -1,   128,
     129,   130,   131,   132,    -1,    -1,   135,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,    -1,
     149,   150,    -1,   152,   153,   154,   155,   156,   157,   158,
     159,   160,   161,   162,   163,   164,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,   182,   183,   184,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,    -1,   214,   215,   216,   217,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,   278,
     279,    -1,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,   320,   321,   322,    -1,   324,   325,   326,   327,   328,
     329,   330,    -1,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,    -1,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,    -1,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,    -1,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,    -1,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
      -1,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,    -1,   665,   666,   667,   668,
     669,   670,    -1,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,    -1,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,    -1,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    45,    46,    47,    48,    49,
      50,    51,    52,    53,    54,    55,    56,    57,    58,    59,
      60,    61,    62,    63,    64,    65,    66,    67,    68,    69,
      70,    71,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    89,
      90,    91,    92,    93,    94,    95,    96,    97,    98,    99,
     100,   101,   102,   103,   104,   105,   106,   107,   108,   109,
     110,   111,   112,   113,   114,   115,   116,   117,   118,   119,
     120,   121,   122,   123,   124,   125,   126,    -1,   128,   129,
     130,   131,   132,    -1,    -1,   135,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,    -1,   149,
     150,    -1,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,   182,   183,   184,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,    -1,   214,   215,   216,   217,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,   278,   279,
      -1,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     320,   321,   322,    -1,   324,   325,   326,   327,   328,   329,
     330,    -1,   332,   333,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,    -1,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,    -1,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,    -1,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,    -1,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,    -1,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,    -1,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,    -1,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
      -1,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,    -1,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,    -1,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,    -1,   149,   150,
      -1,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,   182,   183,   184,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,    -1,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,    -1,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,    -1,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,    -1,   665,   666,   667,   668,   669,   670,
      -1,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,    -1,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    45,    46,    47,    48,    49,    50,    51,
      52,    53,    54,    55,    56,    57,    58,    59,    60,    61,
      62,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    89,    90,    91,
      92,    93,    94,    95,    96,    97,    98,    99,   100,   101,
     102,   103,   104,   105,   106,   107,   108,   109,   110,   111,
     112,   113,   114,   115,   116,   117,   118,   119,   120,   121,
     122,   123,   124,   125,   126,    -1,   128,   129,   130,   131,
     132,    -1,    -1,   135,   136,   137,   138,   139,   140,   141,
     142,   143,   144,   145,   146,   147,    -1,   149,   150,    -1,
     152,   153,   154,   155,   156,   157,   158,   159,   160,   161,
     162,   163,   164,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,    -1,   214,   215,   216,   217,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,   278,   279,    -1,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,   330,    -1,
     332,   333,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,    -1,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,    -1,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,    -1,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,    -1,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,    -1,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,    -1,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,    -1,   665,   666,   667,   668,   669,   670,    -1,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,    -1,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,    -1,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,    -1,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,    -1,   149,   150,    -1,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
      -1,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,    -1,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
      -1,   324,   325,   326,   327,   328,   329,   330,    -1,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,    -1,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,    -1,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,    -1,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,    -1,   665,   666,   667,   668,   669,   670,    -1,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,    -1,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    48,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,
      84,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,   145,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     174,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,
      -1,    -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   255,    -1,    -1,    -1,   259,   260,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,
      -1,    -1,    -1,   297,   298,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    48,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    80,    -1,    -1,    -1,    84,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   101,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   131,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
     145,    -1,    -1,    -1,    -1,   150,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,
      -1,    -1,   237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     255,    -1,    -1,    -1,   259,   260,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,
      -1,    -1,   297,   298,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    24,    25,
      26,    -1,    28,    -1,    30,    31,    32,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    85,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    23,    -1,    -1,    26,    27,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    85,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    84,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     259,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    76,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    86,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,    -1,   324,   325,   326,   327,   328,   329,   330,
      -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   128,    -1,    -1,    -1,
      -1,    -1,    -1,   135,   136,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   128,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    30,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
      -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,    -1,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,    -1,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,    -1,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,    -1,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,    -1,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,    -1,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    86,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,    -1,   324,   325,   326,
     327,   328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,    -1,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
      -1,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,    -1,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,    -1,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,    -1,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,    -1,   324,   325,   326,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
      -1,   371,   372,   373,   374,   375,   376,   377,    -1,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,    -1,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,    -1,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,    -1,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,    -1,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,    -1,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,    -1,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,    -1,
     650,   651,   652,   653,   654,   655,   656,    -1,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
      -1,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,    19,
      20,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,   365,   366,   367,   368,   369,
      -1,    -1,    -1,   373,   374,   375,   376,   377,    -1,   379,
     380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,
      -1,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,    -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,
     470,    -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,
      -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,    -1,   493,   494,   495,   496,   497,   498,   499,
     500,   501,    -1,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,    -1,    -1,    -1,   589,
      -1,   591,   592,    -1,   594,   595,   596,   597,    -1,   599,
     600,   601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,    -1,   634,    -1,   636,   637,   638,    -1,
     640,   641,    -1,   643,   644,   645,   646,   647,   648,    -1,
     650,   651,   652,   653,   654,   655,   656,    -1,   658,   659,
     660,    -1,   662,   663,   664,   665,   666,    -1,   668,   669,
      -1,    -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,
     680,    -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,    -1,   694,   695,    -1,   697,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,    19,
      20,   731,    -1,   733,   734,   735,   736,    -1,    -1,   739,
     740,    -1,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    -1,    -1,
     760,   761,    -1,    -1,   764,    -1,   766,   767,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,    -1,   327,   328,   329,
     330,    -1,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,    -1,    -1,    -1,    -1,   358,   359,
     360,   361,   362,    -1,    -1,   365,   366,   367,   368,   369,
      -1,    -1,    -1,   373,   374,   375,   376,   377,    -1,   379,
     380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,
      -1,   391,    -1,   393,   394,   395,   396,   397,   398,   399,
     400,   401,    -1,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,    -1,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
     430,    -1,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,    -1,    -1,    -1,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
      -1,    -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,
     470,    -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,
      -1,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,    -1,   493,   494,   495,   496,   497,   498,   499,
     500,   501,    -1,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,    -1,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,    -1,    -1,    -1,   589,
      -1,   591,   592,    -1,   594,   595,   596,   597,    -1,   599,
     600,   601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,    -1,   634,    -1,   636,   637,   638,    -1,
     640,   641,    -1,   643,   644,   645,   646,   647,   648,    -1,
     650,   651,   652,   653,   654,   655,   656,    -1,   658,   659,
     660,    -1,   662,   663,   664,   665,   666,    -1,   668,   669,
      -1,    -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,
     680,    -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,    -1,   694,   695,    -1,   697,    -1,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,    -1,
     720,   721,   722,   723,   724,   725,   726,   727,   728,    -1,
      -1,   731,    -1,   733,   734,   735,   736,    -1,    -1,   739,
     740,    -1,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,    19,    20,
     760,   761,    -1,    -1,   764,    -1,   766,   767,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    -1,    57,    58,    59,    60,
      -1,    -1,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    89,    90,
      91,    92,    93,    94,    95,    96,    97,    98,    99,   100,
     101,   102,   103,   104,   105,   106,   107,   108,   109,   110,
     111,   112,   113,   114,   115,   116,   117,   118,   119,   120,
     121,   122,   123,   124,   125,   126,    -1,   128,   129,   130,
     131,   132,    -1,    -1,   135,   136,   137,   138,   139,   140,
     141,   142,   143,   144,   145,   146,   147,    -1,   149,   150,
      -1,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,    -1,    -1,    -1,   178,   179,   180,
     181,   182,   183,   184,    -1,    -1,    -1,   188,   189,   190,
     191,   192,   193,   194,   195,   196,   197,   198,   199,   200,
     201,   202,    -1,   204,   205,   206,   207,   208,   209,   210,
     211,   212,    -1,   214,   215,   216,   217,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,    -1,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,    -1,   260,
     261,    -1,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,   278,   279,    -1,
     281,   282,   283,   284,    -1,    -1,    -1,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,    -1,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,   320,
     321,   322,    -1,   324,   325,   326,   327,   328,   329,   330,
      -1,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,    -1,   359,    -1,
      -1,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,    -1,    -1,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,    -1,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,    -1,   460,
     461,   462,    -1,   464,   465,   466,    -1,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,    -1,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,    -1,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,    -1,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,    -1,    -1,    -1,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,    -1,    -1,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,    -1,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,    -1,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,    -1,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,    -1,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,    -1,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,   759,   760,
     761,   762,    -1,   764,   765,   766,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   227,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
      -1,   324,   325,   326,   327,   328,   329,   330,    -1,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,    -1,   359,    -1,    -1,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,    -1,    -1,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
      -1,    -1,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,    -1,   432,
     433,   434,    -1,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,    -1,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,    -1,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,    -1,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,    -1,
      -1,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,    -1,    -1,    -1,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,    -1,    -1,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
      -1,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,    -1,   665,   666,   667,   668,   669,   670,    -1,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,    -1,   718,   719,    -1,   721,   722,
      -1,   724,   725,   726,   727,   728,   729,    -1,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,    -1,    -1,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,     5,     7,     8,    19,    20,    48,    49,    66,    68,
      70,    72,    80,    88,    98,   101,   103,   104,   110,   116,
     127,   131,   135,   141,   150,   161,   171,   174,   178,   196,
     205,   208,   217,   218,   219,   228,   229,   240,   241,   242,
     244,   249,   255,   259,   260,   261,   295,   297,   299,   306,
     315,   316,   320,   321,   322,   324,   325,   326,   327,   328,
     329,   330,   332,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   371,   372,
     373,   374,   375,   376,   377,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   462,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   573,   574,   575,
     576,   577,   578,   579,   580,   582,   583,   584,   585,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,   686,   687,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
     764,   765,   766,   767,   788,   798,   801,   802,   803,   804,
     805,   807,   813,   815,   830,   873,   880,   928,   929,   936,
     937,   951,   986,  1011,  1029,  1091,  1146,  1248,  1302,  1305,
    1315,  1320,  1326,  1339,  1342,  1348,  1351,  1356,  1363,  1375,
    1378,  1381,  1382,  1384,  1387,  1388,  1390,  1391,  1394,  1395,
    1398,  1644,  1646,  1659,  1662,  1700,  1709,  1727,  1735,  1749,
    1753,  1754,  1758,  1759,  1769,  1776,  1784,  1786,  1792,  1795,
    1796,  1828,  1850,  1872,  1875,  1876,  1877,  1878,  1879,  1880,
    1881,  1883,  1925,  1932,  1934,  1943,  1946,  1982,  1984,  1989,
    1990,  1991,  1992,  2022,  2031,  2032,  2033,  2035,  2067,  2069,
    2070,  2117,  2134,  2140,   144,   323,   354,   356,   357,   364,
     370,   372,   378,   392,   402,   416,   426,   431,   445,   460,
     461,   467,   471,   474,   477,   492,   502,   572,   586,   604,
     606,   635,   639,   649,   657,   670,   693,   696,   729,   730,
     738,   758,   765,  1850,  1852,  1861,  1868,  1872,  1873,  1874,
    1875,  1876,  1877,  1878,  1881,  2051,    88,   227,   342,   417,
     467,   662,   667,   742,  1249,  1996,  1997,  1998,  1999,   198,
     464,   510,  1350,  1756,  1861,   987,   532,  1343,   209,  2142,
    1710,    88,   145,   215,   227,   290,   327,   440,   467,   648,
     667,   715,   742,   751,   870,   871,   872,  1658,  1014,   868,
     952,  1660,  1787,   145,   412,   766,  1801,   282,   711,  1928,
    1012,  1350,  1147,  1030,    57,   532,  1741,   259,   268,   925,
     930,   932,  1861,   657,   742,  1928,  1016,   930,   931,   868,
    1385,  1884,  1736,   930,  1933,  1701,  1861,  1383,  1013,   236,
    1830,  1663,   174,   295,   691,  1770,  1983,    40,   197,  1436,
    2034,  2139,     3,    31,  1855,   145,  1928,   761,  1986,  1645,
     486,  1861,  1350,   407,   939,  1935,   814,   602,   681,  1861,
    1350,  1777,  1986,  1861,  1793,    47,   674,   724,    47,   674,
    1728,   602,   681,   355,   356,   392,   431,   606,   623,   649,
     693,  2025,  1384,  1391,  1394,     0,     7,   799,   606,    88,
     129,   145,   263,   294,   312,   648,   742,   847,  1225,  1226,
    1658,  1996,  1997,  1998,  1999,   128,   154,  1401,  1402,  1640,
    1379,  1376,   119,   152,   293,  1393,  1993,  1392,  1993,   452,
     464,   595,   796,  1755,  1756,  1847,  1861,  1388,  1390,    42,
     796,   796,   390,  1268,  1861,   874,  1861,   771,   771,   874,
     141,  1657,    21,  1855,  1861,  1863,  1657,  1294,  1295,   269,
    1419,  2000,  2001,  1996,   771,  1928,  1375,  1378,  1659,  1662,
    1700,  1709,  1752,   796,   881,   313,   967,   968,   988,   991,
     994,   826,   827,  1855,   751,  1340,  1928,   332,    76,    77,
      86,   144,   447,   448,   730,   758,   912,   913,   915,   921,
     949,   950,  1852,  1872,  1873,  1874,  1875,  1876,  1881,  2034,
    2053,  2067,  2068,  2108,  2124,  2125,  2127,  2128,  2130,   143,
     179,   479,   618,  1712,  1725,  1726,  1657,  1648,    63,  1657,
     320,  1657,  1657,  1657,  1657,  1657,  1657,   662,  1928,   999,
    1852,  2055,  2068,    47,    48,    80,    84,   101,   110,   131,
     145,   150,   174,   233,   237,   255,   259,   260,   290,   297,
     298,   357,   397,   440,   445,   456,   457,   611,   615,   621,
     632,   638,   670,   674,   705,  1863,  1947,  1951,  1952,  1953,
    1955,  1957,  1958,  1959,  1960,   967,   982,  1665,   475,   680,
    1788,   154,  1797,  1926,    43,    77,   123,   130,   157,   165,
     202,   247,   248,   378,   448,   586,   903,   951,   953,   954,
     955,   956,   958,   961,   964,   965,   966,   976,   977,   978,
     979,   980,   986,  1001,  1004,  1011,  2060,  2061,  2074,  2075,
    2132,  2133,  2135,  2140,  1928,     3,     8,     9,    19,    20,
      22,    23,    24,    25,    26,    27,    28,    29,    30,    31,
      32,    40,    57,    58,    59,    60,    68,    69,    71,    78,
      79,    82,    83,    84,    85,    87,    90,    91,    99,   102,
     120,   121,   122,   124,   132,   133,   134,   141,   150,   153,
     162,   164,   166,   172,   181,   182,   184,   188,   193,   197,
     199,   200,   201,   202,   220,   221,   222,   224,   231,   242,
     250,   251,   269,   276,   277,   279,   280,   291,   301,   302,
     303,   309,   310,   331,   332,   333,   334,   338,   345,   353,
     370,   383,   385,   386,   387,   402,   414,   415,   470,   482,
     504,   505,   550,   556,   565,   566,   589,   597,   609,   653,
     660,   666,   668,   701,   720,   721,   722,   723,   728,   729,
     742,   745,   757,   759,   767,   776,   777,   782,   788,   792,
     793,   796,  1394,  1400,  1430,  1431,  1432,  1433,  1437,  1448,
    1452,  1453,  1454,  1455,  1456,  1457,  1458,  1462,  1463,  1464,
    1472,  1478,  1479,  1480,  1481,  1482,  1484,  1487,  1820,  1823,
    1825,  1826,  1827,  1844,  1851,  1853,  1854,  1861,  1868,  1879,
    1880,    65,  1031,   514,   251,   366,   374,   389,   399,   400,
     401,   409,   547,   559,   659,   700,   714,   933,   935,   745,
     926,   932,  1861,   868,  1657,   903,  1002,   932,    47,   337,
     615,  1944,  1945,  1953,  1955,    47,   106,   265,   267,   278,
     294,   478,   686,   687,   688,   689,  1404,  1411,  1412,  1995,
       3,    71,    99,   144,   323,   370,   467,   472,   510,   560,
     581,   597,   648,   665,   694,   724,   758,  1190,  1850,  1859,
    1870,  1872,  1873,  1874,  1876,  1877,  1878,  1881,  1885,  1895,
    1906,  2051,    47,    49,    79,    80,    89,   145,   159,   215,
     227,   282,   327,   348,   357,   370,   381,   404,   434,   437,
     439,   466,   467,   472,   473,   489,   510,   532,   586,   601,
     610,   613,   614,   628,   665,   674,   697,   755,  1190,  1224,
    1737,  1741,  1742,  1744,  1753,  1852,  1896,   932,  1928,   179,
    1708,   788,  1679,  1688,   967,  2057,  1829,  1665,  1771,  1861,
    1986,   347,  2141,  1863,  1357,  1316,    50,  1987,  1430,  1503,
     808,   300,   810,  1760,   421,  1847,  1849,  1861,  1936,  1863,
     141,  1090,  1855,   128,  1321,   532,   617,   674,  1778,  1779,
     288,  1987,   754,  1794,   675,   826,   233,   316,  1306,  1307,
    1308,   675,   826,   282,  1730,  1657,  1657,    23,    26,    27,
      31,  1821,  1822,  1856,  2024,  2024,  2024,   464,  2023,  2024,
    2024,   789,   789,   795,  1861,  1090,  1090,   145,  1090,  1090,
     667,   852,   145,   145,   282,   662,   227,   290,   440,   871,
     872,  2000,   341,   869,   869,  1996,   111,   135,   788,   793,
    1400,  1403,  1508,  1510,  1523,  1526,  1527,  1528,  1539,  1540,
    1541,  1542,  1544,  1545,  1547,  1847,   212,   427,  1635,  1636,
    1641,   314,  1570,  1401,   123,   127,   168,   174,   207,   581,
    1413,  1595,  1600,  1601,  1610,  1611,  1616,   227,  1614,  1630,
    1640,    47,   106,  1994,  1994,  1994,  1610,  1612,  1394,  1397,
    1398,  1611,  1613,  1396,    47,  1861,  1751,   127,  1750,   796,
    1380,  1377,  2071,  1861,  1861,    42,   771,  1682,  1683,  1251,
     741,  1253,   796,   546,   716,   734,    85,  1863,  1864,  1865,
    1951,  1254,   120,  1259,  1258,   868,   282,   143,   585,  1296,
    1297,  1298,   661,   440,   751,  2000,  1863,  1327,  1861,   788,
     884,   967,   989,  1422,   114,   996,   994,   288,  1341,  1651,
    1652,  1847,  2068,  2068,    45,    46,    47,    48,    49,    50,
      51,    52,    53,    54,    55,    56,    57,    58,    59,    60,
      61,    62,    63,    64,    65,    66,    67,    68,    69,    70,
      71,    72,    73,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    87,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   128,   129,   130,   131,   132,   136,   137,   138,
     139,   140,   141,   142,   143,   144,   145,   146,   147,   149,
     150,   152,   153,   154,   155,   156,   157,   158,   159,   160,
     161,   162,   163,   164,   165,   166,   167,   168,   169,   170,
     171,   173,   174,   175,   176,   177,   178,   179,   180,   181,
     182,   183,   184,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   209,   210,   211,   212,   214,
     215,   216,   217,   218,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,   332,   333,   334,   358,   360,   361,   377,   413,
     414,   435,   459,   500,   562,   563,   578,   579,   581,   620,
     653,   717,   720,   723,   747,   758,   767,   904,   949,  1154,
    1155,  1157,  1158,  1160,  1161,  1162,  1163,  1164,  1165,  1166,
    1167,  1168,  1169,  1852,  1871,  1872,  1873,  1874,  1875,  1876,
    1881,  1882,  2050,  2051,   795,   474,   791,    74,   323,  2143,
    2126,  2130,   915,   795,   128,  1714,   128,  1654,  1655,  1714,
    1715,  1716,  1848,  1861,  1725,  1861,   141,  1656,   874,   874,
     868,  1863,   868,  1649,  1861,  1657,  1657,  1015,   151,  1000,
     610,  1956,   651,   651,   712,   715,   742,   751,   788,  1428,
     479,   588,   711,   584,   742,    80,    89,   751,   337,   555,
     637,   337,   337,   204,   337,   375,   532,   674,   555,   288,
     204,   791,   788,   284,   431,   179,   418,   478,  1667,  1669,
     397,   617,  1789,  1790,   364,   179,   396,  1803,  1847,  1929,
    1930,   144,   323,   395,   467,  1852,  1862,  1875,  1876,  1877,
    1881,  2052,   313,  1862,   128,   136,   565,  1861,  1862,  1862,
    1862,  1861,   313,  1862,  1861,   431,  2132,  2035,  2036,  2069,
     967,   981,  1861,   127,   178,   242,   315,    98,   356,  2075,
    2133,   795,  1349,  1488,    19,    20,    30,  1851,  1868,    31,
    1822,   153,   776,   777,  1455,   788,   788,   788,   313,  1430,
    1506,  1507,   788,   788,   788,   788,   788,  1428,  1428,  1428,
     788,  1427,   788,   788,   788,   788,   788,   788,   788,   788,
     788,   788,   788,   788,   788,  1430,   788,   788,   788,  1427,
       8,   788,  1504,  1505,  1844,  1851,   788,   788,   788,   788,
    1430,  1427,   788,   788,   788,   788,   788,   788,   788,   788,
     788,   788,    15,   788,   788,   788,   788,  1428,  1427,  1427,
     788,   788,  1428,   788,   788,   788,   788,   788,   788,   788,
     788,   788,   788,   788,   788,    31,   788,   788,   788,   788,
     788,   788,   788,   788,   745,   788,   788,   788,   745,   788,
     788,   788,   788,   788,    31,   788,   788,   788,    31,   788,
     788,   788,   788,   788,   788,   788,   788,   153,  1455,   153,
    1455,  1455,  1148,  1394,  1430,  1828,  1861,  1851,    33,    41,
      50,   209,   317,  1434,  1435,    35,    36,    37,    39,   156,
     771,   772,   773,  1438,    55,   151,   167,   239,   682,  1436,
      14,    43,    44,   107,   193,   774,   775,   776,   777,   778,
     779,   780,   781,  1455,    73,    38,   214,   214,   759,  1856,
     796,   788,    15,  1032,    54,   288,   791,   771,  1856,  1353,
    1864,  1866,  1352,   740,  1956,   588,   204,   128,   204,  1386,
    1412,     3,  1863,   259,   648,   796,    57,    99,  1191,  1192,
    1682,  1863,   127,  1682,  1682,  1952,    99,  1851,  1889,  1898,
    1886,    57,    99,  1194,  1195,  1863,   796,  1682,  1887,   791,
     675,  1756,   788,    88,   215,   227,   282,   290,   327,   440,
     467,   662,   667,   742,   751,   167,   314,  1748,    63,   695,
     380,   695,   695,   320,   695,   439,   695,  1748,    47,  1105,
    1863,  1599,  1600,  1605,   128,   151,  1743,  1745,   380,   695,
     127,   695,   711,   681,    47,   359,   403,   405,   495,   545,
     592,   683,   707,  1731,  1732,  1733,   826,   481,   826,  1605,
    1748,  1745,   514,   433,   382,   612,   711,   727,  1756,  1418,
     695,   748,   143,  1293,  1689,   791,   178,  1831,  1833,  1839,
    1861,  1668,  1669,  1847,  2086,  2144,   791,  1358,  1359,  1360,
    1361,  1847,  1651,   367,   572,   240,   572,  1988,   791,  1430,
     811,    57,   271,   420,   434,   436,   468,   472,   481,   514,
     532,   610,   617,   627,   641,   665,   674,   677,   695,   726,
    1761,  1766,  1767,  1852,  1928,   938,   586,   233,   378,  1436,
    1861,   806,   751,  1318,  1928,  1781,   364,  1780,   791,   657,
    1861,  1988,   127,  1309,  1310,  1309,   584,   763,   398,   791,
    1309,  1309,  1652,  1861,  1855,   791,   583,  2027,   706,  2028,
     771,   158,   643,  2026,     7,   800,  1861,   834,  1090,   868,
     868,  1090,   838,   840,  1090,  1090,  1090,   845,   846,  1090,
    1090,   751,   467,   467,  2000,   788,  1508,  1528,  1540,  1541,
    1542,  1543,  1544,  1861,    10,  1409,    81,   147,   158,   166,
     194,   250,   278,  1535,  1536,   791,   218,  1537,  1538,    31,
    1857,  1857,     3,  1637,  1638,  1639,  1861,  1863,  1571,   136,
    1574,  1570,   458,   565,  1602,   297,     8,    28,    30,    32,
     252,  1606,  1607,  1823,  1851,   151,    65,  1607,  1599,  1413,
    1861,  1413,  1414,  1414,  1397,  1752,   397,  1757,  1821,  1861,
    1861,  1611,  1614,  1421,  1923,    42,    42,  1855,    99,   390,
    1087,  1088,  1102,  1103,  1198,   412,   875,  1861,  1428,     3,
     875,  1847,   587,  1864,  1865,  1866,  1966,  1970,  1657,  1298,
     417,   493,   874,  1847,   751,  1328,  1329,  1652,   796,   882,
     885,   995,   313,   990,   992,  1430,  2041,  2065,  2066,   431,
     816,  1651,   127,   368,   452,   454,   544,   618,   791,  1344,
    1345,  1346,  2131,   156,   788,  1175,  1176,  1178,  1178,   395,
    1176,  1184,  1186,   788,  1171,  1172,  1176,   225,  1171,  1184,
      57,    71,    73,   307,   345,   363,   737,  1159,  1164,  1166,
    1186,  1190,  1199,  1201,  1159,  1184,  1159,  1171,   788,  1184,
    1159,  1178,  1178,  1159,  1178,   788,  1171,  1184,    71,   308,
     308,   311,  1171,  1178,   788,   907,  1178,  1178,  1178,  1178,
    1178,    15,   796,  1171,   914,   311,  1178,  1178,  1178,  1178,
    1178,   788,  1172,  1180,   127,  1861,   127,   356,  2034,  2128,
    2129,   795,   795,  1847,    54,  1711,  1654,  1861,   791,  1718,
     127,  1407,  1408,  1570,   796,  1724,   120,  1861,  1950,  1953,
    1866,  1965,  1651,   796,  1650,  1647,   178,  2059,   647,   998,
     711,   789,   337,   651,  1866,   337,   337,  1966,   282,   870,
    1954,   357,   397,   440,   445,   456,   457,   611,   621,   632,
     638,   670,   674,   705,  1958,  1960,  1837,  1838,  1851,   983,
     141,  1293,   483,   742,  1430,  1791,  1791,  1364,   510,  1802,
      53,   771,  1566,  1567,  1568,   576,   754,   791,  1927,    44,
     967,   313,  1861,   565,   128,   154,   967,   313,   788,   975,
     178,   795,   796,  2037,   957,   791,  1007,  1005,  1010,  1006,
    2137,  2136,  1651,     3,  1489,  1863,   796,   788,    47,  1497,
    1569,  1497,  1497,  1430,  1507,   114,   313,   431,  1430,  1503,
    1430,   106,  1497,  1569,   789,    24,    25,    26,    28,    30,
      32,   789,  1620,  1626,  1627,  1430,  1430,  1844,   789,  1389,
    1390,  1399,  1828,    92,    93,    94,    95,   138,   139,   140,
     190,   191,   254,   318,   415,   482,   548,   550,   556,   616,
     660,   756,   767,  1563,  1564,  1430,   106,  1490,  1490,  1477,
    1430,  1430,  1430,  1563,  1430,  1430,  1430,  1851,  1505,   340,
     791,   796,   106,  1497,  1430,   106,  1497,  1430,  1430,  1430,
    1430,  1430,   789,  1433,   789,  1430,  1430,   789,   652,  1497,
    1497,   106,  1497,   789,  1620,  1497,  1497,  1430,  1430,  1459,
    1460,  1461,    64,   163,   289,  1430,  1449,  1450,  1451,  1430,
    1430,   106,  1497,  1430,  1430,  1430,  1445,  1446,  1430,  1430,
    1502,  1503,  1430,  1430,   413,   414,   720,   723,  1565,  1430,
    1430,  1503,  1847,  1430,  1430,   127,  1847,  1502,  1430,   127,
    1430,  1430,   789,  1847,  1430,  1430,  1564,  1564,  1430,  1449,
    1430,   789,     8,   796,  1845,  1861,  1430,  1502,  1430,  1430,
    1430,   789,   791,  1390,  1430,   796,  1430,  1430,  1430,  1432,
     122,   202,   291,   739,  1436,    47,   344,  1432,  1439,  1432,
     788,  1400,  1432,  1432,   167,    55,   151,   167,   239,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,   153,  1433,   153,  1433,
    1433,  1433,  1433,  1433,  1196,  1863,  1455,   788,  1486,  1580,
    1861,   788,   136,   332,   333,   334,  1851,  1465,   465,   497,
     571,   652,  1447,   169,   230,   509,   710,  1033,  1037,  1785,
    1855,   935,   414,   720,   723,   934,  1487,  1825,  1844,   791,
     288,  1354,  1355,  1847,   967,   791,   127,  1866,  1865,  1967,
     870,  1954,   778,  1416,  1417,  1419,   472,   510,   665,  1897,
    1682,  1953,  1861,    73,  1430,  1916,  1915,  1914,   796,   796,
    1682,   791,  1888,   233,   496,  1917,  1918,  1919,  1920,  1861,
    1907,    99,   724,  1851,  1890,  1902,  1892,  1893,  1895,  1906,
     695,   127,   778,  1090,    63,   874,   874,  1847,   874,   320,
     874,   874,   874,  1847,  1863,  1866,  1847,  1418,  1418,   380,
     695,  1748,   874,  1748,  1743,   380,   695,  1748,   151,  1746,
     514,   557,   695,  1740,  1740,  1748,  1861,   874,  1748,  1865,
    1743,  1748,  1855,   494,   708,   455,   127,  1734,   791,   439,
     695,  1847,  1745,  1743,  1743,   127,  1748,  1748,  1748,  1510,
    1699,  1847,  1419,  1691,  1693,   788,  1686,  2058,   791,   788,
    1832,  1836,   154,  1670,   902,   431,     3,   151,   791,   218,
    1369,  1371,  1372,   452,   618,  1317,   367,   240,  1430,   809,
      99,   143,   812,  1430,  1694,  1695,   514,   514,   514,   514,
     695,   364,   514,   695,   826,   514,   791,  1418,  1762,     3,
      74,   940,   941,   942,   943,  1851,  1567,  1937,   120,   681,
    1430,  1319,  1651,   288,  1783,   826,  1779,  1861,    47,  1304,
     631,   690,  1311,  1312,   127,   828,   829,   678,  1308,   828,
    1927,  1821,   600,  2029,  1863,   842,  1861,   836,  1950,  1966,
    1863,  1090,  1090,   831,  1847,  2118,  1419,  2011,   856,  1419,
     874,   874,  1090,  1090,  1090,   751,  1524,   791,   789,   789,
     789,   789,   789,   791,   789,  1508,    47,    53,    55,   128,
    1410,  1568,   158,   158,   211,  1548,   166,   250,  1535,  1548,
    1508,  1526,   788,  1409,  1642,  1863,   791,   796,  1429,  1430,
      65,   137,  1572,  1574,   252,   653,  1603,  1607,   576,   673,
     754,  1415,  1851,   443,   252,   581,   791,   796,   669,  1596,
     653,  1603,  1631,  1430,    47,    57,    99,   204,  1430,  1924,
    2072,  2073,  1252,  1683,  1088,    73,  1190,   422,   192,   232,
     269,   390,   402,   502,   572,   877,   879,  1666,  1863,  1666,
    1260,   788,   484,   243,   791,  1974,  1847,  1257,  1256,  1847,
     791,   599,  1330,  1861,   884,   886,   887,  1430,   284,   967,
     992,  1420,   903,    68,   108,   142,   180,   485,   515,   516,
     518,   519,   520,   521,   522,   524,   525,   526,   527,   528,
     529,   530,   531,   533,   534,   535,   536,   629,   630,   817,
     818,   825,   127,  1347,   741,  1652,  1345,   788,   917,   329,
      24,    28,    30,    32,  1184,  1183,  1682,  1184,    30,   296,
     319,   671,  1173,  1174,  1174,  1199,    57,    99,  1196,  1184,
    1159,  1200,  1201,  1191,    57,    73,  1174,  1247,  1821,  1184,
    1247,  1174,   311,  1174,  1184,   905,   906,  2056,  2068,    42,
      99,  2034,  2062,  1159,  1159,  1174,   253,   730,  1861,   238,
    1170,  2062,  1200,    57,  1202,  1159,  1184,  1174,    30,  1174,
     916,    26,   777,   924,   925,  1617,  1619,  2144,  1567,   710,
    1713,  1720,   796,  1655,   128,   223,  1594,  1595,   778,  1861,
     204,   791,   791,    67,   245,  1299,  1861,  1651,  1651,   903,
     788,   969,   972,   288,   316,  1949,   778,  1847,  1861,  1964,
    1964,   789,   791,  2040,  2065,  1670,  1430,  1866,  1365,  1366,
    1367,  1368,  1847,   146,   144,   323,   467,  1852,  1858,  1867,
    1872,  1873,  1874,  1875,  1876,  1877,  1878,  1881,  2051,   179,
     233,   763,  1931,  1619,  1930,   962,   967,   154,   653,  1861,
     959,   967,   969,   970,   974,  1861,   884,  1861,   999,  1001,
    1002,  2057,  2124,  2144,  1927,  1897,    42,  1851,  1430,   789,
    1498,   789,   789,   284,   431,  1430,  1430,    53,   300,   789,
     300,   791,  1473,   789,   778,   789,   791,   791,   789,   789,
    1390,   128,   789,  1475,  1476,  1430,   791,   791,   791,   777,
     789,   791,   789,   791,   791,   789,   788,  1844,  1851,  1497,
     789,   789,  1497,   789,   791,   791,   789,   789,   789,   151,
     791,   791,   789,   789,  1497,   789,   789,   789,   789,   791,
     128,   791,   789,   128,  1430,   128,  1430,   128,  1430,   128,
     789,   791,   789,  1497,   789,   789,   791,   791,   789,   791,
     791,   791,   789,   789,   789,   791,   789,   789,   791,   789,
     789,   789,  1847,   789,   789,   789,  1847,   791,   789,   791,
     791,   789,   791,   791,   791,   789,   789,   791,  1851,  1861,
     789,   796,    53,   508,   791,  1213,   789,   789,  1563,  1563,
    1503,   789,   794,  1851,   122,   202,   291,   739,   788,    50,
    1430,   438,  1432,  1432,   788,  1400,  1432,  1432,  1430,  1430,
    1581,   218,  1583,   788,   788,   788,   788,   788,   796,  1419,
    1469,  1470,  1471,   382,   788,  1042,  1043,  1035,  1042,  1036,
     595,  1045,   160,   476,  1430,   771,  1866,  1866,   791,  1927,
     431,   131,  1953,   128,   791,  1964,  1964,   791,  1430,  1842,
    1851,   796,   796,   796,    99,   144,   323,   467,   581,   758,
    1852,  1855,  1860,  1869,  1872,  1873,  1874,  1875,  1877,  1878,
    1881,  2051,  1910,   127,  1682,    57,    99,  1196,  1197,  1866,
      31,   582,   597,  1922,  1923,  1861,  1861,  1899,  1898,   127,
     584,   763,   508,   791,   791,  1682,  1923,   796,  1891,   796,
    1682,   791,   791,  1894,  1430,   789,  1861,   874,   874,  1855,
    1429,   874,  1748,  1748,   874,  1748,  1855,   128,  1747,   868,
    1748,   617,  1605,  1733,  1746,   828,  1743,  1847,  1748,  1748,
    1430,   259,  1537,  1695,   789,   791,  1687,   903,  1833,  1838,
      53,  1671,  1672,  2132,  2145,  1863,    99,  1362,  1861,  1360,
    1847,  1028,  1371,   145,   160,  1222,  1373,   810,   791,   100,
    1772,   826,  1767,  1651,  1768,  1863,   934,   945,   791,   771,
     458,   565,  1861,  1938,  1939,  1855,  1651,   452,   463,   618,
     743,  1322,  1323,  1324,  1619,    47,  1782,   675,   791,   369,
    1303,  1729,   791,   127,  2030,  1086,  1087,   300,   730,  1234,
    1861,   316,  1948,  1974,   853,  1861,  1861,  1847,   833,   874,
    2114,  1090,  1090,  2020,  2021,  2020,  1847,   874,  1861,   874,
    1090,  1430,  1508,  1508,   794,   580,   720,   724,  1405,  1406,
    1457,  1406,  1546,  1836,   158,  1548,  1548,  1539,   158,   204,
     300,  1562,  1861,  1567,  1190,  1193,  1638,  1861,  1430,  1575,
    1843,  1573,   758,  1577,  1572,   316,   584,  1604,  1603,   511,
    1619,  1607,  1608,   443,  1607,  1607,  1851,   553,  1597,  1843,
     123,   788,  1420,  1420,  1420,  1923,  1923,  1086,  1855,  1683,
    1683,   561,   269,   269,   661,  1855,   269,   269,   269,    53,
     183,   364,   410,   488,   551,   567,   568,   572,   573,   574,
     640,   693,   849,   850,    88,   480,   590,   597,   603,   679,
     742,   854,   855,  1852,    65,   316,   750,  1968,   271,   373,
     498,   570,   702,   764,  1962,  1963,  1970,   316,  1977,  1927,
     204,   864,  1265,   788,  2002,  1255,  1329,   127,   883,   789,
     791,  2041,   993,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   791,   828,
     741,   891,   892,   893,   900,  1861,  2109,  2110,  2111,   156,
     788,   911,   789,   789,   789,   789,  1861,   791,   319,   296,
      57,    99,  1196,   789,   791,   789,   789,   791,   144,  1152,
    1154,  1155,  1156,  1852,  1872,  1873,  1874,  1875,  1876,  1881,
    1421,  1421,  2062,  2062,   796,   771,  1202,   210,   266,   270,
     922,   923,   924,   927,  1436,  1861,    24,    25,    28,    30,
      32,   431,  1557,  1558,  1406,  1666,   300,  1861,  1510,   580,
     168,  1609,   796,  1724,  1847,  1953,  1866,  1927,   431,   918,
     919,   973,    34,  1966,   337,   796,   796,   288,   288,  1837,
     984,  1671,   791,  1369,  1371,  1857,   763,   510,   396,   963,
     154,   960,   971,   789,   791,   796,  2038,  1008,   997,  1003,
    1862,  1003,  1003,  2138,   431,  1860,  1430,   791,  1430,  1430,
     284,    57,    71,    96,   109,   125,   153,   155,   296,   308,
     413,   414,   563,   671,   723,   747,  1154,  1499,  1500,  1501,
    1191,  1191,  1499,  1503,   789,   153,   153,  1430,  1503,  1503,
     791,  1430,  1430,  1430,  1430,  1430,  1430,  1430,  1433,   796,
     789,   789,  1430,  1430,  1430,  1430,  1430,   789,  1430,  1430,
    1430,  1430,   128,  1430,   128,  1430,   128,  1430,   153,  1430,
     789,  1446,  1430,  1445,  1503,  1430,  1430,  1430,  1503,   776,
    1617,  1622,   153,  1430,  1430,  1430,  1430,  1430,   796,   796,
    1861,    57,    71,  1208,  1209,  1210,  1211,  1212,  1620,  1619,
     789,   777,   777,  1399,  1432,   789,   791,  1432,    50,  1430,
     438,  1563,  1563,  1582,  1861,    65,   789,  1483,  1502,  1430,
    1461,  1502,  1430,  1451,  1502,  1502,  1851,  1430,   789,   791,
     788,  1051,  1433,  1043,   168,  1081,  1082,  1620,   704,  1046,
     342,  1038,  1034,   934,   288,  1355,   288,   242,   588,  1965,
    1865,   128,   128,  1417,  1420,  1420,   796,   796,   796,  1682,
    1421,  1866,  1909,  1682,   788,   788,  1682,  1682,  1923,   801,
     233,   636,   663,  1921,  1919,  1918,  1908,  1861,  1917,  1861,
    1903,  1892,  1893,  1902,   437,   755,  1617,  1624,  1738,    30,
    1747,  1570,  1743,  1704,  1705,  1845,  1407,  1420,  1419,  1690,
    1692,  1695,   431,   789,   788,  1664,  1653,  1847,   795,   323,
    2034,  2076,  1370,   788,  1695,   771,   828,   127,   316,  1763,
    1764,   943,   946,   947,   942,   577,   578,   654,   944,    36,
      37,   458,   503,   565,   608,   771,   772,   773,  1940,  1942,
    1570,   127,   128,  1325,  1323,   828,  1312,  1855,   740,  1313,
     110,   646,  2034,  2054,  1619,   549,   362,   476,   656,  1240,
    1240,   204,  1234,   337,  1977,   126,   204,   204,   832,   848,
     849,  2115,  2012,   874,  2121,   390,   879,  2017,  2018,  2019,
    2122,   843,  2120,   645,  2119,  1847,   791,  1406,    31,  1433,
      50,   288,  1508,  1539,   158,   158,  1508,  1539,  1529,  1530,
     789,   791,  1557,  1192,  1643,    16,    17,   791,  1576,    51,
     104,  1598,  1429,  1486,  1578,  1579,  1577,   719,  1604,  1608,
    1415,   791,  1598,  1602,  1419,  1632,  1633,  1634,  1197,  1192,
     412,   412,   417,   493,  1168,  1683,  1683,    65,  1683,  1685,
    1683,   183,   551,   316,  1683,  1684,  1684,   850,  1261,  1855,
    1855,  1855,  1855,  1619,  1855,  1855,  1855,   789,   791,  1855,
      31,   597,  1863,  1971,  1972,    31,    31,    31,    50,  1961,
     537,   538,   541,   542,   543,  1975,  1976,   335,   597,  1264,
    1250,   394,   658,   241,  1266,  1861,  2003,    53,  2002,    47,
     382,  1331,   884,  1430,   284,   788,   788,  1619,   788,  1619,
    1619,  1855,  1855,  1624,  1855,  1619,  1855,  1855,  1855,  1855,
    1855,  1855,  1855,  1619,  1855,   408,   572,   676,  1826,   122,
     291,  1619,  1629,  1855,  1619,   818,   789,   791,   148,   151,
     213,   896,  2034,  2064,   653,   949,  1152,   919,   908,   909,
     910,  2056,    30,  1200,  1821,  1200,   905,  1171,  1430,  1430,
    1861,    30,   791,  2132,   465,  1537,  1555,  1556,  1510,  1570,
    1418,   252,  1607,   246,  1722,  1927,  1299,   178,   920,   789,
    1421,   972,   316,  1979,   588,   778,   778,  1966,  1966,   113,
     114,   115,   985,  1661,  1367,  1847,  1371,   143,  1374,  1798,
    1421,   970,  1861,   884,  2059,   356,   997,   796,  1430,  1430,
    1178,  1178,  1171,  1180,    95,   155,  1176,  1175,  1177,  1179,
    1178,   155,  1179,  1176,   789,   789,   789,   789,  1474,  1430,
    1430,   789,   207,  1492,  1492,  1430,   791,   791,   789,   791,
     789,   789,   789,   151,  1466,  1467,  1851,   789,   789,   789,
     789,   789,   791,   127,   791,  1430,  1430,  1430,  1430,   789,
     789,    53,  1440,   789,    53,   789,   789,   789,    28,    30,
      32,    28,    30,    32,   789,   791,  1430,   789,   789,   791,
     791,   789,  1851,  1861,   796,   788,  1203,  1203,    51,   104,
     647,   776,  1205,  1206,  1207,   791,   791,  1430,  1430,   789,
    1503,  1432,   789,   791,  1432,  1583,  1575,   207,  1485,   789,
     789,   789,   789,   789,   789,   788,  1420,  1471,  1039,  1040,
    1041,  1861,   789,  1624,   153,    65,   788,  1053,   771,   788,
    1043,  1866,  1847,   128,  1967,  1967,    53,  1425,  1855,  1861,
     778,  1851,  1861,  1861,  1911,  1430,  1923,  1922,    31,    31,
    1901,  1900,   391,   733,   233,  1923,  1682,  1682,  1923,    24,
      25,    28,    30,    32,  1605,  1739,  1748,   791,  1702,  1682,
    1567,  1695,   789,   791,   178,  1389,    11,    12,   259,  1023,
    1389,  1673,  1675,  1678,  1537,   313,  2077,  2078,   788,   226,
    1559,  1560,  1561,  1861,   788,  1765,   233,   771,   791,  1941,
    1605,   741,   558,   517,   684,   685,   825,  1314,   697,   697,
    1847,   204,  1865,  1264,   412,  1847,  1847,    11,    13,    18,
     145,   167,   216,   273,   274,   275,   293,   350,   352,   372,
     390,   397,   412,   419,   434,   491,   501,   539,   552,   591,
     597,   621,   655,   662,   697,   712,   713,   725,   762,  1019,
    1021,  1092,  1094,  1095,  1097,  1098,  1099,  1101,  1102,  1103,
    1110,  1852,  1092,   788,   897,  2034,  2080,  2082,   874,   857,
      53,   156,  2085,  1855,  2017,  2085,  2002,   788,   901,  2043,
    2080,  2081,    96,   155,   235,   699,  1108,  2043,   844,  1525,
    1406,  1406,   204,  1532,  1539,  1539,   204,  1534,  1430,   788,
    1028,  1861,   382,  1805,  1843,    53,   791,  1843,  1603,  1607,
    1430,   789,   791,  1173,   776,  1617,  1623,   776,  1617,  1621,
    1621,  1623,  1622,  1622,  1666,   855,    31,    53,   300,  1969,
    1973,   209,  1962,  1619,  1619,  1619,  1826,   776,  1617,  1618,
    1975,   174,   295,  1262,   450,    46,    48,    49,    70,    72,
      78,   110,   174,   205,   207,   218,   241,   342,   379,   423,
     424,   430,   442,   463,   487,   554,   622,   633,   634,   635,
     729,  1026,  1093,  1095,  1269,  1274,  1276,  1279,  1285,  1286,
    1287,  1290,  1291,  1591,  1436,  1985,   346,   441,   858,   288,
     423,   430,   860,   789,   791,  2004,  2005,    53,    47,   788,
    1332,  2041,   821,   822,  1619,   823,   824,  1619,   819,   820,
    1619,   900,   213,   325,  2034,  2063,   907,    15,   796,   789,
     791,   949,  1152,   789,  1170,  1420,  1420,   923,   143,   299,
     463,  1550,  1551,  1554,  1570,  1615,  1616,  1861,   443,   252,
    1723,  1717,  1419,  1430,   131,  1974,  1974,   982,  2040,   982,
    1673,  1374,   506,   143,   332,  1804,  1430,  2039,  1009,  2144,
    1861,  1200,  1177,  1200,  1200,   789,  1563,  1563,    65,   257,
    1491,   168,  1494,  1495,   789,  1430,  1430,  1503,   194,   361,
     789,   316,  1468,  1430,  1430,  1430,  1563,    96,   109,   125,
     155,   235,   296,   413,   414,   562,   563,   723,  1164,  1165,
    1441,  1442,  1443,  1444,  1499,  1629,  1563,  1430,  1430,  1861,
    1620,   789,  1213,  1208,  1206,  1208,  1209,  1619,   789,  1503,
     207,  1584,    65,   789,  1502,  1425,   789,   791,   351,  1084,
    1430,  1037,   218,  1054,  1055,  1056,  1620,  1039,  1967,  1855,
    1861,   796,  1682,  1682,  1923,  1420,   789,   789,  1923,  1923,
    1905,  1904,  1605,  1705,  1570,    99,  1694,  1557,  1420,  1695,
     789,  1676,  1677,  1840,  1841,  1845,  1861,  1828,  1674,  1722,
    1678,  2079,  2078,    47,  1275,  1283,  1284,  1861,   789,   791,
    1624,  1773,  1774,   451,   174,   251,   366,   374,   389,   399,
     400,   401,   409,   547,   559,   644,   659,   700,   714,   948,
     947,   788,   771,   771,   771,   791,   835,  1847,   762,   839,
     841,    75,   598,   796,  1111,  1112,  1113,  1114,  1122,  1123,
    1128,  1129,  1130,  1222,  1225,  1226,  1846,  1861,   167,   749,
     422,  1847,  1683,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,   422,  1683,  1683,  1683,  1683,  1683,  1683,  1683,
    1683,  1683,  1683,   425,   545,  1861,  1683,  1683,  1024,  1025,
    1026,   791,  1094,  1682,  1020,   898,   876,    54,   339,  1017,
     204,   227,   467,  2034,  2105,  2106,  2107,   227,   467,   913,
    1852,  1872,  1875,  1876,  1881,  2047,  2091,  2092,  2094,  2095,
    2100,  2107,    53,   888,   889,   248,  2044,   681,  2044,  2002,
      22,    29,    31,  1509,  1531,   300,  1533,   300,  1562,   117,
     118,   206,   283,  1806,  1807,   170,  1808,  1598,  1580,  1579,
    1598,  1604,  1603,  1420,  1634,    24,    28,    30,    32,    24,
      28,    30,    32,    28,    30,    32,    28,    30,   597,  1855,
    1971,    30,    30,   597,    99,   153,   564,  1263,    75,   218,
     388,   598,   709,  1114,  1122,  1123,  1292,  1222,  1292,   218,
    1292,   218,   218,   282,   288,    75,   126,   218,   598,   709,
    1127,  1222,  1292,  1683,   218,    65,  1028,    53,   288,   388,
     771,  1222,  1301,  1683,   218,   159,   712,   159,   218,   712,
    1292,   218,   596,   218,   218,   218,  1093,   791,  1025,  1274,
     788,  1113,   607,  1430,  1430,   204,   864,   874,   204,   390,
     865,  1861,  1666,  1389,  2004,  1333,   489,   789,   791,   789,
     791,   789,   791,   253,  1861,   908,   796,  1222,  1222,  1551,
    1615,  1719,   128,   443,  1416,  1666,  1375,  1828,  1420,   588,
     316,  1978,  1978,   204,  1696,   154,  1420,   884,  1003,   431,
     789,   789,  1493,  1843,  1821,  1494,  1496,  1606,   789,   789,
     791,   789,   502,   553,   617,   789,   789,  1171,   155,  1179,
      71,  1179,  1200,   789,   789,   791,   789,   789,   789,  1204,
     789,   791,   789,    65,   230,   252,  1585,  1586,  1843,   789,
    1041,  1563,   160,   476,   789,   791,  1057,   789,   778,  1913,
    1912,  1923,  1923,   828,  1594,   410,  1834,   789,   791,   796,
    1390,  1680,  1681,  1845,  1666,   922,   789,   791,  1560,   789,
     791,    50,  1775,  1692,  1855,  1855,  1855,   825,   788,   837,
    1863,   788,   788,  1246,  1846,    10,   127,  1124,  1861,   789,
     791,    72,   126,   226,   294,  1126,  1221,  1128,  1090,  1222,
    1223,  1223,  1131,   796,  1847,  1683,    99,  1619,  1628,    99,
    1619,    99,  1619,    99,  1619,  1096,  1624,  1619,  1619,  1855,
    1855,  1683,  1619,  1863,   458,   503,   572,  1107,  1619,  1624,
    1624,    99,  1619,  1855,    99,   393,   395,   429,   459,   592,
     626,  1106,  1628,  1619,  1628,  1022,  1804,  1094,    26,    28,
      30,    32,    99,  1625,  1626,  1855,  1861,  1092,   894,   895,
     899,  2110,   877,   878,  1985,  2116,   101,   150,   297,  1018,
     658,  1424,  2098,  1424,  2096,   431,  2107,  2098,  2096,   795,
     356,   431,  2093,  2047,  2095,  2100,  2004,   789,   890,   899,
    2045,   876,  2112,  1855,  2112,    53,    31,   382,  1511,  1429,
     788,  1430,   788,   789,    65,    65,   117,    65,  1807,   272,
     283,  1809,  1810,  1604,   788,   450,    30,   335,   141,  1090,
     141,  1089,   749,  1089,  1656,  1656,  1350,  1656,  1275,  1284,
    1847,  1190,  1656,   160,  1657,    10,  1656,   749,   226,  1656,
    1656,    99,  1861,  1350,  1592,  1593,  1845,  1027,  1656,  1656,
    1847,    99,  1861,  1350,  1284,  1656,  1350,  1350,  1350,  1275,
      46,    78,   110,  1287,  1109,  1111,   339,   458,  1300,  1563,
     674,  1855,   426,  1267,   316,  2006,  1666,  1336,  1861,    47,
     788,  1334,   822,   824,   820,    15,   796,  1861,   127,  1549,
    1549,  1721,  1666,  1433,  1420,   131,  1975,  1980,  1981,   428,
    1722,   282,   997,   791,  1598,   789,  1430,   553,   449,  1624,
     789,  1619,  1597,   789,    55,   407,   414,   720,   723,   732,
    1587,  1588,  1825,  1598,   692,  1083,  1038,   788,  1044,  1056,
    1058,  1861,  1923,  1923,  1609,  1835,  1840,   778,  1861,   789,
     791,  1682,   284,  1284,  1774,   423,   789,  1242,  1244,  1245,
    1861,   788,   587,  1242,  1245,  1861,   788,  1861,  1112,   788,
     160,   160,  1223,  1090,   237,  1215,  1246,  1861,  1090,  1090,
     664,   949,  1132,  1153,  1156,  1861,   789,  1855,   788,  1855,
      53,  1085,  1024,   789,   791,  2062,   105,  2085,   580,  2009,
     858,  1861,   795,  1861,   795,  1423,  2085,  2103,  2085,  2101,
    2144,  2123,   791,   653,   949,  1152,  2046,  2113,   874,  2034,
    2083,  2083,  2004,   788,   789,  1562,  1562,  1821,  1821,    65,
    1821,    65,    65,  1810,    31,  1263,   415,  1262,  1436,  1350,
    1436,  1124,  1861,  1846,  1275,  1846,  1271,   288,  1273,  1192,
    1846,  1656,  1283,   127,   160,  1846,  1846,  1275,   791,  1598,
    1031,  1861,  1846,  1620,   316,  1130,  1275,  1280,  1275,   789,
    1861,   859,   866,   867,    72,   365,   510,   789,   791,  1335,
     253,   730,  1861,    15,   796,   136,   158,   207,  1553,  1552,
    1666,   288,   588,  1981,  1697,  1666,  1847,  1843,   789,   789,
     789,   732,  1588,  1589,  1825,   653,   605,   444,  1590,   605,
    1825,  1084,   788,  1051,  1047,    99,   304,   305,   407,   479,
    1059,  1703,  1838,   796,  1681,  1695,  2065,   371,   789,   791,
    1598,   788,  1242,   788,   789,   789,  1861,   788,  1430,  1090,
    1246,  1861,  1847,   300,  1233,   730,  1246,  1246,  1134,   796,
    1125,  1126,  1133,   796,  1768,  1023,  1022,   899,  2087,  2088,
    1861,  2010,   204,   863,   864,  2099,  2097,  2083,  1424,   795,
    1424,   795,   431,  1423,   899,   907,    15,   796,  2085,   196,
    1512,  1513,  1861,  1567,   789,   789,  1821,  1821,  1821,   789,
     120,  1277,   120,   144,   197,  1241,   110,   259,  1130,  1344,
     282,   288,    73,  1846,  1861,  1299,  1270,  1593,   288,   288,
     282,  1300,  1281,  1283,  1272,   692,   861,  2132,   588,    72,
      72,  1861,   226,  1337,  1338,  1861,    15,   730,  1861,    65,
      65,   788,   788,  1433,   160,  1537,  1598,   462,    50,   462,
     136,   407,   572,   719,  1049,  1050,  1861,   789,   703,  1052,
    1061,   718,   145,   390,   397,   412,   539,   552,   569,   712,
    1075,  1076,  1077,  1080,  1097,  1742,  1666,   245,   778,  1927,
    1244,    30,   791,  1243,   854,  1927,  1927,   791,  1861,   789,
    1246,  1233,   730,   788,  1216,  1240,  1115,  1240,  1117,  1118,
      18,   226,   294,   390,   499,   760,  1097,  1135,  1136,  1145,
    1187,  1188,  1189,  1214,  1436,  1156,    73,    99,   202,   204,
     350,   469,   664,  1139,  1141,  1181,  1182,  1188,  1861,   789,
    1100,  1101,  2083,  2124,   791,  1419,   860,  2042,  2082,  2043,
    2104,  2102,  2083,   253,  1861,  2087,   219,   789,   791,  1514,
    1846,   595,   788,  1278,   144,    99,    99,  1300,  1847,   218,
    1197,  1350,  1861,  1846,  1847,  1282,  1322,  1430,   432,   862,
       6,   851,   588,   588,   789,   791,   730,    15,  1559,  1561,
     297,  1799,  1589,   653,   210,   326,   789,   791,  1620,   788,
    1063,  1065,  1060,   422,  1683,  1683,   422,  1683,  1683,  1683,
    1683,   788,  1070,  1077,   434,   300,   390,   501,   730,   752,
    1097,  1227,  1230,  1235,  1236,  1237,  1241,  1598,   789,  1861,
     789,   789,   316,  1228,  1232,  1236,  1239,  1229,  1231,  1236,
    1238,  1861,   791,  1121,  1119,  1240,  1217,  1861,   181,  1218,
     788,  1116,   788,   788,   160,  1855,   709,  1188,   749,   160,
     202,  1196,    19,    20,   776,   777,   788,  1149,  1150,  1151,
    1400,  1452,  1824,   297,   343,    99,    53,  1182,  2089,  1861,
    2013,   865,   876,  2044,  2049,  2087,  2048,  2087,    15,   796,
     851,  1509,  1513,   127,  1158,  1160,  1161,  1162,  1516,  1517,
    1126,  1620,  1054,  1151,   316,   760,  1288,  1056,  1288,   154,
    1430,  1338,   730,   789,   789,  1698,  1193,  1048,  1050,   788,
    1064,  1065,  1066,   183,  1062,  1065,  1683,  1855,  1855,  1683,
    1625,  1625,  1620,  1863,   704,  1071,  1072,  1683,  1240,  1855,
    1683,  1240,  1289,  1290,  1291,  1237,   760,  1927,   593,  1289,
    1239,  1289,  1238,   789,  1861,   788,   788,  1120,   789,   791,
     466,   594,   672,   204,  1219,  1242,   788,  1242,  1245,   430,
    1185,  1826,  1826,  1148,   199,   745,   653,  1149,   356,  1847,
     426,   876,  1861,  2034,  2084,  2084,   253,   730,  1861,  1515,
     208,   120,   219,   789,   744,   744,  1028,  1288,  1028,   788,
    1706,  1707,  1845,  1800,  1052,   789,   791,   183,  1068,  1069,
    1433,  1855,  1855,  1073,   789,   791,  1104,  1863,  1619,  1291,
    1290,   589,  1227,  1852,   789,  1242,  1242,   788,  1861,   101,
     297,   789,  1242,   789,   789,   789,   788,  1426,   431,   693,
    1140,  2144,   127,   866,    15,  1511,   219,  1509,  1028,  1054,
     791,  1682,   252,  1811,  1065,   791,  1067,  1074,  1863,  1072,
    1289,   789,  1243,  1242,    67,   245,   259,   572,  1220,  1220,
    1227,   789,  1228,  1229,   789,  1620,  1137,  1138,  1187,  1137,
     599,   698,   753,  1142,  2090,  1419,   730,  1509,    99,   202,
     436,  1518,  1520,  1521,  1522,   789,  1707,  1695,   484,  1805,
    1069,   789,  1078,  1079,  1080,  1215,   789,  1243,    99,   202,
     336,   204,   204,  1227,   789,  1187,  1143,  1144,  1145,   431,
    2014,  1519,  1824,  1825,   204,  1520,  1522,  1520,  1521,    65,
    1808,  1080,  1227,   789,   297,   101,  1145,   112,   116,   436,
     204,   204,  1821,   143,  1812,  1227,  1220,  1220,   653,    30,
     788,  1814,  2015,   170,   252,  1813,     3,   789,  1815,  1816,
    1845,   259,  1817,   461,   604,  2007,  2008,  1863,   789,   791,
    1818,  1819,  1845,  1666,  1863,  2016,  1816,   791,  1682,  2132,
    1819,  1419,   851,  1695,  1420
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   797,   798,   799,   798,   798,   800,   800,   801,   801,
     801,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   802,   802,   802,   802,   802,   802,   802,   802,   802,
     802,   803,   804,   804,   806,   805,   807,   808,   809,   807,
     810,   811,   810,   812,   812,   814,   813,   816,   815,   817,
     817,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   818,   818,   818,   818,   818,   818,   818,   818,   818,
     818,   819,   819,   819,   820,   821,   821,   821,   822,   823,
     823,   823,   824,   825,   825,   825,   825,   825,   825,   825,
     825,   826,   826,   827,   828,   828,   829,   831,   832,   830,
     833,   830,   834,   835,   830,   836,   837,   830,   838,   839,
     830,   840,   841,   830,   842,   830,   843,   830,   844,   830,
     845,   830,   846,   830,   830,   830,   847,   830,   830,   848,
     848,   849,   849,   850,   850,   850,   850,   850,   850,   850,
     850,   850,   850,   850,   850,   850,   850,   850,   851,   851,
     853,   852,   854,   854,   855,   855,   855,   855,   855,   855,
     855,   855,   855,   857,   856,   859,   858,   858,   860,   860,
     860,   860,   861,   861,   862,   862,   863,   863,   864,   865,
     865,   867,   866,   868,   869,   869,   870,   870,   870,   870,
     871,   871,   872,   872,   873,   873,   874,   874,   875,   875,
     876,   876,   877,   877,   877,   877,   877,   877,   877,   878,
     878,   879,   879,   881,   880,   882,   880,   883,   880,   884,
     885,   884,   886,   886,   887,   887,   888,   889,   888,   890,
     890,   891,   891,   892,   893,   894,   894,   895,   895,   896,
     896,   896,   898,   897,   899,   900,   901,   902,   902,   903,
     903,   904,   904,   904,   905,   906,   906,   907,   908,   908,
     909,   909,   910,   910,   911,   912,   914,   913,   913,   913,
     916,   915,   917,   917,   918,   920,   919,   921,   921,   921,
     921,   922,   922,   923,   924,   924,   925,   926,   926,   927,
     927,   927,   927,   927,   927,   928,   928,   929,   930,   930,
     931,   931,   932,   932,   933,   933,   934,   934,   934,   935,
     935,   935,   935,   935,   935,   935,   935,   935,   935,   935,
     935,   935,   936,   938,   937,   939,   939,   940,   940,   941,
     941,   942,   943,   943,   944,   944,   944,   945,   946,   946,
     947,   948,   948,   948,   948,   948,   948,   948,   948,   948,
     948,   948,   948,   948,   948,   949,   949,   950,   950,   952,
     951,   954,   953,   955,   955,   957,   956,   956,   958,   958,
     959,   958,   960,   958,   961,   961,   962,   961,   963,   961,
     964,   965,   966,   968,   967,   969,   971,   970,   973,   972,
     974,   974,   975,   975,   976,   976,   976,   977,   978,   978,
     978,   979,   979,   980,   981,   981,   983,   984,   982,   985,
     985,   985,   985,   987,   986,   989,   988,   988,   990,   990,
     991,   991,   993,   992,   995,   994,   996,   996,   997,   997,
     998,   998,   999,  1000,  1000,  1000,  1001,  1002,  1003,  1005,
    1004,  1006,  1004,  1007,  1008,  1009,  1004,  1010,  1004,  1012,
    1011,  1013,  1011,  1014,  1015,  1011,  1016,  1011,  1017,  1017,
    1018,  1018,  1018,  1020,  1019,  1019,  1019,  1021,  1021,  1022,
    1022,  1023,  1023,  1024,  1025,  1025,  1027,  1026,  1028,  1030,
    1029,  1032,  1031,  1033,  1034,  1033,  1033,  1033,  1035,  1033,
    1033,  1036,  1033,  1037,  1037,  1038,  1038,  1039,  1039,  1040,
    1040,  1041,  1042,  1043,  1044,  1045,  1045,  1046,  1047,  1046,
    1048,  1046,  1049,  1049,  1050,  1051,  1052,  1052,  1053,  1053,
    1054,  1054,  1055,  1055,  1057,  1056,  1058,  1059,  1060,  1059,
    1061,  1059,  1059,  1059,  1059,  1062,  1062,  1063,  1063,  1064,
    1064,  1066,  1067,  1065,  1068,  1068,  1069,  1069,  1070,  1070,
    1071,  1071,  1073,  1072,  1074,  1075,  1075,  1076,  1076,  1077,
    1077,  1078,  1078,  1079,  1079,  1080,  1080,  1080,  1080,  1080,
    1080,  1080,  1080,  1080,  1081,  1082,  1081,  1081,  1083,  1083,
    1084,  1084,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,
    1088,  1089,  1089,  1090,  1090,  1091,  1091,  1092,  1092,  1093,
    1093,  1094,  1094,  1094,  1095,  1095,  1095,  1095,  1095,  1095,
    1095,  1095,  1095,  1095,  1095,  1095,  1095,  1095,  1095,  1095,
    1095,  1095,  1095,  1095,  1096,  1095,  1095,  1095,  1095,  1095,
    1095,  1095,  1095,  1095,  1095,  1095,  1095,  1095,  1095,  1095,
    1097,  1097,  1097,  1097,  1098,  1098,  1099,  1099,  1100,  1100,
    1101,  1102,  1103,  1104,  1105,  1106,  1106,  1106,  1106,  1106,
    1106,  1106,  1107,  1107,  1107,  1108,  1108,  1108,  1108,  1109,
    1110,  1111,  1111,  1112,  1112,  1112,  1112,  1112,  1113,  1113,
    1115,  1114,  1116,  1114,  1117,  1114,  1118,  1114,  1119,  1114,
    1120,  1114,  1121,  1114,  1122,  1123,  1124,  1125,  1125,  1126,
    1127,  1127,  1128,  1128,  1129,  1131,  1130,  1133,  1132,  1134,
    1132,  1135,  1135,  1136,  1136,  1137,  1137,  1138,  1138,  1139,
    1139,  1140,  1139,  1139,  1139,  1141,  1141,  1142,  1142,  1142,
    1142,  1143,  1143,  1144,  1144,  1145,  1145,  1145,  1145,  1147,
    1146,  1148,  1148,  1149,  1149,  1150,  1150,  1151,  1151,  1152,
    1153,  1153,  1154,  1154,  1154,  1155,  1155,  1155,  1155,  1155,
    1156,  1156,  1157,  1157,  1158,  1158,  1158,  1158,  1158,  1158,
    1158,  1158,  1158,  1158,  1159,  1159,  1159,  1160,  1160,  1160,
    1160,  1160,  1160,  1160,  1160,  1161,  1161,  1161,  1161,  1161,
    1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,  1162,
    1162,  1162,  1162,  1162,  1162,  1163,  1163,  1164,  1165,  1165,
    1166,  1166,  1167,  1167,  1167,  1167,  1167,  1168,  1168,  1168,
    1168,  1168,  1169,  1169,  1169,  1170,  1170,  1171,  1171,  1171,
    1172,  1173,  1173,  1173,  1173,  1173,  1173,  1174,  1175,  1175,
    1175,  1175,  1176,  1177,  1178,  1178,  1179,  1179,  1180,  1180,
    1181,  1181,  1182,  1182,  1182,  1182,  1182,  1182,  1182,  1183,
    1183,  1184,  1184,  1185,  1185,  1186,  1187,  1187,  1187,  1188,
    1188,  1188,  1189,  1189,  1190,  1190,  1191,  1191,  1192,  1192,
    1193,  1193,  1194,  1194,  1195,  1195,  1196,  1197,  1197,  1197,
    1198,  1198,  1199,  1199,  1199,  1200,  1200,  1201,  1201,  1201,
    1201,  1201,  1201,  1201,  1201,  1201,  1201,  1201,  1202,  1202,
    1204,  1203,  1205,  1205,  1206,  1207,  1207,  1207,  1207,  1208,
    1209,  1210,  1210,  1211,  1212,  1212,  1213,  1213,  1214,  1214,
    1215,  1216,  1216,  1217,  1217,  1218,  1218,  1218,  1218,  1219,
    1219,  1219,  1219,  1219,  1220,  1220,  1220,  1220,  1220,  1221,
    1221,  1222,  1222,  1223,  1223,  1224,  1224,  1224,  1225,  1226,
    1226,  1227,  1227,  1228,  1228,  1229,  1229,  1230,  1230,  1231,
    1231,  1232,  1232,  1233,  1233,  1234,  1234,  1234,  1235,  1235,
    1236,  1236,  1236,  1236,  1236,  1237,  1237,  1238,  1239,  1239,
    1240,  1240,  1240,  1241,  1241,  1242,  1242,  1243,  1243,  1244,
    1244,  1245,  1246,  1246,  1247,  1247,  1249,  1250,  1248,  1251,
    1248,  1252,  1248,  1248,  1253,  1248,  1254,  1248,  1255,  1248,
    1256,  1248,  1257,  1248,  1258,  1248,  1248,  1259,  1260,  1261,
    1248,  1262,  1262,  1263,  1263,  1263,  1263,  1264,  1264,  1264,
    1264,  1264,  1265,  1265,  1265,  1265,  1266,  1266,  1267,  1267,
    1268,  1268,  1269,  1269,  1269,  1269,  1269,  1269,  1269,  1269,
    1269,  1269,  1270,  1269,  1269,  1271,  1269,  1272,  1269,  1269,
    1269,  1269,  1269,  1269,  1273,  1269,  1274,  1275,  1275,  1277,
    1276,  1278,  1278,  1278,  1280,  1279,  1281,  1282,  1281,  1283,
    1283,  1284,  1285,  1285,  1286,  1287,  1287,  1287,  1287,  1287,
    1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,
    1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,
    1287,  1287,  1287,  1287,  1287,  1287,  1287,  1287,  1288,  1288,
    1288,  1289,  1289,  1289,  1289,  1289,  1290,  1290,  1291,  1291,
    1292,  1292,  1293,  1293,  1295,  1294,  1296,  1296,  1297,  1297,
    1298,  1298,  1299,  1299,  1299,  1300,  1300,  1300,  1301,  1301,
    1301,  1301,  1303,  1302,  1304,  1302,  1302,  1302,  1305,  1306,
    1306,  1307,  1307,  1308,  1308,  1308,  1310,  1309,  1311,  1311,
    1312,  1312,  1312,  1313,  1313,  1313,  1313,  1313,  1314,  1314,
    1316,  1315,  1317,  1317,  1317,  1318,  1319,  1318,  1321,  1320,
    1322,  1322,  1323,  1323,  1324,  1324,  1324,  1324,  1325,  1325,
    1325,  1327,  1326,  1328,  1328,  1329,  1330,  1330,  1331,  1331,
    1332,  1333,  1332,  1334,  1335,  1334,  1336,  1336,  1336,  1337,
    1337,  1337,  1338,  1338,  1339,  1339,  1340,  1341,  1340,  1343,
    1342,  1344,  1344,  1345,  1345,  1346,  1346,  1346,  1346,  1346,
    1346,  1347,  1347,  1349,  1348,  1350,  1350,  1350,  1352,  1351,
    1351,  1353,  1353,  1354,  1354,  1355,  1357,  1356,  1358,  1358,
    1359,  1359,  1360,  1361,  1362,  1362,  1364,  1363,  1365,  1365,
    1366,  1366,  1367,  1368,  1370,  1369,  1372,  1371,  1373,  1373,
    1374,  1374,  1376,  1375,  1377,  1375,  1379,  1378,  1380,  1378,
    1381,  1381,  1383,  1382,  1385,  1386,  1384,  1387,  1388,  1389,
    1389,  1390,  1390,  1392,  1391,  1393,  1391,  1394,  1394,  1395,
    1396,  1395,  1395,  1397,  1397,  1398,  1399,  1400,  1400,  1401,
    1401,  1402,  1403,  1403,  1404,  1404,  1405,  1405,  1405,  1406,
    1406,  1406,  1407,  1408,  1408,  1409,  1409,  1410,  1410,  1410,
    1410,  1411,  1411,  1412,  1412,  1412,  1413,  1413,  1414,  1414,
    1415,  1415,  1415,  1415,  1416,  1416,  1416,  1417,  1417,  1418,
    1419,  1420,  1421,  1422,  1423,  1424,  1425,  1425,  1425,  1425,
    1425,  1426,  1426,  1426,  1427,  1427,  1427,  1428,  1428,  1429,
    1430,  1430,  1430,  1430,  1430,  1431,  1431,  1431,  1431,  1431,
    1431,  1431,  1431,  1431,  1431,  1431,  1431,  1432,  1432,  1432,
    1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,  1432,
    1432,  1432,  1432,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,  1433,
    1433,  1433,  1434,  1434,  1435,  1435,  1436,  1436,  1437,  1437,
    1438,  1438,  1438,  1438,  1438,  1438,  1439,  1439,  1440,  1440,
    1441,  1441,  1441,  1442,  1442,  1442,  1442,  1442,  1442,  1443,
    1443,  1443,  1444,  1444,  1445,  1446,  1446,  1447,  1447,  1447,
    1447,  1448,  1449,  1449,  1450,  1451,  1451,  1451,  1451,  1451,
    1451,  1451,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,  1452,
    1452,  1453,  1453,  1453,  1453,  1454,  1454,  1455,  1455,  1455,
    1455,  1455,  1455,  1456,  1456,  1457,  1457,  1458,  1458,  1458,
    1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,
    1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1458,  1459,
    1459,  1460,  1460,  1461,  1461,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,  1462,
    1462,  1462,  1462,  1463,  1463,  1463,  1463,  1463,  1463,  1463,
    1463,  1463,  1463,  1463,  1463,  1463,  1463,  1465,  1464,  1464,
    1464,  1464,  1464,  1464,  1464,  1464,  1464,  1464,  1464,  1466,
    1466,  1467,  1467,  1468,  1468,  1469,  1469,  1470,  1470,  1471,
    1472,  1472,  1472,  1472,  1472,  1472,  1472,  1473,  1474,  1472,
    1472,  1472,  1472,  1472,  1472,  1472,  1472,  1472,  1472,  1472,
    1475,  1472,  1476,  1472,  1477,  1472,  1478,  1478,  1479,  1479,
    1479,  1480,  1480,  1480,  1480,  1480,  1480,  1480,  1480,  1480,
    1480,  1480,  1480,  1480,  1481,  1483,  1482,  1482,  1484,  1484,
    1485,  1486,  1488,  1487,  1489,  1489,  1489,  1489,  1490,  1490,
    1491,  1491,  1492,  1492,  1493,  1493,  1494,  1494,  1495,  1496,
    1498,  1497,  1499,  1499,  1499,  1499,  1499,  1499,  1499,  1499,
    1500,  1500,  1500,  1500,  1500,  1500,  1500,  1500,  1501,  1501,
    1501,  1501,  1502,  1502,  1503,  1503,  1504,  1504,  1505,  1505,
    1506,  1506,  1507,  1507,  1508,  1508,  1509,  1509,  1509,  1510,
    1511,  1512,  1512,  1514,  1513,  1515,  1513,  1516,  1516,  1516,
    1517,  1517,  1517,  1517,  1518,  1518,  1518,  1518,  1518,  1519,
    1519,  1520,  1520,  1520,  1521,  1522,  1524,  1525,  1523,  1526,
    1526,  1527,  1527,  1528,  1529,  1528,  1530,  1528,  1528,  1531,
    1528,  1532,  1528,  1528,  1533,  1528,  1534,  1528,  1528,  1535,
    1535,  1535,  1536,  1536,  1537,  1537,  1538,  1539,  1539,  1539,
    1539,  1539,  1540,  1540,  1541,  1541,  1542,  1542,  1543,  1543,
    1544,  1544,  1545,  1546,  1547,  1547,  1548,  1548,  1549,  1549,
    1549,  1549,  1550,  1550,  1552,  1551,  1553,  1551,  1554,  1554,
    1555,  1556,  1555,  1558,  1557,  1559,  1559,  1560,  1560,  1561,
    1561,  1562,  1562,  1563,  1563,  1563,  1563,  1563,  1563,  1563,
    1563,  1563,  1563,  1563,  1563,  1564,  1564,  1564,  1564,  1564,
    1564,  1564,  1564,  1564,  1565,  1565,  1565,  1565,  1566,  1566,
    1566,  1567,  1567,  1568,  1569,  1569,  1570,  1571,  1570,  1572,
    1573,  1572,  1574,  1574,  1575,  1575,  1576,  1576,  1576,  1577,
    1577,  1578,  1578,  1579,  1581,  1580,  1582,  1582,  1583,  1583,
    1584,  1584,  1585,  1585,  1586,  1586,  1587,  1587,  1588,  1588,
    1588,  1589,  1589,  1589,  1590,  1590,  1590,  1590,  1590,  1590,
    1591,  1592,  1592,  1593,  1594,  1594,  1596,  1595,  1597,  1597,
    1598,  1598,  1598,  1599,  1599,  1600,  1600,  1600,  1600,  1601,
    1601,  1601,  1601,  1601,  1602,  1602,  1603,  1603,  1604,  1604,
    1605,  1606,  1606,  1606,  1607,  1607,  1607,  1607,  1607,  1607,
    1608,  1609,  1609,  1609,  1609,  1610,  1610,  1610,  1611,  1611,
    1612,  1613,  1614,  1614,  1614,  1615,  1615,  1616,  1616,  1617,
    1617,  1618,  1618,  1619,  1619,  1619,  1619,  1619,  1619,  1620,
    1620,  1620,  1620,  1620,  1621,  1621,  1621,  1621,  1621,  1622,
    1622,  1622,  1622,  1622,  1622,  1623,  1623,  1623,  1623,  1623,
    1623,  1623,  1623,  1624,  1624,  1624,  1624,  1624,  1625,  1625,
    1625,  1625,  1625,  1626,  1627,  1627,  1628,  1628,  1629,  1629,
    1629,  1631,  1630,  1632,  1632,  1633,  1633,  1634,  1636,  1635,
    1637,  1637,  1638,  1639,  1639,  1639,  1640,  1642,  1643,  1641,
    1641,  1641,  1645,  1644,  1647,  1646,  1648,  1646,  1646,  1646,
    1646,  1649,  1646,  1646,  1646,  1646,  1650,  1646,  1646,  1651,
    1651,  1652,  1653,  1654,  1654,  1655,  1656,  1656,  1657,  1657,
    1658,  1658,  1660,  1661,  1659,  1663,  1664,  1662,  1665,  1666,
    1667,  1667,  1667,  1668,  1668,  1669,  1669,  1670,  1670,  1672,
    1671,  1673,  1673,  1674,  1673,  1675,  1676,  1676,  1677,  1677,
    1678,  1679,  1679,  1680,  1680,  1681,  1682,  1682,  1683,  1683,
    1684,  1684,  1685,  1685,  1687,  1686,  1689,  1688,  1690,  1690,
    1691,  1691,  1692,  1692,  1693,  1693,  1694,  1694,  1695,  1695,
    1696,  1697,  1698,  1696,  1699,  1699,  1701,  1702,  1703,  1700,
    1704,  1704,  1705,  1705,  1706,  1706,  1707,  1708,  1708,  1710,
    1709,  1711,  1711,  1712,  1713,  1712,  1714,  1715,  1717,  1716,
    1718,  1719,  1716,  1720,  1721,  1716,  1722,  1723,  1722,  1724,
    1724,  1725,  1725,  1726,  1726,  1726,  1728,  1729,  1727,  1730,
    1730,  1731,  1731,  1732,  1732,  1733,  1733,  1733,  1733,  1733,
    1733,  1733,  1733,  1733,  1734,  1734,  1736,  1735,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1738,  1737,  1739,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,  1737,
    1737,  1737,  1737,  1737,  1737,  1737,  1740,  1740,  1740,  1741,
    1741,  1742,  1742,  1743,  1743,  1744,  1744,  1745,  1745,  1746,
    1746,  1747,  1747,  1748,  1748,  1748,  1750,  1749,  1751,  1749,
    1752,  1752,  1752,  1752,  1752,  1752,  1753,  1753,  1754,  1755,
    1755,  1755,  1755,  1756,  1756,  1757,  1757,  1757,  1758,  1760,
    1759,  1762,  1761,  1761,  1763,  1763,  1764,  1765,  1764,  1766,
    1766,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,
    1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,  1767,
    1767,  1768,  1768,  1769,  1770,  1771,  1770,  1770,  1772,  1772,
    1773,  1773,  1773,  1774,  1775,  1775,  1777,  1776,  1778,  1778,
    1780,  1779,  1781,  1779,  1779,  1782,  1782,  1783,  1783,  1784,
    1785,  1784,  1787,  1786,  1788,  1788,  1788,  1789,  1789,  1789,
    1790,  1790,  1791,  1791,  1793,  1792,  1794,  1794,  1795,  1797,
    1798,  1799,  1800,  1796,  1801,  1801,  1802,  1802,  1803,  1803,
    1803,  1804,  1804,  1804,  1805,  1805,  1806,  1806,  1807,  1807,
    1807,  1807,  1808,  1808,  1809,  1809,  1810,  1810,  1811,  1811,
    1812,  1812,  1813,  1813,  1814,  1814,  1814,  1815,  1815,  1816,
    1816,  1817,  1817,  1818,  1818,  1819,  1820,  1820,  1820,  1820,
    1821,  1821,  1822,  1822,  1822,  1823,  1823,  1823,  1824,  1824,
    1825,  1825,  1825,  1825,  1825,  1825,  1825,  1825,  1825,  1825,
    1826,  1826,  1826,  1826,  1826,  1827,  1827,  1827,  1829,  1828,
    1830,  1830,  1831,  1831,  1832,  1833,  1834,  1835,  1834,  1836,
    1836,  1837,  1838,  1838,  1839,  1840,  1840,  1841,  1841,  1842,
    1842,  1843,  1844,  1844,  1844,  1844,  1844,  1845,  1845,  1845,
    1845,  1845,  1846,  1846,  1846,  1846,  1847,  1847,  1847,  1848,
    1848,  1849,  1850,  1850,  1851,  1851,  1851,  1852,  1853,  1853,
    1853,  1853,  1854,  1855,  1856,  1857,  1858,  1858,  1859,  1859,
    1860,  1860,  1860,  1861,  1861,  1862,  1862,  1863,  1863,  1863,
    1864,  1864,  1864,  1865,  1865,  1866,  1867,  1867,  1867,  1867,
    1867,  1867,  1867,  1867,  1867,  1867,  1867,  1867,  1868,  1868,
    1868,  1868,  1868,  1868,  1868,  1868,  1868,  1868,  1868,  1868,
    1868,  1868,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,
    1869,  1869,  1869,  1869,  1869,  1870,  1870,  1870,  1870,  1870,
    1870,  1870,  1870,  1870,  1870,  1870,  1870,  1870,  1871,  1871,
    1871,  1871,  1871,  1871,  1871,  1871,  1872,  1872,  1872,  1872,
    1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,
    1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,
    1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,
    1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,
    1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1872,  1873,
    1873,  1873,  1873,  1873,  1873,  1874,  1874,  1874,  1874,  1874,
    1874,  1874,  1874,  1874,  1874,  1875,  1875,  1875,  1876,  1876,
    1876,  1877,  1877,  1877,  1877,  1877,  1877,  1877,  1877,  1877,
    1877,  1877,  1877,  1877,  1877,  1877,  1877,  1877,  1877,  1877,
    1877,  1877,  1877,  1877,  1877,  1877,  1877,  1878,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1880,  1880,  1881,  1881,  1881,  1881,  1881,  1881,  1881,  1881,
    1881,  1881,  1881,  1881,  1881,  1881,  1881,  1881,  1881,  1881,
    1881,  1881,  1881,  1881,  1881,  1881,  1881,  1881,  1881,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,  1882,
    1882,  1882,  1882,  1882,  1882,  1882,  1884,  1883,  1885,  1885,
    1886,  1885,  1887,  1885,  1888,  1885,  1889,  1889,  1890,  1890,
    1891,  1890,  1892,  1892,  1894,  1893,  1893,  1895,  1895,  1895,
    1896,  1896,  1896,  1896,  1897,  1897,  1897,  1897,  1899,  1898,
    1900,  1898,  1901,  1898,  1903,  1902,  1904,  1902,  1905,  1902,
    1907,  1906,  1908,  1906,  1909,  1906,  1910,  1906,  1911,  1906,
    1912,  1906,  1913,  1906,  1906,  1906,  1906,  1906,  1906,  1906,
    1906,  1914,  1906,  1915,  1906,  1916,  1906,  1917,  1917,  1917,
    1917,  1918,  1919,  1920,  1920,  1921,  1921,  1921,  1921,  1922,
    1922,  1922,  1923,  1923,  1923,  1924,  1924,  1924,  1926,  1925,
    1927,  1927,  1927,  1928,  1928,  1929,  1929,  1930,  1931,  1931,
    1931,  1931,  1931,  1933,  1932,  1935,  1934,  1936,  1936,  1937,
    1936,  1938,  1938,  1939,  1939,  1940,  1940,  1940,  1940,  1941,
    1940,  1942,  1942,  1942,  1942,  1942,  1943,  1944,  1944,  1944,
    1944,  1944,  1945,  1945,  1946,  1947,  1947,  1947,  1947,  1948,
    1948,  1949,  1949,  1950,  1950,  1951,  1952,  1953,  1953,  1954,
    1954,  1955,  1955,  1956,  1956,  1957,  1957,  1957,  1957,  1958,
    1959,  1959,  1959,  1959,  1960,  1960,  1960,  1960,  1960,  1960,
    1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,
    1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,
    1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,  1960,
    1960,  1960,  1960,  1960,  1960,  1960,  1960,  1961,  1961,  1962,
    1962,  1963,  1963,  1963,  1964,  1964,  1964,  1964,  1965,  1965,
    1966,  1966,  1967,  1967,  1968,  1968,  1969,  1969,  1970,  1970,
    1970,  1970,  1971,  1971,  1972,  1973,  1973,  1973,  1974,  1974,
    1974,  1974,  1974,  1975,  1975,  1975,  1975,  1975,  1976,  1976,
    1977,  1977,  1978,  1978,  1979,  1979,  1980,  1980,  1981,  1981,
    1983,  1982,  1984,  1985,  1985,  1986,  1986,  1987,  1987,  1987,
    1988,  1988,  1988,  1989,  1990,  1990,  1990,  1991,  1992,  1993,
    1993,  1993,  1994,  1994,  1994,  1995,  1995,  1995,  1995,  1995,
    1995,  1995,  1995,  1995,  1996,  1996,  1997,  1998,  1999,  1999,
    1999,  2000,  2000,  2001,  2001,  2002,  2002,  2003,  2003,  2005,
    2004,  2006,  2006,  2006,  2006,  2007,  2007,  2008,  2008,  2009,
    2009,  2010,  2010,  2012,  2013,  2014,  2015,  2016,  2011,  2017,
    2017,  2018,  2018,  2019,  2019,  2021,  2020,  2022,  2022,  2022,
    2022,  2022,  2022,  2023,  2023,  2024,  2024,  2024,  2025,  2025,
    2025,  2026,  2026,  2026,  2027,  2027,  2028,  2029,  2028,  2030,
    2030,  2031,  2031,  2032,  2032,  2033,  2034,  2035,  2035,  2036,
    2037,  2036,  2038,  2036,  2039,  2036,  2040,  2041,  2042,  2043,
    2045,  2044,  2046,  2046,  2046,  2046,  2046,  2046,  2047,  2048,
    2049,  2050,  2051,  2051,  2052,  2052,  2052,  2052,  2052,  2052,
    2052,  2052,  2053,  2053,  2053,  2053,  2053,  2053,  2053,  2053,
    2054,  2054,  2054,  2055,  2056,  2058,  2057,  2059,  2060,  2061,
    2062,  2062,  2062,  2063,  2063,  2064,  2064,  2064,  2066,  2065,
    2067,  2067,  2067,  2067,  2067,  2067,  2067,  2067,  2068,  2068,
    2069,  2069,  2071,  2070,  2072,  2070,  2073,  2070,  2074,  2074,
    2075,  2076,  2076,  2077,  2077,  2079,  2078,  2080,  2081,  2081,
    2082,  2082,  2083,  2083,  2084,  2084,  2085,  2085,  2086,  2088,
    2089,  2090,  2087,  2091,  2091,  2091,  2092,  2093,  2093,  2094,
    2094,  2095,  2095,  2097,  2096,  2099,  2098,  2100,  2100,  2100,
    2102,  2101,  2104,  2103,  2105,  2105,  2106,  2106,  2107,  2107,
    2108,  2108,  2109,  2110,  2110,  2110,  2111,  2111,  2111,  2111,
    2113,  2112,  2115,  2116,  2114,  2118,  2117,  2119,  2117,  2120,
    2117,  2117,  2121,  2117,  2122,  2123,  2117,  2124,  2124,  2126,
    2125,  2125,  2127,  2127,  2128,  2128,  2129,  2129,  2130,  2130,
    2130,  2131,  2130,  2130,  2132,  2132,  2132,  2132,  2132,  2132,
    2133,  2133,  2133,  2133,  2133,  2133,  2133,  2133,  2133,  2133,
    2133,  2134,  2134,  2134,  2134,  2136,  2135,  2137,  2138,  2135,
    2139,  2139,  2141,  2140,  2142,  2143,  2140,  2145,  2144
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     5,     3,     0,     0,     6,
       0,     0,     3,     1,     3,     0,     3,     0,     7,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     1,     0,     1,     3,     0,     0,     8,
       0,     8,     0,     0,    15,     0,     0,    17,     0,     0,
      15,     0,     0,    15,     0,     6,     0,    10,     0,    11,
       0,     5,     0,     5,     8,     6,     0,     3,     1,     0,
       1,     1,     2,     3,     3,     2,     1,     3,     2,     1,
       3,     3,     3,     1,     1,     1,     1,     3,     0,     1,
       0,    12,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     0,    12,     0,     6,     2,     0,     1,
       3,     1,     0,     2,     0,     2,     0,     1,     4,     0,
       2,     0,     3,     0,     0,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     6,     4,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     1,     1,
       2,     3,     3,     0,     4,     0,     6,     0,     8,     0,
       0,     4,     0,     1,     3,     1,     0,     0,     2,     3,
       1,     3,     1,     1,     1,     0,     1,     3,     1,     1,
       1,     1,     0,     4,     2,     1,     3,     0,     3,     2,
       3,     1,     3,     5,     2,     1,     3,     3,     2,     1,
       6,     8,     1,     3,     3,     1,     0,     4,     4,     1,
       0,     6,     0,     3,     0,     0,     5,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     1,     2,     3,     3,     1,     1,
       0,     1,     0,     2,     3,     5,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     0,     5,     0,     1,     1,     3,     1,
       3,     3,     1,     2,     1,     1,     1,     1,     1,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     0,
       5,     0,     2,     1,     1,     0,     3,     1,     1,     2,
       0,     4,     0,     5,     1,     2,     0,     4,     0,     5,
       2,     2,     2,     0,     4,     0,     0,     5,     0,     5,
       1,     3,     0,     3,     1,     1,     1,     3,     3,     4,
       5,     2,     4,     2,     1,     3,     0,     0,     6,     0,
       2,     2,     2,     0,     6,     0,     3,     1,     1,     2,
       1,     2,     0,     5,     0,     5,     0,     2,     0,     1,
       0,     1,     2,     5,     3,     5,     3,     5,     1,     0,
       5,     0,     5,     0,     0,     0,     8,     0,     5,     0,
       3,     0,     3,     0,     0,     5,     0,     3,     1,     1,
       1,     1,     1,     0,     5,     3,     1,     2,     4,     0,
       4,     1,     4,     1,     0,     1,     0,     4,     0,     0,
       3,     0,     6,     6,     0,     4,     2,     2,     0,     3,
       2,     0,     3,     0,     1,     0,     3,     0,     1,     1,
       3,     1,     4,     3,     3,     0,     2,     0,     0,     7,
       0,    10,     1,     3,     1,     1,     0,     2,     0,     3,
       1,     3,     0,     1,     0,     6,     1,     0,     0,     4,
       0,     3,     1,     1,     1,     1,     1,     1,     3,     1,
       3,     0,     0,     5,     1,     3,     1,     1,     0,     3,
       1,     3,     0,     4,     1,     0,     1,     2,     1,     1,
       1,     0,     1,     2,     1,     3,     4,     3,     3,     3,
       3,     4,     4,     3,     0,     0,     6,     3,     0,     2,
       0,     1,     0,     1,     0,     1,     1,     2,     1,     1,
       3,     0,     3,     0,     3,     1,     3,     0,     1,     1,
       2,     1,     2,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     0,     6,     1,     1,     3,     4,
       4,     2,     2,     2,     3,     3,     3,     1,     3,     1,
       3,     3,     3,     3,     1,     1,     1,     1,     0,     1,
       2,     4,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     1,     3,     1,     1,     1,     1,     2,     1,     3,
       0,     9,     0,    10,     0,     9,     0,     9,     0,    11,
       0,    12,     0,    10,     2,     7,     7,     0,     1,     4,
       0,     1,     0,     1,     2,     0,     4,     0,     3,     0,
       3,     0,     1,     2,     1,     0,     1,     2,     1,     0,
       1,     0,     6,     5,     5,     0,     2,     0,     1,     1,
       1,     0,     1,     2,     1,     1,     2,     2,     1,     0,
       3,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     3,     3,     3,     3,     2,     1,     1,
       3,     3,     3,     3,     0,     1,     2,     3,     3,     2,
       3,     3,     4,     3,     3,     3,     1,     2,     2,     2,
       2,     3,     3,     2,     2,     2,     3,     3,     2,     3,
       2,     2,     2,     2,     2,     5,     5,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     1,     2,     0,     3,     0,     1,     1,
       5,     0,     1,     1,     1,     2,     2,     1,     3,     3,
       3,     3,     1,     1,     0,     1,     0,     1,     0,     1,
       2,     1,     1,     2,     4,     1,     3,     2,     1,     0,
       2,     0,     1,     0,     1,     2,     3,     2,     1,     1,
       1,     2,     1,     2,     2,     1,     1,     1,     1,     1,
       0,     2,     1,     1,     1,     1,     1,     1,     1,     1,
       0,     1,     2,     1,     1,     0,     1,     1,     1,     2,
       1,     2,     3,     3,     2,     2,     3,     2,     0,     1,
       0,     4,     1,     1,     1,     0,     1,     2,     1,     1,
       2,     1,     3,     3,     1,     1,     0,     2,     0,     1,
       5,     0,     3,     3,     1,     0,     2,     2,     2,     0,
       3,     3,     6,     6,     1,     1,     2,     2,     2,     2,
       2,     1,     1,     0,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     0,     1,     0,     1,     1,     2,     1,
       2,     1,     2,     0,     2,     0,     2,     2,     2,     2,
       3,     2,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     1,     1,     1,     2,     4,     2,     0,     4,     1,
       4,     1,     0,     1,     1,     3,     0,     0,     9,     0,
       5,     0,     7,     7,     0,     6,     0,     6,     0,    11,
       0,    10,     0,    11,     0,     8,     8,     0,     0,     0,
       9,     1,     1,     0,     1,     1,     3,     0,     2,     3,
       5,     5,     0,     3,     1,     4,     0,     3,     0,     2,
       0,     1,     0,     2,     2,     2,     2,     1,     1,     1,
       4,     4,     0,     6,     4,     0,     5,     0,     6,     4,
       3,     1,     8,     8,     0,     9,     2,     1,     1,     0,
       6,     0,     3,     2,     0,     5,     0,     0,     6,     1,
       3,     1,     1,     3,     3,     3,     2,     2,     4,     4,
       2,     7,     6,     5,     5,     4,     5,     4,     4,     2,
       2,     7,     5,     6,     3,     6,     6,     4,     6,     1,
       1,     1,     1,     1,     3,     3,     3,     5,     0,     2,
       2,     0,     1,     1,     2,     2,     3,     3,     3,     3,
       0,     1,     0,     1,     0,     2,     0,     1,     2,     1,
       1,     1,     0,     1,     1,     0,     2,     1,     0,     1,
       1,     1,     0,     7,     0,     5,     5,     4,     3,     0,
       1,     1,     3,     3,     2,     2,     0,     2,     1,     3,
       0,     1,     1,     0,     2,     4,     4,     4,     1,     3,
       0,     5,     0,     1,     1,     3,     0,     4,     0,     4,
       0,     1,     1,     2,     1,     1,     1,     1,     0,     2,
       2,     0,     5,     1,     3,     2,     0,     3,     1,     4,
       1,     0,     4,     1,     0,     4,     0,     1,     3,     0,
       1,     3,     1,     1,     2,     6,     3,     0,     4,     0,
       3,     0,     1,     1,     2,     1,     1,     1,     1,     1,
       2,     0,     2,     0,     6,     0,     1,     1,     0,     5,
       4,     3,     5,     1,     3,     4,     0,     6,     1,     1,
       1,     3,     2,     3,     1,     1,     0,     6,     1,     1,
       1,     3,     3,     4,     0,     6,     0,     2,     0,     4,
       0,     2,     0,     3,     0,     4,     0,     3,     0,     4,
       1,     1,     0,     3,     0,     0,     5,     6,     7,     1,
       2,     1,     1,     0,     3,     0,     3,     3,     3,     1,
       0,     4,     3,     1,     1,     1,     1,     1,     4,     0,
       1,     2,     1,     1,     0,     1,     0,     1,     1,     2,
       1,     2,     9,     0,     1,     0,     2,     3,     1,     4,
       4,     2,     1,     1,     1,     1,     3,     5,     0,     1,
       0,     2,     1,     2,     3,     1,     1,     3,     4,     0,
       0,     0,     0,     0,     0,     0,     0,     2,     2,     1,
       1,     0,     2,     3,     0,     2,     3,     0,     2,     1,
       3,     3,     3,     2,     1,     3,     4,     3,     4,     3,
       4,     3,     4,     3,     3,     6,     1,     3,     4,     5,
       7,     6,     8,     5,     6,     4,     3,     5,     4,     6,
       3,     4,     1,     3,     3,     3,     3,     3,     3,     3,
       5,     5,     5,     6,     6,     3,     3,     3,     3,     3,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     2,
       1,     1,     1,     1,     2,     1,     1,     1,     2,     1,
       2,     2,     2,     1,     4,     1,     3,     1,     1,     1,
       1,     3,     1,     1,     1,     4,     4,     4,     3,     3,
       3,     3,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     6,     4,     4,     7,     6,     3,     4,
       6,     6,     4,     4,     4,     4,     4,     4,     6,     8,
      10,     1,     1,     3,     1,     1,     3,     1,     2,     2,
       2,     2,     2,     1,     3,     4,     6,     4,     6,     2,
       2,     4,     4,     4,    10,     6,     8,     6,     4,     4,
       6,     4,     3,     3,     4,     1,     4,     3,     4,     1,
       1,     5,     3,     5,     3,     6,     8,     2,     2,     8,
       8,     6,     6,     2,     2,     6,     2,     6,     8,     4,
       1,     3,     4,     8,     8,     4,     2,     2,     2,     6,
       6,     4,     8,     4,     4,     8,     4,     6,     6,     4,
       6,     8,     6,     5,     8,     7,    10,     0,     5,     4,
       4,     4,     6,     8,     6,     6,     6,     6,     6,     2,
       3,     0,     4,     0,     3,     0,     1,     1,     3,     4,
       4,     5,     4,     4,     4,     5,     4,     0,     0,     7,
       4,     5,     4,     5,     4,     4,     4,     4,     4,     5,
       0,     9,     0,     8,     0,     7,     3,     3,     1,     1,
       1,     3,     3,     3,     3,     3,     4,     4,     4,     6,
       4,     6,     4,     6,     5,     0,     7,     4,     4,     4,
       4,     1,     0,     3,     3,     1,     3,     5,     0,     1,
       0,     2,     0,     3,     4,     2,     0,     1,     2,     1,
       0,     3,     2,     3,     3,     3,     2,     1,     1,     1,
       1,     1,     2,     1,     2,     2,     1,     2,     1,     2,
       2,     3,     0,     1,     1,     3,     1,     3,     1,     3,
       4,     5,     1,     3,     1,     1,     1,     1,     2,     1,
       4,     1,     3,     0,     3,     0,     5,     2,     4,     4,
       1,     1,     1,     1,     0,     1,     2,     1,     2,     1,
       1,     1,     1,     2,     3,     3,     0,     0,    10,     1,
       4,     1,     3,     3,     0,     6,     0,     8,     4,     0,
       8,     0,    10,     6,     0,     8,     0,    10,     6,     1,
       2,     1,     1,     2,     0,     1,     5,     1,     1,     1,
       1,     1,     1,     3,     1,     3,     3,     3,     3,     3,
       3,     3,     5,     1,     4,     2,     0,     1,     0,     2,
       3,     3,     1,     1,     0,     7,     0,     7,     1,     2,
       0,     0,     2,     0,     2,     0,     1,     1,     1,     1,
       3,     1,     3,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     1,
       1,     0,     1,     2,     0,     1,     0,     0,     3,     0,
       0,     3,     0,     4,     4,     2,     0,     1,     1,     0,
       2,     3,     1,     3,     0,     7,     0,     1,     0,     3,
       0,     3,     0,     3,     1,     1,     1,     4,     2,     2,
       2,     1,     2,     2,     0,     3,     2,     2,     3,     3,
       3,     3,     1,     2,     0,     1,     0,     4,     4,     2,
       0,     1,     1,     0,     1,     2,     5,     4,     1,     4,
       7,     5,     8,     3,     1,     1,     1,     1,     1,     2,
       1,     1,     3,     3,     1,     3,     1,     1,     1,     1,
       1,     0,     2,     3,     4,     1,     2,     1,     0,     1,
       1,     1,     0,     2,     2,     0,     1,     2,     1,     0,
       1,     2,     2,     2,     1,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     6,     0,     1,     3,     1,     3,     0,     2,
       3,     1,     1,     2,     1,     3,     2,     0,     0,     7,
       2,     1,     0,     3,     0,     8,     0,     8,     4,     5,
       5,     0,     6,     4,     4,     4,     0,     6,     1,     1,
       3,     1,     2,     1,     3,     1,     0,     2,     0,     2,
       0,     1,     0,     0,    12,     0,     0,    10,     0,     0,
       0,     1,     1,     0,     1,     1,     1,     0,     1,     0,
       2,     1,     2,     0,     3,     3,     0,     1,     3,     1,
       1,     3,     1,     3,     1,     3,     1,     1,     0,     1,
       1,     1,     1,     1,     0,     4,     0,     4,     0,     1,
       0,     1,     3,     1,     5,     3,     1,     1,     1,     1,
       0,     0,     0,     7,     5,     1,     0,     0,     0,    13,
       3,     1,     3,     3,     3,     1,     3,     0,     1,     0,
       3,     0,     3,     2,     0,     5,     5,     2,     0,     7,
       0,     0,     8,     0,     0,     9,     0,     0,     3,     0,
       2,     0,     2,     1,     1,     1,     0,     0,     7,     0,
       1,     0,     1,     1,     3,     1,     1,     2,     2,     2,
       1,     1,     1,     1,     0,     3,     0,     3,     2,     4,
       4,     3,     4,     4,     1,     3,     3,     3,     3,     6,
       2,     2,     0,     6,     0,     8,     5,     2,     1,     1,
       1,     5,     5,     2,     2,     1,     4,     3,     2,     3,
       2,     2,     1,     4,     4,     3,     3,     3,     2,     2,
       3,     4,     3,     3,     3,     3,     4,     4,     3,     3,
       2,     3,     3,     3,     3,     3,     4,     4,     3,     3,
       4,     4,     3,     4,     4,     3,     1,     1,     1,     1,
       1,     0,     1,     0,     2,     0,     1,     1,     1,     0,
       2,     0,     2,     0,     3,     3,     0,     4,     0,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     1,
       2,     1,     1,     0,     3,     0,     1,     1,     5,     0,
       4,     0,     4,     1,     0,     1,     4,     0,     3,     3,
       1,     2,     2,     2,     2,     3,     4,     2,     1,     1,
       1,     1,     2,     2,     2,     1,     1,     1,     1,     1,
       2,     0,     1,     2,     2,     0,     3,     1,     0,     5,
       0,     1,     3,     1,     0,     3,     0,     3,     3,     1,
       0,     5,     0,     3,     2,     0,     1,     0,     2,     5,
       0,     6,     0,     4,     0,     1,     1,     2,     2,     3,
       0,     1,     1,     2,     0,     3,     0,     4,     2,     0,
       0,     0,     0,    23,     1,     1,     0,     1,     0,     1,
       1,     0,     1,     1,     0,     2,     2,     1,     3,     4,
       3,     3,     0,     2,     2,     1,     3,     3,     0,     4,
       0,     3,     1,     1,     0,     3,     2,     3,     1,     1,
       2,     0,     2,     3,     1,     5,     1,     1,     2,     2,
       1,     1,     1,     1,     1,     1,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     2,     2,     2,     0,     4,
       0,     1,     1,     3,     1,     7,     0,     0,     4,     0,
       3,     1,     1,     3,     1,     1,     1,     3,     5,     3,
       5,     1,     1,     3,     4,     5,     4,     1,     3,     4,
       4,     5,     1,     5,     3,     2,     1,     3,     2,     2,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     3,
       0,     3,     0,     3,     0,     5,     1,     3,     1,     3,
       0,     3,     1,     3,     0,     3,     1,     1,     1,     1,
       0,     1,     1,     1,     0,     2,     2,     2,     0,     4,
       0,     6,     0,     6,     0,     4,     0,     6,     0,     6,
       0,     4,     0,     6,     0,     6,     0,     7,     0,     7,
       0,     9,     0,     9,     2,     3,     2,     4,     3,     5,
       2,     0,     4,     0,     4,     0,     6,     1,     1,     3,
       3,     1,     3,     2,     2,     2,     2,     2,     1,     1,
       4,     4,     3,     3,     3,     1,     1,     1,     0,     5,
       0,     2,     1,     1,     1,     1,     3,     3,     1,     1,
       2,     2,     2,     0,     3,     0,     3,     3,     2,     0,
       6,     1,     2,     1,     1,     1,     1,     1,     1,     0,
       5,     1,     1,     1,     1,     1,     3,     6,     6,     7,
       5,     3,     4,     1,     3,     8,     8,     6,     4,     0,
       3,     0,     3,     1,     3,     2,     1,     1,     1,     0,
       1,     1,     2,     0,     1,     1,     1,     3,     3,     4,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     3,     2,     2,     2,     2,     2,     2,     2,
       2,     1,     1,     2,     2,     2,     2,     2,     3,     2,
       2,     2,     2,     3,     3,     2,     3,     0,     1,     3,
       1,     2,     2,     2,     1,     3,     3,     1,     1,     3,
       1,     3,     1,     3,     1,     1,     1,     1,     4,     5,
       4,     1,     3,     1,     2,     0,     2,     5,     0,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       0,     2,     0,     2,     0,     3,     2,     1,     2,     1,
       0,     3,     1,     0,     1,     0,     1,     0,     3,     2,
       0,     1,     2,     4,     4,     5,     4,     2,     3,     2,
       2,     2,     0,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     3,     3,
       3,     0,     1,     3,     3,     0,     3,     1,     3,     0,
       3,     0,     3,     4,     4,     1,     1,     0,     2,     0,
       2,     1,     3,     0,     0,     0,     0,     0,    21,     2,
       1,     1,     2,     0,     1,     0,     2,     4,     4,     3,
       4,     3,     3,     0,     3,     1,     3,     5,     1,     1,
       1,     0,     1,     1,     0,     2,     0,     0,     3,     0,
       2,     6,     3,     4,     4,     1,     0,     1,     1,     1,
       0,     3,     0,     5,     0,     7,     1,     1,     1,     1,
       0,     3,     1,     2,     3,     5,     5,     7,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     2,     2,     1,     1,     0,     6,     4,     1,     1,
       1,     4,     4,     1,     1,     1,     1,     2,     0,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     4,     0,     6,     0,     7,     1,     2,
       3,     1,     2,     1,     2,     0,     5,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     0,     0,
       0,     0,     7,     1,     1,     2,     1,     1,     3,     1,
       2,     1,     2,     0,     6,     0,     5,     4,     4,     1,
       0,     5,     0,     5,     1,     1,     1,     2,     3,     3,
       5,     5,     3,     2,     3,     1,     6,     8,     4,     6,
       0,     5,     0,     0,     8,     0,     6,     0,    11,     0,
      11,    10,     0,    12,     0,     0,    13,     1,     1,     0,
       3,     1,     2,     3,     2,     3,     1,     1,     1,     4,
       2,     0,     6,     5,     1,     1,     1,     1,     1,     2,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     6,     0,     0,     9,
       1,     2,     0,     5,     0,     0,     7,     0,     4
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (thd, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)




# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (thd);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep, thd);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,
                 int yyrule, THD *thd)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)], thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, THD *thd)
{
  YY_USE (yyvaluep);
  YY_USE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  switch (yykind)
    {
    case YYSYMBOL_expr_lex: /* expr_lex  */
#line 1593 "/home/buildbot/git/mkdist/sql/yy_oracle.yy"
{
  /*
     In case of a syntax/oom error let's free the sp_expr_lex
     instance, but only if it has not been linked to any structures
     such as sp_instr_jump_if_not::m_lex_keeper yet, e.g.:
       IF f1() THEN1
     i.e. THEN1 came instead of the expected THEN causing a syntax error.
  */
  if (!((*yyvaluep).expr_lex)->sp_lex_in_use)
    delete ((*yyvaluep).expr_lex);
}
#line 29167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
        break;

    case YYSYMBOL_cursor_actual_parameters: /* cursor_actual_parameters  */
#line 1653 "/home/buildbot/git/mkdist/sql/yy_oracle.yy"
{
  if (((*yyvaluep).sp_assignment_lex_list))
  {
    sp_assignment_lex *elem;
    List_iterator<sp_assignment_lex> li(*((*yyvaluep).sp_assignment_lex_list));
    while ((elem= li++))
    {
      if (!elem->sp_lex_in_use)
        delete elem;
    }
  }
}
#line 29184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
        break;

    case YYSYMBOL_opt_parenthesized_cursor_actual_parameters: /* opt_parenthesized_cursor_actual_parameters  */
#line 1653 "/home/buildbot/git/mkdist/sql/yy_oracle.yy"
{
  if (((*yyvaluep).sp_assignment_lex_list))
  {
    sp_assignment_lex *elem;
    List_iterator<sp_assignment_lex> li(*((*yyvaluep).sp_assignment_lex_list));
    while ((elem= li++))
    {
      if (!elem->sp_lex_in_use)
        delete elem;
    }
  }
}
#line 29201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
        break;

      default:
        break;
    }
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* query: END_OF_INPUT  */
#line 2036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 29484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3: /* $@1: %empty  */
#line 2045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 29511 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 5: /* query: directly_executable_statement END_OF_INPUT  */
#line 2070 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 29520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 71: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 2153 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 29528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 74: /* $@2: %empty  */
#line 2165 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str=
            Lex->clause_that_disallows_subselect= "PREPARE..FROM";
          }
#line 29538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 75: /* prepare: PREPARE_SYM ident FROM $@2 expr  */
#line 2171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 29548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 76: /* execute: EXECUTE_SYM ident execute_using  */
#line 2180 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 29557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 77: /* $@3: %empty  */
#line 2185 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str=
            Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE";
          }
#line 29567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 78: /* $@4: %empty  */
#line 2191 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= NULL; }
#line 29573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 79: /* execute: EXECUTE_SYM IMMEDIATE_SYM $@3 expr $@4 execute_using  */
#line 2193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 29582 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 80: /* execute_using: %empty  */
#line 2200 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item_list)= NULL; }
#line 29588 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 81: /* $@5: %empty  */
#line 2202 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 29594 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 82: /* execute_using: USING $@5 execute_params  */
#line 2204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 29603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 83: /* execute_params: expr_or_ignore_or_default  */
#line 2212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 29612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 84: /* execute_params: execute_params ',' expr_or_ignore_or_default  */
#line 2217 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 29621 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 85: /* $@6: %empty  */
#line 2228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 29630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 86: /* help: HELP_SYM $@6 ident_or_text  */
#line 2233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 29640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 87: /* $@7: %empty  */
#line 2244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 29648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 88: /* change: CHANGE MASTER_SYM optional_connection_name TO_SYM $@7 master_defs optional_for_channel  */
#line 2249 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 29654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 91: /* master_def: MASTER_HOST_SYM '=' TEXT_STRING_sys  */
#line 2259 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 29662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 92: /* master_def: MASTER_USER_SYM '=' TEXT_STRING_sys  */
#line 2263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 29670 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 93: /* master_def: MASTER_PASSWORD_SYM '=' TEXT_STRING_sys  */
#line 2267 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 29678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 94: /* master_def: MASTER_PORT_SYM '=' ulong_num  */
#line 2271 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 29686 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 95: /* master_def: MASTER_CONNECT_RETRY_SYM '=' ulong_num  */
#line 2275 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 29694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 96: /* master_def: MASTER_DELAY_SYM '=' ulong_num  */
#line 2279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 29708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 97: /* master_def: MASTER_SSL_SYM '=' ulong_num  */
#line 2289 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 29717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 98: /* master_def: MASTER_SSL_CA_SYM '=' TEXT_STRING_sys  */
#line 2294 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 29725 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 99: /* master_def: MASTER_SSL_CAPATH_SYM '=' TEXT_STRING_sys  */
#line 2298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 29733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 100: /* master_def: MASTER_SSL_CERT_SYM '=' TEXT_STRING_sys  */
#line 2302 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 29741 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 101: /* master_def: MASTER_SSL_CIPHER_SYM '=' TEXT_STRING_sys  */
#line 2306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 29749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 102: /* master_def: MASTER_SSL_KEY_SYM '=' TEXT_STRING_sys  */
#line 2310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 29757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 103: /* master_def: MASTER_SSL_VERIFY_SERVER_CERT_SYM '=' ulong_num  */
#line 2314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 29766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 104: /* master_def: MASTER_SSL_CRL_SYM '=' TEXT_STRING_sys  */
#line 2319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 29774 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 105: /* master_def: MASTER_SSL_CRLPATH_SYM '=' TEXT_STRING_sys  */
#line 2323 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 29782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 106: /* master_def: MASTER_HEARTBEAT_PERIOD_SYM '=' NUM_literal  */
#line 2328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning(thd, Sql_condition::WARN_LEVEL_WARN,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning(thd, Sql_condition::WARN_LEVEL_WARN,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 107: /* master_def: IGNORE_SERVER_IDS_SYM '=' '(' ignore_server_id_list ')'  */
#line 2356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 29822 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 108: /* master_def: DO_DOMAIN_IDS_SYM '=' '(' do_domain_id_list ')'  */
#line 2360 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 109: /* master_def: IGNORE_DOMAIN_IDS_SYM '=' '(' ignore_domain_id_list ')'  */
#line 2364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 29838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 114: /* ignore_server_id: ulong_num  */
#line 2379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 118: /* do_domain_id: ulong_num  */
#line 2392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 122: /* ignore_domain_id: ulong_num  */
#line 2405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 29862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 123: /* master_file_def: MASTER_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 29870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 124: /* master_file_def: MASTER_LOG_POS_SYM '=' ulonglong_num  */
#line 2416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 29889 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 125: /* master_file_def: RELAY_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 29897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 126: /* master_file_def: RELAY_LOG_POS_SYM '=' ulong_num  */
#line 2435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 29907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 127: /* master_file_def: MASTER_USE_GTID_SYM '=' CURRENT_POS_SYM  */
#line 2441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 29917 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 128: /* master_file_def: MASTER_USE_GTID_SYM '=' SLAVE_POS_SYM  */
#line 2447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 29927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 129: /* master_file_def: MASTER_USE_GTID_SYM '=' NO_SYM  */
#line 2453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 29937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 130: /* master_file_def: MASTER_DEMOTE_TO_SLAVE_SYM '=' bool  */
#line 2459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.is_demotion_opt= (bool) (yyvsp[0].ulong_num);
          }
#line 29945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 131: /* optional_connection_name: %empty  */
#line 2466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 29954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 133: /* connection_name: TEXT_STRING_sys  */
#line 2475 "/home/buildbot/git/sql/sql_yacc.yy"
        {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 29966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 134: /* optional_for_channel: %empty  */
#line 2486 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*do nothing */
          }
#line 29974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 136: /* for_channel: FOR_SYM CHANNEL_SYM TEXT_STRING_sys  */
#line 2495 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (Lex->mi.connection_name.str != NULL)
          {
            my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "CONNECTION_NAME AND FOR CHANNEL CAN NOT BE SPECIFIED AT THE SAME TIME)"));
          }
          else
          {
            Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
          }

          }
#line 29994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 137: /* $@8: %empty  */
#line 2516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 30010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 138: /* $@9: %empty  */
#line 2528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                    TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
            lex->inc_select_stack_outer_barrier();
          }
#line 30031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 139: /* create: create_or_replace opt_temporary TABLE_SYM opt_if_not_exists $@8 table_ident $@9 create_body  */
#line 2545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 30041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 140: /* $@10: %empty  */
#line 2551 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                   TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 30075 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 141: /* create: create_or_replace opt_temporary SEQUENCE_SYM opt_if_not_exists table_ident $@10 opt_sequence opt_create_table_options  */
#line 2581 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->
                         check_and_adjust(thd, 1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(
                lex->create_info.seq_create_info->prepare_sequence_fields(
                &lex->alter_info.create_list, false)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
            Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 30106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 142: /* $@11: %empty  */
#line 2608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 30115 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 143: /* $@12: %empty  */
#line 2615 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::MULTIPLE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 30126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 144: /* create: create_or_replace INDEX_SYM opt_if_not_exists $@11 ident opt_key_algorithm_clause ON table_ident $@12 '(' key_list ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 145: /* $@13: %empty  */
#line 2627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 30143 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 146: /* $@14: %empty  */
#line 2634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::UNIQUE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 30154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 147: /* create: create_or_replace UNIQUE_SYM INDEX_SYM opt_if_not_exists $@13 ident opt_key_algorithm_clause ON table_ident $@14 '(' key_list opt_without_overlaps ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 148: /* $@15: %empty  */
#line 2647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 30171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 149: /* $@16: %empty  */
#line 2653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 30182 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 150: /* create: create_or_replace fulltext INDEX_SYM $@15 opt_if_not_exists ident ON table_ident $@16 '(' key_list ')' opt_lock_wait_timeout fulltext_key_options opt_index_lock_algorithm  */
#line 2661 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30190 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 151: /* $@17: %empty  */
#line 2665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 30199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 152: /* $@18: %empty  */
#line 2671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 30210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 153: /* create: create_or_replace spatial_or_vector INDEX_SYM $@17 opt_if_not_exists ident ON table_ident $@18 '(' key_part_simple ')' opt_lock_wait_timeout spatial_key_options opt_index_lock_algorithm  */
#line 2679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-4].key_part), thd->mem_root);
            Lex->pop_select(); //main select
          }
#line 30219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 154: /* $@19: %empty  */
#line 2684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
          }
#line 30227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 155: /* create: create_or_replace DATABASE opt_if_not_exists ident $@19 opt_create_database_options  */
#line 2688 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 30239 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 156: /* $@20: %empty  */
#line 2697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 30252 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 157: /* create: create_or_replace definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@20 view_list_opt AS view_select  */
#line 2706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 158: /* $@21: %empty  */
#line 2711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
          }
#line 30272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 159: /* create: create_or_replace view_algorithm definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@21 view_list_opt AS view_select  */
#line 2719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 160: /* $@22: %empty  */
#line 2723 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 30290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 161: /* create: create_or_replace definer_opt TRIGGER_SYM $@22 trigger_tail  */
#line 2729 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 162: /* $@23: %empty  */
#line 2733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 30308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 163: /* create: create_or_replace definer_opt EVENT_SYM $@23 event_tail  */
#line 2739 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 30316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 164: /* create: create_or_replace USER_SYM opt_if_not_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 2744 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 165: /* create: create_or_replace ROLE_SYM opt_if_not_exists clear_privileges role_list opt_with_admin  */
#line 2751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 30336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 166: /* $@24: %empty  */
#line 2756 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 30342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 167: /* create: create_or_replace $@24 server_def  */
#line 2758 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 30348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 169: /* opt_sequence: %empty  */
#line 2763 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 30354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 173: /* sequence_def: AS int_type field_options  */
#line 2774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_as))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "AS"));
            if ((yyvsp[0].ulong_num) & ZEROFILL_FLAG)
                my_yyabort_error((ER_BAD_OPTION_VALUE, MYF(0), "ZEROFILL",
                                  "AS"));
            seq->value_type = (yyvsp[-1].type_handler)->field_type();
            seq->is_unsigned= (yyvsp[0].ulong_num) & UNSIGNED_FLAG ? true : false;
            seq->used_fields|= seq_field_used_as;
          }
#line 30370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 174: /* sequence_def: MINVALUE_SYM opt_equal sequence_truncated_value_hybrid_num  */
#line 2786 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            seq->min_value_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|=
              seq_field_used_min_value;
            seq->used_fields|=
              seq_field_specified_min_value;
          }
#line 30385 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 175: /* sequence_def: NO_SYM MINVALUE_SYM  */
#line 2797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            seq->used_fields|= seq_field_used_min_value;
          }
#line 30396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 176: /* sequence_def: NOMINVALUE_SYM  */
#line 2804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            seq->used_fields|= seq_field_used_min_value;
          }
#line 30407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 177: /* sequence_def: MAXVALUE_SYM opt_equal sequence_truncated_value_hybrid_num  */
#line 2811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            seq->max_value_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|= seq_field_used_max_value;
            seq->used_fields|= seq_field_specified_max_value;
          }
#line 30420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 178: /* sequence_def: NO_SYM MAXVALUE_SYM  */
#line 2820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            seq->used_fields|= seq_field_used_max_value;
          }
#line 30431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 179: /* sequence_def: NOMAXVALUE_SYM  */
#line 2827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            seq->used_fields|= seq_field_used_max_value;
          }
#line 30442 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 180: /* sequence_def: START_SYM opt_with sequence_value_hybrid_num  */
#line 2834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            seq->start_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|= seq_field_used_start;
          }
#line 30454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 181: /* sequence_def: INCREMENT_SYM opt_by sequence_value_num  */
#line 2842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            seq->increment= (yyvsp[0].longlong_number);
            seq->used_fields|= seq_field_used_increment;
          }
#line 30466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 182: /* sequence_def: CACHE_SYM opt_equal sequence_value_num  */
#line 2850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            seq->cache= (yyvsp[0].longlong_number);
            seq->used_fields|= seq_field_used_cache;
          }
#line 30478 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 183: /* sequence_def: NOCACHE_SYM  */
#line 2858 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            seq->cache= 0;
            seq->used_fields|= seq_field_used_cache;
          }
#line 30490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 184: /* sequence_def: CYCLE_SYM  */
#line 2866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            seq->cycle= 1;
            seq->used_fields|= seq_field_used_cycle;
          }
#line 30502 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 185: /* sequence_def: NOCYCLE_SYM  */
#line 2874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            seq->cycle= 0;
            seq->used_fields|= seq_field_used_cycle;
          }
#line 30514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 186: /* sequence_def: RESTART_SYM  */
#line 2882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            seq->used_fields|= seq_field_used_restart;
          }
#line 30530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 187: /* sequence_def: RESTART_SYM opt_with sequence_value_hybrid_num  */
#line 2894 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            seq->restart_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|=
              seq_field_used_restart | seq_field_used_restart_value;
          }
#line 30548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 188: /* force_lookahead: %empty  */
#line 2910 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 30554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 189: /* force_lookahead: FORCE_LOOKAHEAD  */
#line 2910 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 30560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 190: /* $@25: %empty  */
#line 2914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 30570 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 191: /* server_def: SERVER_SYM opt_if_not_exists ident_or_text $@25 FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 2921 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 30576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 194: /* server_option: USER_SYM TEXT_STRING_sys  */
#line 2931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 195: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 2944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 196: /* server_option: DATABASE TEXT_STRING_sys  */
#line 2957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30627 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 197: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 2970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 198: /* server_option: PASSWORD_SYM TEXT_STRING_sys  */
#line 2983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30661 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 199: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 2996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 200: /* server_option: PORT_SYM ulong_num  */
#line 3009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->server_options.port= (yyvsp[0].ulong_num);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                (yyvsp[0].ulong_num), thd->mem_root);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30693 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 201: /* server_option: PORT_SYM TEXT_STRING_sys  */
#line 3021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            char *end= (char *) (yyvsp[0].lex_str).str + (yyvsp[0].lex_str).length;
            longlong p= my_strtoll10((yyvsp[0].lex_str).str, &end, &error);
            if (error > 0 || end != (char *) (yyvsp[0].lex_str).str + (yyvsp[0].lex_str).length ||
                p > LONG_MAX || p < LONG_MIN)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->server_options.port= (long) p;
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 202: /* server_option: IDENT_sys TEXT_STRING_sys  */
#line 3042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].ident_sys))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 30733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 203: /* $@26: %empty  */
#line 3056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 30754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 204: /* event_tail: remember_name opt_if_not_exists sp_name $@26 ON SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 3077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 30766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 205: /* $@27: %empty  */
#line 3088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 30775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 207: /* ev_schedule_time: AT_SYM expr  */
#line 3095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 30783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 208: /* opt_ev_status: %empty  */
#line 3101 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 209: /* opt_ev_status: ENABLE_SYM  */
#line 3103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 30799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 210: /* opt_ev_status: DISABLE_SYM ON SLAVE  */
#line 3109 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 30809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 211: /* opt_ev_status: DISABLE_SYM  */
#line 3115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 30819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 212: /* ev_starts: %empty  */
#line 3124 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_current_timestamp(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 30830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 213: /* ev_starts: STARTS_SYM expr  */
#line 3131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 30838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 215: /* ev_ends: ENDS_SYM expr  */
#line 3139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 30846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 216: /* opt_ev_on_completion: %empty  */
#line 3145 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 218: /* ev_on_completion: ON COMPLETION_SYM opt_not PRESERVE_SYM  */
#line 3151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 30863 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 219: /* opt_ev_comment: %empty  */
#line 3160 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 30869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 220: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 3162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 30878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 221: /* $@28: %empty  */
#line 3169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 30915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 222: /* ev_sql_stmt: $@28 sp_proc_stmt force_lookahead  */
#line 3202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 30925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 223: /* clear_privileges: %empty  */
#line 3211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 30936 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 224: /* opt_aggregate: %empty  */
#line 3220 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 30942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 225: /* opt_aggregate: AGGREGATE_SYM  */
#line 3221 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 30948 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 226: /* sp_handler: FUNCTION_SYM  */
#line 3226 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_function; }
#line 30954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 227: /* sp_handler: PROCEDURE_SYM  */
#line 3227 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_procedure; }
#line 30960 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 230: /* sp_handler_package_spec: PACKAGE_ORACLE_SYM  */
#line 3233 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 30966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 231: /* sp_handler_package_spec: PACKAGE_MARIADB_SYM  */
#line 3234 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 30972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 232: /* sp_handler_package_body: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM  */
#line 3238 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_body; }
#line 30978 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 233: /* sp_handler_package_body: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM  */
#line 3239 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_body; }
#line 30984 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 234: /* drop_routine: DROP sp_handler opt_if_exists ident '.' ident  */
#line 3244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_routine((yyvsp[-4].sp_handler), (yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 30993 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 235: /* drop_routine: DROP sp_handler opt_if_exists ident  */
#line 3249 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_routine((yyvsp[-2].sp_handler), (yyvsp[-1].object_ddl_options), Lex_ident_sys(), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 31002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 236: /* sp_name: ident '.' ident  */
#line 3258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 31011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 237: /* sp_name: ident  */
#line 3263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, (yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 31020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 238: /* sp_a_chistics: %empty  */
#line 3270 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31026 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 239: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 3271 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 31032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 240: /* sp_c_chistics: %empty  */
#line 3275 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 241: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 3276 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 31044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 242: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 3282 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 31050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 243: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 3284 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Just parse it, we only have one language for now. */ }
#line 31056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 244: /* sp_chistic: NO_SYM SQL_SYM  */
#line 3286 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 31062 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 245: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 3288 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 31068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 246: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 3290 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 31074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 247: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 3292 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 31080 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 248: /* sp_chistic: sp_suid  */
#line 3294 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 31086 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 249: /* sp_c_chistic: sp_chistic  */
#line 3299 "/home/buildbot/git/sql/sql_yacc.yy"
                                { }
#line 31092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 250: /* sp_c_chistic: opt_not DETERMINISTIC_SYM  */
#line 3300 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 31098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 251: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3304 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_SUID; }
#line 31104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 252: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3305 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 31110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 253: /* $@29: %empty  */
#line 3310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 254: /* call: CALL_SYM ident $@29 opt_sp_cparam_list  */
#line 3315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 31128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 255: /* $@30: %empty  */
#line 3320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 256: /* call: CALL_SYM ident '.' ident $@30 opt_sp_cparam_list  */
#line 3325 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 31146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 257: /* $@31: %empty  */
#line 3330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 258: /* call: CALL_SYM ident '.' ident '.' ident $@31 opt_sp_cparam_list  */
#line 3335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 31164 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 260: /* $@32: %empty  */
#line 3345 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          thd->where= THD_WHERE::USE_WHERE_STRING;
          thd->where_str= "CALL";
        }
#line 31173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 264: /* sp_cparams: sp_cparams ',' expr  */
#line 3358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 31181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 265: /* sp_cparams: expr  */
#line 3362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 31189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 266: /* sp_fdparam_list: %empty  */
#line 3370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 31198 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 267: /* $@33: %empty  */
#line 3375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 31206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 268: /* sp_fdparam_list: $@33 sp_fdparams  */
#line 3379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 31214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 273: /* sp_param_name: ident  */
#line 3396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 31223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 274: /* sp_param_name_and_mode_init_vars: sp_param_name_and_mode  */
#line 3404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, 1);
            (yyval.spvar)= (yyvsp[0].spvar);
          }
#line 31232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 279: /* sp_parameter_type: IN_SYM  */
#line 3422 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 31238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 280: /* sp_parameter_type: OUT_SYM  */
#line 3423 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 31244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 281: /* sp_parameter_type: INOUT_SYM  */
#line 3424 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 31250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 282: /* $@34: %empty  */
#line 3429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 31258 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 283: /* sp_parenthesized_pdparam_list: '(' $@34 sp_pdparam_list ')'  */
#line 3434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 31266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 284: /* sp_param_default: sp_param_init_vars sp_opt_default  */
#line 3441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_set_default_and_finalize(((yyval.spvar)= (yyvsp[-1].spvar)), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
          }
#line 31275 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 285: /* sp_param: sp_param_init_vars  */
#line 3449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_set_default_and_finalize(((yyval.spvar)= (yyvsp[0].spvar)), nullptr, empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 31284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 287: /* sp_proc_stmts: %empty  */
#line 3460 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 31290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 289: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3465 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 31296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 291: /* optionally_qualified_column_ident: sp_decl_ident  */
#line 3472 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 31306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 292: /* optionally_qualified_column_ident: sp_decl_ident '.' ident  */
#line 3478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 31316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 293: /* optionally_qualified_column_ident: sp_decl_ident '.' ident '.' ident  */
#line 3484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 31326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 294: /* row_field_definition: row_field_name field_type  */
#line 3494 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 31335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 295: /* row_field_definition_list: row_field_definition  */
#line 3502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 31344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 296: /* row_field_definition_list: row_field_definition_list ',' row_field_definition  */
#line 3507 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 31353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 297: /* row_type_body: '(' row_field_definition_list ')'  */
#line 3514 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 31359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 298: /* rec_field_definition: row_field_name field_type  */
#line 3520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 31368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 300: /* rec_field_definition_anchored: row_field_name sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 3529 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_def_fill_type_reference(thd,
                                                                    (yyvsp[-5].spvar_definition), (yyvsp[-4].ident_sys),
                                                                    (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 301: /* rec_field_definition_anchored: row_field_name sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 3536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_def_fill_type_reference(thd,
                                                                    (yyvsp[-7].spvar_definition), (yyvsp[-6].ident_sys),
                                                                    (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 302: /* rec_field_definition_list: rec_field_definition  */
#line 3546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 31399 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 303: /* rec_field_definition_list: rec_field_definition_list ',' rec_field_definition  */
#line 3551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 31408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 304: /* rec_type_body: '(' rec_field_definition_list ')'  */
#line 3558 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 31414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 305: /* sp_decl_idents_init_vars: sp_decl_idents  */
#line 3564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 31422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 306: /* $@35: %empty  */
#line 3572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 31431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 307: /* sp_decl_variable_list: sp_decl_idents_init_vars field_type_all_with_record $@35 sp_opt_default  */
#line 3577 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-3].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].expr_and_query_str).expr,
                                                                (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 31444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 308: /* sp_decl_variable_list: sp_decl_idents_init_vars ROW_SYM row_type_body sp_opt_default  */
#line 3588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list),
                                                                    (yyvsp[0].expr_and_query_str).expr,
                                                                    (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 31456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 310: /* $@36: %empty  */
#line 3600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 31465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 311: /* sp_decl_handler: sp_handler_type HANDLER_SYM FOR_SYM $@36 sp_hcond_list sp_proc_stmt  */
#line 3605 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 31476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 314: /* sp_cursor_stmt_lex: %empty  */
#line 3620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 31487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 315: /* $@37: %empty  */
#line 3630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 31498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 316: /* sp_cursor_stmt: sp_cursor_stmt_lex $@37 remember_name select remember_end  */
#line 3637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex == (yyvsp[-4].sp_cursor_stmt));
            Lex->pop_select(); //main select
            if (unlikely((yyvsp[-4].sp_cursor_stmt)->stmt_finalize(thd)))
              MYSQL_YYABORT;
	    if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyvsp[-4].sp_cursor_stmt)->set_expr_str(expr_str);
            }
            if (unlikely((yyvsp[-4].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;

            (yyval.sp_cursor_stmt)= (yyvsp[-4].sp_cursor_stmt);
          }
#line 31521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 317: /* sp_handler_type: EXIT_MARIADB_SYM  */
#line 3658 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::EXIT; }
#line 31527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 318: /* sp_handler_type: CONTINUE_MARIADB_SYM  */
#line 3659 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::CONTINUE; }
#line 31533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 319: /* sp_handler_type: EXIT_ORACLE_SYM  */
#line 3660 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::EXIT; }
#line 31539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 320: /* sp_handler_type: CONTINUE_ORACLE_SYM  */
#line 3661 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::CONTINUE; }
#line 31545 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 321: /* sp_hcond_list: sp_hcond_element  */
#line 3667 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 31551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 322: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 3669 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 31557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 323: /* sp_hcond_element: sp_hcond  */
#line 3674 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 31573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 324: /* sp_cond: ulong_num  */
#line 3689 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 31585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 326: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 3701 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 31606 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 327: /* opt_value: %empty  */
#line 3720 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 31612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 328: /* opt_value: VALUE_SYM  */
#line 3721 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 31618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 329: /* sp_hcond: sp_cond  */
#line 3726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 31626 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 330: /* sp_hcond: ident  */
#line 3730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 31636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 331: /* sp_hcond: SQLWARNING_SYM  */
#line 3736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 31646 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 332: /* sp_hcond: not FOUND_SYM  */
#line 3742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 31656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 333: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 3748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 31666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 334: /* sp_hcond: OTHERS_ORACLE_SYM  */
#line 3754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 31676 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 335: /* raise_stmt_oracle: RAISE_ORACLE_SYM opt_set_signal_information  */
#line 3764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 31685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 336: /* raise_stmt_oracle: RAISE_ORACLE_SYM signal_value opt_set_signal_information  */
#line 3769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 31694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 337: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 3777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 31703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 338: /* signal_value: ident  */
#line 3785 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spcondvalue)= Lex->stmt_signal_value((yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 31712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 339: /* signal_value: sqlstate  */
#line 3790 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 31718 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 340: /* opt_signal_value: %empty  */
#line 3795 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= NULL; }
#line 31724 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 341: /* opt_signal_value: signal_value  */
#line 3797 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 31730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 342: /* opt_set_signal_information: %empty  */
#line 3802 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 31738 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 344: /* signal_information_item_list: signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 31750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 345: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 31764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 346: /* signal_allowed_expr: literal  */
#line 3835 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 31770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 347: /* signal_allowed_expr: variable  */
#line 3837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 31792 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 348: /* signal_allowed_expr: simple_ident  */
#line 3855 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 31798 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 349: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3861 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 31804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 350: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3863 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 31810 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 351: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3865 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 31816 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 352: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3867 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 31822 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 353: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3869 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 31828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 354: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 3871 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 31834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 355: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3873 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 31840 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 356: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 3875 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 31846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 357: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 3877 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 31852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 358: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 3879 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 31858 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 359: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3881 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 31864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 360: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3883 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 31870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 361: /* signal_condition_information_item_name: ROW_NUMBER_SYM  */
#line 3885 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_ROW_NUMBER; }
#line 31876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 362: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 3890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 31885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 363: /* $@38: %empty  */
#line 3898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str= "GET DIAGNOSTICS";
          }
#line 31894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 364: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM $@38 diagnostics_information  */
#line 3903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-3].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 31910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 365: /* which_area: %empty  */
#line 3918 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 31916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 366: /* which_area: CURRENT_SYM  */
#line 3920 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 31922 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 367: /* diagnostics_information: statement_information  */
#line 3925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 31932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 368: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 3931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 31942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 369: /* statement_information: statement_information_item  */
#line 3940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 31953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 370: /* statement_information: statement_information ',' statement_information_item  */
#line 3947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 31963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 371: /* statement_information_item: simple_target_specification '=' statement_information_item_name  */
#line 3956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 31973 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 372: /* simple_target_specification: ident_cli  */
#line 3965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 31982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 373: /* simple_target_specification: '@' ident_or_text  */
#line 3970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 31997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 374: /* statement_information_item_name: NUMBER_MARIADB_SYM  */
#line 3984 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 32003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 375: /* statement_information_item_name: NUMBER_ORACLE_SYM  */
#line 3986 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 32009 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 376: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 3988 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 32015 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 377: /* condition_number: signal_allowed_expr  */
#line 3997 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 32021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 378: /* condition_information: condition_information_item  */
#line 4002 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 32032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 379: /* condition_information: condition_information ',' condition_information_item  */
#line 4009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 32042 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 380: /* condition_information_item: simple_target_specification '=' condition_information_item_name  */
#line 4018 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 32052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 381: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 4027 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 32058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 382: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 4029 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 32064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 383: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 4031 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 32070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 384: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 4033 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 32076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 385: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 4035 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 32082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 386: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 4037 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 32088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 387: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 4039 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 32094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 388: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 4041 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 32100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 389: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 4043 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 32106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 390: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 4045 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 32112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 391: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 4047 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 32118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 392: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 4049 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 32124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 393: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 4051 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 32130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 394: /* condition_information_item_name: ROW_NUMBER_SYM  */
#line 4053 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::ROW_NUMBER; }
#line 32136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 396: /* sp_decl_ident: keyword_sp_decl  */
#line 4059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 32145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 397: /* sp_decl_idents: sp_decl_ident  */
#line 4067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 32161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 398: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 4079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 32177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 399: /* $@39: %empty  */
#line 4094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 32187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 400: /* sp_proc_stmt_if: IF_SYM $@39 sp_if END IF_SYM  */
#line 4100 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->do_cont_backpatch(); }
#line 32193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 401: /* $@40: %empty  */
#line 4104 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            /*
              We should not push main select here, it will be done or not
              done by the statement, we just provide only a new LEX for the
              statement here as if it is start of parsing a new statement.
            */
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 32210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 402: /* sp_proc_stmt_statement: $@40 sp_statement  */
#line 4117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 32220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 405: /* $@41: %empty  */
#line 4132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= (yyvsp[0].expr_lex)->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, (yyvsp[0].expr_lex)->spcont,
                                                          (yyvsp[0].expr_lex)->get_item(), (yyvsp[0].expr_lex))))
              MYSQL_YYABORT;
          }
#line 32231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 406: /* sp_proc_stmt_return: RETURN_ALLMODES_SYM expr_lex $@41  */
#line 4138 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 32237 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 407: /* sp_proc_stmt_return: RETURN_ORACLE_SYM  */
#line 4140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 32249 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 408: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM  */
#line 4151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, nullptr, empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 32258 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 409: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident  */
#line 4156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), nullptr,
                                                empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 32268 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 410: /* $@42: %empty  */
#line 4162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, (yyvsp[0].expr_lex)->get_item(),
                                               (yyvsp[0].expr_lex)->get_expr_str())))
              MYSQL_YYABORT;
          }
#line 32278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 411: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM WHEN_SYM expr_lex $@42  */
#line 4167 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 32284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 412: /* $@43: %empty  */
#line 4169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].expr_lex)->get_item(),
                                               (yyvsp[0].expr_lex)->get_expr_str())))
              MYSQL_YYABORT;
          }
#line 32294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 413: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident WHEN_SYM expr_lex $@43  */
#line 4174 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 32300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 414: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM  */
#line 4179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd)))
              MYSQL_YYABORT;
          }
#line 32309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 415: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident  */
#line 4184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 416: /* $@44: %empty  */
#line 4189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd)))
              MYSQL_YYABORT;
          }
#line 32327 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 417: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM WHEN_SYM expr_lex $@44  */
#line 4193 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 32333 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 418: /* $@45: %empty  */
#line 4195 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd, &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32342 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 419: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident WHEN_SYM expr_lex $@45  */
#line 4199 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 32348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 420: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 4205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32357 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 421: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 4213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 422: /* sp_proc_stmt_goto_oracle: GOTO_ORACLE_SYM label_ident  */
#line 4221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32375 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 423: /* @46: %empty  */
#line 4229 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.expr_lex)= new (thd->mem_root)
                           sp_expr_lex(thd, thd->lex))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd, (yyval.expr_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 32389 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 424: /* expr_lex: @46 remember_start_opt expr remember_end  */
#line 4239 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_lex)= (yyvsp[-3].expr_lex);
            (yyval.expr_lex)->set_item((yyvsp[-1].item));

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.expr_lex)->set_expr_str(expr_str);
            }

            Lex->pop_select(); //min select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if ((yyval.expr_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 32413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 425: /* assignment_source_lex: %empty  */
#line 4262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 32424 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 426: /* $@47: %empty  */
#line 4272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 32435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 427: /* assignment_source_expr: assignment_source_lex $@47 remember_cpp_ptr expr remember_end  */
#line 4279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-4].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-4].assignment_lex);
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[-1].item), thd->free_list);

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.assignment_lex)->set_expr_str(expr_str);
            }

            thd->free_list= NULL;
            Lex->pop_select(); //min select
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 32459 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 428: /* $@48: %empty  */
#line 4302 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 32470 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 429: /* for_loop_bound_expr: assignment_source_lex $@48 remember_cpp_ptr expr remember_end  */
#line 4309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-4].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-4].assignment_lex);
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[-1].item), nullptr);

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.assignment_lex)->set_expr_str(expr_str);
            }

            Lex->pop_select(); //main select
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 32494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 430: /* cursor_actual_parameters: assignment_source_expr  */
#line 4332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 32504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 431: /* cursor_actual_parameters: cursor_actual_parameters ',' assignment_source_expr  */
#line 4338 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 32513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 432: /* opt_parenthesized_cursor_actual_parameters: %empty  */
#line 4345 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= NULL; }
#line 32519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 433: /* opt_parenthesized_cursor_actual_parameters: '(' cursor_actual_parameters ')'  */
#line 4346 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 32525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 437: /* sp_proc_stmt_open: OPEN_SYM ident opt_parenthesized_cursor_actual_parameters  */
#line 4357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 32534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 438: /* sp_proc_stmt_fetch_head: FETCH_SYM ident INTO  */
#line 4365 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32543 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 439: /* sp_proc_stmt_fetch_head: FETCH_SYM FROM ident INTO  */
#line 4370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 440: /* sp_proc_stmt_fetch_head: FETCH_SYM NEXT_SYM FROM ident INTO  */
#line 4375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32561 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 441: /* sp_proc_stmt_fetch: sp_proc_stmt_fetch_head sp_fetch_list  */
#line 4382 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 32567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 442: /* sp_proc_stmt_fetch: FETCH_SYM GROUP_SYM NEXT_SYM ROW_SYM  */
#line 4384 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 32576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 443: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 4392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 32595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 444: /* sp_fetch_list: ident  */
#line 4410 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 32615 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 445: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 4426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 32635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 446: /* $@49: %empty  */
#line 4445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_if_expr(thd)))
              MYSQL_YYABORT;
          }
#line 32644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 447: /* $@50: %empty  */
#line 4450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-3].expr_lex)->sp_if_after_statements(thd)))
              MYSQL_YYABORT;
          }
#line 32653 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 448: /* sp_if: expr_lex THEN_SYM $@49 sp_if_then_statements $@50 sp_elseifs  */
#line 4455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 32663 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 453: /* $@51: %empty  */
#line 4471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 32717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 454: /* case_stmt_specification: CASE_SYM $@51 case_stmt_body else_clause_opt END CASE_SYM  */
#line 4524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 32735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 455: /* $@52: %empty  */
#line 4541 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_expr()))
              MYSQL_YYABORT;
          }
#line 32744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 456: /* case_stmt_body: expr_lex $@52 simple_when_clause_list  */
#line 4546 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 32750 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 457: /* case_stmt_body: searched_when_clause_list  */
#line 4548 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 32756 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 462: /* $@53: %empty  */
#line 4563 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Simple case: <caseval> = <whenval> */
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(true)))
              MYSQL_YYABORT;
          }
#line 32766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 463: /* simple_when_clause: WHEN_SYM expr_lex $@53 THEN_SYM sp_case_then_statements  */
#line 4570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 32775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 464: /* $@54: %empty  */
#line 4578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].expr_lex)->get_item()->base_flags|= item_base_t::IS_COND;
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(false)))
              MYSQL_YYABORT;
          }
#line 32785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 465: /* searched_when_clause: WHEN_SYM expr_lex $@54 THEN_SYM sp_case_then_statements  */
#line 4585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 32794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 466: /* else_clause_opt: %empty  */
#line 4593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 32809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 468: /* sp_opt_label: %empty  */
#line 4607 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= null_clex_str; }
#line 32815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 469: /* sp_opt_label: label_ident  */
#line 4608 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 32821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 470: /* opt_sp_for_loop_direction: %empty  */
#line 4613 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 32827 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 471: /* opt_sp_for_loop_direction: REVERSE_SYM  */
#line 4614 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= -1; }
#line 32833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 472: /* sp_for_loop_index_and_bounds: ident_for_loop_index sp_for_loop_bounds  */
#line 4619 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 32842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 473: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr DOT_DOT_SYM for_loop_bound_expr  */
#line 4628 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 32850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 474: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr  */
#line 4632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 32861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 475: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction '(' sp_cursor_stmt ')'  */
#line 4639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 32871 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 476: /* loop_body: sp_proc_stmts1 END LOOP_SYM  */
#line 4648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 32886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 477: /* repeat_body: sp_proc_stmts1 UNTIL_SYM expr_lex END REPEAT_SYM  */
#line 4662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].expr_lex)->sp_repeat_loop_finalize(thd))
              MYSQL_YYABORT;
          }
#line 32895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 478: /* pop_sp_loop_label: sp_opt_label  */
#line 4670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 32904 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 479: /* $@55: %empty  */
#line 4678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32913 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 480: /* sp_labeled_control: sp_control_label LOOP_SYM $@55 loop_body pop_sp_loop_label  */
#line 4683 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32919 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 481: /* $@56: %empty  */
#line 4685 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 482: /* sp_labeled_control: sp_control_label WHILE_SYM $@56 while_body pop_sp_loop_label  */
#line 4690 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32934 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 483: /* $@57: %empty  */
#line 4692 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 32943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 484: /* $@58: %empty  */
#line 4697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 32954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 485: /* $@59: %empty  */
#line 4704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 32963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 486: /* sp_labeled_control: sp_control_label FOR_SYM $@57 sp_for_loop_index_and_bounds $@58 for_loop_statements $@59 pop_sp_loop_label  */
#line 4709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-4].for_loop))))
              MYSQL_YYABORT;
          }
#line 32972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 487: /* $@60: %empty  */
#line 4714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 32981 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 488: /* sp_labeled_control: sp_control_label REPEAT_SYM $@60 repeat_body pop_sp_loop_label  */
#line 4719 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 32987 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 489: /* $@61: %empty  */
#line 4724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 32996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 490: /* sp_unlabeled_control: LOOP_SYM $@61 loop_body  */
#line 4729 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 33004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 491: /* $@62: %empty  */
#line 4733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 33013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 492: /* sp_unlabeled_control: WHILE_SYM $@62 while_body  */
#line 4738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 33021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 493: /* $@63: %empty  */
#line 4742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 33032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 494: /* $@64: %empty  */
#line 4749 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 33043 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 495: /* sp_unlabeled_control: FOR_SYM $@63 sp_for_loop_index_and_bounds $@64 for_loop_statements  */
#line 4756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 33055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 496: /* $@65: %empty  */
#line 4764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 33064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 497: /* sp_unlabeled_control: REPEAT_SYM $@65 repeat_body  */
#line 4769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 33072 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 498: /* trg_action_time: BEFORE_SYM  */
#line 4776 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 33078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 499: /* trg_action_time: AFTER_SYM  */
#line 4778 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 33084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 500: /* trg_event: INSERT  */
#line 4783 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 33090 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 501: /* trg_event: UPDATE_SYM  */
#line 4785 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 33096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 502: /* trg_event: DELETE_SYM  */
#line 4787 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 33102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 503: /* $@66: %empty  */
#line 4792 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.option_list= NULL; }
#line 33108 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 504: /* create_body: create_field_list_parens $@66 opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4793 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 33114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 505: /* create_body: opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4794 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 33120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 506: /* create_body: create_like  */
#line 4796 "/home/buildbot/git/sql/sql_yacc.yy"
          {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 33135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 507: /* create_like: LIKE table_ident  */
#line 4809 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[0].table); }
#line 33141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 508: /* create_like: LEFT_PAREN_LIKE LIKE table_ident ')'  */
#line 4810 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[-1].table); }
#line 33147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 509: /* opt_create_select: %empty  */
#line 4814 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 510: /* opt_create_select: opt_duplicate opt_as create_select_query_expression opt_versioning_option  */
#line 4817 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.add(DDL_options_st::OPT_CREATE_SELECT);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 33163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 511: /* create_select_query_expression: query_expression  */
#line 4826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 33172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 512: /* create_select_query_expression: LEFT_PAREN_WITH with_clause query_expression_no_with_clause ')'  */
#line 4831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 33184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 513: /* opt_create_partitioning: opt_partitioning  */
#line 4842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 33198 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 514: /* opt_partitioning: %empty  */
#line 4878 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 516: /* $@67: %empty  */
#line 4884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 33219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 518: /* have_partitioning: %empty  */
#line 4899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 33235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 519: /* $@68: %empty  */
#line 4914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 33253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 520: /* partition_entry: PARTITION_SYM $@68 partition  */
#line 4928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 33261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 521: /* $@69: %empty  */
#line 4935 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->safe_to_cache_query= 1; }
#line 33267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 523: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' part_field_list ')'  */
#line 4941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 33278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 524: /* $@70: %empty  */
#line 4948 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= HASH_PARTITION; }
#line 33284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 525: /* part_type_def: opt_linear HASH_SYM $@70 part_func  */
#line 4949 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 33290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 526: /* part_type_def: RANGE_SYM part_func  */
#line 4951 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 33296 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 527: /* part_type_def: RANGE_SYM part_column_list  */
#line 4953 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 33302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 528: /* $@71: %empty  */
#line 4955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 33310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 529: /* part_type_def: LIST_SYM $@71 part_func  */
#line 4959 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 33319 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 530: /* part_type_def: LIST_SYM part_column_list  */
#line 4964 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= LIST_PARTITION; }
#line 33325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 531: /* $@72: %empty  */
#line 4966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 33334 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 533: /* opt_linear: %empty  */
#line 4974 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 534: /* opt_linear: LINEAR_SYM  */
#line 4976 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->linear_hash_ind= TRUE;}
#line 33346 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 535: /* opt_key_algo: %empty  */
#line 4981 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 33352 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 536: /* opt_key_algo: ALGORITHM_SYM '=' real_ulong_num  */
#line 4983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 33370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 537: /* part_field_list: %empty  */
#line 4999 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 538: /* part_field_list: part_field_item_list  */
#line 5000 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 33382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 539: /* part_field_item_list: part_field_item  */
#line 5004 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 540: /* part_field_item_list: part_field_item_list ',' part_field_item  */
#line 5005 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 33394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 541: /* part_field_item: ident  */
#line 5010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 33409 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 542: /* part_column_list: COLUMNS '(' part_field_list ')'  */
#line 5024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 33419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 543: /* part_func: '(' part_func_expr ')'  */
#line 5034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 33431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 544: /* sub_part_func: '(' part_func_expr ')'  */
#line 5045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 33440 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 545: /* opt_num_parts: %empty  */
#line 5053 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 546: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 5055 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 33460 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 547: /* opt_sub_part: %empty  */
#line 5067 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 548: /* $@73: %empty  */
#line 5069 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 33472 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 549: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM sub_part_func $@73 opt_num_subparts  */
#line 5070 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 33478 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 550: /* $@74: %empty  */
#line 5073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 33488 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 551: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' sub_part_field_list ')' $@74 opt_num_subparts  */
#line 5078 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 33494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 552: /* sub_part_field_list: sub_part_field_item  */
#line 5082 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 33500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 553: /* sub_part_field_list: sub_part_field_list ',' sub_part_field_item  */
#line 5083 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 33506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 554: /* sub_part_field_item: ident  */
#line 5088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 33521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 555: /* part_func_expr: bit_expr  */
#line 5102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 33534 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 556: /* opt_num_subparts: %empty  */
#line 5113 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 33540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 557: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 5115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 33553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 558: /* part_defs: %empty  */
#line 5127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 33567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 559: /* part_defs: '(' part_def_list ')'  */
#line 5137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 33590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 560: /* part_def_list: part_definition  */
#line 5158 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 561: /* part_def_list: part_def_list ',' part_definition  */
#line 5159 "/home/buildbot/git/sql/sql_yacc.yy"
                                            {}
#line 33602 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 564: /* $@75: %empty  */
#line 5169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 33622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 565: /* part_definition: opt_partition $@75 part_name opt_part_values opt_part_options opt_sub_partition  */
#line 5188 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 33628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 566: /* part_name: ident  */
#line 5193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= Lex_ident_partition((yyvsp[0].ident_sys));
          }
#line 33640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 567: /* opt_part_values: %empty  */
#line 5204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 33660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 568: /* $@76: %empty  */
#line 5220 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 33677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 569: /* opt_part_values: VALUES_LESS_SYM THAN_SYM $@76 part_func_max  */
#line 5232 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 33683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 570: /* $@77: %empty  */
#line 5234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 33700 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 571: /* opt_part_values: VALUES_IN_SYM $@77 part_values_in  */
#line 5246 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 33706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 572: /* opt_part_values: CURRENT_SYM  */
#line 5248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
#endif
          }
#line 33717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 573: /* opt_part_values: HISTORY_SYM  */
#line 5255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
#endif
          }
#line 33728 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 574: /* opt_part_values: DEFAULT  */
#line 5262 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 33749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 575: /* part_func_max: MAXVALUE_SYM  */
#line 5282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 33771 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 576: /* part_func_max: part_value_item  */
#line 5299 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 577: /* part_values_in: part_value_item  */
#line 5304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 33808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 578: /* part_values_in: '(' part_value_list ')'  */
#line 5331 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 33821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 579: /* part_value_list: part_value_item  */
#line 5342 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 33827 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 580: /* part_value_list: part_value_list ',' part_value_item  */
#line 5343 "/home/buildbot/git/sql/sql_yacc.yy"
                                              {}
#line 33833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 581: /* $@78: %empty  */
#line 5348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 33847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 582: /* $@79: %empty  */
#line 5357 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 33853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 583: /* part_value_item: '(' $@78 part_value_item_list $@79 ')'  */
#line 5359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 33878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 584: /* part_value_item_list: part_value_expr_item  */
#line 5382 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 33884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 585: /* part_value_item_list: part_value_item_list ',' part_value_expr_item  */
#line 5383 "/home/buildbot/git/sql/sql_yacc.yy"
                                                        {}
#line 33890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 586: /* part_value_expr_item: MAXVALUE_SYM  */
#line 5388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 33905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 587: /* part_value_expr_item: bit_expr  */
#line 5399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 33923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 588: /* opt_sub_partition: %empty  */
#line 5417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 33941 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 589: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 5431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 33968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 590: /* sub_part_list: sub_part_definition  */
#line 5456 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 33974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 591: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 5457 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 33980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 592: /* $@80: %empty  */
#line 5462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 34017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 593: /* sub_part_definition: SUBPARTITION_SYM $@80 sub_name opt_subpart_options  */
#line 5494 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 34023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 594: /* sub_name: ident_or_text  */
#line 5499 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name=
              Lex_ident_partition((yyvsp[0].lex_str));
          }
#line 34034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 595: /* opt_part_options: %empty  */
#line 5508 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 34040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 596: /* opt_part_options: part_option_list  */
#line 5509 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 34046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 597: /* part_option_list: part_option_list part_option  */
#line 5513 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 34052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 598: /* part_option_list: part_option  */
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 34058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 599: /* part_option: server_part_option  */
#line 5518 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 34064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 600: /* part_option: engine_defined_option  */
#line 5520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->part_info->curr_part_elem->option_list,
                     &Lex->option_list_last);
          }
#line 34073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 601: /* opt_subpart_options: %empty  */
#line 5527 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 34079 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 602: /* opt_subpart_options: subpart_option_list  */
#line 5528 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 34085 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 603: /* subpart_option_list: subpart_option_list server_part_option  */
#line 5532 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 34091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 604: /* subpart_option_list: server_part_option  */
#line 5533 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 34097 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 605: /* server_part_option: TABLESPACE opt_equal ident_or_text  */
#line 5538 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatibility with MySQL */ }
#line 34103 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 606: /* server_part_option: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 34113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 607: /* server_part_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 34123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 608: /* server_part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5552 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 34129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 609: /* server_part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 5554 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 34135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 610: /* server_part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 5556 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 34141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 611: /* server_part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5558 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 34147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 612: /* server_part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5560 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 34153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 613: /* server_part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5562 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 34159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 614: /* opt_versioning_rotation: %empty  */
#line 5566 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 34165 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 615: /* $@81: %empty  */
#line 5567 "/home/buildbot/git/sql/sql_yacc.yy"
         { Lex->clause_that_disallows_subselect= "INTERVAL"; }
#line 34171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 616: /* opt_versioning_rotation: $@81 INTERVAL_SYM expr interval opt_versioning_interval_start opt_vers_auto_part  */
#line 5569 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-3].item), (yyvsp[-2].interval), (yyvsp[-1].item), (yyvsp[0].num),
                                                     table_name)))
             MYSQL_YYABORT;
         }
#line 34183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 617: /* opt_versioning_rotation: LIMIT ulonglong_num opt_vers_auto_part  */
#line 5577 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_limit((yyvsp[-1].ulonglong_number), (yyvsp[0].num), table_name)))
             MYSQL_YYABORT;
         }
#line 34194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 618: /* opt_versioning_interval_start: %empty  */
#line 5588 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= NULL;
         }
#line 34202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 619: /* opt_versioning_interval_start: STARTS_SYM literal  */
#line 5592 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= (yyvsp[0].item);
         }
#line 34210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 620: /* opt_vers_auto_part: %empty  */
#line 5599 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 0;
         }
#line 34218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 621: /* opt_vers_auto_part: AUTO_SYM  */
#line 5603 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 1;
         }
#line 34226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 622: /* opt_as: %empty  */
#line 5612 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 623: /* opt_as: AS  */
#line 5613 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 34238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 624: /* opt_create_database_options: %empty  */
#line 5617 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 625: /* opt_create_database_options: create_database_options  */
#line 5618 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 34250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 626: /* create_database_options: create_database_option  */
#line 5622 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 34256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 627: /* create_database_options: create_database_options create_database_option  */
#line 5623 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 34262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 628: /* create_database_option: default_collation  */
#line 5627 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 34268 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 629: /* create_database_option: default_charset  */
#line 5628 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 34274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 630: /* create_database_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 34283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 631: /* opt_if_not_exists_table_element: %empty  */
#line 5638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= FALSE;
          }
#line 34291 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 632: /* opt_if_not_exists_table_element: IF_SYM not EXISTS  */
#line 5642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= TRUE;
          }
#line 34299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 633: /* opt_if_not_exists: %empty  */
#line 5649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 34307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 634: /* opt_if_not_exists: IF_SYM not EXISTS  */
#line 5653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 34315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 635: /* create_or_replace: CREATE  */
#line 5660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 34323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 636: /* create_or_replace: CREATE OR_SYM REPLACE  */
#line 5664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 34331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 644: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 5687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 34350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 645: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 5702 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 34359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 646: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 5707 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 34368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 647: /* create_table_option: AVG_ROW_LENGTH opt_equal ulong_num  */
#line 5712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 34377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 648: /* create_table_option: PASSWORD_SYM opt_equal TEXT_STRING_sys  */
#line 5717 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 34386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 649: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 34395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 650: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 5727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 34404 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 651: /* create_table_option: PACK_KEYS_SYM opt_equal ulong_num  */
#line 5732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 34423 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 652: /* create_table_option: PACK_KEYS_SYM opt_equal DEFAULT  */
#line 5747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 34433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 653: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ulong_num  */
#line 5753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 34452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 654: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal DEFAULT  */
#line 5768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 34461 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 655: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ulong_num  */
#line 5773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 34480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 656: /* create_table_option: STATS_PERSISTENT_SYM opt_equal DEFAULT  */
#line 5788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 34490 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 657: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 5794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 34512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 658: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT  */
#line 5812 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 34521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 659: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 5817 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 34530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 660: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 5822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 34539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 661: /* create_table_option: PAGE_CHECKSUM_SYM opt_equal choice  */
#line 5827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 34548 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 662: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 5832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 34557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 663: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 5837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 34566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 664: /* $@82: %empty  */
#line 5842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 34574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 665: /* create_table_option: UNION_SYM opt_equal $@82 '(' opt_table_list ')'  */
#line 5846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 34600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 668: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 5870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 34609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 669: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5875 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 34618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 670: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 34627 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 671: /* create_table_option: TABLESPACE ident  */
#line 5885 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatiblity with MySQL */ }
#line 34633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 672: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 5887 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_DISK;}
#line 34639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 673: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 5889 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 34645 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 674: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 34655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 675: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 5897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 34664 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 676: /* create_table_option: TRANSACTIONAL_SYM opt_equal choice  */
#line 5902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 34673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 677: /* create_table_option: engine_defined_option  */
#line 5907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->create_info.option_list, &Lex->option_list_last);
          }
#line 34681 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 678: /* create_table_option: SEQUENCE_SYM opt_equal choice  */
#line 5911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
          }
#line 34690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 680: /* engine_defined_option: ident_options equal TEXT_STRING_sys  */
#line 5920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)),
                                      engine_option_value::Value((yyvsp[0].lex_str)), true);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 681: /* engine_defined_option: ident_options equal ident  */
#line 5929 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)),
                                      engine_option_value::Value((yyvsp[0].ident_sys)), false);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 682: /* engine_defined_option: ident_options equal real_ulonglong_num  */
#line 5938 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)),
                                      (yyvsp[0].ulonglong_number), thd->mem_root);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 683: /* engine_defined_option: ident_options equal DEFAULT  */
#line 5945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)));
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 34737 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 685: /* ident_options: keyword_options  */
#line 5955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 34746 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 690: /* versioning_option: WITH_SYSTEM_SYM VERSIONING_SYM  */
#line 5976 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (!DBUG_IF("sysvers_force"))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 34766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 691: /* default_charset: opt_default charset opt_equal charset_name_or_default  */
#line 5995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.add_table_option_default_charset(
                           thd, thd->variables.character_set_collations, (yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 34776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 692: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name_or_default  */
#line 6004 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_specification_st *cinfo= &Lex->create_info;
            if (unlikely(cinfo->add_table_option_default_collation(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_extended_collation))))
              MYSQL_YYABORT;
          }
#line 34787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 693: /* storage_engines: ident_or_text  */
#line 6014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 34798 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 694: /* known_storage_engines: ident_or_text  */
#line 6024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 34810 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 695: /* row_types: DEFAULT  */
#line 6034 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 34816 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 696: /* row_types: FIXED_SYM  */
#line 6035 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 34822 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 697: /* row_types: DYNAMIC_SYM  */
#line 6036 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 34828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 698: /* row_types: COMPRESSED_SYM  */
#line 6037 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 34834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 699: /* row_types: REDUNDANT_SYM  */
#line 6038 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 34840 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 700: /* row_types: COMPACT_SYM  */
#line 6039 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 34846 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 701: /* row_types: PAGE_SYM  */
#line 6040 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 34852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 702: /* merge_insert_types: NO_SYM  */
#line 6044 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 34858 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 703: /* merge_insert_types: FIRST_SYM  */
#line 6045 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 34864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 704: /* merge_insert_types: LAST_SYM  */
#line 6046 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 34870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 705: /* udf_type: STRING_SYM  */
#line 6050 "/home/buildbot/git/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 34876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 706: /* udf_type: REAL  */
#line 6051 "/home/buildbot/git/sql/sql_yacc.yy"
               {(yyval.num) = (int) REAL_RESULT; }
#line 34882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 707: /* udf_type: DECIMAL_SYM  */
#line 6052 "/home/buildbot/git/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 34888 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 708: /* udf_type: INT_SYM  */
#line 6053 "/home/buildbot/git/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 34894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 709: /* create_field_list: field_list  */
#line 6059 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 34902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 710: /* create_field_list_parens: LEFT_PAREN_ALT field_list ')'  */
#line 6066 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 34910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 713: /* field_list_item: column_def  */
#line 6077 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 34916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 717: /* field_list_item: PERIOD_SYM period_for_application_time  */
#line 6081 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { }
#line 34922 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 718: /* column_def: field_spec  */
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.create_field)= (yyvsp[0].create_field); }
#line 34928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 719: /* column_def: field_spec opt_constraint references  */
#line 6088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_column_foreign_key(&((yyvsp[-2].create_field)->field_name), &(yyvsp[-1].lex_str),
                                                     (yyvsp[0].table), DDL_options())))
              MYSQL_YYABORT;
            (yyval.create_field)= (yyvsp[-2].create_field);
          }
#line 34939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 720: /* $@83: %empty  */
#line 6098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34949 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 721: /* key_def: key_or_index opt_if_not_exists opt_ident opt_USING_key_algorithm $@83 '(' key_list ')' normal_key_options  */
#line 6103 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 34955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 722: /* $@84: %empty  */
#line 6105 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 723: /* key_def: key_or_index opt_if_not_exists ident TYPE_SYM btree_or_rtree $@84 '(' key_list ')' normal_key_options  */
#line 6110 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 34971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 724: /* $@85: %empty  */
#line 6112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34981 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 725: /* key_def: fulltext opt_key_or_index opt_if_not_exists opt_ident $@85 '(' key_list ')' fulltext_key_options  */
#line 6117 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { }
#line 34987 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 726: /* $@86: %empty  */
#line 6119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 34997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 727: /* key_def: spatial_or_vector opt_key_or_index opt_if_not_exists opt_ident $@86 '(' key_part_simple ')' spatial_key_options  */
#line 6125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-2].key_part), thd->mem_root);
          }
#line 35005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 728: /* $@87: %empty  */
#line 6131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 35015 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 729: /* key_def: opt_constraint constraint_key_type opt_if_not_exists opt_ident opt_USING_key_algorithm $@87 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 6136 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 35021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 730: /* $@88: %empty  */
#line 6139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 35031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 731: /* key_def: opt_constraint constraint_key_type opt_if_not_exists ident TYPE_SYM btree_or_rtree $@88 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 6144 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 35037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 732: /* $@89: %empty  */
#line 6146 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 35051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 733: /* key_def: opt_constraint FOREIGN KEY_SYM opt_if_not_exists opt_ident $@89 '(' key_list ')' references  */
#line 6156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_table_foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                                    (yyvsp[-9].lex_str).str ? &(yyvsp[-9].lex_str) : &(yyvsp[-5].lex_str), (yyvsp[0].table), (yyvsp[-6].object_ddl_options))))
               MYSQL_YYABORT;
          }
#line 35061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 734: /* constraint_def: opt_constraint check_constraint  */
#line 6165 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 35069 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 735: /* period_for_system_time: PERIOD_SYM FOR_SYSTEM_TIME_SYM '(' ident ',' ident ')'  */
#line 6173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period(Lex_ident_column((yyvsp[-3].ident_sys)), Lex_ident_column((yyvsp[-1].ident_sys)));
          }
#line 35078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 736: /* period_for_application_time: FOR_SYM ident '(' ident ',' ident ')'  */
#line 6181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_period(Lex_ident_column((yyvsp[-5].ident_sys)), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 35087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 737: /* opt_check_constraint: %empty  */
#line 6188 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 35093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 738: /* opt_check_constraint: check_constraint  */
#line 6189 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 35099 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 739: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 6194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 35110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 740: /* opt_constraint_no_id: %empty  */
#line 6203 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 35116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 741: /* opt_constraint_no_id: CONSTRAINT  */
#line 6204 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 35122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 742: /* opt_constraint: %empty  */
#line 6208 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 35128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 743: /* opt_constraint: constraint  */
#line 6209 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 35134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 744: /* constraint: CONSTRAINT opt_ident  */
#line 6213 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 35140 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 745: /* @90: %empty  */
#line 6218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str));
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 35160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 746: /* field_spec: field_ident @90 field_type_or_serial opt_check_constraint  */
#line 6234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 35183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 747: /* $@91: %empty  */
#line 6256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                             COLUMN_DEFINITION_TABLE_FIELD);
          }
#line 35192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 748: /* field_type_or_serial: qualified_field_type $@91 field_def  */
#line 6261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            auto tmp= (yyvsp[-2].Lex_field_type).charset_collation_attrs();
            if (tmp.merge_column_charset_clause_and_collate_clause(
                     thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
            Lex->last_field->set_charset_collation_attrs(
                               thd, thd->variables.character_set_collations,
                               tmp);
          }
#line 35206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 749: /* $@92: %empty  */
#line 6271 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_handler(&type_handler_ulonglong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 751: /* opt_serial_attribute: %empty  */
#line 6281 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 752: /* opt_serial_attribute: opt_serial_attribute_list  */
#line 6282 "/home/buildbot/git/sql/sql_yacc.yy"
                                    {}
#line 35229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 753: /* opt_serial_attribute_list: opt_serial_attribute_list serial_attribute  */
#line 6286 "/home/buildbot/git/sql/sql_yacc.yy"
                                                     {}
#line 35235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 755: /* opt_asrow_attribute: %empty  */
#line 6291 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 756: /* opt_asrow_attribute: opt_asrow_attribute_list  */
#line 6292 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 35247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 757: /* opt_asrow_attribute_list: opt_asrow_attribute_list asrow_attribute  */
#line 6296 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 35253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 759: /* field_def: %empty  */
#line 6301 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 761: /* $@93: %empty  */
#line 6304 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
         }
#line 35267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 762: /* field_def: opt_generated_always AS virtual_column_func $@93 vcol_opt_specifier vcol_opt_attribute  */
#line 6308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35275 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 763: /* field_def: opt_generated_always AS ROW_SYM START_SYM opt_asrow_attribute  */
#line 6312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 764: /* field_def: opt_generated_always AS ROW_SYM END opt_asrow_attribute  */
#line 6318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 35295 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 765: /* opt_generated_always: %empty  */
#line 6326 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 766: /* opt_generated_always: GENERATED_SYM ALWAYS_SYM  */
#line 6327 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 35307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 767: /* vcol_opt_specifier: %empty  */
#line 6332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_VIRTUAL);
          }
#line 35315 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 768: /* vcol_opt_specifier: VIRTUAL_SYM  */
#line 6336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_VIRTUAL);
          }
#line 35323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 769: /* vcol_opt_specifier: PERSISTENT_SYM  */
#line 6340 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_STORED);
          }
#line 35331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 770: /* vcol_opt_specifier: STORED_SYM  */
#line 6344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_STORED);
          }
#line 35339 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 771: /* vcol_opt_attribute: %empty  */
#line 6350 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35345 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 772: /* vcol_opt_attribute: vcol_opt_attribute_list  */
#line 6351 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 35351 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 773: /* vcol_opt_attribute_list: vcol_opt_attribute_list vcol_attribute  */
#line 6355 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 {}
#line 35357 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 775: /* vcol_attribute: UNIQUE_SYM  */
#line 6361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 776: /* vcol_attribute: UNIQUE_SYM KEY_SYM  */
#line 6367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 35377 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 777: /* vcol_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 6372 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 35383 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 778: /* vcol_attribute: INVISIBLE_SYM  */
#line 6374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 35391 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 779: /* $@94: %empty  */
#line 6381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 35406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 780: /* parse_vcol_expr: PARSE_VCOL_EXPR_SYM $@94 expr  */
#line 6392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 35418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 782: /* parenthesized_expr: expr ',' expr_list  */
#line 6404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 35429 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 783: /* virtual_column_func: '(' parenthesized_expr ')'  */
#line 6414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 35441 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 784: /* virtual_column_func: subquery  */
#line 6422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 35455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 788: /* column_default_expr: expr_or_literal  */
#line 6438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 35464 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 789: /* field_type: field_type_all  */
#line 6445 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
        }
#line 35472 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 790: /* qualified_field_type: field_type_all  */
#line 6452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 35480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 791: /* qualified_field_type: sp_decl_ident '.' field_type_all  */
#line 6456 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 35489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 792: /* udt_name: IDENT_sys  */
#line 6463 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 35495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 793: /* udt_name: reserved_keyword_udt  */
#line 6464 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].kwd); }
#line 35501 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 794: /* udt_name: non_reserved_keyword_udt  */
#line 6465 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].kwd); }
#line 35507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 801: /* field_type_all: udt_name float_options srid_option  */
#line 6479 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].lex_str), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 35516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 802: /* field_type_all_with_record: field_type_all_builtin  */
#line 6487 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 35524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 803: /* field_type_all_with_record: udt_name float_options srid_option  */
#line 6491 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_record *sprec = NULL;
            if (Lex->spcont)
              sprec = Lex->spcont->find_record(&(yyvsp[-2].lex_str), false);
            
            if (sprec == NULL)
            {
              if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].lex_str), (yyvsp[-1].Lex_length_and_dec)))
                MYSQL_YYABORT;
            }
            else
            {
              (yyval.Lex_field_type).set(&type_handler_row, NULL);
              Lex->last_field->set_attr_const_void_ptr(0, sprec);
            }
          }
#line 35545 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 804: /* field_type_numeric: int_type opt_field_length last_field_options  */
#line 6511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length_flags((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec), (uint32) (yyvsp[0].ulong_num));
          }
#line 35553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 805: /* field_type_numeric: real_type opt_precision last_field_options  */
#line 6514 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 35559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 806: /* field_type_numeric: FLOAT_SYM float_options last_field_options  */
#line 6516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length() && !(yyvsp[-1].Lex_length_and_dec).has_explicit_dec())
            {
              if (unlikely((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if ((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 35577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 807: /* field_type_numeric: BIT_SYM opt_field_length  */
#line 6530 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].Lex_length_and_dec));
          }
#line 35585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 808: /* field_type_numeric: BOOL_SYM  */
#line 6534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 35593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 809: /* field_type_numeric: BOOLEAN_SYM  */
#line 6538 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 35601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 810: /* field_type_numeric: DECIMAL_SYM float_options last_field_options  */
#line 6542 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 35607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 811: /* field_type_numeric: NUMBER_ORACLE_SYM float_options last_field_options  */
#line 6544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 35618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 812: /* field_type_numeric: NUMERIC_SYM float_options last_field_options  */
#line 6551 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 35624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 813: /* field_type_numeric: FIXED_SYM float_options last_field_options  */
#line 6553 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 35630 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 814: /* opt_binary_and_compression: %empty  */
#line 6558 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 35636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 815: /* opt_binary_and_compression: binary  */
#line 6559 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 35642 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 816: /* opt_binary_and_compression: compressed opt_binary  */
#line 6560 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 35648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 817: /* field_type_string: char opt_field_length opt_binary  */
#line 6565 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 35656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 818: /* field_type_string: nchar opt_field_length opt_bin_mod  */
#line 6569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 35665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 819: /* field_type_string: BINARY opt_field_length  */
#line 6574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].Lex_length_and_dec), &my_charset_bin);
          }
#line 35673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 820: /* field_type_string: varchar opt_field_length opt_binary_and_compression  */
#line 6578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 35681 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 821: /* field_type_string: VARCHAR2_ORACLE_SYM opt_field_length opt_binary_and_compression  */
#line 6582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 35689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 822: /* field_type_string: nvarchar opt_field_length opt_compressed opt_bin_mod  */
#line 6586 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 35698 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 823: /* field_type_string: VARBINARY opt_field_length opt_compressed  */
#line 6591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 35706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 824: /* field_type_string: RAW_ORACLE_SYM opt_field_length opt_compressed  */
#line 6595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 35714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 825: /* field_type_temporal: YEAR_SYM opt_field_length last_field_options  */
#line 6602 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
            {
              if ((yyvsp[-1].Lex_length_and_dec).length() != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%u)", (uint) (yyvsp[-1].Lex_length_and_dec).length());
                warn_deprecated<1007>(thd, buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].Lex_length_and_dec));
          }
#line 35731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 826: /* field_type_temporal: DATE_SYM  */
#line 6614 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 35737 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 827: /* field_type_temporal: TIME_SYM opt_field_length  */
#line 6616 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 35748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 828: /* field_type_temporal: TIMESTAMP opt_field_length  */
#line 6623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 35759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 829: /* field_type_temporal: DATETIME opt_field_length  */
#line 6630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].Lex_length_and_dec));
          }
#line 35767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 830: /* field_type_lob: TINYBLOB opt_compressed  */
#line 6638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny_blob, &my_charset_bin);
          }
#line 35775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 831: /* field_type_lob: BLOB_MARIADB_SYM opt_field_length opt_compressed  */
#line 6642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 35783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 832: /* field_type_lob: BLOB_ORACLE_SYM field_length opt_compressed  */
#line 6646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 35791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 833: /* field_type_lob: BLOB_ORACLE_SYM opt_compressed  */
#line 6650 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 35799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 834: /* field_type_lob: MEDIUMBLOB opt_compressed  */
#line 6654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 35807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 835: /* field_type_lob: LONGBLOB opt_compressed  */
#line 6658 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 35815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 836: /* field_type_lob: LONG_SYM VARBINARY opt_compressed  */
#line 6662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 35823 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 837: /* field_type_lob: LONG_SYM varchar opt_binary_and_compression  */
#line 6666 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 838: /* field_type_lob: TINYTEXT opt_binary_and_compression  */
#line 6668 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_tiny_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35835 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 839: /* field_type_lob: TEXT_SYM opt_field_length opt_binary_and_compression  */
#line 6670 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 840: /* field_type_lob: MEDIUMTEXT opt_binary_and_compression  */
#line 6672 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 841: /* field_type_lob: LONGTEXT opt_binary_and_compression  */
#line 6674 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 842: /* field_type_lob: CLOB_ORACLE_SYM opt_binary_and_compression  */
#line 6676 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 843: /* field_type_lob: LONG_SYM opt_binary_and_compression  */
#line 6678 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35865 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 844: /* field_type_lob: JSON_SYM opt_compressed  */
#line 6680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob_json, &my_charset_utf8mb4_bin);
          }
#line 35873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 845: /* field_type_misc: ENUM '(' string_list ')' opt_binary  */
#line 6687 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_enum, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 846: /* field_type_misc: SET '(' string_list ')' opt_binary  */
#line 6689 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_set, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 35885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 847: /* char: CHAR_SYM  */
#line 6693 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 35891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 848: /* nchar: NCHAR_SYM  */
#line 6697 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 35897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 849: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 6698 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 35903 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 850: /* varchar: char VARYING  */
#line 6702 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 35909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 851: /* varchar: VARCHAR  */
#line 6703 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 35915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 852: /* nvarchar: NATIONAL_SYM VARCHAR  */
#line 6707 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 35921 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 853: /* nvarchar: NVARCHAR_SYM  */
#line 6708 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 35927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 854: /* nvarchar: NCHAR_SYM VARCHAR  */
#line 6709 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 35933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 855: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 6710 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 35939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 856: /* nvarchar: NCHAR_SYM VARYING  */
#line 6711 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 35945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 857: /* int_type: INT_SYM  */
#line 6715 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slong; }
#line 35951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 858: /* int_type: TINYINT  */
#line 6716 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_stiny; }
#line 35957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 859: /* int_type: SMALLINT  */
#line 6717 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sshort; }
#line 35963 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 860: /* int_type: MEDIUMINT  */
#line 6718 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sint24; }
#line 35969 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 861: /* int_type: BIGINT  */
#line 6719 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slonglong; }
#line 35975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 862: /* real_type: REAL  */
#line 6724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 35985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 863: /* real_type: DOUBLE_SYM  */
#line 6729 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 35991 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 864: /* real_type: DOUBLE_SYM PRECISION  */
#line 6730 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 35997 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 865: /* srid_option: %empty  */
#line 6735 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->set_attr_uint32(0, 0); }
#line 36003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 866: /* srid_option: REF_SYSTEM_ID_SYM '=' NUM  */
#line 6738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attr_uint32(0, (uint32) atoi((yyvsp[0].lex_str).str));
          }
#line 36011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 867: /* float_options: %empty  */
#line 6744 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset();  }
#line 36017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 870: /* precision: '(' NUM ',' NUM ')'  */
#line 6750 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 36023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 871: /* field_options: %empty  */
#line 6754 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 36029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 872: /* field_options: SIGNED_SYM  */
#line 6755 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 36035 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 873: /* field_options: UNSIGNED  */
#line 6756 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG; }
#line 36041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 874: /* field_options: ZEROFILL  */
#line 6757 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 36047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 875: /* field_options: UNSIGNED ZEROFILL  */
#line 6758 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 36053 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 876: /* field_options: ZEROFILL UNSIGNED  */
#line 6759 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 36059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 877: /* last_field_options: field_options  */
#line 6763 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->last_field->flags|= ((yyval.ulong_num)= (yyvsp[0].ulong_num)); }
#line 36065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 878: /* field_length_str: '(' LONG_NUM ')'  */
#line 6767 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 36071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 879: /* field_length_str: '(' ULONGLONG_NUM ')'  */
#line 6768 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 36077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 880: /* field_length_str: '(' DECIMAL_NUM ')'  */
#line 6769 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 36083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 881: /* field_length_str: '(' NUM ')'  */
#line 6770 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 36089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 882: /* field_length: field_length_str  */
#line 6773 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 36095 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 883: /* field_scale: field_length_str  */
#line 6777 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set(NULL, (yyvsp[0].const_simple_string)); }
#line 36101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 884: /* opt_field_length: %empty  */
#line 6782 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset(); /* use default length */ }
#line 36107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 886: /* opt_field_scale: %empty  */
#line 6787 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.Lex_length_and_dec).reset(); }
#line 36113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 888: /* opt_precision: %empty  */
#line 6792 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec).reset(); }
#line 36119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 889: /* opt_precision: precision  */
#line 6793 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 36125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 890: /* attribute_list: attribute_list attribute  */
#line 6799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs)).merge_column_collate_clause_and_collate_clause(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
          }
#line 36135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 892: /* attribute: NULL_SYM  */
#line 6809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags&= ~NOT_NULL_FLAG;
            Lex->last_field->explicitly_nullable= true;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 893: /* attribute: DEFAULT column_default_expr  */
#line 6815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->default_value= (yyvsp[0].virtual_column);
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 894: /* attribute: ON UPDATE_SYM NOW_SYM opt_default_time_precision  */
#line 6820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_current_timestamp(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36166 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 895: /* attribute: AUTO_INC  */
#line 6827 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 36172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 896: /* attribute: SERIAL_SYM DEFAULT VALUE_SYM  */
#line 6829 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 897: /* attribute: COLLATE_SYM collation_name  */
#line 6836 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 36191 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 898: /* attribute: serial_attribute  */
#line 6839 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 36197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 899: /* opt_compression_method: %empty  */
#line 6843 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= NULL; }
#line 36203 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 900: /* opt_compression_method: equal ident  */
#line 6844 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 36209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 901: /* opt_compressed: %empty  */
#line 6848 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 902: /* opt_compressed: compressed  */
#line 6849 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 36221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 903: /* opt_enable: %empty  */
#line 6853 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36227 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 904: /* opt_enable: ENABLE_SYM  */
#line 6854 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 36233 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 905: /* compressed: COMPRESSED_SYM opt_compression_method  */
#line 6859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 36242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 906: /* asrow_attribute: not NULL_SYM opt_enable  */
#line 6867 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 36250 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 907: /* asrow_attribute: opt_primary KEY_SYM  */
#line 6871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 36260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 910: /* serial_attribute: engine_defined_option  */
#line 6882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->last_field->option_list, &Lex->option_list_last);
          }
#line 36268 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 911: /* serial_attribute: with_or_without_system VERSIONING_SYM  */
#line 6886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 36282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 912: /* with_or_without_system: WITH_SYSTEM_SYM  */
#line 6899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 36292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 913: /* with_or_without_system: WITHOUT SYSTEM  */
#line 6905 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 36302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 914: /* charset: CHAR_SYM SET  */
#line 6914 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.kwd)= (yyvsp[-1].kwd); }
#line 36308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 915: /* charset: CHARSET  */
#line 6915 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.kwd)= (yyvsp[0].kwd); }
#line 36314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 916: /* charset_name: ident_or_text  */
#line 6920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str, MY_CS_PRIMARY,
                                                    MYF(utf8_flag)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 36325 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 917: /* charset_name: BINARY  */
#line 6926 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 36331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 918: /* charset_name_or_default: charset_name  */
#line 6930 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.charset)=(yyvsp[0].charset);   }
#line 36337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 919: /* charset_name_or_default: DEFAULT  */
#line 6931 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 36343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 920: /* opt_load_data_charset: %empty  */
#line 6935 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.charset)= NULL; }
#line 36349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 921: /* opt_load_data_charset: charset charset_name_or_default  */
#line 6936 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.charset)= (yyvsp[0].charset); }
#line 36355 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 922: /* old_or_new_charset_name: ident_or_text  */
#line 6941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,
                                                    MYF(utf8_flag))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 36368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 923: /* old_or_new_charset_name: BINARY  */
#line 6949 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 36374 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 924: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 6953 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.charset)=(yyvsp[0].charset);   }
#line 36380 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 925: /* old_or_new_charset_name_or_default: DEFAULT  */
#line 6954 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 36386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 926: /* collation_name: ident_or_text  */
#line 6959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_extended_collation).set_by_name((yyvsp[0].lex_str).str, thd->get_utf8_flag()))
              MYSQL_YYABORT;
          }
#line 36395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 927: /* collation_name_or_default: collation_name  */
#line 6966 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation)=(yyvsp[0].Lex_extended_collation); }
#line 36401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 928: /* collation_name_or_default: DEFAULT  */
#line 6967 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation).set_collate_default(); }
#line 36407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 929: /* collation_name_or_default: BINARY  */
#line 6969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Lex_exact_collation bin(&my_charset_bin);
            (yyval.Lex_extended_collation)= Lex_extended_collation(bin);
          }
#line 36416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 930: /* opt_default: %empty  */
#line 6976 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 931: /* opt_default: DEFAULT  */
#line 6977 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 36428 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 932: /* charset_or_alias: charset charset_name  */
#line 6981 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.charset)= (yyvsp[0].charset); }
#line 36434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 933: /* charset_or_alias: ASCII_SYM  */
#line 6982 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.charset)= &my_charset_latin1; }
#line 36440 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 934: /* charset_or_alias: UNICODE_SYM  */
#line 6984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 36449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 935: /* opt_binary: %empty  */
#line 6991 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 36455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 937: /* binary: BYTE_SYM  */
#line 6997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset(&my_charset_bin));
          }
#line 36463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 938: /* binary: charset_or_alias  */
#line 7001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset((yyvsp[0].charset)));
          }
#line 36471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 939: /* binary: charset_or_alias BINARY  */
#line 7005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[-1].charset))))
              MYSQL_YYABORT;
          }
#line 36480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 940: /* binary: BINARY  */
#line 7009 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.Lex_exact_charset_extended_collation_attrs).set_contextually_typed_binary_style(); }
#line 36486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 941: /* binary: BINARY charset_or_alias  */
#line 7011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 36495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 942: /* binary: charset_or_alias COLLATE_SYM DEFAULT  */
#line 7016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_default(
                 thd,
                 thd->variables.character_set_collations,
                 Lex_exact_charset((yyvsp[-2].charset)));
          }
#line 36506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 943: /* binary: charset_or_alias COLLATE_SYM collation_name  */
#line 7023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].Lex_extended_collation).merge_exact_charset(
                     thd,
                     thd->variables.character_set_collations,
                     Lex_exact_charset((yyvsp[-2].charset))))
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 36519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 944: /* binary: COLLATE_SYM collation_name  */
#line 7032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 36527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 945: /* binary: COLLATE_SYM DEFAULT  */
#line 7036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_collate_default();
          }
#line 36535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 946: /* binary: charset_or_alias COLLATE_SYM BINARY  */
#line 7040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Lex_exact_collation bin(&my_charset_bin);
            Lex_extended_collation tmp(bin);
            if (tmp.merge_exact_charset(thd,
                                        thd->variables.character_set_collations,
                                        Lex_exact_charset((yyvsp[-2].charset))))
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs(tmp);
          }
#line 36549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 947: /* binary: COLLATE_SYM BINARY  */
#line 7050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Lex_exact_collation bin(&my_charset_bin);
            const Lex_extended_collation tmp(bin);
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs(tmp);
          }
#line 36559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 948: /* opt_bin_mod: %empty  */
#line 7058 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= false; }
#line 36565 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 949: /* opt_bin_mod: BINARY  */
#line 7059 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= true; }
#line 36571 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 950: /* $@95: %empty  */
#line 7064 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 36583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 951: /* ws_nweights: '(' real_ulong_num $@95 ')'  */
#line 7072 "/home/buildbot/git/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 36589 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 952: /* ws_level_flag_desc: ASC  */
#line 7076 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.ulong_num)= 0; }
#line 36595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 953: /* ws_level_flag_desc: DESC  */
#line 7077 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 36601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 954: /* ws_level_flag_reverse: REVERSE_SYM  */
#line 7081 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 36607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 955: /* ws_level_flags: %empty  */
#line 7084 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 36613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 956: /* ws_level_flags: ws_level_flag_desc  */
#line 7085 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 36619 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 957: /* ws_level_flags: ws_level_flag_desc ws_level_flag_reverse  */
#line 7086 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 36625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 958: /* ws_level_flags: ws_level_flag_reverse  */
#line 7087 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 36631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 959: /* ws_level_number: real_ulong_num  */
#line 7092 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 36640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 960: /* ws_level_list_item: ws_level_number ws_level_flags  */
#line 7100 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 36648 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 961: /* ws_level_list: ws_level_list_item  */
#line 7106 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 36654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 962: /* ws_level_list: ws_level_list ',' ws_level_list_item  */
#line 7107 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 36660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 963: /* ws_level_range: ws_level_number '-' ws_level_number  */
#line 7112 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 36671 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 964: /* ws_level_list_or_range: ws_level_list  */
#line 7121 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 36677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 965: /* ws_level_list_or_range: ws_level_range  */
#line 7122 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 36683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 966: /* opt_ws_levels: %empty  */
#line 7126 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.ulong_num)= 0; }
#line 36689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 967: /* opt_ws_levels: LEVEL_SYM ws_level_list_or_range  */
#line 7127 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 36695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 970: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 7141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 36703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 971: /* opt_ref_list: %empty  */
#line 7148 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->ref_list.empty(); }
#line 36709 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 973: /* ref_list: ref_list ',' ident  */
#line 7154 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 36720 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 974: /* ref_list: ident  */
#line 7161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 36733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 975: /* opt_match_clause: %empty  */
#line 7173 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 36739 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 976: /* opt_match_clause: MATCH FULL  */
#line 7175 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 36745 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 977: /* opt_match_clause: MATCH PARTIAL  */
#line 7177 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 36751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 978: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 7179 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 36757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 979: /* opt_on_update_delete: %empty  */
#line 7184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 36767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 980: /* opt_on_update_delete: ON UPDATE_SYM delete_option  */
#line 7190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 36777 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 981: /* opt_on_update_delete: ON DELETE_SYM delete_option  */
#line 7196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 36787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 982: /* opt_on_update_delete: ON UPDATE_SYM delete_option ON DELETE_SYM delete_option  */
#line 7203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 36797 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 983: /* opt_on_update_delete: ON DELETE_SYM delete_option ON UPDATE_SYM delete_option  */
#line 7210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 36807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 984: /* delete_option: RESTRICT  */
#line 7218 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 36813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 985: /* delete_option: CASCADE  */
#line 7219 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 36819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 986: /* delete_option: SET NULL_SYM  */
#line 7220 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 36825 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 987: /* delete_option: NO_SYM ACTION  */
#line 7221 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 36831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 988: /* delete_option: SET DEFAULT  */
#line 7222 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 36837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 989: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 7226 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.key_type)= Key::PRIMARY; }
#line 36843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 990: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 7227 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.key_type)= Key::UNIQUE; }
#line 36849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 991: /* key_or_index: KEY_SYM  */
#line 7231 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 36855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 992: /* key_or_index: INDEX_SYM  */
#line 7232 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 993: /* opt_key_or_index: %empty  */
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 995: /* keys_or_index: KEYS  */
#line 7241 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 36873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 996: /* keys_or_index: INDEX_SYM  */
#line 7242 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 997: /* keys_or_index: INDEXES  */
#line 7243 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 36885 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 998: /* fulltext: FULLTEXT_SYM  */
#line 7247 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::FULLTEXT;}
#line 36891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 999: /* spatial_or_vector: SPATIAL_SYM  */
#line 7252 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_type)= Key::SPATIAL;
          }
#line 36899 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1000: /* spatial_or_vector: VECTOR_SYM  */
#line 7255 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.key_type)= Key::VECTOR;}
#line 36905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1001: /* normal_key_options: %empty  */
#line 7259 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1002: /* normal_key_options: normal_key_opts  */
#line 7260 "/home/buildbot/git/sql/sql_yacc.yy"
                          { Lex->last_key->option_list= Lex->option_list; }
#line 36917 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1003: /* fulltext_key_options: %empty  */
#line 7264 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1004: /* fulltext_key_options: fulltext_key_opts  */
#line 7265 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_key->option_list= Lex->option_list; }
#line 36929 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1005: /* spatial_key_options: %empty  */
#line 7269 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1006: /* spatial_key_options: spatial_key_opts  */
#line 7270 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->last_key->option_list= Lex->option_list; }
#line 36941 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1013: /* opt_USING_key_algorithm: %empty  */
#line 7289 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 36947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1014: /* opt_USING_key_algorithm: USING btree_or_rtree  */
#line 7290 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 36953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1015: /* opt_key_algorithm_clause: %empty  */
#line 7295 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 36959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1016: /* opt_key_algorithm_clause: USING btree_or_rtree  */
#line 7296 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 36965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1017: /* opt_key_algorithm_clause: TYPE_SYM btree_or_rtree  */
#line 7297 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 36971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1018: /* key_using_alg: USING btree_or_rtree  */
#line 7302 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 36977 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1019: /* key_using_alg: TYPE_SYM btree_or_rtree  */
#line 7304 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 36983 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1020: /* all_key_opt: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 7309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 36992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1021: /* all_key_opt: COMMENT_SYM TEXT_STRING_sys  */
#line 7314 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 36998 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1022: /* all_key_opt: VISIBLE_SYM  */
#line 7316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* This is mainly for MySQL 8.0 compatibility */
          }
#line 37006 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1023: /* all_key_opt: ignorability  */
#line 7320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.is_ignored= (yyvsp[0].num);
          }
#line 37014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1024: /* all_key_opt: engine_defined_option  */
#line 7324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->option_list, &Lex->option_list_last);
          }
#line 37022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1029: /* fulltext_key_opt: WITH PARSER_SYM IDENT_sys  */
#line 7341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 37033 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1030: /* btree_or_rtree: BTREE_SYM  */
#line 7350 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 37039 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1031: /* btree_or_rtree: RTREE_SYM  */
#line 7351 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 37045 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1032: /* btree_or_rtree: HASH_SYM  */
#line 7352 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 37051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1033: /* ignorability: IGNORED_SYM  */
#line 7356 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= true; }
#line 37057 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1034: /* ignorability: NOT_SYM IGNORED_SYM  */
#line 7357 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.num)= false; }
#line 37063 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1035: /* key_list: key_list ',' key_part order_dir  */
#line 7362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 37072 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1036: /* key_list: key_part order_dir  */
#line 7367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 37081 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1037: /* opt_without_overlaps: %empty  */
#line 7374 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 37087 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1038: /* opt_without_overlaps: ',' ident WITHOUT OVERLAPS_SYM  */
#line 7376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->without_overlaps= true;
            Lex->last_key->period= Lex_ident_column((yyvsp[-2].ident_sys));
          }
#line 37096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1040: /* key_part: ident '(' NUM ')'  */
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 37109 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1041: /* key_part_simple: ident  */
#line 7397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 37119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1042: /* opt_ident: %empty  */
#line 7405 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 37125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1043: /* opt_ident: field_ident  */
#line 7406 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 37131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1044: /* string_list: text_string  */
#line 7411 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 37137 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1045: /* string_list: string_list ',' text_string  */
#line 7413 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 37143 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1046: /* $@96: %empty  */
#line 7422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 37163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1047: /* $@97: %empty  */
#line 7438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
            if (!Lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                   TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 37179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1048: /* alter: ALTER $@96 alter_options TABLE_SYM opt_if_exists table_ident opt_lock_wait_timeout $@97 alter_commands  */
#line 7450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 37194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1049: /* $@98: %empty  */
#line 7461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 37204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1050: /* alter: ALTER DATABASE ident_or_empty $@98 create_database_options  */
#line 7467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 37218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1051: /* $@99: %empty  */
#line 7477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 37228 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1052: /* alter: ALTER DATABASE COMMENT_SYM opt_equal TEXT_STRING_sys $@99 opt_create_database_options  */
#line 7483 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= Lex_ident_sys();
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 37241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1053: /* alter: ALTER DATABASE ident UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM  */
#line 7492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 37253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1054: /* $@100: %empty  */
#line 7500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_procedure_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 37262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1055: /* alter: ALTER PROCEDURE_SYM sp_name $@100 sp_a_chistics stmt_end  */
#line 7505 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 37268 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1056: /* $@101: %empty  */
#line 7507 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_function_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 37277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1057: /* alter: ALTER FUNCTION_SYM sp_name $@101 sp_a_chistics stmt_end  */
#line 7512 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 37283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1058: /* $@102: %empty  */
#line 7514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 37294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1059: /* alter: ALTER view_algorithm definer_opt opt_view_suid VIEW_SYM table_ident $@102 view_list_opt AS view_select stmt_end  */
#line 7520 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 37300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1060: /* $@103: %empty  */
#line 7527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 37311 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1061: /* alter: ALTER definer_opt opt_view_suid VIEW_SYM table_ident $@103 view_list_opt AS view_select stmt_end  */
#line 7533 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 37317 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1062: /* $@104: %empty  */
#line 7535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 37340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1063: /* alter: ALTER definer_opt remember_name EVENT_SYM sp_name $@104 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 7558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 37360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1064: /* $@105: %empty  */
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 37370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1065: /* alter: ALTER SERVER_SYM ident_or_text $@105 OPTIONS_SYM '(' server_options_list ')'  */
#line 7578 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    { }
#line 37376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1066: /* alter: ALTER USER_SYM opt_if_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 7582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 37385 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1067: /* $@106: %empty  */
#line 7587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 37398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1068: /* $@107: %empty  */
#line 7596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 37412 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1069: /* $@108: %empty  */
#line 7606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if ((Lex->create_info.seq_create_info->used_fields &
                 seq_field_used_as) &&
                (Lex->create_info.seq_create_info->used_fields -
                 seq_field_used_as))
              my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0),
                                "ALTER SEQUENCE with both AS <type> and "
                                "something else."));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1070: /* alter: ALTER SEQUENCE_SYM opt_if_exists $@106 table_ident $@107 sequence_defs $@108 stmt_end  */
#line 7618 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 37436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1071: /* account_locking_option: LOCK_SYM  */
#line 7623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 37444 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1072: /* account_locking_option: UNLOCK_SYM  */
#line 7627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 37452 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1073: /* opt_password_expire_option: %empty  */
#line 7634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 37460 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1074: /* opt_password_expire_option: NEVER_SYM  */
#line 7638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 37468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1075: /* opt_password_expire_option: DEFAULT  */
#line 7642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 37476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1076: /* opt_password_expire_option: INTERVAL_SYM NUM DAY_SYM  */
#line 7646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 37486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1082: /* ev_alter_on_schedule_completion: %empty  */
#line 7662 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 37492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1083: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time  */
#line 7663 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.num)= 1; }
#line 37498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1084: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 7664 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 37504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1085: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 7665 "/home/buildbot/git/sql/sql_yacc.yy"
                                                            { (yyval.num)= 1; }
#line 37510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1086: /* opt_ev_rename_to: %empty  */
#line 7669 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 37516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1087: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 7671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 37529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1088: /* opt_ev_sql_stmt: %empty  */
#line 7682 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= 0;}
#line 37535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1089: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 7683 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 37541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1090: /* ident_or_empty: %empty  */
#line 7688 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.ident_sys)= Lex_ident_sys(); }
#line 37547 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1093: /* alter_commands: DISCARD TABLESPACE  */
#line 7695 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1094: /* alter_commands: IMPORT TABLESPACE  */
#line 7703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            Lex->create_info.add(DDL_options_st::OPT_IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1100: /* alter_commands: DROP PARTITION_SYM opt_if_exists alt_part_name_list  */
#line 7726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 37582 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1101: /* alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 37592 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1102: /* $@109: %empty  */
#line 7740 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1104: /* alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 37622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1105: /* $@110: %empty  */
#line 7764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37636 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1107: /* $@111: %empty  */
#line 7776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1109: /* alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 7788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 37662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1110: /* alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 7795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37676 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1112: /* alter_commands: EXCHANGE_SYM PARTITION_SYM alt_part_name_item WITH TABLE_SYM table_ident opt_without_validation have_partitioning  */
#line 7807 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-2].table)))
              MYSQL_YYABORT;
          }
#line 37685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1113: /* alter_commands: CONVERT_SYM PARTITION_SYM alt_part_name_item TO_SYM TABLE_SYM table_ident opt_without_validation have_partitioning  */
#line 7813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->stmt_alter_table((yyvsp[-2].table)))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            lex->alter_info.partition_flags|= ALTER_PARTITION_CONVERT_OUT;
          }
#line 37699 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1114: /* $@112: %empty  */
#line 7823 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), nullptr, 0,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            /*
              This will appear as (new_db, new_name) in alter_ctx.
              new_db will be IX-locked and new_name X-locked.
            */
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            lex->name= (yyvsp[0].table)->table;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;

            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->part_info->num_parts= 1;
            /*
              OR-ed with ALTER_PARTITION_ADD because too many checks of
              ALTER_PARTITION_ADD required.
            */
            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD |
                                              ALTER_PARTITION_CONVERT_IN;
          }
#line 37733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1115: /* alter_commands: CONVERT_SYM TABLE_SYM table_ident $@112 TO_SYM PARTITION_SYM part_definition opt_without_validation have_partitioning  */
#line 7853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 37744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1116: /* remove_partitioning: REMOVE_SYM PARTITIONING_SYM  */
#line 7863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 37752 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1117: /* all_or_alt_part_name_list: ALL  */
#line 7870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 37760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1119: /* $@113: %empty  */
#line 7879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 37776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1120: /* add_partition_rule: ADD PARTITION_SYM opt_if_not_exists opt_no_write_to_binlog $@113 add_part_extra  */
#line 7891 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 37782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1122: /* add_part_extra: '(' part_def_list ')'  */
#line 7897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 37791 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1123: /* add_part_extra: PARTITIONS_SYM real_ulong_num  */
#line 7902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 37799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1124: /* $@114: %empty  */
#line 7909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 37812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1126: /* reorg_parts_rule: %empty  */
#line 7922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 37820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1127: /* $@115: %empty  */
#line 7926 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 37828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1128: /* reorg_parts_rule: alt_part_name_list $@115 INTO '(' part_def_list ')'  */
#line 7930 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 37837 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1129: /* alt_part_name_list: alt_part_name_item  */
#line 7937 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 37843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1130: /* alt_part_name_list: alt_part_name_list ',' alt_part_name_item  */
#line 7938 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    {}
#line 37849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1131: /* alt_part_name_item: ident  */
#line 7943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 37859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1135: /* alter_list_item: add_column column_def opt_place  */
#line 7965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= Lex_ident_column((yyvsp[0].lex_str));
          }
#line 37870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1136: /* alter_list_item: ADD key_def  */
#line 7972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 37879 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1137: /* alter_list_item: ADD period_for_system_time  */
#line 7977 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 37887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1138: /* alter_list_item: ADD PERIOD_SYM opt_if_not_exists_table_element period_for_application_time  */
#line 7982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 37897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1139: /* alter_list_item: add_column '(' create_field_list ')'  */
#line 7988 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 37908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1140: /* alter_list_item: ADD constraint_def  */
#line 7995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 37916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1141: /* alter_list_item: ADD CONSTRAINT IF_SYM not EXISTS field_ident check_constraint  */
#line 7999 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 37925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1142: /* alter_list_item: CHANGE opt_column opt_if_exists_table_element field_ident field_spec opt_place  */
#line 8005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= Lex_ident_column((yyvsp[-2].lex_str));
            (yyvsp[-1].create_field)->after= Lex_ident_column((yyvsp[0].lex_str));
          }
#line 37936 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1143: /* alter_list_item: MODIFY_SYM opt_column opt_if_exists_table_element field_spec opt_place  */
#line 8013 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= Lex_ident_column((yyvsp[0].lex_str));
          }
#line 37947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1144: /* alter_list_item: DROP opt_column opt_if_exists_table_element field_ident opt_restrict  */
#line 8020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str), (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 37961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1145: /* alter_list_item: DROP CONSTRAINT opt_if_exists_table_element field_ident  */
#line 8030 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str), (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 37976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1146: /* alter_list_item: DROP FOREIGN KEY_SYM opt_if_exists_table_element field_ident  */
#line 8041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str), (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 37990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1147: /* alter_list_item: DROP opt_constraint_no_id PRIMARY_SYM KEY_SYM  */
#line 8051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 38005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1148: /* alter_list_item: DROP key_or_index opt_if_exists_table_element field_ident  */
#line 8062 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str), (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 38019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1149: /* alter_list_item: DISABLE_SYM KEYS  */
#line 8072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 38029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1150: /* alter_list_item: ENABLE_SYM KEYS  */
#line 8078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 38039 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1151: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident SET DEFAULT column_default_expr  */
#line 8084 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (check_expression((yyvsp[0].virtual_column), Lex_ident_column((yyvsp[-3].lex_str)), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str), (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 38050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1152: /* alter_list_item: ALTER key_or_index opt_if_exists_table_element ident ignorability  */
#line 8091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            Alter_index_ignorability *ac= new (thd->mem_root)
                                        Alter_index_ignorability((yyvsp[-1].ident_sys), (yyvsp[0].num), (yyvsp[-2].num));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_index_ignorability_list.push_back(ac);
            lex->alter_info.flags|= ALTER_INDEX_IGNORABILITY;
          }
#line 38064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1153: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident DROP DEFAULT  */
#line 8101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str), (Virtual_column_info*) 0, (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 38073 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1154: /* alter_list_item: RENAME opt_to table_ident  */
#line 8106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table((yyvsp[0].table)))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_RENAME;
          }
#line 38083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1155: /* alter_list_item: RENAME COLUMN_SYM opt_if_exists_table_element ident TO_SYM ident  */
#line 8112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 38092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1156: /* alter_list_item: RENAME key_or_index opt_if_exists_table_element field_ident TO_SYM field_ident  */
#line 8117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (thd->mem_root)
                                    Alter_rename_key((yyvsp[-2].lex_str), (yyvsp[0].lex_str), (yyvsp[-3].num));
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= ALTER_RENAME_INDEX;
          }
#line 38106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1157: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default  */
#line 8127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset(
                       thd, thd->variables.character_set_collations, (yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 38116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1158: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 8134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset(
                       thd, thd->variables.character_set_collations, (yyvsp[-2].charset), (yyvsp[0].Lex_extended_collation)))
              MYSQL_YYABORT;
          }
#line 38126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1159: /* alter_list_item: create_table_options_space_separated  */
#line 8140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 38135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1160: /* alter_list_item: FORCE_SYM  */
#line 8145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 38143 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1161: /* alter_list_item: alter_order_clause  */
#line 8149 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 38152 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1164: /* alter_list_item: ADD SYSTEM VERSIONING_SYM  */
#line 8156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 38161 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1165: /* alter_list_item: DROP SYSTEM VERSIONING_SYM  */
#line 8161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 38170 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1166: /* alter_list_item: DROP PERIOD_SYM FOR_SYSTEM_TIME_SYM  */
#line 8166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 38178 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1167: /* alter_list_item: DROP PERIOD_SYM opt_if_exists_table_element FOR_SYM ident  */
#line 8170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys), (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 38190 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1169: /* opt_without_validation: WITH VALIDATION_SYM  */
#line 8182 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->without_validation= 0;
        }
#line 38198 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1170: /* opt_without_validation: WITHOUT VALIDATION_SYM  */
#line 8186 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->without_validation= 1;
        }
#line 38206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1176: /* alter_algorithm_option: ALGORITHM_SYM opt_equal DEFAULT  */
#line 8201 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.set_requested_algorithm(Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 38214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1177: /* alter_algorithm_option: ALGORITHM_SYM opt_equal ident  */
#line 8205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 38223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1178: /* alter_lock_option: LOCK_SYM opt_equal DEFAULT  */
#line 8213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 38232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1179: /* alter_lock_option: LOCK_SYM opt_equal ident  */
#line 8218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 38241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1180: /* opt_column: %empty  */
#line 8225 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 38247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1181: /* opt_column: COLUMN_SYM  */
#line 8226 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 38253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1182: /* opt_ignore: %empty  */
#line 8230 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->ignore= 0;}
#line 38259 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1183: /* opt_ignore: IGNORE_SYM  */
#line 8231 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 38265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1184: /* $@116: %empty  */
#line 8235 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->ignore= 0;}
#line 38271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1190: /* alter_option: IGNORE_SYM  */
#line 8249 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 38277 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1191: /* alter_option: ONLINE_SYM  */
#line 8251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 38286 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1192: /* opt_restrict: %empty  */
#line 8258 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_DEFAULT; }
#line 38292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1193: /* opt_restrict: RESTRICT  */
#line 8259 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_RESTRICT; }
#line 38298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1194: /* opt_restrict: CASCADE  */
#line 8260 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_CASCADE; }
#line 38304 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1195: /* opt_place: %empty  */
#line 8264 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)= null_clex_str; }
#line 38310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1196: /* opt_place: AFTER_SYM ident  */
#line 8266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 38319 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1197: /* opt_place: FIRST_SYM  */
#line 8271 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 38329 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1198: /* opt_to: %empty  */
#line 8279 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 38335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1199: /* opt_to: TO_SYM  */
#line 8280 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 38341 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1200: /* opt_to: '='  */
#line 8281 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 38347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1201: /* opt_to: AS  */
#line 8282 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 38353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1202: /* $@117: %empty  */
#line 8287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 38364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1203: /* slave: START_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel $@117 slave_until  */
#line 8294 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1204: /* $@118: %empty  */
#line 8296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 38381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1205: /* slave: START_SYM ALL SLAVES slave_thread_opts $@118  */
#line 8302 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38387 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1206: /* slave: STOP_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel  */
#line 8304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 38398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1207: /* slave: STOP_SYM ALL SLAVES slave_thread_opts  */
#line 8311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 38409 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1208: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 8321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 38426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1209: /* opt_start_transaction_option_list: %empty  */
#line 8337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 38434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1210: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 8341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 38442 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1211: /* start_transaction_option_list: start_transaction_option  */
#line 8348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 38450 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1212: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 8352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 38458 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1213: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 8359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 38466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1214: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 8363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 38474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1215: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 8367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 38482 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1216: /* $@119: %empty  */
#line 8373 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->slave_thd_opt= 0; }
#line 38488 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1217: /* slave_thread_opts: $@119 slave_thread_opt_list  */
#line 8375 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38494 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1220: /* slave_thread_opt: %empty  */
#line 8384 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 38500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1221: /* slave_thread_opt: SQL_THREAD  */
#line 8385 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 38506 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1222: /* slave_thread_opt: RELAY_THREAD  */
#line 8386 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_IO; }
#line 38512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1223: /* slave_until: %empty  */
#line 8390 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 38518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1224: /* slave_until: UNTIL_SYM slave_until_opts  */
#line 8392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 38531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1225: /* slave_until: UNTIL_SYM MASTER_GTID_POS_SYM '=' TEXT_STRING_sys  */
#line 8401 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= false;
          }
#line 38540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1226: /* slave_until: UNTIL_SYM SQL_AFTER_GTIDS_SYM '=' TEXT_STRING_sys  */
#line 8406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= false;
          }
#line 38549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1227: /* slave_until: UNTIL_SYM SQL_BEFORE_GTIDS_SYM '=' TEXT_STRING_sys  */
#line 8411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= true;
          }
#line 38558 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1230: /* $@120: %empty  */
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38569 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1231: /* checksum: CHECKSUM_SYM table_or_tables $@120 table_list opt_checksum_type  */
#line 8431 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38575 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1232: /* opt_checksum_type: %empty  */
#line 8435 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= 0; }
#line 38581 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1233: /* opt_checksum_type: QUICK  */
#line 8436 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_QUICK; }
#line 38587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1234: /* opt_checksum_type: EXTENDED_SYM  */
#line 8437 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_EXTEND; }
#line 38593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1236: /* $@121: %empty  */
#line 8443 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 38599 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1238: /* $@122: %empty  */
#line 8449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1239: /* repair: REPAIR opt_no_write_to_binlog $@122 repair_table_or_view  */
#line 8459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1240: /* opt_mi_repair_type: %empty  */
#line 8469 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 38631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1241: /* opt_mi_repair_type: mi_repair_types  */
#line 8470 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 38637 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1242: /* mi_repair_types: mi_repair_type  */
#line 8474 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 38643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1243: /* mi_repair_types: mi_repair_type mi_repair_types  */
#line 8475 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 38649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1244: /* mi_repair_type: QUICK  */
#line 8479 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_QUICK; }
#line 38655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1245: /* mi_repair_type: EXTENDED_SYM  */
#line 8480 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_EXTEND; }
#line 38661 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1246: /* mi_repair_type: USE_FRM  */
#line 8481 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 38667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1247: /* mi_repair_type: FORCE_SYM  */
#line 8482 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_FORCE; }
#line 38673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1248: /* opt_view_repair_type: %empty  */
#line 8486 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 38679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1249: /* opt_view_repair_type: FOR_SYM UPGRADE_SYM  */
#line 8487 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 38685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1250: /* opt_view_repair_type: FROM MYSQL_SYM  */
#line 8488 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 38691 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1251: /* $@123: %empty  */
#line 8493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38705 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1252: /* analyze: ANALYZE_SYM opt_no_write_to_binlog table_or_tables $@123 analyze_table_list  */
#line 8503 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1256: /* opt_persistent_stat_clause: %empty  */
#line 8523 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38723 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1257: /* opt_persistent_stat_clause: PERSISTENT_SYM FOR_SYM persistent_stat_spec  */
#line 8525 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 38731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1258: /* persistent_stat_spec: ALL  */
#line 8532 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38737 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1259: /* persistent_stat_spec: COLUMNS persistent_column_stat_spec INDEXES persistent_index_stat_spec  */
#line 8534 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1260: /* persistent_column_stat_spec: ALL  */
#line 8538 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 38749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1261: /* $@124: %empty  */
#line 8540 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 38760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1262: /* persistent_column_stat_spec: '(' $@124 table_column_list ')'  */
#line 8548 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 38766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1263: /* persistent_index_stat_spec: ALL  */
#line 8552 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 38772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1264: /* $@125: %empty  */
#line 8554 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 38783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1265: /* persistent_index_stat_spec: '(' $@125 table_index_list ')'  */
#line 8562 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 38789 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1266: /* table_column_list: %empty  */
#line 8567 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38795 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1267: /* table_column_list: ident  */
#line 8569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 38804 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1268: /* table_column_list: table_column_list ',' ident  */
#line 8574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 38813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1269: /* table_index_list: %empty  */
#line 8582 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38819 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1272: /* table_index_name: ident  */
#line 8589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 38829 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1273: /* table_index_name: PRIMARY_SYM  */
#line 8596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 38840 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1274: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 8606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 38851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1275: /* binlog_base64_event: BINLOG_SYM '@' ident_or_text ',' '@' ident_or_text  */
#line 8614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 38861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1277: /* $@126: %empty  */
#line 8624 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 38867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1279: /* $@127: %empty  */
#line 8629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1280: /* check: CHECK_SYM $@127 check_view_or_table  */
#line 8639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38895 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1281: /* opt_mi_check_type: %empty  */
#line 8651 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 38901 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1282: /* opt_mi_check_type: mi_check_types  */
#line 8652 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 38907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1283: /* mi_check_types: mi_check_type  */
#line 8656 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 38913 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1284: /* mi_check_types: mi_check_type mi_check_types  */
#line 8657 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 38919 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1285: /* mi_check_type: QUICK  */
#line 8661 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_QUICK; }
#line 38925 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1286: /* mi_check_type: FAST_SYM  */
#line 8662 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_FAST; }
#line 38931 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1287: /* mi_check_type: MEDIUM_SYM  */
#line 8663 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_MEDIUM; }
#line 38937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1288: /* mi_check_type: EXTENDED_SYM  */
#line 8664 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_EXTEND; }
#line 38943 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1289: /* mi_check_type: CHANGED  */
#line 8665 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 38949 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1290: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 8666 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 38955 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1291: /* opt_view_check_type: %empty  */
#line 8670 "/home/buildbot/git/sql/sql_yacc.yy"
                              { }
#line 38961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1292: /* opt_view_check_type: FOR_SYM UPGRADE_SYM  */
#line 8671 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 38967 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1293: /* $@128: %empty  */
#line 8676 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 38981 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1294: /* optimize: OPTIMIZE opt_no_write_to_binlog table_or_tables $@128 table_list opt_lock_wait_timeout  */
#line 8686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38993 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1295: /* opt_no_write_to_binlog: %empty  */
#line 8696 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 38999 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1296: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 8697 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 39005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1297: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 8698 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 39011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1298: /* $@129: %empty  */
#line 8703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            Lex->create_info.set((yyvsp[0].object_ddl_options));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 39022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1299: /* rename: RENAME table_or_tables opt_if_exists $@129 table_to_table_list  */
#line 8710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 39030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1300: /* rename: RENAME USER_SYM clear_privileges rename_list  */
#line 8714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 39038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1301: /* rename_list: user TO_SYM user  */
#line 8721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39048 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1302: /* rename_list: rename_list ',' user TO_SYM user  */
#line 8727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 39058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1305: /* table_to_table: table_ident opt_lock_wait_timeout TO_SYM table_ident  */
#line 8741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 39074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1306: /* $@130: %empty  */
#line 8756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.reset();
          }
#line 39082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1307: /* keycache: CACHE_SYM INDEX_SYM $@130 keycache_list_or_parts IN_SYM key_cache_name  */
#line 8760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 39092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1312: /* assign_to_keycache: table_ident cache_keys_spec  */
#line 8779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 39104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1313: /* assign_to_keycache_parts: table_ident adm_partition cache_keys_spec  */
#line 8790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 39116 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1314: /* key_cache_name: ident  */
#line 8800 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 39122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1315: /* key_cache_name: DEFAULT  */
#line 8801 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str) = default_base; }
#line 39128 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1316: /* $@131: %empty  */
#line 8806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 39140 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1317: /* preload: LOAD INDEX_SYM INTO CACHE_SYM $@131 preload_list_or_parts  */
#line 8814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 39148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1322: /* preload_keys: table_ident cache_keys_spec opt_ignore_leaves  */
#line 8831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 39160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1323: /* preload_keys_parts: table_ident adm_partition cache_keys_spec opt_ignore_leaves  */
#line 8842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 39172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1324: /* $@132: %empty  */
#line 8853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 39180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1326: /* $@133: %empty  */
#line 8860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE,
                                        INDEX_HINT_MASK_ALL);
          }
#line 39190 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1328: /* cache_key_list_or_empty: %empty  */
#line 8869 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 39196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1330: /* opt_ignore_leaves: %empty  */
#line 8875 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 39202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1331: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 8876 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 39208 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1332: /* $@134: %empty  */
#line 8886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 39219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1333: /* select: query_expression_no_with_clause $@134 opt_procedure_or_into  */
#line 8893 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 39230 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1334: /* $@135: %empty  */
#line 8900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 39241 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1335: /* select: with_clause query_expression_no_with_clause $@135 opt_procedure_or_into  */
#line 8907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 39253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1336: /* $@136: %empty  */
#line 8918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 39262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1337: /* select_into: select_into_query_specification $@136 opt_order_limit_lock  */
#line 8923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 39276 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1338: /* $@137: %empty  */
#line 8934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 39285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1339: /* select_into: with_clause select_into_query_specification $@137 opt_order_limit_lock  */
#line 8939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 39301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1340: /* simple_table: query_specification  */
#line 8953 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 39307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1341: /* simple_table: table_value_constructor  */
#line 8954 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 39313 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1342: /* $@138: %empty  */
#line 8959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 39322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1343: /* table_value_constructor: VALUES $@138 values_list  */
#line 8964 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 39331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1344: /* $@139: %empty  */
#line 8972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) || lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 39344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1345: /* $@140: %empty  */
#line 8981 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= SELECT_LIST;
          }
#line 39352 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1346: /* query_specification_start: SELECT_SYM $@139 select_options $@140 select_item_list  */
#line 8985 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 39360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1347: /* query_specification: query_specification_start opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 8997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 39368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1348: /* select_into_query_specification: query_specification_start into opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 9010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 39376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1349: /* query_expression: query_expression_no_with_clause  */
#line 9068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 39385 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1350: /* query_expression: with_clause query_expression_no_with_clause  */
#line 9074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 39395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1351: /* query_expression_no_with_clause: query_expression_body_ext  */
#line 9087 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 39401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1352: /* query_expression_no_with_clause: query_expression_body_ext_parens  */
#line 9088 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 39407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1353: /* $@141: %empty  */
#line 9103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 39419 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1354: /* query_expression_body_ext: query_expression_body $@141 opt_query_expression_tail  */
#line 9111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 39430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1355: /* $@142: %empty  */
#line 9118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 39439 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1356: /* query_expression_body_ext: query_expression_body_ext_parens $@142 query_expression_tail  */
#line 9123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 39448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1357: /* query_expression_body_ext_parens: '(' query_expression_body_ext_parens ')'  */
#line 9131 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 39454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1358: /* query_expression_body_ext_parens: '(' query_expression_body_ext ')'  */
#line 9133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 39465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1359: /* query_expression_body: query_simple  */
#line 9148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 39475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1360: /* $@143: %empty  */
#line 9155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 39486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1361: /* query_expression_body: query_expression_body unit_type_decl $@143 query_primary  */
#line 9162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 39497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1362: /* query_expression_body: query_expression_body_ext_parens unit_type_decl query_primary  */
#line 9171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 39509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1363: /* query_primary: query_simple  */
#line 9187 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 39515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1364: /* query_primary: query_expression_body_ext_parens  */
#line 9189 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 39521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1365: /* query_simple: simple_table  */
#line 9198 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 39527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1366: /* subselect: query_expression  */
#line 9203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 39536 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1367: /* subquery: query_expression_body_ext_parens  */
#line 9244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 39549 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1368: /* subquery: '(' with_clause query_expression_no_with_clause ')'  */
#line 9253 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 39560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1372: /* table_reference_list: join_table_list  */
#line 9272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 39570 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1375: /* select_options: select_option_list  */
#line 9287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 39580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1376: /* opt_history_unit: %empty  */
#line 9296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 39588 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1377: /* opt_history_unit: TRANSACTION_SYM  */
#line 9300 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 39596 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1378: /* opt_history_unit: TIMESTAMP  */
#line 9304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 39604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1379: /* history_point: TIMESTAMP TEXT_STRING  */
#line 9311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= type_handler_datetime.create_literal_item(thd,
                                                     (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                     YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 39617 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1380: /* history_point: function_call_keyword_timestamp  */
#line 9320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 39625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1381: /* history_point: opt_history_unit bit_expr  */
#line 9324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 39633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1382: /* for_portion_of_time_clause: FOR_SYM PORTION_SYM OF_SYM remember_tok_start ident FROM bit_expr TO_SYM bit_expr  */
#line 9332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        Lex_ident_column((yyvsp[-4].ident_sys)));
          }
#line 39649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1383: /* opt_for_portion_of_time_clause: %empty  */
#line 9347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 39657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1384: /* opt_for_portion_of_time_clause: for_portion_of_time_clause  */
#line 9351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 39665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1385: /* opt_for_system_time_clause: %empty  */
#line 9358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 39673 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1386: /* opt_for_system_time_clause: FOR_SYSTEM_TIME_SYM system_time_expr  */
#line 9362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 39681 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1387: /* system_time_expr: AS OF_SYM history_point  */
#line 9369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 39689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1388: /* system_time_expr: ALL  */
#line 9373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 39697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1389: /* system_time_expr: FROM history_point TO_SYM history_point  */
#line 9377 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 39705 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1390: /* system_time_expr: BETWEEN_SYM history_point AND_SYM history_point  */
#line 9381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 39713 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1394: /* select_option: SQL_NO_CACHE_SYM  */
#line 9394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 39726 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1395: /* select_option: SQL_CACHE_SYM  */
#line 9403 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 39739 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1396: /* select_lock_type: FOR_SYM UPDATE_SYM opt_lock_wait_timeout_new  */
#line 9416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 39749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1397: /* select_lock_type: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM opt_lock_wait_timeout_new  */
#line 9422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 39759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1398: /* opt_select_lock_type: %empty  */
#line 9432 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 39767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1399: /* opt_select_lock_type: select_lock_type  */
#line 9436 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 39775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1400: /* opt_lock_wait_timeout_new: %empty  */
#line 9443 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 39783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1401: /* opt_lock_wait_timeout_new: WAIT_SYM ulong_num  */
#line 9447 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 39793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1402: /* opt_lock_wait_timeout_new: NOWAIT_SYM  */
#line 9453 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 39803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1403: /* opt_lock_wait_timeout_new: SKIP_SYM LOCKED_SYM  */
#line 9459 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).skip_locked= 1;
          Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SKIP_LOCKED);
        }
#line 39813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1406: /* select_item_list: '*'  */
#line 9470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_parsing_returning=
                              thd->lex->current_select->parsing_place ==
                                                IN_RETURNING;
            SELECT_LEX *correct_select= is_parsing_returning ?
                                              thd->lex->returning() :
                                              thd->lex->current_select;
            Item *item= new (thd->mem_root)
                          Item_field(thd, &correct_select->context,
                                     star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            correct_select->with_wild++;
          }
#line 39834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1407: /* select_item: remember_name select_sublist_qualified_asterisk remember_end  */
#line 9490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 39843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1408: /* select_item: remember_name expr remember_end select_alias  */
#line 9495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 39866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1409: /* remember_tok_start: %empty  */
#line 9516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 39874 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1410: /* remember_name: %empty  */
#line 9522 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 39882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1411: /* remember_end: %empty  */
#line 9528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 39890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1412: /* remember_cpp_ptr: %empty  */
#line 9534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr();
          }
#line 39898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1413: /* remember_start_opt: %empty  */
#line 9540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 39909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1414: /* remember_end_opt: %empty  */
#line 9549 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 39920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1415: /* remember_lex: %empty  */
#line 9558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
          }
#line 39928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1416: /* select_alias: %empty  */
#line 9564 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)=null_clex_str;}
#line 39934 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1417: /* select_alias: AS ident  */
#line 9565 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 39940 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1418: /* select_alias: AS TEXT_STRING_sys  */
#line 9566 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 39946 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1419: /* select_alias: ident  */
#line 9567 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 39952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1420: /* select_alias: TEXT_STRING_sys  */
#line 9568 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 39958 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1421: /* opt_default_time_precision: %empty  */
#line 9572 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 39964 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1422: /* opt_default_time_precision: '(' ')'  */
#line 9573 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 39970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1423: /* opt_default_time_precision: '(' real_ulong_num ')'  */
#line 9574 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 39976 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1424: /* opt_time_precision: %empty  */
#line 9578 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 39982 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1425: /* opt_time_precision: '(' ')'  */
#line 9579 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 39988 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1426: /* opt_time_precision: '(' real_ulong_num ')'  */
#line 9580 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 39994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1427: /* optional_braces: %empty  */
#line 9584 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 40000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1428: /* optional_braces: '(' ')'  */
#line 9585 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 40006 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1429: /* search_condition: expr  */
#line 9589 "/home/buildbot/git/sql/sql_yacc.yy"
               { ((yyval.item)= (yyvsp[0].item))->base_flags|= item_base_t::IS_COND ; }
#line 40012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1430: /* expr: expr or expr  */
#line 9595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 40067 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1431: /* expr: expr XOR expr  */
#line 9646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40078 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1432: /* expr: expr and expr  */
#line 9653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 40125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1433: /* expr: NOT_SYM expr  */
#line 9696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1435: /* boolean_test: boolean_test IS TRUE_SYM  */
#line 9706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1436: /* boolean_test: boolean_test IS not TRUE_SYM  */
#line 9712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1437: /* boolean_test: boolean_test IS FALSE_SYM  */
#line 9718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40165 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1438: /* boolean_test: boolean_test IS not FALSE_SYM  */
#line 9724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1439: /* boolean_test: boolean_test IS UNKNOWN_SYM  */
#line 9730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1440: /* boolean_test: boolean_test IS not UNKNOWN_SYM  */
#line 9736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40195 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1441: /* boolean_test: boolean_test IS NULL_SYM  */
#line 9742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1442: /* boolean_test: boolean_test IS not NULL_SYM  */
#line 9748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40215 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1443: /* boolean_test: boolean_test EQUAL_SYM predicate  */
#line 9754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1444: /* boolean_test: boolean_test comp_op predicate  */
#line 9760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1445: /* boolean_test: boolean_test comp_op all_or_any '(' subselect ')'  */
#line 9766 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1447: /* predicate: predicate IN_SYM subquery  */
#line 9776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 40255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1448: /* predicate: predicate not IN_SYM subquery  */
#line 9782 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 40268 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1449: /* predicate: predicate IN_SYM '(' expr ')'  */
#line 9791 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40278 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1450: /* predicate: predicate IN_SYM '(' expr ',' expr_list ')'  */
#line 9797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40290 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1451: /* predicate: predicate not IN_SYM '(' expr ')'  */
#line 9805 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1452: /* predicate: predicate not IN_SYM '(' expr ',' expr_list ')'  */
#line 9811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 40313 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1453: /* predicate: predicate BETWEEN_SYM predicate AND_SYM predicate  */
#line 9820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1454: /* predicate: predicate not BETWEEN_SYM predicate AND_SYM predicate  */
#line 9826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 40335 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1455: /* predicate: predicate SOUNDS_SYM LIKE predicate  */
#line 9834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1456: /* predicate: predicate LIKE predicate  */
#line 9844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 40359 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1457: /* predicate: predicate LIKE predicate ESCAPE_SYM predicate  */
#line 9850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 40370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1458: /* predicate: predicate not LIKE predicate  */
#line 9857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 40381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1459: /* predicate: predicate not LIKE predicate ESCAPE_SYM predicate  */
#line 9864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 40393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1460: /* predicate: predicate REGEXP predicate  */
#line 9872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1461: /* predicate: predicate not REGEXP predicate  */
#line 9878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1463: /* bit_expr: bit_expr '|' bit_expr  */
#line 9891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1464: /* bit_expr: bit_expr '&' bit_expr  */
#line 9897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1465: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 9903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1466: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 9909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1467: /* bit_expr: bit_expr ORACLE_CONCAT_SYM bit_expr  */
#line 9915 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40467 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1468: /* bit_expr: bit_expr '+' bit_expr  */
#line 9922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1469: /* bit_expr: bit_expr '-' bit_expr  */
#line 9928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1470: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 9934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1471: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 9940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40507 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1472: /* bit_expr: INTERVAL_SYM expr interval '+' expr  */
#line 9947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40517 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1473: /* bit_expr: '+' INTERVAL_SYM expr interval '+' expr  */
#line 9953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40527 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1474: /* bit_expr: '-' INTERVAL_SYM expr interval '+' expr  */
#line 9959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1475: /* bit_expr: bit_expr '*' bit_expr  */
#line 9965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40547 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1476: /* bit_expr: bit_expr '/' bit_expr  */
#line 9971 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40557 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1477: /* bit_expr: bit_expr '%' bit_expr  */
#line 9977 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40567 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1478: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 9983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1479: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 9989 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40587 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1480: /* bit_expr: bit_expr '^' bit_expr  */
#line 9995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40597 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1490: /* comp_op: '='  */
#line 10024 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 40603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1491: /* comp_op: GE  */
#line 10025 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 40609 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1492: /* comp_op: '>'  */
#line 10026 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 40615 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1493: /* comp_op: LE  */
#line 10027 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 40621 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1494: /* comp_op: '<'  */
#line 10028 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 40627 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1495: /* comp_op: NE  */
#line 10029 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 40633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1496: /* all_or_any: ALL  */
#line 10033 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 40639 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1497: /* all_or_any: ANY_SYM  */
#line 10034 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 40645 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1498: /* opt_dyncol_type: %empty  */
#line 10039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
	  }
#line 40653 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1499: /* opt_dyncol_type: AS dyncol_type  */
#line 10042 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 40659 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1503: /* numeric_dyncol_type: INT_SYM  */
#line 10052 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 40665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1504: /* numeric_dyncol_type: UNSIGNED INT_SYM  */
#line 10053 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 40671 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1505: /* numeric_dyncol_type: DOUBLE_SYM  */
#line 10054 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 40677 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1506: /* numeric_dyncol_type: REAL  */
#line 10055 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 40683 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1507: /* numeric_dyncol_type: FLOAT_SYM  */
#line 10056 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 40689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1508: /* numeric_dyncol_type: DECIMAL_SYM float_options  */
#line 10057 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 40695 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1509: /* temporal_dyncol_type: DATE_SYM  */
#line 10061 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 40701 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1510: /* temporal_dyncol_type: TIME_SYM opt_field_scale  */
#line 10062 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, (yyvsp[0].Lex_length_and_dec)); }
#line 40707 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1511: /* temporal_dyncol_type: DATETIME opt_field_scale  */
#line 10063 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, (yyvsp[0].Lex_length_and_dec)); }
#line 40713 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1512: /* string_dyncol_type: char opt_binary  */
#line 10068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_dyncol_type).set(DYN_COL_STRING, thd,
                       thd->variables.character_set_collations,
                       (yyvsp[0].Lex_exact_charset_extended_collation_attrs), thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 40724 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1513: /* string_dyncol_type: nchar  */
#line 10075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING, national_charset_info);
          }
#line 40732 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1514: /* dyncall_create_element: expr ',' expr opt_dyncol_type  */
#line 10082 "/home/buildbot/git/sql/sql_yacc.yy"
   {
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= (yyvsp[0].Lex_dyncol_type).charset_collation();
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_length())
       (yyval.dyncol_def)->len= (yyvsp[0].Lex_dyncol_type).length();
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_dec())
       (yyval.dyncol_def)->frac= (yyvsp[0].Lex_dyncol_type).dec();
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 40755 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1515: /* dyncall_create_list: dyncall_create_element  */
#line 10104 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 40766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1516: /* dyncall_create_list: dyncall_create_list ',' dyncall_create_element  */
#line 10111 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 40775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1517: /* plsql_cursor_attr: ISOPEN_SYM  */
#line 10119 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 40781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1518: /* plsql_cursor_attr: FOUND_SYM  */
#line 10120 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 40787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1519: /* plsql_cursor_attr: NOTFOUND_SYM  */
#line 10121 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 40793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1520: /* plsql_cursor_attr: ROWCOUNT_SYM  */
#line 10122 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 40799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1521: /* explicit_cursor_attr: ident PERCENT_ORACLE_SYM plsql_cursor_attr  */
#line 10127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 40808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1524: /* trim_operands_regular: expr  */
#line 10140 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 40814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1525: /* trim_operands_special: LEADING expr FROM expr  */
#line 10144 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 40820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1526: /* trim_operands_special: TRAILING expr FROM expr  */
#line 10145 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 40826 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1527: /* trim_operands_special: BOTH expr FROM expr  */
#line 10146 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 40832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1528: /* trim_operands_special: LEADING FROM expr  */
#line 10147 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 40838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1529: /* trim_operands_special: TRAILING FROM expr  */
#line 10148 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 40844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1530: /* trim_operands_special: BOTH FROM expr  */
#line 10149 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 40850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1531: /* trim_operands_special: expr FROM expr  */
#line 10150 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 40856 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1538: /* column_default_non_parenthesized_expr: param_marker  */
#line 10188 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_param); }
#line 40862 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1540: /* column_default_non_parenthesized_expr: sum_expr  */
#line 10191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top || Lex->json_table)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 40874 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1541: /* column_default_non_parenthesized_expr: window_func_expr  */
#line 10199 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 40886 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1543: /* column_default_non_parenthesized_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 10208 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40897 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1544: /* column_default_non_parenthesized_expr: EXISTS '(' subselect ')'  */
#line 10215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40907 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1545: /* column_default_non_parenthesized_expr: '{' ident expr '}'  */
#line 10221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 40916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1546: /* column_default_non_parenthesized_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 10226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 40930 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1547: /* column_default_non_parenthesized_expr: CAST_SYM '(' expr AS cast_type ')'  */
#line 10236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 40939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1548: /* column_default_non_parenthesized_expr: CASE_SYM when_list_opt_else END  */
#line 10241 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 40948 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1549: /* column_default_non_parenthesized_expr: CASE_SYM expr when_list_opt_else END  */
#line 10246 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 40958 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1550: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 10252 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 40967 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1551: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 10257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 40979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1552: /* column_default_non_parenthesized_expr: DEFAULT '(' simple_ident ')'  */
#line 10265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 40994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1553: /* column_default_non_parenthesized_expr: VALUE_SYM '(' simple_ident_nospvar ')'  */
#line 10276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41005 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1554: /* column_default_non_parenthesized_expr: NEXT_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10283 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 41014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1555: /* column_default_non_parenthesized_expr: NEXTVAL_SYM '(' table_ident ')'  */
#line 10288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 41023 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1556: /* column_default_non_parenthesized_expr: PREVIOUS_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10293 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 41032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1557: /* column_default_non_parenthesized_expr: LASTVAL_SYM '(' table_ident ')'  */
#line 10298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 41041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1558: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' sequence_value_hybrid_num ')'  */
#line 10303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_hybrid_number), 0,
                                                            1))))
              MYSQL_YYABORT;
          }
#line 41051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1559: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' sequence_value_hybrid_num ',' bool ')'  */
#line 10309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_hybrid_number), 0,
                                                            (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 41061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1560: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' sequence_value_hybrid_num ',' bool ',' ulonglong_num ')'  */
#line 10316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_hybrid_number), (yyvsp[-1].ulonglong_number),
                                                            (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 41071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1563: /* primary_expr: '(' parenthesized_expr ')'  */
#line 10326 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { (yyval.item)= (yyvsp[-1].item); }
#line 41077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1564: /* primary_expr: subquery  */
#line 10328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 41086 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1566: /* string_factor_expr: string_factor_expr COLLATE_SYM collation_name  */
#line 10337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new (thd->mem_root)
                               Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].Lex_extended_collation)))))
              MYSQL_YYABORT;
          }
#line 41096 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1568: /* simple_expr: BINARY simple_expr  */
#line 10347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 41106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1569: /* simple_expr: '+' simple_expr  */
#line 10353 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 41114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1570: /* simple_expr: '-' simple_expr  */
#line 10357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1571: /* simple_expr: '~' simple_expr  */
#line 10363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41134 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1572: /* simple_expr: not2 simple_expr  */
#line 10369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41144 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1574: /* mysql_concatenation_expr: mysql_concatenation_expr MYSQL_CONCAT_SYM simple_expr  */
#line 10379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1575: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ')'  */
#line 10388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41165 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1576: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ',' expr ')'  */
#line 10395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1577: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 10409 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1578: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 10415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1579: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 10423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 41210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1580: /* function_call_keyword: CURRENT_ROLE optional_braces  */
#line 10432 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 41223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1581: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 10441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_date_funcs_used_flag();
          }
#line 41234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1582: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 10448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1583: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 10454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1584: /* function_call_keyword: INSERT '(' expr ',' expr ',' expr ',' expr ')'  */
#line 10460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1585: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 10466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1586: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 10481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1587: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 10492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41308 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1588: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 10498 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1589: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 10504 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_date_funcs_used_flag();
          }
#line 41329 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1590: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 10511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41339 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1591: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 10517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1592: /* function_call_keyword: SQL_SYM PERCENT_ORACLE_SYM ROWCOUNT_SYM  */
#line 10523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 41361 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1593: /* function_call_keyword: SESSION_USER_SYM '(' ')'  */
#line 10531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_session_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 41373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1594: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 10539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1595: /* function_call_keyword: function_call_keyword_timestamp  */
#line 10546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 41392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1596: /* function_call_keyword: TRIM '(' trim_operands ')'  */
#line 10550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_trim(thd, (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 41402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1597: /* function_call_keyword: USER_SYM '(' ')'  */
#line 10556 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 41414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1598: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
             Lex->set_date_funcs_used_flag();
          }
#line 41425 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1601: /* substring_operands_regular: expr ',' expr ',' expr  */
#line 10579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 41433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1602: /* substring_operands_regular: expr ',' expr  */
#line 10583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 41441 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1603: /* substring_operands_special: expr FROM expr FOR_SYM expr  */
#line 10590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 41449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1604: /* substring_operands_special: expr FROM expr  */
#line 10594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 41457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1605: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1606: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41478 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1607: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 41489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1608: /* function_call_nonkeyword: CURTIME opt_time_precision  */
#line 10634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 41500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1609: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10641 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1610: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1611: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41530 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1612: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1613: /* function_call_nonkeyword: LOCALTIMESTAMP opt_time_precision  */
#line 10665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query= false;
          }
#line 41551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1614: /* function_call_nonkeyword: NOW_SYM opt_time_precision  */
#line 10672 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_timestamp(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 41562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1615: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1616: /* function_call_nonkeyword: ROWNUM_SYM optional_braces  */
#line 10690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_rownum(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41582 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1617: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1618: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41603 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1619: /* function_call_nonkeyword: SUBSTRING '(' substring_operands ')'  */
#line 10709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_substr(thd, (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 41613 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1620: /* function_call_nonkeyword: SYSDATE  */
#line 10716 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 41622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1621: /* function_call_nonkeyword: SYSDATE '(' ')'  */
#line 10722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 41631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1622: /* function_call_nonkeyword: SYSDATE '(' real_ulong_num ')'  */
#line 10727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, (uint) (yyvsp[-1].ulong_num)))))
               MYSQL_YYABORT;
          }
#line 41640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1623: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1624: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1625: /* function_call_nonkeyword: TRIM_ORACLE '(' trim_operands ')'  */
#line 10744 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 41669 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1626: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10749 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 41680 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1627: /* function_call_nonkeyword: UTC_TIME_SYM opt_time_precision  */
#line 10756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 41691 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1628: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM opt_time_precision  */
#line 10763 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 41702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1629: /* function_call_nonkeyword: COLUMN_ADD_SYM '(' expr ',' dyncall_create_list ')'  */
#line 10771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1630: /* function_call_nonkeyword: COLUMN_DELETE_SYM '(' expr ',' expr_list ')'  */
#line 10778 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1631: /* function_call_nonkeyword: COLUMN_CREATE_SYM '(' dyncall_create_list ')'  */
#line 10785 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41732 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1632: /* function_call_nonkeyword: COLUMN_GET_SYM '(' expr ',' expr AS cast_type ')'  */
#line 10792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type), (yyvsp[-1].Lex_cast_type).charset());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41743 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1633: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10807 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41753 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1634: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1635: /* function_call_conflict: IF_SYM '(' expr ',' expr ',' expr ')'  */
#line 10819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41773 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1636: /* function_call_conflict: LAST_VALUE '(' expr ')'  */
#line 10828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1637: /* function_call_conflict: LAST_VALUE '(' expr_list ',' expr ')'  */
#line 10839 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1638: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 10846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1639: /* function_call_conflict: PASSWORD_SYM '(' expr ')'  */
#line 10852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 41821 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1640: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 10860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1641: /* function_call_conflict: REPLACE '(' expr ',' expr ',' expr ')'  */
#line 10866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 41841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1642: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 10872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1643: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr opt_ws_levels ')'  */
#line 10878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1644: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_nweights opt_ws_levels ')'  */
#line 10884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1645: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY ws_nweights ')'  */
#line 10892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41889 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1646: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 10904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1647: /* @144: %empty  */
#line 10923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 41923 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1648: /* function_call_generic: ident_func '(' @144 opt_udf_expr_list ')'  */
#line 10942 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Type_handler *h;
            Create_func *builder;
            Item *item= NULL;
            sp_record* rec= NULL;

            if (unlikely(Lex_ident_routine::check_name_with_error((yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Constructors, like POINT(1,1)
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= Schema::find_implied(thd)->
                       find_native_function_builder(thd, (yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else if ((h= Type_handler::handler_by_name(thd, (yyvsp[-4].ident_sys))) &&
                     (item= h->make_constructor_item(thd, (yyvsp[-1].item_list))))
            {
              // Found a constructor with a proper argument count
            }
            else if (Lex->spcont &&
                    (rec = Lex->spcont->find_record(&(yyvsp[-4].ident_sys), false)))
            {
              item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 41990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1649: /* function_call_generic: CONTAINS_SYM '(' opt_expr_list ')'  */
#line 11005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 42000 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1650: /* function_call_generic: OVERLAPS_SYM '(' opt_expr_list ')'  */
#line 11011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 42010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1651: /* function_call_generic: WITHIN '(' opt_expr_list ')'  */
#line 11017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 42020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1652: /* function_call_generic: ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 42029 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1653: /* function_call_generic: ident_cli '.' ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 42038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1654: /* function_call_generic: ident_cli '.' REPLACE '(' opt_expr_list ')'  */
#line 11033 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 42047 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1655: /* function_call_generic: ident_cli '.' SUBSTRING '(' opt_expr_list ')'  */
#line 11038 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 42056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1656: /* function_call_generic: ident_cli '.' SUBSTRING '(' substring_operands_special ')'  */
#line 11043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 42065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1657: /* function_call_generic: ident_cli '.' TRIM '(' opt_expr_list ')'  */
#line 11048 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_trim(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 42074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1658: /* function_call_generic: ident_cli '.' TRIM '(' trim_operands_special ')'  */
#line 11053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_trim(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 42083 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1659: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 11073 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 42089 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1660: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 11075 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= FT_BOOL; }
#line 42095 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1661: /* opt_natural_language_mode: %empty  */
#line 11079 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 42101 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1662: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 11080 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 42107 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1663: /* opt_query_expansion: %empty  */
#line 11084 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 0;         }
#line 42113 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1664: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 11085 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 42119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1665: /* opt_udf_expr_list: %empty  */
#line 11089 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= NULL; }
#line 42125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1666: /* opt_udf_expr_list: udf_expr_list  */
#line 11090 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= (yyvsp[0].item_list); }
#line 42131 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1667: /* udf_expr_list: udf_expr  */
#line 11095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 42142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1668: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 11102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 42151 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1669: /* udf_expr: remember_name expr remember_end select_alias  */
#line 11110 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 42179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1670: /* sum_expr: AVG_SYM '(' in_sum_expr ')'  */
#line 11137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1671: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1672: /* sum_expr: BIT_AND '(' in_sum_expr ')'  */
#line 11149 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42209 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1673: /* sum_expr: BIT_OR '(' in_sum_expr ')'  */
#line 11155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1674: /* sum_expr: BIT_XOR '(' in_sum_expr ')'  */
#line 11161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1675: /* sum_expr: COUNT_SYM '(' opt_all '*' ')'  */
#line 11167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1676: /* sum_expr: COUNT_SYM '(' in_sum_expr ')'  */
#line 11176 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42252 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1677: /* $@145: %empty  */
#line 11182 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 42258 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1678: /* $@146: %empty  */
#line 11184 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr--; }
#line 42264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1679: /* sum_expr: COUNT_SYM '(' DISTINCT $@145 expr_list $@146 ')'  */
#line 11186 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1680: /* sum_expr: MIN_SYM '(' in_sum_expr ')'  */
#line 11192 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42284 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1681: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1682: /* sum_expr: MAX_SYM '(' in_sum_expr ')'  */
#line 11209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42304 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1683: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1684: /* sum_expr: STD_SYM '(' in_sum_expr ')'  */
#line 11221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42324 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1685: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')'  */
#line 11227 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42334 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1686: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')'  */
#line 11233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1687: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')'  */
#line 11239 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1688: /* sum_expr: SUM_SYM '(' in_sum_expr ')'  */
#line 11245 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1689: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42374 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1690: /* $@147: %empty  */
#line 11257 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 42380 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1691: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct $@147 expr_list opt_gorder_clause opt_gconcat_separator opt_glimit_clause ')'  */
#line 11261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->limit_params.select_limit,
                                        sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 42400 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1692: /* $@148: %empty  */
#line 11277 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 42406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1693: /* sum_expr: JSON_ARRAYAGG_SYM '(' opt_distinct $@148 expr_list opt_gorder_clause opt_glimit_clause ')'  */
#line 11280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            List<Item> *args= (yyvsp[-3].item_list);
            sel->in_sum_expr--;
            if (args && args->elements > 1)
            {
              /* JSON_ARRAYAGG supports only one parameter */
              my_error(ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT, MYF(0), "JSON_ARRAYAGG");
              MYSQL_YYABORT;
            }
            String* s= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely(s == NULL))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root)
                  Item_func_json_arrayagg(thd, Lex->current_context(),
                                          (yyvsp[-5].num), args,
                                          sel->gorder_list, s, (yyvsp[-1].num),
                                          sel->limit_params.select_limit,
                                          sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 42437 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1694: /* $@149: %empty  */
#line 11307 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 42443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1695: /* sum_expr: JSON_OBJECTAGG_SYM '(' $@149 expr ',' expr ')'  */
#line 11309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;

            (yyval.item)= new (thd->mem_root) Item_func_json_objectagg(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1696: /* window_func_expr: window_func OVER_SYM window_name  */
#line 11321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 42468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1697: /* window_func_expr: window_func OVER_SYM window_spec  */
#line 11330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 42487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1700: /* window_func: function_call_generic  */
#line 11352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 42503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1701: /* simple_window_func: ROW_NUMBER_SYM '(' ')'  */
#line 11367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1702: /* simple_window_func: RANK_SYM '(' ')'  */
#line 11374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42523 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1703: /* simple_window_func: DENSE_RANK_SYM '(' ')'  */
#line 11381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1704: /* simple_window_func: PERCENT_RANK_SYM '(' ')'  */
#line 11388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42543 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1705: /* simple_window_func: CUME_DIST_SYM '(' ')'  */
#line 11395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1706: /* simple_window_func: NTILE_SYM '(' expr ')'  */
#line 11402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42563 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1707: /* simple_window_func: FIRST_VALUE_SYM '(' expr ')'  */
#line 11409 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1708: /* simple_window_func: LAST_VALUE '(' expr ')'  */
#line 11416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1709: /* simple_window_func: NTH_VALUE_SYM '(' expr ',' expr ')'  */
#line 11423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42593 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1710: /* simple_window_func: LEAD_SYM '(' expr ')'  */
#line 11430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42607 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1711: /* simple_window_func: LEAD_SYM '(' expr ',' expr ')'  */
#line 11441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42617 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1712: /* simple_window_func: LAG_SYM '(' expr ')'  */
#line 11448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42631 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1713: /* simple_window_func: LAG_SYM '(' expr ',' expr ')'  */
#line 11459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42641 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1714: /* inverse_distribution_function: percentile_function OVER_SYM '(' opt_window_partition_clause ')'  */
#line 11471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 42660 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1715: /* $@150: %empty  */
#line 11489 "/home/buildbot/git/sql/sql_yacc.yy"
           { Select->prepare_add_window_spec(thd); }
#line 42666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1716: /* percentile_function: inverse_distribution_function_def WITHIN GROUP_SYM '(' $@150 order_by_single_element_list ')'  */
#line 11491 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 42674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1717: /* percentile_function: MEDIAN_SYM '(' expr ')'  */
#line 11495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1718: /* inverse_distribution_function_def: PERCENTILE_CONT_SYM '(' expr ')'  */
#line 11512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1719: /* inverse_distribution_function_def: PERCENTILE_DISC_SYM '(' expr ')'  */
#line 11518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1720: /* order_by_single_element_list: ORDER_SYM BY order_ident order_dir  */
#line 11527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 42721 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1721: /* window_name: ident  */
#line 11536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 42731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1722: /* $@151: %empty  */
#line 11545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 42740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1723: /* variable: '@' $@151 variable_aux  */
#line 11550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 42748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1724: /* variable_aux: ident_or_text SET_VAR expr  */
#line 11557 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_set_user_var *item;
            if (!(yyvsp[-2].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 42767 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1725: /* variable_aux: ident_or_text  */
#line 11572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 42784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1726: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name  */
#line 11585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 42793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1727: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name '.' ident  */
#line 11590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 42802 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1728: /* opt_distinct: %empty  */
#line 11597 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 42808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1729: /* opt_distinct: DISTINCT  */
#line 11598 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 42814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1730: /* opt_gconcat_separator: %empty  */
#line 11603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 42824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1731: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11608 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 42830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1734: /* gorder_list: gorder_list ',' order_ident order_dir  */
#line 11618 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 42839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1735: /* gorder_list: order_ident order_dir  */
#line 11623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 42848 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1736: /* opt_glimit_clause: %empty  */
#line 11630 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 42854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1737: /* opt_glimit_clause: glimit_clause  */
#line 11631 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num) = 1; }
#line 42860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1738: /* glimit_clause: LIMIT glimit_options  */
#line 11637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 42868 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1739: /* glimit_options: limit_options  */
#line 11644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 42876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1740: /* $@152: %empty  */
#line 11653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 42889 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1741: /* in_sum_expr: opt_all $@152 expr  */
#line 11662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 42898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1742: /* cast_type: BINARY opt_field_length  */
#line 11670 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), &my_charset_bin); }
#line 42904 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1743: /* cast_type: CHAR_SYM opt_field_length opt_binary  */
#line 11672 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 42915 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1744: /* cast_type: VARCHAR field_length opt_binary  */
#line 11679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 42926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1745: /* cast_type: VARCHAR2_ORACLE_SYM field_length opt_binary  */
#line 11686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 42937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1746: /* cast_type: NCHAR_SYM opt_field_length  */
#line 11693 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), national_charset_info);
          }
#line 42945 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1747: /* cast_type: cast_type_numeric  */
#line 11696 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 42951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1748: /* cast_type: cast_type_temporal  */
#line 11697 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 42957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1749: /* cast_type: udt_name  */
#line 11699 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 42966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1750: /* cast_type_numeric: INT_SYM  */
#line 11706 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 42972 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1751: /* cast_type_numeric: SIGNED_SYM  */
#line 11707 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 42978 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1752: /* cast_type_numeric: SIGNED_SYM INT_SYM  */
#line 11708 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 42984 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1753: /* cast_type_numeric: UNSIGNED  */
#line 11709 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 42990 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1754: /* cast_type_numeric: UNSIGNED INT_SYM  */
#line 11710 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 42996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1755: /* cast_type_numeric: DECIMAL_SYM float_options  */
#line 11711 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 43002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1756: /* cast_type_numeric: FLOAT_SYM  */
#line 11712 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 43008 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1757: /* cast_type_numeric: DOUBLE_SYM opt_precision  */
#line 11713 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 43014 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1758: /* cast_type_temporal: DATE_SYM  */
#line 11717 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 43020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1759: /* cast_type_temporal: TIME_SYM opt_field_scale  */
#line 11718 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_time2, (yyvsp[0].Lex_length_and_dec)); }
#line 43026 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1760: /* cast_type_temporal: DATETIME opt_field_scale  */
#line 11719 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_datetime2, (yyvsp[0].Lex_length_and_dec)); }
#line 43032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1761: /* cast_type_temporal: INTERVAL_SYM DAY_SECOND_SYM field_scale  */
#line 11721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, (yyvsp[0].Lex_length_and_dec));
          }
#line 43040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1762: /* opt_expr_list: %empty  */
#line 11727 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item_list)= NULL; }
#line 43046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1763: /* opt_expr_list: expr_list  */
#line 11728 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 43052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1764: /* expr_list: expr  */
#line 11733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 43061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1765: /* expr_list: expr_list ',' expr  */
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 43070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1766: /* ident_list_arg: ident_list  */
#line 11745 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[0].item_list); }
#line 43076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1767: /* ident_list_arg: '(' ident_list ')'  */
#line 11746 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 43082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1768: /* ident_list: simple_ident  */
#line 11751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1769: /* ident_list: ident_list ',' simple_ident  */
#line 11758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 43102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1770: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11766 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 43115 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1771: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 43126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1773: /* when_list_opt_else: when_list ELSE expr  */
#line 11786 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 43136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1774: /* table_ref: table_factor  */
#line 11796 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1775: /* table_ref: join_table  */
#line 11798 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 43155 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1778: /* json_text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 11812 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_string_with_metadata)= (yyvsp[0].lex_string_with_metadata);
          }
#line 43163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1779: /* join_table_list: derived_table_list  */
#line 11818 "/home/buildbot/git/sql/sql_yacc.yy"
                             { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 43169 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1780: /* json_table_columns_clause: COLUMNS '(' json_table_columns_list ')'  */
#line 11823 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43175 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1782: /* json_table_columns_list: json_table_columns_list ',' json_table_column  */
#line 11829 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43181 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1783: /* $@153: %empty  */
#line 11834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));

            lex->json_table->m_cur_json_table_column=
              new (thd->mem_root) Json_table_column(f,
                                    lex->json_table->get_cur_nested_path());

            if (unlikely(!f ||
                !lex->json_table->m_cur_json_table_column))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].ident_sys));
          }
#line 43204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1784: /* json_table_column: ident $@153 json_table_column_type  */
#line 11853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->json_table->
                           m_cur_json_table_column->m_field->check(thd)))
              MYSQL_YYABORT;
            lex->json_table->m_columns.push_back(
               lex->json_table->m_cur_json_table_column, thd->mem_root);
          }
#line 43217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1785: /* $@154: %empty  */
#line 11862 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Json_table_nested_path *np= new (thd->mem_root)
              Json_table_nested_path();
            np->set_path(thd, (yyvsp[0].lex_string_with_metadata));
            lex->json_table->start_nested_path(np);
          }
#line 43229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1786: /* json_table_column: NESTED_SYM PATH_SYM json_text_literal $@154 json_table_columns_clause  */
#line 11870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->json_table->end_nested_path();
          }
#line 43238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1787: /* json_table_column_type: FOR_SYM ORDINALITY_SYM  */
#line 11878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_field_type_st type;
            type.set(&type_handler_slong);
            Lex->last_field->set_attributes(thd, type,
                                            COLUMN_DEFINITION_TABLE_FIELD);
            Lex->json_table->m_cur_json_table_column->
              set(Json_table_column::FOR_ORDINALITY);
          }
#line 43251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1788: /* json_table_column_type: json_table_field_type PATH_SYM json_text_literal json_opt_on_empty_or_error  */
#line 11888 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::PATH, (yyvsp[-1].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
            {
              MYSQL_YYABORT;
            }
          }
#line 43266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1789: /* json_table_column_type: json_table_field_type EXISTS PATH_SYM json_text_literal  */
#line 11899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::EXISTS_PATH, (yyvsp[0].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
               MYSQL_YYABORT;
          }
#line 43279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1794: /* json_opt_on_empty_or_error: %empty  */
#line 11918 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 43285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1801: /* json_on_response: ERROR_SYM  */
#line 11933 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_ERROR;
          }
#line 43293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1802: /* json_on_response: NULL_SYM  */
#line 11937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_NULL;
          }
#line 43301 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1803: /* json_on_response: DEFAULT json_default_literal  */
#line 11941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_DEFAULT;
            (yyval.json_on_response).m_default= (yyvsp[0].item);
          }
#line 43310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1804: /* json_on_error_response: json_on_response ON ERROR_SYM  */
#line 11949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_error= (yyvsp[-2].json_on_response);
          }
#line 43318 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1805: /* json_on_empty_response: json_on_response ON EMPTY_SYM  */
#line 11956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_empty= (yyvsp[-2].json_on_response);
          }
#line 43326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1806: /* $@155: %empty  */
#line 11963 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            push_table_function_arg_context(Lex, thd->mem_root);
            //TODO: introduce IN_TABLE_FUNC_ARGUMENT?
            Select->parsing_place= IN_ON;
          }
#line 43336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1807: /* $@156: %empty  */
#line 11969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_function_json_table *jt=
              new (thd->mem_root) Table_function_json_table((yyvsp[-1].item));
            if (unlikely(!jt))
              MYSQL_YYABORT;
            /* See comment for class Table_function_json_table: */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->json_table= jt;

            Select->parsing_place= NO_MATTER;
            jt->set_name_resolution_context(Lex->pop_context());
          }
#line 43353 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1808: /* table_function: JSON_TABLE_SYM '(' $@155 expr ',' $@156 json_text_literal json_table_columns_clause ')' opt_table_alias_clause  */
#line 11982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            if (unlikely((yyvsp[0].lex_str_ptr) == NULL))
            {
              /* Alias is not optional. */
              my_error(ER_JSON_TABLE_ALIAS_REQUIRED, MYF(0));
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->json_table->m_nested_path.set_path(thd, (yyvsp[-3].lex_string_with_metadata))))
              MYSQL_YYABORT;
            if (!((yyval.table_list)= sel->add_table_to_list(thd,
                           new (thd->mem_root) Table_ident(thd, &any_db,
                                                           (yyvsp[0].lex_str_ptr), TRUE),
                           NULL,
                           TL_OPTION_TABLE_FUNCTION,
                           YYPS->m_lock_type,
                           YYPS->m_mdl_type,
                           0,0,0)))
              MYSQL_YYABORT;
            (yyval.table_list)->table_function= Lex->json_table;
            Lex->json_table= 0;
            status_var_increment(thd->status_var.feature_json);
          }
#line 43381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1809: /* esc_table_ref: table_ref  */
#line 12015 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 43387 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1810: /* esc_table_ref: '{' ident table_ref '}'  */
#line 12016 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 43393 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1811: /* derived_table_list: esc_table_ref  */
#line 12023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 43402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1812: /* derived_table_list: derived_table_list ',' esc_table_ref  */
#line 12028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 43411 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1813: /* join_table: table_ref normal_join table_ref  */
#line 12042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 43421 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1814: /* $@157: %empty  */
#line 12049 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 43435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1815: /* join_table: table_ref normal_join table_ref ON $@157 expr  */
#line 12059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 43446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1816: /* $@158: %empty  */
#line 12067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 43456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1817: /* join_table: table_ref normal_join table_ref USING $@158 '(' using_list ')'  */
#line 12073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 43466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1818: /* join_table: table_ref NATURAL inner_join table_factor  */
#line 12079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 43478 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1819: /* $@159: %empty  */
#line 12090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 43492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1820: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_ref ON $@159 search_condition  */
#line 12100 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 43504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1821: /* $@160: %empty  */
#line 12108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 43514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1822: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_factor $@160 USING '(' using_list ')'  */
#line 12114 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 43524 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1823: /* join_table: table_ref NATURAL LEFT opt_outer JOIN_SYM table_factor  */
#line 12120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 43537 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1824: /* $@161: %empty  */
#line 12132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 43551 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1825: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_ref ON $@161 expr  */
#line 12142 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 43564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1826: /* $@162: %empty  */
#line 12151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 43574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1827: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_factor $@162 USING '(' using_list ')'  */
#line 12157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 43585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1828: /* join_table: table_ref NATURAL RIGHT opt_outer JOIN_SYM table_factor  */
#line 12164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 43599 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1829: /* inner_join: JOIN_SYM  */
#line 12177 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 43605 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1830: /* inner_join: INNER_SYM JOIN_SYM  */
#line 12178 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 43611 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1831: /* inner_join: STRAIGHT_JOIN  */
#line 12179 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 1; }
#line 43617 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1832: /* normal_join: inner_join  */
#line 12183 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = (yyvsp[0].num); }
#line 43623 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1833: /* normal_join: CROSS JOIN_SYM  */
#line 12184 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 43629 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1834: /* opt_use_partition: %empty  */
#line 12192 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.string_list)= 0;}
#line 43635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1836: /* use_partition: PARTITION_SYM '(' using_list ')' have_partitioning  */
#line 12198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 43645 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1837: /* table_factor: table_primary_ident_opt_parens  */
#line 12206 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43651 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1838: /* table_factor: table_primary_derived_opt_parens  */
#line 12207 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43657 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1839: /* table_factor: join_table_parens  */
#line 12209 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 43666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1840: /* table_factor: table_reference_list_parens  */
#line 12213 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1841: /* table_factor: table_function  */
#line 12214 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1842: /* table_primary_ident_opt_parens: table_primary_ident  */
#line 12218 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1843: /* table_primary_ident_opt_parens: '(' table_primary_ident_opt_parens ')'  */
#line 12219 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 43690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1844: /* table_primary_derived_opt_parens: table_primary_derived  */
#line 12223 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.table_list)= (yyvsp[0].table_list); }
#line 43696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1845: /* table_primary_derived_opt_parens: '(' table_primary_derived_opt_parens ')'  */
#line 12224 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 43702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1846: /* table_reference_list_parens: '(' table_reference_list_parens ')'  */
#line 12228 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 43708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1847: /* table_reference_list_parens: '(' nested_table_reference_list ')'  */
#line 12230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 43717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1848: /* nested_table_reference_list: table_ref ',' table_ref  */
#line 12238 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 43729 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1849: /* nested_table_reference_list: nested_table_reference_list ',' table_ref  */
#line 12246 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 43738 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1850: /* join_table_parens: '(' join_table_parens ')'  */
#line 12253 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 43744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1851: /* join_table_parens: '(' join_table ')'  */
#line 12255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 43757 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1852: /* table_primary_ident: table_ident opt_use_partition opt_for_system_time_clause opt_table_alias_clause opt_key_definition  */
#line 12269 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 43773 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1854: /* table_primary_derived: subquery opt_for_system_time_clause table_alias_clause derived_column_list  */
#line 12291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-3].select_lex)->master_unit(), (yyvsp[-2].num), (yyvsp[-1].lex_str_ptr), (yyvsp[0].ident_sys_list))))
              MYSQL_YYABORT;
          }
#line 43782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1855: /* table_primary_derived: subquery opt_for_system_time_clause  */
#line 12298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING alias;
            if ((yyvsp[-1].select_lex)->make_unique_derived_name(thd, &alias) ||
                !((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-1].select_lex)->master_unit(), (yyvsp[0].num), &alias)))
              MYSQL_YYABORT;
          }
#line 43793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1856: /* opt_outer: %empty  */
#line 12308 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 43799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1857: /* opt_outer: OUTER  */
#line 12309 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 43805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1858: /* index_hint_clause: %empty  */
#line 12314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (thd->variables.old_behavior & OLD_MODE_IGNORE_INDEX_ONLY_FOR_JOIN) ?
                INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 43814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1859: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 12318 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 43820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1860: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 12319 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 43826 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1861: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 12320 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 43832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1862: /* index_hint_type: FORCE_SYM  */
#line 12324 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 43838 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1863: /* index_hint_type: IGNORE_SYM  */
#line 12325 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 43844 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1864: /* $@163: %empty  */
#line 12330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 43852 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1866: /* $@164: %empty  */
#line 12335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 43860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1871: /* $@165: %empty  */
#line 12348 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->alloc_index_hints(thd); }
#line 43866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1873: /* $@166: %empty  */
#line 12352 "/home/buildbot/git/sql/sql_yacc.yy"
          {  Select->clear_index_hints(); }
#line 43872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1875: /* opt_key_usage_list: %empty  */
#line 12357 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Select->add_index_hint(thd, NULL, 0); }
#line 43878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1876: /* opt_key_usage_list: key_usage_list  */
#line 12358 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 43884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1877: /* key_usage_element: ident  */
#line 12363 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 43890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1878: /* key_usage_element: PRIMARY_SYM  */
#line 12365 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 43896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1881: /* using_list: ident  */
#line 12375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 43911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1882: /* using_list: using_list ',' ident  */
#line 12386 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 43926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1883: /* interval: interval_time_stamp  */
#line 12399 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 43932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1884: /* interval: DAY_HOUR_SYM  */
#line 12400 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 43938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1885: /* interval: DAY_MICROSECOND_SYM  */
#line 12401 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 43944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1886: /* interval: DAY_MINUTE_SYM  */
#line 12402 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 43950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1887: /* interval: DAY_SECOND_SYM  */
#line 12403 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 43956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1888: /* interval: HOUR_MICROSECOND_SYM  */
#line 12404 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 43962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1889: /* interval: HOUR_MINUTE_SYM  */
#line 12405 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 43968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1890: /* interval: HOUR_SECOND_SYM  */
#line 12406 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 43974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1891: /* interval: MINUTE_MICROSECOND_SYM  */
#line 12407 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 43980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1892: /* interval: MINUTE_SECOND_SYM  */
#line 12408 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 43986 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1893: /* interval: SECOND_MICROSECOND_SYM  */
#line 12409 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 43992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1894: /* interval: YEAR_MONTH_SYM  */
#line 12410 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 43998 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1895: /* interval_time_stamp: DAY_SYM  */
#line 12414 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 44004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1896: /* interval_time_stamp: WEEK_SYM  */
#line 12415 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 44010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1897: /* interval_time_stamp: HOUR_SYM  */
#line 12416 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 44016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1898: /* interval_time_stamp: MINUTE_SYM  */
#line 12417 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 44022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1899: /* interval_time_stamp: MONTH_SYM  */
#line 12418 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 44028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1900: /* interval_time_stamp: QUARTER_SYM  */
#line 12419 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 44034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1901: /* interval_time_stamp: SECOND_SYM  */
#line 12420 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 44040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1902: /* interval_time_stamp: MICROSECOND_SYM  */
#line 12421 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 44046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1903: /* interval_time_stamp: YEAR_SYM  */
#line 12422 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 44052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1904: /* date_time_type: DATE_SYM  */
#line 12426 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 44058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1905: /* date_time_type: TIME_SYM  */
#line 12427 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 44064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1906: /* date_time_type: DATETIME  */
#line 12428 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 44070 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1907: /* date_time_type: TIMESTAMP  */
#line 12429 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 44076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1911: /* opt_table_alias_clause: %empty  */
#line 12439 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str_ptr)=0; }
#line 44082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1912: /* opt_table_alias_clause: table_alias_clause  */
#line 12440 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 44088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1913: /* table_alias_clause: table_alias ident_table_alias  */
#line 12445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 44098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1916: /* opt_where_clause: %empty  */
#line 12458 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->where= 0; }
#line 44104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1917: /* $@167: %empty  */
#line 12460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_WHERE;
          }
#line 44112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1918: /* opt_where_clause: WHERE $@167 search_condition  */
#line 12464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 44124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1920: /* $@168: %empty  */
#line 12476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_HAVING;
          }
#line 44132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1921: /* opt_having_clause: HAVING $@168 search_condition  */
#line 12480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 44144 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1924: /* group_list: group_list ',' order_ident order_dir  */
#line 12500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 44153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1925: /* group_list: order_ident order_dir  */
#line 12505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 44162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1926: /* olap_opt: %empty  */
#line 12512 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44168 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1927: /* olap_opt: WITH_CUBE_SYM  */
#line 12514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 44189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1928: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 44208 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1929: /* opt_window_clause: %empty  */
#line 12553 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1930: /* opt_window_clause: WINDOW_SYM window_def_list  */
#line 12556 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1933: /* window_def: window_name AS window_spec  */
#line 12566 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 44233 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1934: /* $@169: %empty  */
#line 12578 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->prepare_add_window_spec(thd); }
#line 44239 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1935: /* window_spec: '(' $@169 opt_window_ref opt_window_partition_clause opt_window_order_clause opt_window_frame_clause ')'  */
#line 12582 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 44245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1936: /* opt_window_ref: %empty  */
#line 12586 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44251 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1937: /* opt_window_ref: ident  */
#line 12588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 44261 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1938: /* opt_window_partition_clause: %empty  */
#line 12596 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 44267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1940: /* opt_window_order_clause: %empty  */
#line 12601 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 44273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1941: /* opt_window_order_clause: ORDER_SYM BY order_list  */
#line 12602 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Select->order_list= *((yyvsp[0].select_order)); }
#line 44279 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1942: /* opt_window_frame_clause: %empty  */
#line 12606 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1943: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 12608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 44300 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1944: /* window_frame_units: ROWS_SYM  */
#line 12621 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 44306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1945: /* window_frame_units: RANGE_SYM  */
#line 12622 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 44312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1946: /* window_frame_extent: window_frame_start  */
#line 12627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 44326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1947: /* window_frame_extent: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 12637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 44336 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1948: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 12646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 44347 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1949: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 12653 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 44358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1950: /* window_frame_start: literal PRECEDING_SYM  */
#line 12660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 44369 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1951: /* window_frame_bound: window_frame_start  */
#line 12669 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 44375 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1952: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 12671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 44386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1953: /* window_frame_bound: literal FOLLOWING_SYM  */
#line 12678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 44397 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1954: /* opt_window_frame_exclusion: %empty  */
#line 12687 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 44403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1955: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 12689 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 44409 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1956: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 12691 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 44415 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1957: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 12693 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 44421 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1958: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_MARIADB_SYM  */
#line 12695 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 44427 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1959: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_ORACLE_SYM  */
#line 12697 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 44433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1963: /* alter_order_item: simple_ident_nospvar order_dir  */
#line 12715 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 44443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1964: /* opt_order_clause: %empty  */
#line 12728 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= NULL; }
#line 44449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1965: /* opt_order_clause: order_clause  */
#line 12730 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= (yyvsp[0].select_order); }
#line 44455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1966: /* $@170: %empty  */
#line 12735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::ORDER_CLAUSE;
          }
#line 44463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1967: /* order_clause: ORDER_SYM BY $@170 order_list  */
#line 12739 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 44471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1968: /* order_list: order_list ',' order_ident order_dir  */
#line 12746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 44481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1969: /* order_list: order_ident order_dir  */
#line 12752 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 44491 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1970: /* order_dir: %empty  */
#line 12760 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 1; }
#line 44497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1971: /* order_dir: ASC  */
#line 12761 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 1; }
#line 44503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1972: /* order_dir: DESC  */
#line 12762 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 0; }
#line 44509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1973: /* opt_limit_clause: %empty  */
#line 12768 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit).clear(); }
#line 44515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1974: /* opt_limit_clause: limit_clause  */
#line 12770 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 44521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1975: /* limit_clause: LIMIT limit_options  */
#line 12775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 44532 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1976: /* limit_clause: LIMIT limit_options ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 44541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1977: /* limit_clause: LIMIT ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).clear();
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 44550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1978: /* limit_clause: fetch_first_clause  */
#line 12793 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit ||
                !(yyval.select_limit).select_limit->basic_const_item() ||
                 (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 44562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1979: /* fetch_first_clause: FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 44576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1980: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= (yyvsp[-5].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 44590 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1981: /* fetch_first_clause: FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12825 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 44601 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1982: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[-6].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 44612 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1983: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows  */
#line 12840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= (yyvsp[-1].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 44623 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1988: /* only_or_with_ties: ONLY_SYM  */
#line 12859 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 0; }
#line 44629 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1989: /* only_or_with_ties: WITH TIES_SYM  */
#line 12860 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 44635 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1990: /* opt_global_limit_clause: opt_limit_clause  */
#line 12866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 44643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1991: /* limit_options: limit_option  */
#line 12873 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= NULL;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 44654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1992: /* limit_options: limit_option ',' limit_option  */
#line 12880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 44665 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1993: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 12887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 44676 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1994: /* limit_option: ident_cli  */
#line 12897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44685 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1995: /* limit_option: ident_cli '.' ident_cli  */
#line 12902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 44694 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1996: /* limit_option: param_marker  */
#line 12907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 44702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1997: /* limit_option: ULONGLONG_NUM  */
#line 12911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44712 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1998: /* limit_option: LONG_NUM  */
#line 12917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 1999: /* limit_option: NUM  */
#line 12923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 44732 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2000: /* limit_rows_option: limit_option  */
#line 12932 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 44740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2001: /* delete_limit_clause: %empty  */
#line 12939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->limit_params.select_limit= 0;
          }
#line 44749 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2002: /* delete_limit_clause: LIMIT limit_option  */
#line 12944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->limit_params.select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->limit_params.explicit_limit= 1;
          }
#line 44760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2003: /* delete_limit_clause: LIMIT ROWS_SYM EXAMINED_SYM  */
#line 12950 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { thd->parse_error(); MYSQL_YYABORT; }
#line 44766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2004: /* delete_limit_clause: LIMIT limit_option ROWS_SYM EXAMINED_SYM  */
#line 12951 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { thd->parse_error(); MYSQL_YYABORT; }
#line 44772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2005: /* order_limit_lock: order_or_limit  */
#line 12956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 44781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2006: /* order_limit_lock: order_or_limit select_lock_type  */
#line 12961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 44790 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2007: /* order_limit_lock: select_lock_type  */
#line 12966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.clear();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 44803 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2008: /* opt_order_limit_lock: %empty  */
#line 12978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 44812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2009: /* opt_order_limit_lock: order_limit_lock  */
#line 12982 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 44818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2012: /* opt_procedure_or_into: %empty  */
#line 12995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock).empty();
          }
#line 44826 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2013: /* opt_procedure_or_into: procedure_clause opt_select_lock_type  */
#line 12999 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 44834 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2014: /* opt_procedure_or_into: into opt_select_lock_type  */
#line 13003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 44843 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2015: /* opt_order_or_limit: %empty  */
#line 13011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= NULL;
          }
#line 44851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2016: /* opt_order_or_limit: order_or_limit  */
#line 13016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].order_limit_lock)->lock.empty();
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
          }
#line 44860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2017: /* order_or_limit: order_clause opt_limit_clause  */
#line 13024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 44872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2018: /* order_or_limit: limit_clause  */
#line 13032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 44884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2021: /* int_num: opt_plus NUM  */
#line 13048 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2022: /* int_num: '-' NUM  */
#line 13049 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2023: /* ulong_num: opt_plus NUM  */
#line 13053 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2024: /* ulong_num: HEX_NUM  */
#line 13054 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= strtoul((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 44908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2025: /* ulong_num: opt_plus LONG_NUM  */
#line 13055 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2026: /* ulong_num: opt_plus ULONGLONG_NUM  */
#line 13056 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2027: /* ulong_num: opt_plus DECIMAL_NUM  */
#line 13057 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2028: /* ulong_num: opt_plus FLOAT_NUM  */
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2029: /* real_ulong_num: NUM  */
#line 13062 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2030: /* real_ulong_num: HEX_NUM  */
#line 13063 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 44944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2031: /* real_ulong_num: LONG_NUM  */
#line 13064 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2032: /* real_ulong_num: ULONGLONG_NUM  */
#line 13065 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 44956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2033: /* real_ulong_num: dec_num_error  */
#line 13066 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 44962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2034: /* sequence_value_num: opt_plus NUM  */
#line 13075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 44971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2035: /* sequence_value_num: opt_plus LONG_NUM  */
#line 13080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 44980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2036: /* sequence_value_num: '-' NUM  */
#line 13085 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 44989 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2037: /* sequence_value_num: '-' LONG_NUM  */
#line 13090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 44998 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2038: /* sequence_value_num: '-' ULONGLONG_NUM  */
#line 13095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            const ulonglong abs= my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
            if (abs == 1 + (ulonglong) LONGLONG_MAX)
              (yyval.longlong_number)= LONGLONG_MIN;
            else
              thd->parse_error(ER_DATA_OUT_OF_RANGE);
          }
#line 45011 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2039: /* sequence_value_hybrid_num: opt_plus NUM  */
#line 13111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2040: /* sequence_value_hybrid_num: opt_plus LONG_NUM  */
#line 13117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2041: /* sequence_value_hybrid_num: opt_plus ULONGLONG_NUM  */
#line 13123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                true);
          }
#line 45041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2042: /* sequence_value_hybrid_num: '-' NUM  */
#line 13129 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45051 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2043: /* sequence_value_hybrid_num: '-' LONG_NUM  */
#line 13135 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2044: /* sequence_value_hybrid_num: '-' ULONGLONG_NUM  */
#line 13141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            const ulonglong abs= my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
            if (abs == 1 + (ulonglong) LONGLONG_MAX)
              (yyval.longlong_hybrid_number)= Longlong_hybrid(LONGLONG_MIN, false);
            else
              thd->parse_error(ER_DATA_OUT_OF_RANGE);
          }
#line 45074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2045: /* sequence_truncated_value_hybrid_num: opt_plus NUM  */
#line 13157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45084 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2046: /* sequence_truncated_value_hybrid_num: opt_plus LONG_NUM  */
#line 13163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2047: /* sequence_truncated_value_hybrid_num: opt_plus ULONGLONG_NUM  */
#line 13169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                true);
          }
#line 45104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2048: /* sequence_truncated_value_hybrid_num: opt_plus DECIMAL_NUM  */
#line 13174 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.longlong_hybrid_number)= Longlong_hybrid(ULONGLONG_MAX, true); }
#line 45110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2049: /* sequence_truncated_value_hybrid_num: '-' NUM  */
#line 13176 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2050: /* sequence_truncated_value_hybrid_num: '-' LONG_NUM  */
#line 13182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2051: /* sequence_truncated_value_hybrid_num: '-' ULONGLONG_NUM  */
#line 13187 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.longlong_hybrid_number)= Longlong_hybrid(LONGLONG_MIN, false); }
#line 45136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2052: /* sequence_truncated_value_hybrid_num: '-' DECIMAL_NUM  */
#line 13188 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.longlong_hybrid_number)= Longlong_hybrid(LONGLONG_MIN, false); }
#line 45142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2053: /* ulonglong_num: opt_plus NUM  */
#line 13192 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2054: /* ulonglong_num: opt_plus ULONGLONG_NUM  */
#line 13193 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2055: /* ulonglong_num: opt_plus LONG_NUM  */
#line 13194 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2056: /* ulonglong_num: opt_plus DECIMAL_NUM  */
#line 13195 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45166 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2057: /* ulonglong_num: opt_plus FLOAT_NUM  */
#line 13196 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45172 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2058: /* real_ulonglong_num: NUM  */
#line 13200 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45178 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2059: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 13201 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2060: /* real_ulonglong_num: HEX_NUM  */
#line 13202 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 45190 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2061: /* real_ulonglong_num: LONG_NUM  */
#line 13203 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45196 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2062: /* real_ulonglong_num: dec_num_error  */
#line 13204 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 45202 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2063: /* dec_num_error: dec_num  */
#line 13209 "/home/buildbot/git/sql/sql_yacc.yy"
          { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 45208 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2066: /* choice: ulong_num  */
#line 13218 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 45214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2067: /* choice: DEFAULT  */
#line 13219 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 45220 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2068: /* bool: ulong_num  */
#line 13223 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 45226 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2069: /* bool: TRUE_SYM  */
#line 13224 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1; }
#line 45232 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2070: /* bool: FALSE_SYM  */
#line 13225 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 45238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2071: /* $@171: %empty  */
#line 13230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           (yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 45266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2072: /* procedure_clause: PROCEDURE_SYM ident $@171 '(' procedure_list ')'  */
#line 13254 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 45275 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2073: /* procedure_list: %empty  */
#line 13261 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2074: /* procedure_list: procedure_list2  */
#line 13262 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 45287 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2077: /* procedure_item: remember_name expr remember_end  */
#line 13272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 45298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2078: /* $@172: %empty  */
#line 13281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 45310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2079: /* select_var_list_init: $@172 select_var_list  */
#line 13289 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2081: /* select_var_list: select_var_ident  */
#line 13294 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 45322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2082: /* select_var_ident: select_outvar  */
#line 13298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 45343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2083: /* select_outvar: '@' ident_or_text  */
#line 13318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 45357 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2084: /* select_outvar: ident_or_text  */
#line 13328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 45366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2085: /* select_outvar: ident '.' ident  */
#line 13333 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 45375 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2086: /* into: INTO into_destination  */
#line 13341 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45381 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2087: /* $@173: %empty  */
#line 13346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 45397 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2088: /* $@174: %empty  */
#line 13358 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 45403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2090: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 13361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 45422 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2091: /* into_destination: select_var_list_init  */
#line 13376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            status_var_increment(thd->status_var.feature_into_variable);
          }
#line 45431 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2092: /* $@175: %empty  */
#line 13388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 45443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2093: /* do: DO_SYM $@175 expr_list  */
#line 13396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 45454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2094: /* $@176: %empty  */
#line 13410 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 45465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2095: /* drop: DROP opt_temporary table_or_tables opt_if_exists $@176 table_list opt_lock_wait_timeout opt_restrict  */
#line 13417 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2096: /* $@177: %empty  */
#line 13419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 45480 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2097: /* drop: DROP INDEX_SYM $@177 opt_if_exists_table_element ident ON table_ident opt_lock_wait_timeout  */
#line 13424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys), (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 45502 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2098: /* drop: DROP DATABASE opt_if_exists ident  */
#line 13442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 45512 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2099: /* drop: DROP USER_SYM opt_if_exists clear_privileges user_list  */
#line 13448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 45520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2100: /* drop: DROP ROLE_SYM opt_if_exists clear_privileges role_list  */
#line 13452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 45528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2101: /* $@178: %empty  */
#line 13456 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 45539 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2102: /* drop: DROP VIEW_SYM opt_if_exists $@178 table_list opt_restrict  */
#line 13463 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45545 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2103: /* drop: DROP EVENT_SYM opt_if_exists sp_name  */
#line 13465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 45554 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2104: /* drop: DROP TRIGGER_SYM opt_if_exists sp_name  */
#line 13470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 45564 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2105: /* drop: DROP SERVER_SYM opt_if_exists ident_or_text  */
#line 13476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 45573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2106: /* $@179: %empty  */
#line 13482 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 45585 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2107: /* drop: DROP opt_temporary SEQUENCE_SYM opt_if_exists $@179 table_list  */
#line 13490 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45591 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2111: /* table_name: table_ident  */
#line 13501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 45604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2112: /* table_name_with_opt_use_partition: table_ident opt_use_partition  */
#line 13513 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 45618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2115: /* table_alias_ref: table_ident_opt_wild  */
#line 13531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 45632 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2116: /* opt_if_exists_table_element: %empty  */
#line 13544 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 45641 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2117: /* opt_if_exists_table_element: IF_SYM EXISTS  */
#line 13549 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 45650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2118: /* opt_if_exists: %empty  */
#line 13557 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 45658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2119: /* opt_if_exists: IF_SYM EXISTS  */
#line 13561 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 45666 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2120: /* opt_temporary: %empty  */
#line 13567 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 45672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2121: /* opt_temporary: TEMPORARY  */
#line 13568 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 45678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2122: /* $@180: %empty  */
#line 13576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_INSERT;
            Lex->duplicates= DUP_ERROR;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 45689 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2123: /* $@181: %empty  */
#line 13583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-3].lock_type), true, false);
          }
#line 45697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2124: /* insert: INSERT $@180 insert_start insert_lock_option opt_ignore opt_into insert_table $@181 insert_field_spec opt_insert_update opt_returning stmt_end  */
#line 13588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 45706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2125: /* $@182: %empty  */
#line 13596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REPLACE;
            Lex->duplicates= DUP_REPLACE;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 45717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2126: /* $@183: %empty  */
#line 13603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true, false);
          }
#line 45725 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2127: /* replace: REPLACE $@182 insert_start replace_lock_option opt_into insert_table $@183 insert_field_spec opt_returning stmt_end  */
#line 13608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 45734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2128: /* insert_start: %empty  */
#line 13614 "/home/buildbot/git/sql/sql_yacc.yy"
              {
                if (Lex->main_select_push())
                  MYSQL_YYABORT;
                Lex->init_select();
                Lex->inc_select_stack_outer_barrier();
                Lex->current_select->parsing_place= BEFORE_OPT_LIST;
              }
#line 45746 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2129: /* stmt_end: %empty  */
#line 13623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
              Lex->pop_select(); //main select
              if (Lex->check_main_unit_semantics())
                MYSQL_YYABORT;
            }
#line 45756 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2130: /* insert_lock_option: %empty  */
#line 13632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 45769 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2132: /* insert_lock_option: HIGH_PRIORITY  */
#line 13641 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 45775 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2133: /* replace_lock_option: %empty  */
#line 13645 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 45781 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2135: /* insert_replace_option: LOW_PRIORITY  */
#line 13650 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 45787 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2136: /* insert_replace_option: DELAYED_SYM  */
#line 13652 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 45797 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2139: /* $@184: %empty  */
#line 13662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 45805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2140: /* insert_table: $@184 table_name_with_opt_use_partition  */
#line 13666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 45816 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2141: /* insert_field_spec: insert_values  */
#line 13675 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 45822 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2142: /* insert_field_spec: insert_field_list insert_values  */
#line 13676 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 45828 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2143: /* $@185: %empty  */
#line 13678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 45841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2145: /* insert_field_list: LEFT_PAREN_ALT opt_fields ')'  */
#line 13691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 45849 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2148: /* fields: fields ',' insert_ident  */
#line 13703 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 45855 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2149: /* fields: insert_ident  */
#line 13704 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 45861 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2150: /* insert_values: create_select_query_expression  */
#line 13710 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 45867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2155: /* ident_eq_value: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2156: /* equal: '='  */
#line 13734 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 45884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2157: /* equal: SET_VAR  */
#line 13735 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 45890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2158: /* opt_equal: %empty  */
#line 13739 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2159: /* opt_equal: equal  */
#line 13740 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 45902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2160: /* opt_with: opt_equal  */
#line 13744 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 45908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2161: /* opt_with: WITH  */
#line 13745 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 45914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2162: /* opt_by: opt_equal  */
#line 13749 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 45920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2163: /* opt_by: BY  */
#line 13750 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 45926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2164: /* $@186: %empty  */
#line 13755 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45935 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2165: /* no_braces: '(' $@186 opt_values ')'  */
#line 13760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2166: /* $@187: %empty  */
#line 13771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 45956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2167: /* no_braces_with_names: '(' $@187 opt_values_with_names ')'  */
#line 13776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2168: /* opt_values: %empty  */
#line 13786 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2170: /* opt_values_with_names: %empty  */
#line 13791 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2172: /* values: values ',' expr_or_ignore_or_default  */
#line 13797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45989 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2173: /* values: expr_or_ignore_or_default  */
#line 13802 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 45998 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2174: /* values_with_names: values_with_names ',' remember_name expr_or_ignore_or_default remember_end  */
#line 13810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 46010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2175: /* values_with_names: remember_name expr_or_ignore_or_default remember_end  */
#line 13818 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 46022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2176: /* expr_or_ignore: expr  */
#line 13828 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)= (yyvsp[0].item);}
#line 46028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2177: /* expr_or_ignore: IGNORE_SYM  */
#line 13830 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2178: /* expr_or_ignore_or_default: expr_or_ignore  */
#line 13838 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item);}
#line 46044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2179: /* expr_or_ignore_or_default: DEFAULT  */
#line 13840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 46054 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2181: /* $@188: %empty  */
#line 13849 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->duplicates= DUP_UPDATE; }
#line 46060 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2182: /* $@189: %empty  */
#line 13851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 46068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2183: /* opt_insert_update: ON DUPLICATE_SYM $@188 KEY_SYM UPDATE_SYM $@189 insert_update_list  */
#line 13855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= NO_MATTER;
          }
#line 46076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2184: /* update_table_list: table_ident opt_use_partition for_portion_of_time_clause opt_table_alias_clause opt_key_definition  */
#line 13863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 46091 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2185: /* update_table_list: join_table_list  */
#line 13873 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 46097 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2186: /* $@190: %empty  */
#line 13880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 46110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2187: /* $@191: %empty  */
#line 13890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_multiupdate= false;
            LEX *lex= Lex;
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
            {
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
              is_multiupdate= true;
            }
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_update(is_multiupdate)))
              MYSQL_YYABORT;
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible
              later while processing the statement.
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1, false);
          }
#line 46141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2188: /* $@192: %empty  */
#line 13917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
          }
#line 46150 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2189: /* update: UPDATE_SYM $@190 opt_low_priority opt_ignore update_table_list SET update_list $@191 opt_where_clause opt_order_clause delete_limit_clause $@192 stmt_end  */
#line 13920 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 46156 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2192: /* update_elem: simple_ident_nospvar equal DEFAULT  */
#line 13930 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 46167 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2193: /* update_elem: simple_ident_nospvar equal expr_or_ignore  */
#line 13937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 46176 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2196: /* insert_update_elem: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13950 "/home/buildbot/git/sql/sql_yacc.yy"
          {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2197: /* opt_low_priority: %empty  */
#line 13959 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 46193 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2198: /* opt_low_priority: LOW_PRIORITY  */
#line 13960 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 46199 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2199: /* $@193: %empty  */
#line 13967 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_delete(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 46214 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2200: /* delete: DELETE_SYM $@193 delete_part2  */
#line 13978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 46223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2201: /* opt_delete_system_time: %empty  */
#line 13986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 46231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2202: /* opt_delete_system_time: BEFORE_SYM SYSTEM_TIME_SYM history_point  */
#line 13990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 46239 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2203: /* delete_part2: opt_delete_options single_multi  */
#line 13996 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 46245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2204: /* $@194: %empty  */
#line 13998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->last_table()->vers_conditions= lex->vers_conditions;
            lex->sql_command= SQLCOM_DELETE;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(false)))
              MYSQL_YYABORT;
            if (lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 46260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2205: /* delete_part2: HISTORY_SYM delete_single_table opt_delete_system_time $@194 stmt_end  */
#line 14009 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46266 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2206: /* delete_single_table: FROM table_ident opt_table_alias_clause opt_key_definition opt_use_partition  */
#line 14014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-3].table), (yyvsp[-2].lex_str_ptr), TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           0)))
              MYSQL_YYABORT;
            Select->table_list.save_and_clear(&Lex->auxiliary_table_list);
            /* Save the number of auxiliary tables */
            Lex->table_count_update= 1;

            Lex->query_tables= 0;
            Lex->query_tables_last= &Lex->query_tables;
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-3].table), (yyvsp[-2].lex_str_ptr), TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           Select->pop_index_hints(),
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            Lex->auxiliary_table_list.first->correspondent_table=
              Lex->query_tables;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 46297 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2207: /* delete_single_table_for_period: delete_single_table opt_for_portion_of_time_clause  */
#line 14044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].num))
              Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 46306 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2208: /* $@195: %empty  */
#line 14056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            lex->sql_command= SQLCOM_DELETE;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(false)))
              MYSQL_YYABORT;
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 46322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2209: /* single_multi: delete_single_table_for_period opt_where_clause opt_order_clause delete_limit_clause opt_returning $@195 stmt_end  */
#line 14067 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 46328 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2210: /* $@196: %empty  */
#line 14069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE_MULTI;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(true)))
              MYSQL_YYABORT;
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 46343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2211: /* $@197: %empty  */
#line 14080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
            {
              DBUG_ASSERT(Lex->select_stack_head() == Select);
              (yyvsp[0].order_limit_lock)->set_to(Lex->select_stack_head());
            }
          }
#line 46357 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2212: /* single_multi: table_alias_ref_list $@196 FROM join_table_list opt_where_clause opt_order_or_limit $@197 stmt_end  */
#line 14088 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 46363 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2213: /* $@198: %empty  */
#line 14090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE_MULTI;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(true)))
              MYSQL_YYABORT;
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 46378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2214: /* $@199: %empty  */
#line 14101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
            {
              DBUG_ASSERT(Lex->select_stack_head() == Select);
              (yyvsp[0].order_limit_lock)->set_to(Lex->select_stack_head());
            }
          }
#line 46392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2215: /* single_multi: FROM table_alias_ref_list $@198 USING join_table_list opt_where_clause opt_order_or_limit $@199 stmt_end  */
#line 14109 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 46398 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2216: /* opt_returning: %empty  */
#line 14114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
          }
#line 46406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2217: /* $@200: %empty  */
#line 14118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
            /*
              When parsing_place is IN_RETURNING, we push select items to
              item_list of builtin_select instead of current_select.
              But set parsing_place of current_select to true.

              Because parsing_place for builtin_select will be IN_RETURNING,
              regardless there is SELECT in RETURNING. Example, if
              there is RETURNING (SELECT...), then when we parse
              SELECT inside RETURNING, builtin_select->parsing_place
              will still be true. So the select items of SELECT inside
              RETURNING will be added to item_list of builtin_select which
              is incorrect. We want to prevent this from happening.
              Since for every new select, a new SELECT_LEX
              object is created and pushed to select stack, current_select
              will point to SELECT inside RETURNING, and also has
              parsing_place not set to IN_RETURNING by default.
              So items are correctly added to item_list of SELECT inside
              RETURNING instead of builtin_select.
            */

            thd->lex->current_select->parsing_place= IN_RETURNING;
            thd->lex->push_context(&thd->lex->returning()->context);
          }
#line 46436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2218: /* opt_returning: RETURNING_SYM $@200 select_item_list  */
#line 14144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->pop_context();
            thd->lex->current_select->parsing_place= NO_MATTER;
          }
#line 46445 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2219: /* opt_wild: %empty  */
#line 14151 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46451 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2220: /* opt_wild: '.' '*'  */
#line 14152 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 46457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2221: /* opt_delete_options: %empty  */
#line 14156 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2222: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 14157 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 46469 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2223: /* opt_delete_option: QUICK  */
#line 14161 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->options|= OPTION_QUICK; }
#line 46475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2224: /* opt_delete_option: LOW_PRIORITY  */
#line 14162 "/home/buildbot/git/sql/sql_yacc.yy"
                       { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 46481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2225: /* opt_delete_option: IGNORE_SYM  */
#line 14163 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->ignore= 1; }
#line 46487 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2226: /* $@201: %empty  */
#line 14168 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 46502 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2227: /* $@202: %empty  */
#line 14179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 46514 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2228: /* truncate: TRUNCATE_SYM $@201 opt_table_sym table_name opt_lock_wait_timeout $@202 opt_truncate_table_storage_clause  */
#line 14186 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { }
#line 46520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2235: /* profile_def: CPU_SYM  */
#line 14204 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 46528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2236: /* profile_def: MEMORY_SYM  */
#line 14208 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 46536 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2237: /* profile_def: BLOCK_SYM IO_SYM  */
#line 14212 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 46544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2238: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 14216 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 46552 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2239: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 14220 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 46560 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2240: /* profile_def: IPC_SYM  */
#line 14224 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 46568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2241: /* profile_def: SWAPS_SYM  */
#line 14228 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 46576 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2242: /* profile_def: SOURCE_SYM  */
#line 14232 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 46584 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2243: /* profile_def: ALL  */
#line 14236 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 46592 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2244: /* opt_profile_args: %empty  */
#line 14243 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
#line 46600 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2245: /* opt_profile_args: FOR_SYM QUERY_SYM NUM  */
#line 14247 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 46608 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2246: /* $@203: %empty  */
#line 14256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 46623 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2247: /* show: SHOW $@203 show_param  */
#line 14267 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 46632 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2248: /* show_param: DATABASES wild_and_where  */
#line 14275 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 46643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2249: /* show_param: opt_full TABLES opt_db wild_and_where  */
#line 14282 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 46655 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2250: /* show_param: opt_full TRIGGERS_SYM opt_db wild_and_where  */
#line 14290 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 46667 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2251: /* show_param: EVENTS_SYM opt_db wild_and_where  */
#line 14298 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 46679 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2252: /* show_param: TABLE_SYM STATUS_SYM opt_db wild_and_where  */
#line 14306 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 46691 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2253: /* show_param: OPEN_SYM TABLES opt_db wild_and_where  */
#line 14314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 46703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2254: /* show_param: PLUGINS_SYM  */
#line 14322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 46714 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2255: /* show_param: PLUGINS_SYM SONAME_SYM TEXT_STRING_sys  */
#line 14329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 46725 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2256: /* show_param: PLUGINS_SYM SONAME_SYM wild_and_where  */
#line 14336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 46735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2257: /* show_param: ENGINE_SYM known_storage_engines show_engine_param  */
#line 14342 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 46741 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2258: /* show_param: ENGINE_SYM ALL show_engine_param  */
#line 14344 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= NULL; }
#line 46747 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2259: /* show_param: opt_full COLUMNS from_or_in table_ident opt_db wild_and_where  */
#line 14346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 46760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2260: /* show_param: master_or_binary LOGS_SYM  */
#line 14355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 46768 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2261: /* show_param: SLAVE HOSTS_SYM  */
#line 14359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 46776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2262: /* $@204: %empty  */
#line 14363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 46785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2264: /* $@205: %empty  */
#line 14369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 46794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2265: /* show_param: RELAYLOG_SYM optional_connection_name EVENTS_SYM binlog_in binlog_from $@205 opt_global_limit_clause optional_for_channel  */
#line 14374 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 46800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2266: /* show_param: keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 14376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 46813 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2267: /* show_param: opt_storage ENGINES_SYM  */
#line 14385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 46824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2268: /* show_param: AUTHORS_SYM  */
#line 14392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 46833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2269: /* show_param: CONTRIBUTORS_SYM  */
#line 14397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 46842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2270: /* show_param: PRIVILEGES  */
#line 14402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 46851 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2271: /* show_param: COUNT_SYM '(' '*' ')' WARNINGS  */
#line 14407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 46860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2272: /* show_param: COUNT_SYM '(' '*' ')' ERRORS  */
#line 14412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 46869 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2273: /* show_param: WARNINGS opt_global_limit_clause  */
#line 14417 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 46875 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2274: /* show_param: ERRORS opt_global_limit_clause  */
#line 14419 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 46881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2275: /* show_param: PROFILES_SYM  */
#line 14421 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 46887 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2276: /* show_param: PROFILE_SYM opt_profile_defs opt_profile_args opt_global_limit_clause  */
#line 14423 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 46898 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2277: /* show_param: opt_var_type STATUS_SYM wild_and_where  */
#line 14430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 46910 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2278: /* show_param: opt_full PROCESSLIST_SYM  */
#line 14438 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 46916 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2279: /* show_param: opt_var_type VARIABLES wild_and_where  */
#line 14440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 46928 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2280: /* show_param: charset wild_and_where  */
#line 14448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 46939 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2281: /* show_param: COLLATION_SYM wild_and_where  */
#line 14455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 46950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2282: /* show_param: GRANTS  */
#line 14462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 46961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2283: /* show_param: GRANTS FOR_SYM user_or_role clear_privileges  */
#line 14469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 46971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2284: /* show_param: CREATE DATABASE opt_if_not_exists ident  */
#line 14475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 46980 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2285: /* show_param: CREATE TABLE_SYM table_ident  */
#line 14480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 46992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2286: /* show_param: CREATE VIEW_SYM table_ident  */
#line 14488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 47004 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2287: /* show_param: CREATE SEQUENCE_SYM table_ident  */
#line 14496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 47016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2288: /* show_param: BINLOG_SYM STATUS_SYM  */
#line 14504 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 47024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2289: /* show_param: MASTER_SYM STATUS_SYM  */
#line 14508 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 47032 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2290: /* show_param: ALL SLAVES STATUS_SYM  */
#line 14512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_SLAVE_STAT;
            lex->mi.show_all_slaves= 1;
#ifdef HAVE_REPLICATION
            if (prepare_schema_table(thd, lex, 0, SCH_SLAVE_STATUS))
              MYSQL_YYABORT;
#endif
          }
#line 47046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2291: /* show_param: SLAVE optional_connection_name STATUS_SYM optional_for_channel  */
#line 14522 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_SLAVE_STAT;
            lex->mi.show_all_slaves= 0;
#ifdef HAVE_REPLICATION
            if (prepare_schema_table(thd, lex, 0, SCH_SLAVE_STATUS))
              MYSQL_YYABORT;
#endif
          }
#line 47060 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2292: /* show_param: CREATE PROCEDURE_SYM sp_name  */
#line 14532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 47071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2293: /* show_param: CREATE FUNCTION_SYM sp_name  */
#line 14539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 47082 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2294: /* show_param: CREATE PACKAGE_MARIADB_SYM sp_name  */
#line 14546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 47092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2295: /* show_param: CREATE PACKAGE_ORACLE_SYM sp_name  */
#line 14552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 47102 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2296: /* show_param: CREATE PACKAGE_MARIADB_SYM BODY_MARIADB_SYM sp_name  */
#line 14558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 47112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2297: /* show_param: CREATE PACKAGE_ORACLE_SYM BODY_ORACLE_SYM sp_name  */
#line 14564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 47122 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2298: /* show_param: CREATE SERVER_SYM ident_or_text  */
#line 14570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_SERVER;
            lex->name= (yyvsp[0].lex_str);
          }
#line 47132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2299: /* show_param: CREATE TRIGGER_SYM sp_name  */
#line 14576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 47142 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2300: /* show_param: CREATE USER_SYM  */
#line 14582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 47153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2301: /* show_param: CREATE USER_SYM user  */
#line 14589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 47162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2302: /* show_param: PROCEDURE_SYM STATUS_SYM wild_and_where  */
#line 14594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 47173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2303: /* show_param: FUNCTION_SYM STATUS_SYM wild_and_where  */
#line 14601 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 47184 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2304: /* show_param: PACKAGE_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 47195 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2305: /* show_param: PACKAGE_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14615 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 47206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2306: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14622 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 47217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2307: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 47228 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2308: /* show_param: PROCEDURE_SYM CODE_SYM sp_name  */
#line 14636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 47237 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2309: /* show_param: FUNCTION_SYM CODE_SYM sp_name  */
#line 14641 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 47246 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2310: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM CODE_SYM sp_name  */
#line 14646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 47255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2311: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM CODE_SYM sp_name  */
#line 14651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 47264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2312: /* show_param: CREATE EVENT_SYM sp_name  */
#line 14656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 47273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2313: /* show_param: describe_command opt_format_json FOR_SYM expr  */
#line 14665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 47285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2314: /* show_param: ANALYZE_SYM opt_format_json FOR_SYM expr  */
#line 14673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_ANALYZE;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_ANALYZE_JSON : SCH_ANALYZE_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 47297 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2315: /* show_param: IDENT_sys remember_tok_start wild_and_where  */
#line 14681 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 47320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2316: /* show_engine_param: STATUS_SYM  */
#line 14703 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 47326 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2317: /* show_engine_param: MUTEX_SYM  */
#line 14705 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 47332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2318: /* show_engine_param: LOGS_SYM  */
#line 14707 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 47338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2323: /* opt_db: %empty  */
#line 14721 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= null_clex_str; }
#line 47344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2324: /* opt_db: from_or_in ident  */
#line 14722 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 47350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2325: /* opt_full: %empty  */
#line 14726 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=0; }
#line 47356 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2326: /* opt_full: FULL  */
#line 14727 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=1; }
#line 47362 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2329: /* binlog_in: %empty  */
#line 14736 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = 0; }
#line 47368 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2330: /* binlog_in: IN_SYM TEXT_STRING_sys  */
#line 14737 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 47374 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2331: /* binlog_from: %empty  */
#line 14741 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = 4; /* skip magic number */ }
#line 47380 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2332: /* binlog_from: FROM ulonglong_num  */
#line 14742 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 47386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2333: /* wild_and_where: %empty  */
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.simple_string)= 0; }
#line 47392 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2334: /* wild_and_where: LIKE remember_tok_start TEXT_STRING_sys  */
#line 14748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).length,
                                                   system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 47405 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2335: /* wild_and_where: WHERE remember_tok_start search_condition  */
#line 14757 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 47416 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2336: /* $@206: %empty  */
#line 14768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 47433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2337: /* describe: describe_command table_ident $@206 opt_describe_column  */
#line 14781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 47442 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2338: /* $@207: %empty  */
#line 14786 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_NORMAL; }
#line 47448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2339: /* describe: describe_command opt_extended_describe $@207 explainable_command  */
#line 14788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 47457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2348: /* analyze_stmt_command: ANALYZE_SYM opt_format_json explainable_command  */
#line 14810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->analyze_stmt= true;
          }
#line 47465 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2349: /* opt_extended_describe: EXTENDED_SYM  */
#line 14816 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_EXTENDED; }
#line 47471 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2350: /* opt_extended_describe: EXTENDED_SYM ALL  */
#line 14818 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 47477 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2351: /* opt_extended_describe: PARTITIONS_SYM  */
#line 14819 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 47483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2352: /* opt_extended_describe: opt_format_json  */
#line 14820 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 47489 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2353: /* opt_format_json: %empty  */
#line 14824 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47495 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2354: /* opt_format_json: FORMAT_SYM '=' ident_or_text  */
#line 14826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                                "EXPLAIN/ANALYZE", (yyvsp[0].lex_str).str));
          }
#line 47509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2355: /* opt_describe_column: %empty  */
#line 14838 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47515 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2356: /* opt_describe_column: text_string  */
#line 14839 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->wild= (yyvsp[0].string); }
#line 47521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2357: /* opt_describe_column: ident  */
#line 14841 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 47533 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2358: /* explain_for_connection: describe_command opt_format_json FOR_SYM CONNECTION_SYM expr  */
#line 14857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 47555 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2359: /* $@208: %empty  */
#line 14880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 47566 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2360: /* flush: FLUSH_SYM opt_no_write_to_binlog $@208 flush_options  */
#line 14886 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 47572 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2361: /* $@209: %empty  */
#line 14891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 47586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2362: /* flush_options: table_or_tables $@209 opt_table_list opt_flush_lock  */
#line 14901 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47592 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2363: /* flush_options: flush_options_list  */
#line 14903 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47598 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2364: /* opt_flush_lock: %empty  */
#line 14907 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2365: /* opt_flush_lock: flush_lock  */
#line 14909 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 47618 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2366: /* flush_lock: WITH READ_SYM LOCK_SYM optional_flush_tables_arguments  */
#line 14922 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 47624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2367: /* $@210: %empty  */
#line 14924 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 47638 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2368: /* flush_lock: FOR_SYM $@210 EXPORT_SYM  */
#line 14932 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 47644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2370: /* flush_options_list: flush_option  */
#line 14938 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47650 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2371: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14943 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 47656 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2372: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14945 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 47662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2373: /* flush_option: GENERAL LOGS_SYM  */
#line 14947 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 47668 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2374: /* flush_option: SLOW LOGS_SYM  */
#line 14949 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 47674 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2375: /* flush_option: BINARY LOGS_SYM opt_delete_gtid_domain  */
#line 14951 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 47680 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2376: /* flush_option: RELAY LOGS_SYM optional_connection_name optional_for_channel  */
#line 14953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 47692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2377: /* flush_option: QUERY_SYM CACHE_SYM  */
#line 14961 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 47698 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2378: /* flush_option: HOSTS_SYM  */
#line 14963 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_HOSTS; }
#line 47704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2379: /* flush_option: PRIVILEGES  */
#line 14965 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 47710 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2380: /* flush_option: LOGS_SYM  */
#line 14967 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 47719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2381: /* flush_option: STATUS_SYM  */
#line 14972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->variables.old_behavior & OLD_MODE_OLD_FLUSH_STATUS)
              Lex->type|= REFRESH_STATUS;
            else
              Lex->type|= REFRESH_SESSION_STATUS;
          }
#line 47730 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2382: /* flush_option: SESSION_SYM STATUS_SYM  */
#line 14979 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SESSION_STATUS; }
#line 47736 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2383: /* flush_option: GLOBAL_SYM STATUS_SYM  */
#line 14981 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GLOBAL_STATUS; }
#line 47742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2384: /* flush_option: SLAVE optional_connection_name  */
#line 14983 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 47754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2385: /* flush_option: MASTER_SYM  */
#line 14991 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_MASTER; }
#line 47760 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2386: /* flush_option: DES_KEY_FILE  */
#line 14993 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 47766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2387: /* flush_option: RESOURCES  */
#line 14995 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 47772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2388: /* flush_option: SSL_SYM  */
#line 14997 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SSL;}
#line 47778 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2389: /* flush_option: THREADS_SYM  */
#line 14999 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_THREADS;}
#line 47784 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2390: /* flush_option: IDENT_sys remember_tok_start  */
#line 15001 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 47802 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2391: /* opt_table_list: %empty  */
#line 15017 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 47808 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2392: /* opt_table_list: table_list  */
#line 15018 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 47814 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2393: /* backup: BACKUP_SYM backup_statements  */
#line 15022 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 47820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2394: /* backup_statements: STAGE_SYM ident  */
#line 15027 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 47836 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2395: /* $@211: %empty  */
#line 15039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP LOCK"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 47847 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2396: /* backup_statements: LOCK_SYM $@211 table_ident  */
#line 15046 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 47859 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2397: /* backup_statements: UNLOCK_SYM  */
#line 15054 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP UNLOCK"));
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 47870 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2398: /* opt_delete_gtid_domain: %empty  */
#line 15063 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2399: /* opt_delete_gtid_domain: DELETE_DOMAIN_ID_SYM '=' '(' delete_domain_id_list ')'  */
#line 15065 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2403: /* delete_domain_id: ulonglong_num  */
#line 15075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 47899 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2404: /* optional_flush_tables_arguments: %empty  */
#line 15090 "/home/buildbot/git/sql/sql_yacc.yy"
                             {(yyval.num)= 0;}
#line 47905 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2405: /* optional_flush_tables_arguments: AND_SYM DISABLE_SYM CHECKPOINT_SYM  */
#line 15091 "/home/buildbot/git/sql/sql_yacc.yy"
                                             {(yyval.num)= REFRESH_CHECKPOINT; }
#line 47911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2406: /* $@212: %empty  */
#line 15096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 47920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2407: /* reset: RESET_SYM $@212 reset_options  */
#line 15101 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2410: /* $@213: %empty  */
#line 15110 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_SLAVE; }
#line 47932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2411: /* reset_option: SLAVE $@213 optional_connection_name slave_reset_options optional_for_channel  */
#line 15113 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 47938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2412: /* $@214: %empty  */
#line 15115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 47947 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2414: /* reset_option: QUERY_SYM CACHE_SYM  */
#line 15120 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_QUERY_CACHE;}
#line 47953 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2415: /* slave_reset_options: %empty  */
#line 15124 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= false; }
#line 47959 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2416: /* slave_reset_options: ALL  */
#line 15125 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= true; }
#line 47965 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2417: /* master_reset_options: %empty  */
#line 15129 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2418: /* master_reset_options: TO_SYM ulong_num  */
#line 15131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 47979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2419: /* purge: PURGE master_or_binary LOGS_SYM TO_SYM TEXT_STRING_sys  */
#line 15138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 47987 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2420: /* $@215: %empty  */
#line 15142 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 47993 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2421: /* purge: PURGE master_or_binary LOGS_SYM BEFORE_SYM $@215 expr  */
#line 15144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 48003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2422: /* $@216: %empty  */
#line 15156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str= "KILL";
          }
#line 48017 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2423: /* kill: KILL_SYM $@216 kill_type kill_option  */
#line 15166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 48025 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2424: /* kill_type: %empty  */
#line 15172 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 48031 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2425: /* kill_type: HARD_SYM  */
#line 15173 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 48037 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2426: /* kill_type: SOFT_SYM  */
#line 15174 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 48043 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2427: /* kill_option: opt_connection kill_expr  */
#line 15178 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_CONNECTION; }
#line 48049 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2428: /* kill_option: QUERY_SYM kill_expr  */
#line 15179 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_QUERY; }
#line 48055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2429: /* kill_option: QUERY_SYM ID_SYM expr  */
#line 15181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 48065 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2430: /* opt_connection: %empty  */
#line 15189 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 48071 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2431: /* opt_connection: CONNECTION_SYM  */
#line 15190 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 48077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2432: /* kill_expr: expr  */
#line 15195 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 48085 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2433: /* kill_expr: USER_SYM user  */
#line 15199 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 48094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2434: /* $@217: %empty  */
#line 15206 "/home/buildbot/git/sql/sql_yacc.yy"
                 { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 48100 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2435: /* shutdown: SHUTDOWN $@217 shutdown_option  */
#line 15207 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 48106 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2436: /* shutdown_option: %empty  */
#line 15211 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->is_shutdown_wait_for_slaves= false; }
#line 48112 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2437: /* shutdown_option: WAIT_SYM FOR_SYM ALL SLAVES  */
#line 15213 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 48120 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2438: /* use: USE_SYM ident  */
#line 15222 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 48130 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2439: /* $@218: %empty  */
#line 15233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 48148 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2440: /* $@219: %empty  */
#line 15247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 48163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2441: /* $@220: %empty  */
#line 15258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 48180 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2442: /* $@221: %empty  */
#line 15271 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 48186 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2443: /* load: LOAD data_or_xml $@218 load_data_lock opt_local INFILE TEXT_STRING_filesystem $@219 opt_duplicate INTO TABLE_SYM table_ident opt_use_partition $@220 opt_load_data_charset $@221 opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec stmt_end  */
#line 15276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
          }
#line 48194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2444: /* data_or_xml: DATA_SYM  */
#line 15282 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 48200 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2445: /* data_or_xml: XML_SYM  */
#line 15283 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 48206 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2446: /* opt_local: %empty  */
#line 15287 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=0;}
#line 48212 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2447: /* opt_local: LOCAL_SYM  */
#line 15288 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1;}
#line 48218 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2448: /* load_data_lock: %empty  */
#line 15292 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 48224 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2449: /* load_data_lock: CONCURRENT  */
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 48236 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2450: /* load_data_lock: LOW_PRIORITY  */
#line 15301 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 48242 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2451: /* opt_duplicate: %empty  */
#line 15305 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->duplicates=DUP_ERROR; }
#line 48248 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2452: /* opt_duplicate: REPLACE  */
#line 15306 "/home/buildbot/git/sql/sql_yacc.yy"
                  { Lex->duplicates=DUP_REPLACE; }
#line 48254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2453: /* opt_duplicate: IGNORE_SYM  */
#line 15307 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1; }
#line 48260 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2458: /* field_term: TERMINATED BY text_string  */
#line 15322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 48269 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2459: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 15327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 48280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2460: /* field_term: ENCLOSED BY text_string  */
#line 15334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 48289 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2461: /* field_term: ESCAPED BY text_string  */
#line 15339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 48298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2466: /* line_term: TERMINATED BY text_string  */
#line 15357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 48307 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2467: /* line_term: STARTING BY text_string  */
#line 15362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 48316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2468: /* opt_xml_rows_identified_by: %empty  */
#line 15369 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 48322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2469: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 15371 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->line_term = (yyvsp[0].string); }
#line 48328 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2471: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 15377 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 48337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2472: /* lines_or_rows: LINES  */
#line 15384 "/home/buildbot/git/sql/sql_yacc.yy"
                { }
#line 48343 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2473: /* lines_or_rows: ROWS_SYM  */
#line 15385 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 48349 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2474: /* opt_field_or_var_spec: %empty  */
#line 15389 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48355 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2475: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 15390 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 48361 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2476: /* opt_field_or_var_spec: '(' ')'  */
#line 15391 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 48367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2477: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 15396 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 48373 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2478: /* fields_or_vars: field_or_var  */
#line 15398 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 48379 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2479: /* field_or_var: simple_ident_nospvar  */
#line 15402 "/home/buildbot/git/sql/sql_yacc.yy"
                               {(yyval.item)= (yyvsp[0].item);}
#line 48385 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2480: /* field_or_var: '@' ident_or_text  */
#line 15404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48401 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2481: /* opt_load_data_set_spec: %empty  */
#line 15418 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48407 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2482: /* opt_load_data_set_spec: SET load_data_set_list  */
#line 15419 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 48413 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2485: /* load_data_set_elem: simple_ident_nospvar equal remember_name expr_or_ignore_or_default remember_end  */
#line 15429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 48425 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2486: /* text_literal: TEXT_STRING  */
#line 15442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 48434 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2487: /* text_literal: NCHAR_STRING  */
#line 15447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 48443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2488: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 15452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 48454 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2489: /* text_literal: text_literal TEXT_STRING_literal  */
#line 15459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 48463 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2490: /* text_string: TEXT_STRING_literal  */
#line 15467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                           (yyvsp[0].lex_str).length,
                                           thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 48475 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2491: /* text_string: hex_or_bin_String  */
#line 15474 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.string)= (yyvsp[0].string); }
#line 48481 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2492: /* hex_or_bin_String: HEX_NUM  */
#line 15480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 48493 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2493: /* hex_or_bin_String: HEX_STRING  */
#line 15488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 48505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2494: /* hex_or_bin_String: BIN_NUM  */
#line 15496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 48521 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2495: /* param_marker: PARAM_MARKER  */
#line 15511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 48532 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2496: /* param_marker: COLON_ORACLE_SYM ident_cli  */
#line 15518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 48542 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2497: /* param_marker: COLON_ORACLE_SYM NUM  */
#line 15524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 48553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2498: /* signed_literal: '+' NUM_literal  */
#line 15533 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item) = (yyvsp[0].item_num); }
#line 48559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2499: /* signed_literal: '-' NUM_literal  */
#line 15535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 48568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2500: /* literal: text_literal  */
#line 15542 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 48574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2501: /* literal: NUM_literal  */
#line 15543 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item) = (yyvsp[0].item_num); }
#line 48580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2502: /* literal: temporal_literal  */
#line 15544 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item)= (yyvsp[0].item); }
#line 48586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2503: /* literal: NULL_SYM  */
#line 15546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 48604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2504: /* literal: FALSE_SYM  */
#line 15560 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48614 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2505: /* literal: TRUE_SYM  */
#line 15566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2506: /* literal: HEX_NUM  */
#line 15572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48634 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2507: /* literal: HEX_STRING  */
#line 15578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48644 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2508: /* literal: BIN_NUM  */
#line 15584 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 48654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2509: /* literal: UNDERSCORE_CHARSET hex_or_bin_String  */
#line 15590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_string_with_introducer *item_str;
            LEX_CSTRING tmp;
            (yyvsp[0].string)->get_value(&tmp);
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, null_clex_str,
                                           tmp, (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 48678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2510: /* NUM_literal: NUM  */
#line 15613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 48692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2511: /* NUM_literal: LONG_NUM  */
#line 15623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 48706 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2512: /* NUM_literal: ULONGLONG_NUM  */
#line 15633 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 48716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2513: /* NUM_literal: DECIMAL_NUM  */
#line 15639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 48727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2514: /* NUM_literal: FLOAT_NUM  */
#line 15646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 48737 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2515: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 15656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 48748 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2516: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 15663 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 48759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2517: /* temporal_literal: TIMESTAMP TEXT_STRING  */
#line 15670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_datetime.create_literal_item(thd,
                                                            (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                            YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 48770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2518: /* $@222: %empty  */
#line 15680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->with_cte_resolution= true;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&lex->with_clauses_list,
                                      lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 48790 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2519: /* with_clause: WITH opt_recursive $@222 with_list  */
#line 15696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 48799 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2520: /* opt_recursive: %empty  */
#line 15704 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 0; }
#line 48805 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2521: /* opt_recursive: RECURSIVE_SYM  */
#line 15705 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 48811 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2525: /* with_list_element: with_element_head with_column_list AS '(' query_expression ')' opt_cycle  */
#line 15722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-3].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].with_element_head), *(yyvsp[-5].ident_sys_list), (yyvsp[-2].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            if ((yyvsp[0].ident_sys_list))
            {
              elem->set_cycle_list((yyvsp[0].ident_sys_list));
            }
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 48833 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2526: /* opt_cycle: %empty  */
#line 15743 "/home/buildbot/git/sql/sql_yacc.yy"
         { (yyval.ident_sys_list)= NULL; }
#line 48839 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2527: /* $@223: %empty  */
#line 15746 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (!Lex->curr_with_clause->with_recursive)
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].kwd).pos());
           }
         }
#line 48850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2528: /* opt_cycle: CYCLE_SYM $@223 comma_separated_ident_list RESTRICT  */
#line 15753 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list);
         }
#line 48858 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2529: /* opt_column_name_list: %empty  */
#line 15760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>) == NULL)
              MYSQL_YYABORT;
          }
#line 48867 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2530: /* opt_column_name_list: '(' comma_separated_ident_list ')'  */
#line 15765 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list); }
#line 48873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2531: /* ident_sys_alloc: ident_cli  */
#line 15770 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_ptr)= new (thd->mem_root) Lex_ident_sys(thd, &(yyvsp[0].ident_cli));
          }
#line 48881 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2532: /* comma_separated_ident_list: ident_sys_alloc  */
#line 15777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>;
            if (unlikely((yyval.ident_sys_list) == NULL || (yyval.ident_sys_list)->push_back((yyvsp[0].ident_sys_ptr))))
              MYSQL_YYABORT;
	  }
#line 48891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2533: /* comma_separated_ident_list: comma_separated_ident_list ',' ident_sys_alloc  */
#line 15783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= (yyvsp[-2].ident_sys_list))->push_back((yyvsp[0].ident_sys_ptr)))
              MYSQL_YYABORT;
          }
#line 48900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2534: /* with_element_head: ident  */
#line 15792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(
                                      Lex_ident_with_element((yyvsp[0].ident_sys)));
            if (unlikely((yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 48912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2535: /* insert_ident: simple_ident_nospvar  */
#line 15808 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.item)=(yyvsp[0].item); }
#line 48918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2536: /* insert_ident: table_wild  */
#line 15809 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.item)=(yyvsp[0].item); }
#line 48924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2537: /* table_wild: ident '.' '*'  */
#line 15814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 48933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2538: /* table_wild: ident '.' ident '.' '*'  */
#line 15819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 48942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2539: /* select_sublist_qualified_asterisk: ident_cli '.' '*'  */
#line 15827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48951 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2540: /* select_sublist_qualified_asterisk: ident_cli '.' ident_cli '.' '*'  */
#line 15832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48960 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2541: /* order_ident: expr  */
#line 15839 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 48966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2542: /* simple_ident: ident_cli  */
#line 15845 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2543: /* simple_ident: ident_cli '.' ident_cli  */
#line 15850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48984 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2544: /* simple_ident: '.' ident_cli '.' ident_cli  */
#line 15855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 48994 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2545: /* simple_ident: ident_cli '.' ident_cli '.' ident_cli  */
#line 15861 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49003 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2546: /* simple_ident: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49012 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2547: /* simple_ident_nospvar: ident  */
#line 15874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49021 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2548: /* simple_ident_nospvar: ident '.' ident  */
#line 15879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2549: /* simple_ident_nospvar: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49039 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2550: /* simple_ident_nospvar: '.' ident '.' ident  */
#line 15889 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49049 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2551: /* simple_ident_nospvar: ident '.' ident '.' ident  */
#line 15895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49058 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2552: /* field_ident: ident  */
#line 15902 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 49064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2553: /* field_ident: ident '.' ident '.' ident  */
#line 15904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(!table->db.streq((yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(!table->table_name.streq((yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 49077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2554: /* field_ident: ident '.' ident  */
#line 15913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(!table->alias.streq((yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 49088 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2555: /* field_ident: '.' ident  */
#line 15919 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 49094 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2556: /* table_ident: ident  */
#line 15924 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 49104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2557: /* table_ident: ident '.' ident  */
#line 15930 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 49114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2558: /* table_ident: '.' ident  */
#line 15936 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 49125 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2559: /* table_ident_opt_wild: ident opt_wild  */
#line 15946 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 49135 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2560: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 15952 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 49145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2561: /* table_ident_nodb: ident  */
#line 15961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db= any_db;
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 49156 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2566: /* ident_cli: keyword_ident  */
#line 15977 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 49162 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2567: /* IDENT_sys: IDENT_cli  */
#line 15982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 49171 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2570: /* ident_cli_func: keyword_func_sp_var_and_label  */
#line 15991 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 49177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2571: /* ident_cli_func: keyword_func_sp_var_not_label  */
#line 15992 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 49183 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2572: /* ident_func: ident_cli_func  */
#line 15997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 49192 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2573: /* TEXT_STRING_sys: TEXT_STRING  */
#line 16006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 49201 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2574: /* TEXT_STRING_literal: TEXT_STRING  */
#line 16014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 49210 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2575: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 16022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 49219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2577: /* ident_table_alias: keyword_table_alias  */
#line 16031 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 49228 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2578: /* ident_cli_set_usual_case: IDENT_cli  */
#line 16038 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ident_cli)= (yyvsp[0].ident_cli); }
#line 49234 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2579: /* ident_cli_set_usual_case: keyword_set_usual_case  */
#line 16039 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 49240 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2581: /* ident_sysvar_name: keyword_sysvar_name  */
#line 16045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 49249 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2582: /* ident_sysvar_name: TEXT_STRING_sys  */
#line 16050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 49258 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2584: /* ident: keyword_ident  */
#line 16060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 49267 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2586: /* label_ident: keyword_label  */
#line 16069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 49276 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2587: /* ident_or_text: ident  */
#line 16076 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 49282 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2588: /* ident_or_text: TEXT_STRING_sys  */
#line 16077 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 49288 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2589: /* ident_or_text: LEX_HOSTNAME  */
#line 16078 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 49294 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2590: /* user_maybe_role: ident_or_text  */
#line 16083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 49309 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2591: /* user_maybe_role: ident_or_text '@' ident_or_text  */
#line 16094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              (yyval.lex_user)->host= thd->make_ident_casedn((yyval.lex_user)->host);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 49337 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2592: /* user_maybe_role: CURRENT_USER optional_braces  */
#line 16118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 49348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 2595: /* user: user_maybe_role  */
#line 16129 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 49358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3326: /* $@224: %empty  */
#line 17008 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
          }
#line 49367 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3327: /* set: SET $@224 set_param  */
#line 17013 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 49376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3330: /* $@225: %empty  */
#line 17023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= OPT_DEFAULT;
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49386 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3331: /* set_param: TRANSACTION_SYM $@225 transaction_characteristics  */
#line 17029 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49395 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3332: /* $@226: %empty  */
#line 17034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 49403 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3334: /* $@227: %empty  */
#line 17040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 49417 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3340: /* $@228: %empty  */
#line 17067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3341: /* start_option_value_list_following_option_type: TRANSACTION_SYM $@228 transaction_characteristics  */
#line 17072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49435 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3344: /* $@229: %empty  */
#line 17087 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 49443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3347: /* option_type: GLOBAL_SYM  */
#line 17095 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 49449 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3348: /* option_type: LOCAL_SYM  */
#line 17096 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 49455 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3349: /* option_type: SESSION_SYM  */
#line 17097 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 49461 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3350: /* opt_var_type: %empty  */
#line 17101 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 49467 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3351: /* opt_var_type: GLOBAL_SYM  */
#line 17102 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 49473 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3352: /* opt_var_type: LOCAL_SYM  */
#line 17103 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 49479 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3353: /* opt_var_type: SESSION_SYM  */
#line 17104 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 49485 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3354: /* opt_var_ident_type: %empty  */
#line 17108 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 49491 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3355: /* opt_var_ident_type: GLOBAL_SYM '.'  */
#line 17109 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 49497 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3356: /* opt_var_ident_type: LOCAL_SYM '.'  */
#line 17110 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 49503 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3357: /* opt_var_ident_type: SESSION_SYM '.'  */
#line 17111 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 49509 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3358: /* $@230: %empty  */
#line 17120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 49518 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3359: /* set_stmt_option: ident_cli equal $@230 set_expr_or_default  */
#line 17125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp,
                                                  (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 49531 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3360: /* $@231: %empty  */
#line 17134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 49540 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3361: /* set_stmt_option: ident_cli '.' ident equal $@231 set_expr_or_default  */
#line 17139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type,
                         &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 49553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3362: /* $@232: %empty  */
#line 17148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 49562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3363: /* set_stmt_option: DEFAULT '.' ident equal $@232 set_expr_or_default  */
#line 17153 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 49573 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3364: /* $@233: %empty  */
#line 17165 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 49582 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3365: /* option_value_following_option_type: ident_cli equal $@233 set_expr_or_default  */
#line 17170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp,
                                                  (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3366: /* $@234: %empty  */
#line 17179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 49604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3367: /* option_value_following_option_type: ident_cli '.' ident equal $@234 set_expr_or_default  */
#line 17184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type, &tmp,
                                                  &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49617 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3368: /* $@235: %empty  */
#line 17193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49626 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3369: /* option_value_following_option_type: DEFAULT '.' ident equal $@235 set_expr_or_default  */
#line 17198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49637 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3370: /* $@236: %empty  */
#line 17209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 49646 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3371: /* option_value_no_option_type: ident_cli_set_usual_case equal $@236 set_expr_or_default  */
#line 17214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49659 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3372: /* $@237: %empty  */
#line 17223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 49668 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3373: /* option_value_no_option_type: ident_cli_set_usual_case '.' ident equal $@237 set_expr_or_default  */
#line 17228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49681 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3374: /* $@238: %empty  */
#line 17237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3375: /* option_value_no_option_type: DEFAULT '.' ident equal $@238 set_expr_or_default  */
#line 17242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49702 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3376: /* $@239: %empty  */
#line 17250 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            if (sp_create_assignment_lex(thd, (yyvsp[-2].lex_str).str))
              MYSQL_YYABORT;
          }
#line 49717 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3377: /* option_value_no_option_type: '@' ident_or_text equal $@239 remember_cpp_ptr expr remember_end  */
#line 17261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-5].lex_str), (yyvsp[-1].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49735 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3378: /* $@240: %empty  */
#line 17275 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].lex_str).str))
              MYSQL_YYABORT;
          }
#line 49744 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3379: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name equal $@240 set_expr_or_default  */
#line 17280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable((yyvsp[-4].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3380: /* $@241: %empty  */
#line 17286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 49763 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3381: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name '.' ident equal $@241 set_expr_or_default  */
#line 17291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-6].var_type), &(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys),
                                                  (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49774 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3382: /* $@242: %empty  */
#line 17298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 49783 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3383: /* option_value_no_option_type: '@' '@' opt_var_ident_type DEFAULT '.' ident equal $@242 set_expr_or_default  */
#line 17303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-6].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49793 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3384: /* option_value_no_option_type: charset old_or_new_charset_name_or_default  */
#line 17309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49815 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3385: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 17327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 49830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3386: /* option_value_no_option_type: NAMES_SYM charset_name_or_default  */
#line 17338 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_names((yyvsp[-1].kwd).pos(), (yyvsp[0].charset),
                               Lex_extended_collation_st::collate_default(),
                               yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 49841 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3387: /* option_value_no_option_type: NAMES_SYM charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 17346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_names((yyvsp[-3].kwd).pos(), (yyvsp[-2].charset), (yyvsp[0].Lex_extended_collation), yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 49850 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3388: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role  */
#line 17351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49876 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3389: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role FOR_SYM user  */
#line 17373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3390: /* option_value_no_option_type: ROLE_SYM role_name  */
#line 17389 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_user)->user);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49911 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3391: /* $@243: %empty  */
#line 17400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3392: /* option_value_no_option_type: ROLE_SYM equal $@243 set_expr_or_default  */
#line 17405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].kwd));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49933 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3393: /* $@244: %empty  */
#line 17414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49942 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3394: /* option_value_no_option_type: PASSWORD_SYM equal $@244 text_or_password  */
#line 17419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49952 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3395: /* $@245: %empty  */
#line 17425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 49961 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3396: /* option_value_no_option_type: PASSWORD_SYM FOR_SYM $@245 user equal text_or_password  */
#line 17430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[-2].lex_user), (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 49971 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3401: /* transaction_access_mode: transaction_access_mode_types  */
#line 17446 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "transaction_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 49991 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3402: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 17465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "transaction_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3403: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 17482 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 50016 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3404: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 17483 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 50022 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3405: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 17487 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 50028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3406: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 17488 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 50034 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3407: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 17489 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 50040 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3408: /* isolation_types: SERIALIZABLE_SYM  */
#line 17490 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 50046 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3409: /* text_or_password: TEXT_STRING  */
#line 17496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 50055 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3410: /* text_or_password: PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 50064 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3411: /* text_or_password: OLD_PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
            (yyval.user_auth)->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            (yyval.user_auth)->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 50076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3412: /* set_expr_or_default: remember_cpp_ptr expr remember_end  */
#line 17517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	      LEX_CSTRING expr_str= empty_clex_str;

              if (Lex->is_metadata_used())
              {
                expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
                if (expr_str.str == nullptr)
                  MYSQL_YYABORT;
              }

              (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 50093 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3413: /* set_expr_or_default: remember_cpp_ptr set_expr_misc remember_end  */
#line 17530 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].item) == nullptr))
              MYSQL_YYABORT;
            (yyval.expr_and_query_str)= {(yyvsp[-1].item), empty_clex_str};
          }
#line 50103 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3414: /* set_expr_or_default: remember_cpp_ptr DEFAULT remember_end  */
#line 17536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_and_query_str)= { nullptr, empty_clex_str };
          }
#line 50111 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3415: /* set_expr_misc: ON  */
#line 17542 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "ON",  2); }
#line 50117 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3416: /* set_expr_misc: ALL  */
#line 17543 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "ALL", 3); }
#line 50123 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3417: /* set_expr_misc: BINARY  */
#line 17544 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "binary", 6); }
#line 50129 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3418: /* $@246: %empty  */
#line 17551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 50141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3419: /* lock: LOCK_SYM table_or_tables $@246 table_lock_list opt_lock_wait_timeout  */
#line 17559 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50147 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3420: /* opt_lock_wait_timeout: %empty  */
#line 17564 "/home/buildbot/git/sql/sql_yacc.yy"
        {}
#line 50153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3421: /* opt_lock_wait_timeout: WAIT_SYM ulong_num  */
#line 17566 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 50163 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3422: /* opt_lock_wait_timeout: NOWAIT_SYM  */
#line 17572 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 50173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3423: /* table_or_tables: TABLE_SYM  */
#line 17580 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 50179 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3424: /* table_or_tables: TABLES  */
#line 17581 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 50185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3427: /* table_lock: table_ident opt_table_alias_clause lock_option  */
#line 17591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_FIRST_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 50205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3428: /* lock_option: READ_SYM  */
#line 17609 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 50211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3429: /* lock_option: WRITE_SYM  */
#line 17610 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 50217 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3430: /* lock_option: WRITE_SYM CONCURRENT  */
#line 17612 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 50225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3431: /* lock_option: LOW_PRIORITY WRITE_SYM  */
#line 17616 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 50231 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3432: /* lock_option: READ_SYM LOCAL_SYM  */
#line 17617 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 50237 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3433: /* $@247: %empty  */
#line 17622 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 50249 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3434: /* unlock: UNLOCK_SYM $@247 table_or_tables  */
#line 17630 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50255 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3435: /* $@248: %empty  */
#line 17639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 50264 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3436: /* handler: HANDLER_SYM $@248 handler_tail  */
#line 17644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 50272 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3437: /* handler_tail: table_ident OPEN_SYM opt_table_alias_clause  */
#line 17651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 50285 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3438: /* handler_tail: table_ident_nodb CLOSE_SYM  */
#line 17660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 50298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3439: /* $@249: %empty  */
#line 17669 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            select->limit_params.select_limit= one;
            select->limit_params.offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 50320 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3440: /* handler_tail: table_ident_nodb READ_SYM $@249 handler_read_or_scan opt_where_clause opt_global_limit_clause  */
#line 17687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->limit_params.explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              select->limit_params.select_limit= one;
              select->limit_params.offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 50346 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3441: /* handler_read_or_scan: handler_scan_function  */
#line 17711 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= null_clex_str; }
#line 50352 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3442: /* handler_read_or_scan: ident handler_rkey_function  */
#line 17712 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= (yyvsp[-1].ident_sys); }
#line 50358 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3443: /* handler_scan_function: FIRST_SYM  */
#line 17716 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 50364 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3444: /* handler_scan_function: NEXT_SYM  */
#line 17717 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 50370 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3445: /* handler_rkey_function: FIRST_SYM  */
#line 17721 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 50376 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3446: /* handler_rkey_function: NEXT_SYM  */
#line 17722 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 50382 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3447: /* handler_rkey_function: PREV_SYM  */
#line 17723 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RPREV;  }
#line 50388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3448: /* handler_rkey_function: LAST_SYM  */
#line 17724 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RLAST;  }
#line 50394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3449: /* $@250: %empty  */
#line 17726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 50406 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3450: /* handler_rkey_function: handler_rkey_mode $@250 '(' values ')'  */
#line 17734 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50412 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3451: /* handler_rkey_mode: '='  */
#line 17738 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 50418 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3452: /* handler_rkey_mode: GE  */
#line 17739 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 50424 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3453: /* handler_rkey_mode: LE  */
#line 17740 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 50430 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3454: /* handler_rkey_mode: '>'  */
#line 17741 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 50436 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3455: /* handler_rkey_mode: '<'  */
#line 17742 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 50442 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3456: /* revoke: REVOKE clear_privileges revoke_command  */
#line 17749 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50448 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3457: /* revoke_command: grant_privileges ON opt_table grant_ident FROM user_and_role_list  */
#line 17754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_table(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident)))
              MYSQL_YYABORT;
          }
#line 50457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3458: /* revoke_command: grant_privileges ON sp_handler grant_ident FROM user_and_role_list  */
#line 17759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_sp(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident), *(yyvsp[-3].sp_handler)))
              MYSQL_YYABORT;
          }
#line 50466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3459: /* revoke_command: ALL opt_privileges ',' GRANT OPTION FROM user_and_role_list  */
#line 17764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 50474 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3460: /* revoke_command: PROXY_SYM ON user FROM user_list  */
#line 17768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_proxy(thd, (yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 50483 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3461: /* revoke_command: admin_option_for_role FROM user_and_role_list  */
#line 17773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50493 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3462: /* admin_option_for_role: ADMIN_SYM OPTION FOR_SYM grant_role  */
#line 17782 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 50499 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3463: /* admin_option_for_role: grant_role  */
#line 17784 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 50505 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3464: /* grant: GRANT clear_privileges grant_command  */
#line 17789 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 50511 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3465: /* grant_command: grant_privileges ON opt_table grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_table(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 50520 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3466: /* grant_command: grant_privileges ON sp_handler grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17801 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_sp(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), *(yyvsp[-5].sp_handler), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 50529 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3467: /* grant_command: PROXY_SYM ON user TO_SYM grant_list opt_grant_option  */
#line 17806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_proxy(thd, (yyvsp[-3].lex_user), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 50538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3468: /* grant_command: grant_role TO_SYM grant_list opt_with_admin_option  */
#line 17811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3469: /* opt_with_admin: %empty  */
#line 17822 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = 0; }
#line 50556 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3470: /* opt_with_admin: WITH ADMIN_SYM user_or_role  */
#line 17823 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = (yyvsp[0].lex_user); }
#line 50562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3471: /* opt_with_admin_option: %empty  */
#line 17827 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= false; }
#line 50568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3472: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 17828 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= true; }
#line 50574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3473: /* role_list: grant_role  */
#line 17833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50583 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3474: /* role_list: role_list ',' grant_role  */
#line 17838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50592 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3475: /* current_role: CURRENT_ROLE optional_braces  */
#line 17846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
          }
#line 50602 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3476: /* role_name: ident_or_text  */
#line 17855 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             CHARSET_INFO *cs= system_charset_info;
             /* trim end spaces (as they'll be lost in mysql.user anyway) */
             (yyvsp[0].lex_str).length= cs->lengthsp((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
             ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
             if (unlikely((yyvsp[0].lex_str).length == 0))
               my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
             if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
               MYSQL_YYABORT;
             if (lex_string_eq(&(yyvsp[0].lex_str), &none))
               (yyval.lex_user)->user= none;
             else if (lex_string_eq(&(yyvsp[0].lex_str), &public_name))
               (yyval.lex_user)->user= public_name;
             else if (check_string_char_length(&((yyval.lex_user)->user= (yyvsp[0].lex_str)), ER_USERNAME,
                                               username_char_length, cs, 0))
               MYSQL_YYABORT;
             (yyval.lex_user)->host= empty_clex_str;
           }
#line 50625 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3482: /* grant_privileges: ALL opt_privileges  */
#line 17885 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege(GLOBAL_ACLS, true)))
              MYSQL_YYABORT;
          }
#line 50634 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3485: /* object_privilege_list: object_privilege  */
#line 17898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege((yyvsp[0].privilege))))
              MYSQL_YYABORT;
          }
#line 50643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3486: /* object_privilege_list: column_list_privilege  */
#line 17903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege()) ||
                (yyval.lex_grant)->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                   (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 50654 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3487: /* object_privilege_list: object_privilege_list ',' object_privilege  */
#line 17910 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            ((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_object_privilege((yyvsp[0].privilege));
          }
#line 50662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3488: /* object_privilege_list: object_privilege_list ',' column_list_privilege  */
#line 17914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                         (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 50672 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3489: /* column_list_privilege: column_privilege '(' comma_separated_ident_list ')'  */
#line 17923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.column_list_privilege)= Lex_column_list_privilege((yyvsp[-1].ident_sys_list), (yyvsp[-3].privilege));
          }
#line 50680 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3490: /* column_privilege: SELECT_SYM  */
#line 17929 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 50686 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3491: /* column_privilege: INSERT  */
#line 17930 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 50692 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3492: /* column_privilege: UPDATE_SYM  */
#line 17931 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 50698 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3493: /* column_privilege: REFERENCES  */
#line 17932 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 50704 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3494: /* object_privilege: SELECT_SYM  */
#line 17936 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 50710 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3495: /* object_privilege: INSERT  */
#line 17937 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 50716 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3496: /* object_privilege: UPDATE_SYM  */
#line 17938 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 50722 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3497: /* object_privilege: REFERENCES  */
#line 17939 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 50728 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3498: /* object_privilege: DELETE_SYM  */
#line 17940 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_ACL;}
#line 50734 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3499: /* object_privilege: USAGE  */
#line 17941 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= NO_ACL; }
#line 50740 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3500: /* object_privilege: INDEX_SYM  */
#line 17942 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INDEX_ACL;}
#line 50746 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3501: /* object_privilege: ALTER  */
#line 17943 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_ACL;}
#line 50752 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3502: /* object_privilege: CREATE  */
#line 17944 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_ACL;}
#line 50758 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3503: /* object_privilege: DROP  */
#line 17945 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DROP_ACL;}
#line 50764 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3504: /* object_privilege: EXECUTE_SYM  */
#line 17946 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EXECUTE_ACL;}
#line 50770 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3505: /* object_privilege: RELOAD  */
#line 17947 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= RELOAD_ACL;}
#line 50776 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3506: /* object_privilege: SHUTDOWN  */
#line 17948 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHUTDOWN_ACL;}
#line 50782 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3507: /* object_privilege: PROCESS  */
#line 17949 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= PROCESS_ACL;}
#line 50788 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3508: /* object_privilege: FILE_SYM  */
#line 17950 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FILE_ACL;}
#line 50794 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3509: /* object_privilege: GRANT OPTION  */
#line 17951 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= GRANT_ACL;}
#line 50800 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3510: /* object_privilege: SHOW DATABASES  */
#line 17952 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_DB_ACL;}
#line 50806 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3511: /* object_privilege: SUPER_SYM  */
#line 17953 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SUPER_ACL;}
#line 50812 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3512: /* object_privilege: CREATE TEMPORARY TABLES  */
#line 17954 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TMP_ACL;}
#line 50818 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3513: /* object_privilege: LOCK_SYM TABLES  */
#line 17955 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= LOCK_TABLES_ACL; }
#line 50824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3514: /* object_privilege: REPLICATION SLAVE  */
#line 17956 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REPL_SLAVE_ACL; }
#line 50830 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3515: /* object_privilege: REPLICATION CLIENT_SYM  */
#line 17957 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= BINLOG_MONITOR_ACL; /*Compatibility*/ }
#line 50836 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3516: /* object_privilege: CREATE VIEW_SYM  */
#line 17958 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_VIEW_ACL; }
#line 50842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3517: /* object_privilege: SHOW VIEW_SYM  */
#line 17959 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_VIEW_ACL; }
#line 50848 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3518: /* object_privilege: CREATE ROUTINE_SYM  */
#line 17960 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_PROC_ACL; }
#line 50854 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3519: /* object_privilege: ALTER ROUTINE_SYM  */
#line 17961 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_PROC_ACL; }
#line 50860 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3520: /* object_privilege: CREATE USER_SYM  */
#line 17962 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_USER_ACL; }
#line 50866 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3521: /* object_privilege: EVENT_SYM  */
#line 17963 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EVENT_ACL;}
#line 50872 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3522: /* object_privilege: TRIGGER_SYM  */
#line 17964 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= TRIGGER_ACL; }
#line 50878 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3523: /* object_privilege: CREATE TABLESPACE  */
#line 17965 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TABLESPACE_ACL; }
#line 50884 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3524: /* object_privilege: DELETE_SYM HISTORY_SYM  */
#line 17966 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_HISTORY_ACL; }
#line 50890 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3525: /* object_privilege: SET USER_SYM  */
#line 17967 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SET_USER_ACL; }
#line 50896 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3526: /* object_privilege: FEDERATED_SYM ADMIN_SYM  */
#line 17968 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FEDERATED_ADMIN_ACL; }
#line 50902 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3527: /* object_privilege: CONNECTION_SYM ADMIN_SYM  */
#line 17969 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= CONNECTION_ADMIN_ACL; }
#line 50908 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3528: /* object_privilege: READ_SYM ONLY_SYM ADMIN_SYM  */
#line 17970 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 50914 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3529: /* object_privilege: READ_ONLY_SYM ADMIN_SYM  */
#line 17971 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 50920 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3530: /* object_privilege: BINLOG_SYM MONITOR_SYM  */
#line 17972 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_MONITOR_ACL; }
#line 50926 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3531: /* object_privilege: BINLOG_SYM ADMIN_SYM  */
#line 17973 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_ADMIN_ACL; }
#line 50932 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3532: /* object_privilege: BINLOG_SYM REPLAY_SYM  */
#line 17974 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_REPLAY_ACL; }
#line 50938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3533: /* object_privilege: REPLICATION MASTER_SYM ADMIN_SYM  */
#line 17975 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_MASTER_ADMIN_ACL; }
#line 50944 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3534: /* object_privilege: REPLICATION SLAVE ADMIN_SYM  */
#line 17976 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_SLAVE_ADMIN_ACL; }
#line 50950 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3535: /* object_privilege: SLAVE MONITOR_SYM  */
#line 17977 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SLAVE_MONITOR_ACL; }
#line 50956 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3536: /* object_privilege: SHOW CREATE ROUTINE_SYM  */
#line 17978 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SHOW_CREATE_ROUTINE_ACL; }
#line 50962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3537: /* opt_and: %empty  */
#line 17982 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 50968 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3538: /* opt_and: AND_SYM  */
#line 17983 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 50974 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3541: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 17993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 50985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3542: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 18000 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 50996 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3543: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 18007 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 51007 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3544: /* grant_ident: '*'  */
#line 18017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db;
            if (unlikely(Lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(db,
                                            Lex_grant_object_name::STAR)))
              MYSQL_YYABORT;
          }
#line 51020 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3545: /* grant_ident: ident '.' '*'  */
#line 18026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[-2].ident_sys),
                                            Lex_grant_object_name::IDENT_STAR)))
              MYSQL_YYABORT;
          }
#line 51030 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3546: /* grant_ident: '*' '.' '*'  */
#line 18032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(
                                            null_clex_str,
                                            Lex_grant_object_name::STAR_STAR)))
              MYSQL_YYABORT;
          }
#line 51041 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3547: /* grant_ident: table_ident  */
#line 18039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 51050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3548: /* user_list: user  */
#line 18047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51059 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3549: /* user_list: user_list ',' user  */
#line 18052 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3550: /* grant_list: grant_user  */
#line 18060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51077 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3551: /* grant_list: grant_list ',' grant_user  */
#line 18065 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51086 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3552: /* user_and_role_list: user_or_role  */
#line 18073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51095 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3553: /* user_and_role_list: user_and_role_list ',' user_or_role  */
#line 18078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3558: /* grant_user: user IDENTIFIED_SYM BY TEXT_STRING  */
#line 18089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 51114 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3559: /* grant_user: user IDENTIFIED_SYM BY PASSWORD_SYM TEXT_STRING  */
#line 18095 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 51124 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3560: /* grant_user: user IDENTIFIED_SYM via_or_with auth_expression  */
#line 18101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 51133 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3561: /* grant_user: user_or_role  */
#line 18106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 51141 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3562: /* auth_expression: auth_token OR_SYM auth_expression  */
#line 18113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 51151 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3563: /* auth_expression: auth_token  */
#line 18119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 51159 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3564: /* auth_token: ident_or_text opt_auth_str  */
#line 18126 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 51168 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3565: /* opt_auth_str: %empty  */
#line 18134 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=thd->calloc<USER_AUTH>(1)))
            MYSQL_YYABORT;
        }
#line 51177 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3566: /* opt_auth_str: using_or_as TEXT_STRING_sys  */
#line 18139 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=thd->calloc<USER_AUTH>(1)))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 51187 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3567: /* opt_auth_str: using_or_as PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 18145 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=thd->calloc<USER_AUTH>(1)))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 51197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3569: /* opt_require_clause: REQUIRE_SYM require_list  */
#line 18155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 51205 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3570: /* opt_require_clause: REQUIRE_SYM SSL_SYM  */
#line 18159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 51213 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3571: /* opt_require_clause: REQUIRE_SYM X509_SYM  */
#line 18163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 51221 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3572: /* opt_require_clause: REQUIRE_SYM NONE_SYM  */
#line 18167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 51229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3573: /* resource_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 18174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 51238 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3574: /* resource_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 18179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 51247 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3575: /* resource_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 18184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 51256 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3576: /* resource_option: MAX_USER_CONNECTIONS_SYM int_num  */
#line 18189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 51265 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3577: /* resource_option: MAX_STATEMENT_TIME_SYM NUM_literal  */
#line 18194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 51274 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3578: /* resource_option_list: resource_option_list resource_option  */
#line 18201 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 51280 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3579: /* resource_option_list: resource_option  */
#line 18202 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 51286 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3580: /* opt_resource_options: %empty  */
#line 18206 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 51292 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3582: /* opt_grant_options: %empty  */
#line 18212 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= NO_ACL;  }
#line 51298 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3583: /* opt_grant_options: WITH grant_option_list  */
#line 18213 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= (yyvsp[0].privilege); }
#line 51304 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3584: /* opt_grant_option: %empty  */
#line 18217 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= NO_ACL;    }
#line 51310 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3585: /* opt_grant_option: WITH GRANT OPTION  */
#line 18218 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= GRANT_ACL; }
#line 51316 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3586: /* grant_option_list: grant_option_list grant_option  */
#line 18222 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.privilege)= (yyvsp[-1].privilege) | (yyvsp[0].privilege); }
#line 51322 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3588: /* grant_option: GRANT OPTION  */
#line 18227 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= GRANT_ACL;}
#line 51328 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3589: /* grant_option: resource_option  */
#line 18228 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= NO_ACL; }
#line 51334 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3590: /* $@251: %empty  */
#line 18233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 51344 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3591: /* begin_stmt_mariadb: BEGIN_MARIADB_SYM $@251 opt_work  */
#line 18238 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 51350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3592: /* compound_statement: sp_proc_stmt_compound_ok  */
#line 18243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 51360 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3593: /* opt_not: %empty  */
#line 18251 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 51366 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3594: /* opt_not: not  */
#line 18252 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 1; }
#line 51372 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3595: /* opt_work: %empty  */
#line 18256 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 51378 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3596: /* opt_work: WORK_SYM  */
#line 18257 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 51384 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3597: /* opt_chain: %empty  */
#line 18262 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 51390 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3598: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 18263 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 51396 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3599: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 18264 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 51402 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3600: /* opt_release: %empty  */
#line 18269 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 51408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3601: /* opt_release: RELEASE_SYM  */
#line 18270 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 51414 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3602: /* opt_release: NO_SYM RELEASE_SYM  */
#line 18271 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 51420 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3603: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 18276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 51433 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3604: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 18288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 51446 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3605: /* rollback: ROLLBACK_SYM opt_work TO_SYM SAVEPOINT_SYM ident  */
#line 18297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 51456 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3606: /* rollback: ROLLBACK_SYM opt_work TO_SYM ident  */
#line 18303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 51466 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3607: /* savepoint: SAVEPOINT_SYM ident  */
#line 18312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 51476 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3608: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 18321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 51486 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3609: /* unit_type_decl: UNION_SYM union_option  */
#line 18334 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 51492 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3610: /* unit_type_decl: INTERSECT_SYM union_option  */
#line 18336 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 51498 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3611: /* unit_type_decl: EXCEPT_SYM union_option  */
#line 18338 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 51504 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3612: /* union_option: %empty  */
#line 18345 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=1; }
#line 51510 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3613: /* union_option: DISTINCT  */
#line 18346 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 51516 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3614: /* union_option: ALL  */
#line 18347 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 51522 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3615: /* query_expression_option: STRAIGHT_JOIN  */
#line 18351 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 51528 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3616: /* query_expression_option: HIGH_PRIORITY  */
#line 18353 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 51538 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3617: /* query_expression_option: DISTINCT  */
#line 18358 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 51544 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3618: /* query_expression_option: UNIQUE_SYM  */
#line 18359 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 51550 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3619: /* query_expression_option: SQL_SMALL_RESULT  */
#line 18360 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_SMALL_RESULT; }
#line 51556 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3620: /* query_expression_option: SQL_BIG_RESULT  */
#line 18361 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_BIG_RESULT; }
#line 51562 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3621: /* query_expression_option: SQL_BUFFER_RESULT  */
#line 18362 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Select->options|= OPTION_BUFFER_RESULT; }
#line 51568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3622: /* query_expression_option: SQL_CALC_FOUND_ROWS  */
#line 18363 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Select->options|= OPTION_FOUND_ROWS; }
#line 51574 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3623: /* query_expression_option: ALL  */
#line 18364 "/home/buildbot/git/sql/sql_yacc.yy"
              { Select->options|= SELECT_ALL; }
#line 51580 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3626: /* no_definer: %empty  */
#line 18380 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 51595 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3627: /* definer: DEFINER_SYM '=' user_or_role  */
#line 18394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 51604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3628: /* view_algorithm: ALGORITHM_SYM '=' UNDEFINED_SYM  */
#line 18407 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 51610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3629: /* view_algorithm: ALGORITHM_SYM '=' MERGE_SYM  */
#line 18408 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 51616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3630: /* view_algorithm: ALGORITHM_SYM '=' TEMPTABLE_SYM  */
#line 18409 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 51622 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3631: /* opt_view_suid: %empty  */
#line 18413 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 51628 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3632: /* opt_view_suid: view_suid  */
#line 18414 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 51634 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3633: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 18418 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 51640 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3634: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 18419 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 51646 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3635: /* view_list_opt: %empty  */
#line 18424 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 51652 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3636: /* view_list_opt: '(' view_list ')'  */
#line 18425 "/home/buildbot/git/sql/sql_yacc.yy"
                            { }
#line 51658 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3637: /* view_list: ident  */
#line 18430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 51668 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3638: /* view_list: view_list ',' ident  */
#line 18436 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 51678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3639: /* $@252: %empty  */
#line 18444 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 51688 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3640: /* view_select: $@252 query_expression view_check_option  */
#line 18451 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 51697 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3641: /* view_check_option: %empty  */
#line 18458 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 51703 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3642: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 18459 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 51709 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3643: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 18460 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 51715 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3644: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 18461 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 51721 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3645: /* trigger_action_order: FOLLOWS_SYM  */
#line 18472 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 51727 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3646: /* trigger_action_order: PRECEDES_SYM  */
#line 18474 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 51733 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3647: /* trigger_follows_precedes_clause: %empty  */
#line 18479 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name= null_clex_str;
            }
#line 51742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3648: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 18485 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 51751 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3649: /* opt_on_update_cols: %empty  */
#line 18493 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              Lex->trg_chistics.on_update_col_names= NULL;
            }
#line 51759 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3650: /* opt_on_update_cols: OF_SYM on_update_cols  */
#line 18497 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              if (Lex->trg_chistics.event != TRG_EVENT_UPDATE)
              {
                thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
                MYSQL_YYABORT;
              }
	    }
#line 51771 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3651: /* on_update_cols: ident  */
#line 18508 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<LEX_CSTRING> *col_names_list;
            LEX_CSTRING *col_name;

            col_names_list=
              new (thd->mem_root) List<LEX_CSTRING>;

            col_name= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));

            if (unlikely(col_names_list == NULL) ||
                unlikely(col_name == NULL) ||
                unlikely(col_names_list->push_back(col_name, thd->mem_root)))
              MYSQL_YYABORT;

            Lex->trg_chistics.on_update_col_names= col_names_list;
          }
#line 51792 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3652: /* on_update_cols: on_update_cols ',' ident  */
#line 18525 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING *col_name;

            col_name= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));

            if (unlikely(col_name == NULL) ||
                unlikely(Lex->trg_chistics.on_update_col_names->push_back
                  (col_name, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51807 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3653: /* $@253: %empty  */
#line 18540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 51816 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3654: /* $@254: %empty  */
#line 18550 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $10 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 51824 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3655: /* $@255: %empty  */
#line 18556 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $14 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 51832 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3656: /* $@256: %empty  */
#line 18561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 51840 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3657: /* $@257: %empty  */
#line 18565 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $19 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-17].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-14].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-14].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 51865 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3658: /* trigger_tail: remember_name opt_if_not_exists $@253 sp_name trg_action_time trg_event opt_on_update_cols ON remember_name $@254 table_ident FOR_SYM remember_name $@255 EACH_SYM ROW_SYM $@256 trigger_follows_precedes_clause $@257 sp_proc_stmt force_lookahead  */
#line 18586 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $22 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                   TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 51888 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3659: /* create_package_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 18615 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 51894 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3660: /* create_package_chistic: sp_suid  */
#line 18617 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 51900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3661: /* create_package_chistics: create_package_chistic  */
#line 18621 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 51906 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3662: /* create_package_chistics: create_package_chistics create_package_chistic  */
#line 18622 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         { }
#line 51912 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3663: /* opt_create_package_chistics: %empty  */
#line 18626 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 51918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3664: /* opt_create_package_chistics: create_package_chistics  */
#line 18627 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { }
#line 51924 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3665: /* $@258: %empty  */
#line 18631 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.init(); }
#line 51930 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3667: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 18639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 51938 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3668: /* xa: XA_SYM END xid opt_suspend  */
#line 18643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 51946 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3669: /* xa: XA_SYM PREPARE_SYM xid  */
#line 18647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 51954 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3670: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 18651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 51962 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3671: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 18655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 51970 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3672: /* xa: XA_SYM RECOVER_SYM opt_format_xid  */
#line 18659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 51979 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3673: /* opt_format_xid: %empty  */
#line 18666 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= false; }
#line 51985 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3674: /* opt_format_xid: FORMAT_SYM '=' ident_or_text  */
#line 18668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 52002 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3675: /* xid: text_string  */
#line 18684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid= thd->alloc<XID>(1))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 52013 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3676: /* xid: text_string ',' text_string  */
#line 18691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid= thd->alloc<XID>(1))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 52024 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3677: /* xid: text_string ',' text_string ',' ulong_num  */
#line 18698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE &&
                                 (yyvsp[0].ulong_num) <= static_cast<ulong>(
                                         std::numeric_limits<int32_t>::max()));
            if (unlikely(!(Lex->xid= thd->alloc<XID>(1))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 52038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3678: /* begin_or_start: BEGIN_MARIADB_SYM  */
#line 18710 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 52044 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3679: /* begin_or_start: BEGIN_ORACLE_SYM  */
#line 18711 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 52050 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3680: /* begin_or_start: START_SYM  */
#line 18712 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 52056 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3681: /* opt_join_or_resume: %empty  */
#line 18716 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_NONE;        }
#line 52062 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3682: /* opt_join_or_resume: JOIN_SYM  */
#line 18717 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_JOIN;        }
#line 52068 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3683: /* opt_join_or_resume: RESUME_SYM  */
#line 18718 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_RESUME;      }
#line 52074 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3684: /* opt_one_phase: %empty  */
#line 18722 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_NONE;        }
#line 52080 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3685: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18723 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_ONE_PHASE;   }
#line 52086 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3686: /* opt_suspend: %empty  */
#line 18728 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_NONE;        }
#line 52092 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3687: /* $@259: %empty  */
#line 18730 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_SUSPEND;     }
#line 52098 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3689: /* opt_migrate: %empty  */
#line 18735 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 52104 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3690: /* opt_migrate: FOR_SYM MIGRATE_SYM  */
#line 18736 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 52110 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3691: /* install: INSTALL_SYM PLUGIN_SYM opt_if_not_exists ident SONAME_SYM TEXT_STRING_sys  */
#line 18741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 52119 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3692: /* install: INSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 52127 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3693: /* uninstall: UNINSTALL_SYM PLUGIN_SYM opt_if_exists ident  */
#line 18753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 52136 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3694: /* uninstall: UNINSTALL_SYM SONAME_SYM opt_if_exists TEXT_STRING_sys  */
#line 18758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 52145 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3695: /* keep_gcc_happy: IMPOSSIBLE_ACTION  */
#line 18767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYERROR;
          }
#line 52153 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3700: /* $@260: %empty  */
#line 19264 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // Direct procedure call (without the CALL keyword)
            Lex_ident_sys tmp(thd, &(yyvsp[0].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp)))
              MYSQL_YYABORT;
          }
#line 52165 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3701: /* sp_statement: ident_cli_directly_assignable $@260 opt_sp_cparam_list  */
#line 19272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 52174 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3702: /* $@261: %empty  */
#line 19277 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-2].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52185 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3703: /* sp_statement: ident_cli_directly_assignable '.' ident $@261 opt_sp_cparam_list  */
#line 19284 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 52194 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3704: /* $@262: %empty  */
#line 19289 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-4].ident_cli));
            if (unlikely(Lex->call_statement_start(thd, &tmp, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52204 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3705: /* sp_statement: ident_cli_directly_assignable '.' ident '.' ident $@262 opt_sp_cparam_list  */
#line 19295 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 52213 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3706: /* sp_if_then_statements: sp_proc_stmts1_implicit_block  */
#line 19302 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { }
#line 52219 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3707: /* sp_case_then_statements: sp_proc_stmts1_implicit_block  */
#line 19306 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { }
#line 52225 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3710: /* $@263: %empty  */
#line 19319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->init_last_field(&lex->sphead->m_return_field_def,
                                 &empty_clex_str);
          }
#line 52235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3712: /* sf_return_type: field_type  */
#line 19329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sf_return_fill_definition((yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 52244 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3713: /* sf_return_type: ROW_SYM row_type_body  */
#line 19334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_row((yyvsp[0].spvar_definition_list)))
              MYSQL_YYABORT;
          }
#line 52253 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3714: /* sf_return_type: sp_decl_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_rowtype_of(
                       Qualified_column_ident(&(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52263 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3715: /* sf_return_type: sp_decl_ident '.' ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19345 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_rowtype_of(
                       Qualified_column_ident(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52273 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3716: /* sf_return_type: sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_type_of(
                       Qualified_column_ident(&(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52283 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3717: /* sf_return_type: sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_type_of(
                       Qualified_column_ident(thd, &(yyvsp[-6].ident_sys), &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3719: /* sp_package_function_body: sp_body  */
#line 19370 "/home/buildbot/git/sql/sql_yacc.yy"
                  { }
#line 52299 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3720: /* sp_package_procedure_body: sp_body  */
#line 19374 "/home/buildbot/git/sql/sql_yacc.yy"
                  { }
#line 52305 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3744: /* row_field_name: ident_directly_assignable  */
#line 19424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52314 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3745: /* $@264: %empty  */
#line 19432 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_while_loop_expression(thd)))
              MYSQL_YYABORT;
          }
#line 52323 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3746: /* while_body: expr_lex LOOP_SYM $@264 sp_proc_stmts1 END LOOP_SYM  */
#line 19437 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 52332 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3747: /* for_loop_statements: LOOP_SYM sp_proc_stmts1 END LOOP_SYM  */
#line 19445 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 52338 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3749: /* sp_block_label: labels_declaration_oracle  */
#line 19455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 52348 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3750: /* sp_opt_default: _empty  */
#line 19464 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.expr_and_query_str)= { nullptr, empty_clex_str}; }
#line 52354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3751: /* sp_opt_default: DEFAULT remember_cpp_ptr expr remember_end  */
#line 19466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }

            (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 52371 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3752: /* sp_opt_default: SET_VAR remember_cpp_ptr expr remember_end  */
#line 19479 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string) );
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }

            (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 52388 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3755: /* sp_opt_inout: _empty  */
#line 19499 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 52394 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3757: /* sp_opt_inout: IN_SYM OUT_SYM  */
#line 19501 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 52400 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3758: /* $@265: %empty  */
#line 19505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 52408 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3759: /* sp_proc_stmts1_implicit_block: $@265 sp_proc_stmts1  */
#line 19509 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 52417 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3769: /* ident_directly_assignable: keyword_directly_assignable  */
#line 19530 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 52426 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3771: /* ident_cli_directly_assignable: keyword_directly_assignable  */
#line 19538 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 52432 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3772: /* $@266: %empty  */
#line 19544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 52443 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3773: /* set_assign: ident_cli_directly_assignable SET_VAR $@266 set_expr_or_default  */
#line 19551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 52457 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3774: /* $@267: %empty  */
#line 19561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 52468 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3775: /* set_assign: ident_cli_directly_assignable '.' ident SET_VAR $@267 set_expr_or_default  */
#line 19568 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->var_list.is_empty());
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 52484 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3776: /* $@268: %empty  */
#line 19580 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!lex->is_trigger_new_or_old_reference(&(yyvsp[-3].ident_sys))))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-4].kwd).pos());
              MYSQL_YYABORT;
            }
            lex->set_stmt_init();
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 52500 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3777: /* set_assign: COLON_ORACLE_SYM ident '.' ident SET_VAR $@268 set_expr_or_default  */
#line 19592 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING tmp= { (yyvsp[-5].ident_sys).str, (yyvsp[-5].ident_sys).length };
            if (unlikely(Lex->set_trigger_field(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr,
                                                (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY,
                                                    false)))
              MYSQL_YYABORT;
          }
#line 52513 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3778: /* labels_declaration_oracle: label_declaration_oracle  */
#line 19604 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 52519 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3779: /* labels_declaration_oracle: labels_declaration_oracle label_declaration_oracle  */
#line 19605 "/home/buildbot/git/sql/sql_yacc.yy"
                                                             { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 52525 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3780: /* label_declaration_oracle: SHIFT_LEFT label_ident SHIFT_RIGHT  */
#line 19610 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_goto_label(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[-1].ident_sys);
          }
#line 52535 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3781: /* opt_exception_clause: _empty  */
#line 19618 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.num)= 0; }
#line 52541 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3782: /* opt_exception_clause: EXCEPTION_ORACLE_SYM exception_handlers  */
#line 19619 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { (yyval.num)= (yyvsp[0].num); }
#line 52547 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3783: /* exception_handlers: exception_handler  */
#line 19623 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 1; }
#line 52553 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3784: /* exception_handlers: exception_handlers exception_handler  */
#line 19624 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= (yyvsp[-1].num) + 1; }
#line 52559 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3785: /* $@269: %empty  */
#line 19629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 52568 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3786: /* exception_handler: WHEN_SYM $@269 sp_hcond_list THEN_SYM sp_proc_stmts1_implicit_block  */
#line 19636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, sp_handler::EXIT)))
              MYSQL_YYABORT;
          }
#line 52577 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3787: /* sp_no_param: _empty  */
#line 19644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= Lex->sphead->m_param_end=
              YYLIP->get_cpp_tok_start() + 1;
          }
#line 52586 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3792: /* opt_trailing_sp_name: _empty  */
#line 19662 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spname)= NULL; }
#line 52592 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3793: /* opt_trailing_sp_name: sp_name  */
#line 19663 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spname)= (yyvsp[0].spname); }
#line 52598 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3794: /* opt_package_routine_end_name: _empty  */
#line 19668 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 52604 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3795: /* opt_package_routine_end_name: ident  */
#line 19669 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 52610 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3798: /* sp_instr_addr: %empty  */
#line 19678 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.sp_instr_addr)= Lex->sphead->instructions(); }
#line 52616 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3799: /* $@270: %empty  */
#line 19682 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 52624 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3800: /* $@271: %empty  */
#line 19686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 52633 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3801: /* $@272: %empty  */
#line 19692 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock))))
              MYSQL_YYABORT;
          }
#line 52643 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3805: /* package_implementation_declare_section_list: package_implementation_declare_section_list1 package_implementation_declare_section_list2  */
#line 19708 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 52649 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3806: /* package_implementation_declare_section: package_implementation_declare_section_list  */
#line 19713 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Add a jump "end of declarations -> start of exceptions"
              (over the executable sectition).
            */
            if (Lex->sp_block_with_exceptions_finalize_declarations(thd))
              MYSQL_YYABORT;
          }
#line 52662 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3807: /* package_implementation_executable_section: END  */
#line 19725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Backpatch the jump generated in
              package_implementation_declare_section
              and generate a backward jump:
              "end of exceptions -> start of the executable section".
            */
            if (unlikely(Lex->sp_block_with_exceptions_add_empty(thd)))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init(0);
          }
#line 52678 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3808: /* package_implementation_executable_section: BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 19736 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                  { (yyval.spblock_handlers)= (yyvsp[-1].spblock_handlers); }
#line 52684 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3810: /* package_implementation_declare_section_list1: package_implementation_declare_section_list1 package_implementation_item_declaration  */
#line 19746 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 52690 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3812: /* package_implementation_declare_section_list2: package_implementation_declare_section_list2 package_implementation_routine_definition  */
#line 19753 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 52696 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3813: /* $@273: %empty  */
#line 19759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex->package_routine_start(thd,
                                   &sp_handler_package_function, (yyvsp[0].ident_sys));
            if (!lex)
              MYSQL_YYABORT;
            thd->lex= lex;
          }
#line 52708 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3814: /* package_specification_function: remember_lex ident $@273 sf_parameters sf_returned_type_clause sp_c_chistics  */
#line 19769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
          }
#line 52719 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3815: /* $@274: %empty  */
#line 19779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex->package_routine_start(thd,
                                   &sp_handler_package_procedure, (yyvsp[0].ident_sys));
            if (!lex)
              MYSQL_YYABORT;
            thd->lex= lex;
          }
#line 52731 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3816: /* package_specification_procedure: remember_lex ident $@274 sp_parameters sp_c_chistics  */
#line 19788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-4].lex);
          }
#line 52742 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3817: /* package_implementation_routine_definition: FUNCTION_SYM package_specification_function package_implementation_function_body ';'  */
#line 19800 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 52754 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3818: /* package_implementation_routine_definition: PROCEDURE_SYM package_specification_procedure package_implementation_procedure_body ';'  */
#line 19809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 52766 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3819: /* package_implementation_routine_definition: package_specification_element  */
#line 19816 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.spblock).init(); }
#line 52772 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3820: /* $@275: %empty  */
#line 19822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 52785 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3821: /* package_implementation_function_body: sp_tail_is remember_lex $@275 sp_package_function_body opt_package_routine_end_name  */
#line 19831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 52796 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3822: /* $@276: %empty  */
#line 19841 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 52809 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3823: /* package_implementation_procedure_body: sp_tail_is remember_lex $@276 sp_package_procedure_body opt_package_routine_end_name  */
#line 19850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 52820 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3828: /* package_specification_element: FUNCTION_SYM package_specification_function ';'  */
#line 19871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 52831 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3829: /* package_specification_element: PROCEDURE_SYM package_specification_procedure ';'  */
#line 19878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 52842 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3830: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM TYPE_SYM sp_opt_default  */
#line 19893 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(thd, (yyvsp[-4].num), (yyvsp[-3].qualified_column_ident),
                           (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 52853 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3831: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars optionally_qualified_column_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM sp_opt_default  */
#line 19902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(thd, (yyvsp[-4].num),
			   (yyvsp[-3].qualified_column_ident), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 52864 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3832: /* sp_param_name_and_mode: sp_param_name sp_opt_inout sp_opt_nocopy  */
#line 19912 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             (yyvsp[-2].spvar)->mode= (yyvsp[-1].spvar_mode);
             (yyval.spvar)= (yyvsp[-2].spvar);
          }
#line 52873 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3833: /* sp_param_init_vars: sp_param_name_and_mode_init_vars field_type  */
#line 19920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar), (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 52882 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3834: /* sp_param_init_vars: sp_param_name_and_mode_init_vars ROW_SYM row_type_body  */
#line 19925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 52891 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3836: /* sp_param_anchored: sp_param_name_and_mode_init_vars sp_decl_ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52900 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3837: /* sp_param_anchored: sp_param_name_and_mode_init_vars sp_decl_ident '.' ident '.' ident PERCENT_ORACLE_SYM TYPE_SYM  */
#line 19939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar), (yyvsp[-6].ident_sys), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52909 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3838: /* sp_param_anchored: sp_param_name_and_mode_init_vars sp_decl_ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-3].spvar), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52918 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3839: /* sp_param_anchored: sp_param_name_and_mode_init_vars sp_decl_ident '.' ident PERCENT_ORACLE_SYM ROWTYPE_ORACLE_SYM  */
#line 19949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 52927 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3840: /* $@277: %empty  */
#line 19958 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 52937 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3841: /* sf_c_chistics_and_body_standalone: sp_c_chistics $@277 sp_tail_is sp_body force_lookahead  */
#line 19964 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 52946 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3842: /* $@278: %empty  */
#line 19972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 52957 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3843: /* $@279: %empty  */
#line 19980 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 52966 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3844: /* sp_tail_standalone: sp_name $@278 opt_sp_parenthesized_pdparam_list sp_c_chistics $@279 sp_tail_is sp_body opt_trailing_sp_name  */
#line 19987 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_procedure_standalone(thd, (yyvsp[0].spname))))
              MYSQL_YYABORT;
          }
#line 52975 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3845: /* $@280: %empty  */
#line 19998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 52984 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3846: /* create_routine: create_or_replace definer_opt PROCEDURE_SYM opt_if_not_exists $@280 sp_tail_standalone  */
#line 20003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_create_routine_finalize();
          }
#line 52992 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3847: /* $@281: %empty  */
#line 20008 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53001 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3848: /* create_routine: create_or_replace definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@281 sf_parameters sf_returned_type_clause sf_c_chistics_and_body_standalone opt_trailing_sp_name  */
#line 20016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53010 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3849: /* $@282: %empty  */
#line 20022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53019 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3850: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@282 sf_parameters sf_returned_type_clause sf_c_chistics_and_body_standalone opt_trailing_sp_name  */
#line 20030 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53028 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3851: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 20036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 53038 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3852: /* $@283: %empty  */
#line 20043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd, &sp_handler_package_spec,
                                                (yyvsp[-1].spname), (yyvsp[-5].object_ddl_options) | (yyvsp[-2].object_ddl_options),
                                                Lex->sp_chistics))))
              MYSQL_YYABORT;
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 53052 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3853: /* create_routine: create_or_replace definer_opt sp_handler_package_spec opt_if_not_exists sp_name opt_create_package_chistics_init $@283 sp_tail_is opt_package_specification_element_list END remember_end_opt opt_trailing_sp_name  */
#line 20055 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-7].spname), (yyvsp[0].spname), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 53061 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3854: /* $@284: %empty  */
#line 20061 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd, &sp_handler_package_body,
                                                (yyvsp[-1].spname), (yyvsp[-5].object_ddl_options) | (yyvsp[-2].object_ddl_options),
                                                Lex->sp_chistics))))
              MYSQL_YYABORT;
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
            Lex->sp_block_init(thd);
          }
#line 53076 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3855: /* $@285: %empty  */
#line 20074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 53086 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3856: /* create_routine: create_or_replace definer_opt sp_handler_package_body opt_if_not_exists sp_name opt_create_package_chistics_init $@284 sp_tail_is package_implementation_declare_section package_implementation_executable_section $@285 remember_end_opt opt_trailing_sp_name  */
#line 20080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 53095 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3857: /* opt_sp_decl_body_list: _empty  */
#line 20091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).init();
          }
#line 53103 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3858: /* opt_sp_decl_body_list: sp_decl_body_list  */
#line 20094 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.spblock)= (yyvsp[0].spblock); }
#line 53109 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3859: /* $@286: %empty  */
#line 20099 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->sp_add_instr_cpush_for_cursors(thd, Lex->spcont)))
              MYSQL_YYABORT;
          }
#line 53118 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3860: /* sp_decl_body_list: sp_decl_non_handler_list $@286 opt_sp_decl_handler_list  */
#line 20104 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[0].spblock));
          }
#line 53126 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3862: /* sp_decl_non_handler_list: sp_decl_non_handler ';'  */
#line 20111 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 53132 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3863: /* sp_decl_non_handler_list: sp_decl_non_handler_list sp_decl_non_handler ';'  */
#line 20113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 53140 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3864: /* sp_decl_handler_list: sp_decl_handler ';'  */
#line 20119 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 53146 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3865: /* sp_decl_handler_list: sp_decl_handler_list sp_decl_handler ';'  */
#line 20121 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).join((yyvsp[-2].spblock), (yyvsp[-1].spblock));
          }
#line 53154 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3866: /* opt_sp_decl_handler_list: _empty  */
#line 20127 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.spblock).init(); }
#line 53160 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3869: /* sp_decl_non_handler: ident_directly_assignable CONDITION_SYM FOR_SYM sp_cond  */
#line 20134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->declare_condition(thd,
                                                        Lex_ident_column((yyvsp[-3].ident_sys)),
                                                        (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 53173 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3870: /* sp_decl_non_handler: ident_directly_assignable EXCEPTION_ORACLE_SYM  */
#line 20143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_condition_value *spcond= new (thd->mem_root)
                                        sp_condition_value_user_defined();
            if (unlikely(!spcond) ||
                unlikely(Lex->spcont->declare_condition(thd,
                                                        Lex_ident_column((yyvsp[-1].ident_sys)),
                                                        spcond)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 53189 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3871: /* $@287: %empty  */
#line 20155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 53197 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3872: /* sp_decl_non_handler: CURSOR_SYM ident_directly_assignable $@287 opt_parenthesized_cursor_formal_parameters IS sp_cursor_stmt  */
#line 20160 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-4].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, false)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 53211 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3873: /* sp_decl_non_handler: TYPE_SYM ident_directly_assignable IS RECORD_SYM rec_type_body  */
#line 20170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->
                          declare_record(thd, Lex_ident_column((yyvsp[-3].ident_sys)), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 53223 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3879: /* sp_proc_stmt: labels_declaration_oracle sp_labelable_stmt  */
#line 20186 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 53229 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3890: /* sp_labelable_stmt: NULL_SYM  */
#line 20200 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 53235 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3895: /* $@288: %empty  */
#line 20214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 53245 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3896: /* sp_labeled_block: sp_block_label BEGIN_ORACLE_SYM $@288 sp_block_statements_and_exceptions END sp_opt_label  */
#line 20222 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-2].spblock_handlers)), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 53254 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3897: /* $@289: %empty  */
#line 20228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 53262 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3898: /* $@290: %empty  */
#line 20232 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 53271 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3899: /* sp_labeled_block: sp_block_label DECLARE_ORACLE_SYM $@289 opt_sp_decl_body_list $@290 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END sp_opt_label  */
#line 20240 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].spblock).hndlrs+= (yyvsp[-2].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-5].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 53281 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3902: /* $@291: %empty  */
#line 20254 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 53293 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3903: /* sp_unlabeled_block: BEGIN_ORACLE_SYM opt_not_atomic $@291 sp_block_statements_and_exceptions END  */
#line 20263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, Lex_spblock((yyvsp[-1].spblock_handlers)))))
              MYSQL_YYABORT;
          }
#line 53302 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3904: /* $@292: %empty  */
#line 20268 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 53312 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3905: /* $@293: %empty  */
#line 20274 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_declarations(thd)))
              MYSQL_YYABORT;
          }
#line 53321 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3906: /* sp_unlabeled_block: DECLARE_ORACLE_SYM $@292 opt_sp_decl_body_list $@293 BEGIN_ORACLE_SYM sp_block_statements_and_exceptions END  */
#line 20281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-4].spblock).hndlrs+= (yyvsp[-1].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-4].spblock))))
              MYSQL_YYABORT;
          }
#line 53331 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3907: /* $@294: %empty  */
#line 20291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_executable_section(thd, (yyvsp[-1].sp_instr_addr))))
              MYSQL_YYABORT;
          }
#line 53340 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;

  case 3908: /* sp_block_statements_and_exceptions: sp_instr_addr sp_proc_stmts $@294 opt_exception_clause  */
#line 20296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_with_exceptions_finalize_exceptions(thd, (yyvsp[-3].sp_instr_addr), (yyvsp[0].num))))
              MYSQL_YYABORT;
            (yyval.spblock_handlers).init((yyvsp[0].num));
          }
#line 53350 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"
    break;


#line 53354 "/home/buildbot/git/mkdist/sql/yy_oracle.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (thd, YY_("syntax error"));
    }

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

