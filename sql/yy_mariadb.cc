/* A Bison parser, made by GNU Bison 3.8.2.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015, 2018-2021 Free Software Foundation,
   Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <https://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* DO NOT RELY ON FEATURES THAT ARE NOT DOCUMENTED in the manual,
   especially those whose name start with YY_ or yy_.  They are
   private implementation details that can be changed or removed.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output, and Bison version.  */
#define YYBISON 30802

/* Bison version string.  */
#define YYBISON_VERSION "3.8.2"

/* Skeleton name.  */
#define YYSKELETON_NAME "/home/buildbot/git/mkdist/sql/myskel.m4"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs

/* First part of user prologue.  */
#line 25 "/home/buildbot/git/sql/sql_yacc.yy"

#define YYLIP  (& thd->m_parser_state->m_lip)
#define YYPS   (& thd->m_parser_state->m_yacc)
#define YYCSCL (thd->variables.character_set_client)

#define MYSQL_YACC
#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (thd->lex)

#define Select Lex->current_select
#include "mariadb.h"
#include "sql_priv.h"
#include "sql_parse.h"                        /* comp_*_creator */
#include "sql_table.h"                        /* primary_key_name */
#include "sql_partition.h"  /* partition_info, HASH_PARTITION */
#include "sql_class.h"      /* Key_part_spec, enum_filetype, Diag_condition_item_name */
#include "slave.h"
#include "lex_symbol.h"
#include "item_create.h"
#include "sp_head.h"
#include "sp_instr.h"                          // classes sp_instr,...
#include "sp_rcontext.h"
#include "sp.h"
#include "sql_show.h"
#include "sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql_handler.h"                       // Sql_cmd_handler_*
#include "sql_signal.h"
#include "sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql_cte.h"
#include "sql_window.h"
#include "item_windowfunc.h"
#include "event_parse_data.h"
#include "create_options.h"
#include <myisam.h>
#include <myisammrg.h>
#include "keycaches.h"
#include "set_var.h"
#include "rpl_mi.h"
#include "lex_token.h"
#include "sql_lex.h"
#include "sql_sequence.h"
#include "my_base.h"
#include "sql_type_json.h"
#include "json_table.h"
#include "sql_update.h"
#include "sql_delete.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
/* warning C4102: 'yyexhaustedlab': unreferenced label */
#pragma warning (disable : 4065 4102)
#endif
#if defined (__GNUC__) || defined (__clang__)
#pragma GCC diagnostic ignored "-Wunused-label" /* yyexhaustedlab: */
#endif

/* Stack size 28200 with clang for MYSQLparse() and ORAparse() */
PRAGMA_DISABLE_CHECK_STACK_FRAME

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F)               \
  {                                           \
    size_t val= *(F);                         \
    if (unlikely(my_yyoverflow((B), (D), &val))) \
    {                                         \
      yyerror(thd, (char*) (A));              \
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(F)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT                         \
  do                                          \
  {                                           \
    YYABORT;                                  \
  } while (0)

#define MYSQL_YYABORT_UNLESS(A)                  \
  if (unlikely(!(A)))                            \
  {                                              \
    thd->parse_error();                          \
    MYSQL_YYABORT;                               \
  }

#define my_yyabort_error(A)                      \
  do { my_error A; MYSQL_YYABORT; } while(0)

#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


static Item* escape(THD *thd)
{
  thd->lex->escape_used= false;
  const char *esc= thd->variables.sql_mode & MODE_NO_BACKSLASH_ESCAPES ? "" : "\\";
  return new (thd->mem_root) Item_string_ascii(thd, esc, MY_TEST(esc[0]));
}


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error, a parse error or an out-of-memory
  condition occurs. This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros. This is why these
  macros should not be used (use MYSQL_YYABORT/MYSQL_YYACCEPT
  instead).

  The parser will abort immediately after invoking this callback.

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup. 
  In semantic actions, please use thd->parse_error() or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static void yyerror(THD *thd, const char *s)
{
  /* "parse error" changed into "syntax error" between bison 1.75 and 1.875 */
  if (strcmp(s,"parse error") == 0 || strcmp(s,"syntax error") == 0)
    s= ER_THD(thd, ER_SYNTAX_ERROR);
  thd->parse_error(s, 0);
}


#ifndef DBUG_OFF
#define __CONCAT_UNDERSCORED(x,y)  x ## _ ## y
#define _CONCAT_UNDERSCORED(x,y)   __CONCAT_UNDERSCORED(x,y)
void _CONCAT_UNDERSCORED(turn_parser_debug_on,yyparse)()
{
  /*
     MYSQLdebug is in sql/yy_*.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug-dbug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug-dbug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

#ifndef _AIX
  extern int yydebug;
#else
  static int yydebug;
#endif
  yydebug= 1;
}
#endif



#line 247 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"

# ifndef YY_CAST
#  ifdef __cplusplus
#   define YY_CAST(Type, Val) static_cast<Type> (Val)
#   define YY_REINTERPRET_CAST(Type, Val) reinterpret_cast<Type> (Val)
#  else
#   define YY_CAST(Type, Val) ((Type) (Val))
#   define YY_REINTERPRET_CAST(Type, Val) ((Type) (Val))
#  endif
# endif
# ifndef YY_NULLPTR
#  if defined __cplusplus
#   if 201103L <= __cplusplus
#    define YY_NULLPTR nullptr
#   else
#    define YY_NULLPTR 0
#   endif
#  else
#   define YY_NULLPTR ((void*)0)
#  endif
# endif

#include "yy_mariadb.hh"
/* Symbol kind.  */
enum yysymbol_kind_t
{
  YYSYMBOL_YYEMPTY = -2,
  YYSYMBOL_YYEOF = 0,                      /* "end of file"  */
  YYSYMBOL_YYerror = 1,                    /* error  */
  YYSYMBOL_YYUNDEF = 2,                    /* "invalid token"  */
  YYSYMBOL_3_ = 3,                         /* '@'  */
  YYSYMBOL_ABORT_SYM = 4,                  /* ABORT_SYM  */
  YYSYMBOL_IMPOSSIBLE_ACTION = 5,          /* IMPOSSIBLE_ACTION  */
  YYSYMBOL_FORCE_LOOKAHEAD = 6,            /* FORCE_LOOKAHEAD  */
  YYSYMBOL_END_OF_INPUT = 7,               /* END_OF_INPUT  */
  YYSYMBOL_COLON_ORACLE_SYM = 8,           /* COLON_ORACLE_SYM  */
  YYSYMBOL_PARAM_MARKER = 9,               /* PARAM_MARKER  */
  YYSYMBOL_FOR_SYSTEM_TIME_SYM = 10,       /* FOR_SYSTEM_TIME_SYM  */
  YYSYMBOL_LEFT_PAREN_ALT = 11,            /* LEFT_PAREN_ALT  */
  YYSYMBOL_LEFT_PAREN_WITH = 12,           /* LEFT_PAREN_WITH  */
  YYSYMBOL_LEFT_PAREN_LIKE = 13,           /* LEFT_PAREN_LIKE  */
  YYSYMBOL_ORACLE_CONCAT_SYM = 14,         /* ORACLE_CONCAT_SYM  */
  YYSYMBOL_PERCENT_ORACLE_SYM = 15,        /* PERCENT_ORACLE_SYM  */
  YYSYMBOL_WITH_CUBE_SYM = 16,             /* WITH_CUBE_SYM  */
  YYSYMBOL_WITH_ROLLUP_SYM = 17,           /* WITH_ROLLUP_SYM  */
  YYSYMBOL_WITH_SYSTEM_SYM = 18,           /* WITH_SYSTEM_SYM  */
  YYSYMBOL_IDENT = 19,                     /* IDENT  */
  YYSYMBOL_IDENT_QUOTED = 20,              /* IDENT_QUOTED  */
  YYSYMBOL_LEX_HOSTNAME = 21,              /* LEX_HOSTNAME  */
  YYSYMBOL_UNDERSCORE_CHARSET = 22,        /* UNDERSCORE_CHARSET  */
  YYSYMBOL_BIN_NUM = 23,                   /* BIN_NUM  */
  YYSYMBOL_DECIMAL_NUM = 24,               /* DECIMAL_NUM  */
  YYSYMBOL_FLOAT_NUM = 25,                 /* FLOAT_NUM  */
  YYSYMBOL_HEX_NUM = 26,                   /* HEX_NUM  */
  YYSYMBOL_HEX_STRING = 27,                /* HEX_STRING  */
  YYSYMBOL_LONG_NUM = 28,                  /* LONG_NUM  */
  YYSYMBOL_NCHAR_STRING = 29,              /* NCHAR_STRING  */
  YYSYMBOL_NUM = 30,                       /* NUM  */
  YYSYMBOL_TEXT_STRING = 31,               /* TEXT_STRING  */
  YYSYMBOL_ULONGLONG_NUM = 32,             /* ULONGLONG_NUM  */
  YYSYMBOL_AND_AND_SYM = 33,               /* AND_AND_SYM  */
  YYSYMBOL_DOT_DOT_SYM = 34,               /* DOT_DOT_SYM  */
  YYSYMBOL_EQUAL_SYM = 35,                 /* EQUAL_SYM  */
  YYSYMBOL_GE = 36,                        /* GE  */
  YYSYMBOL_LE = 37,                        /* LE  */
  YYSYMBOL_MYSQL_CONCAT_SYM = 38,          /* MYSQL_CONCAT_SYM  */
  YYSYMBOL_NE = 39,                        /* NE  */
  YYSYMBOL_NOT2_SYM = 40,                  /* NOT2_SYM  */
  YYSYMBOL_OR2_SYM = 41,                   /* OR2_SYM  */
  YYSYMBOL_SET_VAR = 42,                   /* SET_VAR  */
  YYSYMBOL_SHIFT_LEFT = 43,                /* SHIFT_LEFT  */
  YYSYMBOL_SHIFT_RIGHT = 44,               /* SHIFT_RIGHT  */
  YYSYMBOL_ACCESSIBLE_SYM = 45,            /* ACCESSIBLE_SYM  */
  YYSYMBOL_ADD = 46,                       /* ADD  */
  YYSYMBOL_ALL = 47,                       /* ALL  */
  YYSYMBOL_ALTER = 48,                     /* ALTER  */
  YYSYMBOL_ANALYZE_SYM = 49,               /* ANALYZE_SYM  */
  YYSYMBOL_AND_SYM = 50,                   /* AND_SYM  */
  YYSYMBOL_ASC = 51,                       /* ASC  */
  YYSYMBOL_ASENSITIVE_SYM = 52,            /* ASENSITIVE_SYM  */
  YYSYMBOL_AS = 53,                        /* AS  */
  YYSYMBOL_BEFORE_SYM = 54,                /* BEFORE_SYM  */
  YYSYMBOL_BETWEEN_SYM = 55,               /* BETWEEN_SYM  */
  YYSYMBOL_BIGINT = 56,                    /* BIGINT  */
  YYSYMBOL_BINARY = 57,                    /* BINARY  */
  YYSYMBOL_BIT_AND = 58,                   /* BIT_AND  */
  YYSYMBOL_BIT_OR = 59,                    /* BIT_OR  */
  YYSYMBOL_BIT_XOR = 60,                   /* BIT_XOR  */
  YYSYMBOL_BLOB_MARIADB_SYM = 61,          /* BLOB_MARIADB_SYM  */
  YYSYMBOL_BLOB_ORACLE_SYM = 62,           /* BLOB_ORACLE_SYM  */
  YYSYMBOL_BODY_ORACLE_SYM = 63,           /* BODY_ORACLE_SYM  */
  YYSYMBOL_BOTH = 64,                      /* BOTH  */
  YYSYMBOL_BY = 65,                        /* BY  */
  YYSYMBOL_CALL_SYM = 66,                  /* CALL_SYM  */
  YYSYMBOL_CASCADE = 67,                   /* CASCADE  */
  YYSYMBOL_CASE_SYM = 68,                  /* CASE_SYM  */
  YYSYMBOL_CAST_SYM = 69,                  /* CAST_SYM  */
  YYSYMBOL_CHANGE = 70,                    /* CHANGE  */
  YYSYMBOL_CHAR_SYM = 71,                  /* CHAR_SYM  */
  YYSYMBOL_CHECK_SYM = 72,                 /* CHECK_SYM  */
  YYSYMBOL_COLLATE_SYM = 73,               /* COLLATE_SYM  */
  YYSYMBOL_CONDITION_SYM = 74,             /* CONDITION_SYM  */
  YYSYMBOL_CONSTRAINT = 75,                /* CONSTRAINT  */
  YYSYMBOL_CONTINUE_MARIADB_SYM = 76,      /* CONTINUE_MARIADB_SYM  */
  YYSYMBOL_CONTINUE_ORACLE_SYM = 77,       /* CONTINUE_ORACLE_SYM  */
  YYSYMBOL_CONVERT_SYM = 78,               /* CONVERT_SYM  */
  YYSYMBOL_COUNT_SYM = 79,                 /* COUNT_SYM  */
  YYSYMBOL_CREATE = 80,                    /* CREATE  */
  YYSYMBOL_CROSS = 81,                     /* CROSS  */
  YYSYMBOL_CUME_DIST_SYM = 82,             /* CUME_DIST_SYM  */
  YYSYMBOL_CURDATE = 83,                   /* CURDATE  */
  YYSYMBOL_CURRENT_ROLE = 84,              /* CURRENT_ROLE  */
  YYSYMBOL_CURRENT_USER = 85,              /* CURRENT_USER  */
  YYSYMBOL_CURSOR_SYM = 86,                /* CURSOR_SYM  */
  YYSYMBOL_CURTIME = 87,                   /* CURTIME  */
  YYSYMBOL_DATABASE = 88,                  /* DATABASE  */
  YYSYMBOL_DATABASES = 89,                 /* DATABASES  */
  YYSYMBOL_DATE_ADD_INTERVAL = 90,         /* DATE_ADD_INTERVAL  */
  YYSYMBOL_DATE_SUB_INTERVAL = 91,         /* DATE_SUB_INTERVAL  */
  YYSYMBOL_DAY_HOUR_SYM = 92,              /* DAY_HOUR_SYM  */
  YYSYMBOL_DAY_MICROSECOND_SYM = 93,       /* DAY_MICROSECOND_SYM  */
  YYSYMBOL_DAY_MINUTE_SYM = 94,            /* DAY_MINUTE_SYM  */
  YYSYMBOL_DAY_SECOND_SYM = 95,            /* DAY_SECOND_SYM  */
  YYSYMBOL_DECIMAL_SYM = 96,               /* DECIMAL_SYM  */
  YYSYMBOL_DECLARE_MARIADB_SYM = 97,       /* DECLARE_MARIADB_SYM  */
  YYSYMBOL_DECLARE_ORACLE_SYM = 98,        /* DECLARE_ORACLE_SYM  */
  YYSYMBOL_DEFAULT = 99,                   /* DEFAULT  */
  YYSYMBOL_DELETE_DOMAIN_ID_SYM = 100,     /* DELETE_DOMAIN_ID_SYM  */
  YYSYMBOL_DELETE_SYM = 101,               /* DELETE_SYM  */
  YYSYMBOL_DENSE_RANK_SYM = 102,           /* DENSE_RANK_SYM  */
  YYSYMBOL_DESCRIBE = 103,                 /* DESCRIBE  */
  YYSYMBOL_DESC = 104,                     /* DESC  */
  YYSYMBOL_DETERMINISTIC_SYM = 105,        /* DETERMINISTIC_SYM  */
  YYSYMBOL_DISTINCT = 106,                 /* DISTINCT  */
  YYSYMBOL_DIV_SYM = 107,                  /* DIV_SYM  */
  YYSYMBOL_DO_DOMAIN_IDS_SYM = 108,        /* DO_DOMAIN_IDS_SYM  */
  YYSYMBOL_DOUBLE_SYM = 109,               /* DOUBLE_SYM  */
  YYSYMBOL_DROP = 110,                     /* DROP  */
  YYSYMBOL_DUAL_SYM = 111,                 /* DUAL_SYM  */
  YYSYMBOL_EACH_SYM = 112,                 /* EACH_SYM  */
  YYSYMBOL_ELSEIF_MARIADB_SYM = 113,       /* ELSEIF_MARIADB_SYM  */
  YYSYMBOL_ELSE = 114,                     /* ELSE  */
  YYSYMBOL_ELSIF_ORACLE_SYM = 115,         /* ELSIF_ORACLE_SYM  */
  YYSYMBOL_EMPTY_SYM = 116,                /* EMPTY_SYM  */
  YYSYMBOL_ENCLOSED = 117,                 /* ENCLOSED  */
  YYSYMBOL_ESCAPED = 118,                  /* ESCAPED  */
  YYSYMBOL_EXCEPT_SYM = 119,               /* EXCEPT_SYM  */
  YYSYMBOL_EXISTS = 120,                   /* EXISTS  */
  YYSYMBOL_EXTRACT_SYM = 121,              /* EXTRACT_SYM  */
  YYSYMBOL_FALSE_SYM = 122,                /* FALSE_SYM  */
  YYSYMBOL_FETCH_SYM = 123,                /* FETCH_SYM  */
  YYSYMBOL_FIRST_VALUE_SYM = 124,          /* FIRST_VALUE_SYM  */
  YYSYMBOL_FLOAT_SYM = 125,                /* FLOAT_SYM  */
  YYSYMBOL_FOREIGN = 126,                  /* FOREIGN  */
  YYSYMBOL_FOR_SYM = 127,                  /* FOR_SYM  */
  YYSYMBOL_FROM = 128,                     /* FROM  */
  YYSYMBOL_FULLTEXT_SYM = 129,             /* FULLTEXT_SYM  */
  YYSYMBOL_GOTO_ORACLE_SYM = 130,          /* GOTO_ORACLE_SYM  */
  YYSYMBOL_GRANT = 131,                    /* GRANT  */
  YYSYMBOL_GROUP_CONCAT_SYM = 132,         /* GROUP_CONCAT_SYM  */
  YYSYMBOL_JSON_ARRAYAGG_SYM = 133,        /* JSON_ARRAYAGG_SYM  */
  YYSYMBOL_JSON_OBJECTAGG_SYM = 134,       /* JSON_OBJECTAGG_SYM  */
  YYSYMBOL_JSON_TABLE_SYM = 135,           /* JSON_TABLE_SYM  */
  YYSYMBOL_GROUP_SYM = 136,                /* GROUP_SYM  */
  YYSYMBOL_HAVING = 137,                   /* HAVING  */
  YYSYMBOL_HOUR_MICROSECOND_SYM = 138,     /* HOUR_MICROSECOND_SYM  */
  YYSYMBOL_HOUR_MINUTE_SYM = 139,          /* HOUR_MINUTE_SYM  */
  YYSYMBOL_HOUR_SECOND_SYM = 140,          /* HOUR_SECOND_SYM  */
  YYSYMBOL_IF_SYM = 141,                   /* IF_SYM  */
  YYSYMBOL_IGNORE_DOMAIN_IDS_SYM = 142,    /* IGNORE_DOMAIN_IDS_SYM  */
  YYSYMBOL_IGNORE_SYM = 143,               /* IGNORE_SYM  */
  YYSYMBOL_IGNORED_SYM = 144,              /* IGNORED_SYM  */
  YYSYMBOL_INDEX_SYM = 145,                /* INDEX_SYM  */
  YYSYMBOL_INFILE = 146,                   /* INFILE  */
  YYSYMBOL_INNER_SYM = 147,                /* INNER_SYM  */
  YYSYMBOL_INOUT_SYM = 148,                /* INOUT_SYM  */
  YYSYMBOL_INSENSITIVE_SYM = 149,          /* INSENSITIVE_SYM  */
  YYSYMBOL_INSERT = 150,                   /* INSERT  */
  YYSYMBOL_IN_SYM = 151,                   /* IN_SYM  */
  YYSYMBOL_INTERSECT_SYM = 152,            /* INTERSECT_SYM  */
  YYSYMBOL_INTERVAL_SYM = 153,             /* INTERVAL_SYM  */
  YYSYMBOL_INTO = 154,                     /* INTO  */
  YYSYMBOL_INT_SYM = 155,                  /* INT_SYM  */
  YYSYMBOL_IS = 156,                       /* IS  */
  YYSYMBOL_ITERATE_SYM = 157,              /* ITERATE_SYM  */
  YYSYMBOL_JOIN_SYM = 158,                 /* JOIN_SYM  */
  YYSYMBOL_KEYS = 159,                     /* KEYS  */
  YYSYMBOL_KEY_SYM = 160,                  /* KEY_SYM  */
  YYSYMBOL_KILL_SYM = 161,                 /* KILL_SYM  */
  YYSYMBOL_LAG_SYM = 162,                  /* LAG_SYM  */
  YYSYMBOL_LEADING = 163,                  /* LEADING  */
  YYSYMBOL_LEAD_SYM = 164,                 /* LEAD_SYM  */
  YYSYMBOL_LEAVE_SYM = 165,                /* LEAVE_SYM  */
  YYSYMBOL_LEFT = 166,                     /* LEFT  */
  YYSYMBOL_LIKE = 167,                     /* LIKE  */
  YYSYMBOL_LIMIT = 168,                    /* LIMIT  */
  YYSYMBOL_LINEAR_SYM = 169,               /* LINEAR_SYM  */
  YYSYMBOL_LINES = 170,                    /* LINES  */
  YYSYMBOL_LOAD = 171,                     /* LOAD  */
  YYSYMBOL_LOCALTIMESTAMP = 172,           /* LOCALTIMESTAMP  */
  YYSYMBOL_LOCATOR_SYM = 173,              /* LOCATOR_SYM  */
  YYSYMBOL_LOCK_SYM = 174,                 /* LOCK_SYM  */
  YYSYMBOL_LONGBLOB = 175,                 /* LONGBLOB  */
  YYSYMBOL_LONG_SYM = 176,                 /* LONG_SYM  */
  YYSYMBOL_LONGTEXT = 177,                 /* LONGTEXT  */
  YYSYMBOL_LOOP_SYM = 178,                 /* LOOP_SYM  */
  YYSYMBOL_LOW_PRIORITY = 179,             /* LOW_PRIORITY  */
  YYSYMBOL_MASTER_SSL_VERIFY_SERVER_CERT_SYM = 180, /* MASTER_SSL_VERIFY_SERVER_CERT_SYM  */
  YYSYMBOL_MATCH = 181,                    /* MATCH  */
  YYSYMBOL_MAX_SYM = 182,                  /* MAX_SYM  */
  YYSYMBOL_MAXVALUE_SYM = 183,             /* MAXVALUE_SYM  */
  YYSYMBOL_MEDIAN_SYM = 184,               /* MEDIAN_SYM  */
  YYSYMBOL_MEDIUMBLOB = 185,               /* MEDIUMBLOB  */
  YYSYMBOL_MEDIUMINT = 186,                /* MEDIUMINT  */
  YYSYMBOL_MEDIUMTEXT = 187,               /* MEDIUMTEXT  */
  YYSYMBOL_MIN_SYM = 188,                  /* MIN_SYM  */
  YYSYMBOL_MINUS_ORACLE_SYM = 189,         /* MINUS_ORACLE_SYM  */
  YYSYMBOL_MINUTE_MICROSECOND_SYM = 190,   /* MINUTE_MICROSECOND_SYM  */
  YYSYMBOL_MINUTE_SECOND_SYM = 191,        /* MINUTE_SECOND_SYM  */
  YYSYMBOL_MODIFIES_SYM = 192,             /* MODIFIES_SYM  */
  YYSYMBOL_MOD_SYM = 193,                  /* MOD_SYM  */
  YYSYMBOL_NATURAL = 194,                  /* NATURAL  */
  YYSYMBOL_NEG = 195,                      /* NEG  */
  YYSYMBOL_NESTED_SYM = 196,               /* NESTED_SYM  */
  YYSYMBOL_NOT_SYM = 197,                  /* NOT_SYM  */
  YYSYMBOL_NO_WRITE_TO_BINLOG = 198,       /* NO_WRITE_TO_BINLOG  */
  YYSYMBOL_NOW_SYM = 199,                  /* NOW_SYM  */
  YYSYMBOL_NTH_VALUE_SYM = 200,            /* NTH_VALUE_SYM  */
  YYSYMBOL_NTILE_SYM = 201,                /* NTILE_SYM  */
  YYSYMBOL_NULL_SYM = 202,                 /* NULL_SYM  */
  YYSYMBOL_NUMERIC_SYM = 203,              /* NUMERIC_SYM  */
  YYSYMBOL_ON = 204,                       /* ON  */
  YYSYMBOL_OPTIMIZE = 205,                 /* OPTIMIZE  */
  YYSYMBOL_OPTIONALLY = 206,               /* OPTIONALLY  */
  YYSYMBOL_ORDER_SYM = 207,                /* ORDER_SYM  */
  YYSYMBOL_ORDINALITY_SYM = 208,           /* ORDINALITY_SYM  */
  YYSYMBOL_OR_SYM = 209,                   /* OR_SYM  */
  YYSYMBOL_OTHERS_ORACLE_SYM = 210,        /* OTHERS_ORACLE_SYM  */
  YYSYMBOL_OUTER = 211,                    /* OUTER  */
  YYSYMBOL_OUTFILE = 212,                  /* OUTFILE  */
  YYSYMBOL_OUT_SYM = 213,                  /* OUT_SYM  */
  YYSYMBOL_OVER_SYM = 214,                 /* OVER_SYM  */
  YYSYMBOL_PACKAGE_ORACLE_SYM = 215,       /* PACKAGE_ORACLE_SYM  */
  YYSYMBOL_PAGE_CHECKSUM_SYM = 216,        /* PAGE_CHECKSUM_SYM  */
  YYSYMBOL_PARSE_VCOL_EXPR_SYM = 217,      /* PARSE_VCOL_EXPR_SYM  */
  YYSYMBOL_PARTITION_SYM = 218,            /* PARTITION_SYM  */
  YYSYMBOL_PATH_SYM = 219,                 /* PATH_SYM  */
  YYSYMBOL_PERCENTILE_CONT_SYM = 220,      /* PERCENTILE_CONT_SYM  */
  YYSYMBOL_PERCENTILE_DISC_SYM = 221,      /* PERCENTILE_DISC_SYM  */
  YYSYMBOL_PERCENT_RANK_SYM = 222,         /* PERCENT_RANK_SYM  */
  YYSYMBOL_PORTION_SYM = 223,              /* PORTION_SYM  */
  YYSYMBOL_POSITION_SYM = 224,             /* POSITION_SYM  */
  YYSYMBOL_PRECISION = 225,                /* PRECISION  */
  YYSYMBOL_PRIMARY_SYM = 226,              /* PRIMARY_SYM  */
  YYSYMBOL_PROCEDURE_SYM = 227,            /* PROCEDURE_SYM  */
  YYSYMBOL_PURGE = 228,                    /* PURGE  */
  YYSYMBOL_RAISE_ORACLE_SYM = 229,         /* RAISE_ORACLE_SYM  */
  YYSYMBOL_RANGE_SYM = 230,                /* RANGE_SYM  */
  YYSYMBOL_RANK_SYM = 231,                 /* RANK_SYM  */
  YYSYMBOL_READS_SYM = 232,                /* READS_SYM  */
  YYSYMBOL_READ_SYM = 233,                 /* READ_SYM  */
  YYSYMBOL_READ_WRITE_SYM = 234,           /* READ_WRITE_SYM  */
  YYSYMBOL_REAL = 235,                     /* REAL  */
  YYSYMBOL_RECURSIVE_SYM = 236,            /* RECURSIVE_SYM  */
  YYSYMBOL_REFERENCES = 237,               /* REFERENCES  */
  YYSYMBOL_REF_SYSTEM_ID_SYM = 238,        /* REF_SYSTEM_ID_SYM  */
  YYSYMBOL_REGEXP = 239,                   /* REGEXP  */
  YYSYMBOL_RELEASE_SYM = 240,              /* RELEASE_SYM  */
  YYSYMBOL_RENAME = 241,                   /* RENAME  */
  YYSYMBOL_REPEAT_SYM = 242,               /* REPEAT_SYM  */
  YYSYMBOL_REQUIRE_SYM = 243,              /* REQUIRE_SYM  */
  YYSYMBOL_RESIGNAL_SYM = 244,             /* RESIGNAL_SYM  */
  YYSYMBOL_RESTRICT = 245,                 /* RESTRICT  */
  YYSYMBOL_RETURNING_SYM = 246,            /* RETURNING_SYM  */
  YYSYMBOL_RETURN_MARIADB_SYM = 247,       /* RETURN_MARIADB_SYM  */
  YYSYMBOL_RETURN_ORACLE_SYM = 248,        /* RETURN_ORACLE_SYM  */
  YYSYMBOL_REVOKE = 249,                   /* REVOKE  */
  YYSYMBOL_RIGHT = 250,                    /* RIGHT  */
  YYSYMBOL_ROW_NUMBER_SYM = 251,           /* ROW_NUMBER_SYM  */
  YYSYMBOL_ROWS_SYM = 252,                 /* ROWS_SYM  */
  YYSYMBOL_ROWTYPE_ORACLE_SYM = 253,       /* ROWTYPE_ORACLE_SYM  */
  YYSYMBOL_SECOND_MICROSECOND_SYM = 254,   /* SECOND_MICROSECOND_SYM  */
  YYSYMBOL_SELECT_SYM = 255,               /* SELECT_SYM  */
  YYSYMBOL_SENSITIVE_SYM = 256,            /* SENSITIVE_SYM  */
  YYSYMBOL_SEPARATOR_SYM = 257,            /* SEPARATOR_SYM  */
  YYSYMBOL_SERVER_OPTIONS = 258,           /* SERVER_OPTIONS  */
  YYSYMBOL_SET = 259,                      /* SET  */
  YYSYMBOL_SHOW = 260,                     /* SHOW  */
  YYSYMBOL_SIGNAL_SYM = 261,               /* SIGNAL_SYM  */
  YYSYMBOL_SMALLINT = 262,                 /* SMALLINT  */
  YYSYMBOL_SPATIAL_SYM = 263,              /* SPATIAL_SYM  */
  YYSYMBOL_SPECIFIC_SYM = 264,             /* SPECIFIC_SYM  */
  YYSYMBOL_SQL_BIG_RESULT = 265,           /* SQL_BIG_RESULT  */
  YYSYMBOL_SQLEXCEPTION_SYM = 266,         /* SQLEXCEPTION_SYM  */
  YYSYMBOL_SQL_SMALL_RESULT = 267,         /* SQL_SMALL_RESULT  */
  YYSYMBOL_SQLSTATE_SYM = 268,             /* SQLSTATE_SYM  */
  YYSYMBOL_SQL_SYM = 269,                  /* SQL_SYM  */
  YYSYMBOL_SQLWARNING_SYM = 270,           /* SQLWARNING_SYM  */
  YYSYMBOL_SSL_SYM = 271,                  /* SSL_SYM  */
  YYSYMBOL_STARTING = 272,                 /* STARTING  */
  YYSYMBOL_STATS_AUTO_RECALC_SYM = 273,    /* STATS_AUTO_RECALC_SYM  */
  YYSYMBOL_STATS_PERSISTENT_SYM = 274,     /* STATS_PERSISTENT_SYM  */
  YYSYMBOL_STATS_SAMPLE_PAGES_SYM = 275,   /* STATS_SAMPLE_PAGES_SYM  */
  YYSYMBOL_STDDEV_SAMP_SYM = 276,          /* STDDEV_SAMP_SYM  */
  YYSYMBOL_STD_SYM = 277,                  /* STD_SYM  */
  YYSYMBOL_STRAIGHT_JOIN = 278,            /* STRAIGHT_JOIN  */
  YYSYMBOL_SUM_SYM = 279,                  /* SUM_SYM  */
  YYSYMBOL_SYSDATE = 280,                  /* SYSDATE  */
  YYSYMBOL_TABLE_REF_PRIORITY = 281,       /* TABLE_REF_PRIORITY  */
  YYSYMBOL_TABLE_SYM = 282,                /* TABLE_SYM  */
  YYSYMBOL_TERMINATED = 283,               /* TERMINATED  */
  YYSYMBOL_THEN_SYM = 284,                 /* THEN_SYM  */
  YYSYMBOL_TINYBLOB = 285,                 /* TINYBLOB  */
  YYSYMBOL_TINYINT = 286,                  /* TINYINT  */
  YYSYMBOL_TINYTEXT = 287,                 /* TINYTEXT  */
  YYSYMBOL_TO_SYM = 288,                   /* TO_SYM  */
  YYSYMBOL_TRAILING = 289,                 /* TRAILING  */
  YYSYMBOL_TRIGGER_SYM = 290,              /* TRIGGER_SYM  */
  YYSYMBOL_TRUE_SYM = 291,                 /* TRUE_SYM  */
  YYSYMBOL_UNDO_SYM = 292,                 /* UNDO_SYM  */
  YYSYMBOL_UNION_SYM = 293,                /* UNION_SYM  */
  YYSYMBOL_UNIQUE_SYM = 294,               /* UNIQUE_SYM  */
  YYSYMBOL_UNLOCK_SYM = 295,               /* UNLOCK_SYM  */
  YYSYMBOL_UNSIGNED = 296,                 /* UNSIGNED  */
  YYSYMBOL_UPDATE_SYM = 297,               /* UPDATE_SYM  */
  YYSYMBOL_USAGE = 298,                    /* USAGE  */
  YYSYMBOL_USE_SYM = 299,                  /* USE_SYM  */
  YYSYMBOL_USING = 300,                    /* USING  */
  YYSYMBOL_UTC_DATE_SYM = 301,             /* UTC_DATE_SYM  */
  YYSYMBOL_UTC_TIMESTAMP_SYM = 302,        /* UTC_TIMESTAMP_SYM  */
  YYSYMBOL_UTC_TIME_SYM = 303,             /* UTC_TIME_SYM  */
  YYSYMBOL_VALUES_IN_SYM = 304,            /* VALUES_IN_SYM  */
  YYSYMBOL_VALUES_LESS_SYM = 305,          /* VALUES_LESS_SYM  */
  YYSYMBOL_VALUES = 306,                   /* VALUES  */
  YYSYMBOL_VARBINARY = 307,                /* VARBINARY  */
  YYSYMBOL_VARCHAR = 308,                  /* VARCHAR  */
  YYSYMBOL_VARIANCE_SYM = 309,             /* VARIANCE_SYM  */
  YYSYMBOL_VAR_SAMP_SYM = 310,             /* VAR_SAMP_SYM  */
  YYSYMBOL_VARYING = 311,                  /* VARYING  */
  YYSYMBOL_VECTOR_SYM = 312,               /* VECTOR_SYM  */
  YYSYMBOL_WHEN_SYM = 313,                 /* WHEN_SYM  */
  YYSYMBOL_WHERE = 314,                    /* WHERE  */
  YYSYMBOL_WHILE_SYM = 315,                /* WHILE_SYM  */
  YYSYMBOL_WITH = 316,                     /* WITH  */
  YYSYMBOL_XOR = 317,                      /* XOR  */
  YYSYMBOL_YEAR_MONTH_SYM = 318,           /* YEAR_MONTH_SYM  */
  YYSYMBOL_ZEROFILL = 319,                 /* ZEROFILL  */
  YYSYMBOL_BODY_MARIADB_SYM = 320,         /* BODY_MARIADB_SYM  */
  YYSYMBOL_ELSEIF_ORACLE_SYM = 321,        /* ELSEIF_ORACLE_SYM  */
  YYSYMBOL_ELSIF_MARIADB_SYM = 322,        /* ELSIF_MARIADB_SYM  */
  YYSYMBOL_EXCEPTION_ORACLE_SYM = 323,     /* EXCEPTION_ORACLE_SYM  */
  YYSYMBOL_GOTO_MARIADB_SYM = 324,         /* GOTO_MARIADB_SYM  */
  YYSYMBOL_NOCOPY_SYM = 325,               /* NOCOPY_SYM  */
  YYSYMBOL_OTHERS_MARIADB_SYM = 326,       /* OTHERS_MARIADB_SYM  */
  YYSYMBOL_PACKAGE_MARIADB_SYM = 327,      /* PACKAGE_MARIADB_SYM  */
  YYSYMBOL_RAISE_MARIADB_SYM = 328,        /* RAISE_MARIADB_SYM  */
  YYSYMBOL_RECORD_SYM = 329,               /* RECORD_SYM  */
  YYSYMBOL_ROWTYPE_MARIADB_SYM = 330,      /* ROWTYPE_MARIADB_SYM  */
  YYSYMBOL_ROWNUM_SYM = 331,               /* ROWNUM_SYM  */
  YYSYMBOL_REPLACE = 332,                  /* REPLACE  */
  YYSYMBOL_SUBSTRING = 333,                /* SUBSTRING  */
  YYSYMBOL_TRIM = 334,                     /* TRIM  */
  YYSYMBOL_ACCOUNT_SYM = 335,              /* ACCOUNT_SYM  */
  YYSYMBOL_ACTION = 336,                   /* ACTION  */
  YYSYMBOL_ADMIN_SYM = 337,                /* ADMIN_SYM  */
  YYSYMBOL_ADDDATE_SYM = 338,              /* ADDDATE_SYM  */
  YYSYMBOL_AFTER_SYM = 339,                /* AFTER_SYM  */
  YYSYMBOL_AGAINST = 340,                  /* AGAINST  */
  YYSYMBOL_AGGREGATE_SYM = 341,            /* AGGREGATE_SYM  */
  YYSYMBOL_ALGORITHM_SYM = 342,            /* ALGORITHM_SYM  */
  YYSYMBOL_ALWAYS_SYM = 343,               /* ALWAYS_SYM  */
  YYSYMBOL_ANY_SYM = 344,                  /* ANY_SYM  */
  YYSYMBOL_ASCII_SYM = 345,                /* ASCII_SYM  */
  YYSYMBOL_AT_SYM = 346,                   /* AT_SYM  */
  YYSYMBOL_ATOMIC_SYM = 347,               /* ATOMIC_SYM  */
  YYSYMBOL_AUTHORS_SYM = 348,              /* AUTHORS_SYM  */
  YYSYMBOL_AUTOEXTEND_SIZE_SYM = 349,      /* AUTOEXTEND_SIZE_SYM  */
  YYSYMBOL_AUTO_INC = 350,                 /* AUTO_INC  */
  YYSYMBOL_AUTO_SYM = 351,                 /* AUTO_SYM  */
  YYSYMBOL_AVG_ROW_LENGTH = 352,           /* AVG_ROW_LENGTH  */
  YYSYMBOL_AVG_SYM = 353,                  /* AVG_SYM  */
  YYSYMBOL_BACKUP_SYM = 354,               /* BACKUP_SYM  */
  YYSYMBOL_BEGIN_MARIADB_SYM = 355,        /* BEGIN_MARIADB_SYM  */
  YYSYMBOL_BEGIN_ORACLE_SYM = 356,         /* BEGIN_ORACLE_SYM  */
  YYSYMBOL_BINLOG_SYM = 357,               /* BINLOG_SYM  */
  YYSYMBOL_BIT_SYM = 358,                  /* BIT_SYM  */
  YYSYMBOL_BLOCK_SYM = 359,                /* BLOCK_SYM  */
  YYSYMBOL_BOOL_SYM = 360,                 /* BOOL_SYM  */
  YYSYMBOL_BOOLEAN_SYM = 361,              /* BOOLEAN_SYM  */
  YYSYMBOL_BTREE_SYM = 362,                /* BTREE_SYM  */
  YYSYMBOL_BYTE_SYM = 363,                 /* BYTE_SYM  */
  YYSYMBOL_CACHE_SYM = 364,                /* CACHE_SYM  */
  YYSYMBOL_CASCADED = 365,                 /* CASCADED  */
  YYSYMBOL_CATALOG_NAME_SYM = 366,         /* CATALOG_NAME_SYM  */
  YYSYMBOL_CHAIN_SYM = 367,                /* CHAIN_SYM  */
  YYSYMBOL_CHANGED = 368,                  /* CHANGED  */
  YYSYMBOL_CHANNEL_SYM = 369,              /* CHANNEL_SYM  */
  YYSYMBOL_CHARSET = 370,                  /* CHARSET  */
  YYSYMBOL_CHECKPOINT_SYM = 371,           /* CHECKPOINT_SYM  */
  YYSYMBOL_CHECKSUM_SYM = 372,             /* CHECKSUM_SYM  */
  YYSYMBOL_CIPHER_SYM = 373,               /* CIPHER_SYM  */
  YYSYMBOL_CLASS_ORIGIN_SYM = 374,         /* CLASS_ORIGIN_SYM  */
  YYSYMBOL_CLIENT_SYM = 375,               /* CLIENT_SYM  */
  YYSYMBOL_CLOB_MARIADB_SYM = 376,         /* CLOB_MARIADB_SYM  */
  YYSYMBOL_CLOB_ORACLE_SYM = 377,          /* CLOB_ORACLE_SYM  */
  YYSYMBOL_CLOSE_SYM = 378,                /* CLOSE_SYM  */
  YYSYMBOL_COALESCE = 379,                 /* COALESCE  */
  YYSYMBOL_CODE_SYM = 380,                 /* CODE_SYM  */
  YYSYMBOL_COLLATION_SYM = 381,            /* COLLATION_SYM  */
  YYSYMBOL_COLUMNS = 382,                  /* COLUMNS  */
  YYSYMBOL_COLUMN_ADD_SYM = 383,           /* COLUMN_ADD_SYM  */
  YYSYMBOL_COLUMN_CHECK_SYM = 384,         /* COLUMN_CHECK_SYM  */
  YYSYMBOL_COLUMN_CREATE_SYM = 385,        /* COLUMN_CREATE_SYM  */
  YYSYMBOL_COLUMN_DELETE_SYM = 386,        /* COLUMN_DELETE_SYM  */
  YYSYMBOL_COLUMN_GET_SYM = 387,           /* COLUMN_GET_SYM  */
  YYSYMBOL_COLUMN_SYM = 388,               /* COLUMN_SYM  */
  YYSYMBOL_COLUMN_NAME_SYM = 389,          /* COLUMN_NAME_SYM  */
  YYSYMBOL_COMMENT_SYM = 390,              /* COMMENT_SYM  */
  YYSYMBOL_COMMITTED_SYM = 391,            /* COMMITTED_SYM  */
  YYSYMBOL_COMMIT_SYM = 392,               /* COMMIT_SYM  */
  YYSYMBOL_COMPACT_SYM = 393,              /* COMPACT_SYM  */
  YYSYMBOL_COMPLETION_SYM = 394,           /* COMPLETION_SYM  */
  YYSYMBOL_COMPRESSED_SYM = 395,           /* COMPRESSED_SYM  */
  YYSYMBOL_CONCURRENT = 396,               /* CONCURRENT  */
  YYSYMBOL_CONNECTION_SYM = 397,           /* CONNECTION_SYM  */
  YYSYMBOL_CONSISTENT_SYM = 398,           /* CONSISTENT_SYM  */
  YYSYMBOL_CONSTRAINT_CATALOG_SYM = 399,   /* CONSTRAINT_CATALOG_SYM  */
  YYSYMBOL_CONSTRAINT_NAME_SYM = 400,      /* CONSTRAINT_NAME_SYM  */
  YYSYMBOL_CONSTRAINT_SCHEMA_SYM = 401,    /* CONSTRAINT_SCHEMA_SYM  */
  YYSYMBOL_CONTAINS_SYM = 402,             /* CONTAINS_SYM  */
  YYSYMBOL_CONTEXT_SYM = 403,              /* CONTEXT_SYM  */
  YYSYMBOL_CONTRIBUTORS_SYM = 404,         /* CONTRIBUTORS_SYM  */
  YYSYMBOL_CPU_SYM = 405,                  /* CPU_SYM  */
  YYSYMBOL_CUBE_SYM = 406,                 /* CUBE_SYM  */
  YYSYMBOL_CURRENT_SYM = 407,              /* CURRENT_SYM  */
  YYSYMBOL_CURRENT_POS_SYM = 408,          /* CURRENT_POS_SYM  */
  YYSYMBOL_CURSOR_NAME_SYM = 409,          /* CURSOR_NAME_SYM  */
  YYSYMBOL_CYCLE_SYM = 410,                /* CYCLE_SYM  */
  YYSYMBOL_DATAFILE_SYM = 411,             /* DATAFILE_SYM  */
  YYSYMBOL_DATA_SYM = 412,                 /* DATA_SYM  */
  YYSYMBOL_DATETIME = 413,                 /* DATETIME  */
  YYSYMBOL_DATE_SYM = 414,                 /* DATE_SYM  */
  YYSYMBOL_DAY_SYM = 415,                  /* DAY_SYM  */
  YYSYMBOL_DEALLOCATE_SYM = 416,           /* DEALLOCATE_SYM  */
  YYSYMBOL_DEFINER_SYM = 417,              /* DEFINER_SYM  */
  YYSYMBOL_DELAYED_SYM = 418,              /* DELAYED_SYM  */
  YYSYMBOL_DELAY_KEY_WRITE_SYM = 419,      /* DELAY_KEY_WRITE_SYM  */
  YYSYMBOL_DES_KEY_FILE = 420,             /* DES_KEY_FILE  */
  YYSYMBOL_DIAGNOSTICS_SYM = 421,          /* DIAGNOSTICS_SYM  */
  YYSYMBOL_DIRECTORY_SYM = 422,            /* DIRECTORY_SYM  */
  YYSYMBOL_DISABLE_SYM = 423,              /* DISABLE_SYM  */
  YYSYMBOL_DISCARD = 424,                  /* DISCARD  */
  YYSYMBOL_DISK_SYM = 425,                 /* DISK_SYM  */
  YYSYMBOL_DO_SYM = 426,                   /* DO_SYM  */
  YYSYMBOL_DUMPFILE = 427,                 /* DUMPFILE  */
  YYSYMBOL_DUPLICATE_SYM = 428,            /* DUPLICATE_SYM  */
  YYSYMBOL_DYNAMIC_SYM = 429,              /* DYNAMIC_SYM  */
  YYSYMBOL_ENABLE_SYM = 430,               /* ENABLE_SYM  */
  YYSYMBOL_END = 431,                      /* END  */
  YYSYMBOL_ENDS_SYM = 432,                 /* ENDS_SYM  */
  YYSYMBOL_ENGINES_SYM = 433,              /* ENGINES_SYM  */
  YYSYMBOL_ENGINE_SYM = 434,               /* ENGINE_SYM  */
  YYSYMBOL_ENUM = 435,                     /* ENUM  */
  YYSYMBOL_ERROR_SYM = 436,                /* ERROR_SYM  */
  YYSYMBOL_ERRORS = 437,                   /* ERRORS  */
  YYSYMBOL_ESCAPE_SYM = 438,               /* ESCAPE_SYM  */
  YYSYMBOL_EVENTS_SYM = 439,               /* EVENTS_SYM  */
  YYSYMBOL_EVENT_SYM = 440,                /* EVENT_SYM  */
  YYSYMBOL_EVERY_SYM = 441,                /* EVERY_SYM  */
  YYSYMBOL_EXCHANGE_SYM = 442,             /* EXCHANGE_SYM  */
  YYSYMBOL_EXAMINED_SYM = 443,             /* EXAMINED_SYM  */
  YYSYMBOL_EXCLUDE_SYM = 444,              /* EXCLUDE_SYM  */
  YYSYMBOL_EXECUTE_SYM = 445,              /* EXECUTE_SYM  */
  YYSYMBOL_EXCEPTION_MARIADB_SYM = 446,    /* EXCEPTION_MARIADB_SYM  */
  YYSYMBOL_EXIT_MARIADB_SYM = 447,         /* EXIT_MARIADB_SYM  */
  YYSYMBOL_EXIT_ORACLE_SYM = 448,          /* EXIT_ORACLE_SYM  */
  YYSYMBOL_EXPANSION_SYM = 449,            /* EXPANSION_SYM  */
  YYSYMBOL_EXPIRE_SYM = 450,               /* EXPIRE_SYM  */
  YYSYMBOL_EXPORT_SYM = 451,               /* EXPORT_SYM  */
  YYSYMBOL_EXTENDED_SYM = 452,             /* EXTENDED_SYM  */
  YYSYMBOL_EXTENT_SIZE_SYM = 453,          /* EXTENT_SIZE_SYM  */
  YYSYMBOL_FAST_SYM = 454,                 /* FAST_SYM  */
  YYSYMBOL_FAULTS_SYM = 455,               /* FAULTS_SYM  */
  YYSYMBOL_FEDERATED_SYM = 456,            /* FEDERATED_SYM  */
  YYSYMBOL_FILE_SYM = 457,                 /* FILE_SYM  */
  YYSYMBOL_FIRST_SYM = 458,                /* FIRST_SYM  */
  YYSYMBOL_FIXED_SYM = 459,                /* FIXED_SYM  */
  YYSYMBOL_FLUSH_SYM = 460,                /* FLUSH_SYM  */
  YYSYMBOL_FOLLOWS_SYM = 461,              /* FOLLOWS_SYM  */
  YYSYMBOL_FOLLOWING_SYM = 462,            /* FOLLOWING_SYM  */
  YYSYMBOL_FORCE_SYM = 463,                /* FORCE_SYM  */
  YYSYMBOL_FORMAT_SYM = 464,               /* FORMAT_SYM  */
  YYSYMBOL_FOUND_SYM = 465,                /* FOUND_SYM  */
  YYSYMBOL_FULL = 466,                     /* FULL  */
  YYSYMBOL_FUNCTION_SYM = 467,             /* FUNCTION_SYM  */
  YYSYMBOL_GENERAL = 468,                  /* GENERAL  */
  YYSYMBOL_GENERATED_SYM = 469,            /* GENERATED_SYM  */
  YYSYMBOL_GET_FORMAT = 470,               /* GET_FORMAT  */
  YYSYMBOL_GET_SYM = 471,                  /* GET_SYM  */
  YYSYMBOL_GLOBAL_SYM = 472,               /* GLOBAL_SYM  */
  YYSYMBOL_GRANTS = 473,                   /* GRANTS  */
  YYSYMBOL_HANDLER_SYM = 474,              /* HANDLER_SYM  */
  YYSYMBOL_HARD_SYM = 475,                 /* HARD_SYM  */
  YYSYMBOL_HASH_SYM = 476,                 /* HASH_SYM  */
  YYSYMBOL_HELP_SYM = 477,                 /* HELP_SYM  */
  YYSYMBOL_HIGH_PRIORITY = 478,            /* HIGH_PRIORITY  */
  YYSYMBOL_HISTORY_SYM = 479,              /* HISTORY_SYM  */
  YYSYMBOL_HOST_SYM = 480,                 /* HOST_SYM  */
  YYSYMBOL_HOSTS_SYM = 481,                /* HOSTS_SYM  */
  YYSYMBOL_HOUR_SYM = 482,                 /* HOUR_SYM  */
  YYSYMBOL_ID_SYM = 483,                   /* ID_SYM  */
  YYSYMBOL_IDENTIFIED_SYM = 484,           /* IDENTIFIED_SYM  */
  YYSYMBOL_IGNORE_SERVER_IDS_SYM = 485,    /* IGNORE_SERVER_IDS_SYM  */
  YYSYMBOL_IMMEDIATE_SYM = 486,            /* IMMEDIATE_SYM  */
  YYSYMBOL_IMPORT = 487,                   /* IMPORT  */
  YYSYMBOL_INCREMENT_SYM = 488,            /* INCREMENT_SYM  */
  YYSYMBOL_INDEXES = 489,                  /* INDEXES  */
  YYSYMBOL_INITIAL_SIZE_SYM = 490,         /* INITIAL_SIZE_SYM  */
  YYSYMBOL_INSERT_METHOD = 491,            /* INSERT_METHOD  */
  YYSYMBOL_INSTALL_SYM = 492,              /* INSTALL_SYM  */
  YYSYMBOL_INVOKER_SYM = 493,              /* INVOKER_SYM  */
  YYSYMBOL_IO_SYM = 494,                   /* IO_SYM  */
  YYSYMBOL_IPC_SYM = 495,                  /* IPC_SYM  */
  YYSYMBOL_ISOLATION = 496,                /* ISOLATION  */
  YYSYMBOL_ISOPEN_SYM = 497,               /* ISOPEN_SYM  */
  YYSYMBOL_ISSUER_SYM = 498,               /* ISSUER_SYM  */
  YYSYMBOL_INVISIBLE_SYM = 499,            /* INVISIBLE_SYM  */
  YYSYMBOL_JSON_SYM = 500,                 /* JSON_SYM  */
  YYSYMBOL_KEY_BLOCK_SIZE = 501,           /* KEY_BLOCK_SIZE  */
  YYSYMBOL_LANGUAGE_SYM = 502,             /* LANGUAGE_SYM  */
  YYSYMBOL_LAST_SYM = 503,                 /* LAST_SYM  */
  YYSYMBOL_LAST_VALUE = 504,               /* LAST_VALUE  */
  YYSYMBOL_LASTVAL_SYM = 505,              /* LASTVAL_SYM  */
  YYSYMBOL_LEAVES = 506,                   /* LEAVES  */
  YYSYMBOL_LESS_SYM = 507,                 /* LESS_SYM  */
  YYSYMBOL_LEVEL_SYM = 508,                /* LEVEL_SYM  */
  YYSYMBOL_LIST_SYM = 509,                 /* LIST_SYM  */
  YYSYMBOL_LOCAL_SYM = 510,                /* LOCAL_SYM  */
  YYSYMBOL_LOCKED_SYM = 511,               /* LOCKED_SYM  */
  YYSYMBOL_LOCKS_SYM = 512,                /* LOCKS_SYM  */
  YYSYMBOL_LOGFILE_SYM = 513,              /* LOGFILE_SYM  */
  YYSYMBOL_LOGS_SYM = 514,                 /* LOGS_SYM  */
  YYSYMBOL_MASTER_CONNECT_RETRY_SYM = 515, /* MASTER_CONNECT_RETRY_SYM  */
  YYSYMBOL_MASTER_DELAY_SYM = 516,         /* MASTER_DELAY_SYM  */
  YYSYMBOL_MASTER_GTID_POS_SYM = 517,      /* MASTER_GTID_POS_SYM  */
  YYSYMBOL_MASTER_HOST_SYM = 518,          /* MASTER_HOST_SYM  */
  YYSYMBOL_MASTER_LOG_FILE_SYM = 519,      /* MASTER_LOG_FILE_SYM  */
  YYSYMBOL_MASTER_LOG_POS_SYM = 520,       /* MASTER_LOG_POS_SYM  */
  YYSYMBOL_MASTER_PASSWORD_SYM = 521,      /* MASTER_PASSWORD_SYM  */
  YYSYMBOL_MASTER_PORT_SYM = 522,          /* MASTER_PORT_SYM  */
  YYSYMBOL_MASTER_SERVER_ID_SYM = 523,     /* MASTER_SERVER_ID_SYM  */
  YYSYMBOL_MASTER_SSL_CAPATH_SYM = 524,    /* MASTER_SSL_CAPATH_SYM  */
  YYSYMBOL_MASTER_SSL_CA_SYM = 525,        /* MASTER_SSL_CA_SYM  */
  YYSYMBOL_MASTER_SSL_CERT_SYM = 526,      /* MASTER_SSL_CERT_SYM  */
  YYSYMBOL_MASTER_SSL_CIPHER_SYM = 527,    /* MASTER_SSL_CIPHER_SYM  */
  YYSYMBOL_MASTER_SSL_CRL_SYM = 528,       /* MASTER_SSL_CRL_SYM  */
  YYSYMBOL_MASTER_SSL_CRLPATH_SYM = 529,   /* MASTER_SSL_CRLPATH_SYM  */
  YYSYMBOL_MASTER_SSL_KEY_SYM = 530,       /* MASTER_SSL_KEY_SYM  */
  YYSYMBOL_MASTER_SSL_SYM = 531,           /* MASTER_SSL_SYM  */
  YYSYMBOL_MASTER_SYM = 532,               /* MASTER_SYM  */
  YYSYMBOL_MASTER_USER_SYM = 533,          /* MASTER_USER_SYM  */
  YYSYMBOL_MASTER_USE_GTID_SYM = 534,      /* MASTER_USE_GTID_SYM  */
  YYSYMBOL_MASTER_HEARTBEAT_PERIOD_SYM = 535, /* MASTER_HEARTBEAT_PERIOD_SYM  */
  YYSYMBOL_MASTER_DEMOTE_TO_SLAVE_SYM = 536, /* MASTER_DEMOTE_TO_SLAVE_SYM  */
  YYSYMBOL_MAX_CONNECTIONS_PER_HOUR = 537, /* MAX_CONNECTIONS_PER_HOUR  */
  YYSYMBOL_MAX_QUERIES_PER_HOUR = 538,     /* MAX_QUERIES_PER_HOUR  */
  YYSYMBOL_MAX_ROWS = 539,                 /* MAX_ROWS  */
  YYSYMBOL_MAX_SIZE_SYM = 540,             /* MAX_SIZE_SYM  */
  YYSYMBOL_MAX_UPDATES_PER_HOUR = 541,     /* MAX_UPDATES_PER_HOUR  */
  YYSYMBOL_MAX_STATEMENT_TIME_SYM = 542,   /* MAX_STATEMENT_TIME_SYM  */
  YYSYMBOL_MAX_USER_CONNECTIONS_SYM = 543, /* MAX_USER_CONNECTIONS_SYM  */
  YYSYMBOL_MEDIUM_SYM = 544,               /* MEDIUM_SYM  */
  YYSYMBOL_MEMORY_SYM = 545,               /* MEMORY_SYM  */
  YYSYMBOL_MERGE_SYM = 546,                /* MERGE_SYM  */
  YYSYMBOL_MESSAGE_TEXT_SYM = 547,         /* MESSAGE_TEXT_SYM  */
  YYSYMBOL_MICROSECOND_SYM = 548,          /* MICROSECOND_SYM  */
  YYSYMBOL_MIGRATE_SYM = 549,              /* MIGRATE_SYM  */
  YYSYMBOL_MINUTE_SYM = 550,               /* MINUTE_SYM  */
  YYSYMBOL_MINVALUE_SYM = 551,             /* MINVALUE_SYM  */
  YYSYMBOL_MIN_ROWS = 552,                 /* MIN_ROWS  */
  YYSYMBOL_MODE_SYM = 553,                 /* MODE_SYM  */
  YYSYMBOL_MODIFY_SYM = 554,               /* MODIFY_SYM  */
  YYSYMBOL_MONITOR_SYM = 555,              /* MONITOR_SYM  */
  YYSYMBOL_MONTH_SYM = 556,                /* MONTH_SYM  */
  YYSYMBOL_MUTEX_SYM = 557,                /* MUTEX_SYM  */
  YYSYMBOL_MYSQL_SYM = 558,                /* MYSQL_SYM  */
  YYSYMBOL_MYSQL_ERRNO_SYM = 559,          /* MYSQL_ERRNO_SYM  */
  YYSYMBOL_NAMES_SYM = 560,                /* NAMES_SYM  */
  YYSYMBOL_NAME_SYM = 561,                 /* NAME_SYM  */
  YYSYMBOL_NATIONAL_SYM = 562,             /* NATIONAL_SYM  */
  YYSYMBOL_NCHAR_SYM = 563,                /* NCHAR_SYM  */
  YYSYMBOL_NEVER_SYM = 564,                /* NEVER_SYM  */
  YYSYMBOL_NEXT_SYM = 565,                 /* NEXT_SYM  */
  YYSYMBOL_NEXTVAL_SYM = 566,              /* NEXTVAL_SYM  */
  YYSYMBOL_NOCACHE_SYM = 567,              /* NOCACHE_SYM  */
  YYSYMBOL_NOCYCLE_SYM = 568,              /* NOCYCLE_SYM  */
  YYSYMBOL_NODEGROUP_SYM = 569,            /* NODEGROUP_SYM  */
  YYSYMBOL_NONE_SYM = 570,                 /* NONE_SYM  */
  YYSYMBOL_NOTFOUND_SYM = 571,             /* NOTFOUND_SYM  */
  YYSYMBOL_NO_SYM = 572,                   /* NO_SYM  */
  YYSYMBOL_NOMAXVALUE_SYM = 573,           /* NOMAXVALUE_SYM  */
  YYSYMBOL_NOMINVALUE_SYM = 574,           /* NOMINVALUE_SYM  */
  YYSYMBOL_NO_WAIT_SYM = 575,              /* NO_WAIT_SYM  */
  YYSYMBOL_NOWAIT_SYM = 576,               /* NOWAIT_SYM  */
  YYSYMBOL_NUMBER_MARIADB_SYM = 577,       /* NUMBER_MARIADB_SYM  */
  YYSYMBOL_NUMBER_ORACLE_SYM = 578,        /* NUMBER_ORACLE_SYM  */
  YYSYMBOL_NVARCHAR_SYM = 579,             /* NVARCHAR_SYM  */
  YYSYMBOL_OF_SYM = 580,                   /* OF_SYM  */
  YYSYMBOL_OFFSET_SYM = 581,               /* OFFSET_SYM  */
  YYSYMBOL_OLD_PASSWORD_SYM = 582,         /* OLD_PASSWORD_SYM  */
  YYSYMBOL_ONE_SYM = 583,                  /* ONE_SYM  */
  YYSYMBOL_ONLY_SYM = 584,                 /* ONLY_SYM  */
  YYSYMBOL_ONLINE_SYM = 585,               /* ONLINE_SYM  */
  YYSYMBOL_OPEN_SYM = 586,                 /* OPEN_SYM  */
  YYSYMBOL_OPTIONS_SYM = 587,              /* OPTIONS_SYM  */
  YYSYMBOL_OPTION = 588,                   /* OPTION  */
  YYSYMBOL_OVERLAPS_SYM = 589,             /* OVERLAPS_SYM  */
  YYSYMBOL_OWNER_SYM = 590,                /* OWNER_SYM  */
  YYSYMBOL_PACK_KEYS_SYM = 591,            /* PACK_KEYS_SYM  */
  YYSYMBOL_PAGE_SYM = 592,                 /* PAGE_SYM  */
  YYSYMBOL_PARSER_SYM = 593,               /* PARSER_SYM  */
  YYSYMBOL_PARTIAL = 594,                  /* PARTIAL  */
  YYSYMBOL_PARTITIONS_SYM = 595,           /* PARTITIONS_SYM  */
  YYSYMBOL_PARTITIONING_SYM = 596,         /* PARTITIONING_SYM  */
  YYSYMBOL_PASSWORD_SYM = 597,             /* PASSWORD_SYM  */
  YYSYMBOL_PERIOD_SYM = 598,               /* PERIOD_SYM  */
  YYSYMBOL_PERSISTENT_SYM = 599,           /* PERSISTENT_SYM  */
  YYSYMBOL_PHASE_SYM = 600,                /* PHASE_SYM  */
  YYSYMBOL_PLUGINS_SYM = 601,              /* PLUGINS_SYM  */
  YYSYMBOL_PLUGIN_SYM = 602,               /* PLUGIN_SYM  */
  YYSYMBOL_PORT_SYM = 603,                 /* PORT_SYM  */
  YYSYMBOL_PRECEDES_SYM = 604,             /* PRECEDES_SYM  */
  YYSYMBOL_PRECEDING_SYM = 605,            /* PRECEDING_SYM  */
  YYSYMBOL_PREPARE_SYM = 606,              /* PREPARE_SYM  */
  YYSYMBOL_PRESERVE_SYM = 607,             /* PRESERVE_SYM  */
  YYSYMBOL_PREV_SYM = 608,                 /* PREV_SYM  */
  YYSYMBOL_PREVIOUS_SYM = 609,             /* PREVIOUS_SYM  */
  YYSYMBOL_PRIVILEGES = 610,               /* PRIVILEGES  */
  YYSYMBOL_PROCESS = 611,                  /* PROCESS  */
  YYSYMBOL_PROCESSLIST_SYM = 612,          /* PROCESSLIST_SYM  */
  YYSYMBOL_PROFILE_SYM = 613,              /* PROFILE_SYM  */
  YYSYMBOL_PROFILES_SYM = 614,             /* PROFILES_SYM  */
  YYSYMBOL_PROXY_SYM = 615,                /* PROXY_SYM  */
  YYSYMBOL_QUARTER_SYM = 616,              /* QUARTER_SYM  */
  YYSYMBOL_QUERY_SYM = 617,                /* QUERY_SYM  */
  YYSYMBOL_QUICK = 618,                    /* QUICK  */
  YYSYMBOL_RAW_MARIADB_SYM = 619,          /* RAW_MARIADB_SYM  */
  YYSYMBOL_RAW_ORACLE_SYM = 620,           /* RAW_ORACLE_SYM  */
  YYSYMBOL_READ_ONLY_SYM = 621,            /* READ_ONLY_SYM  */
  YYSYMBOL_REBUILD_SYM = 622,              /* REBUILD_SYM  */
  YYSYMBOL_RECOVER_SYM = 623,              /* RECOVER_SYM  */
  YYSYMBOL_REDOFILE_SYM = 624,             /* REDOFILE_SYM  */
  YYSYMBOL_REDO_BUFFER_SIZE_SYM = 625,     /* REDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_REDUNDANT_SYM = 626,            /* REDUNDANT_SYM  */
  YYSYMBOL_RELAY = 627,                    /* RELAY  */
  YYSYMBOL_RELAYLOG_SYM = 628,             /* RELAYLOG_SYM  */
  YYSYMBOL_RELAY_LOG_FILE_SYM = 629,       /* RELAY_LOG_FILE_SYM  */
  YYSYMBOL_RELAY_LOG_POS_SYM = 630,        /* RELAY_LOG_POS_SYM  */
  YYSYMBOL_RELAY_THREAD = 631,             /* RELAY_THREAD  */
  YYSYMBOL_RELOAD = 632,                   /* RELOAD  */
  YYSYMBOL_REMOVE_SYM = 633,               /* REMOVE_SYM  */
  YYSYMBOL_REORGANIZE_SYM = 634,           /* REORGANIZE_SYM  */
  YYSYMBOL_REPAIR = 635,                   /* REPAIR  */
  YYSYMBOL_REPEATABLE_SYM = 636,           /* REPEATABLE_SYM  */
  YYSYMBOL_REPLAY_SYM = 637,               /* REPLAY_SYM  */
  YYSYMBOL_REPLICATION = 638,              /* REPLICATION  */
  YYSYMBOL_RESET_SYM = 639,                /* RESET_SYM  */
  YYSYMBOL_RESTART_SYM = 640,              /* RESTART_SYM  */
  YYSYMBOL_RESOURCES = 641,                /* RESOURCES  */
  YYSYMBOL_RESTORE_SYM = 642,              /* RESTORE_SYM  */
  YYSYMBOL_RESUME_SYM = 643,               /* RESUME_SYM  */
  YYSYMBOL_RETURNED_SQLSTATE_SYM = 644,    /* RETURNED_SQLSTATE_SYM  */
  YYSYMBOL_RETURNS_SYM = 645,              /* RETURNS_SYM  */
  YYSYMBOL_REUSE_SYM = 646,                /* REUSE_SYM  */
  YYSYMBOL_REVERSE_SYM = 647,              /* REVERSE_SYM  */
  YYSYMBOL_ROLE_SYM = 648,                 /* ROLE_SYM  */
  YYSYMBOL_ROLLBACK_SYM = 649,             /* ROLLBACK_SYM  */
  YYSYMBOL_ROLLUP_SYM = 650,               /* ROLLUP_SYM  */
  YYSYMBOL_ROUTINE_SYM = 651,              /* ROUTINE_SYM  */
  YYSYMBOL_ROWCOUNT_SYM = 652,             /* ROWCOUNT_SYM  */
  YYSYMBOL_ROW_SYM = 653,                  /* ROW_SYM  */
  YYSYMBOL_ROW_COUNT_SYM = 654,            /* ROW_COUNT_SYM  */
  YYSYMBOL_ROW_FORMAT_SYM = 655,           /* ROW_FORMAT_SYM  */
  YYSYMBOL_RTREE_SYM = 656,                /* RTREE_SYM  */
  YYSYMBOL_SAVEPOINT_SYM = 657,            /* SAVEPOINT_SYM  */
  YYSYMBOL_SCHEDULE_SYM = 658,             /* SCHEDULE_SYM  */
  YYSYMBOL_SCHEMA_NAME_SYM = 659,          /* SCHEMA_NAME_SYM  */
  YYSYMBOL_SECOND_SYM = 660,               /* SECOND_SYM  */
  YYSYMBOL_SECURITY_SYM = 661,             /* SECURITY_SYM  */
  YYSYMBOL_SEQUENCE_SYM = 662,             /* SEQUENCE_SYM  */
  YYSYMBOL_SERIALIZABLE_SYM = 663,         /* SERIALIZABLE_SYM  */
  YYSYMBOL_SERIAL_SYM = 664,               /* SERIAL_SYM  */
  YYSYMBOL_SESSION_SYM = 665,              /* SESSION_SYM  */
  YYSYMBOL_SESSION_USER_SYM = 666,         /* SESSION_USER_SYM  */
  YYSYMBOL_SERVER_SYM = 667,               /* SERVER_SYM  */
  YYSYMBOL_SETVAL_SYM = 668,               /* SETVAL_SYM  */
  YYSYMBOL_SHARE_SYM = 669,                /* SHARE_SYM  */
  YYSYMBOL_SHUTDOWN = 670,                 /* SHUTDOWN  */
  YYSYMBOL_SIGNED_SYM = 671,               /* SIGNED_SYM  */
  YYSYMBOL_SIMPLE_SYM = 672,               /* SIMPLE_SYM  */
  YYSYMBOL_SKIP_SYM = 673,                 /* SKIP_SYM  */
  YYSYMBOL_SLAVE = 674,                    /* SLAVE  */
  YYSYMBOL_SLAVES = 675,                   /* SLAVES  */
  YYSYMBOL_SLAVE_POS_SYM = 676,            /* SLAVE_POS_SYM  */
  YYSYMBOL_SLOW = 677,                     /* SLOW  */
  YYSYMBOL_SNAPSHOT_SYM = 678,             /* SNAPSHOT_SYM  */
  YYSYMBOL_SOCKET_SYM = 679,               /* SOCKET_SYM  */
  YYSYMBOL_SOFT_SYM = 680,                 /* SOFT_SYM  */
  YYSYMBOL_SONAME_SYM = 681,               /* SONAME_SYM  */
  YYSYMBOL_SOUNDS_SYM = 682,               /* SOUNDS_SYM  */
  YYSYMBOL_SOURCE_SYM = 683,               /* SOURCE_SYM  */
  YYSYMBOL_SQL_AFTER_GTIDS_SYM = 684,      /* SQL_AFTER_GTIDS_SYM  */
  YYSYMBOL_SQL_BEFORE_GTIDS_SYM = 685,     /* SQL_BEFORE_GTIDS_SYM  */
  YYSYMBOL_SQL_BUFFER_RESULT = 686,        /* SQL_BUFFER_RESULT  */
  YYSYMBOL_SQL_CACHE_SYM = 687,            /* SQL_CACHE_SYM  */
  YYSYMBOL_SQL_CALC_FOUND_ROWS = 688,      /* SQL_CALC_FOUND_ROWS  */
  YYSYMBOL_SQL_NO_CACHE_SYM = 689,         /* SQL_NO_CACHE_SYM  */
  YYSYMBOL_SQL_THREAD = 690,               /* SQL_THREAD  */
  YYSYMBOL_STAGE_SYM = 691,                /* STAGE_SYM  */
  YYSYMBOL_STARTS_SYM = 692,               /* STARTS_SYM  */
  YYSYMBOL_START_SYM = 693,                /* START_SYM  */
  YYSYMBOL_STATEMENT_SYM = 694,            /* STATEMENT_SYM  */
  YYSYMBOL_STATUS_SYM = 695,               /* STATUS_SYM  */
  YYSYMBOL_STOP_SYM = 696,                 /* STOP_SYM  */
  YYSYMBOL_STORAGE_SYM = 697,              /* STORAGE_SYM  */
  YYSYMBOL_STORED_SYM = 698,               /* STORED_SYM  */
  YYSYMBOL_STRING_SYM = 699,               /* STRING_SYM  */
  YYSYMBOL_SUBCLASS_ORIGIN_SYM = 700,      /* SUBCLASS_ORIGIN_SYM  */
  YYSYMBOL_SUBDATE_SYM = 701,              /* SUBDATE_SYM  */
  YYSYMBOL_SUBJECT_SYM = 702,              /* SUBJECT_SYM  */
  YYSYMBOL_SUBPARTITIONS_SYM = 703,        /* SUBPARTITIONS_SYM  */
  YYSYMBOL_SUBPARTITION_SYM = 704,         /* SUBPARTITION_SYM  */
  YYSYMBOL_SUPER_SYM = 705,                /* SUPER_SYM  */
  YYSYMBOL_SUSPEND_SYM = 706,              /* SUSPEND_SYM  */
  YYSYMBOL_SWAPS_SYM = 707,                /* SWAPS_SYM  */
  YYSYMBOL_SWITCHES_SYM = 708,             /* SWITCHES_SYM  */
  YYSYMBOL_SYSTEM = 709,                   /* SYSTEM  */
  YYSYMBOL_SYSTEM_TIME_SYM = 710,          /* SYSTEM_TIME_SYM  */
  YYSYMBOL_TABLES = 711,                   /* TABLES  */
  YYSYMBOL_TABLESPACE = 712,               /* TABLESPACE  */
  YYSYMBOL_TABLE_CHECKSUM_SYM = 713,       /* TABLE_CHECKSUM_SYM  */
  YYSYMBOL_TABLE_NAME_SYM = 714,           /* TABLE_NAME_SYM  */
  YYSYMBOL_TEMPORARY = 715,                /* TEMPORARY  */
  YYSYMBOL_TEMPTABLE_SYM = 716,            /* TEMPTABLE_SYM  */
  YYSYMBOL_TEXT_SYM = 717,                 /* TEXT_SYM  */
  YYSYMBOL_THAN_SYM = 718,                 /* THAN_SYM  */
  YYSYMBOL_TIES_SYM = 719,                 /* TIES_SYM  */
  YYSYMBOL_TIMESTAMP = 720,                /* TIMESTAMP  */
  YYSYMBOL_TIMESTAMP_ADD = 721,            /* TIMESTAMP_ADD  */
  YYSYMBOL_TIMESTAMP_DIFF = 722,           /* TIMESTAMP_DIFF  */
  YYSYMBOL_TIME_SYM = 723,                 /* TIME_SYM  */
  YYSYMBOL_TRANSACTION_SYM = 724,          /* TRANSACTION_SYM  */
  YYSYMBOL_TRANSACTIONAL_SYM = 725,        /* TRANSACTIONAL_SYM  */
  YYSYMBOL_THREADS_SYM = 726,              /* THREADS_SYM  */
  YYSYMBOL_TRIGGERS_SYM = 727,             /* TRIGGERS_SYM  */
  YYSYMBOL_TRIM_ORACLE = 728,              /* TRIM_ORACLE  */
  YYSYMBOL_TRUNCATE_SYM = 729,             /* TRUNCATE_SYM  */
  YYSYMBOL_TYPE_SYM = 730,                 /* TYPE_SYM  */
  YYSYMBOL_UDF_RETURNS_SYM = 731,          /* UDF_RETURNS_SYM  */
  YYSYMBOL_UNBOUNDED_SYM = 732,            /* UNBOUNDED_SYM  */
  YYSYMBOL_UNCOMMITTED_SYM = 733,          /* UNCOMMITTED_SYM  */
  YYSYMBOL_UNDEFINED_SYM = 734,            /* UNDEFINED_SYM  */
  YYSYMBOL_UNDOFILE_SYM = 735,             /* UNDOFILE_SYM  */
  YYSYMBOL_UNDO_BUFFER_SIZE_SYM = 736,     /* UNDO_BUFFER_SIZE_SYM  */
  YYSYMBOL_UNICODE_SYM = 737,              /* UNICODE_SYM  */
  YYSYMBOL_UNINSTALL_SYM = 738,            /* UNINSTALL_SYM  */
  YYSYMBOL_UNKNOWN_SYM = 739,              /* UNKNOWN_SYM  */
  YYSYMBOL_UNTIL_SYM = 740,                /* UNTIL_SYM  */
  YYSYMBOL_UPGRADE_SYM = 741,              /* UPGRADE_SYM  */
  YYSYMBOL_USER_SYM = 742,                 /* USER_SYM  */
  YYSYMBOL_USE_FRM = 743,                  /* USE_FRM  */
  YYSYMBOL_VALIDATION_SYM = 744,           /* VALIDATION_SYM  */
  YYSYMBOL_VALUE_SYM = 745,                /* VALUE_SYM  */
  YYSYMBOL_VARCHAR2_MARIADB_SYM = 746,     /* VARCHAR2_MARIADB_SYM  */
  YYSYMBOL_VARCHAR2_ORACLE_SYM = 747,      /* VARCHAR2_ORACLE_SYM  */
  YYSYMBOL_VARIABLES = 748,                /* VARIABLES  */
  YYSYMBOL_VERSIONING_SYM = 749,           /* VERSIONING_SYM  */
  YYSYMBOL_VIA_SYM = 750,                  /* VIA_SYM  */
  YYSYMBOL_VIEW_SYM = 751,                 /* VIEW_SYM  */
  YYSYMBOL_VISIBLE_SYM = 752,              /* VISIBLE_SYM  */
  YYSYMBOL_VIRTUAL_SYM = 753,              /* VIRTUAL_SYM  */
  YYSYMBOL_WAIT_SYM = 754,                 /* WAIT_SYM  */
  YYSYMBOL_WARNINGS = 755,                 /* WARNINGS  */
  YYSYMBOL_WEEK_SYM = 756,                 /* WEEK_SYM  */
  YYSYMBOL_WEIGHT_STRING_SYM = 757,        /* WEIGHT_STRING_SYM  */
  YYSYMBOL_WINDOW_SYM = 758,               /* WINDOW_SYM  */
  YYSYMBOL_WITHIN = 759,                   /* WITHIN  */
  YYSYMBOL_WITHOUT = 760,                  /* WITHOUT  */
  YYSYMBOL_WORK_SYM = 761,                 /* WORK_SYM  */
  YYSYMBOL_WRAPPER_SYM = 762,              /* WRAPPER_SYM  */
  YYSYMBOL_WRITE_SYM = 763,                /* WRITE_SYM  */
  YYSYMBOL_X509_SYM = 764,                 /* X509_SYM  */
  YYSYMBOL_XA_SYM = 765,                   /* XA_SYM  */
  YYSYMBOL_XML_SYM = 766,                  /* XML_SYM  */
  YYSYMBOL_YEAR_SYM = 767,                 /* YEAR_SYM  */
  YYSYMBOL_CONDITIONLESS_JOIN = 768,       /* CONDITIONLESS_JOIN  */
  YYSYMBOL_ON_SYM = 769,                   /* ON_SYM  */
  YYSYMBOL_PREC_BELOW_NOT = 770,           /* PREC_BELOW_NOT  */
  YYSYMBOL_771_ = 771,                     /* '='  */
  YYSYMBOL_772_ = 772,                     /* '>'  */
  YYSYMBOL_773_ = 773,                     /* '<'  */
  YYSYMBOL_774_ = 774,                     /* '|'  */
  YYSYMBOL_775_ = 775,                     /* '&'  */
  YYSYMBOL_776_ = 776,                     /* '-'  */
  YYSYMBOL_777_ = 777,                     /* '+'  */
  YYSYMBOL_778_ = 778,                     /* '*'  */
  YYSYMBOL_779_ = 779,                     /* '/'  */
  YYSYMBOL_780_ = 780,                     /* '%'  */
  YYSYMBOL_781_ = 781,                     /* '^'  */
  YYSYMBOL_782_ = 782,                     /* '~'  */
  YYSYMBOL_SUBQUERY_AS_EXPR = 783,         /* SUBQUERY_AS_EXPR  */
  YYSYMBOL_PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE = 784, /* PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE  */
  YYSYMBOL_USER = 785,                     /* USER  */
  YYSYMBOL_PREC_BELOW_SP_OBJECT_TYPE = 786, /* PREC_BELOW_SP_OBJECT_TYPE  */
  YYSYMBOL_PREC_BELOW_CONTRACTION_TOKEN2 = 787, /* PREC_BELOW_CONTRACTION_TOKEN2  */
  YYSYMBOL_788_ = 788,                     /* '('  */
  YYSYMBOL_789_ = 789,                     /* ')'  */
  YYSYMBOL_EMPTY_FROM_CLAUSE = 790,        /* EMPTY_FROM_CLAUSE  */
  YYSYMBOL_791_ = 791,                     /* ','  */
  YYSYMBOL_792_ = 792,                     /* '!'  */
  YYSYMBOL_793_ = 793,                     /* '{'  */
  YYSYMBOL_794_ = 794,                     /* '}'  */
  YYSYMBOL_795_ = 795,                     /* ';'  */
  YYSYMBOL_796_ = 796,                     /* '.'  */
  YYSYMBOL_797_ = 797,                     /* ':'  */
  YYSYMBOL_YYACCEPT = 798,                 /* $accept  */
  YYSYMBOL_query = 799,                    /* query  */
  YYSYMBOL_800_1 = 800,                    /* $@1  */
  YYSYMBOL_opt_end_of_input = 801,         /* opt_end_of_input  */
  YYSYMBOL_directly_executable_statement = 802, /* directly_executable_statement  */
  YYSYMBOL_verb_clause = 803,              /* verb_clause  */
  YYSYMBOL_deallocate = 804,               /* deallocate  */
  YYSYMBOL_deallocate_or_drop = 805,       /* deallocate_or_drop  */
  YYSYMBOL_prepare = 806,                  /* prepare  */
  YYSYMBOL_807_2 = 807,                    /* $@2  */
  YYSYMBOL_execute = 808,                  /* execute  */
  YYSYMBOL_809_3 = 809,                    /* $@3  */
  YYSYMBOL_810_4 = 810,                    /* $@4  */
  YYSYMBOL_execute_using = 811,            /* execute_using  */
  YYSYMBOL_812_5 = 812,                    /* $@5  */
  YYSYMBOL_execute_params = 813,           /* execute_params  */
  YYSYMBOL_help = 814,                     /* help  */
  YYSYMBOL_815_6 = 815,                    /* $@6  */
  YYSYMBOL_change = 816,                   /* change  */
  YYSYMBOL_817_7 = 817,                    /* $@7  */
  YYSYMBOL_master_defs = 818,              /* master_defs  */
  YYSYMBOL_master_def = 819,               /* master_def  */
  YYSYMBOL_ignore_server_id_list = 820,    /* ignore_server_id_list  */
  YYSYMBOL_ignore_server_id = 821,         /* ignore_server_id  */
  YYSYMBOL_do_domain_id_list = 822,        /* do_domain_id_list  */
  YYSYMBOL_do_domain_id = 823,             /* do_domain_id  */
  YYSYMBOL_ignore_domain_id_list = 824,    /* ignore_domain_id_list  */
  YYSYMBOL_ignore_domain_id = 825,         /* ignore_domain_id  */
  YYSYMBOL_master_file_def = 826,          /* master_file_def  */
  YYSYMBOL_optional_connection_name = 827, /* optional_connection_name  */
  YYSYMBOL_connection_name = 828,          /* connection_name  */
  YYSYMBOL_optional_for_channel = 829,     /* optional_for_channel  */
  YYSYMBOL_for_channel = 830,              /* for_channel  */
  YYSYMBOL_create = 831,                   /* create  */
  YYSYMBOL_832_8 = 832,                    /* $@8  */
  YYSYMBOL_833_9 = 833,                    /* $@9  */
  YYSYMBOL_834_10 = 834,                   /* $@10  */
  YYSYMBOL_835_11 = 835,                   /* $@11  */
  YYSYMBOL_836_12 = 836,                   /* $@12  */
  YYSYMBOL_837_13 = 837,                   /* $@13  */
  YYSYMBOL_838_14 = 838,                   /* $@14  */
  YYSYMBOL_839_15 = 839,                   /* $@15  */
  YYSYMBOL_840_16 = 840,                   /* $@16  */
  YYSYMBOL_841_17 = 841,                   /* $@17  */
  YYSYMBOL_842_18 = 842,                   /* $@18  */
  YYSYMBOL_843_19 = 843,                   /* $@19  */
  YYSYMBOL_844_20 = 844,                   /* $@20  */
  YYSYMBOL_845_21 = 845,                   /* $@21  */
  YYSYMBOL_846_22 = 846,                   /* $@22  */
  YYSYMBOL_847_23 = 847,                   /* $@23  */
  YYSYMBOL_848_24 = 848,                   /* $@24  */
  YYSYMBOL_opt_sequence = 849,             /* opt_sequence  */
  YYSYMBOL_sequence_defs = 850,            /* sequence_defs  */
  YYSYMBOL_sequence_def = 851,             /* sequence_def  */
  YYSYMBOL_force_lookahead = 852,          /* force_lookahead  */
  YYSYMBOL_server_def = 853,               /* server_def  */
  YYSYMBOL_854_25 = 854,                   /* $@25  */
  YYSYMBOL_server_options_list = 855,      /* server_options_list  */
  YYSYMBOL_server_option = 856,            /* server_option  */
  YYSYMBOL_event_tail = 857,               /* event_tail  */
  YYSYMBOL_858_26 = 858,                   /* $@26  */
  YYSYMBOL_ev_schedule_time = 859,         /* ev_schedule_time  */
  YYSYMBOL_860_27 = 860,                   /* $@27  */
  YYSYMBOL_opt_ev_status = 861,            /* opt_ev_status  */
  YYSYMBOL_ev_starts = 862,                /* ev_starts  */
  YYSYMBOL_ev_ends = 863,                  /* ev_ends  */
  YYSYMBOL_opt_ev_on_completion = 864,     /* opt_ev_on_completion  */
  YYSYMBOL_ev_on_completion = 865,         /* ev_on_completion  */
  YYSYMBOL_opt_ev_comment = 866,           /* opt_ev_comment  */
  YYSYMBOL_ev_sql_stmt = 867,              /* ev_sql_stmt  */
  YYSYMBOL_868_28 = 868,                   /* $@28  */
  YYSYMBOL_clear_privileges = 869,         /* clear_privileges  */
  YYSYMBOL_opt_aggregate = 870,            /* opt_aggregate  */
  YYSYMBOL_sp_handler = 871,               /* sp_handler  */
  YYSYMBOL_sp_handler_package_spec = 872,  /* sp_handler_package_spec  */
  YYSYMBOL_sp_handler_package_body = 873,  /* sp_handler_package_body  */
  YYSYMBOL_drop_routine = 874,             /* drop_routine  */
  YYSYMBOL_sp_name = 875,                  /* sp_name  */
  YYSYMBOL_sp_a_chistics = 876,            /* sp_a_chistics  */
  YYSYMBOL_sp_c_chistics = 877,            /* sp_c_chistics  */
  YYSYMBOL_sp_chistic = 878,               /* sp_chistic  */
  YYSYMBOL_sp_c_chistic = 879,             /* sp_c_chistic  */
  YYSYMBOL_sp_suid = 880,                  /* sp_suid  */
  YYSYMBOL_call = 881,                     /* call  */
  YYSYMBOL_882_29 = 882,                   /* $@29  */
  YYSYMBOL_883_30 = 883,                   /* $@30  */
  YYSYMBOL_884_31 = 884,                   /* $@31  */
  YYSYMBOL_opt_sp_cparam_list = 885,       /* opt_sp_cparam_list  */
  YYSYMBOL_886_32 = 886,                   /* $@32  */
  YYSYMBOL_opt_sp_cparams = 887,           /* opt_sp_cparams  */
  YYSYMBOL_sp_cparams = 888,               /* sp_cparams  */
  YYSYMBOL_sp_fdparam_list = 889,          /* sp_fdparam_list  */
  YYSYMBOL_890_33 = 890,                   /* $@33  */
  YYSYMBOL_sp_fdparams = 891,              /* sp_fdparams  */
  YYSYMBOL_sp_fdparams_no_default = 892,   /* sp_fdparams_no_default  */
  YYSYMBOL_sp_param_name = 893,            /* sp_param_name  */
  YYSYMBOL_sp_param_name_and_mode_init_vars = 894, /* sp_param_name_and_mode_init_vars  */
  YYSYMBOL_sp_pdparam_list = 895,          /* sp_pdparam_list  */
  YYSYMBOL_sp_pdparams = 896,              /* sp_pdparams  */
  YYSYMBOL_sp_parameter_type = 897,        /* sp_parameter_type  */
  YYSYMBOL_sp_parenthesized_pdparam_list = 898, /* sp_parenthesized_pdparam_list  */
  YYSYMBOL_899_34 = 899,                   /* $@34  */
  YYSYMBOL_sp_param_default = 900,         /* sp_param_default  */
  YYSYMBOL_sp_param = 901,                 /* sp_param  */
  YYSYMBOL_sp_parenthesized_fdparam_list = 902, /* sp_parenthesized_fdparam_list  */
  YYSYMBOL_sp_proc_stmts = 903,            /* sp_proc_stmts  */
  YYSYMBOL_sp_proc_stmts1 = 904,           /* sp_proc_stmts1  */
  YYSYMBOL_optionally_qualified_column_ident = 905, /* optionally_qualified_column_ident  */
  YYSYMBOL_row_field_definition = 906,     /* row_field_definition  */
  YYSYMBOL_row_field_definition_list = 907, /* row_field_definition_list  */
  YYSYMBOL_row_type_body = 908,            /* row_type_body  */
  YYSYMBOL_sp_decl_idents_init_vars = 909, /* sp_decl_idents_init_vars  */
  YYSYMBOL_sp_decl_variable_list = 910,    /* sp_decl_variable_list  */
  YYSYMBOL_911_35 = 911,                   /* $@35  */
  YYSYMBOL_sp_decl_handler = 912,          /* sp_decl_handler  */
  YYSYMBOL_913_36 = 913,                   /* $@36  */
  YYSYMBOL_opt_parenthesized_cursor_formal_parameters = 914, /* opt_parenthesized_cursor_formal_parameters  */
  YYSYMBOL_sp_cursor_stmt_lex = 915,       /* sp_cursor_stmt_lex  */
  YYSYMBOL_sp_cursor_stmt = 916,           /* sp_cursor_stmt  */
  YYSYMBOL_917_37 = 917,                   /* $@37  */
  YYSYMBOL_sp_handler_type = 918,          /* sp_handler_type  */
  YYSYMBOL_sp_hcond_list = 919,            /* sp_hcond_list  */
  YYSYMBOL_sp_hcond_element = 920,         /* sp_hcond_element  */
  YYSYMBOL_sp_cond = 921,                  /* sp_cond  */
  YYSYMBOL_sqlstate = 922,                 /* sqlstate  */
  YYSYMBOL_opt_value = 923,                /* opt_value  */
  YYSYMBOL_sp_hcond = 924,                 /* sp_hcond  */
  YYSYMBOL_raise_stmt_oracle = 925,        /* raise_stmt_oracle  */
  YYSYMBOL_signal_stmt = 926,              /* signal_stmt  */
  YYSYMBOL_signal_value = 927,             /* signal_value  */
  YYSYMBOL_opt_signal_value = 928,         /* opt_signal_value  */
  YYSYMBOL_opt_set_signal_information = 929, /* opt_set_signal_information  */
  YYSYMBOL_signal_information_item_list = 930, /* signal_information_item_list  */
  YYSYMBOL_signal_allowed_expr = 931,      /* signal_allowed_expr  */
  YYSYMBOL_signal_condition_information_item_name = 932, /* signal_condition_information_item_name  */
  YYSYMBOL_resignal_stmt = 933,            /* resignal_stmt  */
  YYSYMBOL_get_diagnostics = 934,          /* get_diagnostics  */
  YYSYMBOL_935_38 = 935,                   /* $@38  */
  YYSYMBOL_which_area = 936,               /* which_area  */
  YYSYMBOL_diagnostics_information = 937,  /* diagnostics_information  */
  YYSYMBOL_statement_information = 938,    /* statement_information  */
  YYSYMBOL_statement_information_item = 939, /* statement_information_item  */
  YYSYMBOL_simple_target_specification = 940, /* simple_target_specification  */
  YYSYMBOL_statement_information_item_name = 941, /* statement_information_item_name  */
  YYSYMBOL_condition_number = 942,         /* condition_number  */
  YYSYMBOL_condition_information = 943,    /* condition_information  */
  YYSYMBOL_condition_information_item = 944, /* condition_information_item  */
  YYSYMBOL_condition_information_item_name = 945, /* condition_information_item_name  */
  YYSYMBOL_sp_decl_ident = 946,            /* sp_decl_ident  */
  YYSYMBOL_sp_decl_idents = 947,           /* sp_decl_idents  */
  YYSYMBOL_sp_proc_stmt_if = 948,          /* sp_proc_stmt_if  */
  YYSYMBOL_949_39 = 949,                   /* $@39  */
  YYSYMBOL_sp_proc_stmt_statement = 950,   /* sp_proc_stmt_statement  */
  YYSYMBOL_951_40 = 951,                   /* $@40  */
  YYSYMBOL_RETURN_ALLMODES_SYM = 952,      /* RETURN_ALLMODES_SYM  */
  YYSYMBOL_sp_proc_stmt_return = 953,      /* sp_proc_stmt_return  */
  YYSYMBOL_954_41 = 954,                   /* $@41  */
  YYSYMBOL_sp_proc_stmt_exit_oracle = 955, /* sp_proc_stmt_exit_oracle  */
  YYSYMBOL_956_42 = 956,                   /* $@42  */
  YYSYMBOL_957_43 = 957,                   /* $@43  */
  YYSYMBOL_sp_proc_stmt_continue_oracle = 958, /* sp_proc_stmt_continue_oracle  */
  YYSYMBOL_959_44 = 959,                   /* $@44  */
  YYSYMBOL_960_45 = 960,                   /* $@45  */
  YYSYMBOL_sp_proc_stmt_leave = 961,       /* sp_proc_stmt_leave  */
  YYSYMBOL_sp_proc_stmt_iterate = 962,     /* sp_proc_stmt_iterate  */
  YYSYMBOL_sp_proc_stmt_goto_oracle = 963, /* sp_proc_stmt_goto_oracle  */
  YYSYMBOL_expr_lex = 964,                 /* expr_lex  */
  YYSYMBOL_965_46 = 965,                   /* @46  */
  YYSYMBOL_assignment_source_lex = 966,    /* assignment_source_lex  */
  YYSYMBOL_assignment_source_expr = 967,   /* assignment_source_expr  */
  YYSYMBOL_968_47 = 968,                   /* $@47  */
  YYSYMBOL_for_loop_bound_expr = 969,      /* for_loop_bound_expr  */
  YYSYMBOL_970_48 = 970,                   /* $@48  */
  YYSYMBOL_cursor_actual_parameters = 971, /* cursor_actual_parameters  */
  YYSYMBOL_opt_parenthesized_cursor_actual_parameters = 972, /* opt_parenthesized_cursor_actual_parameters  */
  YYSYMBOL_sp_proc_stmt_with_cursor = 973, /* sp_proc_stmt_with_cursor  */
  YYSYMBOL_sp_proc_stmt_open = 974,        /* sp_proc_stmt_open  */
  YYSYMBOL_sp_proc_stmt_fetch_head = 975,  /* sp_proc_stmt_fetch_head  */
  YYSYMBOL_sp_proc_stmt_fetch = 976,       /* sp_proc_stmt_fetch  */
  YYSYMBOL_sp_proc_stmt_close = 977,       /* sp_proc_stmt_close  */
  YYSYMBOL_sp_fetch_list = 978,            /* sp_fetch_list  */
  YYSYMBOL_sp_if = 979,                    /* sp_if  */
  YYSYMBOL_980_49 = 980,                   /* $@49  */
  YYSYMBOL_981_50 = 981,                   /* $@50  */
  YYSYMBOL_sp_elseifs = 982,               /* sp_elseifs  */
  YYSYMBOL_case_stmt_specification = 983,  /* case_stmt_specification  */
  YYSYMBOL_984_51 = 984,                   /* $@51  */
  YYSYMBOL_case_stmt_body = 985,           /* case_stmt_body  */
  YYSYMBOL_986_52 = 986,                   /* $@52  */
  YYSYMBOL_simple_when_clause_list = 987,  /* simple_when_clause_list  */
  YYSYMBOL_searched_when_clause_list = 988, /* searched_when_clause_list  */
  YYSYMBOL_simple_when_clause = 989,       /* simple_when_clause  */
  YYSYMBOL_990_53 = 990,                   /* $@53  */
  YYSYMBOL_searched_when_clause = 991,     /* searched_when_clause  */
  YYSYMBOL_992_54 = 992,                   /* $@54  */
  YYSYMBOL_else_clause_opt = 993,          /* else_clause_opt  */
  YYSYMBOL_sp_opt_label = 994,             /* sp_opt_label  */
  YYSYMBOL_opt_sp_for_loop_direction = 995, /* opt_sp_for_loop_direction  */
  YYSYMBOL_sp_for_loop_index_and_bounds = 996, /* sp_for_loop_index_and_bounds  */
  YYSYMBOL_sp_for_loop_bounds = 997,       /* sp_for_loop_bounds  */
  YYSYMBOL_loop_body = 998,                /* loop_body  */
  YYSYMBOL_repeat_body = 999,              /* repeat_body  */
  YYSYMBOL_pop_sp_loop_label = 1000,       /* pop_sp_loop_label  */
  YYSYMBOL_sp_labeled_control = 1001,      /* sp_labeled_control  */
  YYSYMBOL_1002_55 = 1002,                 /* $@55  */
  YYSYMBOL_1003_56 = 1003,                 /* $@56  */
  YYSYMBOL_1004_57 = 1004,                 /* $@57  */
  YYSYMBOL_1005_58 = 1005,                 /* $@58  */
  YYSYMBOL_1006_59 = 1006,                 /* $@59  */
  YYSYMBOL_1007_60 = 1007,                 /* $@60  */
  YYSYMBOL_sp_unlabeled_control = 1008,    /* sp_unlabeled_control  */
  YYSYMBOL_1009_61 = 1009,                 /* $@61  */
  YYSYMBOL_1010_62 = 1010,                 /* $@62  */
  YYSYMBOL_1011_63 = 1011,                 /* $@63  */
  YYSYMBOL_1012_64 = 1012,                 /* $@64  */
  YYSYMBOL_1013_65 = 1013,                 /* $@65  */
  YYSYMBOL_trg_action_time = 1014,         /* trg_action_time  */
  YYSYMBOL_trg_event = 1015,               /* trg_event  */
  YYSYMBOL_create_body = 1016,             /* create_body  */
  YYSYMBOL_1017_66 = 1017,                 /* $@66  */
  YYSYMBOL_create_like = 1018,             /* create_like  */
  YYSYMBOL_opt_create_select = 1019,       /* opt_create_select  */
  YYSYMBOL_create_select_query_expression = 1020, /* create_select_query_expression  */
  YYSYMBOL_opt_create_partitioning = 1021, /* opt_create_partitioning  */
  YYSYMBOL_opt_partitioning = 1022,        /* opt_partitioning  */
  YYSYMBOL_partitioning = 1023,            /* partitioning  */
  YYSYMBOL_1024_67 = 1024,                 /* $@67  */
  YYSYMBOL_have_partitioning = 1025,       /* have_partitioning  */
  YYSYMBOL_partition_entry = 1026,         /* partition_entry  */
  YYSYMBOL_1027_68 = 1027,                 /* $@68  */
  YYSYMBOL_partition = 1028,               /* partition  */
  YYSYMBOL_1029_69 = 1029,                 /* $@69  */
  YYSYMBOL_part_type_def = 1030,           /* part_type_def  */
  YYSYMBOL_1031_70 = 1031,                 /* $@70  */
  YYSYMBOL_1032_71 = 1032,                 /* $@71  */
  YYSYMBOL_1033_72 = 1033,                 /* $@72  */
  YYSYMBOL_opt_linear = 1034,              /* opt_linear  */
  YYSYMBOL_opt_key_algo = 1035,            /* opt_key_algo  */
  YYSYMBOL_part_field_list = 1036,         /* part_field_list  */
  YYSYMBOL_part_field_item_list = 1037,    /* part_field_item_list  */
  YYSYMBOL_part_field_item = 1038,         /* part_field_item  */
  YYSYMBOL_part_column_list = 1039,        /* part_column_list  */
  YYSYMBOL_part_func = 1040,               /* part_func  */
  YYSYMBOL_sub_part_func = 1041,           /* sub_part_func  */
  YYSYMBOL_opt_num_parts = 1042,           /* opt_num_parts  */
  YYSYMBOL_opt_sub_part = 1043,            /* opt_sub_part  */
  YYSYMBOL_1044_73 = 1044,                 /* $@73  */
  YYSYMBOL_1045_74 = 1045,                 /* $@74  */
  YYSYMBOL_sub_part_field_list = 1046,     /* sub_part_field_list  */
  YYSYMBOL_sub_part_field_item = 1047,     /* sub_part_field_item  */
  YYSYMBOL_part_func_expr = 1048,          /* part_func_expr  */
  YYSYMBOL_opt_num_subparts = 1049,        /* opt_num_subparts  */
  YYSYMBOL_part_defs = 1050,               /* part_defs  */
  YYSYMBOL_part_def_list = 1051,           /* part_def_list  */
  YYSYMBOL_opt_partition = 1052,           /* opt_partition  */
  YYSYMBOL_part_definition = 1053,         /* part_definition  */
  YYSYMBOL_1054_75 = 1054,                 /* $@75  */
  YYSYMBOL_part_name = 1055,               /* part_name  */
  YYSYMBOL_opt_part_values = 1056,         /* opt_part_values  */
  YYSYMBOL_1057_76 = 1057,                 /* $@76  */
  YYSYMBOL_1058_77 = 1058,                 /* $@77  */
  YYSYMBOL_part_func_max = 1059,           /* part_func_max  */
  YYSYMBOL_part_values_in = 1060,          /* part_values_in  */
  YYSYMBOL_part_value_list = 1061,         /* part_value_list  */
  YYSYMBOL_part_value_item = 1062,         /* part_value_item  */
  YYSYMBOL_1063_78 = 1063,                 /* $@78  */
  YYSYMBOL_1064_79 = 1064,                 /* $@79  */
  YYSYMBOL_part_value_item_list = 1065,    /* part_value_item_list  */
  YYSYMBOL_part_value_expr_item = 1066,    /* part_value_expr_item  */
  YYSYMBOL_opt_sub_partition = 1067,       /* opt_sub_partition  */
  YYSYMBOL_sub_part_list = 1068,           /* sub_part_list  */
  YYSYMBOL_sub_part_definition = 1069,     /* sub_part_definition  */
  YYSYMBOL_1070_80 = 1070,                 /* $@80  */
  YYSYMBOL_sub_name = 1071,                /* sub_name  */
  YYSYMBOL_opt_part_options = 1072,        /* opt_part_options  */
  YYSYMBOL_part_option_list = 1073,        /* part_option_list  */
  YYSYMBOL_part_option = 1074,             /* part_option  */
  YYSYMBOL_opt_subpart_options = 1075,     /* opt_subpart_options  */
  YYSYMBOL_subpart_option_list = 1076,     /* subpart_option_list  */
  YYSYMBOL_server_part_option = 1077,      /* server_part_option  */
  YYSYMBOL_opt_versioning_rotation = 1078, /* opt_versioning_rotation  */
  YYSYMBOL_1079_81 = 1079,                 /* $@81  */
  YYSYMBOL_opt_versioning_interval_start = 1080, /* opt_versioning_interval_start  */
  YYSYMBOL_opt_vers_auto_part = 1081,      /* opt_vers_auto_part  */
  YYSYMBOL_opt_as = 1082,                  /* opt_as  */
  YYSYMBOL_opt_create_database_options = 1083, /* opt_create_database_options  */
  YYSYMBOL_create_database_options = 1084, /* create_database_options  */
  YYSYMBOL_create_database_option = 1085,  /* create_database_option  */
  YYSYMBOL_opt_if_not_exists_table_element = 1086, /* opt_if_not_exists_table_element  */
  YYSYMBOL_opt_if_not_exists = 1087,       /* opt_if_not_exists  */
  YYSYMBOL_create_or_replace = 1088,       /* create_or_replace  */
  YYSYMBOL_opt_create_table_options = 1089, /* opt_create_table_options  */
  YYSYMBOL_create_table_options_space_separated = 1090, /* create_table_options_space_separated  */
  YYSYMBOL_create_table_options = 1091,    /* create_table_options  */
  YYSYMBOL_create_table_option = 1092,     /* create_table_option  */
  YYSYMBOL_1093_82 = 1093,                 /* $@82  */
  YYSYMBOL_engine_defined_option = 1094,   /* engine_defined_option  */
  YYSYMBOL_ident_options = 1095,           /* ident_options  */
  YYSYMBOL_keyword_options = 1096,         /* keyword_options  */
  YYSYMBOL_opt_versioning_option = 1097,   /* opt_versioning_option  */
  YYSYMBOL_versioning_option = 1098,       /* versioning_option  */
  YYSYMBOL_default_charset = 1099,         /* default_charset  */
  YYSYMBOL_default_collation = 1100,       /* default_collation  */
  YYSYMBOL_storage_engines = 1101,         /* storage_engines  */
  YYSYMBOL_known_storage_engines = 1102,   /* known_storage_engines  */
  YYSYMBOL_row_types = 1103,               /* row_types  */
  YYSYMBOL_merge_insert_types = 1104,      /* merge_insert_types  */
  YYSYMBOL_udf_type = 1105,                /* udf_type  */
  YYSYMBOL_create_field_list = 1106,       /* create_field_list  */
  YYSYMBOL_create_field_list_parens = 1107, /* create_field_list_parens  */
  YYSYMBOL_field_list = 1108,              /* field_list  */
  YYSYMBOL_field_list_item = 1109,         /* field_list_item  */
  YYSYMBOL_column_def = 1110,              /* column_def  */
  YYSYMBOL_key_def = 1111,                 /* key_def  */
  YYSYMBOL_1112_83 = 1112,                 /* $@83  */
  YYSYMBOL_1113_84 = 1113,                 /* $@84  */
  YYSYMBOL_1114_85 = 1114,                 /* $@85  */
  YYSYMBOL_1115_86 = 1115,                 /* $@86  */
  YYSYMBOL_1116_87 = 1116,                 /* $@87  */
  YYSYMBOL_1117_88 = 1117,                 /* $@88  */
  YYSYMBOL_1118_89 = 1118,                 /* $@89  */
  YYSYMBOL_constraint_def = 1119,          /* constraint_def  */
  YYSYMBOL_period_for_system_time = 1120,  /* period_for_system_time  */
  YYSYMBOL_period_for_application_time = 1121, /* period_for_application_time  */
  YYSYMBOL_opt_check_constraint = 1122,    /* opt_check_constraint  */
  YYSYMBOL_check_constraint = 1123,        /* check_constraint  */
  YYSYMBOL_opt_constraint_no_id = 1124,    /* opt_constraint_no_id  */
  YYSYMBOL_opt_constraint = 1125,          /* opt_constraint  */
  YYSYMBOL_constraint = 1126,              /* constraint  */
  YYSYMBOL_field_spec = 1127,              /* field_spec  */
  YYSYMBOL_1128_90 = 1128,                 /* @90  */
  YYSYMBOL_field_type_or_serial = 1129,    /* field_type_or_serial  */
  YYSYMBOL_1130_91 = 1130,                 /* $@91  */
  YYSYMBOL_1131_92 = 1131,                 /* $@92  */
  YYSYMBOL_opt_serial_attribute = 1132,    /* opt_serial_attribute  */
  YYSYMBOL_opt_serial_attribute_list = 1133, /* opt_serial_attribute_list  */
  YYSYMBOL_opt_asrow_attribute = 1134,     /* opt_asrow_attribute  */
  YYSYMBOL_opt_asrow_attribute_list = 1135, /* opt_asrow_attribute_list  */
  YYSYMBOL_field_def = 1136,               /* field_def  */
  YYSYMBOL_1137_93 = 1137,                 /* $@93  */
  YYSYMBOL_opt_generated_always = 1138,    /* opt_generated_always  */
  YYSYMBOL_vcol_opt_specifier = 1139,      /* vcol_opt_specifier  */
  YYSYMBOL_vcol_opt_attribute = 1140,      /* vcol_opt_attribute  */
  YYSYMBOL_vcol_opt_attribute_list = 1141, /* vcol_opt_attribute_list  */
  YYSYMBOL_vcol_attribute = 1142,          /* vcol_attribute  */
  YYSYMBOL_parse_vcol_expr = 1143,         /* parse_vcol_expr  */
  YYSYMBOL_1144_94 = 1144,                 /* $@94  */
  YYSYMBOL_parenthesized_expr = 1145,      /* parenthesized_expr  */
  YYSYMBOL_virtual_column_func = 1146,     /* virtual_column_func  */
  YYSYMBOL_expr_or_literal = 1147,         /* expr_or_literal  */
  YYSYMBOL_column_default_expr = 1148,     /* column_default_expr  */
  YYSYMBOL_field_type = 1149,              /* field_type  */
  YYSYMBOL_qualified_field_type = 1150,    /* qualified_field_type  */
  YYSYMBOL_udt_name = 1151,                /* udt_name  */
  YYSYMBOL_field_type_all_builtin = 1152,  /* field_type_all_builtin  */
  YYSYMBOL_field_type_all = 1153,          /* field_type_all  */
  YYSYMBOL_field_type_all_with_record = 1154, /* field_type_all_with_record  */
  YYSYMBOL_field_type_numeric = 1155,      /* field_type_numeric  */
  YYSYMBOL_opt_binary_and_compression = 1156, /* opt_binary_and_compression  */
  YYSYMBOL_field_type_string = 1157,       /* field_type_string  */
  YYSYMBOL_field_type_temporal = 1158,     /* field_type_temporal  */
  YYSYMBOL_field_type_lob = 1159,          /* field_type_lob  */
  YYSYMBOL_field_type_misc = 1160,         /* field_type_misc  */
  YYSYMBOL_char = 1161,                    /* char  */
  YYSYMBOL_nchar = 1162,                   /* nchar  */
  YYSYMBOL_varchar = 1163,                 /* varchar  */
  YYSYMBOL_nvarchar = 1164,                /* nvarchar  */
  YYSYMBOL_int_type = 1165,                /* int_type  */
  YYSYMBOL_real_type = 1166,               /* real_type  */
  YYSYMBOL_srid_option = 1167,             /* srid_option  */
  YYSYMBOL_float_options = 1168,           /* float_options  */
  YYSYMBOL_precision = 1169,               /* precision  */
  YYSYMBOL_field_options = 1170,           /* field_options  */
  YYSYMBOL_last_field_options = 1171,      /* last_field_options  */
  YYSYMBOL_field_length_str = 1172,        /* field_length_str  */
  YYSYMBOL_field_length = 1173,            /* field_length  */
  YYSYMBOL_field_scale = 1174,             /* field_scale  */
  YYSYMBOL_opt_field_length = 1175,        /* opt_field_length  */
  YYSYMBOL_opt_field_scale = 1176,         /* opt_field_scale  */
  YYSYMBOL_opt_precision = 1177,           /* opt_precision  */
  YYSYMBOL_attribute_list = 1178,          /* attribute_list  */
  YYSYMBOL_attribute = 1179,               /* attribute  */
  YYSYMBOL_opt_compression_method = 1180,  /* opt_compression_method  */
  YYSYMBOL_opt_compressed = 1181,          /* opt_compressed  */
  YYSYMBOL_opt_enable = 1182,              /* opt_enable  */
  YYSYMBOL_compressed = 1183,              /* compressed  */
  YYSYMBOL_asrow_attribute = 1184,         /* asrow_attribute  */
  YYSYMBOL_serial_attribute = 1185,        /* serial_attribute  */
  YYSYMBOL_with_or_without_system = 1186,  /* with_or_without_system  */
  YYSYMBOL_charset = 1187,                 /* charset  */
  YYSYMBOL_charset_name = 1188,            /* charset_name  */
  YYSYMBOL_charset_name_or_default = 1189, /* charset_name_or_default  */
  YYSYMBOL_opt_load_data_charset = 1190,   /* opt_load_data_charset  */
  YYSYMBOL_old_or_new_charset_name = 1191, /* old_or_new_charset_name  */
  YYSYMBOL_old_or_new_charset_name_or_default = 1192, /* old_or_new_charset_name_or_default  */
  YYSYMBOL_collation_name = 1193,          /* collation_name  */
  YYSYMBOL_collation_name_or_default = 1194, /* collation_name_or_default  */
  YYSYMBOL_opt_default = 1195,             /* opt_default  */
  YYSYMBOL_charset_or_alias = 1196,        /* charset_or_alias  */
  YYSYMBOL_opt_binary = 1197,              /* opt_binary  */
  YYSYMBOL_binary = 1198,                  /* binary  */
  YYSYMBOL_opt_bin_mod = 1199,             /* opt_bin_mod  */
  YYSYMBOL_ws_nweights = 1200,             /* ws_nweights  */
  YYSYMBOL_1201_95 = 1201,                 /* $@95  */
  YYSYMBOL_ws_level_flag_desc = 1202,      /* ws_level_flag_desc  */
  YYSYMBOL_ws_level_flag_reverse = 1203,   /* ws_level_flag_reverse  */
  YYSYMBOL_ws_level_flags = 1204,          /* ws_level_flags  */
  YYSYMBOL_ws_level_number = 1205,         /* ws_level_number  */
  YYSYMBOL_ws_level_list_item = 1206,      /* ws_level_list_item  */
  YYSYMBOL_ws_level_list = 1207,           /* ws_level_list  */
  YYSYMBOL_ws_level_range = 1208,          /* ws_level_range  */
  YYSYMBOL_ws_level_list_or_range = 1209,  /* ws_level_list_or_range  */
  YYSYMBOL_opt_ws_levels = 1210,           /* opt_ws_levels  */
  YYSYMBOL_opt_primary = 1211,             /* opt_primary  */
  YYSYMBOL_references = 1212,              /* references  */
  YYSYMBOL_opt_ref_list = 1213,            /* opt_ref_list  */
  YYSYMBOL_ref_list = 1214,                /* ref_list  */
  YYSYMBOL_opt_match_clause = 1215,        /* opt_match_clause  */
  YYSYMBOL_opt_on_update_delete = 1216,    /* opt_on_update_delete  */
  YYSYMBOL_delete_option = 1217,           /* delete_option  */
  YYSYMBOL_constraint_key_type = 1218,     /* constraint_key_type  */
  YYSYMBOL_key_or_index = 1219,            /* key_or_index  */
  YYSYMBOL_opt_key_or_index = 1220,        /* opt_key_or_index  */
  YYSYMBOL_keys_or_index = 1221,           /* keys_or_index  */
  YYSYMBOL_fulltext = 1222,                /* fulltext  */
  YYSYMBOL_spatial_or_vector = 1223,       /* spatial_or_vector  */
  YYSYMBOL_normal_key_options = 1224,      /* normal_key_options  */
  YYSYMBOL_fulltext_key_options = 1225,    /* fulltext_key_options  */
  YYSYMBOL_spatial_key_options = 1226,     /* spatial_key_options  */
  YYSYMBOL_normal_key_opts = 1227,         /* normal_key_opts  */
  YYSYMBOL_spatial_key_opts = 1228,        /* spatial_key_opts  */
  YYSYMBOL_fulltext_key_opts = 1229,       /* fulltext_key_opts  */
  YYSYMBOL_opt_USING_key_algorithm = 1230, /* opt_USING_key_algorithm  */
  YYSYMBOL_opt_key_algorithm_clause = 1231, /* opt_key_algorithm_clause  */
  YYSYMBOL_key_using_alg = 1232,           /* key_using_alg  */
  YYSYMBOL_all_key_opt = 1233,             /* all_key_opt  */
  YYSYMBOL_normal_key_opt = 1234,          /* normal_key_opt  */
  YYSYMBOL_spatial_key_opt = 1235,         /* spatial_key_opt  */
  YYSYMBOL_fulltext_key_opt = 1236,        /* fulltext_key_opt  */
  YYSYMBOL_btree_or_rtree = 1237,          /* btree_or_rtree  */
  YYSYMBOL_ignorability = 1238,            /* ignorability  */
  YYSYMBOL_key_list = 1239,                /* key_list  */
  YYSYMBOL_opt_without_overlaps = 1240,    /* opt_without_overlaps  */
  YYSYMBOL_key_part = 1241,                /* key_part  */
  YYSYMBOL_key_part_simple = 1242,         /* key_part_simple  */
  YYSYMBOL_opt_ident = 1243,               /* opt_ident  */
  YYSYMBOL_string_list = 1244,             /* string_list  */
  YYSYMBOL_alter = 1245,                   /* alter  */
  YYSYMBOL_1246_96 = 1246,                 /* $@96  */
  YYSYMBOL_1247_97 = 1247,                 /* $@97  */
  YYSYMBOL_1248_98 = 1248,                 /* $@98  */
  YYSYMBOL_1249_99 = 1249,                 /* $@99  */
  YYSYMBOL_1250_100 = 1250,                /* $@100  */
  YYSYMBOL_1251_101 = 1251,                /* $@101  */
  YYSYMBOL_1252_102 = 1252,                /* $@102  */
  YYSYMBOL_1253_103 = 1253,                /* $@103  */
  YYSYMBOL_1254_104 = 1254,                /* $@104  */
  YYSYMBOL_1255_105 = 1255,                /* $@105  */
  YYSYMBOL_1256_106 = 1256,                /* $@106  */
  YYSYMBOL_1257_107 = 1257,                /* $@107  */
  YYSYMBOL_1258_108 = 1258,                /* $@108  */
  YYSYMBOL_account_locking_option = 1259,  /* account_locking_option  */
  YYSYMBOL_opt_password_expire_option = 1260, /* opt_password_expire_option  */
  YYSYMBOL_opt_account_locking_and_opt_password_expiration = 1261, /* opt_account_locking_and_opt_password_expiration  */
  YYSYMBOL_ev_alter_on_schedule_completion = 1262, /* ev_alter_on_schedule_completion  */
  YYSYMBOL_opt_ev_rename_to = 1263,        /* opt_ev_rename_to  */
  YYSYMBOL_opt_ev_sql_stmt = 1264,         /* opt_ev_sql_stmt  */
  YYSYMBOL_ident_or_empty = 1265,          /* ident_or_empty  */
  YYSYMBOL_alter_commands = 1266,          /* alter_commands  */
  YYSYMBOL_1267_109 = 1267,                /* $@109  */
  YYSYMBOL_1268_110 = 1268,                /* $@110  */
  YYSYMBOL_1269_111 = 1269,                /* $@111  */
  YYSYMBOL_1270_112 = 1270,                /* $@112  */
  YYSYMBOL_remove_partitioning = 1271,     /* remove_partitioning  */
  YYSYMBOL_all_or_alt_part_name_list = 1272, /* all_or_alt_part_name_list  */
  YYSYMBOL_add_partition_rule = 1273,      /* add_partition_rule  */
  YYSYMBOL_1274_113 = 1274,                /* $@113  */
  YYSYMBOL_add_part_extra = 1275,          /* add_part_extra  */
  YYSYMBOL_reorg_partition_rule = 1276,    /* reorg_partition_rule  */
  YYSYMBOL_1277_114 = 1277,                /* $@114  */
  YYSYMBOL_reorg_parts_rule = 1278,        /* reorg_parts_rule  */
  YYSYMBOL_1279_115 = 1279,                /* $@115  */
  YYSYMBOL_alt_part_name_list = 1280,      /* alt_part_name_list  */
  YYSYMBOL_alt_part_name_item = 1281,      /* alt_part_name_item  */
  YYSYMBOL_alter_list = 1282,              /* alter_list  */
  YYSYMBOL_add_column = 1283,              /* add_column  */
  YYSYMBOL_alter_list_item = 1284,         /* alter_list_item  */
  YYSYMBOL_opt_without_validation = 1285,  /* opt_without_validation  */
  YYSYMBOL_opt_index_lock_algorithm = 1286, /* opt_index_lock_algorithm  */
  YYSYMBOL_alter_algorithm_option = 1287,  /* alter_algorithm_option  */
  YYSYMBOL_alter_lock_option = 1288,       /* alter_lock_option  */
  YYSYMBOL_opt_column = 1289,              /* opt_column  */
  YYSYMBOL_opt_ignore = 1290,              /* opt_ignore  */
  YYSYMBOL_alter_options = 1291,           /* alter_options  */
  YYSYMBOL_1292_116 = 1292,                /* $@116  */
  YYSYMBOL_alter_options_part2 = 1293,     /* alter_options_part2  */
  YYSYMBOL_alter_option_list = 1294,       /* alter_option_list  */
  YYSYMBOL_alter_option = 1295,            /* alter_option  */
  YYSYMBOL_opt_restrict = 1296,            /* opt_restrict  */
  YYSYMBOL_opt_place = 1297,               /* opt_place  */
  YYSYMBOL_opt_to = 1298,                  /* opt_to  */
  YYSYMBOL_slave = 1299,                   /* slave  */
  YYSYMBOL_1300_117 = 1300,                /* $@117  */
  YYSYMBOL_1301_118 = 1301,                /* $@118  */
  YYSYMBOL_start = 1302,                   /* start  */
  YYSYMBOL_opt_start_transaction_option_list = 1303, /* opt_start_transaction_option_list  */
  YYSYMBOL_start_transaction_option_list = 1304, /* start_transaction_option_list  */
  YYSYMBOL_start_transaction_option = 1305, /* start_transaction_option  */
  YYSYMBOL_slave_thread_opts = 1306,       /* slave_thread_opts  */
  YYSYMBOL_1307_119 = 1307,                /* $@119  */
  YYSYMBOL_slave_thread_opt_list = 1308,   /* slave_thread_opt_list  */
  YYSYMBOL_slave_thread_opt = 1309,        /* slave_thread_opt  */
  YYSYMBOL_slave_until = 1310,             /* slave_until  */
  YYSYMBOL_slave_until_opts = 1311,        /* slave_until_opts  */
  YYSYMBOL_checksum = 1312,                /* checksum  */
  YYSYMBOL_1313_120 = 1313,                /* $@120  */
  YYSYMBOL_opt_checksum_type = 1314,       /* opt_checksum_type  */
  YYSYMBOL_repair_table_or_view = 1315,    /* repair_table_or_view  */
  YYSYMBOL_1316_121 = 1316,                /* $@121  */
  YYSYMBOL_repair = 1317,                  /* repair  */
  YYSYMBOL_1318_122 = 1318,                /* $@122  */
  YYSYMBOL_opt_mi_repair_type = 1319,      /* opt_mi_repair_type  */
  YYSYMBOL_mi_repair_types = 1320,         /* mi_repair_types  */
  YYSYMBOL_mi_repair_type = 1321,          /* mi_repair_type  */
  YYSYMBOL_opt_view_repair_type = 1322,    /* opt_view_repair_type  */
  YYSYMBOL_analyze = 1323,                 /* analyze  */
  YYSYMBOL_1324_123 = 1324,                /* $@123  */
  YYSYMBOL_analyze_table_list = 1325,      /* analyze_table_list  */
  YYSYMBOL_analyze_table_elem_spec = 1326, /* analyze_table_elem_spec  */
  YYSYMBOL_opt_persistent_stat_clause = 1327, /* opt_persistent_stat_clause  */
  YYSYMBOL_persistent_stat_spec = 1328,    /* persistent_stat_spec  */
  YYSYMBOL_persistent_column_stat_spec = 1329, /* persistent_column_stat_spec  */
  YYSYMBOL_1330_124 = 1330,                /* $@124  */
  YYSYMBOL_persistent_index_stat_spec = 1331, /* persistent_index_stat_spec  */
  YYSYMBOL_1332_125 = 1332,                /* $@125  */
  YYSYMBOL_table_column_list = 1333,       /* table_column_list  */
  YYSYMBOL_table_index_list = 1334,        /* table_index_list  */
  YYSYMBOL_table_index_name = 1335,        /* table_index_name  */
  YYSYMBOL_binlog_base64_event = 1336,     /* binlog_base64_event  */
  YYSYMBOL_check_view_or_table = 1337,     /* check_view_or_table  */
  YYSYMBOL_1338_126 = 1338,                /* $@126  */
  YYSYMBOL_check = 1339,                   /* check  */
  YYSYMBOL_1340_127 = 1340,                /* $@127  */
  YYSYMBOL_opt_mi_check_type = 1341,       /* opt_mi_check_type  */
  YYSYMBOL_mi_check_types = 1342,          /* mi_check_types  */
  YYSYMBOL_mi_check_type = 1343,           /* mi_check_type  */
  YYSYMBOL_opt_view_check_type = 1344,     /* opt_view_check_type  */
  YYSYMBOL_optimize = 1345,                /* optimize  */
  YYSYMBOL_1346_128 = 1346,                /* $@128  */
  YYSYMBOL_opt_no_write_to_binlog = 1347,  /* opt_no_write_to_binlog  */
  YYSYMBOL_rename = 1348,                  /* rename  */
  YYSYMBOL_1349_129 = 1349,                /* $@129  */
  YYSYMBOL_rename_list = 1350,             /* rename_list  */
  YYSYMBOL_table_to_table_list = 1351,     /* table_to_table_list  */
  YYSYMBOL_table_to_table = 1352,          /* table_to_table  */
  YYSYMBOL_keycache = 1353,                /* keycache  */
  YYSYMBOL_1354_130 = 1354,                /* $@130  */
  YYSYMBOL_keycache_list_or_parts = 1355,  /* keycache_list_or_parts  */
  YYSYMBOL_keycache_list = 1356,           /* keycache_list  */
  YYSYMBOL_assign_to_keycache = 1357,      /* assign_to_keycache  */
  YYSYMBOL_assign_to_keycache_parts = 1358, /* assign_to_keycache_parts  */
  YYSYMBOL_key_cache_name = 1359,          /* key_cache_name  */
  YYSYMBOL_preload = 1360,                 /* preload  */
  YYSYMBOL_1361_131 = 1361,                /* $@131  */
  YYSYMBOL_preload_list_or_parts = 1362,   /* preload_list_or_parts  */
  YYSYMBOL_preload_list = 1363,            /* preload_list  */
  YYSYMBOL_preload_keys = 1364,            /* preload_keys  */
  YYSYMBOL_preload_keys_parts = 1365,      /* preload_keys_parts  */
  YYSYMBOL_adm_partition = 1366,           /* adm_partition  */
  YYSYMBOL_1367_132 = 1367,                /* $@132  */
  YYSYMBOL_cache_keys_spec = 1368,         /* cache_keys_spec  */
  YYSYMBOL_1369_133 = 1369,                /* $@133  */
  YYSYMBOL_cache_key_list_or_empty = 1370, /* cache_key_list_or_empty  */
  YYSYMBOL_opt_ignore_leaves = 1371,       /* opt_ignore_leaves  */
  YYSYMBOL_select = 1372,                  /* select  */
  YYSYMBOL_1373_134 = 1373,                /* $@134  */
  YYSYMBOL_1374_135 = 1374,                /* $@135  */
  YYSYMBOL_select_into = 1375,             /* select_into  */
  YYSYMBOL_1376_136 = 1376,                /* $@136  */
  YYSYMBOL_1377_137 = 1377,                /* $@137  */
  YYSYMBOL_simple_table = 1378,            /* simple_table  */
  YYSYMBOL_table_value_constructor = 1379, /* table_value_constructor  */
  YYSYMBOL_1380_138 = 1380,                /* $@138  */
  YYSYMBOL_query_specification_start = 1381, /* query_specification_start  */
  YYSYMBOL_1382_139 = 1382,                /* $@139  */
  YYSYMBOL_1383_140 = 1383,                /* $@140  */
  YYSYMBOL_query_specification = 1384,     /* query_specification  */
  YYSYMBOL_select_into_query_specification = 1385, /* select_into_query_specification  */
  YYSYMBOL_query_expression = 1386,        /* query_expression  */
  YYSYMBOL_query_expression_no_with_clause = 1387, /* query_expression_no_with_clause  */
  YYSYMBOL_query_expression_body_ext = 1388, /* query_expression_body_ext  */
  YYSYMBOL_1389_141 = 1389,                /* $@141  */
  YYSYMBOL_1390_142 = 1390,                /* $@142  */
  YYSYMBOL_query_expression_body_ext_parens = 1391, /* query_expression_body_ext_parens  */
  YYSYMBOL_query_expression_body = 1392,   /* query_expression_body  */
  YYSYMBOL_1393_143 = 1393,                /* $@143  */
  YYSYMBOL_query_primary = 1394,           /* query_primary  */
  YYSYMBOL_query_simple = 1395,            /* query_simple  */
  YYSYMBOL_subselect = 1396,               /* subselect  */
  YYSYMBOL_subquery = 1397,                /* subquery  */
  YYSYMBOL_opt_from_clause = 1398,         /* opt_from_clause  */
  YYSYMBOL_from_clause = 1399,             /* from_clause  */
  YYSYMBOL_table_reference_list = 1400,    /* table_reference_list  */
  YYSYMBOL_select_options = 1401,          /* select_options  */
  YYSYMBOL_opt_history_unit = 1402,        /* opt_history_unit  */
  YYSYMBOL_history_point = 1403,           /* history_point  */
  YYSYMBOL_for_portion_of_time_clause = 1404, /* for_portion_of_time_clause  */
  YYSYMBOL_opt_for_portion_of_time_clause = 1405, /* opt_for_portion_of_time_clause  */
  YYSYMBOL_opt_for_system_time_clause = 1406, /* opt_for_system_time_clause  */
  YYSYMBOL_system_time_expr = 1407,        /* system_time_expr  */
  YYSYMBOL_select_option_list = 1408,      /* select_option_list  */
  YYSYMBOL_select_option = 1409,           /* select_option  */
  YYSYMBOL_select_lock_type = 1410,        /* select_lock_type  */
  YYSYMBOL_opt_select_lock_type = 1411,    /* opt_select_lock_type  */
  YYSYMBOL_opt_lock_wait_timeout_new = 1412, /* opt_lock_wait_timeout_new  */
  YYSYMBOL_select_item_list = 1413,        /* select_item_list  */
  YYSYMBOL_select_item = 1414,             /* select_item  */
  YYSYMBOL_remember_tok_start = 1415,      /* remember_tok_start  */
  YYSYMBOL_remember_name = 1416,           /* remember_name  */
  YYSYMBOL_remember_end = 1417,            /* remember_end  */
  YYSYMBOL_remember_cpp_ptr = 1418,        /* remember_cpp_ptr  */
  YYSYMBOL_remember_start_opt = 1419,      /* remember_start_opt  */
  YYSYMBOL_remember_end_opt = 1420,        /* remember_end_opt  */
  YYSYMBOL_remember_lex = 1421,            /* remember_lex  */
  YYSYMBOL_select_alias = 1422,            /* select_alias  */
  YYSYMBOL_opt_default_time_precision = 1423, /* opt_default_time_precision  */
  YYSYMBOL_opt_time_precision = 1424,      /* opt_time_precision  */
  YYSYMBOL_optional_braces = 1425,         /* optional_braces  */
  YYSYMBOL_search_condition = 1426,        /* search_condition  */
  YYSYMBOL_expr = 1427,                    /* expr  */
  YYSYMBOL_boolean_test = 1428,            /* boolean_test  */
  YYSYMBOL_predicate = 1429,               /* predicate  */
  YYSYMBOL_bit_expr = 1430,                /* bit_expr  */
  YYSYMBOL_or = 1431,                      /* or  */
  YYSYMBOL_and = 1432,                     /* and  */
  YYSYMBOL_not = 1433,                     /* not  */
  YYSYMBOL_not2 = 1434,                    /* not2  */
  YYSYMBOL_comp_op = 1435,                 /* comp_op  */
  YYSYMBOL_all_or_any = 1436,              /* all_or_any  */
  YYSYMBOL_opt_dyncol_type = 1437,         /* opt_dyncol_type  */
  YYSYMBOL_dyncol_type = 1438,             /* dyncol_type  */
  YYSYMBOL_numeric_dyncol_type = 1439,     /* numeric_dyncol_type  */
  YYSYMBOL_temporal_dyncol_type = 1440,    /* temporal_dyncol_type  */
  YYSYMBOL_string_dyncol_type = 1441,      /* string_dyncol_type  */
  YYSYMBOL_dyncall_create_element = 1442,  /* dyncall_create_element  */
  YYSYMBOL_dyncall_create_list = 1443,     /* dyncall_create_list  */
  YYSYMBOL_plsql_cursor_attr = 1444,       /* plsql_cursor_attr  */
  YYSYMBOL_explicit_cursor_attr = 1445,    /* explicit_cursor_attr  */
  YYSYMBOL_trim_operands = 1446,           /* trim_operands  */
  YYSYMBOL_trim_operands_regular = 1447,   /* trim_operands_regular  */
  YYSYMBOL_trim_operands_special = 1448,   /* trim_operands_special  */
  YYSYMBOL_column_default_non_parenthesized_expr = 1449, /* column_default_non_parenthesized_expr  */
  YYSYMBOL_primary_expr = 1450,            /* primary_expr  */
  YYSYMBOL_string_factor_expr = 1451,      /* string_factor_expr  */
  YYSYMBOL_simple_expr = 1452,             /* simple_expr  */
  YYSYMBOL_mysql_concatenation_expr = 1453, /* mysql_concatenation_expr  */
  YYSYMBOL_function_call_keyword_timestamp = 1454, /* function_call_keyword_timestamp  */
  YYSYMBOL_function_call_keyword = 1455,   /* function_call_keyword  */
  YYSYMBOL_substring_operands = 1456,      /* substring_operands  */
  YYSYMBOL_substring_operands_regular = 1457, /* substring_operands_regular  */
  YYSYMBOL_substring_operands_special = 1458, /* substring_operands_special  */
  YYSYMBOL_function_call_nonkeyword = 1459, /* function_call_nonkeyword  */
  YYSYMBOL_function_call_conflict = 1460,  /* function_call_conflict  */
  YYSYMBOL_function_call_generic = 1461,   /* function_call_generic  */
  YYSYMBOL_1462_144 = 1462,                /* @144  */
  YYSYMBOL_fulltext_options = 1463,        /* fulltext_options  */
  YYSYMBOL_opt_natural_language_mode = 1464, /* opt_natural_language_mode  */
  YYSYMBOL_opt_query_expansion = 1465,     /* opt_query_expansion  */
  YYSYMBOL_opt_udf_expr_list = 1466,       /* opt_udf_expr_list  */
  YYSYMBOL_udf_expr_list = 1467,           /* udf_expr_list  */
  YYSYMBOL_udf_expr = 1468,                /* udf_expr  */
  YYSYMBOL_sum_expr = 1469,                /* sum_expr  */
  YYSYMBOL_1470_145 = 1470,                /* $@145  */
  YYSYMBOL_1471_146 = 1471,                /* $@146  */
  YYSYMBOL_1472_147 = 1472,                /* $@147  */
  YYSYMBOL_1473_148 = 1473,                /* $@148  */
  YYSYMBOL_1474_149 = 1474,                /* $@149  */
  YYSYMBOL_window_func_expr = 1475,        /* window_func_expr  */
  YYSYMBOL_window_func = 1476,             /* window_func  */
  YYSYMBOL_simple_window_func = 1477,      /* simple_window_func  */
  YYSYMBOL_inverse_distribution_function = 1478, /* inverse_distribution_function  */
  YYSYMBOL_percentile_function = 1479,     /* percentile_function  */
  YYSYMBOL_1480_150 = 1480,                /* $@150  */
  YYSYMBOL_inverse_distribution_function_def = 1481, /* inverse_distribution_function_def  */
  YYSYMBOL_order_by_single_element_list = 1482, /* order_by_single_element_list  */
  YYSYMBOL_window_name = 1483,             /* window_name  */
  YYSYMBOL_variable = 1484,                /* variable  */
  YYSYMBOL_1485_151 = 1485,                /* $@151  */
  YYSYMBOL_variable_aux = 1486,            /* variable_aux  */
  YYSYMBOL_opt_distinct = 1487,            /* opt_distinct  */
  YYSYMBOL_opt_gconcat_separator = 1488,   /* opt_gconcat_separator  */
  YYSYMBOL_opt_gorder_clause = 1489,       /* opt_gorder_clause  */
  YYSYMBOL_gorder_list = 1490,             /* gorder_list  */
  YYSYMBOL_opt_glimit_clause = 1491,       /* opt_glimit_clause  */
  YYSYMBOL_glimit_clause = 1492,           /* glimit_clause  */
  YYSYMBOL_glimit_options = 1493,          /* glimit_options  */
  YYSYMBOL_in_sum_expr = 1494,             /* in_sum_expr  */
  YYSYMBOL_1495_152 = 1495,                /* $@152  */
  YYSYMBOL_cast_type = 1496,               /* cast_type  */
  YYSYMBOL_cast_type_numeric = 1497,       /* cast_type_numeric  */
  YYSYMBOL_cast_type_temporal = 1498,      /* cast_type_temporal  */
  YYSYMBOL_opt_expr_list = 1499,           /* opt_expr_list  */
  YYSYMBOL_expr_list = 1500,               /* expr_list  */
  YYSYMBOL_ident_list_arg = 1501,          /* ident_list_arg  */
  YYSYMBOL_ident_list = 1502,              /* ident_list  */
  YYSYMBOL_when_list = 1503,               /* when_list  */
  YYSYMBOL_when_list_opt_else = 1504,      /* when_list_opt_else  */
  YYSYMBOL_table_ref = 1505,               /* table_ref  */
  YYSYMBOL_json_text_literal = 1506,       /* json_text_literal  */
  YYSYMBOL_join_table_list = 1507,         /* join_table_list  */
  YYSYMBOL_json_table_columns_clause = 1508, /* json_table_columns_clause  */
  YYSYMBOL_json_table_columns_list = 1509, /* json_table_columns_list  */
  YYSYMBOL_json_table_column = 1510,       /* json_table_column  */
  YYSYMBOL_1511_153 = 1511,                /* $@153  */
  YYSYMBOL_1512_154 = 1512,                /* $@154  */
  YYSYMBOL_json_table_column_type = 1513,  /* json_table_column_type  */
  YYSYMBOL_json_table_field_type = 1514,   /* json_table_field_type  */
  YYSYMBOL_json_opt_on_empty_or_error = 1515, /* json_opt_on_empty_or_error  */
  YYSYMBOL_json_default_literal = 1516,    /* json_default_literal  */
  YYSYMBOL_json_on_response = 1517,        /* json_on_response  */
  YYSYMBOL_json_on_error_response = 1518,  /* json_on_error_response  */
  YYSYMBOL_json_on_empty_response = 1519,  /* json_on_empty_response  */
  YYSYMBOL_table_function = 1520,          /* table_function  */
  YYSYMBOL_1521_155 = 1521,                /* $@155  */
  YYSYMBOL_1522_156 = 1522,                /* $@156  */
  YYSYMBOL_esc_table_ref = 1523,           /* esc_table_ref  */
  YYSYMBOL_derived_table_list = 1524,      /* derived_table_list  */
  YYSYMBOL_join_table = 1525,              /* join_table  */
  YYSYMBOL_1526_157 = 1526,                /* $@157  */
  YYSYMBOL_1527_158 = 1527,                /* $@158  */
  YYSYMBOL_1528_159 = 1528,                /* $@159  */
  YYSYMBOL_1529_160 = 1529,                /* $@160  */
  YYSYMBOL_1530_161 = 1530,                /* $@161  */
  YYSYMBOL_1531_162 = 1531,                /* $@162  */
  YYSYMBOL_inner_join = 1532,              /* inner_join  */
  YYSYMBOL_normal_join = 1533,             /* normal_join  */
  YYSYMBOL_opt_use_partition = 1534,       /* opt_use_partition  */
  YYSYMBOL_use_partition = 1535,           /* use_partition  */
  YYSYMBOL_table_factor = 1536,            /* table_factor  */
  YYSYMBOL_table_primary_ident_opt_parens = 1537, /* table_primary_ident_opt_parens  */
  YYSYMBOL_table_primary_derived_opt_parens = 1538, /* table_primary_derived_opt_parens  */
  YYSYMBOL_table_reference_list_parens = 1539, /* table_reference_list_parens  */
  YYSYMBOL_nested_table_reference_list = 1540, /* nested_table_reference_list  */
  YYSYMBOL_join_table_parens = 1541,       /* join_table_parens  */
  YYSYMBOL_table_primary_ident = 1542,     /* table_primary_ident  */
  YYSYMBOL_derived_column_list = 1543,     /* derived_column_list  */
  YYSYMBOL_table_primary_derived = 1544,   /* table_primary_derived  */
  YYSYMBOL_opt_outer = 1545,               /* opt_outer  */
  YYSYMBOL_index_hint_clause = 1546,       /* index_hint_clause  */
  YYSYMBOL_index_hint_type = 1547,         /* index_hint_type  */
  YYSYMBOL_index_hint_definition = 1548,   /* index_hint_definition  */
  YYSYMBOL_1549_163 = 1549,                /* $@163  */
  YYSYMBOL_1550_164 = 1550,                /* $@164  */
  YYSYMBOL_index_hints_list = 1551,        /* index_hints_list  */
  YYSYMBOL_opt_index_hints_list = 1552,    /* opt_index_hints_list  */
  YYSYMBOL_1553_165 = 1553,                /* $@165  */
  YYSYMBOL_opt_key_definition = 1554,      /* opt_key_definition  */
  YYSYMBOL_1555_166 = 1555,                /* $@166  */
  YYSYMBOL_opt_key_usage_list = 1556,      /* opt_key_usage_list  */
  YYSYMBOL_key_usage_element = 1557,       /* key_usage_element  */
  YYSYMBOL_key_usage_list = 1558,          /* key_usage_list  */
  YYSYMBOL_using_list = 1559,              /* using_list  */
  YYSYMBOL_interval = 1560,                /* interval  */
  YYSYMBOL_interval_time_stamp = 1561,     /* interval_time_stamp  */
  YYSYMBOL_date_time_type = 1562,          /* date_time_type  */
  YYSYMBOL_table_alias = 1563,             /* table_alias  */
  YYSYMBOL_opt_table_alias_clause = 1564,  /* opt_table_alias_clause  */
  YYSYMBOL_table_alias_clause = 1565,      /* table_alias_clause  */
  YYSYMBOL_opt_all = 1566,                 /* opt_all  */
  YYSYMBOL_opt_where_clause = 1567,        /* opt_where_clause  */
  YYSYMBOL_1568_167 = 1568,                /* $@167  */
  YYSYMBOL_opt_having_clause = 1569,       /* opt_having_clause  */
  YYSYMBOL_1570_168 = 1570,                /* $@168  */
  YYSYMBOL_opt_group_clause = 1571,        /* opt_group_clause  */
  YYSYMBOL_group_list = 1572,              /* group_list  */
  YYSYMBOL_olap_opt = 1573,                /* olap_opt  */
  YYSYMBOL_opt_window_clause = 1574,       /* opt_window_clause  */
  YYSYMBOL_window_def_list = 1575,         /* window_def_list  */
  YYSYMBOL_window_def = 1576,              /* window_def  */
  YYSYMBOL_window_spec = 1577,             /* window_spec  */
  YYSYMBOL_1578_169 = 1578,                /* $@169  */
  YYSYMBOL_opt_window_ref = 1579,          /* opt_window_ref  */
  YYSYMBOL_opt_window_partition_clause = 1580, /* opt_window_partition_clause  */
  YYSYMBOL_opt_window_order_clause = 1581, /* opt_window_order_clause  */
  YYSYMBOL_opt_window_frame_clause = 1582, /* opt_window_frame_clause  */
  YYSYMBOL_window_frame_units = 1583,      /* window_frame_units  */
  YYSYMBOL_window_frame_extent = 1584,     /* window_frame_extent  */
  YYSYMBOL_window_frame_start = 1585,      /* window_frame_start  */
  YYSYMBOL_window_frame_bound = 1586,      /* window_frame_bound  */
  YYSYMBOL_opt_window_frame_exclusion = 1587, /* opt_window_frame_exclusion  */
  YYSYMBOL_alter_order_clause = 1588,      /* alter_order_clause  */
  YYSYMBOL_alter_order_list = 1589,        /* alter_order_list  */
  YYSYMBOL_alter_order_item = 1590,        /* alter_order_item  */
  YYSYMBOL_opt_order_clause = 1591,        /* opt_order_clause  */
  YYSYMBOL_order_clause = 1592,            /* order_clause  */
  YYSYMBOL_1593_170 = 1593,                /* $@170  */
  YYSYMBOL_order_list = 1594,              /* order_list  */
  YYSYMBOL_order_dir = 1595,               /* order_dir  */
  YYSYMBOL_opt_limit_clause = 1596,        /* opt_limit_clause  */
  YYSYMBOL_limit_clause = 1597,            /* limit_clause  */
  YYSYMBOL_fetch_first_clause = 1598,      /* fetch_first_clause  */
  YYSYMBOL_first_or_next = 1599,           /* first_or_next  */
  YYSYMBOL_row_or_rows = 1600,             /* row_or_rows  */
  YYSYMBOL_only_or_with_ties = 1601,       /* only_or_with_ties  */
  YYSYMBOL_opt_global_limit_clause = 1602, /* opt_global_limit_clause  */
  YYSYMBOL_limit_options = 1603,           /* limit_options  */
  YYSYMBOL_limit_option = 1604,            /* limit_option  */
  YYSYMBOL_limit_rows_option = 1605,       /* limit_rows_option  */
  YYSYMBOL_delete_limit_clause = 1606,     /* delete_limit_clause  */
  YYSYMBOL_order_limit_lock = 1607,        /* order_limit_lock  */
  YYSYMBOL_opt_order_limit_lock = 1608,    /* opt_order_limit_lock  */
  YYSYMBOL_query_expression_tail = 1609,   /* query_expression_tail  */
  YYSYMBOL_opt_query_expression_tail = 1610, /* opt_query_expression_tail  */
  YYSYMBOL_opt_procedure_or_into = 1611,   /* opt_procedure_or_into  */
  YYSYMBOL_opt_order_or_limit = 1612,      /* opt_order_or_limit  */
  YYSYMBOL_order_or_limit = 1613,          /* order_or_limit  */
  YYSYMBOL_opt_plus = 1614,                /* opt_plus  */
  YYSYMBOL_int_num = 1615,                 /* int_num  */
  YYSYMBOL_ulong_num = 1616,               /* ulong_num  */
  YYSYMBOL_real_ulong_num = 1617,          /* real_ulong_num  */
  YYSYMBOL_sequence_value_num = 1618,      /* sequence_value_num  */
  YYSYMBOL_sequence_value_hybrid_num = 1619, /* sequence_value_hybrid_num  */
  YYSYMBOL_sequence_truncated_value_hybrid_num = 1620, /* sequence_truncated_value_hybrid_num  */
  YYSYMBOL_ulonglong_num = 1621,           /* ulonglong_num  */
  YYSYMBOL_real_ulonglong_num = 1622,      /* real_ulonglong_num  */
  YYSYMBOL_dec_num_error = 1623,           /* dec_num_error  */
  YYSYMBOL_dec_num = 1624,                 /* dec_num  */
  YYSYMBOL_choice = 1625,                  /* choice  */
  YYSYMBOL_bool = 1626,                    /* bool  */
  YYSYMBOL_procedure_clause = 1627,        /* procedure_clause  */
  YYSYMBOL_1628_171 = 1628,                /* $@171  */
  YYSYMBOL_procedure_list = 1629,          /* procedure_list  */
  YYSYMBOL_procedure_list2 = 1630,         /* procedure_list2  */
  YYSYMBOL_procedure_item = 1631,          /* procedure_item  */
  YYSYMBOL_select_var_list_init = 1632,    /* select_var_list_init  */
  YYSYMBOL_1633_172 = 1633,                /* $@172  */
  YYSYMBOL_select_var_list = 1634,         /* select_var_list  */
  YYSYMBOL_select_var_ident = 1635,        /* select_var_ident  */
  YYSYMBOL_select_outvar = 1636,           /* select_outvar  */
  YYSYMBOL_into = 1637,                    /* into  */
  YYSYMBOL_into_destination = 1638,        /* into_destination  */
  YYSYMBOL_1639_173 = 1639,                /* $@173  */
  YYSYMBOL_1640_174 = 1640,                /* $@174  */
  YYSYMBOL_do = 1641,                      /* do  */
  YYSYMBOL_1642_175 = 1642,                /* $@175  */
  YYSYMBOL_drop = 1643,                    /* drop  */
  YYSYMBOL_1644_176 = 1644,                /* $@176  */
  YYSYMBOL_1645_177 = 1645,                /* $@177  */
  YYSYMBOL_1646_178 = 1646,                /* $@178  */
  YYSYMBOL_1647_179 = 1647,                /* $@179  */
  YYSYMBOL_table_list = 1648,              /* table_list  */
  YYSYMBOL_table_name = 1649,              /* table_name  */
  YYSYMBOL_table_name_with_opt_use_partition = 1650, /* table_name_with_opt_use_partition  */
  YYSYMBOL_table_alias_ref_list = 1651,    /* table_alias_ref_list  */
  YYSYMBOL_table_alias_ref = 1652,         /* table_alias_ref  */
  YYSYMBOL_opt_if_exists_table_element = 1653, /* opt_if_exists_table_element  */
  YYSYMBOL_opt_if_exists = 1654,           /* opt_if_exists  */
  YYSYMBOL_opt_temporary = 1655,           /* opt_temporary  */
  YYSYMBOL_insert = 1656,                  /* insert  */
  YYSYMBOL_1657_180 = 1657,                /* $@180  */
  YYSYMBOL_1658_181 = 1658,                /* $@181  */
  YYSYMBOL_replace = 1659,                 /* replace  */
  YYSYMBOL_1660_182 = 1660,                /* $@182  */
  YYSYMBOL_1661_183 = 1661,                /* $@183  */
  YYSYMBOL_insert_start = 1662,            /* insert_start  */
  YYSYMBOL_stmt_end = 1663,                /* stmt_end  */
  YYSYMBOL_insert_lock_option = 1664,      /* insert_lock_option  */
  YYSYMBOL_replace_lock_option = 1665,     /* replace_lock_option  */
  YYSYMBOL_insert_replace_option = 1666,   /* insert_replace_option  */
  YYSYMBOL_opt_into = 1667,                /* opt_into  */
  YYSYMBOL_insert_table = 1668,            /* insert_table  */
  YYSYMBOL_1669_184 = 1669,                /* $@184  */
  YYSYMBOL_insert_field_spec = 1670,       /* insert_field_spec  */
  YYSYMBOL_1671_185 = 1671,                /* $@185  */
  YYSYMBOL_insert_field_list = 1672,       /* insert_field_list  */
  YYSYMBOL_opt_fields = 1673,              /* opt_fields  */
  YYSYMBOL_fields = 1674,                  /* fields  */
  YYSYMBOL_insert_values = 1675,           /* insert_values  */
  YYSYMBOL_values_list = 1676,             /* values_list  */
  YYSYMBOL_ident_eq_list = 1677,           /* ident_eq_list  */
  YYSYMBOL_ident_eq_value = 1678,          /* ident_eq_value  */
  YYSYMBOL_equal = 1679,                   /* equal  */
  YYSYMBOL_opt_equal = 1680,               /* opt_equal  */
  YYSYMBOL_opt_with = 1681,                /* opt_with  */
  YYSYMBOL_opt_by = 1682,                  /* opt_by  */
  YYSYMBOL_no_braces = 1683,               /* no_braces  */
  YYSYMBOL_1684_186 = 1684,                /* $@186  */
  YYSYMBOL_no_braces_with_names = 1685,    /* no_braces_with_names  */
  YYSYMBOL_1686_187 = 1686,                /* $@187  */
  YYSYMBOL_opt_values = 1687,              /* opt_values  */
  YYSYMBOL_opt_values_with_names = 1688,   /* opt_values_with_names  */
  YYSYMBOL_values = 1689,                  /* values  */
  YYSYMBOL_values_with_names = 1690,       /* values_with_names  */
  YYSYMBOL_expr_or_ignore = 1691,          /* expr_or_ignore  */
  YYSYMBOL_expr_or_ignore_or_default = 1692, /* expr_or_ignore_or_default  */
  YYSYMBOL_opt_insert_update = 1693,       /* opt_insert_update  */
  YYSYMBOL_1694_188 = 1694,                /* $@188  */
  YYSYMBOL_1695_189 = 1695,                /* $@189  */
  YYSYMBOL_update_table_list = 1696,       /* update_table_list  */
  YYSYMBOL_update = 1697,                  /* update  */
  YYSYMBOL_1698_190 = 1698,                /* $@190  */
  YYSYMBOL_1699_191 = 1699,                /* $@191  */
  YYSYMBOL_1700_192 = 1700,                /* $@192  */
  YYSYMBOL_update_list = 1701,             /* update_list  */
  YYSYMBOL_update_elem = 1702,             /* update_elem  */
  YYSYMBOL_insert_update_list = 1703,      /* insert_update_list  */
  YYSYMBOL_insert_update_elem = 1704,      /* insert_update_elem  */
  YYSYMBOL_opt_low_priority = 1705,        /* opt_low_priority  */
  YYSYMBOL_delete = 1706,                  /* delete  */
  YYSYMBOL_1707_193 = 1707,                /* $@193  */
  YYSYMBOL_opt_delete_system_time = 1708,  /* opt_delete_system_time  */
  YYSYMBOL_delete_part2 = 1709,            /* delete_part2  */
  YYSYMBOL_1710_194 = 1710,                /* $@194  */
  YYSYMBOL_delete_single_table = 1711,     /* delete_single_table  */
  YYSYMBOL_delete_single_table_for_period = 1712, /* delete_single_table_for_period  */
  YYSYMBOL_single_multi = 1713,            /* single_multi  */
  YYSYMBOL_1714_195 = 1714,                /* $@195  */
  YYSYMBOL_1715_196 = 1715,                /* $@196  */
  YYSYMBOL_1716_197 = 1716,                /* $@197  */
  YYSYMBOL_1717_198 = 1717,                /* $@198  */
  YYSYMBOL_1718_199 = 1718,                /* $@199  */
  YYSYMBOL_opt_returning = 1719,           /* opt_returning  */
  YYSYMBOL_1720_200 = 1720,                /* $@200  */
  YYSYMBOL_opt_wild = 1721,                /* opt_wild  */
  YYSYMBOL_opt_delete_options = 1722,      /* opt_delete_options  */
  YYSYMBOL_opt_delete_option = 1723,       /* opt_delete_option  */
  YYSYMBOL_truncate = 1724,                /* truncate  */
  YYSYMBOL_1725_201 = 1725,                /* $@201  */
  YYSYMBOL_1726_202 = 1726,                /* $@202  */
  YYSYMBOL_opt_table_sym = 1727,           /* opt_table_sym  */
  YYSYMBOL_opt_profile_defs = 1728,        /* opt_profile_defs  */
  YYSYMBOL_profile_defs = 1729,            /* profile_defs  */
  YYSYMBOL_profile_def = 1730,             /* profile_def  */
  YYSYMBOL_opt_profile_args = 1731,        /* opt_profile_args  */
  YYSYMBOL_show = 1732,                    /* show  */
  YYSYMBOL_1733_203 = 1733,                /* $@203  */
  YYSYMBOL_show_param = 1734,              /* show_param  */
  YYSYMBOL_1735_204 = 1735,                /* $@204  */
  YYSYMBOL_1736_205 = 1736,                /* $@205  */
  YYSYMBOL_show_engine_param = 1737,       /* show_engine_param  */
  YYSYMBOL_master_or_binary = 1738,        /* master_or_binary  */
  YYSYMBOL_opt_storage = 1739,             /* opt_storage  */
  YYSYMBOL_opt_db = 1740,                  /* opt_db  */
  YYSYMBOL_opt_full = 1741,                /* opt_full  */
  YYSYMBOL_from_or_in = 1742,              /* from_or_in  */
  YYSYMBOL_binlog_in = 1743,               /* binlog_in  */
  YYSYMBOL_binlog_from = 1744,             /* binlog_from  */
  YYSYMBOL_wild_and_where = 1745,          /* wild_and_where  */
  YYSYMBOL_describe = 1746,                /* describe  */
  YYSYMBOL_1747_206 = 1747,                /* $@206  */
  YYSYMBOL_1748_207 = 1748,                /* $@207  */
  YYSYMBOL_explainable_command = 1749,     /* explainable_command  */
  YYSYMBOL_describe_command = 1750,        /* describe_command  */
  YYSYMBOL_analyze_stmt_command = 1751,    /* analyze_stmt_command  */
  YYSYMBOL_opt_extended_describe = 1752,   /* opt_extended_describe  */
  YYSYMBOL_opt_format_json = 1753,         /* opt_format_json  */
  YYSYMBOL_opt_describe_column = 1754,     /* opt_describe_column  */
  YYSYMBOL_explain_for_connection = 1755,  /* explain_for_connection  */
  YYSYMBOL_flush = 1756,                   /* flush  */
  YYSYMBOL_1757_208 = 1757,                /* $@208  */
  YYSYMBOL_flush_options = 1758,           /* flush_options  */
  YYSYMBOL_1759_209 = 1759,                /* $@209  */
  YYSYMBOL_opt_flush_lock = 1760,          /* opt_flush_lock  */
  YYSYMBOL_flush_lock = 1761,              /* flush_lock  */
  YYSYMBOL_1762_210 = 1762,                /* $@210  */
  YYSYMBOL_flush_options_list = 1763,      /* flush_options_list  */
  YYSYMBOL_flush_option = 1764,            /* flush_option  */
  YYSYMBOL_opt_table_list = 1765,          /* opt_table_list  */
  YYSYMBOL_backup = 1766,                  /* backup  */
  YYSYMBOL_backup_statements = 1767,       /* backup_statements  */
  YYSYMBOL_1768_211 = 1768,                /* $@211  */
  YYSYMBOL_opt_delete_gtid_domain = 1769,  /* opt_delete_gtid_domain  */
  YYSYMBOL_delete_domain_id_list = 1770,   /* delete_domain_id_list  */
  YYSYMBOL_delete_domain_id = 1771,        /* delete_domain_id  */
  YYSYMBOL_optional_flush_tables_arguments = 1772, /* optional_flush_tables_arguments  */
  YYSYMBOL_reset = 1773,                   /* reset  */
  YYSYMBOL_1774_212 = 1774,                /* $@212  */
  YYSYMBOL_reset_options = 1775,           /* reset_options  */
  YYSYMBOL_reset_option = 1776,            /* reset_option  */
  YYSYMBOL_1777_213 = 1777,                /* $@213  */
  YYSYMBOL_1778_214 = 1778,                /* $@214  */
  YYSYMBOL_slave_reset_options = 1779,     /* slave_reset_options  */
  YYSYMBOL_master_reset_options = 1780,    /* master_reset_options  */
  YYSYMBOL_purge = 1781,                   /* purge  */
  YYSYMBOL_1782_215 = 1782,                /* $@215  */
  YYSYMBOL_kill = 1783,                    /* kill  */
  YYSYMBOL_1784_216 = 1784,                /* $@216  */
  YYSYMBOL_kill_type = 1785,               /* kill_type  */
  YYSYMBOL_kill_option = 1786,             /* kill_option  */
  YYSYMBOL_opt_connection = 1787,          /* opt_connection  */
  YYSYMBOL_kill_expr = 1788,               /* kill_expr  */
  YYSYMBOL_shutdown = 1789,                /* shutdown  */
  YYSYMBOL_1790_217 = 1790,                /* $@217  */
  YYSYMBOL_shutdown_option = 1791,         /* shutdown_option  */
  YYSYMBOL_use = 1792,                     /* use  */
  YYSYMBOL_load = 1793,                    /* load  */
  YYSYMBOL_1794_218 = 1794,                /* $@218  */
  YYSYMBOL_1795_219 = 1795,                /* $@219  */
  YYSYMBOL_1796_220 = 1796,                /* $@220  */
  YYSYMBOL_1797_221 = 1797,                /* $@221  */
  YYSYMBOL_data_or_xml = 1798,             /* data_or_xml  */
  YYSYMBOL_opt_local = 1799,               /* opt_local  */
  YYSYMBOL_load_data_lock = 1800,          /* load_data_lock  */
  YYSYMBOL_opt_duplicate = 1801,           /* opt_duplicate  */
  YYSYMBOL_opt_field_term = 1802,          /* opt_field_term  */
  YYSYMBOL_field_term_list = 1803,         /* field_term_list  */
  YYSYMBOL_field_term = 1804,              /* field_term  */
  YYSYMBOL_opt_line_term = 1805,           /* opt_line_term  */
  YYSYMBOL_line_term_list = 1806,          /* line_term_list  */
  YYSYMBOL_line_term = 1807,               /* line_term  */
  YYSYMBOL_opt_xml_rows_identified_by = 1808, /* opt_xml_rows_identified_by  */
  YYSYMBOL_opt_ignore_lines = 1809,        /* opt_ignore_lines  */
  YYSYMBOL_lines_or_rows = 1810,           /* lines_or_rows  */
  YYSYMBOL_opt_field_or_var_spec = 1811,   /* opt_field_or_var_spec  */
  YYSYMBOL_fields_or_vars = 1812,          /* fields_or_vars  */
  YYSYMBOL_field_or_var = 1813,            /* field_or_var  */
  YYSYMBOL_opt_load_data_set_spec = 1814,  /* opt_load_data_set_spec  */
  YYSYMBOL_load_data_set_list = 1815,      /* load_data_set_list  */
  YYSYMBOL_load_data_set_elem = 1816,      /* load_data_set_elem  */
  YYSYMBOL_text_literal = 1817,            /* text_literal  */
  YYSYMBOL_text_string = 1818,             /* text_string  */
  YYSYMBOL_hex_or_bin_String = 1819,       /* hex_or_bin_String  */
  YYSYMBOL_param_marker = 1820,            /* param_marker  */
  YYSYMBOL_signed_literal = 1821,          /* signed_literal  */
  YYSYMBOL_literal = 1822,                 /* literal  */
  YYSYMBOL_NUM_literal = 1823,             /* NUM_literal  */
  YYSYMBOL_temporal_literal = 1824,        /* temporal_literal  */
  YYSYMBOL_with_clause = 1825,             /* with_clause  */
  YYSYMBOL_1826_222 = 1826,                /* $@222  */
  YYSYMBOL_opt_recursive = 1827,           /* opt_recursive  */
  YYSYMBOL_with_list = 1828,               /* with_list  */
  YYSYMBOL_with_column_list = 1829,        /* with_column_list  */
  YYSYMBOL_with_list_element = 1830,       /* with_list_element  */
  YYSYMBOL_opt_cycle = 1831,               /* opt_cycle  */
  YYSYMBOL_1832_223 = 1832,                /* $@223  */
  YYSYMBOL_opt_column_name_list = 1833,    /* opt_column_name_list  */
  YYSYMBOL_ident_sys_alloc = 1834,         /* ident_sys_alloc  */
  YYSYMBOL_comma_separated_ident_list = 1835, /* comma_separated_ident_list  */
  YYSYMBOL_with_element_head = 1836,       /* with_element_head  */
  YYSYMBOL_insert_ident = 1837,            /* insert_ident  */
  YYSYMBOL_table_wild = 1838,              /* table_wild  */
  YYSYMBOL_select_sublist_qualified_asterisk = 1839, /* select_sublist_qualified_asterisk  */
  YYSYMBOL_order_ident = 1840,             /* order_ident  */
  YYSYMBOL_simple_ident = 1841,            /* simple_ident  */
  YYSYMBOL_simple_ident_nospvar = 1842,    /* simple_ident_nospvar  */
  YYSYMBOL_field_ident = 1843,             /* field_ident  */
  YYSYMBOL_table_ident = 1844,             /* table_ident  */
  YYSYMBOL_table_ident_opt_wild = 1845,    /* table_ident_opt_wild  */
  YYSYMBOL_table_ident_nodb = 1846,        /* table_ident_nodb  */
  YYSYMBOL_IDENT_cli = 1847,               /* IDENT_cli  */
  YYSYMBOL_ident_cli = 1848,               /* ident_cli  */
  YYSYMBOL_IDENT_sys = 1849,               /* IDENT_sys  */
  YYSYMBOL_ident_cli_func = 1850,          /* ident_cli_func  */
  YYSYMBOL_ident_func = 1851,              /* ident_func  */
  YYSYMBOL_TEXT_STRING_sys = 1852,         /* TEXT_STRING_sys  */
  YYSYMBOL_TEXT_STRING_literal = 1853,     /* TEXT_STRING_literal  */
  YYSYMBOL_TEXT_STRING_filesystem = 1854,  /* TEXT_STRING_filesystem  */
  YYSYMBOL_ident_table_alias = 1855,       /* ident_table_alias  */
  YYSYMBOL_ident_cli_set_usual_case = 1856, /* ident_cli_set_usual_case  */
  YYSYMBOL_ident_sysvar_name = 1857,       /* ident_sysvar_name  */
  YYSYMBOL_ident = 1858,                   /* ident  */
  YYSYMBOL_label_ident = 1859,             /* label_ident  */
  YYSYMBOL_ident_or_text = 1860,           /* ident_or_text  */
  YYSYMBOL_user_maybe_role = 1861,         /* user_maybe_role  */
  YYSYMBOL_user_or_role = 1862,            /* user_or_role  */
  YYSYMBOL_user = 1863,                    /* user  */
  YYSYMBOL_keyword_table_alias = 1864,     /* keyword_table_alias  */
  YYSYMBOL_keyword_ident = 1865,           /* keyword_ident  */
  YYSYMBOL_keyword_sysvar_name = 1866,     /* keyword_sysvar_name  */
  YYSYMBOL_keyword_set_usual_case = 1867,  /* keyword_set_usual_case  */
  YYSYMBOL_non_reserved_keyword_udt = 1868, /* non_reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_var_not_label = 1869, /* keyword_sp_var_not_label  */
  YYSYMBOL_keyword_sp_head = 1870,         /* keyword_sp_head  */
  YYSYMBOL_keyword_verb_clause = 1871,     /* keyword_verb_clause  */
  YYSYMBOL_keyword_set_special_case = 1872, /* keyword_set_special_case  */
  YYSYMBOL_keyword_sysvar_type = 1873,     /* keyword_sysvar_type  */
  YYSYMBOL_keyword_data_type = 1874,       /* keyword_data_type  */
  YYSYMBOL_keyword_cast_type = 1875,       /* keyword_cast_type  */
  YYSYMBOL_keyword_func_sp_var_and_label = 1876, /* keyword_func_sp_var_and_label  */
  YYSYMBOL_keyword_func_sp_var_not_label = 1877, /* keyword_func_sp_var_not_label  */
  YYSYMBOL_keyword_sp_var_and_label = 1878, /* keyword_sp_var_and_label  */
  YYSYMBOL_reserved_keyword_udt_not_param_type = 1879, /* reserved_keyword_udt_not_param_type  */
  YYSYMBOL_set = 1880,                     /* set  */
  YYSYMBOL_1881_224 = 1881,                /* $@224  */
  YYSYMBOL_set_param = 1882,               /* set_param  */
  YYSYMBOL_1883_225 = 1883,                /* $@225  */
  YYSYMBOL_1884_226 = 1884,                /* $@226  */
  YYSYMBOL_1885_227 = 1885,                /* $@227  */
  YYSYMBOL_set_stmt_option_list = 1886,    /* set_stmt_option_list  */
  YYSYMBOL_start_option_value_list_following_option_type = 1887, /* start_option_value_list_following_option_type  */
  YYSYMBOL_1888_228 = 1888,                /* $@228  */
  YYSYMBOL_option_value_list = 1889,       /* option_value_list  */
  YYSYMBOL_option_value = 1890,            /* option_value  */
  YYSYMBOL_1891_229 = 1891,                /* $@229  */
  YYSYMBOL_option_type = 1892,             /* option_type  */
  YYSYMBOL_opt_var_type = 1893,            /* opt_var_type  */
  YYSYMBOL_opt_var_ident_type = 1894,      /* opt_var_ident_type  */
  YYSYMBOL_set_stmt_option = 1895,         /* set_stmt_option  */
  YYSYMBOL_1896_230 = 1896,                /* $@230  */
  YYSYMBOL_1897_231 = 1897,                /* $@231  */
  YYSYMBOL_1898_232 = 1898,                /* $@232  */
  YYSYMBOL_option_value_following_option_type = 1899, /* option_value_following_option_type  */
  YYSYMBOL_1900_233 = 1900,                /* $@233  */
  YYSYMBOL_1901_234 = 1901,                /* $@234  */
  YYSYMBOL_1902_235 = 1902,                /* $@235  */
  YYSYMBOL_option_value_no_option_type = 1903, /* option_value_no_option_type  */
  YYSYMBOL_1904_236 = 1904,                /* $@236  */
  YYSYMBOL_1905_237 = 1905,                /* $@237  */
  YYSYMBOL_1906_238 = 1906,                /* $@238  */
  YYSYMBOL_1907_239 = 1907,                /* $@239  */
  YYSYMBOL_1908_240 = 1908,                /* $@240  */
  YYSYMBOL_1909_241 = 1909,                /* $@241  */
  YYSYMBOL_1910_242 = 1910,                /* $@242  */
  YYSYMBOL_1911_243 = 1911,                /* $@243  */
  YYSYMBOL_1912_244 = 1912,                /* $@244  */
  YYSYMBOL_1913_245 = 1913,                /* $@245  */
  YYSYMBOL_transaction_characteristics = 1914, /* transaction_characteristics  */
  YYSYMBOL_transaction_access_mode = 1915, /* transaction_access_mode  */
  YYSYMBOL_isolation_level = 1916,         /* isolation_level  */
  YYSYMBOL_transaction_access_mode_types = 1917, /* transaction_access_mode_types  */
  YYSYMBOL_isolation_types = 1918,         /* isolation_types  */
  YYSYMBOL_text_or_password = 1919,        /* text_or_password  */
  YYSYMBOL_set_expr_or_default = 1920,     /* set_expr_or_default  */
  YYSYMBOL_set_expr_misc = 1921,           /* set_expr_misc  */
  YYSYMBOL_lock = 1922,                    /* lock  */
  YYSYMBOL_1923_246 = 1923,                /* $@246  */
  YYSYMBOL_opt_lock_wait_timeout = 1924,   /* opt_lock_wait_timeout  */
  YYSYMBOL_table_or_tables = 1925,         /* table_or_tables  */
  YYSYMBOL_table_lock_list = 1926,         /* table_lock_list  */
  YYSYMBOL_table_lock = 1927,              /* table_lock  */
  YYSYMBOL_lock_option = 1928,             /* lock_option  */
  YYSYMBOL_unlock = 1929,                  /* unlock  */
  YYSYMBOL_1930_247 = 1930,                /* $@247  */
  YYSYMBOL_handler = 1931,                 /* handler  */
  YYSYMBOL_1932_248 = 1932,                /* $@248  */
  YYSYMBOL_handler_tail = 1933,            /* handler_tail  */
  YYSYMBOL_1934_249 = 1934,                /* $@249  */
  YYSYMBOL_handler_read_or_scan = 1935,    /* handler_read_or_scan  */
  YYSYMBOL_handler_scan_function = 1936,   /* handler_scan_function  */
  YYSYMBOL_handler_rkey_function = 1937,   /* handler_rkey_function  */
  YYSYMBOL_1938_250 = 1938,                /* $@250  */
  YYSYMBOL_handler_rkey_mode = 1939,       /* handler_rkey_mode  */
  YYSYMBOL_revoke = 1940,                  /* revoke  */
  YYSYMBOL_revoke_command = 1941,          /* revoke_command  */
  YYSYMBOL_admin_option_for_role = 1942,   /* admin_option_for_role  */
  YYSYMBOL_grant = 1943,                   /* grant  */
  YYSYMBOL_grant_command = 1944,           /* grant_command  */
  YYSYMBOL_opt_with_admin = 1945,          /* opt_with_admin  */
  YYSYMBOL_opt_with_admin_option = 1946,   /* opt_with_admin_option  */
  YYSYMBOL_role_list = 1947,               /* role_list  */
  YYSYMBOL_current_role = 1948,            /* current_role  */
  YYSYMBOL_role_name = 1949,               /* role_name  */
  YYSYMBOL_grant_role = 1950,              /* grant_role  */
  YYSYMBOL_opt_table = 1951,               /* opt_table  */
  YYSYMBOL_grant_privileges = 1952,        /* grant_privileges  */
  YYSYMBOL_opt_privileges = 1953,          /* opt_privileges  */
  YYSYMBOL_object_privilege_list = 1954,   /* object_privilege_list  */
  YYSYMBOL_column_list_privilege = 1955,   /* column_list_privilege  */
  YYSYMBOL_column_privilege = 1956,        /* column_privilege  */
  YYSYMBOL_object_privilege = 1957,        /* object_privilege  */
  YYSYMBOL_opt_and = 1958,                 /* opt_and  */
  YYSYMBOL_require_list = 1959,            /* require_list  */
  YYSYMBOL_require_list_element = 1960,    /* require_list_element  */
  YYSYMBOL_grant_ident = 1961,             /* grant_ident  */
  YYSYMBOL_user_list = 1962,               /* user_list  */
  YYSYMBOL_grant_list = 1963,              /* grant_list  */
  YYSYMBOL_user_and_role_list = 1964,      /* user_and_role_list  */
  YYSYMBOL_via_or_with = 1965,             /* via_or_with  */
  YYSYMBOL_using_or_as = 1966,             /* using_or_as  */
  YYSYMBOL_grant_user = 1967,              /* grant_user  */
  YYSYMBOL_auth_expression = 1968,         /* auth_expression  */
  YYSYMBOL_auth_token = 1969,              /* auth_token  */
  YYSYMBOL_opt_auth_str = 1970,            /* opt_auth_str  */
  YYSYMBOL_opt_require_clause = 1971,      /* opt_require_clause  */
  YYSYMBOL_resource_option = 1972,         /* resource_option  */
  YYSYMBOL_resource_option_list = 1973,    /* resource_option_list  */
  YYSYMBOL_opt_resource_options = 1974,    /* opt_resource_options  */
  YYSYMBOL_opt_grant_options = 1975,       /* opt_grant_options  */
  YYSYMBOL_opt_grant_option = 1976,        /* opt_grant_option  */
  YYSYMBOL_grant_option_list = 1977,       /* grant_option_list  */
  YYSYMBOL_grant_option = 1978,            /* grant_option  */
  YYSYMBOL_begin_stmt_mariadb = 1979,      /* begin_stmt_mariadb  */
  YYSYMBOL_1980_251 = 1980,                /* $@251  */
  YYSYMBOL_compound_statement = 1981,      /* compound_statement  */
  YYSYMBOL_opt_not = 1982,                 /* opt_not  */
  YYSYMBOL_opt_work = 1983,                /* opt_work  */
  YYSYMBOL_opt_chain = 1984,               /* opt_chain  */
  YYSYMBOL_opt_release = 1985,             /* opt_release  */
  YYSYMBOL_commit = 1986,                  /* commit  */
  YYSYMBOL_rollback = 1987,                /* rollback  */
  YYSYMBOL_savepoint = 1988,               /* savepoint  */
  YYSYMBOL_release = 1989,                 /* release  */
  YYSYMBOL_unit_type_decl = 1990,          /* unit_type_decl  */
  YYSYMBOL_union_option = 1991,            /* union_option  */
  YYSYMBOL_query_expression_option = 1992, /* query_expression_option  */
  YYSYMBOL_definer_opt = 1993,             /* definer_opt  */
  YYSYMBOL_no_definer = 1994,              /* no_definer  */
  YYSYMBOL_definer = 1995,                 /* definer  */
  YYSYMBOL_view_algorithm = 1996,          /* view_algorithm  */
  YYSYMBOL_opt_view_suid = 1997,           /* opt_view_suid  */
  YYSYMBOL_view_suid = 1998,               /* view_suid  */
  YYSYMBOL_view_list_opt = 1999,           /* view_list_opt  */
  YYSYMBOL_view_list = 2000,               /* view_list  */
  YYSYMBOL_view_select = 2001,             /* view_select  */
  YYSYMBOL_2002_252 = 2002,                /* $@252  */
  YYSYMBOL_view_check_option = 2003,       /* view_check_option  */
  YYSYMBOL_trigger_action_order = 2004,    /* trigger_action_order  */
  YYSYMBOL_trigger_follows_precedes_clause = 2005, /* trigger_follows_precedes_clause  */
  YYSYMBOL_opt_on_update_cols = 2006,      /* opt_on_update_cols  */
  YYSYMBOL_on_update_cols = 2007,          /* on_update_cols  */
  YYSYMBOL_trigger_tail = 2008,            /* trigger_tail  */
  YYSYMBOL_2009_253 = 2009,                /* $@253  */
  YYSYMBOL_2010_254 = 2010,                /* $@254  */
  YYSYMBOL_2011_255 = 2011,                /* $@255  */
  YYSYMBOL_2012_256 = 2012,                /* $@256  */
  YYSYMBOL_2013_257 = 2013,                /* $@257  */
  YYSYMBOL_create_package_chistic = 2014,  /* create_package_chistic  */
  YYSYMBOL_create_package_chistics = 2015, /* create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics = 2016, /* opt_create_package_chistics  */
  YYSYMBOL_opt_create_package_chistics_init = 2017, /* opt_create_package_chistics_init  */
  YYSYMBOL_2018_258 = 2018,                /* $@258  */
  YYSYMBOL_xa = 2019,                      /* xa  */
  YYSYMBOL_opt_format_xid = 2020,          /* opt_format_xid  */
  YYSYMBOL_xid = 2021,                     /* xid  */
  YYSYMBOL_begin_or_start = 2022,          /* begin_or_start  */
  YYSYMBOL_opt_join_or_resume = 2023,      /* opt_join_or_resume  */
  YYSYMBOL_opt_one_phase = 2024,           /* opt_one_phase  */
  YYSYMBOL_opt_suspend = 2025,             /* opt_suspend  */
  YYSYMBOL_2026_259 = 2026,                /* $@259  */
  YYSYMBOL_opt_migrate = 2027,             /* opt_migrate  */
  YYSYMBOL_install = 2028,                 /* install  */
  YYSYMBOL_uninstall = 2029,               /* uninstall  */
  YYSYMBOL_keep_gcc_happy = 2030,          /* keep_gcc_happy  */
  YYSYMBOL__empty = 2031,                  /* _empty  */
  YYSYMBOL_statement = 2032,               /* statement  */
  YYSYMBOL_sp_statement = 2033,            /* sp_statement  */
  YYSYMBOL_sp_if_then_statements = 2034,   /* sp_if_then_statements  */
  YYSYMBOL_sp_case_then_statements = 2035, /* sp_case_then_statements  */
  YYSYMBOL_sp_tail_is = 2036,              /* sp_tail_is  */
  YYSYMBOL_sp_package_function_body = 2037, /* sp_package_function_body  */
  YYSYMBOL_sp_package_procedure_body = 2038, /* sp_package_procedure_body  */
  YYSYMBOL_opt_trailing_sp_name = 2039,    /* opt_trailing_sp_name  */
  YYSYMBOL_opt_package_routine_end_name = 2040, /* opt_package_routine_end_name  */
  YYSYMBOL_sf_parameters = 2041,           /* sf_parameters  */
  YYSYMBOL_sp_parameters = 2042,           /* sp_parameters  */
  YYSYMBOL_sf_returned_type_clause = 2043, /* sf_returned_type_clause  */
  YYSYMBOL_2044_260 = 2044,                /* $@260  */
  YYSYMBOL_sf_return_type = 2045,          /* sf_return_type  */
  YYSYMBOL_package_implementation_item_declaration = 2046, /* package_implementation_item_declaration  */
  YYSYMBOL_package_implementation_declare_section_list = 2047, /* package_implementation_declare_section_list  */
  YYSYMBOL_package_implementation_declare_section = 2048, /* package_implementation_declare_section  */
  YYSYMBOL_package_implementation_executable_section = 2049, /* package_implementation_executable_section  */
  YYSYMBOL_reserved_keyword_udt_param_type = 2050, /* reserved_keyword_udt_param_type  */
  YYSYMBOL_reserved_keyword_udt = 2051,    /* reserved_keyword_udt  */
  YYSYMBOL_keyword_sp_block_section = 2052, /* keyword_sp_block_section  */
  YYSYMBOL_keyword_label = 2053,           /* keyword_label  */
  YYSYMBOL_keyword_sp_decl = 2054,         /* keyword_sp_decl  */
  YYSYMBOL_opt_truncate_table_storage_clause = 2055, /* opt_truncate_table_storage_clause  */
  YYSYMBOL_ident_for_loop_index = 2056,    /* ident_for_loop_index  */
  YYSYMBOL_row_field_name = 2057,          /* row_field_name  */
  YYSYMBOL_while_body = 2058,              /* while_body  */
  YYSYMBOL_2059_261 = 2059,                /* $@261  */
  YYSYMBOL_for_loop_statements = 2060,     /* for_loop_statements  */
  YYSYMBOL_sp_label = 2061,                /* sp_label  */
  YYSYMBOL_sp_control_label = 2062,        /* sp_control_label  */
  YYSYMBOL_sp_block_label = 2063,          /* sp_block_label  */
  YYSYMBOL_sp_opt_default = 2064,          /* sp_opt_default  */
  YYSYMBOL_sp_decl_variable_list_anchored = 2065, /* sp_decl_variable_list_anchored  */
  YYSYMBOL_sp_param_name_and_mode = 2066,  /* sp_param_name_and_mode  */
  YYSYMBOL_sp_param_init_vars = 2067,      /* sp_param_init_vars  */
  YYSYMBOL_sp_param_anchored = 2068,       /* sp_param_anchored  */
  YYSYMBOL_sf_c_chistics_and_body_standalone = 2069, /* sf_c_chistics_and_body_standalone  */
  YYSYMBOL_2070_262 = 2070,                /* $@262  */
  YYSYMBOL_sp_tail_standalone = 2071,      /* sp_tail_standalone  */
  YYSYMBOL_2072_263 = 2072,                /* $@263  */
  YYSYMBOL_2073_264 = 2073,                /* $@264  */
  YYSYMBOL_sp_decls = 2074,                /* sp_decls  */
  YYSYMBOL_sp_decl = 2075,                 /* sp_decl  */
  YYSYMBOL_sp_decl_body = 2076,            /* sp_decl_body  */
  YYSYMBOL_2077_265 = 2077,                /* $@265  */
  YYSYMBOL_sp_proc_stmt_in_returns_clause = 2078, /* sp_proc_stmt_in_returns_clause  */
  YYSYMBOL_sp_proc_stmt = 2079,            /* sp_proc_stmt  */
  YYSYMBOL_sp_proc_stmt_compound_ok = 2080, /* sp_proc_stmt_compound_ok  */
  YYSYMBOL_sp_labeled_block = 2081,        /* sp_labeled_block  */
  YYSYMBOL_2082_266 = 2082,                /* $@266  */
  YYSYMBOL_sp_unlabeled_block = 2083,      /* sp_unlabeled_block  */
  YYSYMBOL_2084_267 = 2084,                /* $@267  */
  YYSYMBOL_sp_unlabeled_block_not_atomic = 2085, /* sp_unlabeled_block_not_atomic  */
  YYSYMBOL_2086_268 = 2086,                /* $@268  */
  YYSYMBOL_package_implementation_declare_section_list1 = 2087, /* package_implementation_declare_section_list1  */
  YYSYMBOL_package_implementation_declare_section_list2 = 2088, /* package_implementation_declare_section_list2  */
  YYSYMBOL_package_specification_function = 2089, /* package_specification_function  */
  YYSYMBOL_2090_269 = 2090,                /* $@269  */
  YYSYMBOL_package_specification_procedure = 2091, /* package_specification_procedure  */
  YYSYMBOL_2092_270 = 2092,                /* $@270  */
  YYSYMBOL_package_implementation_routine_definition = 2093, /* package_implementation_routine_definition  */
  YYSYMBOL_package_implementation_function_body = 2094, /* package_implementation_function_body  */
  YYSYMBOL_2095_271 = 2095,                /* $@271  */
  YYSYMBOL_package_implementation_procedure_body = 2096, /* package_implementation_procedure_body  */
  YYSYMBOL_2097_272 = 2097,                /* $@272  */
  YYSYMBOL_opt_package_specification_element_list = 2098, /* opt_package_specification_element_list  */
  YYSYMBOL_package_specification_element_list = 2099, /* package_specification_element_list  */
  YYSYMBOL_package_specification_element = 2100, /* package_specification_element  */
  YYSYMBOL_create_routine = 2101,          /* create_routine  */
  YYSYMBOL_2102_273 = 2102,                /* $@273  */
  YYSYMBOL_2103_274 = 2103,                /* $@274  */
  YYSYMBOL_2104_275 = 2104,                /* $@275  */
  YYSYMBOL_2105_276 = 2105,                /* $@276  */
  YYSYMBOL_2106_277 = 2106,                /* $@277  */
  YYSYMBOL_2107_278 = 2107                 /* $@278  */
};
typedef enum yysymbol_kind_t yysymbol_kind_t;


/* Second part of user prologue.  */
#line 345 "/home/buildbot/git/sql/sql_yacc.yy"

/* avoid unintentional %union size increases, it's what a parser stack made of */
static_assert(sizeof(YYSTYPE) == sizeof(void*)*2+8, "%union size check");
bool my_yyoverflow(short **a, YYSTYPE **b, size_t *yystacksize);

#line 2394 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"


#ifdef short
# undef short
#endif

/* On compilers that do not define __PTRDIFF_MAX__ etc., make sure
   <limits.h> and (if available) <stdint.h> are included
   so that the code can choose integer types of a good width.  */

#ifndef __PTRDIFF_MAX__
# include <limits.h> /* INFRINGES ON USER NAME SPACE */
# if defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stdint.h> /* INFRINGES ON USER NAME SPACE */
#  define YY_STDINT_H
# endif
#endif

/* Narrow types that promote to a signed type and that can represent a
   signed or unsigned integer of at least N bits.  In tables they can
   save space and decrease cache pressure.  Promoting to a signed type
   helps avoid bugs in integer arithmetic.  */

#ifdef __INT_LEAST8_MAX__
typedef __INT_LEAST8_TYPE__ yytype_int8;
#elif defined YY_STDINT_H
typedef int_least8_t yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef __INT_LEAST16_MAX__
typedef __INT_LEAST16_TYPE__ yytype_int16;
#elif defined YY_STDINT_H
typedef int_least16_t yytype_int16;
#else
typedef short yytype_int16;
#endif

/* Work around bug in HP-UX 11.23, which defines these macros
   incorrectly for preprocessor constants.  This workaround can likely
   be removed in 2023, as HPE has promised support for HP-UX 11.23
   (aka HP-UX 11i v2) only through the end of 2022; see Table 2 of
   <https://h20195.www2.hpe.com/V2/getpdf.aspx/4AA4-7673ENW.pdf>.  */
#ifdef __hpux
# undef UINT_LEAST8_MAX
# undef UINT_LEAST16_MAX
# define UINT_LEAST8_MAX 255
# define UINT_LEAST16_MAX 65535
#endif

#if defined __UINT_LEAST8_MAX__ && __UINT_LEAST8_MAX__ <= __INT_MAX__
typedef __UINT_LEAST8_TYPE__ yytype_uint8;
#elif (!defined __UINT_LEAST8_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST8_MAX <= INT_MAX)
typedef uint_least8_t yytype_uint8;
#elif !defined __UINT_LEAST8_MAX__ && UCHAR_MAX <= INT_MAX
typedef unsigned char yytype_uint8;
#else
typedef short yytype_uint8;
#endif

#if defined __UINT_LEAST16_MAX__ && __UINT_LEAST16_MAX__ <= __INT_MAX__
typedef __UINT_LEAST16_TYPE__ yytype_uint16;
#elif (!defined __UINT_LEAST16_MAX__ && defined YY_STDINT_H \
       && UINT_LEAST16_MAX <= INT_MAX)
typedef uint_least16_t yytype_uint16;
#elif !defined __UINT_LEAST16_MAX__ && USHRT_MAX <= INT_MAX
typedef unsigned short yytype_uint16;
#else
typedef int yytype_uint16;
#endif

#ifndef YYPTRDIFF_T
# if defined __PTRDIFF_TYPE__ && defined __PTRDIFF_MAX__
#  define YYPTRDIFF_T __PTRDIFF_TYPE__
#  define YYPTRDIFF_MAXIMUM __PTRDIFF_MAX__
# elif defined PTRDIFF_MAX
#  ifndef ptrdiff_t
#   include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  endif
#  define YYPTRDIFF_T ptrdiff_t
#  define YYPTRDIFF_MAXIMUM PTRDIFF_MAX
# else
#  define YYPTRDIFF_T long
#  define YYPTRDIFF_MAXIMUM LONG_MAX
# endif
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif defined __STDC_VERSION__ && 199901 <= __STDC_VERSION__
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned
# endif
#endif

#define YYSIZE_MAXIMUM                                  \
  YY_CAST (YYPTRDIFF_T,                                 \
           (YYPTRDIFF_MAXIMUM < YY_CAST (YYSIZE_T, -1)  \
            ? YYPTRDIFF_MAXIMUM                         \
            : YY_CAST (YYSIZE_T, -1)))

#define YYSIZEOF(X) YY_CAST (YYPTRDIFF_T, sizeof (X))


/* Stored state numbers (used for stacks). */
typedef yytype_int16 yy_state_t;

/* State numbers in computations.  */
typedef int yy_state_fast_t;

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif


#ifndef YY_ATTRIBUTE_PURE
# if defined __GNUC__ && 2 < __GNUC__ + (96 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_PURE __attribute__ ((__pure__))
# else
#  define YY_ATTRIBUTE_PURE
# endif
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# if defined __GNUC__ && 2 < __GNUC__ + (7 <= __GNUC_MINOR__)
#  define YY_ATTRIBUTE_UNUSED __attribute__ ((__unused__))
# else
#  define YY_ATTRIBUTE_UNUSED
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YY_USE(E) ((void) (E))
#else
# define YY_USE(E) /* empty */
#endif

/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
#if defined __GNUC__ && ! defined __ICC && 406 <= __GNUC__ * 100 + __GNUC_MINOR__
# if __GNUC__ * 100 + __GNUC_MINOR__ < 407
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")
# else
#  define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN                           \
    _Pragma ("GCC diagnostic push")                                     \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")              \
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# endif
# define YY_IGNORE_MAYBE_UNINITIALIZED_END      \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif

#if defined __cplusplus && defined __GNUC__ && ! defined __ICC && 6 <= __GNUC__
# define YY_IGNORE_USELESS_CAST_BEGIN                          \
    _Pragma ("GCC diagnostic push")                            \
    _Pragma ("GCC diagnostic ignored \"-Wuseless-cast\"")
# define YY_IGNORE_USELESS_CAST_END            \
    _Pragma ("GCC diagnostic pop")
#endif
#ifndef YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_BEGIN
# define YY_IGNORE_USELESS_CAST_END
#endif


#define YY_ASSERT(E) ((void) (0 && (E)))

#if !defined yyoverflow

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* !defined yyoverflow */

#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yy_state_t yyss_alloc;
  YYSTYPE yyvs_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (YYSIZEOF (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (YYSIZEOF (yy_state_t) + YYSIZEOF (YYSTYPE)) \
      + YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYPTRDIFF_T yynewbytes;                                         \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * YYSIZEOF (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / YYSIZEOF (*yyptr);                        \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, YY_CAST (YYSIZE_T, (Count)) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYPTRDIFF_T yyi;                      \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  749
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   115862

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  798
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  1310
/* YYNRULES -- Number of rules.  */
#define YYNRULES  3832
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  6429

/* YYMAXUTOK -- Last valid token kind.  */
#define YYMAXUTOK   1030


/* YYTRANSLATE(TOKEN-NUM) -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, with out-of-bounds checking.  */
#define YYTRANSLATE(YYX)                                \
  (0 <= (YYX) && (YYX) <= YYMAXUTOK                     \
   ? YY_CAST (yysymbol_kind_t, yytranslate[YYX])        \
   : YYSYMBOL_YYUNDEF)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex.  */
static const yytype_int16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   792,     2,     2,     2,   780,   775,     2,
     788,   789,   778,   777,   791,   776,   796,   779,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   797,   795,
     773,   771,   772,     2,     3,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   781,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   793,   774,   794,   782,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     4,     5,
       6,     7,     8,     9,    10,    11,    12,    13,    14,    15,
      16,    17,    18,    19,    20,    21,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,    33,    34,    35,
      36,    37,    38,    39,    40,    41,    42,    43,    44,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    74,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      86,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   127,   128,   129,   130,   131,   132,   133,   134,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,   172,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,   684,   685,
     686,   687,   688,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,   763,   764,   765,
     766,   767,   768,   769,   770,   783,   784,   785,   786,   787,
     790
};

#if YYDEBUG
/* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_int16 yyrline[] =
{
       0,  2035,  2035,  2045,  2044,  2069,  2076,  2078,  2082,  2083,
    2084,  2089,  2090,  2091,  2092,  2093,  2094,  2095,  2096,  2097,
    2098,  2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,  2123,  2124,  2125,  2126,  2127,
    2128,  2129,  2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,
    2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,  2146,  2147,
    2148,  2152,  2159,  2160,  2165,  2164,  2179,  2185,  2191,  2184,
    2200,  2202,  2201,  2211,  2216,  2228,  2227,  2244,  2243,  2253,
    2254,  2258,  2262,  2266,  2270,  2274,  2278,  2288,  2293,  2297,
    2301,  2305,  2309,  2313,  2318,  2322,  2327,  2355,  2359,  2363,
    2368,  2371,  2373,  2374,  2378,  2384,  2386,  2387,  2391,  2397,
    2399,  2400,  2404,  2411,  2415,  2430,  2434,  2440,  2446,  2452,
    2458,  2466,  2470,  2474,  2486,  2489,  2494,  2516,  2528,  2515,
    2551,  2550,  2608,  2615,  2607,  2627,  2634,  2626,  2647,  2653,
    2646,  2665,  2671,  2664,  2684,  2683,  2697,  2695,  2711,  2709,
    2723,  2722,  2733,  2732,  2742,  2749,  2756,  2756,  2759,  2763,
    2764,  2768,  2769,  2773,  2785,  2796,  2803,  2810,  2819,  2826,
    2833,  2841,  2849,  2857,  2865,  2873,  2881,  2893,  2910,  2910,
    2914,  2913,  2925,  2926,  2930,  2943,  2956,  2969,  2982,  2995,
    3008,  3020,  3041,  3056,  3055,  3088,  3087,  3094,  3101,  3102,
    3108,  3114,  3124,  3130,  3136,  3138,  3145,  3146,  3150,  3160,
    3161,  3169,  3169,  3211,  3220,  3221,  3226,  3227,  3228,  3229,
    3233,  3234,  3238,  3239,  3243,  3248,  3257,  3262,  3270,  3271,
    3275,  3276,  3281,  3283,  3285,  3287,  3289,  3291,  3293,  3299,
    3300,  3304,  3305,  3310,  3309,  3320,  3319,  3330,  3329,  3342,
    3345,  3344,  3351,  3353,  3357,  3361,  3370,  3375,  3375,  3385,
    3386,  3390,  3391,  3395,  3403,  3411,  3413,  3417,  3418,  3422,
    3423,  3424,  3429,  3428,  3440,  3448,  3456,  3460,  3461,  3465,
    3466,  3471,  3477,  3483,  3493,  3501,  3506,  3514,  3563,  3572,
    3570,  3585,  3595,  3600,  3599,  3613,  3615,  3620,  3630,  3629,
    3658,  3659,  3660,  3661,  3666,  3668,  3673,  3688,  3696,  3700,
    3720,  3721,  3725,  3729,  3735,  3741,  3747,  3753,  3763,  3768,
    3776,  3784,  3789,  3795,  3796,  3802,  3805,  3809,  3817,  3834,
    3836,  3854,  3860,  3862,  3864,  3866,  3868,  3870,  3872,  3874,
    3876,  3878,  3880,  3882,  3884,  3889,  3898,  3897,  3918,  3919,
    3924,  3930,  3939,  3946,  3955,  3964,  3969,  3983,  3985,  3987,
    3996,  4001,  4008,  4017,  4026,  4028,  4030,  4032,  4034,  4036,
    4038,  4040,  4042,  4044,  4046,  4048,  4050,  4052,  4057,  4058,
    4066,  4078,  4094,  4093,  4104,  4104,  4126,  4127,  4132,  4131,
    4139,  4150,  4155,  4162,  4161,  4169,  4168,  4178,  4183,  4189,
    4188,  4195,  4194,  4204,  4212,  4220,  4229,  4229,  4262,  4272,
    4271,  4302,  4301,  4331,  4337,  4345,  4346,  4350,  4351,  4352,
    4356,  4364,  4369,  4374,  4382,  4383,  4391,  4409,  4425,  4445,
    4450,  4444,  4462,  4464,  4465,  4466,  4471,  4470,  4541,  4540,
    4547,  4552,  4553,  4557,  4558,  4563,  4562,  4578,  4577,  4593,
    4603,  4607,  4608,  4613,  4614,  4618,  4626,  4631,  4638,  4647,
    4661,  4669,  4678,  4677,  4685,  4684,  4692,  4697,  4704,  4691,
    4714,  4713,  4724,  4723,  4733,  4732,  4742,  4749,  4741,  4764,
    4763,  4775,  4777,  4782,  4784,  4786,  4792,  4791,  4794,  4795,
    4809,  4810,  4814,  4815,  4825,  4830,  4841,  4878,  4879,  4884,
    4883,  4899,  4914,  4913,  4935,  4934,  4940,  4948,  4947,  4950,
    4952,  4955,  4954,  4963,  4966,  4965,  4974,  4975,  4981,  4982,
    4999,  5000,  5004,  5005,  5009,  5023,  5033,  5044,  5053,  5054,
    5067,  5069,  5068,  5073,  5071,  5082,  5083,  5087,  5101,  5113,
    5114,  5127,  5136,  5158,  5159,  5162,  5164,  5169,  5168,  5192,
    5204,  5220,  5219,  5234,  5233,  5247,  5254,  5261,  5281,  5299,
    5303,  5330,  5342,  5343,  5348,  5357,  5347,  5382,  5383,  5387,
    5398,  5417,  5430,  5456,  5457,  5462,  5461,  5498,  5508,  5509,
    5513,  5514,  5518,  5519,  5527,  5528,  5532,  5533,  5537,  5539,
    5545,  5551,  5553,  5555,  5557,  5559,  5561,  5566,  5567,  5567,
    5576,  5588,  5591,  5599,  5602,  5612,  5613,  5617,  5618,  5622,
    5623,  5627,  5628,  5629,  5638,  5641,  5648,  5652,  5659,  5663,
    5669,  5671,  5675,  5676,  5680,  5681,  5682,  5686,  5701,  5706,
    5711,  5716,  5721,  5726,  5731,  5746,  5752,  5767,  5772,  5787,
    5793,  5811,  5816,  5821,  5826,  5831,  5836,  5842,  5841,  5867,
    5868,  5869,  5874,  5879,  5884,  5886,  5888,  5890,  5896,  5901,
    5906,  5910,  5915,  5919,  5928,  5937,  5944,  5953,  5954,  5965,
    5966,  5969,  5971,  5975,  5994,  6003,  6013,  6023,  6034,  6035,
    6036,  6037,  6038,  6039,  6040,  6044,  6045,  6046,  6050,  6051,
    6052,  6053,  6058,  6065,  6072,  6073,  6077,  6078,  6079,  6080,
    6081,  6085,  6087,  6098,  6097,  6105,  6104,  6112,  6111,  6119,
    6118,  6131,  6128,  6139,  6137,  6146,  6145,  6164,  6172,  6180,
    6188,  6189,  6193,  6203,  6204,  6208,  6209,  6213,  6218,  6217,
    6256,  6255,  6271,  6270,  6281,  6282,  6286,  6287,  6291,  6292,
    6296,  6297,  6301,  6302,  6304,  6303,  6311,  6317,  6326,  6327,
    6332,  6335,  6339,  6343,  6350,  6351,  6355,  6356,  6360,  6366,
    6372,  6373,  6381,  6380,  6402,  6403,  6413,  6421,  6433,  6433,
    6436,  6437,  6444,  6451,  6455,  6463,  6464,  6465,  6469,  6470,
    6471,  6472,  6473,  6477,  6478,  6486,  6490,  6510,  6514,  6515,
    6529,  6533,  6537,  6541,  6543,  6550,  6552,  6558,  6559,  6560,
    6564,  6568,  6573,  6577,  6581,  6585,  6590,  6594,  6601,  6614,
    6615,  6622,  6629,  6637,  6641,  6645,  6649,  6653,  6657,  6661,
    6665,  6667,  6669,  6671,  6673,  6675,  6677,  6679,  6686,  6688,
    6693,  6697,  6698,  6702,  6703,  6707,  6708,  6709,  6710,  6711,
    6715,  6716,  6717,  6718,  6719,  6723,  6729,  6730,  6735,  6737,
    6744,  6745,  6746,  6750,  6754,  6755,  6756,  6757,  6758,  6759,
    6763,  6767,  6768,  6769,  6770,  6773,  6777,  6782,  6783,  6787,
    6788,  6792,  6793,  6798,  6804,  6808,  6814,  6819,  6827,  6828,
    6835,  6839,  6843,  6844,  6848,  6849,  6853,  6854,  6858,  6866,
    6870,  6876,  6880,  6881,  6885,  6898,  6904,  6914,  6915,  6919,
    6926,  6930,  6931,  6935,  6936,  6940,  6949,  6953,  6954,  6958,
    6966,  6967,  6968,  6976,  6977,  6981,  6982,  6983,  6991,  6992,
    6996,  7000,  7004,  7009,  7010,  7015,  7022,  7031,  7035,  7039,
    7049,  7058,  7059,  7064,  7063,  7076,  7077,  7081,  7084,  7085,
    7086,  7087,  7091,  7099,  7106,  7107,  7111,  7121,  7122,  7126,
    7127,  7130,  7132,  7136,  7148,  7149,  7153,  7160,  7173,  7174,
    7176,  7178,  7184,  7189,  7195,  7201,  7208,  7218,  7219,  7220,
    7221,  7222,  7226,  7227,  7231,  7232,  7236,  7237,  7241,  7242,
    7243,  7247,  7251,  7255,  7259,  7260,  7264,  7265,  7269,  7270,
    7274,  7275,  7279,  7280,  7284,  7285,  7289,  7290,  7295,  7296,
    7297,  7301,  7303,  7308,  7313,  7315,  7319,  7323,  7330,  7331,
    7335,  7339,  7340,  7350,  7351,  7352,  7356,  7357,  7361,  7366,
    7374,  7375,  7383,  7384,  7396,  7405,  7406,  7410,  7412,  7422,
    7438,  7421,  7461,  7460,  7477,  7476,  7491,  7500,  7499,  7507,
    7506,  7514,  7513,  7527,  7521,  7535,  7534,  7574,  7573,  7580,
    7587,  7596,  7606,  7586,  7622,  7626,  7634,  7637,  7641,  7645,
    7653,  7655,  7656,  7657,  7658,  7662,  7663,  7664,  7665,  7669,
    7670,  7682,  7683,  7688,  7689,  7692,  7694,  7702,  7711,  7713,
    7715,  7716,  7724,  7725,  7731,  7740,  7738,  7751,  7764,  7763,
    7776,  7774,  7787,  7794,  7804,  7805,  7811,  7823,  7822,  7862,
    7869,  7873,  7879,  7877,  7894,  7896,  7901,  7909,  7908,  7922,
    7926,  7925,  7937,  7938,  7942,  7955,  7956,  7960,  7964,  7971,
    7976,  7980,  7987,  7994,  7998,  8003,  8011,  8019,  8029,  8040,
    8050,  8061,  8071,  8077,  8083,  8090,  8100,  8105,  8111,  8116,
    8126,  8132,  8139,  8144,  8148,  8153,  8154,  8155,  8160,  8165,
    8169,  8179,  8181,  8185,  8191,  8193,  8194,  8195,  8196,  8200,
    8204,  8212,  8217,  8225,  8226,  8230,  8231,  8235,  8235,  8238,
    8240,  8244,  8245,  8249,  8250,  8258,  8259,  8260,  8264,  8265,
    8270,  8279,  8280,  8281,  8282,  8287,  8286,  8296,  8295,  8303,
    8310,  8320,  8337,  8340,  8347,  8351,  8358,  8362,  8366,  8373,
    8373,  8379,  8380,  8384,  8385,  8386,  8390,  8391,  8400,  8405,
    8410,  8418,  8419,  8424,  8423,  8435,  8436,  8437,  8441,  8443,
    8442,  8449,  8448,  8469,  8470,  8474,  8475,  8479,  8480,  8481,
    8482,  8486,  8487,  8488,  8493,  8492,  8513,  8514,  8518,  8523,
    8524,  8531,  8533,  8538,  8540,  8539,  8552,  8554,  8553,  8567,
    8568,  8573,  8582,  8583,  8584,  8588,  8595,  8605,  8613,  8622,
    8624,  8623,  8629,  8628,  8651,  8652,  8656,  8657,  8661,  8662,
    8663,  8664,  8665,  8666,  8670,  8671,  8676,  8675,  8696,  8697,
    8698,  8703,  8702,  8713,  8720,  8726,  8735,  8736,  8740,  8756,
    8755,  8768,  8769,  8773,  8774,  8778,  8789,  8800,  8801,  8806,
    8805,  8820,  8821,  8825,  8826,  8830,  8841,  8853,  8852,  8860,
    8860,  8869,  8870,  8875,  8876,  8886,  8885,  8900,  8899,  8918,
    8917,  8934,  8932,  8953,  8954,  8959,  8958,  8972,  8981,  8971,
    8991,  9003,  9067,  9072,  9087,  9088,  9103,  9102,  9118,  9117,
    9130,  9132,  9147,  9155,  9153,  9168,  9186,  9188,  9198,  9202,
    9243,  9252,  9262,  9263,  9267,  9271,  9277,  9284,  9286,  9295,
    9299,  9303,  9310,  9319,  9323,  9330,  9347,  9350,  9358,  9361,
    9368,  9372,  9376,  9380,  9387,  9388,  9392,  9393,  9402,  9415,
    9421,  9432,  9435,  9443,  9446,  9452,  9458,  9467,  9468,  9469,
    9489,  9494,  9516,  9522,  9528,  9534,  9540,  9549,  9558,  9564,
    9565,  9566,  9567,  9568,  9572,  9573,  9574,  9578,  9579,  9580,
    9584,  9585,  9589,  9594,  9645,  9652,  9695,  9701,  9705,  9711,
    9717,  9723,  9729,  9735,  9741,  9747,  9753,  9759,  9765,  9771,
    9775,  9781,  9790,  9796,  9804,  9810,  9819,  9825,  9833,  9843,
    9849,  9856,  9863,  9871,  9877,  9886,  9890,  9896,  9902,  9908,
    9914,  9921,  9927,  9933,  9939,  9945,  9952,  9958,  9964,  9970,
    9976,  9982,  9988,  9994, 10000, 10004, 10005, 10009, 10010, 10014,
   10015, 10019, 10020, 10024, 10025, 10026, 10027, 10028, 10029, 10033,
   10034, 10039, 10042, 10046, 10047, 10048, 10052, 10053, 10054, 10055,
   10056, 10057, 10061, 10062, 10063, 10067, 10074, 10081, 10103, 10110,
   10119, 10120, 10121, 10122, 10126, 10135, 10136, 10140, 10144, 10145,
   10146, 10147, 10148, 10149, 10150, 10182, 10183, 10184, 10185, 10186,
   10187, 10188, 10189, 10190, 10198, 10206, 10207, 10214, 10220, 10225,
   10235, 10240, 10245, 10251, 10256, 10264, 10275, 10282, 10287, 10292,
   10297, 10302, 10308, 10314, 10324, 10325, 10326, 10327, 10335, 10336,
   10345, 10346, 10352, 10356, 10362, 10368, 10377, 10378, 10387, 10394,
   10408, 10414, 10422, 10431, 10440, 10447, 10453, 10459, 10465, 10480,
   10491, 10497, 10503, 10510, 10516, 10522, 10530, 10538, 10545, 10549,
   10555, 10563, 10573, 10574, 10578, 10582, 10589, 10593, 10613, 10620,
   10626, 10633, 10640, 10646, 10652, 10658, 10664, 10671, 10678, 10684,
   10695, 10702, 10708, 10721, 10726, 10731, 10737, 10743, 10748, 10755,
   10762, 10770, 10777, 10784, 10791, 10806, 10812, 10818, 10827, 10838,
   10845, 10851, 10859, 10865, 10871, 10877, 10883, 10891, 10903, 10923,
   10922, 11004, 11010, 11016, 11022, 11027, 11032, 11037, 11042, 11047,
   11052, 11072, 11074, 11079, 11080, 11084, 11085, 11089, 11090, 11094,
   11101, 11109, 11136, 11142, 11148, 11154, 11160, 11166, 11175, 11182,
   11184, 11181, 11191, 11202, 11208, 11214, 11220, 11226, 11232, 11238,
   11244, 11250, 11257, 11256, 11277, 11276, 11307, 11306, 11320, 11329,
   11347, 11349, 11351, 11366, 11373, 11380, 11387, 11394, 11401, 11408,
   11415, 11422, 11429, 11440, 11447, 11458, 11469, 11489, 11488, 11494,
   11511, 11517, 11526, 11535, 11545, 11544, 11556, 11571, 11584, 11589,
   11597, 11598, 11603, 11608, 11611, 11613, 11617, 11622, 11630, 11631,
   11636, 11643, 11653, 11652, 11669, 11671, 11678, 11685, 11692, 11696,
   11697, 11698, 11706, 11707, 11708, 11709, 11710, 11711, 11712, 11713,
   11717, 11718, 11719, 11720, 11727, 11728, 11732, 11737, 11745, 11746,
   11750, 11757, 11765, 11774, 11784, 11785, 11796, 11797, 11809, 11810,
   11811, 11818, 11822, 11827, 11828, 11834, 11833, 11862, 11861, 11877,
   11886, 11898, 11910, 11911, 11912, 11913, 11918, 11919, 11920, 11921,
   11922, 11926, 11927, 11932, 11936, 11940, 11948, 11955, 11963, 11969,
   11962, 12015, 12016, 12022, 12027, 12041, 12049, 12047, 12067, 12065,
   12078, 12090, 12088, 12108, 12107, 12119, 12132, 12130, 12151, 12150,
   12163, 12177, 12178, 12179, 12183, 12184, 12192, 12193, 12197, 12206,
   12207, 12208, 12213, 12214, 12218, 12219, 12223, 12224, 12228, 12229,
   12237, 12245, 12253, 12254, 12267, 12283, 12287, 12308, 12309, 12314,
   12318, 12319, 12320, 12324, 12325, 12330, 12329, 12335, 12334, 12342,
   12343, 12346, 12348, 12348, 12352, 12352, 12357, 12358, 12362, 12364,
   12369, 12370, 12374, 12385, 12399, 12400, 12401, 12402, 12403, 12404,
   12405, 12406, 12407, 12408, 12409, 12410, 12414, 12415, 12416, 12417,
   12418, 12419, 12420, 12421, 12422, 12426, 12427, 12428, 12429, 12432,
   12434, 12435, 12439, 12440, 12444, 12452, 12454, 12458, 12460, 12459,
   12473, 12476, 12475, 12493, 12495, 12499, 12504, 12512, 12513, 12530,
   12553, 12554, 12560, 12561, 12565, 12578, 12577, 12586, 12587, 12596,
   12597, 12601, 12602, 12606, 12607, 12621, 12622, 12626, 12636, 12645,
   12652, 12659, 12669, 12670, 12677, 12687, 12688, 12690, 12692, 12694,
   12696, 12705, 12709, 12710, 12714, 12728, 12729, 12735, 12734, 12745,
   12751, 12760, 12761, 12762, 12768, 12769, 12774, 12781, 12787, 12792,
   12803, 12813, 12824, 12831, 12839, 12849, 12850, 12854, 12855, 12859,
   12860, 12865, 12872, 12879, 12886, 12896, 12901, 12906, 12910, 12916,
   12922, 12931, 12939, 12943, 12950, 12951, 12955, 12960, 12965, 12978,
   12982, 12986, 12990, 12995, 12998, 13002, 13011, 13015, 13023, 13031,
   13042, 13044, 13048, 13049, 13053, 13054, 13055, 13056, 13057, 13058,
   13062, 13063, 13064, 13065, 13066, 13074, 13079, 13084, 13089, 13094,
   13110, 13116, 13122, 13128, 13134, 13140, 13156, 13162, 13168, 13174,
   13175, 13181, 13187, 13188, 13192, 13193, 13194, 13195, 13196, 13200,
   13201, 13202, 13203, 13204, 13208, 13213, 13214, 13218, 13219, 13223,
   13224, 13225, 13230, 13229, 13261, 13262, 13266, 13267, 13271, 13281,
   13281, 13293, 13294, 13297, 13317, 13327, 13332, 13340, 13346, 13358,
   13345, 13360, 13375, 13388, 13387, 13410, 13409, 13419, 13418, 13441,
   13447, 13451, 13456, 13455, 13464, 13469, 13475, 13482, 13480, 13491,
   13495, 13496, 13500, 13512, 13525, 13526, 13530, 13544, 13548, 13556,
   13560, 13567, 13568, 13576, 13583, 13575, 13596, 13603, 13595, 13614,
   13623, 13632, 13640, 13641, 13645, 13646, 13650, 13651, 13659, 13659,
   13662, 13662, 13675, 13676, 13678, 13677, 13690, 13696, 13698, 13702,
   13704, 13710, 13714, 13715, 13719, 13720, 13724, 13734, 13735, 13739,
   13740, 13744, 13745, 13749, 13750, 13755, 13754, 13771, 13770, 13786,
   13787, 13791, 13792, 13796, 13801, 13809, 13817, 13828, 13829, 13838,
   13839, 13847, 13849, 13851, 13849, 13861, 13873, 13880, 13890, 13917,
   13879, 13924, 13925, 13929, 13936, 13944, 13945, 13949, 13959, 13960,
   13967, 13966, 13986, 13989, 13996, 13998, 13997, 14013, 14043, 14056,
   14051, 14069, 14080, 14068, 14090, 14101, 14089, 14114, 14118, 14117,
   14151, 14152, 14156, 14157, 14161, 14162, 14163, 14168, 14179, 14167,
   14189, 14191, 14194, 14196, 14199, 14200, 14203, 14207, 14211, 14215,
   14219, 14223, 14227, 14231, 14235, 14243, 14246, 14256, 14255, 14274,
   14281, 14289, 14297, 14305, 14313, 14321, 14328, 14335, 14341, 14343,
   14345, 14354, 14358, 14363, 14362, 14369, 14368, 14375, 14384, 14391,
   14396, 14401, 14406, 14411, 14416, 14418, 14420, 14422, 14429, 14437,
   14439, 14447, 14454, 14461, 14468, 14474, 14479, 14487, 14495, 14503,
   14507, 14511, 14521, 14531, 14538, 14545, 14551, 14557, 14563, 14569,
   14575, 14581, 14588, 14593, 14600, 14607, 14614, 14621, 14628, 14635,
   14640, 14645, 14650, 14655, 14660, 14672, 14680, 14702, 14704, 14706,
   14711, 14712, 14715, 14717, 14721, 14722, 14726, 14727, 14731, 14732,
   14736, 14737, 14741, 14742, 14746, 14747, 14756, 14768, 14767, 14786,
   14785, 14795, 14796, 14797, 14798, 14799, 14800, 14804, 14805, 14809,
   14816, 14817, 14819, 14820, 14824, 14825, 14838, 14839, 14840, 14856,
   14880, 14879, 14891, 14890, 14902, 14907, 14908, 14921, 14924, 14923,
   14936, 14937, 14942, 14944, 14946, 14948, 14950, 14952, 14960, 14962,
   14964, 14966, 14971, 14978, 14980, 14982, 14990, 14992, 14994, 14996,
   14998, 15000, 15017, 15018, 15022, 15026, 15039, 15038, 15053, 15063,
   15064, 15067, 15069, 15070, 15074, 15090, 15091, 15096, 15095, 15105,
   15106, 15110, 15110, 15115, 15114, 15120, 15124, 15125, 15129, 15130,
   15137, 15142, 15141, 15156, 15155, 15172, 15173, 15174, 15178, 15179,
   15180, 15189, 15190, 15194, 15198, 15206, 15206, 15211, 15212, 15221,
   15233, 15247, 15258, 15271, 15232, 15282, 15283, 15287, 15288, 15292,
   15293, 15301, 15305, 15306, 15307, 15310, 15312, 15316, 15317, 15321,
   15326, 15333, 15338, 15345, 15347, 15351, 15352, 15356, 15361, 15369,
   15370, 15374, 15376, 15384, 15385, 15389, 15390, 15391, 15395, 15397,
   15402, 15403, 15418, 15419, 15423, 15424, 15428, 15441, 15446, 15451,
   15458, 15466, 15474, 15479, 15487, 15495, 15510, 15517, 15523, 15533,
   15534, 15542, 15543, 15544, 15545, 15559, 15565, 15571, 15577, 15583,
   15589, 15612, 15622, 15632, 15638, 15645, 15655, 15662, 15669, 15680,
   15679, 15704, 15705, 15710, 15711, 15715, 15719, 15743, 15746, 15745,
   15760, 15764, 15769, 15776, 15782, 15791, 15808, 15809, 15813, 15818,
   15826, 15831, 15839, 15844, 15849, 15854, 15860, 15865, 15873, 15878,
   15883, 15888, 15894, 15902, 15903, 15912, 15919, 15923, 15929, 15935,
   15945, 15951, 15960, 15970, 15971, 15975, 15976, 15977, 15981, 15989,
   15990, 15991, 15992, 15996, 16005, 16013, 16021, 16029, 16030, 16038,
   16039, 16043, 16044, 16049, 16058, 16059, 16067, 16068, 16076, 16077,
   16078, 16082, 16093, 16117, 16126, 16126, 16128, 16138, 16139, 16140,
   16141, 16142, 16143, 16144, 16145, 16146, 16147, 16148, 16149, 16154,
   16155, 16156, 16157, 16158, 16159, 16160, 16161, 16162, 16163, 16164,
   16165, 16166, 16173, 16174, 16175, 16176, 16177, 16178, 16179, 16180,
   16181, 16182, 16183, 16184, 16185, 16189, 16190, 16191, 16192, 16193,
   16194, 16195, 16196, 16197, 16198, 16199, 16200, 16201, 16205, 16206,
   16207, 16208, 16209, 16210, 16211, 16212, 16225, 16226, 16227, 16228,
   16229, 16230, 16231, 16232, 16233, 16234, 16235, 16236, 16237, 16238,
   16239, 16240, 16241, 16242, 16243, 16244, 16245, 16246, 16247, 16248,
   16249, 16250, 16251, 16252, 16253, 16254, 16255, 16256, 16257, 16258,
   16259, 16260, 16261, 16262, 16263, 16264, 16265, 16266, 16267, 16268,
   16269, 16270, 16271, 16272, 16273, 16274, 16275, 16276, 16277, 16318,
   16319, 16320, 16321, 16322, 16323, 16334, 16335, 16336, 16337, 16338,
   16339, 16340, 16341, 16342, 16343, 16347, 16348, 16349, 16353, 16354,
   16355, 16364, 16365, 16366, 16367, 16368, 16369, 16370, 16371, 16372,
   16373, 16374, 16375, 16376, 16377, 16378, 16379, 16380, 16381, 16382,
   16383, 16384, 16385, 16386, 16387, 16388, 16389, 16394, 16399, 16400,
   16401, 16402, 16403, 16404, 16405, 16406, 16407, 16408, 16409, 16410,
   16411, 16412, 16413, 16414, 16415, 16416, 16417, 16418, 16419, 16420,
   16421, 16422, 16423, 16424, 16425, 16426, 16427, 16428, 16429, 16430,
   16431, 16432, 16433, 16434, 16435, 16436, 16437, 16438, 16439, 16440,
   16441, 16442, 16447, 16448, 16449, 16450, 16451, 16452, 16453, 16454,
   16455, 16456, 16457, 16458, 16459, 16460, 16461, 16462, 16463, 16464,
   16465, 16466, 16467, 16468, 16469, 16470, 16471, 16472, 16473, 16474,
   16475, 16476, 16477, 16478, 16479, 16480, 16481, 16482, 16483, 16484,
   16485, 16486, 16487, 16488, 16489, 16490, 16491, 16492, 16493, 16494,
   16495, 16496, 16497, 16498, 16499, 16500, 16501, 16502, 16503, 16504,
   16505, 16506, 16507, 16508, 16509, 16510, 16511, 16512, 16513, 16514,
   16515, 16516, 16517, 16518, 16519, 16520, 16521, 16522, 16523, 16524,
   16525, 16526, 16527, 16528, 16529, 16530, 16531, 16532, 16533, 16534,
   16535, 16536, 16537, 16538, 16539, 16540, 16541, 16542, 16543, 16544,
   16545, 16546, 16547, 16548, 16549, 16550, 16551, 16552, 16553, 16554,
   16555, 16556, 16557, 16559, 16561, 16562, 16563, 16564, 16565, 16566,
   16567, 16568, 16569, 16570, 16571, 16572, 16573, 16574, 16575, 16576,
   16577, 16578, 16579, 16580, 16581, 16582, 16583, 16584, 16585, 16586,
   16587, 16588, 16589, 16590, 16591, 16592, 16593, 16594, 16595, 16596,
   16597, 16598, 16599, 16600, 16601, 16602, 16603, 16604, 16605, 16606,
   16607, 16608, 16609, 16610, 16611, 16612, 16613, 16614, 16615, 16616,
   16617, 16618, 16619, 16620, 16621, 16622, 16623, 16624, 16625, 16626,
   16627, 16628, 16629, 16630, 16631, 16632, 16633, 16634, 16635, 16636,
   16637, 16638, 16639, 16640, 16641, 16642, 16643, 16644, 16645, 16646,
   16647, 16648, 16649, 16650, 16651, 16652, 16653, 16654, 16655, 16656,
   16657, 16658, 16659, 16660, 16661, 16662, 16663, 16664, 16665, 16666,
   16667, 16668, 16669, 16670, 16671, 16672, 16673, 16674, 16675, 16676,
   16677, 16678, 16679, 16680, 16681, 16682, 16683, 16684, 16685, 16687,
   16689, 16690, 16691, 16692, 16693, 16694, 16695, 16696, 16697, 16698,
   16699, 16700, 16701, 16702, 16703, 16704, 16705, 16706, 16707, 16708,
   16709, 16710, 16714, 16715, 16721, 16722, 16723, 16724, 16725, 16726,
   16727, 16728, 16729, 16730, 16731, 16732, 16733, 16734, 16735, 16736,
   16738, 16740, 16741, 16742, 16743, 16745, 16747, 16748, 16749, 16750,
   16751, 16752, 16753, 16758, 16759, 16760, 16761, 16762, 16763, 16764,
   16765, 16766, 16767, 16768, 16769, 16770, 16771, 16772, 16773, 16774,
   16775, 16776, 16777, 16778, 16779, 16780, 16781, 16782, 16783, 16784,
   16785, 16786, 16787, 16788, 16789, 16790, 16791, 16792, 16793, 16794,
   16795, 16796, 16797, 16798, 16799, 16800, 16801, 16802, 16803, 16804,
   16805, 16806, 16807, 16808, 16809, 16810, 16811, 16812, 16813, 16814,
   16815, 16816, 16817, 16818, 16819, 16820, 16821, 16822, 16823, 16824,
   16825, 16826, 16827, 16828, 16829, 16830, 16831, 16832, 16833, 16834,
   16835, 16836, 16837, 16838, 16839, 16840, 16841, 16842, 16843, 16844,
   16845, 16846, 16847, 16848, 16849, 16850, 16851, 16852, 16853, 16854,
   16855, 16856, 16857, 16858, 16859, 16860, 16861, 16862, 16863, 16864,
   16865, 16866, 16867, 16868, 16869, 16870, 16871, 16872, 16873, 16874,
   16875, 16876, 16877, 16881, 16882, 16883, 16884, 16885, 16886, 16887,
   16888, 16889, 16890, 16891, 16892, 16893, 16894, 16895, 16896, 16897,
   16898, 16899, 16900, 16901, 16902, 16903, 16904, 16905, 16906, 16907,
   16908, 16909, 16910, 16911, 16912, 16913, 16914, 16915, 16916, 16917,
   16918, 16919, 16920, 16921, 16922, 16923, 16924, 16925, 16926, 16927,
   16928, 16929, 16930, 16931, 16932, 16933, 16934, 16935, 16936, 16937,
   16938, 16939, 16940, 16941, 16942, 16943, 16944, 16945, 16946, 16947,
   16948, 16949, 16950, 16951, 16952, 16953, 16954, 16955, 16956, 16957,
   16958, 16959, 16960, 16961, 16962, 16963, 16964, 16965, 16966, 16967,
   16968, 16969, 16970, 16971, 16972, 16973, 16974, 16975, 16976, 16977,
   16978, 16979, 16980, 16981, 16982, 16983, 16984, 16985, 16986, 16987,
   16988, 16989, 16990, 16991, 16992, 16993, 16994, 16995, 16996, 17008,
   17007, 17020, 17021, 17023, 17022, 17034, 17033, 17040, 17038, 17058,
   17059, 17064, 17065, 17067, 17066, 17080, 17081, 17087, 17086, 17091,
   17095, 17096, 17097, 17101, 17102, 17103, 17104, 17108, 17109, 17110,
   17111, 17120, 17119, 17134, 17133, 17148, 17147, 17165, 17164, 17179,
   17178, 17193, 17192, 17209, 17208, 17223, 17222, 17237, 17236, 17250,
   17249, 17275, 17274, 17286, 17285, 17298, 17297, 17308, 17326, 17337,
   17344, 17350, 17372, 17388, 17400, 17399, 17414, 17413, 17425, 17424,
   17438, 17439, 17440, 17441, 17445, 17464, 17482, 17483, 17487, 17488,
   17489, 17490, 17495, 17500, 17505, 17516, 17529, 17535, 17542, 17543,
   17544, 17551, 17550, 17564, 17565, 17571, 17580, 17581, 17585, 17586,
   17590, 17609, 17610, 17611, 17616, 17617, 17622, 17621, 17639, 17638,
   17650, 17659, 17669, 17668, 17711, 17712, 17716, 17717, 17721, 17722,
   17723, 17724, 17726, 17725, 17738, 17739, 17740, 17741, 17742, 17748,
   17753, 17758, 17763, 17767, 17772, 17781, 17783, 17788, 17793, 17799,
   17805, 17810, 17822, 17823, 17827, 17828, 17832, 17837, 17845, 17854,
   17875, 17875, 17878, 17879, 17883, 17884, 17891, 17893, 17897, 17902,
   17909, 17913, 17922, 17929, 17930, 17931, 17932, 17936, 17937, 17938,
   17939, 17940, 17941, 17942, 17943, 17944, 17945, 17946, 17947, 17948,
   17949, 17950, 17951, 17952, 17953, 17954, 17955, 17956, 17957, 17958,
   17959, 17960, 17961, 17962, 17963, 17964, 17965, 17966, 17967, 17968,
   17969, 17970, 17971, 17972, 17973, 17974, 17975, 17976, 17977, 17978,
   17982, 17983, 17987, 17988, 17992, 17999, 18006, 18016, 18025, 18031,
   18038, 18046, 18051, 18059, 18064, 18072, 18077, 18084, 18084, 18085,
   18085, 18088, 18094, 18100, 18105, 18112, 18118, 18125, 18134, 18138,
   18144, 18152, 18154, 18158, 18162, 18166, 18173, 18178, 18183, 18188,
   18193, 18201, 18202, 18206, 18207, 18212, 18213, 18217, 18218, 18222,
   18223, 18227, 18228, 18233, 18232, 18242, 18251, 18252, 18256, 18257,
   18262, 18263, 18264, 18269, 18270, 18271, 18275, 18287, 18296, 18302,
   18311, 18320, 18333, 18335, 18337, 18345, 18346, 18347, 18351, 18352,
   18358, 18359, 18360, 18361, 18362, 18363, 18364, 18374, 18375, 18380,
   18393, 18407, 18408, 18409, 18413, 18414, 18418, 18419, 18424, 18425,
   18429, 18435, 18444, 18444, 18458, 18459, 18460, 18461, 18471, 18473,
   18479, 18484, 18493, 18496, 18507, 18524, 18540, 18550, 18556, 18561,
   18565, 18538, 18614, 18616, 18621, 18622, 18626, 18627, 18631, 18631,
   18638, 18642, 18646, 18650, 18654, 18658, 18666, 18667, 18683, 18690,
   18697, 18710, 18711, 18712, 18716, 18717, 18718, 18722, 18723, 18728,
   18730, 18729, 18735, 18736, 18740, 18745, 18752, 18757, 18766, 18772,
   18780, 18784, 18788, 18792, 18796, 18800, 18804, 18808, 18812, 18813,
   18817, 18821, 18826, 18825, 18834, 18839, 18844, 18850, 18856, 18862,
   18871, 18878, 18879, 18880, 18886, 18890, 18898, 18899, 18900, 18904,
   18905, 18910, 18911, 18917, 18918, 18919, 18920, 18921, 18922, 18923,
   18927, 18928, 18929, 18930, 18931, 18932, 18933, 18934, 18935, 18936,
   18937, 18938, 18942, 18947, 18951, 18960, 18959, 18972, 18977, 18981,
   18985, 18994, 18995, 19011, 19020, 19032, 19037, 19041, 19046, 19051,
   19055, 19062, 19068, 19073, 19083, 19082, 19097, 19105, 19096, 19118,
   19122, 19134, 19139, 19140, 19149, 19151, 19150, 19178, 19179, 19180,
   19181, 19182, 19186, 19187, 19188, 19189, 19190, 19191, 19192, 19193,
   19197, 19198, 19199, 19200, 19207, 19205, 19222, 19221, 19236, 19235,
   19743, 19744, 19750, 19751, 19759, 19758, 19779, 19778, 19798, 19807,
   19816, 19822, 19821, 19841, 19840, 19860, 19861, 19865, 19866, 19870,
   19877, 19998, 19997, 20008, 20006, 20022, 20020, 20034, 20043, 20041,
   20061, 20074, 20059
};
#endif

/** Accessing symbol of state STATE.  */
#define YY_ACCESSING_SYMBOL(State) YY_CAST (yysymbol_kind_t, yystos[State])

#if YYDEBUG || 0
/* The user-facing name of the symbol whose (internal) number is
   YYSYMBOL.  No bounds checking.  */
static const char *yysymbol_name (yysymbol_kind_t yysymbol) YY_ATTRIBUTE_UNUSED;

/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "\"end of file\"", "error", "\"invalid token\"", "'@'", "ABORT_SYM",
  "IMPOSSIBLE_ACTION", "FORCE_LOOKAHEAD", "END_OF_INPUT",
  "COLON_ORACLE_SYM", "PARAM_MARKER", "FOR_SYSTEM_TIME_SYM",
  "LEFT_PAREN_ALT", "LEFT_PAREN_WITH", "LEFT_PAREN_LIKE",
  "ORACLE_CONCAT_SYM", "PERCENT_ORACLE_SYM", "WITH_CUBE_SYM",
  "WITH_ROLLUP_SYM", "WITH_SYSTEM_SYM", "IDENT", "IDENT_QUOTED",
  "LEX_HOSTNAME", "UNDERSCORE_CHARSET", "BIN_NUM", "DECIMAL_NUM",
  "FLOAT_NUM", "HEX_NUM", "HEX_STRING", "LONG_NUM", "NCHAR_STRING", "NUM",
  "TEXT_STRING", "ULONGLONG_NUM", "AND_AND_SYM", "DOT_DOT_SYM",
  "EQUAL_SYM", "GE", "LE", "MYSQL_CONCAT_SYM", "NE", "NOT2_SYM", "OR2_SYM",
  "SET_VAR", "SHIFT_LEFT", "SHIFT_RIGHT", "ACCESSIBLE_SYM", "ADD", "ALL",
  "ALTER", "ANALYZE_SYM", "AND_SYM", "ASC", "ASENSITIVE_SYM", "AS",
  "BEFORE_SYM", "BETWEEN_SYM", "BIGINT", "BINARY", "BIT_AND", "BIT_OR",
  "BIT_XOR", "BLOB_MARIADB_SYM", "BLOB_ORACLE_SYM", "BODY_ORACLE_SYM",
  "BOTH", "BY", "CALL_SYM", "CASCADE", "CASE_SYM", "CAST_SYM", "CHANGE",
  "CHAR_SYM", "CHECK_SYM", "COLLATE_SYM", "CONDITION_SYM", "CONSTRAINT",
  "CONTINUE_MARIADB_SYM", "CONTINUE_ORACLE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CREATE", "CROSS", "CUME_DIST_SYM", "CURDATE",
  "CURRENT_ROLE", "CURRENT_USER", "CURSOR_SYM", "CURTIME", "DATABASE",
  "DATABASES", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DAY_HOUR_SYM",
  "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM", "DAY_SECOND_SYM", "DECIMAL_SYM",
  "DECLARE_MARIADB_SYM", "DECLARE_ORACLE_SYM", "DEFAULT",
  "DELETE_DOMAIN_ID_SYM", "DELETE_SYM", "DENSE_RANK_SYM", "DESCRIBE",
  "DESC", "DETERMINISTIC_SYM", "DISTINCT", "DIV_SYM", "DO_DOMAIN_IDS_SYM",
  "DOUBLE_SYM", "DROP", "DUAL_SYM", "EACH_SYM", "ELSEIF_MARIADB_SYM",
  "ELSE", "ELSIF_ORACLE_SYM", "EMPTY_SYM", "ENCLOSED", "ESCAPED",
  "EXCEPT_SYM", "EXISTS", "EXTRACT_SYM", "FALSE_SYM", "FETCH_SYM",
  "FIRST_VALUE_SYM", "FLOAT_SYM", "FOREIGN", "FOR_SYM", "FROM",
  "FULLTEXT_SYM", "GOTO_ORACLE_SYM", "GRANT", "GROUP_CONCAT_SYM",
  "JSON_ARRAYAGG_SYM", "JSON_OBJECTAGG_SYM", "JSON_TABLE_SYM", "GROUP_SYM",
  "HAVING", "HOUR_MICROSECOND_SYM", "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM",
  "IF_SYM", "IGNORE_DOMAIN_IDS_SYM", "IGNORE_SYM", "IGNORED_SYM",
  "INDEX_SYM", "INFILE", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT", "IN_SYM", "INTERSECT_SYM", "INTERVAL_SYM", "INTO", "INT_SYM",
  "IS", "ITERATE_SYM", "JOIN_SYM", "KEYS", "KEY_SYM", "KILL_SYM",
  "LAG_SYM", "LEADING", "LEAD_SYM", "LEAVE_SYM", "LEFT", "LIKE", "LIMIT",
  "LINEAR_SYM", "LINES", "LOAD", "LOCALTIMESTAMP", "LOCATOR_SYM",
  "LOCK_SYM", "LONGBLOB", "LONG_SYM", "LONGTEXT", "LOOP_SYM",
  "LOW_PRIORITY", "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MATCH", "MAX_SYM",
  "MAXVALUE_SYM", "MEDIAN_SYM", "MEDIUMBLOB", "MEDIUMINT", "MEDIUMTEXT",
  "MIN_SYM", "MINUS_ORACLE_SYM", "MINUTE_MICROSECOND_SYM",
  "MINUTE_SECOND_SYM", "MODIFIES_SYM", "MOD_SYM", "NATURAL", "NEG",
  "NESTED_SYM", "NOT_SYM", "NO_WRITE_TO_BINLOG", "NOW_SYM",
  "NTH_VALUE_SYM", "NTILE_SYM", "NULL_SYM", "NUMERIC_SYM", "ON",
  "OPTIMIZE", "OPTIONALLY", "ORDER_SYM", "ORDINALITY_SYM", "OR_SYM",
  "OTHERS_ORACLE_SYM", "OUTER", "OUTFILE", "OUT_SYM", "OVER_SYM",
  "PACKAGE_ORACLE_SYM", "PAGE_CHECKSUM_SYM", "PARSE_VCOL_EXPR_SYM",
  "PARTITION_SYM", "PATH_SYM", "PERCENTILE_CONT_SYM",
  "PERCENTILE_DISC_SYM", "PERCENT_RANK_SYM", "PORTION_SYM", "POSITION_SYM",
  "PRECISION", "PRIMARY_SYM", "PROCEDURE_SYM", "PURGE", "RAISE_ORACLE_SYM",
  "RANGE_SYM", "RANK_SYM", "READS_SYM", "READ_SYM", "READ_WRITE_SYM",
  "REAL", "RECURSIVE_SYM", "REFERENCES", "REF_SYSTEM_ID_SYM", "REGEXP",
  "RELEASE_SYM", "RENAME", "REPEAT_SYM", "REQUIRE_SYM", "RESIGNAL_SYM",
  "RESTRICT", "RETURNING_SYM", "RETURN_MARIADB_SYM", "RETURN_ORACLE_SYM",
  "REVOKE", "RIGHT", "ROW_NUMBER_SYM", "ROWS_SYM", "ROWTYPE_ORACLE_SYM",
  "SECOND_MICROSECOND_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERVER_OPTIONS", "SET", "SHOW", "SIGNAL_SYM", "SMALLINT", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQL_BIG_RESULT", "SQLEXCEPTION_SYM", "SQL_SMALL_RESULT",
  "SQLSTATE_SYM", "SQL_SYM", "SQLWARNING_SYM", "SSL_SYM", "STARTING",
  "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STDDEV_SAMP_SYM", "STD_SYM", "STRAIGHT_JOIN",
  "SUM_SYM", "SYSDATE", "TABLE_REF_PRIORITY", "TABLE_SYM", "TERMINATED",
  "THEN_SYM", "TINYBLOB", "TINYINT", "TINYTEXT", "TO_SYM", "TRAILING",
  "TRIGGER_SYM", "TRUE_SYM", "UNDO_SYM", "UNION_SYM", "UNIQUE_SYM",
  "UNLOCK_SYM", "UNSIGNED", "UPDATE_SYM", "USAGE", "USE_SYM", "USING",
  "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM", "VALUES_IN_SYM",
  "VALUES_LESS_SYM", "VALUES", "VARBINARY", "VARCHAR", "VARIANCE_SYM",
  "VAR_SAMP_SYM", "VARYING", "VECTOR_SYM", "WHEN_SYM", "WHERE",
  "WHILE_SYM", "WITH", "XOR", "YEAR_MONTH_SYM", "ZEROFILL",
  "BODY_MARIADB_SYM", "ELSEIF_ORACLE_SYM", "ELSIF_MARIADB_SYM",
  "EXCEPTION_ORACLE_SYM", "GOTO_MARIADB_SYM", "NOCOPY_SYM",
  "OTHERS_MARIADB_SYM", "PACKAGE_MARIADB_SYM", "RAISE_MARIADB_SYM",
  "RECORD_SYM", "ROWTYPE_MARIADB_SYM", "ROWNUM_SYM", "REPLACE",
  "SUBSTRING", "TRIM", "ACCOUNT_SYM", "ACTION", "ADMIN_SYM", "ADDDATE_SYM",
  "AFTER_SYM", "AGAINST", "AGGREGATE_SYM", "ALGORITHM_SYM", "ALWAYS_SYM",
  "ANY_SYM", "ASCII_SYM", "AT_SYM", "ATOMIC_SYM", "AUTHORS_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AUTO_SYM", "AVG_ROW_LENGTH",
  "AVG_SYM", "BACKUP_SYM", "BEGIN_MARIADB_SYM", "BEGIN_ORACLE_SYM",
  "BINLOG_SYM", "BIT_SYM", "BLOCK_SYM", "BOOL_SYM", "BOOLEAN_SYM",
  "BTREE_SYM", "BYTE_SYM", "CACHE_SYM", "CASCADED", "CATALOG_NAME_SYM",
  "CHAIN_SYM", "CHANGED", "CHANNEL_SYM", "CHARSET", "CHECKPOINT_SYM",
  "CHECKSUM_SYM", "CIPHER_SYM", "CLASS_ORIGIN_SYM", "CLIENT_SYM",
  "CLOB_MARIADB_SYM", "CLOB_ORACLE_SYM", "CLOSE_SYM", "COALESCE",
  "CODE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_ADD_SYM",
  "COLUMN_CHECK_SYM", "COLUMN_CREATE_SYM", "COLUMN_DELETE_SYM",
  "COLUMN_GET_SYM", "COLUMN_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM",
  "COMMITTED_SYM", "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM",
  "COMPRESSED_SYM", "CONCURRENT", "CONNECTION_SYM", "CONSISTENT_SYM",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTRIBUTORS_SYM", "CPU_SYM", "CUBE_SYM",
  "CURRENT_SYM", "CURRENT_POS_SYM", "CURSOR_NAME_SYM", "CYCLE_SYM",
  "DATAFILE_SYM", "DATA_SYM", "DATETIME", "DATE_SYM", "DAY_SYM",
  "DEALLOCATE_SYM", "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM",
  "DES_KEY_FILE", "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM",
  "DISCARD", "DISK_SYM", "DO_SYM", "DUMPFILE", "DUPLICATE_SYM",
  "DYNAMIC_SYM", "ENABLE_SYM", "END", "ENDS_SYM", "ENGINES_SYM",
  "ENGINE_SYM", "ENUM", "ERROR_SYM", "ERRORS", "ESCAPE_SYM", "EVENTS_SYM",
  "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXAMINED_SYM", "EXCLUDE_SYM",
  "EXECUTE_SYM", "EXCEPTION_MARIADB_SYM", "EXIT_MARIADB_SYM",
  "EXIT_ORACLE_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "FAST_SYM", "FAULTS_SYM",
  "FEDERATED_SYM", "FILE_SYM", "FIRST_SYM", "FIXED_SYM", "FLUSH_SYM",
  "FOLLOWS_SYM", "FOLLOWING_SYM", "FORCE_SYM", "FORMAT_SYM", "FOUND_SYM",
  "FULL", "FUNCTION_SYM", "GENERAL", "GENERATED_SYM", "GET_FORMAT",
  "GET_SYM", "GLOBAL_SYM", "GRANTS", "HANDLER_SYM", "HARD_SYM", "HASH_SYM",
  "HELP_SYM", "HIGH_PRIORITY", "HISTORY_SYM", "HOST_SYM", "HOSTS_SYM",
  "HOUR_SYM", "ID_SYM", "IDENTIFIED_SYM", "IGNORE_SERVER_IDS_SYM",
  "IMMEDIATE_SYM", "IMPORT", "INCREMENT_SYM", "INDEXES",
  "INITIAL_SIZE_SYM", "INSERT_METHOD", "INSTALL_SYM", "INVOKER_SYM",
  "IO_SYM", "IPC_SYM", "ISOLATION", "ISOPEN_SYM", "ISSUER_SYM",
  "INVISIBLE_SYM", "JSON_SYM", "KEY_BLOCK_SIZE", "LANGUAGE_SYM",
  "LAST_SYM", "LAST_VALUE", "LASTVAL_SYM", "LEAVES", "LESS_SYM",
  "LEVEL_SYM", "LIST_SYM", "LOCAL_SYM", "LOCKED_SYM", "LOCKS_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "MASTER_CONNECT_RETRY_SYM",
  "MASTER_DELAY_SYM", "MASTER_GTID_POS_SYM", "MASTER_HOST_SYM",
  "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM", "MASTER_PASSWORD_SYM",
  "MASTER_PORT_SYM", "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM", "MASTER_SSL_CIPHER_SYM",
  "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM", "MASTER_SSL_KEY_SYM",
  "MASTER_SSL_SYM", "MASTER_SYM", "MASTER_USER_SYM", "MASTER_USE_GTID_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MASTER_DEMOTE_TO_SLAVE_SYM",
  "MAX_CONNECTIONS_PER_HOUR", "MAX_QUERIES_PER_HOUR", "MAX_ROWS",
  "MAX_SIZE_SYM", "MAX_UPDATES_PER_HOUR", "MAX_STATEMENT_TIME_SYM",
  "MAX_USER_CONNECTIONS_SYM", "MEDIUM_SYM", "MEMORY_SYM", "MERGE_SYM",
  "MESSAGE_TEXT_SYM", "MICROSECOND_SYM", "MIGRATE_SYM", "MINUTE_SYM",
  "MINVALUE_SYM", "MIN_ROWS", "MODE_SYM", "MODIFY_SYM", "MONITOR_SYM",
  "MONTH_SYM", "MUTEX_SYM", "MYSQL_SYM", "MYSQL_ERRNO_SYM", "NAMES_SYM",
  "NAME_SYM", "NATIONAL_SYM", "NCHAR_SYM", "NEVER_SYM", "NEXT_SYM",
  "NEXTVAL_SYM", "NOCACHE_SYM", "NOCYCLE_SYM", "NODEGROUP_SYM", "NONE_SYM",
  "NOTFOUND_SYM", "NO_SYM", "NOMAXVALUE_SYM", "NOMINVALUE_SYM",
  "NO_WAIT_SYM", "NOWAIT_SYM", "NUMBER_MARIADB_SYM", "NUMBER_ORACLE_SYM",
  "NVARCHAR_SYM", "OF_SYM", "OFFSET_SYM", "OLD_PASSWORD_SYM", "ONE_SYM",
  "ONLY_SYM", "ONLINE_SYM", "OPEN_SYM", "OPTIONS_SYM", "OPTION",
  "OVERLAPS_SYM", "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARSER_SYM",
  "PARTIAL", "PARTITIONS_SYM", "PARTITIONING_SYM", "PASSWORD_SYM",
  "PERIOD_SYM", "PERSISTENT_SYM", "PHASE_SYM", "PLUGINS_SYM", "PLUGIN_SYM",
  "PORT_SYM", "PRECEDES_SYM", "PRECEDING_SYM", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PREVIOUS_SYM", "PRIVILEGES", "PROCESS",
  "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "QUARTER_SYM", "QUERY_SYM", "QUICK", "RAW_MARIADB_SYM", "RAW_ORACLE_SYM",
  "READ_ONLY_SYM", "REBUILD_SYM", "RECOVER_SYM", "REDOFILE_SYM",
  "REDO_BUFFER_SIZE_SYM", "REDUNDANT_SYM", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELOAD",
  "REMOVE_SYM", "REORGANIZE_SYM", "REPAIR", "REPEATABLE_SYM", "REPLAY_SYM",
  "REPLICATION", "RESET_SYM", "RESTART_SYM", "RESOURCES", "RESTORE_SYM",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "REUSE_SYM",
  "REVERSE_SYM", "ROLE_SYM", "ROLLBACK_SYM", "ROLLUP_SYM", "ROUTINE_SYM",
  "ROWCOUNT_SYM", "ROW_SYM", "ROW_COUNT_SYM", "ROW_FORMAT_SYM",
  "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM", "SCHEMA_NAME_SYM",
  "SECOND_SYM", "SECURITY_SYM", "SEQUENCE_SYM", "SERIALIZABLE_SYM",
  "SERIAL_SYM", "SESSION_SYM", "SESSION_USER_SYM", "SERVER_SYM",
  "SETVAL_SYM", "SHARE_SYM", "SHUTDOWN", "SIGNED_SYM", "SIMPLE_SYM",
  "SKIP_SYM", "SLAVE", "SLAVES", "SLAVE_POS_SYM", "SLOW", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SOFT_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM",
  "SQL_AFTER_GTIDS_SYM", "SQL_BEFORE_GTIDS_SYM", "SQL_BUFFER_RESULT",
  "SQL_CACHE_SYM", "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_THREAD",
  "STAGE_SYM", "STARTS_SYM", "START_SYM", "STATEMENT_SYM", "STATUS_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUPER_SYM", "SUSPEND_SYM", "SWAPS_SYM",
  "SWITCHES_SYM", "SYSTEM", "SYSTEM_TIME_SYM", "TABLES", "TABLESPACE",
  "TABLE_CHECKSUM_SYM", "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM",
  "TEXT_SYM", "THAN_SYM", "TIES_SYM", "TIMESTAMP", "TIMESTAMP_ADD",
  "TIMESTAMP_DIFF", "TIME_SYM", "TRANSACTION_SYM", "TRANSACTIONAL_SYM",
  "THREADS_SYM", "TRIGGERS_SYM", "TRIM_ORACLE", "TRUNCATE_SYM", "TYPE_SYM",
  "UDF_RETURNS_SYM", "UNBOUNDED_SYM", "UNCOMMITTED_SYM", "UNDEFINED_SYM",
  "UNDOFILE_SYM", "UNDO_BUFFER_SIZE_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNKNOWN_SYM", "UNTIL_SYM", "UPGRADE_SYM", "USER_SYM", "USE_FRM",
  "VALIDATION_SYM", "VALUE_SYM", "VARCHAR2_MARIADB_SYM",
  "VARCHAR2_ORACLE_SYM", "VARIABLES", "VERSIONING_SYM", "VIA_SYM",
  "VIEW_SYM", "VISIBLE_SYM", "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS",
  "WEEK_SYM", "WEIGHT_STRING_SYM", "WINDOW_SYM", "WITHIN", "WITHOUT",
  "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM", "X509_SYM", "XA_SYM", "XML_SYM",
  "YEAR_SYM", "CONDITIONLESS_JOIN", "ON_SYM", "PREC_BELOW_NOT", "'='",
  "'>'", "'<'", "'|'", "'&'", "'-'", "'+'", "'*'", "'/'", "'%'", "'^'",
  "'~'", "SUBQUERY_AS_EXPR", "PREC_BELOW_IDENTIFIER_OPT_SPECIAL_CASE",
  "USER", "PREC_BELOW_SP_OBJECT_TYPE", "PREC_BELOW_CONTRACTION_TOKEN2",
  "'('", "')'", "EMPTY_FROM_CLAUSE", "','", "'!'", "'{'", "'}'", "';'",
  "'.'", "':'", "$accept", "query", "$@1", "opt_end_of_input",
  "directly_executable_statement", "verb_clause", "deallocate",
  "deallocate_or_drop", "prepare", "$@2", "execute", "$@3", "$@4",
  "execute_using", "$@5", "execute_params", "help", "$@6", "change", "$@7",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "do_domain_id_list", "do_domain_id", "ignore_domain_id_list",
  "ignore_domain_id", "master_file_def", "optional_connection_name",
  "connection_name", "optional_for_channel", "for_channel", "create",
  "$@8", "$@9", "$@10", "$@11", "$@12", "$@13", "$@14", "$@15", "$@16",
  "$@17", "$@18", "$@19", "$@20", "$@21", "$@22", "$@23", "$@24",
  "opt_sequence", "sequence_defs", "sequence_def", "force_lookahead",
  "server_def", "$@25", "server_options_list", "server_option",
  "event_tail", "$@26", "ev_schedule_time", "$@27", "opt_ev_status",
  "ev_starts", "ev_ends", "opt_ev_on_completion", "ev_on_completion",
  "opt_ev_comment", "ev_sql_stmt", "$@28", "clear_privileges",
  "opt_aggregate", "sp_handler", "sp_handler_package_spec",
  "sp_handler_package_body", "drop_routine", "sp_name", "sp_a_chistics",
  "sp_c_chistics", "sp_chistic", "sp_c_chistic", "sp_suid", "call", "$@29",
  "$@30", "$@31", "opt_sp_cparam_list", "$@32", "opt_sp_cparams",
  "sp_cparams", "sp_fdparam_list", "$@33", "sp_fdparams",
  "sp_fdparams_no_default", "sp_param_name",
  "sp_param_name_and_mode_init_vars", "sp_pdparam_list", "sp_pdparams",
  "sp_parameter_type", "sp_parenthesized_pdparam_list", "$@34",
  "sp_param_default", "sp_param", "sp_parenthesized_fdparam_list",
  "sp_proc_stmts", "sp_proc_stmts1", "optionally_qualified_column_ident",
  "row_field_definition", "row_field_definition_list", "row_type_body",
  "sp_decl_idents_init_vars", "sp_decl_variable_list", "$@35",
  "sp_decl_handler", "$@36", "opt_parenthesized_cursor_formal_parameters",
  "sp_cursor_stmt_lex", "sp_cursor_stmt", "$@37", "sp_handler_type",
  "sp_hcond_list", "sp_hcond_element", "sp_cond", "sqlstate", "opt_value",
  "sp_hcond", "raise_stmt_oracle", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "$@38", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_ident", "sp_decl_idents", "sp_proc_stmt_if", "$@39",
  "sp_proc_stmt_statement", "$@40", "RETURN_ALLMODES_SYM",
  "sp_proc_stmt_return", "$@41", "sp_proc_stmt_exit_oracle", "$@42",
  "$@43", "sp_proc_stmt_continue_oracle", "$@44", "$@45",
  "sp_proc_stmt_leave", "sp_proc_stmt_iterate", "sp_proc_stmt_goto_oracle",
  "expr_lex", "@46", "assignment_source_lex", "assignment_source_expr",
  "$@47", "for_loop_bound_expr", "$@48", "cursor_actual_parameters",
  "opt_parenthesized_cursor_actual_parameters", "sp_proc_stmt_with_cursor",
  "sp_proc_stmt_open", "sp_proc_stmt_fetch_head", "sp_proc_stmt_fetch",
  "sp_proc_stmt_close", "sp_fetch_list", "sp_if", "$@49", "$@50",
  "sp_elseifs", "case_stmt_specification", "$@51", "case_stmt_body",
  "$@52", "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@53", "searched_when_clause", "$@54",
  "else_clause_opt", "sp_opt_label", "opt_sp_for_loop_direction",
  "sp_for_loop_index_and_bounds", "sp_for_loop_bounds", "loop_body",
  "repeat_body", "pop_sp_loop_label", "sp_labeled_control", "$@55", "$@56",
  "$@57", "$@58", "$@59", "$@60", "sp_unlabeled_control", "$@61", "$@62",
  "$@63", "$@64", "$@65", "trg_action_time", "trg_event", "create_body",
  "$@66", "create_like", "opt_create_select",
  "create_select_query_expression", "opt_create_partitioning",
  "opt_partitioning", "partitioning", "$@67", "have_partitioning",
  "partition_entry", "$@68", "partition", "$@69", "part_type_def", "$@70",
  "$@71", "$@72", "opt_linear", "opt_key_algo", "part_field_list",
  "part_field_item_list", "part_field_item", "part_column_list",
  "part_func", "sub_part_func", "opt_num_parts", "opt_sub_part", "$@73",
  "$@74", "sub_part_field_list", "sub_part_field_item", "part_func_expr",
  "opt_num_subparts", "part_defs", "part_def_list", "opt_partition",
  "part_definition", "$@75", "part_name", "opt_part_values", "$@76",
  "$@77", "part_func_max", "part_values_in", "part_value_list",
  "part_value_item", "$@78", "$@79", "part_value_item_list",
  "part_value_expr_item", "opt_sub_partition", "sub_part_list",
  "sub_part_definition", "$@80", "sub_name", "opt_part_options",
  "part_option_list", "part_option", "opt_subpart_options",
  "subpart_option_list", "server_part_option", "opt_versioning_rotation",
  "$@81", "opt_versioning_interval_start", "opt_vers_auto_part", "opt_as",
  "opt_create_database_options", "create_database_options",
  "create_database_option", "opt_if_not_exists_table_element",
  "opt_if_not_exists", "create_or_replace", "opt_create_table_options",
  "create_table_options_space_separated", "create_table_options",
  "create_table_option", "$@82", "engine_defined_option", "ident_options",
  "keyword_options", "opt_versioning_option", "versioning_option",
  "default_charset", "default_collation", "storage_engines",
  "known_storage_engines", "row_types", "merge_insert_types", "udf_type",
  "create_field_list", "create_field_list_parens", "field_list",
  "field_list_item", "column_def", "key_def", "$@83", "$@84", "$@85",
  "$@86", "$@87", "$@88", "$@89", "constraint_def",
  "period_for_system_time", "period_for_application_time",
  "opt_check_constraint", "check_constraint", "opt_constraint_no_id",
  "opt_constraint", "constraint", "field_spec", "@90",
  "field_type_or_serial", "$@91", "$@92", "opt_serial_attribute",
  "opt_serial_attribute_list", "opt_asrow_attribute",
  "opt_asrow_attribute_list", "field_def", "$@93", "opt_generated_always",
  "vcol_opt_specifier", "vcol_opt_attribute", "vcol_opt_attribute_list",
  "vcol_attribute", "parse_vcol_expr", "$@94", "parenthesized_expr",
  "virtual_column_func", "expr_or_literal", "column_default_expr",
  "field_type", "qualified_field_type", "udt_name",
  "field_type_all_builtin", "field_type_all", "field_type_all_with_record",
  "field_type_numeric", "opt_binary_and_compression", "field_type_string",
  "field_type_temporal", "field_type_lob", "field_type_misc", "char",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "srid_option",
  "float_options", "precision", "field_options", "last_field_options",
  "field_length_str", "field_length", "field_scale", "opt_field_length",
  "opt_field_scale", "opt_precision", "attribute_list", "attribute",
  "opt_compression_method", "opt_compressed", "opt_enable", "compressed",
  "asrow_attribute", "serial_attribute", "with_or_without_system",
  "charset", "charset_name", "charset_name_or_default",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name",
  "collation_name_or_default", "opt_default", "charset_or_alias",
  "opt_binary", "binary", "opt_bin_mod", "ws_nweights", "$@95",
  "ws_level_flag_desc", "ws_level_flag_reverse", "ws_level_flags",
  "ws_level_number", "ws_level_list_item", "ws_level_list",
  "ws_level_range", "ws_level_list_or_range", "opt_ws_levels",
  "opt_primary", "references", "opt_ref_list", "ref_list",
  "opt_match_clause", "opt_on_update_delete", "delete_option",
  "constraint_key_type", "key_or_index", "opt_key_or_index",
  "keys_or_index", "fulltext", "spatial_or_vector", "normal_key_options",
  "fulltext_key_options", "spatial_key_options", "normal_key_opts",
  "spatial_key_opts", "fulltext_key_opts", "opt_USING_key_algorithm",
  "opt_key_algorithm_clause", "key_using_alg", "all_key_opt",
  "normal_key_opt", "spatial_key_opt", "fulltext_key_opt",
  "btree_or_rtree", "ignorability", "key_list", "opt_without_overlaps",
  "key_part", "key_part_simple", "opt_ident", "string_list", "alter",
  "$@96", "$@97", "$@98", "$@99", "$@100", "$@101", "$@102", "$@103",
  "$@104", "$@105", "$@106", "$@107", "$@108", "account_locking_option",
  "opt_password_expire_option",
  "opt_account_locking_and_opt_password_expiration",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "alter_commands", "$@109", "$@110", "$@111", "$@112",
  "remove_partitioning", "all_or_alt_part_name_list", "add_partition_rule",
  "$@113", "add_part_extra", "reorg_partition_rule", "$@114",
  "reorg_parts_rule", "$@115", "alt_part_name_list", "alt_part_name_item",
  "alter_list", "add_column", "alter_list_item", "opt_without_validation",
  "opt_index_lock_algorithm", "alter_algorithm_option",
  "alter_lock_option", "opt_column", "opt_ignore", "alter_options",
  "$@116", "alter_options_part2", "alter_option_list", "alter_option",
  "opt_restrict", "opt_place", "opt_to", "slave", "$@117", "$@118",
  "start", "opt_start_transaction_option_list",
  "start_transaction_option_list", "start_transaction_option",
  "slave_thread_opts", "$@119", "slave_thread_opt_list",
  "slave_thread_opt", "slave_until", "slave_until_opts", "checksum",
  "$@120", "opt_checksum_type", "repair_table_or_view", "$@121", "repair",
  "$@122", "opt_mi_repair_type", "mi_repair_types", "mi_repair_type",
  "opt_view_repair_type", "analyze", "$@123", "analyze_table_list",
  "analyze_table_elem_spec", "opt_persistent_stat_clause",
  "persistent_stat_spec", "persistent_column_stat_spec", "$@124",
  "persistent_index_stat_spec", "$@125", "table_column_list",
  "table_index_list", "table_index_name", "binlog_base64_event",
  "check_view_or_table", "$@126", "check", "$@127", "opt_mi_check_type",
  "mi_check_types", "mi_check_type", "opt_view_check_type", "optimize",
  "$@128", "opt_no_write_to_binlog", "rename", "$@129", "rename_list",
  "table_to_table_list", "table_to_table", "keycache", "$@130",
  "keycache_list_or_parts", "keycache_list", "assign_to_keycache",
  "assign_to_keycache_parts", "key_cache_name", "preload", "$@131",
  "preload_list_or_parts", "preload_list", "preload_keys",
  "preload_keys_parts", "adm_partition", "$@132", "cache_keys_spec",
  "$@133", "cache_key_list_or_empty", "opt_ignore_leaves", "select",
  "$@134", "$@135", "select_into", "$@136", "$@137", "simple_table",
  "table_value_constructor", "$@138", "query_specification_start", "$@139",
  "$@140", "query_specification", "select_into_query_specification",
  "query_expression", "query_expression_no_with_clause",
  "query_expression_body_ext", "$@141", "$@142",
  "query_expression_body_ext_parens", "query_expression_body", "$@143",
  "query_primary", "query_simple", "subselect", "subquery",
  "opt_from_clause", "from_clause", "table_reference_list",
  "select_options", "opt_history_unit", "history_point",
  "for_portion_of_time_clause", "opt_for_portion_of_time_clause",
  "opt_for_system_time_clause", "system_time_expr", "select_option_list",
  "select_option", "select_lock_type", "opt_select_lock_type",
  "opt_lock_wait_timeout_new", "select_item_list", "select_item",
  "remember_tok_start", "remember_name", "remember_end",
  "remember_cpp_ptr", "remember_start_opt", "remember_end_opt",
  "remember_lex", "select_alias", "opt_default_time_precision",
  "opt_time_precision", "optional_braces", "search_condition", "expr",
  "boolean_test", "predicate", "bit_expr", "or", "and", "not", "not2",
  "comp_op", "all_or_any", "opt_dyncol_type", "dyncol_type",
  "numeric_dyncol_type", "temporal_dyncol_type", "string_dyncol_type",
  "dyncall_create_element", "dyncall_create_list", "plsql_cursor_attr",
  "explicit_cursor_attr", "trim_operands", "trim_operands_regular",
  "trim_operands_special", "column_default_non_parenthesized_expr",
  "primary_expr", "string_factor_expr", "simple_expr",
  "mysql_concatenation_expr", "function_call_keyword_timestamp",
  "function_call_keyword", "substring_operands",
  "substring_operands_regular", "substring_operands_special",
  "function_call_nonkeyword", "function_call_conflict",
  "function_call_generic", "@144", "fulltext_options",
  "opt_natural_language_mode", "opt_query_expansion", "opt_udf_expr_list",
  "udf_expr_list", "udf_expr", "sum_expr", "$@145", "$@146", "$@147",
  "$@148", "$@149", "window_func_expr", "window_func",
  "simple_window_func", "inverse_distribution_function",
  "percentile_function", "$@150", "inverse_distribution_function_def",
  "order_by_single_element_list", "window_name", "variable", "$@151",
  "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "opt_glimit_clause", "glimit_clause",
  "glimit_options", "in_sum_expr", "$@152", "cast_type",
  "cast_type_numeric", "cast_type_temporal", "opt_expr_list", "expr_list",
  "ident_list_arg", "ident_list", "when_list", "when_list_opt_else",
  "table_ref", "json_text_literal", "join_table_list",
  "json_table_columns_clause", "json_table_columns_list",
  "json_table_column", "$@153", "$@154", "json_table_column_type",
  "json_table_field_type", "json_opt_on_empty_or_error",
  "json_default_literal", "json_on_response", "json_on_error_response",
  "json_on_empty_response", "table_function", "$@155", "$@156",
  "esc_table_ref", "derived_table_list", "join_table", "$@157", "$@158",
  "$@159", "$@160", "$@161", "$@162", "inner_join", "normal_join",
  "opt_use_partition", "use_partition", "table_factor",
  "table_primary_ident_opt_parens", "table_primary_derived_opt_parens",
  "table_reference_list_parens", "nested_table_reference_list",
  "join_table_parens", "table_primary_ident", "derived_column_list",
  "table_primary_derived", "opt_outer", "index_hint_clause",
  "index_hint_type", "index_hint_definition", "$@163", "$@164",
  "index_hints_list", "opt_index_hints_list", "$@165",
  "opt_key_definition", "$@166", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "interval", "interval_time_stamp",
  "date_time_type", "table_alias", "opt_table_alias_clause",
  "table_alias_clause", "opt_all", "opt_where_clause", "$@167",
  "opt_having_clause", "$@168", "opt_group_clause", "group_list",
  "olap_opt", "opt_window_clause", "window_def_list", "window_def",
  "window_spec", "$@169", "opt_window_ref", "opt_window_partition_clause",
  "opt_window_order_clause", "opt_window_frame_clause",
  "window_frame_units", "window_frame_extent", "window_frame_start",
  "window_frame_bound", "opt_window_frame_exclusion", "alter_order_clause",
  "alter_order_list", "alter_order_item", "opt_order_clause",
  "order_clause", "$@170", "order_list", "order_dir", "opt_limit_clause",
  "limit_clause", "fetch_first_clause", "first_or_next", "row_or_rows",
  "only_or_with_ties", "opt_global_limit_clause", "limit_options",
  "limit_option", "limit_rows_option", "delete_limit_clause",
  "order_limit_lock", "opt_order_limit_lock", "query_expression_tail",
  "opt_query_expression_tail", "opt_procedure_or_into",
  "opt_order_or_limit", "order_or_limit", "opt_plus", "int_num",
  "ulong_num", "real_ulong_num", "sequence_value_num",
  "sequence_value_hybrid_num", "sequence_truncated_value_hybrid_num",
  "ulonglong_num", "real_ulonglong_num", "dec_num_error", "dec_num",
  "choice", "bool", "procedure_clause", "$@171", "procedure_list",
  "procedure_list2", "procedure_item", "select_var_list_init", "$@172",
  "select_var_list", "select_var_ident", "select_outvar", "into",
  "into_destination", "$@173", "$@174", "do", "$@175", "drop", "$@176",
  "$@177", "$@178", "$@179", "table_list", "table_name",
  "table_name_with_opt_use_partition", "table_alias_ref_list",
  "table_alias_ref", "opt_if_exists_table_element", "opt_if_exists",
  "opt_temporary", "insert", "$@180", "$@181", "replace", "$@182", "$@183",
  "insert_start", "stmt_end", "insert_lock_option", "replace_lock_option",
  "insert_replace_option", "opt_into", "insert_table", "$@184",
  "insert_field_spec", "$@185", "insert_field_list", "opt_fields",
  "fields", "insert_values", "values_list", "ident_eq_list",
  "ident_eq_value", "equal", "opt_equal", "opt_with", "opt_by",
  "no_braces", "$@186", "no_braces_with_names", "$@187", "opt_values",
  "opt_values_with_names", "values", "values_with_names", "expr_or_ignore",
  "expr_or_ignore_or_default", "opt_insert_update", "$@188", "$@189",
  "update_table_list", "update", "$@190", "$@191", "$@192", "update_list",
  "update_elem", "insert_update_list", "insert_update_elem",
  "opt_low_priority", "delete", "$@193", "opt_delete_system_time",
  "delete_part2", "$@194", "delete_single_table",
  "delete_single_table_for_period", "single_multi", "$@195", "$@196",
  "$@197", "$@198", "$@199", "opt_returning", "$@200", "opt_wild",
  "opt_delete_options", "opt_delete_option", "truncate", "$@201", "$@202",
  "opt_table_sym", "opt_profile_defs", "profile_defs", "profile_def",
  "opt_profile_args", "show", "$@203", "show_param", "$@204", "$@205",
  "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "from_or_in", "binlog_in", "binlog_from", "wild_and_where",
  "describe", "$@206", "$@207", "explainable_command", "describe_command",
  "analyze_stmt_command", "opt_extended_describe", "opt_format_json",
  "opt_describe_column", "explain_for_connection", "flush", "$@208",
  "flush_options", "$@209", "opt_flush_lock", "flush_lock", "$@210",
  "flush_options_list", "flush_option", "opt_table_list", "backup",
  "backup_statements", "$@211", "opt_delete_gtid_domain",
  "delete_domain_id_list", "delete_domain_id",
  "optional_flush_tables_arguments", "reset", "$@212", "reset_options",
  "reset_option", "$@213", "$@214", "slave_reset_options",
  "master_reset_options", "purge", "$@215", "kill", "$@216", "kill_type",
  "kill_option", "opt_connection", "kill_expr", "shutdown", "$@217",
  "shutdown_option", "use", "load", "$@218", "$@219", "$@220", "$@221",
  "data_or_xml", "opt_local", "load_data_lock", "opt_duplicate",
  "opt_field_term", "field_term_list", "field_term", "opt_line_term",
  "line_term_list", "line_term", "opt_xml_rows_identified_by",
  "opt_ignore_lines", "lines_or_rows", "opt_field_or_var_spec",
  "fields_or_vars", "field_or_var", "opt_load_data_set_spec",
  "load_data_set_list", "load_data_set_elem", "text_literal",
  "text_string", "hex_or_bin_String", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "with_clause", "$@222",
  "opt_recursive", "with_list", "with_column_list", "with_list_element",
  "opt_cycle", "$@223", "opt_column_name_list", "ident_sys_alloc",
  "comma_separated_ident_list", "with_element_head", "insert_ident",
  "table_wild", "select_sublist_qualified_asterisk", "order_ident",
  "simple_ident", "simple_ident_nospvar", "field_ident", "table_ident",
  "table_ident_opt_wild", "table_ident_nodb", "IDENT_cli", "ident_cli",
  "IDENT_sys", "ident_cli_func", "ident_func", "TEXT_STRING_sys",
  "TEXT_STRING_literal", "TEXT_STRING_filesystem", "ident_table_alias",
  "ident_cli_set_usual_case", "ident_sysvar_name", "ident", "label_ident",
  "ident_or_text", "user_maybe_role", "user_or_role", "user",
  "keyword_table_alias", "keyword_ident", "keyword_sysvar_name",
  "keyword_set_usual_case", "non_reserved_keyword_udt",
  "keyword_sp_var_not_label", "keyword_sp_head", "keyword_verb_clause",
  "keyword_set_special_case", "keyword_sysvar_type", "keyword_data_type",
  "keyword_cast_type", "keyword_func_sp_var_and_label",
  "keyword_func_sp_var_not_label", "keyword_sp_var_and_label",
  "reserved_keyword_udt_not_param_type", "set", "$@224", "set_param",
  "$@225", "$@226", "$@227", "set_stmt_option_list",
  "start_option_value_list_following_option_type", "$@228",
  "option_value_list", "option_value", "$@229", "option_type",
  "opt_var_type", "opt_var_ident_type", "set_stmt_option", "$@230",
  "$@231", "$@232", "option_value_following_option_type", "$@233", "$@234",
  "$@235", "option_value_no_option_type", "$@236", "$@237", "$@238",
  "$@239", "$@240", "$@241", "$@242", "$@243", "$@244", "$@245",
  "transaction_characteristics", "transaction_access_mode",
  "isolation_level", "transaction_access_mode_types", "isolation_types",
  "text_or_password", "set_expr_or_default", "set_expr_misc", "lock",
  "$@246", "opt_lock_wait_timeout", "table_or_tables", "table_lock_list",
  "table_lock", "lock_option", "unlock", "$@247", "handler", "$@248",
  "handler_tail", "$@249", "handler_read_or_scan", "handler_scan_function",
  "handler_rkey_function", "$@250", "handler_rkey_mode", "revoke",
  "revoke_command", "admin_option_for_role", "grant", "grant_command",
  "opt_with_admin", "opt_with_admin_option", "role_list", "current_role",
  "role_name", "grant_role", "opt_table", "grant_privileges",
  "opt_privileges", "object_privilege_list", "column_list_privilege",
  "column_privilege", "object_privilege", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "grant_list",
  "user_and_role_list", "via_or_with", "using_or_as", "grant_user",
  "auth_expression", "auth_token", "opt_auth_str", "opt_require_clause",
  "resource_option", "resource_option_list", "opt_resource_options",
  "opt_grant_options", "opt_grant_option", "grant_option_list",
  "grant_option", "begin_stmt_mariadb", "$@251", "compound_statement",
  "opt_not", "opt_work", "opt_chain", "opt_release", "commit", "rollback",
  "savepoint", "release", "unit_type_decl", "union_option",
  "query_expression_option", "definer_opt", "no_definer", "definer",
  "view_algorithm", "opt_view_suid", "view_suid", "view_list_opt",
  "view_list", "view_select", "$@252", "view_check_option",
  "trigger_action_order", "trigger_follows_precedes_clause",
  "opt_on_update_cols", "on_update_cols", "trigger_tail", "$@253", "$@254",
  "$@255", "$@256", "$@257", "create_package_chistic",
  "create_package_chistics", "opt_create_package_chistics",
  "opt_create_package_chistics_init", "$@258", "xa", "opt_format_xid",
  "xid", "begin_or_start", "opt_join_or_resume", "opt_one_phase",
  "opt_suspend", "$@259", "opt_migrate", "install", "uninstall",
  "keep_gcc_happy", "_empty", "statement", "sp_statement",
  "sp_if_then_statements", "sp_case_then_statements", "sp_tail_is",
  "sp_package_function_body", "sp_package_procedure_body",
  "opt_trailing_sp_name", "opt_package_routine_end_name", "sf_parameters",
  "sp_parameters", "sf_returned_type_clause", "$@260", "sf_return_type",
  "package_implementation_item_declaration",
  "package_implementation_declare_section_list",
  "package_implementation_declare_section",
  "package_implementation_executable_section",
  "reserved_keyword_udt_param_type", "reserved_keyword_udt",
  "keyword_sp_block_section", "keyword_label", "keyword_sp_decl",
  "opt_truncate_table_storage_clause", "ident_for_loop_index",
  "row_field_name", "while_body", "$@261", "for_loop_statements",
  "sp_label", "sp_control_label", "sp_block_label", "sp_opt_default",
  "sp_decl_variable_list_anchored", "sp_param_name_and_mode",
  "sp_param_init_vars", "sp_param_anchored",
  "sf_c_chistics_and_body_standalone", "$@262", "sp_tail_standalone",
  "$@263", "$@264", "sp_decls", "sp_decl", "sp_decl_body", "$@265",
  "sp_proc_stmt_in_returns_clause", "sp_proc_stmt",
  "sp_proc_stmt_compound_ok", "sp_labeled_block", "$@266",
  "sp_unlabeled_block", "$@267", "sp_unlabeled_block_not_atomic", "$@268",
  "package_implementation_declare_section_list1",
  "package_implementation_declare_section_list2",
  "package_specification_function", "$@269",
  "package_specification_procedure", "$@270",
  "package_implementation_routine_definition",
  "package_implementation_function_body", "$@271",
  "package_implementation_procedure_body", "$@272",
  "opt_package_specification_element_list",
  "package_specification_element_list", "package_specification_element",
  "create_routine", "$@273", "$@274", "$@275", "$@276", "$@277", "$@278", YY_NULLPTR
};

static const char *
yysymbol_name (yysymbol_kind_t yysymbol)
{
  return yytname[yysymbol];
}
#endif

#define YYPACT_NINF (-5682)

#define yypact_value_is_default(Yyn) \
  ((Yyn) == YYPACT_NINF)

#define YYTABLE_NINF (-3751)

#define yytable_value_is_error(Yyn) \
  0

/* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
   STATE-NUM.  */
static const int yypact[] =
{
    7908, -5682, -5682,  3343,  1144, 95317, -5682,   723, -5682,  1073,
   -5682, -5682, -5682,  3794, -5682, -5682, -5682, -5682, -5682,   199,
     125, -5682,  1171, -5682, -5682,   334, 81835,   692,    59, -5682,
   84831, -5682, -5682, -5682, -5682, 84831, -5682, -5682, 95317, -5682,
   -5682,  1624, -5682,   507,  1945,  2231,  1336,   125,  1338, -5682,
   -5682, 96066,  1171,  1662, -5682, -5682,    15, 95317,  1171, -5682,
    1338, 95317, -5682,   427,   275, -5682,  1530,  3115,   429,  2139,
    2105, -5682, -5682,  1601, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3899,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,   500, -5682, -5682,
   -5682, -5682,  4161,  1889, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, 45762, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682,   429, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, 96815, 95317,  1489,  1498,
   95317,  2175, 82584,  2175, -5682,   128, -5682, -5682,  1917, -5682,
    1638, -5682,   125,  1217, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  1565,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  2119,  2426,   536,  2131,  1167,  2175, -5682,  2419,
   -5682,  2175,  2172,  2175, -5682,  2175,  2175, -5682,  2175,  2175,
    2175, -5682, -5682,   882, 95317, 69102, -5682, -5682,  1178,  2393,
   -5682, -5682, -5682, -5682, -5682, -5682,110767,   125, 23611,  2451,
   -5682, -5682,  2085,  4283,  1877, -5682,  2389, -5682, -5682, 95317,
   -5682,  2175,110767, -5682,  2389, 69851,  3388, 50267,  7995,  2389,
     125,  2462, -5682,  1872, -5682, -5682, -5682, -5682, -5682, -5682,
   95317, -5682, -5682, -5682,  2325,  1338, 82584, -5682, -5682, -5682,
   -5682, -5682,  2626, 23611,   213,  2412, -5682, -5682,  2272, 46511,
   82584,  2565,  2426,  2589, -5682,  1488,  1369, -5682,  1992,  2087,
    2426,   348,  2101,  2426,  2498,  2175,  2175, -5682, -5682,  3207,
    3207,  3207,  2337,  3207, -5682,  3207,  2708,  2056,   339, -5682,
   -5682,  2062, 95317,  2565, -5682,  2565, -5682,  2720, -5682,  2565,
    2565,  2184,  2729,  2737,   166,  2676,  1427,  1427,  1917, 41268,
    1448,  2596, -5682,  2708,  1371,  2041,   547,   547,   547,  1371,
     429,  1371, -5682,  2931,  1638,  2503, 95317, -5682,  2797, -5682,
    2103, -5682, -5682,   391, -5682,  2178, -5682,  2136,  1391, 71349,
   -5682,  2827, -5682, -5682, -5682, -5682, -5682, -5682,  2673,   226,
    2318,  2554,  2233, -5682,  2749, 82584, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, 95317,  2234, -5682, -5682, -5682,  2913,
    2119, -5682,  2747, -5682, -5682, -5682, -5682, 46511, -5682, -5682,
   -5682,  2911, -5682, -5682, 85580,   582, 95317,  2963, -5682, 95317,
   -5682, 95317, -5682, 82584, -5682, -5682, 95317,  2175,  2175, -5682,
   -5682,  2899,  2491,  2459,  2211,  2329,  2646, -5682,  2541, -5682,
    2373,  2461,  2584,  2387,  2392,  2439,   338, -5682,  2397, -5682,
    1074,  2856,    76,   162,  2871,   215,   250,  3005,  2881,   285,
    1071,   311,  2666,   349, -5682, -5682, -5682, -5682,  2936,  3021,
    2441, -5682,  2443, -5682,  2956,  2820,  1262, -5682, -5682,  1122,
    2880,  1511, 46511,112921, 83333,114357, -5682,114357,114357, -5682,
     249, -5682,  1945, 95317,113639, -5682, 95317,105741, -5682,  9608,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, 95317,
   -5682, -5682, -5682, -5682, -5682,  2458, -5682, -5682, -5682, -5682,
   -5682,  2906,  2152,  2910, -5682,  2473, -5682, -5682, -5682, -5682,
   -5682, 86329, -5682,   201,   225,  3394, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, 29811,  2490,  2494,
    2499, 18961,  2506,  2520,  2521,  2529,  2532,  2329,  2329,  2329,
    2535,  2542,  2579,  2592,  2595,  2598,  2621, -5682,  2662,  2677,
    2679,  2697,  2701,  2704, 24386,  2713,  2717,  2718,  2535, 37511,
    2723,  2727,  2730,  2735, 23611,  2535,  2742,  2743, -5682,  2759,
    2764,  2771,  2779,  2780,  2789,  2815,  2839,  3314,  2846,  2858,
    2860,  2866, -5682,  2329,  2535,  2535,  2877,  2883,  2891,  2898,
    2900,  2902,  2903,  2905,  2914,  2916,  2918,  2930,  2935,  2937,
    2938,   244,  2939,  2940,  2941,  2946,  2949,  2951,  2955,  2593,
    2964,  2965,  2970,  2608,  2973,  2974,  2975,  2982,  2987,   246,
    2992,  2993,   263,  2996,  3001,  3006,  3007,  3008,  3010,  3017,
   30586, 31361, 29811, 16636, -5682, 95317, 97564, -5682, -5682,  3304,
     440,  1595,  2052, 29811, -5682, -5682, -5682,  3361, -5682,  3426,
   -5682, -5682, -5682, -5682,  3308,  3346, -5682,  3375, -5682, -5682,
    3396,  2876, -5682,  3588, -5682, -5682, -5682, -5682, -5682,  2863,
   -5682,  3018,  3653,  3654,  3024,  3025, -5682, -5682,  1545, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  2882,  2904, -5682,  3588, -5682, -5682, 76592, -5682,
  111485, -5682, -5682,  2491,  3099,  3495, -5682,  3573, -5682,  3516,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  3388, -5682, -5682, 51787,  3476,   -76, -5682, -5682,
     262, -5682,   315,   351, 63859, -5682,   251, 64608,   367, 87078,
     269, -5682, 72098, -5682,   395, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682,  2980, -5682,  3073,  3287,  3028,
    3301,  1665, -5682, -5682,   233,    63,  3081,    97, -5682,    12,
   -5682,  1665, -5682, 77341,   411,   508, -5682,   843, -5682,  3655,
   -5682, -5682,  3090,  3110,  3111, -5682,  2989, -5682,  2426, -5682,
     711, -5682,   411,  1665,   508, -5682,  3310,  3399,   894,  3287,
   -5682,   -92, -5682, -5682, -5682,  3686, -5682,  3045, -5682,  3411,
   -5682, 95317,  1304, 46511, -5682, -5682, -5682,  3048, 46511, 46511,
    1394,   512,  3304,  3051, 23611, -5682, -5682,  4540, -5682,  3258,
     359,   646, -5682, -5682,  1945, 95317, -5682, -5682,   847, -5682,
    3482, -5682,  3057, -5682, 98313,   512,  3722, -5682, -5682, -5682,
    1308,  3456, -5682,  3065, -5682, -5682, -5682, -5682, 46511, 95317,
    2426, -5682, -5682, -5682, -5682,  3067, -5682, -5682,  3276,  3154,
   -5682,  3100, -5682, -5682,   192, -5682, -5682,  3863, -5682, 95317,
   -5682,  2565, -5682, -5682,  2565, -5682, -5682, -5682,  2565,  2565,
    2565, -5682, -5682,  2565,  2565,  3121, -5682,  3407,  3409,  2749,
   -5682,  3089, 40519, 95317,  3868, -5682,  3537, -5682, -5682, -5682,
    3107, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3662,
    3879,  3879, -5682, 52547, -5682, -5682,  3775,  2596,  1296,  3617,
   55587,  3766,  3853, 57867, -5682,   411, -5682, -5682, -5682, -5682,
    2112, 95317, -5682,  2112,  2112, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,   429, -5682, -5682,
    1217,  3522, 72847, 95317,  1371,  2041, -5682, -5682, -5682,  2426,
    1176,  3508, -5682, 95317, -5682, -5682, -5682,  2329,  3921, -5682,
   -5682, -5682, -5682, -5682, 46511,  3336, 71349,  2175, -5682, -5682,
   -5682,   226, -5682,  1642, 95317, 46511,  3174, -5682, 46511,  3135,
   -5682, -5682, -5682,  3619, 23611,110767,  3502, -5682, -5682, 46511,
    1123, -5682, -5682, 46511,  3882, 46511,  3146, -5682,  3811,  2596,
   -5682, -5682,  3148, -5682, -5682,  3825, 95317, -5682, -5682, 78090,
   -5682, 76592, 46511,  3156, -5682, -5682,  3529,  3309, -5682, -5682,
   -5682, -5682, -5682, -5682,  3248, -5682, -5682,  3177, -5682, -5682,
   -5682, -5682,  3630, -5682,  3318, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, 76592, -5682, -5682,  3634,  3640, -5682, 71349,  1873,
    7323, 97564, -5682,  3839, -5682, -5682, -5682,  3686, -5682, -5682,
   25161, -5682, 25936, -5682, -5682, -5682,  3472,   478,  1095, -5682,
   -5682,  3668, 95317,  3421,  3860,  3835, -5682, -5682, -5682, -5682,
   -5682, -5682,  3679,  3205,  3818,  3203, -5682, -5682, -5682,  3208,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, 46511, 53307,
   -5682, -5682, -5682,  3204, -5682, -5682, -5682,  3215, 29811, 29811,
   -5682,  3961,  3961,  3961, 23611,  3033,   437,  3581, 23611, 23611,
   23611,  2176,  3226, -5682, -5682, -5682,   260, -5682, 23611, 23611,
   38266,  3227,   303,  5146, 23611,  3911,  3911, -5682, 23611, 23611,
   16636,  5482, 23611, 23611, 23611, -5682, 97564, 38266,  3682,  3232,
   -5682,  3233,  2191, 23611,  2319, 23611, -5682, -5682, 23611, 23611,
   23611, 23611,  3241, 32136,  3245, 23611, 23611,  3247,  3385,  3961,
    3961,  2338,   288, -5682, -5682, -5682,  3961,  3961,  3250, 23611,
   23611, 17411, 23611, 23611,  2356, 23611, 23611, 23611, 23611, 23611,
   23611, -5682, 23611, 23611,   918, 23611, 23611, 46511, 23611, 23611,
    3914, 46511, 23611, 23611,  3915, 23611, 23611,  3257, 46511, 23611,
   -5682, 23611,  2427,  2427, -5682, 23611, 17411, 23611,  3260, 39021,
   23611, 23611, 23611, 24386, -5682, 24386, -5682, -5682,  3261,  3457,
     406,   429, 23611,  3259, -5682, -5682, -5682, -5682, 23611, 23611,
   23611, 32136, -5682, -5682, -5682,   515, -5682, -5682, -5682, 26711,
   32136,  3270, 32136, 32136,  3894,  2025, 32136, 32136, 32136, 32136,
   32136, 32136, 32136, 32911, 33686, 32136, 32136, 32136, 32136, -5682,
   82584, 29811, 49507,  3272,  3927, -5682, 78839, -5682,  1671,   396,
   -5682,  2426,  4283, 35236, -5682,  3273, -5682,  3777, 46511,  3274,
    3277,  3940, 76592, 71349,  1873,  3291, -5682,  1370,   337, -5682,
   78090, 95317, -5682, -5682, -5682,  3997, 23611, -5682, -5682, -5682,
   -5682, -5682,  3284,   410,  3281, -5682,   358, -5682, -5682, -5682,
   -5682, -5682, 95317, -5682, 87827, 51027,  3378,  3954,  3305,  2565,
   88576, 95317, 46511, 95317, 99062, 95317, 95317, 46511, 82584, 76592,
   46511, -5682, -5682, -5682,   911,  1665, 95317,  1665,   508,   960,
    1665,  3937, -5682, -5682,  1571,  1571, -5682, -5682, -5682, -5682,
   -5682, -5682,  1665, 95317, 95317,  1665, 71349, -5682,   508,  1674,
   -5682,  3596,  3383, -5682, -5682, -5682,  3638, -5682, -5682,  3968,
    3312, -5682,  3657, -5682,  3410, -5682, -5682, 46511, -5682, -5682,
     508, -5682,   508,   508,  3977,  1665,  1665,  1665, -5682, 42017,
    3317,  3322, -5682,  3323, -5682,  3325, -5682,  3962, -5682, -5682,
   -5682,  4112,  3966,  3328, -5682, -5682,  3902,   877, -5682,  3755,
   -5682,  3886, -5682, 23611,  3304, 19736,  3618, -5682, -5682,  3621,
    3622,  3624,  3438, -5682, -5682, -5682, -5682,  3764,  3625, -5682,
    3445,  2426,  3628, -5682, -5682, -5682,  3340, -5682, -5682, -5682,
   54067,   245, -5682, -5682,  4024,  3466, 23611, -5682, -5682, 46511,
    3862, -5682,  2426,  1488, 95317, -5682, -5682,  4104, -5682,  1788,
    4027, -5682, -5682,  3477,   348, -5682,  4027,  1246, -5682, -5682,
    3207,  3556, -5682, -5682, -5682, 82584, -5682, -5682, -5682, -5682,
   -5682, -5682, 95317, -5682, 78090, 71349, 82584,  2565,  2565, -5682,
   46511, -5682, -5682, -5682, 95317, 95317,  2565,  2565,  2565,  3406,
   -5682,  3056,  3369,  3371,  3381,  3386,  1880,  3387, 42766,  2446,
     209,  4006,  4009, -5682,  3971,  2279,  3971, -5682, -5682, 42766,
   42017,  3389,  3868, -5682, -5682, -5682, -5682, 82584,  3395, -5682,
   -5682,  3391, -5682, 23611,  4114,  4048,  3775, -5682, -5682, 56347,
    1267, 86329, -5682, -5682, -5682,  3745,  3942,  1127, -5682,  3401,
    3523, -5682,   216, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, 23611, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
     337,   196, -5682, -5682, -5682,  1486,  3778,  2997, -5682, -5682,
   82584,  2997, -5682,  3413,  3715, -5682,  3718,   145, -5682, 46511,
   -5682, -5682, -5682, -5682, -5682, 46511,  3412, -5682,  3605, 95317,
    2234, 23611,  3922, -5682,  3619, -5682,  3304,105023, -5682,  4139,
    5540,   154,  3467, -5682, -5682, -5682, -5682, -5682, 46511, -5682,
   -5682,  1271,   253,  3503, -5682,  3146,   490, 95317,  4086,  3993,
   -5682, -5682,  4011, 59365, -5682, -5682,  4015,  3429, -5682, -5682,
    3441,   175, 95317, 46511, 46511,110767, -5682, -5682,  3447, -5682,
   -5682, -5682, -5682,  3945, -5682, -5682,   292, -5682, 43515, 43515,
    1074,  2856, -5682, -5682,  2871, -5682, -5682,  2881, -5682,  1071,
   -5682,  2666, -5682, -5682, -5682, -5682,  2048, -5682,110767, -5682,
    3962, 23611, 48758,  3304, -5682, -5682, 46511, -5682,  4092, -5682,
   -5682,102058,   405, -5682, -5682,   295, 46511, -5682, -5682, -5682,
    4090,  3592, 95317, -5682, -5682,  4151, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, 95317, 95317,110767,110767, -5682, -5682,  1096,
    1370, -5682,  4209, 97564, 23611, -5682,  3464, -5682,  3465,  3492,
    3014,  3821, 23611, 23611, -5682,  3564,   516,   299, -5682,  3493,
    3478, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3494,
   -5682, -5682,   416,   535,  3496, -5682, -5682, -5682,  3497,   429,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    4127, -5682,   476, -5682, -5682, -5682, 23611,   589,   827,   940,
    3513,   318,   431,   943,  3204,  2063,  3504, 38266, 97564,  3961,
    3505,  1455,  3961,  3510,  1325,  1476,  1863,  1897,  2004, -5682,
     397, -5682,  1521,  1550, -5682, -5682,  3514,  3515,  3961,  3519,
   -5682,  3520,  3521,  3525, -5682,  1574,   354,  3526, -5682, -5682,
   20511, 21286, 22061,  3169,  3528, -5682, -5682,  1615,  2406,  3961,
    3531,  2457,  1686,  1736, -5682,  2107,  1803,  1804,  3533,  3051,
    2539,  2570, -5682, -5682, -5682, -5682,  3500,  2599,  2601,  3511,
    3536,  2629,  2640, 46511,  3539,  3544,  2641, 46511,  1807,  2644,
   -5682,  3527,  1870,   488,  3543,  3545,  2668,  3548,  1913, -5682,
   97564, 95317,  3549,  3509,   314,  3550,  2669,  5482,  5482, -5682,
   23611,  3551,   276, 97564,  2415,   510, -5682,  1595, -5682, -5682,
   -5682, -5682,   605, -5682,  3524,  1595,  3554,  1996, 16636, -5682,
    1190,  1945, 32136, 32136,  3559, 32136, 32136,  1245,   319,   319,
    3512,  3512,   356,   380, 24386,  1245, 24386,  1245,  3512,  3512,
    3512, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  4126,
    3560,  3566,  3568,  3574,  1775,  3563, -5682, -5682, -5682, -5682,
   -5682, -5682,    50,  3984, -5682,  3772,   320, 23611, -5682,  3600,
    4346,  4347,  4349, -5682, -5682, -5682, -5682, 76592, 76592,  3590,
   -5682,  1246,  3952,  4255, 78090,  4260, -5682,  3599, 43515, 43515,
   -5682,  3601, -5682, 23611,  3595,  3598,  3602, 99811, -5682,  4268,
     337, 73596,  3304, 76592,   611, -5682, 95317, 95317, -5682, 87078,
    4269,  1422,  3889, -5682,  3608,  3613, -5682,   337, -5682,  3610,
    1064,   423, -5682,  3616,  3620, -5682, -5682, -5682, -5682, 23611,
    3623, 95317, 95317, -5682, -5682, -5682, -5682, 95317, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682,  2426, 23611, 95317,  1665, -5682,
   -5682, -5682,  1665, 95317,  1665, -5682,  2426,  4281, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  1665, -5682,
   -5682, -5682, -5682, -5682,  3793,   411,  2989,  3937,  4027,   508,
   46511,  1665,  1665, 23611, -5682, -5682, -5682, -5682,  4156,  3662,
   19736,  3627,  3629, -5682, -5682,110767, 95317, 97564,  4366, -5682,
   -5682, -5682,  4151, 82584, 89325, 46511, -5682, -5682, -5682,  2334,
   -5682, -5682, -5682, -5682, -5682,  3304,  2412,  2592, -5682,  3636,
    3304, -5682, -5682,  4321, -5682, -5682, -5682, -5682, -5682,  2426,
   -5682, -5682, -5682,  4230, -5682, 46511, 82584, 35236, -5682,  3639,
   -5682,  3669, -5682, -5682,100560, -5682,  2426,  3304, 46511,  1538,
     295, -5682,  4378, -5682, -5682,  3758, -5682, -5682, -5682,  3648,
   -5682,  4072, -5682, -5682, -5682, -5682, -5682, -5682,  3656, -5682,
    4317, -5682,  1354,   161, 95317,   393,   145, -5682, 95317, 95317,
   46511, -5682, 95317,  2565, -5682, -5682,  2565, -5682, -5682, 46511,
   95317, 95317,  2565, 23611, 42766, -5682, -5682, -5682, -5682, -5682,
   42766, -5682,  2258, -5682,  3870,  1036,  1036, -5682,  3325, -5682,
   -5682, -5682,  4290,  3971,  3971, 42766,  4295,  4496, -5682, 95317,
    6499,  1312, -5682, 52547, 95317, -5682,  3304, 23611, -5682,  3697,
    4048, -5682,  1205,  1286,   216, -5682,  3946,   295, -5682, -5682,
   57867,  4016, 57867, 57867, 97564,  3903, 23611, -5682,  4337,  3675,
    3304,  1354,  2426, -5682,   337,   337,  3905,  4195,  4202,  3807,
    2426,  4203,  4205,  4206, -5682, -5682, -5682, -5682, -5682,  3692,
    2562,   238,  1700, 71349,  4164,  1246,  4279,  3696, -5682, 46511,
    4358, -5682, -5682, -5682,  3702,  3701,  3304,110767, -5682, -5682,
   -5682, -5682,  3723,  3724,  3726,  3727,  3728,  3729,  3731,  3732,
    3734,  3735,  3742,  3743,  3749,  3752,  3753,  3756,  3757,  3759,
    3760,  3761,  3768,  3770,  3771,  3773,  3779,   210, -5682, -5682,
    3785, -5682, -5682, -5682, -5682, -5682,  1036, -5682,  4235, 59365,
   -5682, 42017,  3957,  4381, -5682, -5682,  3750, 46511, 78090, 76592,
   -5682, -5682, -5682, -5682,  3763,  1096,106459, -5682, -5682,  4517,
   71349,  4215, -5682,  3762, -5682,  3767,  4267,  4276, -5682, 97564,
  104305, -5682, -5682,  3304, -5682, -5682,  3765, -5682, -5682,  3902,
    3879, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  3802,  4057,  4173, -5682,
   -5682, -5682,  2816, -5682, -5682, -5682, -5682, -5682, -5682,  4417,
   79588,107177,  3783, -5682, -5682, -5682, -5682,  2116, -5682, -5682,
  114357,114357,114357,  4151, -5682,102807, 23611, -5682,  1981, -5682,
   23611, -5682, -5682, 23611, -5682,  3304,  3471,115096, 80337, -5682,
   80337,115096, 23611, -5682,  3787, -5682,  4419,  4426, -5682, -5682,
   -5682, 23611, -5682, 23611, 23611,  2090, 23611, 23611, 23611, 23611,
   -5682, 23611, -5682, 23611, 23611, -5682, 32136, -5682,  3784,  3797,
   -5682, -5682,  3799, -5682, 23611, 23611, -5682, -5682, -5682, 23611,
   23611, 23611, -5682, -5682,  3800, -5682, -5682, -5682, -5682, 23611,
   23611, 23611, -5682, 23611,  4256, 23611,  4308, 23611,  4310, 23611,
   -5682, 27486, -5682,  3803, -5682, -5682, 23611, 23611, -5682, 23611,
   23611, 23611, -5682, -5682, -5682, 23611, -5682,  4369, 23611, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, 23611, -5682,  1783,
   28261, -5682, 23611, 23611, 23611, -5682, -5682, 23611,  3795,  3804,
   -5682, 95317,  2432,  3116,   295,  3809, -5682, -5682,  3822,  3826,
    3051, -5682, -5682, -5682, -5682, -5682, -5682, -5682,   303, 32136,
     509, 32136,  1945,  3252, 16636, -5682,  1461,  1945,  5482,  5482,
   95317,  4539,  3816, -5682, 23611, 23611, 17411, 23611, 97564, 23611,
    3819,  3820, -5682,  3827, 32136, -5682, -5682,  3829, -5682,  2362,
    3116,  3916,  4277, -5682,  3304, 35236,  4330, -5682, 46511,  4333,
    4367,  4034, -5682, 76592, 71349,  4500,  4502, -5682,  3304, -5682,
    3828, -5682, -5682, -5682,  3836, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,   428, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, 76592, -5682, -5682, -5682, -5682, -5682,   337,
   -5682,  3845,  3847, -5682, 18186, -5682,   337,   337, -5682, -5682,
    8929, -5682, -5682,   892,  4140,  4405, -5682, -5682, 95317,   358,
   95317, -5682, 51027, 51027, 90074,  3304,   815, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3865, -5682,
   -5682, -5682,  4609, -5682, -5682,  4281, -5682,  2596,   508, -5682,
   -5682,  3304, 39021,   567, -5682, -5682, -5682, 19736,107895, -5682,
    2142,  3857, -5682, 46511,108613, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682,  3858, -5682, -5682, 19736,  3876,
   -5682,  4027, -5682,  3763,   479, -5682, -5682, 54827, 54827,  1710,
     204,   242,  2296,  2596, -5682, -5682,   278, -5682, -5682, -5682,
   -5682, -5682, -5682,  1360, -5682, -5682,  4027, -5682,  1788,  2426,
    3912, -5682,   295,  4102, -5682, -5682,  1354,  1331,  1331,  4449,
     161,  4319, -5682,  4164,  4532,  4455,  4456, -5682,  3692, -5682,
   -5682, -5682, 95317, -5682,   293, -5682, -5682, -5682,   -98, -5682,
   46511,  2110,  3537,  3537, -5682,  1036,   266, -5682, 32136,  4613,
   -5682,  4377, -5682, -5682, 42766,  4509,  4510, -5682, 42766, -5682,
   -5682,  2174, -5682, -5682, 74345, -5682, -5682, -5682,  3304,   247,
    1743, 23611, 95317, -5682,  3697,  3951, -5682, -5682,  1286, -5682,
   -5682, -5682, -5682, 57867, -5682, -5682, -5682,  1267,  3884,  1743,
    1296,  3887, -5682, -5682, 73596, 74345, -5682,  4261,  4273,  1713,
   -5682, -5682, -5682, -5682,  2197,   337,   337, -5682,   281,   337,
   -5682, -5682,  1002, -5682, -5682,  1659,   289,  3692, -5682,  2426,
    2426,  2426,  2426,   252,  2426,  2426,  2179, -5682,  2426,   491,
   -5682, -5682, 82584, -5682,  4648,  4649, -5682,  4656, -5682, -5682,
     750, -5682,  2885,   900, -5682,   832, -5682,  4440, 95317,  4636,
    3696, -5682,   439,  2234, -5682, 23611, -5682,  4407,  3906,  3908,
     295,  3913,   295,   295,  2426,  2426,  3865,  2426,   295,  2426,
    2426,  2426,  2426,  2426,  2426,  2426,   295,  2426,  1356,  3016,
     279,  2426,   295,  5540, -5682, -5682,  3662,  1216, -5682, -5682,
   42017,   499,  2596, -5682, 57107,  4447,  3926, -5682,  1246, -5682,
   -5682,  1815,  4572, -5682,  3923, -5682, -5682,   424,  4121,  3935,
   60114, 71349, 71349, -5682,  2671, -5682, 46511, -5682,  4571, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, 66106, -5682, -5682,
    4242,  2440,  3941, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3931, -5682, -5682,
   -5682, -5682, -5682,  3529, -5682, -5682, -5682, -5682, -5682,109331,
    3938,  3304, 23611,  3304,  3304, 23611, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3929, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3929,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  3943, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682,  3948, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682,  4638, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,  4582, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3929, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682,  3929, -5682,  3929, -5682,  4583,  3929,  3929,
   -5682,  3959, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  3964,  3965,  3967,  3051,
   -5682, 23611, 23611,  2670,   229,   229, 23611,  2134,  2224,   554,
   -5682,  2706,  2740,  2772,   493, 97564, -5682, -5682,  2773,  2822,
    2847,  2861,  2867, -5682,  2304,  3920,  2341,  3304, 23611,  3304,
   23611,  3304, 23611,  3304, 24386,  2887, -5682,  2182,  3781, -5682,
    2185,  4320,  2888,  2889,  2220,  2788,  3054,  2228, 24386,  2894,
    2909,  2347,  2379,  2947, 97564, 95317,  3944,  3955,  3955,   374,
   -5682,  3972, -5682, -5682, -5682,  3973, -5682, 23611, 23611,  3970,
    1595, -5682, 23611,  1945, 32136,   822, 32136, -5682, -5682,  4126,
   -5682, 23611, -5682,  4543,  3979,  4393,  3981,  3983,  3169,  3988,
    3992,  3994,  3969,  3304, -5682, -5682, 95317,  3995,  2052, -5682,
    3865, -5682,  4629, -5682,  4701,  4001,  4014,  4003,  3829, -5682,
   76592, -5682, 46511, -5682,  4664,  3441, -5682, 71349, 71349, -5682,
   84082, -5682, 58616, 95317, 95317, -5682, 23611, -5682, -5682,   611,
    4762,  4767, -5682, 29811,  2592, -5682,  3304, -5682, -5682, -5682,
   -5682, -5682,   928,  4566, -5682, -5682, -5682, -5682, -5682,   337,
   -5682,   337, -5682,  3620, -5682, -5682, -5682, -5682,  3271, -5682,
     411, -5682, -5682, -5682,  1665,  4010, -5682,   337,   480, -5682,
   19736,  4018,  4012, -5682,  4487, -5682,   303,   214, -5682,  3662,
   -5682,  4017, 90823, -5682,  4021, -5682, -5682,  4579, -5682, -5682,
    4042,  4023, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,   411,
    4077,  4259, -5682, -5682, -5682, -5682, -5682,  4076, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, 46511,  4616,
   71349,   900,  4411, 46511, 46511,  9743, 10413,  3692,  4037, 95317,
   -5682, -5682,  2426, -5682, -5682,   293, -5682, -5682,  3696,  4039,
    1182,  4039, -5682, -5682, -5682, -5682,  2052,  1036,  1036,  3893,
    4528, 42766, 42766,  4622,  4529, 23611,  4043, -5682, 95317, -5682,
   -5682,  4450, -5682, -5682, 23611, -5682, -5682, -5682, -5682, -5682,
    4780,  4044, -5682, -5682, -5682, -5682, -5682, -5682, 23611, -5682,
   56347, 23611,  4045,  4046, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  1080,  2109,  2137, -5682,
   -5682,  2137,  2109, -5682, -5682, -5682, -5682,  1783,  1783, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    2562, -5682, -5682,  4805,  1516, -5682,  4630, -5682, -5682, -5682,
   -5682,    82,   295,   295,   295,  3016,  2164, -5682,  2885,  1927,
    4388, -5682,  6814,  1945,  1729,  4553,  2135, -5682,  2260, -5682,
    4790, -5682,   181, -5682, -5682,  3304,110767,   205,   273, -5682,
     282, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    1350,  2596,   652, 95317,  4401,  4593, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, 23611, -5682,  4715, -5682, -5682, -5682, -5682,
     145,   145, -5682,110767, -5682, -5682,   214, -5682, -5682,  4571,
    4343, -5682,  1590,  3929,  3929,   257, -5682,  3943,  4627,  3943,
   -5682,  4458,  3212,  3103,  4458,  3103,  3943, -5682,  4067,  4458,
    3103,  3929, -5682,  3929, -5682, -5682,  3103,  3929, -5682,  4070,
    3943,  4458,   443,  2315,  3943, -5682,  3929,  -120,  3929,  3929,
    3929,  4282,  3929,  3929,  3943, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,    70,  3929,  3929,  3929,  3929,  3948,  4734,  4736,
   -5682, 95317, -5682, 23611, -5682, -5682,114357, 95317,   554,  3304,
    2836, -5682, -5682, -5682,   556,  3294, -5682, -5682, -5682,  4834,
   -5682, -5682,  3929, -5682,   556, -5682, -5682, -5682, -5682, -5682,
   -5682,   556, -5682, -5682, -5682, -5682,  4078,  5482,  5482, -5682,
    4800,  4617,  4705,  2957, 23611, 23611, -5682, 23611, -5682, -5682,
   -5682,  1513,  4088,  4562, -5682, -5682, -5682, -5682, -5682, -5682,
   23611, 23611, 23611,  3304,  3304,  3304,  5482, -5682, -5682,  3695,
   -5682, -5682,115096, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682,   279,  5482, -5682, -5682, 23611, 23611, -5682,
   -5682, -5682, 95317,  3116,  4091,  4371, -5682, -5682, -5682,  3116,
    4234, -5682, -5682,  3116,   295, -5682, -5682, -5682,  2288,  1595,
   -5682, 23611,  1945,  4675,  4093,  4818,  4097, -5682, -5682, -5682,
   -5682, -5682, -5682, 23611, 84082, -5682,  4098,  4100, -5682, -5682,
   -5682,  4542, 23611,  4727,  4676, -5682,  3116, 95317, -5682, -5682,
   -5682, 71349,  3599,  3599, 91572, -5682, -5682, -5682, -5682,  1787,
     337,   337, -5682,  3304, -5682, -5682,  4108,  4110, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,   411, -5682, 39021,  2596,
   22836, -5682, -5682, -5682, 19736, -5682,  4113, 39021,  4594, -5682,
   -5682, -5682,  4447,   195, -5682, -5682, 92321, -5682,  4120, -5682,
    4123, -5682,  1732,  4460,  4738,  4845, 54827,  4128, -5682, -5682,
   -5682,  4144,  4146,  4150, -5682,  4132, -5682, 46511, -5682, -5682,
    4162, -5682, -5682, 39770,  4761,  4183,  4511, 46511,   337,   337,
     337,   337,   337,   337,   337,   337,   337,   337,  4513,   337,
     337,   337,   337,   337,   337,   337,   337, -5682,   337,   337,
     883, 95317,   337,   337, -5682, -5682, -5682,  4719, -5682,  6664,
   -5682,   337, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  1349,  4735,  1170, -5682, -5682,   362,  4885,  4152, -5682,
    4298, -5682, -5682, -5682, -5682,  4264,  4298,  3696,  2555, -5682,
   -5682, -5682,  4640, -5682, -5682, -5682,  4647,  3304, 95317, -5682,
   -5682,  2084,  4778,  1743,  4166, 95317,  1743,  1286,   216,  3304,
   -5682, -5682,  4631,  4661, -5682, -5682,  3380,  3451, -5682,  3125,
    2845, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,   513, -5682, 82584, -5682, -5682, -5682, -5682, -5682,  4922,
    4928, -5682, -5682, -5682, -5682,  4362,   650,  4650,  1344,  4743,
    4575,  4746,  2096,  3126,   337,  4747,  4901, -5682,   777,   337,
    4750,  4810,  4263,  4812,  4754, -5682,  4265,  4575,  4755,  4384,
    4763,  4764,  4766, -5682, -5682, 10413, -5682, -5682, -5682, -5682,
     470, 44264, -5682, -5682, -5682, -5682, -5682,  4379, 23611, 23611,
    4781, 95317,  4783, -5682,  4600, -5682, 95317, -5682,   303, -5682,
   -5682, -5682,  4505, -5682,  2320, -5682, -5682,  2331, -5682, -5682,
    2354, -5682, -5682, -5682,  2334, -5682,  2334, -5682,  1350,   652,
   -5682, -5682,  4863, -5682,  4555,  3291, -5682,   303,  3304,  4408,
    4683,  4683, -5682, -5682, -5682,  4797, -5682, -5682, -5682, -5682,
    4848, -5682,  4458,   337,  4458, -5682, -5682,  1080, -5682,  1080,
   -5682,   464,  3476, 75094,  4458, -5682, -5682, -5682, -5682,  4693,
    3103,   556, 80337,  2361, -5682, -5682, -5682, -5682,  1080,  3207,
   -5682, -5682,  4458, -5682, -5682, -5682,  3207,  1080, -5682,  4698,
   -5682, -5682, -5682,  1080,  4458,  4430, 95317,  4912,  3103, -5682,
   -5682,103556,  3103,  1080,  4775,  4912, -5682,   556,  4958,  3103,
    4458,  1080,  1080, -5682,   248,  4229, -5682,  3304,114357, -5682,
   -5682,  4233,  4237,  4238,  4239, -5682, -5682,  2382,  4227, -5682,
   -5682, -5682, -5682,  4240,  4241, 23611,  3207,  4705, 57867,  4244,
   -5682, -5682,  2958,  2405,  2399,  4521,  4471, -5682,  4414, -5682,
    2960,  3304,  3304,  -144,  3943, -5682, -5682, -5682, -5682,  4879,
    3929, -5682,  4965, -5682,  3929,   556, -5682, -5682, -5682, -5682,
   -5682,  4250,  2454,  1760,  2983,  2988, -5682, -5682, -5682,  4251,
   -5682, -5682,   474, -5682,  4252, -5682,  2465,  4976,  2156, 23611,
   -5682,  4253, -5682, -5682, 95317, -5682, -5682,  5482,  1210, -5682,
    2471, -5682, -5682, -5682,  4257,  3599, -5682, -5682, 60863, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  4027,
   -5682,  4011,  2592, -5682, -5682, -5682, -5682,  4637,  4262,  4266,
   -5682, -5682, -5682,  4270,   429, 39021, -5682, -5682, -5682,  4272,
    4274, -5682, -5682, -5682, 90823, -5682,  2544, -5682, -5682,  5002,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, 19736,  2426,  2426,  2426,
    2643,  4271, -5682, 82584,  4275,  4280, 47260,  1757, 95317,  2550,
   -5682, -5682, -5682, -5682, -5682,  1645, -5682,  1846,  2565,  2334,
    2334, -5682,  4278, 46511, -5682,   337, -5682,   304,   316,   317,
     335, -5682,  3865,   295,   295,  2426,  2426,   337,   295, 82584,
    1859,   295,  3865,  3865,   347,  2426,  3003,   304, -5682, -5682,
   -5682,   295,   304,   232, -5682, -5682,  8922, -5682, 70600, 10413,
   81086,  4284, -5682, -5682,  1677,  4395, -5682, -5682, -5682,  4624,
    1170, -5682,103556, -5682, -5682, -5682, -5682, -5682,   362,  1359,
   -5682, -5682, -5682,  4288, 81086, -5682, -5682,  2426, -5682,  5005,
    5033, -5682, -5682,  4685, 23611,  4285, 23611,  4292,  2560,  5013,
    5018,  4967,  5020,  2084, -5682,  2212, -5682, -5682, -5682, -5682,
   -5682, -5682,  1286, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    4301, -5682, -5682, -5682, -5682,  4644, -5682,  5056, -5682,  4760,
   45013,  2565, -5682,   559,  4348, -5682, -5682, -5682,  4957,  2963,
    2963,  1171,  2963, 92321, 95317, 46511,  1312,   456,  4939,  2175,
    1997,  4351,  4875,  2963,  2963, 93070,  1171, 39021, -5682, -5682,
   -5682,  2963, -5682,  2963, 46511, 93819,  1171, -5682, -5682, -5682,
   95317, -5682,  2963,  1171, -5682,  1171,  1171, 92321, -5682, 10220,
   -5682, -5682, 39770,  1771, -5682,  3304,  5482,  4709, -5682, -5682,
    4431,  2426,  4678, -5682, -5682,  4792, -5682, 95317,   183, -5682,
     295, -5682,   295, -5682,   295,  4982,  4982, -5682, -5682, -5682,
   32136, -5682,  3601, -5682, -5682,   429, -5682, -5682,  1520, -5682,
   -5682,  4682,  4447,  4829, -5682, -5682, 95317, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   75843, -5682,  2585, -5682, -5682,  2590, -5682, -5682, -5682, -5682,
  103556, -5682,  2606, -5682, 68353, -5682, -5682, -5682, -5682,  4912,
    4316, -5682, -5682,  4344, -5682, -5682, -5682, -5682, -5682, -5682,
    4958, -5682, -5682, 63110, -5682, -5682, -5682, 81086,  4987, -5682,
   -5682, -5682, -5682, -5682, -5682,  5086, -5682, -5682,  4327,  1743,
   -5682,  4331, -5682, -5682, -5682, -5682, 23611, -5682,  4568, -5682,
    4670, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  3865, -5682, -5682, -5682,  4334, -5682,   295, -5682, 23611,
   -5682, -5682,  4335,  3685,  1743, -5682, -5682,  4433,  4277,  4338,
   -5682,  4676, 95317, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    4381, -5682, -5682, -5682, 39021, 61612,  4339,  4341, -5682,   337,
   -5682, -5682, 95317, -5682, -5682,  3865,  4699, -5682,  2672, -5682,
   -5682, -5682, -5682, 95317,  4342,  4547, 95317, 95317, -5682, -5682,
    4350, 95317, -5682, -5682, -5682, 39770,  4352,  4969,  4977,  2334,
   -5682,  2565,  4902, 47260, -5682,  2565,  2565, 65357, 95317,  4354,
    2426, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    4353, -5682, -5682, -5682, -5682, -5682,  2426, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  5091, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  4719, -5682, -5682, -5682, -5682, 66855,  4357,  4360,
   95317, -5682, -5682, -5682,  4912, -5682, -5682, -5682,  5043,110767,
   -5682, -5682, -5682,  4569,  1729, 95317,  4359, 95317,  4361, -5682,
   -5682,  4363, -5682,  4359,  4361,110049, -5682, -5682,  1359, -5682,
   -5682, -5682,  4364, -5682, 67604,  4284, -5682, -5682, -5682, -5682,
   -5682,  4365,  4370, -5682, 95317,  3304, 95317, -5682,  3207,  3207,
    5087,  3207, -5682,  5095,  5096,  2212, -5682, -5682,  5131,   650,
    4749,  1927,  1945,  1171,  1945,  5038, -5682, -5682, 95317, 47260,
   92321, 47260, -5682,  4878, -5682, 74345, 47260,  2963, 95317, -5682,
    5041, -5682,  5009, 47260, 47260, -5682, -5682, 92321,  4380, -5682,
    1743,  2451, 95317, 47260, -5682, -5682, -5682,  3116,  4856, 47260,
   92321, -5682, 92321, -5682,  4725,  4886,  3875, -5682,  4386,  4382,
   95317, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  1165, -5682,
   -5682,  2683, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  2068,
   -5682, -5682, -5682, -5682,  1990, -5682,  4588, -5682,  1520, -5682,
   -5682, -5682, 46511, -5682, -5682, -5682, -5682,   556,  3207,   556,
    4912, -5682, 95317, -5682,  3943, -5682, -5682, 23611, -5682, 95317,
    5147, -5682, -5682, -5682, -5682, 48009, -5682, -5682, -5682,  4714,
   -5682,  2691, -5682, -5682, -5682,  4391, 23611, -5682, -5682,  3004,
   -5682, -5682,  4394, -5682,  4396,  3884, -5682,  4199,  4531,  4346,
    4347,  4349,  4581,  4744, -5682,  4585, -5682,  4247,  4542,  4399,
   32136, -5682, -5682,  1237, -5682, -5682, -5682, -5682, 97564, -5682,
   -5682,  4397, -5682, 39021, 19736, -5682, -5682,  4820, -5682,  2699,
    1743, -5682,  4404, 95317,  4406,  2711,  4409, -5682, 95317,  4412,
   -5682, 23611,  2565, -5682, -5682, 47260, 46511, -5682,  4895,  1555,
   47260, 47260,  4400,  1820,  4403,  4410,  1282,  1850,  4413,  4070,
    1887,    49,   443,    78,  1899,  4416,  1909,  4420,  1912,  1919,
    1928,  1963,  1964,  4422,  5132, -5682, -5682,  4425,  4427,  4428,
    4429,  4432,  4434,  4435,  4436,  4451, -5682, -5682, 46511, -5682,
   -5682,   195,   232,   671,  4623, -5682, -5682, 81086, -5682, -5682,
   -5682,  5202, 95317,  5006,  4781, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  4418, -5682,  4441, -5682, -5682, 81086,   962,  4635,
   -5682, -5682,112203, -5682, -5682, -5682,101309,  6596,  2750,  2754,
   -5682, -5682,  3207, -5682,  3207,  3207, -5682,  4437, -5682, -5682,
   -5682,  5107, -5682,  5109, -5682,  2002,   447, -5682, 47260,  1271,
    4961,  4964,  5180, -5682, 47260,  4274, 95317, -5682, -5682,  1815,
   -5682, 39021, -5682, -5682,  4968,  4970, -5682,  4973,  1771, -5682,
   95317, -5682, -5682, -5682,  4570, -5682,110767,  4672,  5189,  5191,
   -5682, 95317, 94568,  5199, -5682,  5200,  4479,  4481, -5682, 32136,
   -5682, -5682,  5110, -5682,  3662, -5682, -5682, -5682, -5682, -5682,
    4775,  3304,  4478, -5682, 63110, -5682, -5682, -5682, 81086, -5682,
   -5682,  1743, -5682, -5682, -5682,  1506, -5682,  5225,  1651, -5682,
   -5682,   240, -5682, -5682, -5682, -5682, 95317,  4488,  4576, -5682,
   -5682,  4560, -5682, -5682,  3433, -5682,    74, 62361, -5682, -5682,
   -5682,  1246, 95317, -5682,  5251,  4491,  2562,  1246,  1246,  4492,
   95317,  3030, 47260,  4895,  1625,  4499,  1331, -5682,  1331, -5682,
   -5682,  2994, 68353, -5682, -5682,  4013, 95317,  4506,  5271, -5682,
    4716, -5682, 95317, -5682, -5682, -5682, -5682,  4503, -5682,  2135,
   -5682,  4037,  4039, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    4717, -5682, 95317,  5202,  5079,  2767, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, 47260,  1189, -5682, -5682,  5156,
   -5682,  5203,  5204,  1771, -5682, 46511,  5083, 73596, -5682, -5682,
   -5682,  1171, -5682, 95317, 47260, 46511, -5682, -5682,  4274,  1360,
   23611,  4872,  5202, -5682,  4721,  4722, -5682, -5682,  2774, -5682,
   -5682, -5682, -5682, 90823, 90823,  2052,  5008, -5682, -5682, -5682,
   95317, -5682, -5682, -5682, -5682,  4199, -5682, -5682,  4658,  1879,
   -5682,  2775, -5682, -5682, -5682,  3116, -5682,  4524, -5682,  4891,
     337,   337,  4892,   337,   337,   337,   337,  4527,  3433, -5682,
   -5682, -5682,  4882, -5682, -5682, -5682,  3196,  1743,  4530, 95317,
    4533,  2796,  2792,   758, 95317,  4526, -5682, -5682, -5682,  1331,
   95317,  5137, -5682,  4536, -5682,  4537,  4538, -5682, -5682,  5160,
    2426, -5682,  4612, -5682, -5682,  2994, -5682, -5682, -5682,  4578,
    5168,  5127, -5682, 82584, 34461, -5682,  5034, -5682,  4989,  5231,
   -5682,  5280,  3436, -5682, -5682, -5682, -5682, -5682, -5682, 95317,
    4546, 95317, -5682,  4600, -5682, -5682,  4298,110767,112203, -5682,
   95317,  4551, -5682,  2555, -5682,101309,  8006,  5132,  3116,  4676,
   -5682, -5682, -5682, 34461, -5682,   167,  4676, -5682, -5682, -5682,
   -5682,   167,  5181, -5682,  3304, 23611, -5682, -5682, -5682, -5682,
   -5682, 94568,  4545,  2801, -5682,  1312, -5682, -5682, -5682, -5682,
   -5682, -5682, 95317, -5682,  4550, -5682, -5682,   142,   337,  2426,
    2426,   337,  3345,  3345,  3116, 82584,  4645, -5682, -5682,   337,
    1331,  2426,   337,  1331, -5682, -5682,  1449,  3196, -5682, -5682,
   -5682, -5682, -5682, -5682,  1627,  1246, -5682,  4757,  1449,  2792,
   -5682, -5682,  1449,   758, -5682, -5682,  4559, 95317,  4563,  4564,
   -5682,  2809, -5682,    66,  5152, 95317,  4573, 95317, 95317, -5682,
   -5682, -5682, -5682, -5682, -5682,  4927, -5682,  4574,  4577,  3016,
    3016, 16636, -5682, -5682, -5682, -5682, -5682, -5682,  5161, -5682,
    4618,  1121, -5682,  4580, 95317, -5682, 46511,  4938,  4284, -5682,
    5360, -5682,  5360, -5682,  4586, 95317, -5682, -5682,  5163, -5682,
   -5682, -5682, -5682, -5682,   468, -5682, -5682,  2810, -5682,  4625,
    4633, -5682,   167, -5682,  4587,  3304, -5682, -5682, -5682, 39021,
   -5682,  4576, -5682, -5682,  2813, -5682, 29036, -5682, -5682, -5682,
    2426, -5682, -5682,  2426, -5682, -5682, -5682, -5682, -5682,  2817,
   -5682, 82584, -5682, -5682,   295, -5682, -5682,  5194,  5031, -5682,
    4785,  3196,  2932, -5682, -5682, -5682, -5682, -5682,  4589, 95317,
   95317,  4591, -5682, 95317, -5682, -5682, -5682,  1608, -5682,  2831,
   95317,  2835,  4595, -5682, -5682, -5682, -5682,  4596,  4598, -5682,
     863, -5682, 95317,  4592,  5260, -5682,  4284, -5682, -5682, -5682,
   95317,  4597,  4685, -5682,  5170,  2555, -5682, -5682, -5682, -5682,
   -5682, -5682,  4676,  4599, -5682,   337,  5139, -5682, -5682,  4550,
   -5682,  4603, -5682,  2052, -5682, -5682, 82584, -5682,  4645, -5682,
   -5682, -5682, -5682, -5682, -5682,  1449, -5682, -5682,  2841,  4491,
   95317, -5682,  1143,  1143,  3196,  2850,  2792,   758, -5682,   328,
   -5682,  3463,  3463,  1428, -5682, 95317, -5682, -5682, -5682, 95317,
   -5682,  2555,  1242, -5682,  2853, 39021, 19736,  4911,  4450, -5682,
   29036,  4608,  3614, -5682, -5682, -5682,  4902,  4614,  4491, -5682,
   -5682,  2010,  5062,  5198,  5201, -5682,  3196, -5682, -5682, -5682,
    4619, -5682,  3463, -5682, -5682, -5682, -5682, -5682,  1482, -5682,
   -5682, -5682, -5682,  3414, -5682, -5682, -5682,  5205,  1242,  1242,
   -5682, -5682, -5682,  5341,  4778, -5682, -5682, -5682,  3614, -5682,
   -5682,  3196,  4621, -5682, -5682, -5682,  5114,  5306, -5682, -5682,
   -5682, -5682,  1482, -5682,  5300, -5682, -5682, -5682,  1088,  5209,
   -5682,  5210, -5682,  3207,  5272, -5682, -5682,  3196,  1143,  1143,
   -5682,  4768, -5682, -5682,  5301,  4980, -5682,  5392,  4639, -5682,
   -5682, -5682, -5682,  1979, 35996,  5173,  1654, -5682, -5682, -5682,
   82584, -5682,  2854, -5682, -5682, 39021, -5682, -5682, -5682, 82584,
   -5682, -5682, -5682, 36756,  4646, -5682,   337, -5682, -5682,110767,
   -5682, 39021, -5682,  5202, -5682, 19736, -5682, -5682, -5682
};

/* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
   Performed when YYTABLE does not specify something else to do.  Zero
   means the default is an error.  */
static const yytype_int16 yydefact[] =
{
       0,  3688,     2,  1039,  2344,     0,   446,     0,  1272,   628,
    2190,  2338,  2337,  2111,   486,   223,   392,  2113,  2413,     0,
       0,   482,  1288,   772,   512,     0,   335,     0,     0,   489,
     333,   223,  1337,  3319,  2237,     0,  3426,  2177,     0,  1335,
     484,  2511,  2116,     0,  3583,     0,     0,     0,  3588,    72,
    2083,     0,  1288,   358,  3428,    85,     0,     0,  1288,  2397,
    3588,     0,  2425,     0,     0,  2217,     0,     0,     0,     0,
       3,  3690,    22,     0,    45,    27,    33,    17,    21,  2099,
      16,    47,    60,    53,    30,  3790,  3791,  3793,    43,  3619,
      42,    11,    63,    64,    19,    50,    12,    15,    18,    41,
      49,    37,    44,    57,    58,  1358,  1334,  1362,  1333,  1329,
    1325,  1344,  1345,  1346,  1352,    25,    26,    34,    51,    68,
      23,    65,    61,    24,  2344,    13,    28,    29,    14,    52,
      46,    38,    62,    69,    39,     0,    59,    40,    67,    32,
      54,    31,     9,    10,    20,    55,    56,    48,    70,    35,
      66,    36,     8,  3585,  3792,   168,  1083,     0,     0,     0,
       0,  2109,     0,  2109,  1177,  1403,  3617,  3618,  3619,  1289,
       0,  1290,     0,     0,  2553,  2554,  2796,  2811,  2859,  2611,
    2903,  2913,  2931,  2938,  3075,  2764,  2809,  2810,  2610,  2839,
    2921,  2672,  2932,  2955,  3069,  2983,  3070,  2749,  2748,  2750,
    3055,  2751,  2752,  2753,  2754,  2755,  3056,  2647,  2756,  2757,
    2758,  2760,  2759,  2761,  2762,  3057,  2648,  3721,  2649,  2721,
    2763,  2723,  2722,  2765,  2650,  2651,  2766,  2767,  2768,  2770,
    2769,  2702,  2653,  2652,  2771,  2773,  2772,  2724,  2725,  2705,
    2774,  3058,  2775,  2777,  2654,  3053,  2655,  2656,  2657,  2776,
    2658,  2778,  2706,  2779,  2780,  2659,  2781,  2782,  2783,  2784,
    2786,  2785,  2699,  2787,  2788,  2790,  2791,  2792,  2789,  2793,
    2794,  2797,  2795,  2727,  2726,  3059,  2660,  2798,  2799,  2800,
    2801,  2803,  2804,  2802,  2805,  2707,  2806,  2807,  2808,  2816,
    3722,  2817,  2819,  2818,  2728,  2820,  2821,  2822,  2824,  2823,
    2825,  2827,  2661,  2662,  2663,  2826,  2828,  2812,  2813,  2814,
    2815,  2830,  2829,  2831,  2832,  2833,  2729,  2664,  2703,  2665,
    3052,  2834,  2835,  2608,  2836,  2837,  3060,  2666,  2718,  2838,
    2708,  2841,  2840,  2667,  2842,  2668,  2843,  3061,  3062,  2844,
    2845,  2847,  2849,  2846,  2850,  2851,  2857,  2669,  2848,  2852,
    2853,  2854,  2855,  2856,  2858,  2730,  2860,  2700,  2861,  3063,
    3064,  2862,  2863,  2864,  2865,  2719,  2866,  2867,  2868,  2869,
    2882,  2883,  2873,  2874,  2876,  2877,  2880,  2875,  2881,  2886,
    2885,  2887,  2888,  2889,  2890,  2891,  2884,  2871,  2878,  2879,
    2872,  2892,  2893,  2870,  2894,  2896,  2895,  2897,  2731,  2898,
    2899,  2900,  2901,  2902,  3065,  2904,  2905,  2907,  2906,  2908,
    3066,  2909,  2910,  2911,  2715,  2912,  2732,  2733,  2914,  2915,
    3067,  2916,  2917,  2923,  2924,  2925,  2701,  2919,  2918,  2920,
    2922,  2734,  2735,  2736,  2926,  2927,  2928,  2930,  2929,  2709,
    2671,  2670,  3068,  2673,  2933,  2934,  2674,  2935,  2937,  2936,
    2717,  2675,  2939,  2940,  2942,  2941,  2676,  2704,  2677,  2678,
    2943,  2944,  2945,  2946,  2947,  2948,  2949,  2950,  2951,  2952,
    2953,  2954,  2737,  2738,  2956,  2957,  2958,  2960,  2959,  2961,
    2962,  2966,  2963,  2964,  2965,  2967,  2679,  2968,  2710,  2969,
    2970,  2971,  2680,  2973,  2972,  2681,  2974,  2975,  2976,  2977,
    2978,  2716,  2711,  2979,  2980,  2982,  2739,  2981,  2984,  2985,
    2712,  2986,  2987,  3071,  2682,  2988,  2989,  2740,  2720,  3082,
    2683,  3072,  2991,  2713,  2747,  2990,  2992,  2685,  2686,  2993,
    2994,  2995,  2684,  2996,  2687,  3073,  2997,  2999,  2998,  3000,
    3001,  3002,  3003,  2688,  3004,  3005,  2689,  3006,  2690,  3007,
    3008,  3074,  3009,  3011,  3010,  3012,  3013,  3014,  3015,  3016,
    3017,  3019,  3021,  3020,  3018,  3022,  3023,  2741,  3024,  2691,
    2742,  3077,  3078,  2743,  3025,  3026,  3027,  3028,  3076,  2714,
    3029,  3030,  2694,  3031,  3032,  3034,  3033,  2692,  2693,  3035,
    3036,  2698,  3079,  3037,  3043,  3080,  2744,  2745,  3038,  3039,
    3050,  3040,  3042,  3041,  3045,  3044,  3051,  3081,  2609,  2695,
    3046,  3047,  2696,  3048,  2697,  3049,  2746,  2558,  2574,   253,
    2575,  2605,  2603,  2607,  2601,  2606,  2599,  2600,  3054,  2646,
    2604,  2602,   416,   131,     0,     0,  2212,  2109,  2087,   230,
     227,  2109,   231,  2109,   226,  2109,  2109,  2112,  2109,  2109,
    2109,   228,   229,     0,     0,     0,   416,  2119,  2415,     0,
    2435,  2436,  2430,  3416,  3417,  3411,   394,     0,     0,     0,
    2311,  2310,     0,     0,   320,   332,   335,   328,   331,     0,
     223,  2109,   394,   334,   335,     0,  1367,     0,  2316,   335,
       0,  2188,  2429,     0,   416,  2512,  2509,  2119,  2386,  2388,
       0,  2384,  1480,  1479,     0,  3588,     0,  2564,  1267,  1299,
    1223,  3589,  3590,     0,    77,    80,  2350,   359,     0,     0,
       0,   626,     0,     0,  1231,     0,  3590,  3600,  2427,     0,
     131,  1202,     0,   131,  2220,  2109,  2109,  3671,  3672,     0,
       0,     0,  3666,     0,  3673,     0,  1362,     0,  1348,     1,
       5,     0,     0,   626,   991,   626,   992,     0,   993,   626,
     626,     0,     0,     0,     0,  3624,  3617,  3618,  3619,     0,
    2069,  1907,  1363,  1362,  1999,  2003,  3605,  3605,  3605,     0,
       0,  1999,  1353,  2814,  3052,  2937,     0,  2329,  2343,  2327,
    2547,  1331,  1327,  2658,  1042,  1084,  1047,   237,     0,     0,
    1049,     0,  1060,  2580,  2579,  2578,  1057,   223,     0,  1179,
       0,     0,     0,  3625,  3624,     0,  1244,  2331,  2332,  2333,
    2334,  2335,  2336,  2339,     0,   259,   416,   448,  1406,   459,
     450,   453,     0,   132,   133,  1270,  1273,     0,   629,  2216,
    2215,     0,  2214,  2191,     0,  2212,     0,  2107,   232,     0,
     233,     0,   223,     0,   223,  2092,     0,  2109,  2109,   487,
    3743,     0,  3476,  3494,  3495,  1420,  3491,  3496,     0,  3493,
    3488,     0,     0,  3490,  3487,     0,     0,  3515,  3489,  3492,
    2649,  2782,  2823,  2663,  2831,  2832,  2947,  2951,  2956,  2967,
    2971,  2713,  2685,  3012,  3469,  3457,  3471,  3470,     0,     0,
    3474,  3479,     0,  3478,     0,     0,  2121,  2416,  2417,  2421,
       0,  2439,     0,   407,     0,     0,  3729,     0,     0,   396,
     397,  3728,  3796,     0,   401,  3727,     0,   394,  3783,     0,
     416,  3777,  3785,  3784,  3786,  3787,  3788,  3789,   427,     0,
     428,   429,   483,  3780,  2576,     0,  3724,  3726,  3723,  3725,
    2577,  3749,     0,     0,  3782,     0,  3781,  3778,  3779,  1286,
    1714,     0,  2486,  2555,  2556,     0,  2499,  2504,  2505,  2497,
    2498,  2502,  2478,  2501,  2477,  2503,  1482,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1420,  1420,  1420,
    1417,     0,     0,     0,     0,     0,     0,  2495,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1417,     0,
       0,     0,     0,     0,     0,  1417,     0,     0,  2494,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3075,  2496,  1420,  1417,  1417,     0,     0,  3070,     0,
       0,     0,  3055,  2647,  3057,  2702,  2654,  2655,  2656,  2657,
    2699,  2726,  3059,  3060,  3061,  3063,  3064,  3065,  3066,  2915,
    3067,  3068,  2717,  2945,  2739,  3071,  3082,  3072,  3074,  2742,
    3077,  3078,  2743,  3076,  2714,  3079,  3080,  3081,  2695,  2746,
       0,     0,     0,     0,  1481,     0,     0,  1360,  1557,   773,
    1427,  1439,  1455,     0,  1555,  1554,  1558,  1560,  1566,  1474,
    1588,  1526,  1527,  1529,  1528,  1533,  1534,     0,  1690,  1535,
       0,     0,  1532,  2491,  1531,  1530,  2492,  2493,  1525,  2533,
    2563,     0,     0,  2557,  3054,  2646,   514,   513,     0,   354,
     347,   342,   350,   344,   346,   345,   351,   352,   353,   348,
     343,   349,   336,     0,   321,     0,   329,  3601,     0,  1291,
     394,   490,   355,  3476,  2750,  2951,  3449,     0,  3456,     0,
    3616,  3610,  3613,  3612,  3608,  3611,  3609,  3614,  1388,  3615,
    1387,  1338,  1368,  1385,  1386,     0,     0,     0,  2636,  2635,
     908,  2633,  3340,  3341,     0,  2637,     0,     0,  3342,  3004,
    3025,  2634,     0,  2569,     0,  2570,  2630,  2628,  2632,  2631,
    2625,  2626,  2629,  3320,  3325,  3321,  2627,     0,  2344,     0,
       0,  2324,   989,   988,     0,     0,     0,     0,  2259,     0,
     908,  2324,  2260,     0,  1964,  2314,  2317,     0,  3344,  2273,
     990,  3345,  2310,     0,  2245,  2261,  2222,  2266,   131,  3346,
     131,  2313,  1964,  2324,     0,  2238,     0,     0,     0,  2344,
    1402,     0,   330,  3427,  2189,  1175,  2157,  1336,  2143,     0,
     485,     0,  2124,     0,  2385,  3798,  3584,     0,     0,     0,
       0,  3593,  1756,  2084,     0,    81,    76,     0,   356,     0,
       0,  2552,  3429,    86,     0,     0,  3685,    74,     0,  2403,
       0,  2401,  2398,  2400,     0,  3593,     0,  2426,  1209,  1209,
       0,     0,  1201,  1203,  1204,  1209,  1209,  2221,     0,     0,
       0,  2485,  2483,  2484,  2565,  3668,  2482,  2481,  3677,  3679,
    3662,     0,  3665,  3664,  3674,  1351,  1350,     6,    71,     0,
     142,   626,   223,   223,   626,   167,   148,   151,   626,   626,
     626,   160,   162,   626,   626,     0,   225,     0,     0,  3624,
    1366,  2859,     0,     0,  1378,  1364,  1801,  1365,  1833,  1803,
    1771,  1767,  1766,  1829,  1830,  1832,  1831,  1834,  1836,  1826,
       0,     0,  2082,     0,  2077,  1908,  1913,  1907,     0,     0,
       0,     0,     0,     0,  1998,  1964,  2009,  1969,  2000,  1330,
    1996,     0,  1326,  1391,  1391,  3607,  3606,  3604,  3603,  3602,
    2001,  1349,  1357,  1355,  1356,  2002,  1347,     0,  2341,  2549,
       0,     0,  2346,     0,  1999,  2003,  2148,  2147,  2150,     0,
     923,     0,   238,     0,  3622,  3623,  3621,  1420,  2581,  2584,
    3620,  2585,   238,  2110,     0,     0,     0,  2109,  1183,  1184,
    1178,  1180,  1182,     0,     0,     0,     0,  2345,     0,   255,
     260,   254,   457,     0,     0,   394,     0,   454,    87,     0,
    1274,  2100,  2102,     0,  2192,     0,  2201,  2104,  1376,  1907,
    2194,  2106,  2210,  2213,  2089,     0,     0,  2095,  2094,     0,
    2096,     0,     0,   235,  2097,  2085,     0,   463,   465,  3477,
    3475,  3512,  3511,  3516,     0,  3513,  3509,     0,  3468,  3517,
    3502,  3506,     0,  3518,     0,  3503,  3510,  3524,  3523,  3525,
    3520,  3519,     0,  3522,  3508,     0,  3507,  3528,     0,  3472,
       0,     0,   439,     0,  2126,  2127,  2123,  1175,  2122,  2422,
       0,  2414,     0,  1309,  2441,  2440,  2437,  1899,  3413,  3418,
     416,   408,     0,     0,  2915,     0,   415,   414,   413,  3689,
     436,   416,   402,   425,     0,     0,  3691,   395,   398,   434,
     437,  3748,   476,   472,   480,   474,  3794,   289,     0,     0,
    2555,  2556,  2488,  2487,  2557,  2479,  2500,     0,     0,     0,
    1561,  1905,  1905,  1905,     0,     0,  1764,     0,     0,     0,
       0,  1905,     0,  1600,  1573,  1572,     0,  1601,     0,     0,
       0,     0,     0,     0,     0,  1720,  1720,  1686,     0,     0,
       0,     0,     0,     0,     0,  1606,     0,     0,     0,  1758,
    1760,  2533,  1905,     0,  1905,     0,  1426,  1607,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1905,
    1905,  1905,     0,  1618,  1620,  1619,  1905,  1905,     0,     0,
       0,     0,     0,     0,  1905,     0,     0,     0,     0,     0,
    1754,  2506,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1754,     0,     0,     0,     0,     0,     0,     0,
    2508,     0,     0,     0,  2507,     0,     0,     0,     0,     0,
       0,  1754,     0,     0,  1563,     0,  1562,  1564,     0,  1360,
     774,     0,     0,     0,  1478,  1476,  1477,  1475,     0,     0,
       0,     0,  1484,  1486,  1488,     0,  1483,  1485,  1487,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1565,
       0,     0,     0,     0,     0,  2480,     0,  1639,     0,   526,
    2411,     0,     0,     0,   319,  1293,  2586,     0,     0,   416,
    3475,     0,     0,     0,  3472,  1403,  1384,  3347,     0,   907,
       0,     0,   910,   912,   911,  3379,     0,   909,  3388,  3386,
    3384,  3383,     0,     0,  3327,  3329,     0,   916,   918,   917,
    3377,   915,     0,  3363,     0,     0,     0,     0,     0,   626,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2291,
       0,  1402,  1402,  2239,     0,  2324,     0,  2324,  2314,     0,
    2324,  2320,  2279,  2272,     0,     0,   687,  1981,  1965,  2265,
    2318,  2319,  2324,     0,     0,  2324,     0,  2280,  2314,  2324,
    2234,     0,     0,  2226,  2231,  2227,     0,  2233,  2232,  2235,
    2223,  2224,     0,  2252,     0,  2264,  2271,     0,  2251,  2258,
       0,  2269,  2314,  2314,     0,  2324,  2324,  2324,  1176,     0,
    1403,     0,  3745,  2510,  2513,  2520,  2525,  2128,  2125,  2387,
    3689,     0,     0,  1301,  1303,  1302,  1319,  1225,  3592,     0,
    3594,     0,  3596,     0,    78,     0,     0,  2379,  2377,     0,
       0,     0,     0,  2369,  2371,  2376,  2370,     0,     0,  2378,
       0,   131,     0,  2372,  2380,  2351,  2354,  2361,  1402,  2352,
       0,  1899,  3432,  3431,     0,     0,     0,  1229,  1232,     0,
    2408,  2405,   131,     0,  2712,  3599,  3597,     0,  1197,  1213,
     134,  1207,  1208,     0,     0,  1200,   134,  3413,  3686,  3687,
       0,     0,  3663,  3680,  3661,     0,  3675,  3676,  3660,     7,
       4,   154,     0,   145,     0,     0,     0,   626,   626,   137,
       0,  3821,  1403,  1403,     0,     0,   626,   626,   626,     0,
    1798,     0,  1767,  1829,  1830,  1832,     0,  1831,     0,     0,
    1899,     0,     0,  1821,  1847,     0,  1847,  1823,  1824,     0,
       0,     0,  1378,  1827,  2566,  2078,  2081,     0,  2070,  2072,
    2073,  2578,  2075,     0,     0,  1910,  1913,  1975,  1976,     0,
    1393,     0,  1989,  1990,  1988,     0,  1966,  1982,  1987,  1985,
       0,  1957,     0,  2008,  1997,  2062,  1392,  2004,  2005,  1354,
    2330,     0,  2328,  2347,  2348,  2548,  1332,  1328,  1044,   924,
    2149,   923,   619,   622,   621,     0,     0,  2120,   236,  2583,
       0,  2120,  1061,     0,  2584,  3554,     0,  3561,  3543,     0,
    1181,  3626,  3627,  1055,  1053,     0,  1245,  1246,  1249,     0,
     259,   262,     0,   416,   449,   451,  1404,   394,   460,     0,
       0,  1284,     0,  1282,  1281,  1279,  1280,  1278,     0,  1269,
    1275,  1276,  1899,     0,  2195,  2204,  2547,     0,     0,     0,
    1377,  2198,  1955,     0,  2550,  2108,     0,  2091,  3466,  3541,
    2090,  1185,     0,     0,     0,   394,   488,   464,   418,  3505,
    1421,  3521,  3529,     0,  3526,  3527,  3464,  3473,     0,     0,
       0,     0,  3514,  3497,     0,  3501,  3500,     0,  3498,     0,
    3499,     0,  3504,  3481,  3480,  2523,     0,  2522,   394,   393,
    2128,  3062,  3079,  2423,  2419,  2418,     0,  2438,     0,  1900,
    1901,     0,     0,  1903,  3415,  2010,     0,  3412,   409,   416,
       0,     0,     0,   431,  3769,   287,   403,   416,   418,   430,
     469,   290,   399,     0,     0,   394,   394,   416,  3689,  3413,
    3347,  1715,  1717,     0,     0,  1906,     0,  1732,     0,     0,
       0,     0,     0,     0,  1541,     0,     0,     0,  1669,     0,
    1732,  1697,  2055,  2056,  2021,  2022,  2020,  2023,  1418,     0,
    2024,  2054,     0,     0,     0,  1695,  1359,  1342,     0,     0,
    1875,  1876,  1877,  1878,  1879,  1880,  1881,  1882,  1883,  1884,
    1885,  1886,  1888,  1893,  1889,  1890,  1891,  1892,  1887,  1894,
       0,  1874,     0,  1721,  1682,  1684,     0,     0,     0,   774,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1905,
       0,     0,  1905,     0,     0,     0,     0,     0,     0,  1696,
       0,  1694,     0,     0,  1693,  1585,     0,     0,  1905,     0,
    1613,     0,     0,     0,  1609,     0,     0,     0,  1592,  1593,
       0,     0,     0,  1517,     0,  1515,  1516,     0,     0,  1905,
       0,     0,     0,     0,  1508,     0,     0,     0,     0,  1755,
       0,     0,  1897,  1895,  1898,  1896,     0,     0,  1756,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1586,     0,     0,     0,     0,     0,     0,     0,     0,  1590,
       0,     0,     0,  2538,   959,     0,     0,     0,     0,  1556,
       0,     0,     0,     0,  1424,  1423,  1425,  1436,  1430,  1434,
    1428,  1432,     0,  1489,  3056,  1437,     0,     0,     0,  1440,
    1449,  1453,     0,     0,     0,     0,     0,  1460,  1458,  1459,
    1471,  1472,  1456,  1457,     0,  1462,     0,  1461,  1468,  1469,
    1470,  1473,  1559,   919,  1567,  1925,  1688,  1689,  1713,  1929,
       0,     0,     0,     0,  2534,  1403,  1511,  1510,  1512,  1513,
    1514,   527,     0,   521,   524,   538,     0,     0,  2410,     0,
    2726,  2742,  2743,   337,   340,   339,   341,     0,     0,  1292,
    1296,  3413,     0,     0,     0,     0,  3545,  3454,     0,     0,
    1399,  1339,  1398,     0,     0,     0,     0,     0,  3369,  3381,
       0,     0,  3378,     0,     0,  1405,     0,     0,  3351,     0,
       0,     0,     0,  3324,  3390,  3391,  3394,     0,  1405,     0,
    3025,     0,  3326,  3331,  3322,  3335,  3337,  3339,  2281,     0,
       0,     0,     0,  2286,  2283,  2276,  2290,  2764,  2285,  2303,
    2284,  2278,  2289,  2292,  2277,     0,     0,     0,  2324,  2296,
    2299,  2293,  2324,     0,  2324,  2295,     0,  2322,  2309,  2308,
    2307,  2249,  2248,  2242,  2315,  2300,  2294,   223,  2324,  2247,
    2246,  2228,  2229,  2230,     0,  1964,     0,  2320,   134,  2314,
       0,  2324,  2324,     0,  2306,  2268,  2270,  2176,     0,  1826,
       0,     0,  2162,  2155,  2142,   394,     0,     0,     0,  2515,
    2129,  2130,   287,     0,     0,     0,   511,  1319,  1305,  1321,
    1227,  1226,  1224,  3591,  3595,  1757,    80,  2170,  2168,    82,
    2167,  2169,    83,  2389,  2363,  2362,  2364,  2374,  2368,   131,
    2373,  2375,  2365,     0,  2381,  2382,     0,     0,   357,   360,
     362,     0,   365,  3430,     0,   627,     0,    75,     0,  1233,
    2010,  2404,  2406,  2399,  3598,     0,  1198,  1215,  1214,  1210,
    1211,     0,  1195,   135,  1206,  1205,  1199,  2218,  3669,  3678,
    3682,  3667,   617,  1008,     0,  3462,  3561,   190,     0,     0,
       0,   140,     0,   626,   161,   163,   626,  3658,  3658,     0,
       0,     0,   626,     0,     0,  1843,  1835,  1837,  1838,  1839,
       0,  1842,     0,  1381,     0,  1369,  1369,  1379,  2520,  1825,
    1822,  1848,     0,  1847,  1847,     0,     0,  1805,  1804,     0,
    1899,   913,  2074,     0,     0,  1909,  1422,     0,  1911,  1920,
    1910,  1978,  2739,     0,     0,  1395,     0,  2010,  1389,  2487,
       0,     0,     0,     0,     0,     0,     0,  1977,  1974,     0,
    2349,   617,     0,   620,  2149,  2149,     0,     0,     0,     0,
       0,     0,     0,     0,   239,   248,  1048,  2582,  1050,     0,
       0,     0,     0,     0,  3573,  3413,  1075,  3628,  1051,     0,
       0,  1248,   257,   256,     0,   263,   265,   394,   455,   452,
     417,   447,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   134,    89,   110,
       0,  1271,  1283,  2101,  1277,  1864,  1369,  2120,     0,     0,
    2105,     0,     0,  1992,  1956,  2211,  2210,     0,     0,     0,
    1187,  1186,  2093,   234,  2098,  3413,   394,   307,   421,   467,
       0,     0,  3461,  3537,  3540,  2547,     0,     0,  3482,     0,
     394,   440,  2130,  2420,  2424,  1310,  1312,  1313,  1311,  1319,
       0,  2598,  2597,  2596,  2567,  1904,  2568,  2593,  2591,  2595,
    2589,  2594,  2587,  2588,  2592,  2590,     0,  3421,  3422,  3420,
    2015,  2011,     0,  3414,  3419,   410,   411,   432,   435,     0,
       0,   394,     0,   404,   405,   419,   423,     0,   438,   477,
     461,   461,   461,   287,  1287,     0,     0,  2537,     0,  1664,
       0,  1665,  1666,     0,  1542,  1765,     0,     0,     0,  1570,
       0,     0,     0,  1668,     0,  1419,     0,     0,  1545,  1537,
    1343,     0,  1699,     0,     0,     0,     0,     0,     0,     0,
    1704,     0,  1702,     0,     0,  1759,     0,  1761,  2534,     0,
    1674,  1709,     0,  1672,     0,     0,  1698,  1710,  1711,     0,
       0,     0,  1678,  1676,     0,  1680,  1614,  1677,  1679,     0,
       0,     0,  1612,     0,     0,     0,     0,     0,     0,     0,
    1589,     0,  1625,     0,  1662,  1626,     0,     0,  1623,     0,
       0,     0,  1641,  1574,  1575,     0,  1576,  1628,     0,  1550,
    1581,  1582,  1547,  1548,  1642,  1631,  1549,     0,  1584,  2010,
       0,  1568,     0,     0,     0,  1587,  1617,     0,     0,     0,
    1546,     0,     0,     0,  2010,     0,  1643,  1591,     0,     0,
     775,  1361,  1538,  2535,  1431,  1435,  1429,  1433,     0,     0,
       0,     0,  1448,     0,     0,  1441,  1451,  1454,     0,     0,
    1927,     0,     0,  1707,  1754,  1754,  1754,  1754,     0,     0,
       0,  1658,  1659,     0,     0,   520,   519,     0,   523,   607,
       0,   540,   528,   517,  2412,     0,     0,  1294,     0,     0,
       0,     0,  3455,     0,     0,     0,     0,  1403,  1404,  1404,
    2533,  3348,  3349,  3350,     0,  2623,  2622,  2620,  2624,  2621,
    2571,  2573,     0,  2572,  2618,  2616,  2619,  2614,  2612,  2613,
    2617,  2615,  1405,     0,  3367,   922,   921,   920,  3380,     0,
    3402,     0,     0,  3387,     0,  3385,     0,     0,  1405,  3330,
       0,  3396,  3397,     0,     0,     0,  3365,  3364,     0,     0,
       0,  3357,     0,     0,     0,  2305,     0,  2275,  2288,  2287,
    2325,  2326,  2302,  2298,  2243,  2301,  2297,  2321,  2010,  2253,
    2274,  2244,     0,  2267,  2225,  2322,  2282,  1907,  2314,  2240,
    2241,  2304,     0,  1378,  1404,  2158,  1403,  2159,   394,  2514,
       0,     0,  2117,     0,   394,  1268,  1308,  1300,  1307,  1304,
    1319,  1317,  1306,   985,   984,     0,  1320,    79,     0,     0,
    2366,   134,  2360,  2383,  2355,   366,   370,     0,     0,     0,
    2833,  2915,     0,  1907,  3434,  3684,  1241,  1238,  1240,  1237,
    1239,  1228,  1234,  1235,  2409,  2407,   134,  2428,  1213,     0,
    1216,  3689,  2010,     0,  3681,   155,   618,     0,     0,     0,
    1008,     0,   165,  3573,     0,     0,     0,   138,   169,  3766,
    3822,  3646,     0,  3828,  3656,  3830,   156,  3825,   237,  3823,
       0,     0,  1840,  1841,  1802,  1369,  1371,  1370,     0,     0,
    1373,     0,  1846,  1845,     0,     0,     0,  1810,     0,  1806,
    1808,     0,  1872,  1864,     0,  2079,  2071,  2076,  2532,  1917,
    1961,     0,     0,  1340,  1920,     0,  1979,  1970,     0,  1396,
    1394,  1991,  1968,     0,  1984,  1983,  1986,  1393,  1958,  1961,
       0,  1403,  1045,   623,     0,     0,  1046,     0,     0,     0,
     242,   245,   243,   244,     0,  2149,  2149,   184,  2149,  2149,
     183,   185,     0,   179,   176,   186,  2149,  1062,   171,     0,
       0,     0,     0,  2010,     0,     0,     0,   192,     0,     0,
    3548,  3547,     0,  3563,     0,     0,  3565,     0,  3564,  3562,
    3533,  3544,     0,  1070,  1040,     0,  1077,  1079,     0,     0,
    3628,  1247,     0,   259,   261,     0,   458,     0,     0,     0,
    2010,     0,  2010,  2010,     0,     0,  2010,     0,  2010,     0,
       0,     0,     0,     0,     0,     0,  2010,     0,     0,     0,
    2010,     0,  2010,     0,    88,  1285,  1826,  1861,  2193,  2196,
       0,  2548,  1907,  1402,     0,  2207,     0,  2551,  3413,  3467,
    3542,  1185,     0,   308,     0,  1405,   418,  3577,     0,     0,
       0,     0,     0,  2524,   442,  2114,     0,  1319,  1323,  2431,
    3424,  3425,  3423,  2018,  2019,  2016,  2014,  2017,   412,   433,
     311,   313,  3741,   310,   312,  3739,  3740,     0,  3772,  3774,
       0,   390,   298,   388,  3736,  3734,  3738,  3732,  3737,  3730,
    3731,  3735,  3733,   389,   302,  3771,  3797,     0,  3770,   406,
    1405,   426,   418,     0,   471,   473,   462,   481,   475,   394,
    1718,  1716,     0,  1733,  1762,     0,  3083,  3084,  3085,  3086,
    3087,  3088,  3090,  3091,  3089,  3092,  3093,   877,  3094,  3095,
    3096,  3097,  3098,  3099,  3100,  3101,  3102,  3103,  3104,   877,
    3105,  3106,  3107,  3108,  3109,  3110,  3111,  3112,  3113,  3114,
    3115,  3117,  3116,  3118,  3119,  3120,  3121,  3122,  3123,  3124,
    3125,   860,  3126,  3127,  3128,  3129,  3130,  3131,  3133,  3132,
    3134,  3135,  3136,  3137,   881,  3138,  3139,  3140,  3142,  3141,
    3143,  3144,  3145,  3146,  3147,  3148,  3149,  3150,  3151,  1748,
    3152,  3153,  3154,  3155,  3156,  3158,  3157,  3161,  3162,  3163,
    3164,  3165,  3166,  3167,  3168,  3169,  3170,  3171,  3716,  3172,
    3173,  3717,  3174,  3175,  3176,  1742,  3177,  3178,  3179,  3180,
    3181,  3182,  3159,  3183,  3160,  3184,  3185,  3186,  3187,  3188,
    3189,  3190,  3191,  3192,  3193,  3194,  3195,  3196,  3197,  3198,
    3199,  3202,  3200,  3201,  3203,  3204,  3205,  3206,  3207,  3209,
    3208,  3212,  3210,  3211,  3213,  3214,  3215,  3216,  3217,  3218,
    3219,  3220,  3718,  3221,  3222,  3223,  3224,  3225,  3227,  3228,
    3226,  3229,  3230,  3231,  3232,  3233,  3234,  3235,  3236,  3237,
    3238,  3239,  3240,  3241,  3243,  3242,  3244,  3245,  3246,  3247,
    3249,  3250,  3251,  3252,  3253,  3254,  3255,  3256,  3259,  3257,
    3258,  3260,  3261,  3262,  3263,  3264,  3265,  3266,  3267,  3268,
    3272,  3269,  3273,  3270,  3274,  3271,  3275,  3276,  3277,  3278,
    3279,  3280,  3281,  3282,  3284,  3285,  3286,  3287,  3288,  3289,
    3290,  3291,  3293,  3294,  3295,  3296,  3297,  1745,  3298,  3299,
    3300,  3301,  3302,  3303,  3304,  3306,  3307,  3305,     0,  3308,
    3310,  3309,  3311,  3312,  3313,  3314,  3315,  3316,  3317,  3318,
    3248,  3283,  3292,   879,  1750,   877,  2645,  1743,   879,     0,
    1741,     0,  1739,  1740,   785,   787,  2638,  2639,  2640,  2641,
    2643,  2644,  3719,  3720,   786,  2642,     0,     0,     0,  1670,
    1667,     0,     0,     0,  1724,  1724,     0,     0,     0,     0,
    1465,     0,     0,     0,  1653,     0,  1675,  1673,     0,     0,
       0,     0,     0,  1681,     0,  1597,  1595,  1523,     0,  1521,
       0,  1522,     0,  1524,     0,     0,  1663,     0,  1491,  1509,
       0,     0,     0,  1757,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2539,     0,     0,   948,
     954,   957,   958,   960,   952,     0,  1635,     0,     0,     0,
    1446,  1442,     0,  1450,     0,     0,     0,  1464,  1463,  1929,
    1928,     0,  1706,     0,     0,  1756,     0,     0,  1756,     0,
       0,     0,  2536,  1404,  1640,  1403,   530,     0,   548,   522,
    2010,   525,     0,   539,     0,   551,     0,     0,     0,   338,
       0,  1297,     0,   470,     0,  3453,  3546,     0,     0,  1397,
    1409,  1400,     0,     0,     0,  3371,     0,  3382,  1405,     0,
       0,     0,  3409,  3410,  1404,  3408,  1404,  1404,  3355,  3353,
    3352,  3328,     0,     0,  3401,  3395,  3392,  3393,  1405,     0,
    3334,     0,  1405,  3332,  3336,  3338,  2263,  2262,     0,  2323,
    1964,  2236,  2255,  2257,  2324,  2178,  2182,     0,  1899,  2166,
       0,     0,  2160,  2164,     0,  2521,     0,     0,  2131,  1826,
    3799,     0,  1866,    84,     0,  2367,  2358,     0,  2353,  2356,
       0,   361,   371,   363,   367,   368,   369,   364,  3445,  3446,
    3438,  3441,  3439,  3440,  3444,  3447,  3448,  3435,  3442,  1964,
       0,     0,  1230,  1236,  2402,  1212,   136,     0,  1196,  3742,
    2219,  3670,  3683,  1023,  1025,  1024,  1009,  1010,     0,     0,
       0,  1070,     0,     0,     0,   630,   630,   170,     0,     0,
     203,  3694,     0,  3653,  3654,  3657,  3659,  3694,  3628,     0,
       0,     0,   158,  1799,  1380,  1372,  1374,  1369,  1369,     0,
    1766,     0,     0,     0,  1766,     0,     0,   511,     0,  1844,
     914,  2445,  1918,  1919,     0,  1914,  1962,  1963,  1916,  1912,
       0,  1921,  1923,  1341,  1980,  1972,  1967,  1390,     0,  1960,
       0,     0,     0,  2065,  2067,   685,   684,   247,   246,   251,
     252,   854,   850,   853,   852,   851,   864,  2010,  2010,  2154,
    2153,  2010,  2010,   178,   175,  2152,  2151,  2010,  2010,   172,
    2120,   196,   195,   197,   198,   200,   201,   199,   194,  1058,
       0,   202,  3551,     0,  3558,  3553,  3556,  3536,  3535,  3534,
    3531,     0,  2010,  2010,  2010,     0,  2010,  3572,  3574,     0,
       0,  1059,   923,  3586,     0,     0,   208,  3630,     0,  3632,
       0,  1251,     0,  1250,   258,   264,   394,  2010,  2010,   103,
    2010,    95,    96,    91,   123,   124,    93,    94,    99,    98,
     100,   101,   104,   105,   102,    97,    92,   127,   129,   128,
     106,  2061,  2060,  2059,   130,   125,   126,    90,  2197,  1865,
       0,  1907,  2006,     0,     0,  1993,  2208,  2199,  2088,  2086,
    3747,  1403,   468,     0,   466,     0,  3460,  3465,  3539,  3538,
    3561,  3561,   416,   394,   416,   441,     0,  1314,  1319,  1323,
       0,  1315,  2442,   877,   877,   894,   840,   860,   856,   860,
    3175,   894,   807,   807,   894,   807,   860,   855,     0,   894,
     807,   877,   844,   877,   801,   802,   807,   877,   819,     0,
     860,   894,     0,   841,   860,   846,   877,     0,   877,   877,
     877,  3029,   877,   877,   860,   795,   299,   788,   790,   789,
     791,   792,   877,   877,   877,   877,   877,   881,     0,     0,
    3775,     0,   288,     0,   424,   478,   461,     0,     0,  1763,
       0,   875,   878,  1734,   928,     0,  1747,   862,   861,     0,
     882,  1749,     0,  1746,   928,   876,   880,  1752,  1738,  1744,
    1751,   928,  1540,  1571,  1544,  1543,     0,     0,     0,  1604,
       0,  1722,  1728,     0,     0,     0,  1578,     0,  1705,  1703,
    1580,     0,     0,  1655,  2536,  1630,  1701,  1608,  1632,  1583,
       0,     0,     0,  1520,  1518,  1519,     0,  1598,  1621,     0,
    1507,  1622,     0,  1605,  1629,  1536,  2034,  2033,  2035,  2031,
    2030,  2032,  1551,  2010,     0,  1610,  1569,     0,     0,  1634,
    2540,  2541,     0,     0,     0,   959,   945,   946,   947,     0,
     949,   951,   953,     0,  2010,  1467,  1466,  1438,     0,  1447,
    1444,     0,  1452,  1931,  1930,     0,     0,  1646,  1648,  1647,
    1650,  1649,  1644,  1754,  1409,  1660,     0,   531,   532,   534,
     536,   613,     0,   526,   555,   515,     0,   530,   518,  1295,
    1298,     0,  3451,  3450,     0,  1401,  1413,  1412,  2530,  2534,
       0,     0,  1405,  1404,  3368,  3389,     0,     0,  3407,  3405,
    3406,  1405,  1405,  3399,  3398,  3400,  3366,  3361,  3359,  3358,
    2047,  2048,  2046,  2044,  2045,  2254,  1964,  2250,     0,  1907,
       0,  1864,  1404,  2156,     0,  3746,     0,  2137,     0,  2134,
    2141,   504,  2207,     0,  2132,  2103,     0,  1869,     0,  1870,
    1867,  1868,  2010,     0,     0,     0,     0,     0,  3433,  1242,
    1243,     0,     0,     0,  1221,  1217,   143,     0,  3463,   164,
       0,   149,   152,   735,     0,     0,     0,     0,  2149,  2149,
    2149,  2149,  2149,  2149,  2149,  2149,  2149,  2149,     0,  2149,
    2149,  2149,  2149,  2149,  2149,  2149,  2149,   679,  2149,  2149,
       0,     0,  2149,  2149,   680,   139,   499,   507,   631,   634,
     670,     0,   678,   672,   659,   660,   496,   677,   141,   282,
     240,     0,     0,  3689,  3652,  3655,     0,     0,   267,  3700,
       0,   700,   701,   699,   698,     0,     0,  3628,     0,  1383,
    1382,  1811,     0,  1815,  1820,  1816,     0,  1807,     0,  1828,
    1873,     0,  2453,  1961,     0,     0,  1961,     0,     0,  1404,
    2063,  1403,   866,   867,   865,   173,     0,     0,   177,     0,
       0,   182,   181,   174,   187,   180,  1063,   193,  3552,  3550,
    3549,     0,  3557,     0,  3532,  3568,  3566,  3567,  3570,     0,
       0,  3569,  3571,  1064,  1065,  1071,  1066,  1173,  1173,     0,
    1173,     0,     0,  1173,  2149,     0,     0,   511,  1191,  2149,
       0,     0,     0,     0,     0,  1153,     0,  1173,     0,     0,
       0,     0,     0,  1091,  1152,   632,  1041,  1090,  1092,  1104,
     507,     0,  1125,  1155,  1156,  1154,  3587,     0,     0,     0,
    1076,     0,   211,   209,   219,  3629,     0,  2120,     0,  3632,
    1253,  1254,     0,   456,     0,   116,   118,     0,   120,   122,
       0,   112,   114,  1854,     0,  1853,     0,  1859,  1863,  2006,
    2202,  2007,     0,  1994,     0,  1403,  2120,     0,  1404,     0,
    3575,  3575,   443,   445,   444,  2171,  1316,  1324,  2444,  2443,
       0,   812,   894,   892,   894,   826,   895,   864,   857,   864,
     828,   933,   840,     0,   894,   926,   930,   927,   836,     0,
     807,   928,     0,   931,   808,   834,   827,   833,   864,     0,
     823,   831,   894,   800,   835,   822,     0,   864,   837,   842,
     845,   847,   849,   864,   894,     0,     0,  3689,   807,   821,
     820,     0,   807,   864,   858,  3689,   843,   928,   941,   807,
     894,   864,   864,   303,  2010,   305,   391,  1404,   461,  3795,
    1719,     0,     0,     0,     0,  1735,   929,     0,     0,  1753,
    1736,  1737,  1671,     0,     0,     0,     0,  1728,     0,     0,
    1729,  1687,     0,     0,     0,     0,     0,  1539,     0,  1651,
       0,  1596,  1594,     0,   860,  1498,  1500,  1496,  1499,     0,
     879,  1502,     0,   841,   879,   928,  1506,  1492,  1493,  1494,
    1495,     0,     0,     0,     0,     0,  2542,   943,  1637,     0,
     956,   950,   948,   955,     0,  1443,     0,     0,  1933,     0,
    1708,     0,  1661,   535,     0,   614,   610,     0,     0,   556,
       0,   557,   553,   529,     0,  3452,  1411,  1410,     0,  3375,
    3373,  3372,  3370,  3404,  3403,  3356,  3354,  1405,  1405,   134,
    2181,  1955,  2183,  2184,  2175,  2165,  2163,  2517,     0,  2138,
    2140,  2527,  2526,  2538,     0,     0,  2120,  2133,  1110,     0,
    1111,  1122,  1124,  1322,     0,  2394,     0,  2392,  2359,  2395,
     387,   379,   374,   382,   376,   378,   377,   383,   384,   385,
     386,   380,   375,   381,   373,   372,     0,     0,     0,     0,
       0,     0,   146,     0,     0,     0,  1035,  2675,     0,     0,
     704,   706,   707,   708,   709,     0,   736,   711,   626,   986,
     986,   738,  2543,     0,   683,  2149,   500,  2010,  2010,  2010,
    2010,   657,  2010,  2010,  2010,     0,     0,  2149,  2010,     0,
       0,  2010,  2010,  2010,  2010,     0,     0,  2010,   665,   666,
     664,  2010,  2010,  2442,   506,   508,   923,   635,     0,   630,
     275,  3767,   491,   492,     0,     0,  1408,  1408,  3815,     0,
    3816,  3817,     0,  1408,  1408,  3800,  3714,   287,  3711,  3712,
    3802,  3810,  3632,     0,     0,  3702,   240,     0,   240,     0,
       0,  1769,  1768,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2446,  2448,     0,  2080,  1915,  1924,  1922,
    1959,  1971,     0,  2068,  2066,   868,   869,  2043,  2041,  2040,
    2042,  2039,  2037,  2036,  2038,  2028,  2027,  2029,  2026,  2025,
       0,  3559,  3555,  2013,  2012,     0,  1068,     0,  1067,  1072,
    1035,   626,  1174,   624,     0,  1129,  1133,  1130,   624,  2107,
    2107,  1288,  2107,     0,     0,     0,     0,  2107,     0,  2109,
    2107,     0,     0,  2107,  2107,     0,  1288,     0,   509,  1194,
    1192,  2107,  1193,  2107,     0,     0,  1288,  1142,  1086,  1143,
       0,  1087,  2107,  1288,  1109,  1288,  1288,     0,   633,   923,
    1088,  1089,   735,  1188,   218,   207,     0,     0,  1078,  1080,
       0,     0,  1081,  3631,  1054,  3634,  2120,  1259,     0,   108,
    2010,   109,  2010,   107,  2010,  1849,  1849,  1860,  2205,  2120,
       0,  1995,  2209,  2200,  1404,     0,   422,  3578,     0,  3459,
    3458,     0,  2207,     0,   824,   898,     0,   825,   870,   803,
     799,   934,   940,   938,   937,   829,   830,   809,   925,   932,
       0,   805,     0,  1037,   816,     0,   806,   848,   804,   817,
       0,   295,     0,  3744,     0,  1405,  3751,   301,   832,  3689,
     291,   814,   818,     0,   796,   300,   810,   942,   811,   813,
     941,   797,   798,  2010,  3773,   318,   317,     0,     0,   420,
     479,   873,   871,   874,   872,     0,  1602,  1603,  1725,  1961,
    1723,     0,  1730,  1731,  1685,  1627,     0,  1579,     0,  1652,
       0,  1633,  1599,  1501,  1497,  1504,   842,  1503,  1505,  1624,
    1552,  2010,  1611,  1615,  1616,     0,  1636,  2010,  1445,     0,
    1936,  1935,     0,     0,  1961,  1645,   533,   611,   528,     0,
     552,   555,     0,   516,  2531,  1405,  1405,  3362,  3360,  2256,
    1992,  2518,  2516,  2136,     0,     0,     0,  2135,  2145,     0,
    2118,  1318,     0,  1871,  2390,  2010,     0,  2357,     0,  1218,
    1219,  1220,  1222,     0,     0,     0,     0,     0,   737,  1036,
       0,     0,   710,  2546,   703,   735,     0,     0,     0,   986,
     727,   626,     0,  1035,   987,   626,   626,     0,     0,     0,
       0,  2058,  2057,   654,   647,   646,   649,   648,   651,   650,
       0,   643,   640,   652,   642,   667,     0,   655,   637,   696,
     697,   695,   661,   668,   638,   639,   645,   644,   641,   688,
     693,   691,   690,   689,   694,   692,   656,   671,   653,   669,
     498,   615,   636,  2051,  2052,  2049,  2050,   676,   675,  2053,
     673,   674,   507,   281,   279,   280,  3756,     0,     0,   276,
       0,   278,   273,   274,  3689,  3759,   249,   241,     0,   394,
     495,   493,   494,  3642,     0,     0,     0,     0,     0,  1407,
    3818,     0,   390,  3694,  3694,   394,  3831,  3801,  3713,  3803,
     157,   286,   268,   270,     0,  3764,  3697,  3827,  3697,  3632,
    1770,     0,     0,  1812,     0,  1817,     0,  1809,     0,     0,
       0,     0,  2447,     0,     0,  2454,  2456,  1973,     0,  1066,
       0,     0,     0,  1288,     0,     0,  1157,  1127,     0,     0,
       0,     0,  1098,     0,  1107,     0,     0,  2107,     0,  1159,
       0,  1158,     0,     0,     0,  1171,  1172,     0,  1951,  1953,
    1961,     0,     0,     0,  1147,  1169,  1170,     0,     0,     0,
       0,  1117,     0,  1103,  1173,     0,  1173,  1126,     0,   702,
       0,  1190,  1128,   205,   210,   220,   221,  1056,     0,  3633,
    1052,     0,  1260,  1256,  1257,  1252,   117,   121,   113,     0,
    1857,  1855,  2120,  2203,     0,   309,     0,  3582,  3576,  3580,
    2172,  2120,     0,   893,   939,   935,   936,   928,     0,   928,
    3689,   297,     0,   294,   860,   793,   782,     0,  3753,     0,
       0,   815,   327,   326,   324,   394,   314,   322,   316,     0,
     323,     0,   272,   285,   307,     0,     0,  1727,  1683,     0,
    1654,  1656,     0,   944,     0,  1932,  1926,     0,     0,     0,
       0,     0,     0,  1945,  1937,     0,  1712,     0,   613,     0,
       0,   541,   554,   560,   559,  3376,  3374,  2179,     0,  2139,
    2528,  2539,   505,     0,     0,  1123,  2393,     0,  3443,     0,
    1961,  1032,  1034,     0,     0,     0,     0,  1034,     0,     0,
     705,     0,   626,   982,   983,  1035,     0,   712,  1006,  2543,
    1035,  1035,  3168,   877,   801,   802,   807,   877,   819,  2728,
     860,   894,  2732,   841,   860,   846,   877,   742,   877,   877,
     877,   877,   877,     0,   730,   740,   783,   785,  2638,  2639,
    2640,  2641,  2643,  2644,  2642,  2545,   501,   663,  2382,   662,
     616,     0,  2442,     0,  3029,  3757,   283,     0,  3755,   284,
     250,   188,     0,     0,   216,  3806,  3820,  3804,  3819,  3697,
    3710,  1408,     0,  1408,     0,  3715,  1407,     0,     0,  3029,
    3704,  3703,     0,  3826,  3824,   159,     0,  1899,     0,     0,
    2451,  2452,     0,  2449,     0,     0,  2455,     0,  1073,  1069,
    1074,     0,  1112,     0,  1131,     0,     0,  1097,     0,  1274,
       0,     0,  1150,  1138,     0,  1093,     0,  1140,  1141,  1185,
    1095,     0,  1954,   510,     0,     0,  1102,     0,  1188,  1094,
    1119,  1100,  1132,  1189,   212,  1082,   394,     0,     0,     0,
    1255,     0,  1262,     0,  1850,     0,     0,     0,  2206,     0,
    3581,  3579,     0,  2115,  1826,   839,  1038,   838,  3754,   296,
     858,  1404,   292,   859,  2010,   304,   325,   306,     0,  3776,
     863,  1961,  1577,  1553,  1638,     0,  1942,     0,     0,  1940,
    1939,     0,  1934,  1941,   612,   609,     0,     0,   549,   567,
     563,     0,   565,   566,   588,  2120,     0,     0,  2144,  2146,
    2396,  3413,     0,  1029,     0,  1030,     0,  3413,  3413,     0,
       0,     0,  1035,  1006,  2543,   964,     0,   713,     0,   717,
     719,   744,     0,   739,   731,   752,     0,     0,   681,   497,
       0,  3758,     0,   277,   189,  3768,  3644,  3643,  1403,   208,
     217,     0,     0,  3829,  3813,  3809,  3811,  3808,  3697,   269,
       0,  3705,     0,   188,  2913,     0,  1773,  1775,  1800,  1814,
    1819,  2450,  2458,  2457,  3560,     0,  1114,   625,  1026,     0,
    1145,     0,     0,  1188,  1099,     0,     0,     0,  1139,  1160,
    1137,  1288,  1952,     0,     0,     0,  1136,  1118,  1120,  1233,
       0,   214,   188,  3635,     0,     0,  1261,  1266,     0,  1263,
    1265,  1852,  1851,  1866,     0,  1375,     0,  2432,   794,  3752,
       0,   315,   271,  1726,  1943,     0,  1944,  1947,     0,     0,
    1948,     0,   545,   547,   537,     0,   542,     0,   561,     0,
    2149,  2149,     0,  2149,  2149,  2149,  2149,   581,   589,   591,
     592,   593,     0,  2180,  2519,  2529,   994,  1961,     0,     0,
       0,     0,   996,   998,     0,     0,   732,   725,   721,     0,
       0,   968,  1007,     0,   715,     0,     0,   905,   962,   768,
       0,   771,     0,   903,   743,   745,   901,   902,   747,     0,
       0,     0,   784,     0,     0,   885,     0,   888,     0,     0,
     741,     0,   753,   884,   891,  2544,   658,   503,   682,     0,
       0,     0,  3647,   219,  3701,   240,     0,   394,     0,  3832,
       0,     0,  3765,     0,  1772,     0,     0,     0,     0,   555,
    1113,  1027,  1146,     0,  1135,  1161,   555,  1151,  1096,  1148,
    1149,  1161,     0,  1101,   213,     0,   206,   222,  3636,  3637,
    1258,     0,     0,     0,  2173,   913,   293,  1938,  1946,  1950,
    1949,   543,     0,   550,   574,   564,   570,     0,  2149,     0,
       0,  2149,     0,     0,     0,     0,     0,   558,   590,  2149,
       0,     0,  2149,     0,  1015,  1017,  1164,   995,  1019,  1018,
    1000,  1016,  1028,  1033,  1034,  3413,   191,     0,  1164,   997,
    1021,  1004,  1164,   999,  1020,  1002,     0,     0,     0,     0,
     723,     0,   967,     0,   972,     0,     0,     0,     0,   769,
     770,   906,   746,   904,   900,   896,   890,  2555,  2556,     0,
       0,     0,   780,   781,   886,   777,   778,   779,     0,   759,
       0,     0,   883,  3762,     0,  3645,     0,     0,  3807,   240,
    3698,  3696,  3698,  3695,  3706,     0,  1777,  1774,     0,  1782,
    1784,  1783,  1785,  1776,     0,  1134,  1116,     0,  1144,     0,
       0,   511,  1161,   511,     0,   215,  1264,  1858,  1856,     0,
    2433,   549,   546,   574,     0,   572,     0,   568,   562,   569,
       0,   606,   600,     0,   602,   603,   601,   598,   585,     0,
     583,     0,  1011,  1014,  2010,  1012,   144,  1166,  1165,  1001,
       0,   994,     0,   150,  1005,   153,  1003,   728,     0,     0,
       0,     0,   965,     0,   969,   970,   971,     0,   963,     0,
       0,     0,     0,   897,   899,  2490,  2489,     0,  1414,   889,
       0,   754,     0,  3760,     0,   221,  3805,  3699,  3814,  3812,
       0,  3708,     0,  1779,     0,     0,  1115,  1162,  1163,  1106,
     511,  1105,   555,  2174,  2186,     0,  2459,   544,   571,     0,
     579,   575,   577,   580,   605,   604,     0,   582,     0,   599,
     686,  1013,  1168,  1167,  1031,  1164,  1022,   729,     0,  1030,
       0,   966,     0,     0,   994,     0,   996,   998,   776,     0,
     887,   748,   748,   760,  3763,     0,  1403,   204,  3707,     0,
    1778,     0,  1786,  1108,     0,     0,     0,     0,  2445,   573,
       0,     0,   594,   587,   584,   147,     0,     0,  1030,   978,
     977,     0,     0,   974,   973,   714,   994,   718,   720,  1415,
       0,   757,   749,   751,   756,   762,   763,   761,   764,  3761,
    3648,  3709,  1781,     0,  1794,  1793,  1780,     0,  1787,  1789,
    1121,  2185,  2187,     0,  2453,   578,   576,   586,   595,   597,
     726,   994,     0,   981,   979,   980,     0,     0,   716,  1416,
     750,   755,   765,   767,     0,  1795,  1792,  1791,     0,     0,
    1788,     0,  1790,     0,  2461,   596,   722,   994,     0,     0,
     766,     0,  1797,  1796,     0,     0,  2460,     0,  2465,   724,
     976,   975,  3649,     0,     0,  2472,  3640,  2463,  2464,  2462,
       0,  2467,     0,  2469,  2470,     0,  2120,  3638,  3639,     0,
    3650,  2471,  2466,     0,  2473,  2475,     0,  2434,  3641,   394,
    2468,     0,  1403,   188,  2474,     0,  3651,  1404,  2476
};

/* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -5682, -5682, -5682, -5682,  2330, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682,  2843, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  2058, -5682,   321, -5682,   333, -5682,   332, -3782,  -626,
   -5682, -1893, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  2217, -3073, -5567, -5682, -5682,  -350,  1372, -5682,
   -5682,    75, -5682,  -379, -5682, -5682, -5682, -4452,  -542,  -772,
   -5682,    30,  4689,    42,  4694,  4695, -5682,  -106,  4026, -4408,
     530, -5682, -2984, -5682, -5682, -5682, -5682, -1937, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682,   101, -5682, -5682, -5682, -5682,
    -369, -5682, -4621,  -295, -5682, -2501,  -623,   306,   -45, -5682,
   -3760, -5682,   497, -5682, -5682, -5682, -5682, -5682,   -64, -5682,
   -5682, -5682,  -282,   729, -4565, -5682, -5682, -5682, -5682,   613,
   -5682,  1921, -5682, -2169,  3725, -5682, -5682, -5682, -5682, -5682,
   -5682,  2287, -3053, -5682, -5682, -5682,  1030, -5682, -2806, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  -424, -5682, -2068,  2016,
   -5682,  2074, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -1172, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  3397, -5682,  4653, -5682, -5682,  1238, -5682,  3292, -5682,
    3290,  3296, -2781, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  -155,  -151,   136,   873,  1392, -5682, -3935, -5682, -5682,
      44, -5682, -5682, -5682, -5682, -5682,  1125,   258,  1128, -5682,
     675,  3069, -2849, -5682, -5682, -5682, -5682, -5682, -5682,  -536,
     -52,  -661, -5682, -5485, -5682, -5029, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -4265, -5682, -5682, -5682,  -791, -5682,
   -5682,  -748, -5682, -5682, -5682, -5682,  -417, -5682, -5682, -5681,
   -5682, -5682, -5682,   -46, -5682,  2795,  4099, -1902,   465,  -572,
   -5682, -3804,   902, -4109, -3922, -5682, -3657, -5682, -5682, -5682,
    -300, -1291, -1260, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
     430,   235,   903, -4401, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -4397, -4390,    96, -5682, -5182, -5682,   608, -5682, -3833,
   -5682, -5682, -5682, -5682, -5682, -5682,  -756, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -4004, -5682, -5682,  -584,  -593, -5682,
    -484, -3280, -5682, -2761,  2093, -4912, -5682,  -475,  -621,  -473,
    -472,  -471, -5682, -2265,  1227,  1345, -5682,  2236, -5682,  -212,
   -3304, -3263,  1490,  -890, -3528, -3210,  1285, -3272, -3554,  1307,
   -5682,  -433, -5682,  -915, -5682, -3959, -3794, -5237, -5682,  -682,
   -2785, -3186,  -483, -5682, -5682, -1726, -3243, -5682,   860, -3887,
   -3982,   375,  1745, -5682, -5682,  1214, -5682, -1737,  1213, -5682,
   -5682, -5682,  1222, -5682,  -746, -5682, -5682, -5682, -5682, -4010,
   -5682, -2506, -4374, -5682,  5469,  5473, -3534,  -713,  -712, -5682,
   -5682, -5682,  -237,  2349, -5682, -3544,  -500,  -513,  -508, -3171,
    -123, -5080, -5662, -3941, -5086, -3820,   857, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,   158,   163,  1599, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682,   961, -3584, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -4944, -3195, -5682, -5682,   495, -3978, -4330, -4023,
   -4014, -4384,  4058, -5682, -5682, -5682, -5682,  4145, -3332, -3930,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3643,  1431, -5682,
   -5682,  2380, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  -290,  2390, -5682, -5682, -5682, -5682, -5682,  2848, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682,  -439, -5682, -5682,
   -5682, -5682, -5682,  -105,  3498, -5682, -5682, -5682, -5682,     5,
   -5682, -5682, -5682, -5682,  2540, -5682, -5682, -5682, -5682,  3026,
   -5682, -5682, -5682, -5682, -5682, -5682,  2186, -5682,  2761, -5682,
   -2465, -5682, -5682,  1424,  -157, -5682, -5682,   -38, -5682, -5682,
   -5682, -5682, -5682,    41, -5682, -5682, -5682,  5471, -1563,    11,
     -60, -5682, -5682,     2, -5682, -5682,  4200,  -519,  2591,  -754,
    4837, -5682, -5682, -5682, -5682, -2523,  2455, -5682,  4258, -5682,
   -5682,  4439,  1341,  4219,  2336,   952,  2551, -1689,  -164, -2930,
   -2993, -5682,   -42, -4333,  1261, -5682,  1558,   601, -2454, 10629,
   -5682, -1454, -1565, -5682, -5682,   -41, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682,  2657,  2661, -5682, -5682,  3950, -5682,
    2594, -3603, -5682, -5682,  -888, -5682, -2543, -5682, -5682, -5682,
    2597, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    1784, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682,  3892, -1622, -5682, -5682,  4031,
   -5682,  1883, -5682,   872, -5682, -5682,  1886, -5682, -2780, -5682,
   -5682, -1600,  -694, -5682,  4028, -5682,  4055, -1202, -4521, -1758,
    -591, -5682,  -361, -5682, -5682, -5682, -5682, -5682, -5682, -3333,
    -693,  -689, -5682, -5682, -5682,  3650, -5682,  4299, -5682, -5682,
   -5682, -5682, -5682, -5682,  3658, -5682, -2537, -5682, -2555,  4300,
    4302,  4303, -5682,  4304, -5682, -5682, -5682, -1686,   541, -5682,
    1001, -5682, -5682, -5682, -5682, -5682, -3104, -5682,  -233,   787,
    -231, -4349, -1579,  1378, -5682, -5682, -1903,  3676,  4074, -1327,
   -5682,  2967, -5682,  3652,  1838, -5682,  2396, -5682,  1129,  1131,
   -5682, -5682,  1847, -5682, -5682, -5682, -5682,   444,  -227, -5682,
   -5682, -5682,   -31,   828, -2064, -5682,   452, -3223,  4305,  -737,
   -5682,  2394, -1972, -3173, -1218,   915, -1265,  2402,   436,  4908,
    -353, -5682, -5682,  4289,  1029, -3652, -2746, -5682,  -987, -1584,
    1628,  -995,  1630, -3042, -2959, -4814, -5682, -2335,  1374, -5682,
   -5682, -5682, -5682,  1147, -5682, -5682, -5682,  3002, -5682,  5593,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    -454, -1181, -5682,  4243,  3603,   -57,  -153,  5614,   -32, -5682,
   -5682,   -26, -5682, -5682,  5010, -2041, -5682, -5682,  4443,  3552,
    2879, -5682,  1533, -5682, -5682, -5682, -5682,  1281, -5682, -5682,
     143, -1110,  -580,  2401, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,   823, -5682,  1298, -1882, -5682, -5682, -5682, -5682,   -25,
   -5682, -5682, -5682, -5682,  1303, -5682,  -571, -5682,   -19, -5682,
   -5682, -5682, -5682,  4881, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -4097, -5682, -2504,  4883, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682,  3183, -5682, -5682, -5682, -5682, -5682, -5682,  3907,
    5042,  5045, -1617, -5682,  -944,  3184,  2602,  -942, -5682, -5682,
   -5682,  4324,  5047, -5682, -5682,    34, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  3134,   100, -5682, -5682,
   -5682, -5682, -5682,   475, -5682, -5682, -5682, -5682,  3806, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
    4210, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682,  1559,  -554, -5682,   740,  -596, -5682,   336,
   -5682, -5682, -5682, -5682, -5682,  -663, -5682, -5682,  -669, -5682,
   -1384,  4789, -1290,  -578, -1746, -3312, -5682,     4, -5682, -5682,
   -5682, -5682,  3190, -5682, -5682,  3079,  2929, -2538, -5682,   505,
   -5682, -5682, -2667,  -864, -1666, -3495,   284, -5682, -5682,  -612,
    2829,  9978, -5682, -5682,    -9,  1024, -1255, -5682, -5682,  2875,
      -5,  -832,  -145,  -744,  -768, -1083, -5682,  4835, -5682, -5682,
   -5682,  -649,  -642,  -590,  2734,  1607,  -252,  -653,  7235,  9654,
    -579, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682,  2639,  2642, -5682,  5076, -5682,  3567,  3285, -5682, -5682,
   -5682,  2645, -5682, -5682, -5682,  5081, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  2647,  2658,  2663, -5682,
   -5682,  1893, -2362, -5682, -5682, -5682, -1912,   190, -5682,  3607,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682, -5682,  3812,
    -575,  4601,  -561,  4020,  5090,  4626, -5682,  4287, -5682,  4293,
   -5682,  1687, -5682,  -959,  2722, -1420, -3137, -5682, -5682,  3038,
    1218, -5682, -5682, -2540, -3120, -5682,  2566,  1119, -5682, -5682,
     294, -5682, -5682, -5682,  1690,   194,  5068,  4507, -5682, -5682,
   -5682, -5682,  5685,  2357, -5682,   373,  5712,  5714,  5715,  -163,
   -5682, -3194, -5682, -4381, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -5682, -5682, -5682,  1810, -5682, -5682,  3150,
   -5682, -5682, -5682,  2808, -5682, -5682, -5682, -5682, -5682, -5682,
   -5682, -5682, -5682, -1509,  4880, -5682,  1637, -2629, -3872, -5682,
   -5682, -4244,  -318, -3906, -5682, -4412, -5682, -5682,   837, -5682,
   -5682, -5682, -5682, -5682,  -570, -5682, -5682, -5682, -5682, -5682,
    3626, -5682,  2355, -5682, -5682, -5682, -4500, -5682, -5682, -4896,
   -5682,   831, -5682, -5682, -5682, -5682,  -555, -5682, -5682, -5682,
   -5167,  -918,    26, -5682, -5682, -5682, -5682, -5682, -5682, -5682,
     842,   848, -5682,   851, -5682, -4548, -5682, -5682, -5682, -5682,
   -5682, -5682, -4100, -5682, -5682, -5682, -5682, -5682, -5682, -5682
};

/* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
       0,    69,   751,  1960,    70,    71,    72,    73,    74,  1926,
      75,  1274,  2586,  1276,  1895,  2589,    76,   720,    77,  2090,
    2787,  2788,  4650,  4651,  4644,  4645,  4647,  4648,  2789,   832,
     833,  2632,  2633,    78,  2650,  3985,  3228,  1962,  4901,  2644,
    5274,  1967,  4904,  1968,  4905,  2642,  3998,  4527,  1972,  1973,
     761,  3986,  3317,  3318,  5825,  1335,  3224,  3326,  3327,  2655,
    4512,  4630,  5724,  4634,  5881,  6026,  5829,  3346,  5102,  5725,
    5726,   655,  1347,   650,   651,   652,    79,   796,  2057,  5395,
    5366,  5367,  2735,    80,   825,  2080,  3353,  1451,  2081,  2754,
    2755,  4983,  4984,  5392,  5531,  5356,  5357,  5358,  5359,  5360,
    4510,  4960,  5361,  5532,  4519,  2871,  2087,  5169,  5161,  5162,
    4727,  3437,  3438,  4735,  3439,  5183,  5188,  3403,  3404,  4161,
    3440,  5525,  5526,  5527,   675,  1145,  5528,    81,    82,   676,
     684,   677,  1142,  2443,  1143,    83,    84,  1920,   718,  2608,
    2609,  2610,  2611,  3947,  3187,  3941,  3942,  4894,  5170,  3442,
      85,   656,   928,   929,   930,   931,  2192,   932,  2873,  3459,
     933,  2865,  3428,   934,   935,   936,   904,   828,  2818,  2876,
    3460,  2819,  3405,  2877,  2189,   937,   938,   939,   940,   941,
    1559,   905,  2158,  3414,  4175,    86,   632,   829,  1453,  2084,
     830,  2085,  3357,   831,  2082,  1456,  3464,  2128,   859,  1488,
     942,  1151,  3465,   943,  2195,  2197,  2194,  3463,  4748,  2196,
      87,   666,   694,   654,  1486,   682,  4964,  5373,  4495,  4959,
    4496,  5340,  4430,  4953,  4954,  4955,  5451,  3171,    88,   669,
    1127,  1749,  2435,  3858,  3047,  3049,  2436,  3857,  4366,  4367,
    4368,  3045,  3046,  5561,  3051,  3855,  5778,  6161,  5911,  5912,
    3847,  5916,  4375,  4830,  4831,  4832,  5242,  5563,  5784,  6047,
    5917,  6168,  6045,  6164,  6046,  6166,  6301,  6251,  6252,  6057,
    6179,  6180,  6256,  6302,  5927,  5928,  5929,  6347,  6348,  5930,
    3851,  3852,  5558,  4826,  5641,  3215,  3216,  2052,  5425,  1285,
      89,  4497,  4614,  4498,  4499,  5310,  6065,  4501,  4502,  5987,
    4503,  4504,  4505,  6259,  1825,  5336,  5322,  4525,  5468,  4506,
    4909,  4910,  4911,  4912,  5953,  6096,  5955,  5956,  6089,  6201,
    6088,  4913,  4914,  5282,  5813,  5290,  5062,  4915,  4916,  4917,
    5297,  5624,  5815,  5811,  5964,  5965,  6321,  6322,  5980,  6283,
    5981,  6328,  6361,  6362,  5966,    90,   668,  1698,  6112,  6113,
    6114,  5513,  5625,  5514,  5515,  5516,  4226,  4227,  4714,  4228,
    4229,  4230,  4231,  4232,  4233,  4234,  4235,  4236,  4237,  5174,
    4717,  4257,  5138,  5139,  4251,  4252,  4266,  4713,  4267,  4261,
    5982,  5983,  5135,  4718,  6214,  4686,  5967,  5984,  5969,  4702,
    1774,  1775,  3265,  1789,  1790,  3097,  3098,  2055,  4703,  4755,
    4704,  5178,  4334,  5225,  4340,  4341,  4342,  3809,  3810,  3811,
    3812,  3813,  3005,  5970,  5597,  5951,  6091,  6094,  6208,  6313,
    5291,  4918,  5295,  1244,  4919,  4920,  6066,  6078,  6082,  6067,
    6083,  6079,  5807,  3219,  6068,  6069,  6070,  6085,  6081,  3976,
    6071,  5579,  5940,  5580,  5581,  5278,  5152,    91,   164,  4102,
    1420,  2721,  1422,  1432,  3350,  2747,  2746,  1435,  1434,  2739,
    4070,  4585,  5039,  4101,  3347,  4106,  5477,   794,  4616,  5871,
    5699,  5879,  5701,  4617,  4869,  4618,  5856,  6010,  4619,  5720,
    5877,  6022,  4870,  4871,  4620,  4621,  4622,  6151,  6186,  6187,
    6188,  5048,  1869,   808,   809,  1440,  1441,  1442,  2812,  5472,
    5074,    92,  3210,  2626,    93,  1302,  1303,  1304,  1938,  1939,
    2629,  2630,  3968,  4455,    94,  1269,  2582,  1928,  2618,    95,
    1288,  3201,  3202,  3203,  3962,    96,  1448,  2076,  2077,  2751,
    4113,  4642,  5107,  5485,  5732,  5481,  5888,  5889,    97,   836,
    1459,    98,   634,  2099,  2100,  2101,  2791,    99,  1568,   172,
     100,  1758,  1755,  2449,  2450,   101,  1268,  1882,  1883,  1884,
    1885,  3167,   102,  2166,  2835,  2836,  2837,  2838,  2577,  3931,
    2578,  2579,  3176,  4181,   103,   775,  1415,   104,   774,  1414,
     105,   106,   693,   746,   686,  1765,   108,   109,  4431,  2237,
     111,   781,   779,  1087,   113,  1407,  1403,   114,  2238,  1088,
     771,   772,  1355,  1171,  3248,  3249,  2110,  2111,  2690,  2677,
    1172,  1173,  1384,  2037,  2708,  2461,  2462,  1865,  2463,  2760,
    3104,  1454,  5659,  5375,  4385,  6280,  1597,  1498,  2695,  1272,
    1090,  1091,  1092,  1709,  1710,  1725,  1093,  1719,  2386,  4310,
    4797,  4798,  4799,  4800,  2324,  2325,  2430,  1094,  2314,  2315,
    2316,  1095,  1096,  1097,  1098,  1099,  1100,  1101,  2307,  2308,
    2309,  1102,  1103,  1104,  2425,  4292,  4293,  4779,  3040,  3041,
    3042,  1105,  2902,  4276,  2913,  2914,  2266,  1106,  1107,  1108,
    1109,  1110,  3833,  1111,  4356,  4030,  1112,  1569,  2201,  2264,
    4767,  4281,  5198,  4769,  4770,  5202,  2206,  2890,  3731,  3732,
    3733,  2328,  2329,  1618,  1619,  1586,  1587,  1356,  4993,  1357,
    5402,  5845,  5846,  6006,  6232,  6143,  6144,  6336,  6365,  6337,
    6338,  6339,  1358,  2663,  4528,  1359,  1360,  1361,  4015,  4016,
    4994,  4532,  4996,  4536,  1998,  1999,  2002,  2003,  1362,  1363,
    1364,  1365,  1986,  1366,  1367,  3252,  1368,  2682,  5490,  4656,
    4657,  5737,  5736,  4658,  4149,  4150,  3386,  3387,  4438,  4439,
    4440,  3261,  2260,  2261,  2336,  2171,  2172,  2173,  2207,  1376,
    2013,  2699,  3271,  2015,  3269,  4025,  3273,  4031,  4032,  2417,
    3030,  3829,  3032,  4818,  5232,  5233,  5553,  5766,  5767,  5772,
    4625,  5448,  5449,  2803,  1385,  2716,  3288,  4028,  1827,  1828,
    1387,  2019,  2703,  3277,  1829,  2026,  2027,  3282,  3395,  1388,
    1389,  1401,  1406,  1392,  4660,  1390,  2862,  4581,  5186,  3814,
    4561,  3797,  4558,  4875,  5348,  2230,  2231,  5303,  4144,  1393,
    2719,  4042,  4043,  4044,  1372,  1373,  2008,  2009,  2010,  1394,
    1374,  2691,  4021,   115,   713,   116,  2124,   847,  1482,  2123,
    3183,  1461,  3928,  1466,  1467,  1476,   802,   653,   117,   657,
    4176,   118,   697,  3927,   906,  2736,  1527,  1877,  1528,  2571,
    3162,  3163,  4432,  4865,  4433,  4858,  4859,  4434,  1257,  5257,
    5258,  1418,  4066,  4067,  4061,  2564,  3157,  1258,  1870,  3921,
    2561,  3922,  2562,  2591,  3923,  5132,  5742,  6159,  2558,   119,
     691,  4419,  5785,  3915,  3916,  6243,  6244,  1255,   120,   636,
    2104,   843,  2797,  1464,  1469,  1470,  4666,  2108,  5119,  2798,
    5492,  4157,  4665,  2114,   844,   845,   121,   734,  3211,  1308,
    1849,  1850,  1851,  2545,   122,   688,  1245,  3910,  4416,  2531,
     672,  5932,  1832,  1248,  1833,  2527,  3139,  1813,   123,  1412,
    1410,   823,   124,   125,   787,   173,  2042,   126,   127,  1277,
    1915,  2605,  3938,  3939,  4443,  1916,  1917,  3184,   128,   701,
    1263,  3180,  4876,  4877,  5267,   129,   725,  1292,  1293,  1932,
    1930,  3206,  2621,   130,  2437,   131,   658,   909,  1531,  1532,
    2164,   132,   728,  1297,   133,   134,   911,  4182,  6035,  6246,
     662,  2168,  1536,  5341,  4542,  5003,  5004,  5006,  5415,  5416,
    6298,  6388,  6399,  6395,  6402,  6403,  6406,  6414,  6415,  1113,
    1315,  1316,  1114,  6117,  1115,  1116,  1117,  2239,  1261,   696,
    1873,  2568,  1874,  5252,  5568,  2569,  2155,  2156,  1875,  4860,
    4861,  3069,  3270,  1118,  3917,  5279,  1462,  1471,  1280,   617,
    1119,   618,  1120,  1121,   804,  1317,  2005,  2845,  1194,  3082,
    1122,   945,  1428,  1756,  2065,  2066,  2846,   620,  3083,  1195,
    3735,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,  3742,   136,   687,  1203,  1786,  1794,  2480,  1784,  2492,
    3119,  2494,  2495,  3124,  2496,  1251,  2467,  1785,  3108,  4402,
    4401,  2493,  3902,  4848,  4847,  2497,  2488,  3898,  3878,  3092,
    4392,  5246,  5245,  2475,  2474,  2473,  2483,  2484,  2485,  2486,
    3895,  3103,  3105,  3887,   137,   912,  2177,   665,  1538,  1539,
    2859,   138,   690,   139,   719,  1282,  2614,  3193,  3194,  3957,
    4447,  3958,   140,  1156,  1157,   141,   895,  3222,  2822,  2117,
    1431,   897,  2118,  2139,   899,  1490,   900,   901,   902,   903,
    4091,  3339,  3340,  2826,  2120,  2067,  2457,  3332,  4571,  2068,
    4085,  4086,  4572,  2744,  5497,  4098,  3343,  5129,  4166,  5498,
    5499,   142,   705,   143,  5368,   712,  1271,  1892,   144,   145,
     146,   147,   780,  1397,  1174,   165,   166,   167,   168,   812,
     813,  3349,  4108,  4637,  4638,  5479,  6409,  6410,  5653,  5827,
    2654,  3989,  6126,  6364,  6396,  6419,  3994,  3995,  3996,  3233,
    3234,   148,  1322,  1318,   745,  1958,  1952,  1954,  2640,  3214,
     149,   150,   151,  5166,   152,  1557,  2831,  2088,  4513,  6132,
    6130,  5673,  6228,  4520,  5995,  4986,  5394,  5671,  4975,  4976,
    4977,  5386,  3743,  3744,   631,   950,  3453,  3970,   861,  5164,
    1260,  2565,  2126,   951,   952,   953,  5167,  3454,  5363,  5364,
    5365,  5396,  5672,  3230,  3988,  5369,  2185,  2872,  3455,  4745,
     954,   955,   956,   957,  2198,   958,  1549,   154,  1880,  4978,
    4979,  5378,  5832,  5376,  5831,  4980,  5664,  5998,  5662,  5997,
    4969,  4970,  4981,   155,  2652,  4001,  3999,  3991,  3997,  5666
};

/* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
   positive, shift that token.  If negative, reduce the rule whose
   number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     619,   811,   112,   704,   135,  1192,  1243,  2445,   747,  1555,
     807,   110,  2229,  2592,  2412,  1354,   817,   806,  2613,  1273,
    2738,   678,  3153,  2362,  1855,   678,   153,   667,  2043,  3160,
     678,  1430,  2270,   692,  1201,  2637,   708,  1386,  1196,  2236,
    2184,   107,  1386,   927,  1386,  1197,   715,  3977,  2804,  3289,
    2016,  4045,   723,  2636,   800,  1429,   727,   716,  2301,  1150,
    2718,   685,  3131,   724,  3441,  1757,  4039,  4140,  2290,  4159,
     748,  3164,  2345,  3175,  1776,  1193,  1779,  1780,  4020,  4623,
     896,  1541,  4539,  1546,  1793,  1547,  1548,   949,  4624,  1580,
    2028,  2365,  1552,  2028,   898,  4526,  3909,  1198,  2136,  3876,
    3467,  3468,  4961,   949,  1299,  4035,  3223,  1306,  1202,  4046,
     896,  2557,  3172,  3746,  4988,  3747,  2006,  1206,  2032,   790,
    2875,  3748,  2515,  2516,  1158,  4516,  3117,  1947,  3356,  2053,
    3257,  2444,  3250,  3250,  3940,   818,  3730,   112,  3870,  3871,
    3730,   819,  2112,  2753,  5349,  1620,   792,   820,   821,  2723,
    1981,   795,   797,  3251,   822,   797,  4110,   805,   788,  4019,
    2054,  2397,  2398,  2399,  2400,  2401,  2402,  2403,  2405,  2407,
    2408,  2409,  2410,  2411,  4270,   112,   107,   135,  5098,  5185,
    4615,  1329,  4508,  1330,   110,  4454,  5045,  1332,  1333,  4998,
    5046,  5586,  1694,  1696,  1697,  4265,  5585,  5047,  3849,  2795,
    4265,  2522, -1043, -1043,  5050,  1739,  5052,  4428,   827,  5064,
   -3436, -3436,  5562,  1419,   107,  4253, -2553,  4256,   681, -2847,
   -2847,  2538,  4097,  5082,  3919,  4427,  4428,  4254,  4640,  2604,
    5483,  2860,  1555,  4701,  4701,  5175,  4701,   710,  -502,  -502,
   -2554,  4701,  2810,  3796,  4069,  2551,  2552,  4701, -3437, -3437,
    3993, -1902, -1902,  3250,   726,  -400,  -400,  2377,  5106, -1902,
   -1902,  1404,  2169,  4022,  4023,  2385,  2387,  2078,  2390,  2391,
    1259,  4260,  4756,  3388,  2860,  1661,  6002,  1680,  2860,  1823,
   -3514,  2790,  4756,   707,  2222,  2223,  2224,  2884,  2225,  4756,
    2226,  5533,  2227,  1416,  1684,  2049,  1814,  4005,  2169,  2860,
    1857,  1856,  3397,  3329, -2702,  2860,  2169, -1902,  2860,  1704,
    2686,  4258,  2222,  2223,  2224,  6027,  2225,  1705,  2226,  5934,
    2227,  2860,   732,  1416,  4125,  6167,  1706, -3436,  4500,  4500,
    2860,  1416,  1704,  1726,   949,  4866,   949,  2631,   949,   949,
    1705,   663,  2860,  2860,   659,   949,  4059,  1704,   949,  1706,
    1956,  1704,  2222,  2223,  2224,  1705,  2225, -2718,  2226,  1705,
    2227,  2860,   816,  5393,  1706, -3437, -3497,  3002,  1706,  1438,
    1726,  2184, -3436,  2860,  3418,  4678,  5907,  4760,  1778,  1416,
   -1902,  4736,  3469,  1460,  4761,  5626,  4721,  1704,  2742,  4722,
    4957,   670,  3908, -2719,  1726,  1705, -1902,   810,  2119,  1727,
    1728,  4141,  1452,  5301,  1706,  3960,  3961,   663,   789, -2720,
   -3437,  1726,  4163,  4971,   948,  5304,  5306,  1819,  1504, -3501,
    2811, -1902, -2149,  1727,  1728,  4336,  1729,  1505,  1405,  2133,
     948,  5389,  3043,  1416,  5308,  1200,  4280,  1416,  3186,  1704,
    1727,  1728,  5814,  1816,  4683,  4500,  5326,  1705,  1338,  1704,
      32,  1821,  1416,  4268, -3500,  3334,  1706,  1705,   776,  4972,
   -1902,  3217,   765,  1729,  1704,  1416,  1706,  4243,  2701,    32,
    1416, -1902,  1705,  4429,   729,  1711,  1712,  1713,  4337,  1714,
    3052,  1706,  2950,  6149,   846,  1707,  4111,  1729,   849, -3498,
     851,   777,   852,   853,  5705,   854,   855,   856,  4264, -1902,
    4661,    39, -3323,  5795,  1729,  5843,  1558,  1726,  1707,  1704,
     894,    41,  1730, -2847,  4719, -3499,   674,  1705, -3436,  4271,
      39,  1704,  4082,  1707,  6147,  4336,  1706,  1707,  1149,  1705,
      41,  2169,  6204,  2169,  1378,  1176,  1727,  1728,  1706,  3059,
     894,   814,  1704,  1704,   707,  2646,  5296,  4000,  2939,  1730,
    1705,  2212, -1902, -3504,  3330,   702, -3437,  5861,    32,  1706,
    1706,  1267,  2729,  1707,  4679,  2431,  2638, -1902,  1704,  5280,
    4142,   949,  1770,  1730,  5968,  1283,  1705,  1989,  4337,  1380,
    3335,  1300,  1309,  1310,  2856,  1706,  2050,  1704,  6234,  4973,
    1730,  2481,  1922,  1708,  1395,  1705,  1715,  1475,  1354,  2900,
    1729,  5390,  1345,  1866,  1706,  4065,  3936,  6307,  2821,    39,
    4725,   660,  1852,  4691,  1854,  1707,  1708,   721,  5185,    41,
    3908,  6349,  1704, -1902,   834,  1707,  2432,  1176,   769,  4693,
    1705,  1708,   778,  2919,  5377,  1708,  1830,  2378,  2857,  1706,
    1707,  5377,  3100,   683,  4291,  5212,  6352,  5908,   689,   860,
     805,  1446,  4683,  1396,   770,  3146,  1867, -1902,  2468,  1831,
    6205,   948,  5068,   948,  1301,   948,   948,  6375,  4726,  5518,
    1447,  1708,   948,  2478,  1147,   948,  4224,  1386,  3154,  2455,
     805,   698,  -734,  3992,    32,  1707,  1730,  6235,  4597,  2184,
    1694,  1696,  2064,  4615,  2109,  1264,   722,  1707,  1423,  4010,
    5424,   805,  3250,  4014,  1484,  1485,  5862,  1822,  1480,  3221,
    1148, -1902,   703,  1286,  1281,   805, -1902,  2379,  1707,  4756,
    1771,   834,  4004,  1708,   834,   839,  2513,  3014,  6102,  2028,
    4382,  4383,  3278,  1708,  4265,    39,  2234,  1923,  6206, -1902,
    4165,  4701,   707,  1477,  1707,  1478,  3890,  1328,  1708,  5036,
    2213,  4720,  1890,  1620,  2704,  4756,  3389,  6294,  1817,  1963,
    2053,   840,  1966,  1707,   790, -3323,  1969,  1970,  1971,  4701,
     664,  1974,  1975,  4701,  2064,  1378,  5878,   174,   175, -1902,
    4701,  1409,  1402,  4578,  3337, -3436,  2672,  3263,  3008,  3009,
   -2210,  2054,  1820,  1708,   805,  3937,  3053,  2687,  1707, -2210,
    4090,   680,   699,  5037,  4517,  1708,  2380,  3015,  4371,  4695,
     805,  1439,  5909,  4756,  5147,  1887,  2898,  4029,   663,  1449,
    1380,  4112,  3003, -3437,   837,  6145,  1708,  1708,  1339,  4974,
    5069,  6133,   790,  3344,  1220,  1957,   664,  1436,  3044,  1472,
    5389,  1474,  4500,   858,   797, -2730,   797,  5342,   805,  4148,
    5176,  1483,  1708,  2414,  2482,  1704,  6426,   959,  4250,  1382,
    1704,  2445,  5533,  1705,  5649,  2829,   671, -3514,  1705,  2717,
    5380,  1708,  1706,  2519, -2733,  2521,   949,  1706,  2525, -3624,
    1253,   704,  1479,  4687,  1481,  4689,  3859,  3397,  1404,  2446,
    2533,  3218,  4708,  2536,  3384,  2216,  3016,  2539,   948,  1266,
    5972,  4695,  5858,  3401,   896,  2433,  1708,   790,  5218,  1545,
    4723,  4681,  4682,  4364,  4069,  5594,  2550,  2793,  1550,  4696,
    4734,  1553,  3173,  2554,  2555,  2556,  1220,  6150,  1815,  4712,
    6163,   112,  3147,   135,  1560,  4715,  2743,  3174,  3022,  3023,
     110,  3026,  3027, -1902,  4724,  2098,  4728,  4729,  4730,   733,
    4732,  4733,  4179, -3497,  4398,  5859,  4399,  4400,  4500,  5910,
    4737,  4738,  4739,  4740,  4741,   661,  2098,  2389,  4921,  4641,
     107,  5484,  2339,  1704,  4260,  4684,  1704,  4258,  4582,  4258,
    2170,  1705,  2861,    68,  1705,  2444,  4258,  6152,  3331, -2559,
    1706, -1043,  1383,  1706,  -115,  2456,  -115,  3255,  3256, -3436,
    4258,  3383,    68,  1279,  4258,  2091, -3501,  4661, -2847,  4378,
    5748,  3993,  6212, -2560,  4258,  6209,  2170,  6211,  5675,  1429,
    1893,  4338,  1417,   747,  2170,  2861,  5823,  -502,  2121,  2861,
    1768,  1707,  1662, -2702,  1681,  5501,  1707, -3437,  4024,  1777,
   -1902, -3500,   894,  3392,  -400,  4250,  5839,  1791, -1902,  2228,
    2861,  1685,  1417,  1369,  1681,  5678,  2861,  5679, -2702,  2861,
    1417,  2046,  -119,  5045,  -119,  5070,  4623,  5046,  2537,  2098,
    3012,  -111,  2861,  -111,  5047,  4624, -3498,  2300,  1826,  2834,
    1702,  2861,  5064,  2743,  1891,  1699, -2718,  1701,  4083,  1506,
    2901,    68,  1429,  2861,  2861,  1733,  1734,  1735,  1736,  1737,
    1738,   730, -3499,  4609,  3908,  3004,  2434,  2920,  1417,  2921,
    5030, -2718,  2861,  1192,  2199,  1354,  2178,  6319,  5272,  6268,
    6269,  4338, -2719, -3530,  2861,  3892,  4921,  2186,  1326,   663,
    6275,  1732,  1733,  1734,  1735,  1736,  1737,  1738, -2720,  1708,
   -3504,  1349,  1201,   805,  1708,  2951,  1196, -2719,  6061,  1707,
    4339,   731,  1707,  1197,  5674,  5352,  1733,  1734,  1735,  1736,
    1737,  1738,  1417, -2720,   663,  5071,  1417,  4615,  2858,  1555,
     805,  1731,  1732,  1733,  1734,  1735,  1736,  1737,  1738,   805,
    2827,  1417,   805,  1193,  2808,  4063,  1979,   805,  2863,  5185,
    6308,  1792,  1853,  3101,  1417,   896,  1537,  2370,   700,  1417,
     842,  4697,  5830,   948,  6382,  1198,  2477,  2906,  3102,  2469,
    6309,  1716,  1717,  1718,  5038,  2743,  1202,    68,   805,  3120,
    2922,  2064,  2923,  1834,  3874,  1206,  4103,  2501,  2012,   834,
     702,   834, -2547,  1383,  1354,  4099,  5215,  5727,  5349,  5349,
    5217, -1902,  1797,  1924,  4835,  1354,  1354,   664, -3530,  2170,
    2092,  2170,  3906,   817,  2381,   633,  1876,  1708,   790,  6062,
    1708,  5089,  4265,   790,   790,  2912,  4265,  1731,  1732,  1733,
    1734,  1735,  1736,  1737,  1738,  2049,  1860,  2991,  4521,  2992,
    1925, -2210,   635,  1864,  2069,  2601,  2799,   835,  3935,  1935,
   -2210,  2517,   747,  4697,  6281,  3396,  3933, -3333,  3821,  4500,
    3822,  1949,  4500,   790,  1948,  2899,  2622,  1893,  4948,  2445,
     839,  4557,  4560,  3964,  2723,  4560,  4557,  4854,    10,  4403,
    5007,  3796,  3796,  5010,  1961,  2572,  2907,  3143,  5834,  2580,
    5836,  2332,  2333,  4989,   894,  2452,  5779,  4522,  2073,  4691,
    2523,  6333,   169,  4286,  3017,  4287,   840,   790,  1988,   679,
    4580,  2053,  1729,  1176,  1699,  4693,  1701,  4543,  1704, -1862,
    3094,  3764,  1964,  1965,  3056,  3057,  1705,    17,  2011,   169,
    5238,  4546,   818,  2725,  5011,  1706,  4552,  3116,   819,  4487,
    2916,  3121,  2054,  1176,   820,   821,  2035,   703,  6310,   896,
    3099,   822,  4435,  3940,  2875,  2648,  2649,  4966,  2092,  4553,
    3407,  5820,  6311,  4962,  2659,  2660,  2661,  2044,  2045,  1402,
    2048,  1507,   112,  2927,   135,  5833,  4114,  4523,  2058,  1270,
    2028,   110,  2028,  2028,  2202,  -923, -1288,  -923,  4949,   790,
    2053,   805,  4500,  2444,  3834,  3837,  3840,  3841,  1730,   797,
     790,  1524,  1413,   790,  6334,  3281,  1514,  3284,  3285,  3827,
    3828,   107, -3530,  2049,   790,  2236,  4533,  4534,   790,  4726,
    2106,  2054,  3242,  4842,  3250,  3250,  3853,  1919,  3243,  5432,
    2722,  2116,    32,  5598,   805,  2619,   805,   790,  1929,  3848,
    5213,   709,  6136,  1524,  4529,  4530,  4158,  4643,  1704,  3173,
    4104,  2093,  4855,  4653,  1378,  2581,  1705,  4100,  1379,  3065,
    3066,   702,  2816,  5463,  3174,  1706,  1861,   805,   949,  1704,
    6064,  5661,  5663,   805,    37, -1862,  4394,  1705,  2853,  1529,
    4494, -1977,  2847,    39,  6383,  4756,  1706,  4756,  3893,  2848,
    5728,  3914,  4801,    41,  1707,  2830,  4406,  2180,  1835,  1380,
    4409,  5780,  5781,  1200,   857,  1381,   949,  1879,  5072,    42,
     747,  3730,  1886,  4064,  1704,  3894,  6282,  1176,   664,  2724,
   -3333,  2138,  1705,   790,   805,  3820,  2050,  3823,  2078,  4569,
    3907,  1706,   927,  1150,  4258,  2094,  3133,  2095,  1382,   949,
    3134,  2849,  3136,  1704,  6129,  3419,  4973,  6128,  1593,  1594,
    1595,  1705,  2854,   664,  5999,  2413,  3141,  4921,  1927,  1750,
    1706,  2855,  3275,  1515,   112,  1862,  2518,  1704,   170,  3149,
    3150,  4350,  1699,  4351,  1701,  1705,   949,   949,  2917,  5013,
    5745,  1863,  5747,  4594,  1706,   894,  5718,  4695,  3021,  1508,
    4670,  4671,  4151,  3204,  1643,   702,  1369,  4967,  2334,  2093,
    3025,  2335,  1708,  2883,  5782,  4696,   841,  4701,  1704,  4654,
    1720,  5496,  1220,   907,   171,  2524,  1705,  1294,   703,  2758,
    1370,  4404,   790,  2512,  1707,  1706,   790,  2096,  2098,  2814,
    2815,  2174,  2174,   790,  2382,  5729,  3010,  4683,  6335, -1862,
    1525,   171,  1220,  4006,  2363,  1707,  5239, -2149,  4963, -2149,
    1534, -2149,  5840,  3973,  2503,  2504,  3908,  2506,  2508,  2509,
    2510,  1416,  3969,   112,  4153,   707,  2560,  4775,  2712,  6272,
    2520,  1509,  2371,  3418,  6292,  6312,  5783,  5286,  2062,  1704,
    3280,  6226,  1525,  2094,  -923,  2095,  3400,  1705,  2535,  2074,
    1707,  2918,  5042,  4678,  2924,   805,  1706,  2418,  5126,  1530,
    1526,  2097,  2438,  2446,  2050,  1516,  1721,  2102,  6193,  2102,
    4726,  4554,  6195,   790,  2017,  2866,  3246,   805,   805,  1707,
    3247,  1888,  1722,  2874,  4137,   805,  2470,  5280,  1346,  1704,
    6332,  5287,  1708,  1259,  6220,  5803,  5959,  1705,  5370,  6165,
    5809,  5810,  6169,  1707,  6008,   842,  1706,  2487,  5876, -1977,
    4921,  4599,   703,  1708,  4026,   797,   797,   790,   797,   797,
     797,   797,   790,   805,   805,   790,  2458,  3974,  2653,  2656,
    2641,   797,  3197,  4655,  3089,  2096,  4570,  5189,  3084,   894,
    3913,  2647,  2174,  3198,  1707,  3085,  4974,  5371,  2534,   797,
    2540,   805,  1811,  1751,  1723,   948,  1704,  1704,  1708,  5417,
    1704,  1811,  2464,  2705,  1705,  1705,  5697,  4027,  1705,  2175,
    2175,  5937,   790,  1706,  1706, -1288,  1220,  1706,   908,  5433,
     695,  2018,  2692,  5710,   790,  5863,  3959,  1708,  2657,  2658,
    3276,  5288,  5960,   948,  4776,  1371,  5719,  3086,  5721,   896,
    2465,  4524,  2810,  5821,  5281,  5458,  2176,  2098,  3090,  2097,
    5311,  1708,  1941,  3062,  -224,  1707,  1704,  3091,  1555,  3826,
    5324,  5325,   834,  1704,  1705,  6273,   948,  1535,  5841,  6111,
    1354,  1705,  1555,  1706,  2098,  2737,  1354,  5148,  2713,  2852,
    1706,  4906,  4679,   834,   790,  2053,  5996,  4699,  4138,  2624,
    1704,  1354,  1708,  6014,  5696,  6305,  5698,  1424,  1705,  5289,
    2706,  5703,  3158,   948,   948,  1707,  1704,  1706,  5708,  5709,
     805,  2340,  1383,  3457,  1705,  2344,  2054,  2643,  5715,   805,
     805,   805,  2351,  1706,  4921,   790,  1889,  5190,  5904,   797,
     797,  3333,  3875,  3181,  5372,  4065,  5537,  6009,  3199,  1812,
    2119,  5961,  5947,   790,  6299,   702,   949,  3975,  1812,  3879,
    3197,  4170,  4171,  2028,   790,   790,  3888,  3889,  5937,  2064,
    2175,  3198,   805,  1708,  1726,    68,  3111,  5439,   776,  3264,
    3877,  5556,  1707,  1707,  1704,  4421,  1707,  3815,  3281,  4697,
    1289,  2707,  1705,  1735,  1736,  1737,  1738,  6325,  2059,  4566,
    4841,  1706,  4139,  1727,  1728,  2466,   702,  1704,  4422,  4845,
    4846,   777,  2451,  6153,  4795,  1705,  3019,  1354,  3466,  3466,
    3466,  1720,  4009,  1708,  1706,   805,  4013,  4092,  4093,  2071,
    2811,  4094,  4095,  4096,   790,  4152,  1726,  5575,  4547,   717,
     790,  1942,  1707,  3334,  2752,  4628,  2064,  5645, -2725,  1707,
    2393,  3231,  5049,  -735,  3232,  2528,  2505,  5063,   639,  6039,
    3240,  2511,  5073,   790,  2514,  1727,  1728,  1729,  5199,   711,
     640,  4583,  1472,  3200,  2028,  1290,  1707,  1425,  2806,  6353,
    5470,  5770,   750,  5906,  5670,  6407,  2934,  2813,   790,   790,
    1708,  1708,  1707,  1704,  1708,  1426,  6326,  5931,  2529,  4155,
    4049,  1705,   735,  2825,  2825,  2072,  2426,  1745,  1475,   749,
    1706,  2549,   703,  1704,  3294,  3295,  5858,  1721,  5115,  6397,
    5116,  1705,  5234,  2559,  5963,  2137,  3199,   805,  5963,  1729,
    1706,   790,  1291,  1722,  3196,  6263,  5382,  1704,  2427,  1754,
    4629,   790,  5517,  6262,  6240,  1705,  2394,  2869,   949,  5542,
    1708,  6327,   778,  1730,  1706,  3112,  3908,  1708,  2878,   860,
    1707,  2446,  2395,   703,  5495,   770,  3908,  3908,  3335,  5859,
     642,  4999,  5000,  4921,  5733,  6040,  4050,   752,  3749,  5868,
    5750,   736,  6354,  1707,  1708,  3088,  6239,  3450,  6241,  3754,
    3755,  3444,  4584,  2205,  3010,  3971,  5734,  5712,  3445,  5471,
    1708,  6398,  3089,   896,   706,  1723,  3084,   949,  2205,  1379,
    1555,   112,  2428,  3085,  2931,  1730,  3457,  3399,  3736,  5702,
    2910,   949,  3736,  4051,  2651,  3737,  5773,  1704,  6408,  3737,
     798,  3039,   707,  6314,  2396,  1705,  2530,  2935,  1391,   799,
    3336,  5931,  1369,   947,  1706,  5735,  3790,  1724,  5739,  1562,
    3446,  3200,  2218,  1369,  1369,  5808,  1381,  3944,  3945,   947,
    5001,  3451,   949,  3794,  1199,  3086,  3866,  2279,  1708,  1707,
    3452,   949,   949,   949,  4258,  6293,  3090,  3738,  5963,   894,
    4723,  3738,  2940,   948,  5054,  3091,   801,  5319,  3741,  1707,
    1429,  1708,  3741,  2429,  6363,  5963,  2413,  3745,   747,  2098,
    1563,  3745,  3948,  3949,   159,  4715,  4075,  1704,   790,  1991,
     644,  2941,   790,  1707,  4724,  1705,  4728,  4729,  4730,  4732,
    4733,  5298,  4052,  2745,  1706,  5949,  2999,  5793,  6380,  2748,
    6007,   824,  5320,  4426,  3946,  2949,  2205,  5002,  6390,  6391,
    4349,  6116,  4352,  4119,  1704,  4121,  4122,  5870,  5055,  6020,
    1704,  4127,  1705,  4053,  5056,  2205,  5230,  6190,  1705,  4135,
    1699,  1706,  1701,  4143,  1564,  4146,  3128,  1706,  6080,  6084,
    4258,  3129,  3337,  2205,  4258,  1992,  2961,  1708,  5231,   815,
    6116,  3132,  1704,  5294,  5294,  5794,  1993,  3135,  5149,  2627,
    1705,  5298,  2824,  2824,  1994,  2282,  1992,  1708,  3165,  1706,
    1417,  5321,   826,  1707,  5150, -2149, -2149,  1993,  1704,  1704,
    1192,  1192,   805,   805,  2298,  2683,  1705,  1705,  1704,   805,
    2839,  1708,  1995,  2825,  2825,  1706,  1706,   707,  3081,  4054,
    1537,  3185,  2319,   838,  3338,  1706,   805,  1565,   805,  1201,
    1201,  3106,  3107,  1196,  1196,  3908,  5385,  2966,  2628,  3173,
    1197,  1197,   848,  4055,  5413,  5247,  5248,  6323,  6323,  3807,
    1704,  5623,   850,  2673,  3174,  5414,  3127,   797,  1705,  2674,
    1354,  2675,   797,  3808,  1354,   948,  3130,  1706,  1996,  2861,
    1193,  1193,   797,  1707,  4239,  -608,  1126,  3137,   797,  3908,
     947, -2391,   947, -2391,   947,   947,  4240,  2967,  6360,  2684,
    3850,   947,  1198,  1198,   947,  6080,  1997,  2919,  5903,  6084,
    5403,  1708,  4856,  1202,  1202,   790,  3229,   910,  2012,  5222,
    1707,  3457,  1206,  1206,  3237,  3239,  1707,  1997,  4632,  3795,
    2861,  1876,  3289,  3037,   948,  4633,  1615,  3140,   805,  3168,
     790,  3038,  1704,  1627,  2676,  3037,  5012,  4990,   948,   949,
    1705,   174,   175,  4838,  4991,   949,  4992,  2734,  1707,  1706,
     834,  2734,  1644,  1645,  2970,  2971,  5104,  1146,  2987,  1128,
     790,   805,  4810,  1704, -2342,  1152,  4812,  3195,  4250,  3192,
    1252,  1705,  5337,   790,  1707,  1707, -2721,  5339,  3449,   948,
    1706,  1708,  1144,  4721,  6017,  5123,  4722,  2982,   948,   948,
     948,  2986,  1704,  3088,  1704,  5952,  1354,  5954,  4250,  3220,
    1705,  1254,  1705,  3225,  3226,   790, -2727,   797,   673,  1706,
    3319,  1706,  2936, -2342,   790,  3238,   797,  6265,  1708,   790,
    1256,  2990,  1704,   894,  1708,   790,  1707,  2064,  2064,  2669,
    1705,  2670,  1265,  1704,  1704,  4255,  1270,  1704,  1724,  1706,
     790,  1705,  1705, -2729,  3262,  1705,  2937,  4255,  2011,  3267,
    1706,  1706,  4415,  1278,  1706, -2735,  1708,  4250,  4763,  4764,
    4250,  1704,  1704,  1704,  2997, -2738,  1284,  4250, -2741,  1705,
    1705,  1705,  1275,  3293,  6072, -2742,  4250,  1287,  1706,  1706,
    1706,  3300,  1708,  1708, -2743,  4057,  4058,  4783,  4060,  4062,
    1940,  2034,  6080,  6084,  2036,  2036,  1945,  1946,   805,  1704,
    6315,  4448,  2824,  2824,   790,  4803,  1296,  1705,  1707,  4807,
    2028,  4250,  4250,  1777,  3950,  1777,  1706,   947, -2342, -2745,
   -2746,  4862,  1298,  4821,  1731,  1732,  1733,  1734,  1735,  1736,
    1737,  1738,  3472,  1704,  1708,  4548,  1305,  4379,  6090,  1707,
    1307,  1705,  6358,  5294,  4172,  4173,  4174,  2804,  3736,  4407,
    1706,  4408,  4833,  2938,  3391,  3737,   790,  6215,  6216,  3951,
   -2342,  1321,   790,   805,   805,  1704,  1704,  4420,  1707, -2342,
    1707,   174,   175,  1705,  1705,   805,  4316,  6376,  4317, -2342,
    4318,  5899,  1706,  1706,  4659,  5260,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,  3148, -2342,   769,  2828,  1707,  2829,
    3423,  3424,  2251,  6389,  3425,  1325,  3426,  3738,  3427,  1707,
    1707,  1334,  2925,  1707,  2277,  1704,  1708,  1327,  3741,  3170,
    4751,  3952,  1492,  1705,  4752,  1331,  4753,  3745,  4754,  5761,
    1200,  1200,  1706,  5028,  1336,  5029,  3081,  1707,  1707,  1707,
    1704,  3756,  1337,  5565,  5566,  4556,  2861,  1708,  1705,  6182,
     949,   639,  6185,   805,  1704,   805,  2968,  1706,  2969,  1413,
    1704,  4003,  1705,  1340,  3953,  3461,   948,  3462,  1705,  2252,
    1375,  1706,   948,  4559,  2861,  1707,  1708,  1706,  1708,  1421,
    1704,  1704,  1704,  1493,  1411,  4284,  1494,  1704,  1705,  1705,
    1705,  3925,  1423,  2829,  3227,  1705,  5858,  1706,  1706,  1706,
    4579,  2861,  1704,  3236,  1706,   810,  1708,  1433,  1369,  1707,
    1705,   174,   175,  1495,  1369,  1437,  5249,  1708,  1708,  1706,
    5063,  1708,  1496,  4017,   747,  4018,  1341,  5144,  4079,  1369,
    4080,  4308,  4417,  2969,  4311,  2253,  1893,  2254,  1408,  1443,
    1704,  1707,  1707,  2255,  1445,  1708,  1708,  1708,  1705,  5859,
    1704,  1704,  3920,  1704,  1444,  1580,  3806,  1706,  1705,  1705,
    4672,  1705,  4674,   642,  4968,  6369,  6371,  1706,  1706,  4315,
    1706,  1893,  5957,   174,   175,  4285,  1704,  4322,   810,  4323,
     112,  1704,  1450,  1708,  1705,  3830,  1699,  1455,  1701,  1705,
    5786,  1707, -2340,  1706,   702,  1458,  1840,  1704,  1706,  1463,
     967,   968,  3320,  2256,   971,  1705,   973,  1704,   975,  4635,
    1487,  4636,  3244,   790,  1706,  1705,  1707,  1708,   805,   805,
    2354,  2355,   947,  1704,  1706,  5480,  1704,  3954,  3955,  3956,
    1707,  1705,  4564,  4565,  1705,  5105,  1707,  4815,  5493,  1893,
    1706, -2340,  4319,  1706,  4320,  1369,  4321,  2257,   805,  1708,
    1708,  3398,  4851,  6174,  6175,  4300,  1707,  1707,  1707,  2456,
    2456,  1489,  5329,  1707,  1475,  4575,  4576,  4577,  6077,  5109,
    1491,  5110,   112,  3899,   135,  3901,  1342,  1497,  1707,  1777,
    5111,   110,  5112,  1429,  1429,  1499,  3990,  4041,  4348,  1500,
    4646,  4649,  4302,  4652,  1398,  1399,   153,  1991,  4327,  1708,
    2222,  2223,  2224,  5113,  2225,  5114,  2226,  2363,  2227,  2413,
    1777,   107,  3321,  5025,  -961,  5026,  1707,  5027,   790,  3322,
    4691, -3484,  2769,  2770,  1708,  3323,  1707,  1707,  1502,  1707,
    4328,  5193,  1501,  5195,  1176, -3486,  4693,  2782,  1708,  2784,
   -3483,  1503,  6061,  2258,  1708, -3485, -2340,  4084,  5207,  2727,
    1893,   703,  1707,  1510,  2259,  2962,  5206,  1707,  4849,  5259,
    3966,  5057,  1704,  1992,  1708,  1708,  1708,  5897,  1511,  1512,
    1705,  1708,  4458,  1707,  1993,   174,   175,   948,  1513,  1706,
    5958,  1517,  1994,  1707,  1518,  1519,  1708,   797, -2340,  2728,
    1311,  1521,  1520,  1312,  1313,   790,  1429, -2340,  1314,  1707,
    1522,  3324,  1707,  5220,  1533,  5221,  2965, -2340,  5237,   790,
    1995,  1523,  5058,   790,  5228,  1561,  1893,  1354,  1354,   805,
    5240, -3750,  5241, -2340,  1708,  1566,  2729,  2418,  1567,  4691,
    4685,  3173,  2785,  2786,  1708,  1708,  4690,  1708,  1581,  4706,
    4839,  4840,  1582,  4692,  4710,  4693,  3174,  1583,  5959,   805,
     805, -2342,   702,  6062,  1588,  4410,  4411,  2959,  2893,  4412,
    1708,  4413,  3824,  4414,  3325,  1708,  1996,  1720,  1589,  1590,
    4071,  4072,  4073,  4074,  4076,  4077,  4078,  1591,  4751,  4081,
    1592,  1708,  4752,  1596,  4757,  5153,  4754,   805,  2973,  1638,
    1598,  1708,  5153,  5264,  1997,  5265,  4143,  1704,  1670,  5284,
    5858,  5285,  2451,  4107,  5059,  1705,  1584,  1708,  1841,  5407,
    1708,  4018,  -733,  1674,  1706,  4123,  4124,  4814,  4126,  2974,
    4128,  4129,  4130,  4131,  4132,  4133,  4134,  1599,  4136,  2222,
    2223,  5343,  4145,  5344,  5507,  5345,  5508,  5346,  1707,  5509,
    1600,  5508,  5200,  1601,  5960,   790,  1602,  2730,  2976,  1799,
    2977,  4958,  1842,  5859,  1843,  5511,  5330,  5512,  5331,  2731,
     946,  5450,  1199,  1721,  5017,  2045,   805,   805,  5018,  1603,
    5019,   790,  5020,  4487,  3466,  1386,   946,  1311,  2980,  1722,
    1312,  1313,  4092,  4093,  5506,  1575,  4094,  4095,  4096,  2981,
    2985,   156,  5332,  2988,  1740,  1160,   965,   966,   967,   968,
     969,   970,   971,   972,   973,   974,   975,  3929,  4695,   703,
    1604,  5738,   174,   175,  5957,   174,   175,  2995,  3007,  4279,
    5743,  5578,  5333,  4424,  1741,  1605,  4696,  1606,  2208,  2209,
     737,   738,  5730,  1220,  5731,  5021,   702,  2219,  2028,  5022,
    5757,  5023,  5758,  5024,  1844,  1607,  1708,  5555,  5791,  1608,
    5792,  1723,  1609,  5961,  1161,  4288,  6060,  6428,  4683,  2732,
    5797,  1612,  5792,   702,  1704,  1613,  1614,   739,  2280,  5973,
    2283,  1622,  1705,  1707,  5042,  1623,  1800,  5473,  1624,  4694,
    4202,  1706, -1692,  1625,  4002,  2296,  2297,  2299,  1801,  4289,
    1628,  1629,  2302,  2303,  1845,  5974,   997,   949,  1369,  5849,
    2320,  4018,  1369,  5850,  6064,  4018,   740,  1630,  1319,  1320,
    2830,  1323,  1631,  1324,  4494,  5494,  6004,  4695,  6005,  1632,
   -1691,  4290,  4295,  6030,  6041,  6031,  6042,  1633,  1634,  2733,
     157,  4698,  4705,  5136,  4707,  4696,   776,  1635,  5919,  4711,
   -1348,  1846,  1220,  1802, -1348,  6076,  6061,  4080,  4862,  1742,
    6158,  1803,  4874,  4774,   949,  5334,  -961,  1704,  6202,  6236,
    6203,  5241,  6248,  1636,  6249,  1705,  6257,  4683,  6258,   777,
    1743,  4296, -3619,  2456,  1706,  4487,  1018,  2897,  1991,  1314,
    6274,  1708,  5792,  -961,  6276, -1348,  5792,  1637,  1804,  5335,
    6306, -1348,  5792,   703,  1639,  1744,  4297,  1429,  5975,  6316,
    5976,  5792,  6340,  6412,  5241,  6413,  1640,   946,  1641,   946,
    4298,   946,   946,  1162,  1642,  1163,  4299,  4816,   946,  1746,
     703,   946,  5958,  3736, -1348,  1646,  1164,   949,  1748, -2575,
    3737,  1647,  1847,  1752,  1369,  1753,  4307,  4313,  4314,  1648,
    1707,  3039,  1165,  4325,  1992,   158,  1649,  1761,  1650,  5958,
    1651,  1652,  5789,  1653,   947,  1993,  1848,  6062,  4326,  1762,
    4178,  1763,  1654,  1994,  1655,  1032,  1656,   965,   966,   967,
     968,   969,   970,   971,   972,   973,   974,   975,  1657, -2340,
    1764,   741,  3738,  1658,  5060,  1659,  1660,  1663,  1664,  1665,
    5959,  1995,   947,  3741,  1666,  1769,  4329,  1667,   742,  1668,
    5547,  1805,  3745,  1669,  5933,  3304,  4771,  5205,  1796,  5211,
     778,   170,  1671,  1672,  5962,  3475,  4494,  5959,  1673,  5919,
     159,  1675,  1676,  1677,   743,   947,  4186,  5134,  1806,  5137,
    1678,  1795,  5223,  1707,  5848,  1679,  1818,  5224,  2851,  5145,
    1682,  1683,  1836, -3619,  1686,  1837,  5977,  1996,  1708,  1687,
    1573,  4784,  1839,  5762,  1688,  1689,  1690,  5154,  1691,  5140,
    4331,  5768,   947,   947,  4785,  1692,  1747,   997,   744,  5159,
     160,  5774, -2561, -2562,  1704,  1997,  1798,  4487,  5151,  5946,
    4786,  1838,  1705,  5920,  1858,  5180,  5960,  5156,  5549,  1868,
    5921,  1706,  1859,  5158,  4309,  5061,  1871,  1872,  1621,  1881,
    4697,  4369,  1893,  5172,  1921,  5922,  1931,  2664,  1933,  1937,
    4787,  5181,  5182,  5960,  1943,   805,  1944,   790,  1950,  1951,
    1953,  4386,   805,   805,   948,  4387,  1166, -2312,  4390,  4391,
    1959,  1955,  1976,  5716,  1977,  3305,  1978,  1980,  1989,  5936,
    2001,  1708,   637,  4511,   946,  5942,  5943,  1018,  4927,  4928,
    4929,  4930,  4931,  4932,  4933,  4934,  4935,  4936,  2000,  4938,
    4939,  4940,  4941,  4942,  4943,  4944,  4945,  5259,  4946,  4947,
    2004,  2014,  4951,  4952,  2020,  1703,  3466,  2030,  2031,  2041,
    2056,   948,  1386,  2063,  2060,  2075,  6063,  4441,   112,   112,
    4788,  2079,  2083,  2089,  1724,  5961,  2103,  2107,  2109,   638,
    5302,  5305,  5307,  5309,  2113,  2115,  5312,  5313,  6064,  4697,
    5057,  5317,  2122,  1704,  5323,  2125,  2127,  5327,  4494,  2129,
    5302,  1705,  5961,  1807,  5338,  5302,  2130,  2131,  1808,  2132,
    1706,  2134,  5923,   790,  1991,   805,  1032,  2135,   790,   790,
    2159,  2179,  2167,  4514,   797,  5924,  2181,   753,  2182,  2183,
    1707,  4789,  2187,  2188,   948,  3848,  2190,  4667,  2191,  2193,
    2203,  5058,  5925,  2204,  5920,   161,   790,   790,  2205,   639,
     162,  5921,  2214,  4540,  5065,  2221,  2235,  2263,  1783,  5075,
    3173,   640,  2276,  2277,  5680,  5681,  5922,  5683,   754,  2278,
    2289,  5957,   174,   175,  2291,  3174,  2294,  2295, -1348,  2304,
    1992,  2343,  2347,  1809,   755,  5450,  2350,  4301, -2312,  2359,
    2369,  1993,  1810,   702,  4487,  2373,  3306,  4487,  2388,  1994,
    2419,  2392,  4626,  2420,  2447,  2448,  -758,  2454,  2453,  2460,
    2471, -3036,  2479,  2498,  1167,  1168,  1169,  1170,  3450,  5146,
    2476,  2499,  3444,  2500,   641,   163,  5973,  1995,  2526,  3445,
    2541,  2542,  5548,  2543, -3619,  2544,  2547,  4531,  1708,  5549,
    5979,  -733,  3307,  2546,  2553,  2548, -2161,  5168,  4790,  4791,
    2563,  5171,  5974,  2567,  2566,  2573,  2570,  2574,  5179,  2575,
    2576,   642,  2583,  4646,  5746,  4649,  2584,  4652,  2598,  1707,
    1241,  2603,  2593,  2597,  5550,  2594,  2595,  5551,  2596,  2599,
    2600,  3446,  2602,  1996,  2615,  5926,  4380,  2616,  4662,  5574,
    2620,  2625,  3451,  5923,  2631,  2634,  2639,  2662,  2665,  5768,
    2666,  3452,   756,  6191,  2679,  2929,  5924,  2680,  2932,   949,
    2667,  1997,   947,  -961,  5895,  2668,  2671,  2689,   112,  2697,
    3308, -2111,  2681,  5925,  2944,  2698,  2693,  2694,  2710,   946,
    6109,  6110,  2715,   757,  2711,  4494,  5962,  2714,  4494, -2586,
    2726,  2740,  2741,  2749,  2750,  2963,  2757,  2761,  2792,  2029,
     703,   758,  2029,  2796,  2801,  5975,  2802,  5976,  1382,  2807,
    2808,   965,   966,   967,   968,   969,   970,   971,   972,   973,
     974,   975,  2809,  2820,   643,  2817,  4746,  1708,  2840,  5958,
    5544,   158,  4750,  3309,  2867,  2868,  1326,  6106,  2870,   174,
     175,  2886,  2894,  2889,  2891,  2911,  2904,  4792,  4793,  3310,
    3311,   644,  4456,  5042,  3312,  3313,  3314,  4461,  4462,   965,
     966,   967,   968,   969,   970,   971,   972,   973,   974,   975,
     776,  2892,  2903,  2905, -1348,  2908,  2909,  1896, -1348,  1704,
    2919,  2975,  2926,  1738,  2930,  1369,  1369,  1705,  5851,  2933,
    5852,  5853,  2978,  2942,  2943,  3001,  1706,  5959,  2945,  2946,
    2947,  1241, -1490,   777,  2948,  2952,   159,  2960,  2989,  3450,
    2964,   997,  2972,  3444,   702,  2979,  5926,  4806,  2983, -1348,
    3445,  6043,  3315,  2984,  2993, -1348,  2994,  2996,  3000,  3006,
    3011,  1704,  3018,  1704,  3031,  5300,  5293,  3024,  3033,  1705,
    2157,  1705, -1657,  1704,  3034,  4386,  3035,  5316,  1706,  4387,
    1706,  1705,  3036,  5977,   947,  6417,  3043,  3050, -1348,   997,
    1706,  3055,  4369,  4312,  5435,  4836,   805,  1661,  1680,  4837,
    1684,  3058,  3446,  3060,  3778,  3316,  3061,  4041,  3063, -3586,
    3064,  3071,  3067,  3451,  3072,  3093,  3110,  3113,  3073,  3114,
     -73,  1018,  3452,  5960,  3115,  5550,  3118,  3122,  5551,  3138,
    3142,  3123,  3126,  2363,  6342,  3152,  3155,  5552,  4794,  3161,
    3156,  3179,  4863,   947,  6146,  3205,  1704,  3178,  4084,  1621,
    3188,  4872,  4864,  3207,  1705,   112,  3780,   947,  3782,  3208,
    3189,  3209,   645,  1706,  3213,  2274,  1621,  3212,  3254,  1018,
    3245,  5651,   790,  3258,   778,  3272,  3287,  3279,  4922,  3283,
    3290,   646,   790,  3291,  3297,  1707,  3296,  3457,  3299,  5423,
    6176,  3298,  3301,  5060,  3302,  3303,  2727,  3448,   947,  3449,
    3342,   703,  5978,  3345,  3348,  3352,  4950,   947,   947,   947,
    1032,  3354,  3355,  6245,  3358,  3359,   948,  3360,  3361,  3362,
    3363,  1897,  3364,  3365,  3740,  3366,  3367,  3450,  3740,   647,
    5124,  3444,  5961,  3368,  3369,  3736,  2728,  1707,  3445,  1707,
    3370,  2950,  3737,  3371,  3372,  5099,  3385,  3373,  3374,  1707,
    3375,  3376,  3377,  3262,  1129,  3390,   648,  3393,  1032,  3378,
    2418,  3379,  3380,  6427,  3381,   649,  3396,   759,  2413,  3394,
    3382,  3406,  3408,  2729,  2098,  3411,  3416,  1777,  3409,   174,
     175, -2111,  5031,  3410,  3412,  3420,  -166,  3421,   805,  3422,
    3446,  3429,  3751,  1708,  3738,  2424,  3750,  1991,  3458,  3752,
    3765,  3451,  1621, -1700,  5061,  3741,  3766,  6367,  3767,  3773,
    3452,  3804,  3786,  4451,  3745,  2769,  2770,  1896,  3816,  3817,
    3805,  6253,  1707,  3818,  3831,  3832,  5548,  5755,  3844,  3863,
    2782,  3845,  2784,  5549,   647,  3846,  4922,  3044,  3860,  3856,
    3854,  3862,  3864,  2491,  3872,  1708,   797,  1708,  3867,  6245,
    3868,  5103,  3873,  3880,  4487,  3881,  2482,  1708,  2481,  3911,
     112,   760,  2861,  1992,  3450,  3926,  3932,  3934,  5628,  1130,
    1898,  3972,  3967,  3978,  1993,  5629,  3980,  1131,  3982,  3983,
    3984,  5549,  1994,  4007,  1899,  4008,  1900,  4011,  4012,   112,
    4034,  5125,  1132,  4047,  2730,  4038, -2064,  5979,   110,  4087,
    4088,  4105,  1133,  1134,  1135,  4048,  2731,  4089,   805,  4109,
    1995,  4116,  1136,  4156,  4117,  6320,  4118,   805,  1901,  4160,
    3259,  4120,  1902,  1991,  2805,  2785,  2786,  5630,  3736,  4167,
    1708,  1903,  4162,  4168,  4180,  3737,  4238,  4250,  5633,  5595,
    3449,  5163,  -735,  5600,  5601,  5040,  4242,  5634,  6404,  1199,
    1199,  4255,  4241,  4262,  4247,  6253,  4259,  4263,  4269,  6416,
    4332,  4902, -1348,  4333,  1904,  3736,  1996,  6404,  4272,  2612,
    4355,  4926,  3737,  4273,  4274,  6416,  4275,  4363,  5275,  4347,
    4452,  4453,  1905,  4343,  4344,   947,  4373,  3738,  4357,  1992,
    4358,   947,  4359,  5962,  1997,  4494,  -735,  4360,  3741,   754,
    1993,  4361,  4372,  4362,  4370,  4376,  2732,  3745,  1994,  4374,
     949,  4377,  4381,  4396,  5318,  3173,  3260,  -735,  4397,  4405,
    5040,  4418,  4425,  4424,  3738,  4436,   949,  4423,  5882,  4442,
    3174,  1897,  4444,  4445,  4446,  3741,  1995,  4450,  4449,  4369,
    4457,   946,   663,  4460,  3745,  4509,  4535,  4518, -1813, -1818,
    1137,  4538,  4541,  4544,  4550,  4545,  4568,  4551,  4586,  4573,
    1906,  4631,  1138,  4639,  4663,  4664,  4669,  1907,  2029,  4677,
    2709,  -735,  4688,  4683,   754,  4709,  2733,  1908,  4716,   946,
    2363,  4743,  4731,  4744,  4758,  4765,   112,  4762,  5041,  4441,
    3173,  1909,  1996,  4768,  4766,  5256,  -735,  4777,  4778,  3003,
    4808,  4338,  4817,  4819,  4024,  3174,  4820,  4823,  5269,  5270,
    5271,  4824,   946,  4825,  4829,  1910,  2431,  4843,   805,  4844,
    1997,  4922,  4857,  5283,  1911,  2850,  5438,  1912,  3449,  4873,
      41,  4878,  4879,   756,  4874,  4897,  4896,  4898,   790,  5550,
    4626,  4899,  5551,  4900,  4903,  1913,  5314,  5315,  4923,   946,
     946,  5765,  4924,  4925,   805,  4937,  5328,  4597,  4982,  4965,
    4995,  -266,  1139,  4985,  -735,  4987,   949,  4997,  5005,  5350,
    5015,  -735,  5033,  5351,  2415,  5362,  1914,  5016,  5034,  5035,
    1898,  5051,   758,  5042,  5053,  5066,  5067,  5550,  5076,  5077,
    5551,  5079,  5080,  5083,  1899,  5078,  1900,  5081,  5397,  5362,
    5084,  5085,  5086,  1140,  5087,  5097,  5094,  5100,   756,  6386,
    5101,  5120,  5428,  5429,  5108,  5431,  5127,  1141,  5121,  5128,
    5436,  5131,  5133,  5440,  4736,  2413,  5443,  5444,  1901,  5157,
    5160,  5165,  1902,  5173,  5452,  5177,  5453,  5187,  5195,  -735,
    5802,  1903,  5191,  5208,  5209,  5459,  5192,  5193,  5194,  5196,
    5197,  5210,  2887,  5204,  5214,  4922,  5216,   758,  5042,  5219,
    5226,  5229,  5235,  5227,  3740,  3449,  5243,  5251,  4872,  4872,
     790,  5253,  5266,  5374,  1904,  5379,  5430,  5254,  5399,  5273,
    5446,  5261,  2363,  5276,  5400,  5262,  5255,  5401,  5277,   790,
    5456,  5447,  1905,  5404,  5298,  4872,   947,  5391,  5408,  6131,
    5406,  5457,  4872,  5409,  5410,  5411,  5420,  4922,  5460,  5418,
    5461,  5462,  5475,   949,  5419,  5421,  4880,  5426,  5424,  5437,
    5441,  5442,  5482,  4103,  5476,  5474,  1621,  2928,  5478,  5489,
    5500,  5502,  5519,  5042,  5534,  5520,  5535,   948,  5536,  5541,
    5538,  5540,  5577,  5543,  5546,  5557,  5560,   112,  5572,  5592,
    5583,  5503,  5573,   948,  5584,  6296,   792,  5593,  5588,  5596,
    5591,  5638,  5529,  5636,  5640,   805,  5646,   949,  5650,  5652,
    1906,  5647,  5682,  5676,  5656,  5667,  5658,  1907,  5660,  5677,
    5684,  5685,  5687,  3736,  5689,  5281,  5700,  1908,  5706,  5707,
    3737,  5711,  5717,  5285,  5056,  5722,  5740,  5753,  5530,  5756,
    5760,  1909,  5362,  5763,  5769,  5764,  5770,  5776,  5771,  2998,
    5773,  5790,  5794,  5787,  5796,  5806, -3741,  6261,  5798, -2723,
    5800,  3087,  3013,  5822,  5286,  1910, -2722,  5299,  5824, -2726,
    5828,  4881, -2736,  5835,  1911,  5842, -2740,  1912,  5812,  4882,
    6115,  -388,  3738, -3736, -3734, -3738,  5854,  5855, -3732,  5857,
   -3737, -3735, -3733,  3741,  4883,  1913,  5837,  5564,  2240,  2241,
    2242,  2243,  3745,  5865,  4884,  4885,  4886,  5816,  5043,  4863,
    5571,   664,  5866,  5867,  4887,  5875,  5873,  4872,  5874,  6115,
    5883,  5884,  5880,  5885,  5891,  5892,  1914,  5893,  5582,  5894,
    5896,  5582,  5587,   948,  5900,  5905,  5589,  5914,  5918,  5915,
    4922,  5938,  5939,  5944,  2244,  2245,  2246,  5950,  5599,  4465,
    1777,  5637,  3070,  5635,  5991,  5986,  5989,  6000,  6003,   946,
    6011,  6016,  6012,  6013,  6025,  6034,  6422,  5639,  1783,  6028,
    6029,  6038,  6044,  6048,  6051,  6056,  6059,  6087,  6093,  6073,
    6099,  6101,  6075,  5043,  6095,  6097,  6098,  6103,  6104,  6105,
    6120,  6118,  6119,  6121,  6157,  6154,  2247,  2248,  6163,  5434,
    6049,  6050,  6124,  6052,  6053,  6054,  6055,  6135,  6197,  6178,
    6192,  6199,  6200,  3264,  4626,  5362,  6207,  6213,  5454,  5044,
    6218,  6210, -2559,  6219,  6225, -2560,  6227,  6115,  4594,  6237,
    5655,  6233,  5657,  4599,  6264,  6242,  6222,  6238,  6267,  6270,
    5704,  5691,  6230,  5693,  6277,  6278,  6279,  6286,  6285,  6291,
    6295,  6297,  4888,  6289,  6300,  6343,  2157,  6346,  6355,  3262,
    2249,  3262,  6356,  6351,  4889,  6357,  6373,  6379,  6359,  6368,
    6377,  6378,  6381,  6384,  6385,  6387,  6383,  6382,   949,   949,
     948,  6392,  6393,  5695,  4922,  4872,  4922,  6394,  5692,  3177,
     805,  4922,  6405,  4872,  5044,  5488,  1621,  6421,  4922,  4922,
    3891,  4147,  4872,  5486,  5487,  3987,  5941,  5714,  4922,  5654,
    5993,  6127,  4567,  6287,  4922,  4872,  1348,  4872,  2061,  1343,
    1344,  5648,  5994,  5902,  2250,  5723,  5510,  5749,  6170,  5381,
    5759,  6173,  5901,  5184,   948,  3943,  4895,  2439,  4244,  6181,
    4164,  2759,  6184,  1457,  4749,  2880,  2879,  5819,  5642,  4890,
    5818,   946,  2881,  5090,  4613,  5713,  5559,   790,  4828,  5236,
    6247,  6423,  3048,  1123,  4891,  4834,  6162,  5163,  5777,  6345,
    6304,  6058,  5775,  5427,  5752,  1704,  3292,  5088,  5988,  2051,
    5590,  5694,  5469,  1705,  5093,  5292,  6324,  6217,  6221,  6148,
    4225,  6139,  1706,  6140,  6141,  6142,  4796,  4700,  5898,  2029,
    4056,  2029,  2029,  3286,  4742,  4892,  4555,  4759,  1123,  6122,
     946,  5141,  6160,  4335,  4811,  5521,  4813,  4809,   762,  4893,
    6350,  2251,   763,  6317,   946,  6318,  5948,  6189,  2363,  3979,
    6196,  6194,  5860,  5155,  2240,  2241,  2242,  2243,  5582,  5690,
    4459,  5091,  5688,  5799,  5467,  2160,  2070,  2635,  3965,  6023,
    5804,   790,  6156,  3963,  5864,  4922,  4922,  3351,  3861,  2794,
    3417,  3169,  4177,  4676,  3447,   946,   791,  2039,  3918,  3819,
    1377,  1766,  1990,  2038,   946,   946,   946,  5122,  3869,  3087,
    2244,  2245,  2246,  4037,  5838,  4822,  3789,  3787,  2252,  4365,
    3839,  3739,  3836,   790,  2416,  3739,  2357,  2265,  4282,  5201,
    2211,  6290,  5362,   112,  6137,  2275,  6372,  5826,  2762,  6370,
    2688,  1982,  1983,  2685,  1984,  1985,  1987,  5491,  2157,  5117,
    6032,  5263,  5362,  6033,  5992,  2220,  2678,  3274,  2700,  4354,
    4033,  5847,  2247,  2248,  5009,  5008,  4353,  5554,  6037,  5250,
    5872,  5545,  2763,  5203,  4040,  4036,  5567,  1400,  5118,  4562,
    2033,  1707,  4563,  4922,  2253,  3266,  2254,  4802,  5014,  4922,
     773,  5869,  2255,   764,  2047,  1878,  2363,  1262,  2105,  4675,
    2800,  3415,  2832,  5529,  4867,  4872,  5788,  4068,  4853,  5268,
    2764,  4850,  2413,   947,  6341,  1468,  5886,  5890,  1473,  3144,
    1246,  3145,  2532,  1247,  2040,  1249,  2249,  3182,  5817,  2623,
    5576,  4680,  2165,  5412,  6344,   948,   948,  3912,  6374,  5530,
    6420,  5686,  6424,  5362,  1576,  6366,  3159,  3253,  3413,  5569,
    3470,  3903,  2256,  1204,  3109,  3904,  3900,  2885,  1205,  3905,
    5971,  5913,  4395,  3897,  5971,  1159,  2645,  3896,  4574,  1760,
     947,  3341,  4806,  2864,  2459,  3865,  5744,  5582,  1781,  3981,
    5130,  5032,  5741,  4627,  1295,  5945,  1574,  4922,   782,  1708,
    2250,   766,  1936,   767,   768,  4515,  2257,  2153,  3235,  1556,
    4673,  5985,  1123,  2154,  6229,  5387,  1123,  5990,  4245,  5398,
    5388,     0,  5384,  2882,  5383,     0,     0,     0,  2413,     0,
       0,     0,     0,     0,     0,     0,     0,  6001,     0,  1123,
     949,     0,     0,     0,  1574,     0,     0,     0,     0,  1123,
    4922,     0,     0,   947,     0,     0,     0,     0,     0,     0,
     790,     0,   805,     0,     0,     0,     0,  3842,  6019,  4922,
     790,     0,     0,     0,     0,     0,  6018,     0,     0,     0,
    5805,     0,     0,     0,  1621,     0,     0,     0,  4441,  4441,
       0,     0,   946,     0,     0,  6036,     0,  2251,   946,     0,
       0,     0,  2258,     0,     0,     0,     0,     0,     0,     0,
    6177,     0,     0,  2259,     0,  1123,  1123,  1123,  1123,  3740,
       0,  1574,     0,     0,  5971,     0,     0,     0,  1123,     0,
       0,     0,     0,     0,  6074,     0,     0,     0,     0,  6086,
       0,  5971,     0,     0,     0,  6092,     0,     0,     0,     0,
       0,  6100,     0,  2491,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2252,     0,     0,     0,   805,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  6123,     0,  6125,     0,     0,     0,
       0,     0,     0,     0,     0,  6134,     0,     0,     0,     0,
    5847,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2612,  2612,     0,     0,
       0,     0,     0,     0,  1574,  2765,  5890,     0,     0,     0,
    2253,     0,  2254,     0,     0,     0,  6260,  5913,  2255,     0,
    6171,  6172,     0,     0,     0,     0,     0,     0,     0,     0,
     805,   747,  6183,     0,     0,  2766,  2767,     0,  2768,  2769,
    2770,  2771,  2772,     0,  2773,  2774,  2775,  2776,  2777,  2778,
    2779,  2780,     0,  2781,  2782,  2783,  2784,     0,     0,     0,
       0,     0,  6198,     0,     0,     0,     0,  4626,     0,     0,
    5582,     0,  5582,  5587,     0,     0,     0,     0,  2256,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1123,
       0,  6303,  2029,  1699,     0,  1701,     0,     0,     0,  6223,
       0,   790,  6330,     0,     0,     0,     0,     0,     0,     0,
    6231,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2257,     0,     0,     0,     0,     0,     0,  6015,
       0,     0,     0,     0,  2363,     0,     0,     0,     0,  6021,
       0,  6254,     0,     0,  6255,     0,     0,   948,     0,  2785,
    2786,  3739,     0,     0,     0,     0,   805,     0,     0,     0,
       0,     0,     0,     0,     0,  4626,     0,     0,     0,     0,
       0,     0,     0,     0,  5582,  5582,     0,     0,  6271,     0,
       0,     0,     0,   946,     0,  5582,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1574,     0,  6284,  1574,     0,
       0,     0,     0,  2029,     0,  6288,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2258,     0,
    5971,  5971,     0,     0,     0,     0,     0,     0,     0,  2259,
       0,   805,     0,     0,     0,  6411,     0,     0,  6425,     0,
       0,     0,     0,     0,  6418,  5582,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    6329,  5971,     0,     0,  6331,     0,     0,     0,     0,  1123,
    2363,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3448,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   947,  1574,     0,     0,     0,
       0,     0,     0,     0,     0,  1123,     0,  1123,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2363,
       0,     0,     0,     0,     0,   805,     0,     0,     0,     0,
    2363,     0,     0,     0,   805,     0,     0,     0,  2363,     0,
    6224,     0,     0,  1123,  1123,     0,  2363,     0,     0,  1123,
       0,     0,     0,  1123,  1123,  1123,     0,     0,     0,     0,
       0,     0,     0,  1123,  1123,  1574,     0,     0,     0,  1123,
       0,     0,     0,  1123,  1123,  1123,     0,  1123,  1123,  1123,
       0,  1574,  1574,     0,     0,     0,     0,     0,  1123,     0,
    1123,     0,     0,  1123,  1123,  1123,  1123,     0,  1123,     0,
    1123,  1123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1123,  1123,  1123,  1123,  1123,     0,
    1123,  1123,  1123,  1123,  1123,  1123,     0,  1123,  1123,     0,
    1123,  1123,     0,  1123,  1123, -1902, -1902,  1123,  1123,     0,
    1123,  1123,     0,     0,  1123,     0,  1123, -1902,     0,     0,
    1123,  1123,  1123,     0,     0,  1123,  1123,  1123,  1123,     0,
    1123,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
       0,     0,     0,  1123,  1123,  1123,  1123,     0,     0,     0,
       0,     0,  2169,     0,  1123,  1123,     0,  1123,  1123,     0,
       0,  1123,  1123,  1123,  1123,  1123,  1123,  1123,  1123,  1123,
    1123,  1123,  1123,  1123,     0,     0,  1123,     0,     0,  3448,
   -1902,  1574,     0,     0,     0,     0,     0,     0,  1574,     0,
       0,     0,     0,     0,  4294,     0,     0,     0,     0,     0,
       0,     0, -1902, -1902,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,     0, -1902,     0,     0,     0, -1902,     0,
       0,     0, -1902,     0,     0,     0, -1902,     0,     0,  1574,
       0,     0,     0,  4330,     0, -1902, -1902,     0,     0,     0,
       0,     0, -1902,     0,     0,     0, -1902,     0,     0,  2169,
       0, -1902,     0, -1902,     0,     0,     0, -1902,     0,     0,
       0,     0,     0,     0,     0, -1902,     0, -1902,     0,     0,
       0,     0,     0, -1902,     0,     0,     0, -1902,     0,     0,
       0,     0,  4465,   174,   175,     0,     0,     0,     0,     0,
       0,     0,     0, -1902,     0,     0,     0,     0,     0,     0,
       0,  4389,     0, -1902,     0,     0, -1902,     0,     0,     0,
       0,     0,     0,     0,     0, -1902,     0,     0,     0, -1902,
       0,     0,     0, -1902,     0,     0, -1902,     0,  1123,     0,
    1123,     0, -1902, -1902,     0,  -923,     0,  -923,     0,     0,
       0,     0,     0, -1902,     0, -1902,     0,     0, -1902, -1902,
   -1902,     0,     0,     0, -1902,  1574,     0,     0, -1902,     0,
       0,  1123, -1902,  2049, -1902,     0,     0,  3448,     0,     0,
   -1902,  3740,     0,     0,     0,     0,     0, -1902,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
   -1902,     0, -1902,     0,     0,     0,     0,     0, -1902, -1902,
   -1902,     0,     0, -1902,     0,     0,     0,     0,     0,  4466,
       0,     0,     0, -1902,     0, -1902,     0,     0,     0,     0,
   -1085, -1085,     0, -1902,     0,     0,     0,     0,     0,     0,
       0,     0,  4465,   174,   175,     0,     0,     0,     0,     0,
       0,     0, -1902,     0,     0,     0, -1902,     0,  1123,     0,
     946,     0,     0,     0,  1574, -1902,  1574,     0,     0,     0,
    4587,     0,  4588,  4589,     0,     0,     0,     0,     0,  2029,
       0,     0,     0,     0, -1902,     0,  1123,     0,     0,     0,
    4468,     0,     0,     0,  4590,     0,  4591,     0,     0, -1902,
       0,     0,  4592,     0,     0,     0, -1902,     0,     0,     0,
       0,     0,     0,     0,  5632,     0,     0,   946,     0,     0,
   -1902,     0, -1902,  2049,     0,     0,  1123,     0,     0,     0,
       0,     0,     0,     0,  4593,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4469,  4470,  4471,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4472,     0,  4466,
       0,     0, -1902,     0,  3740,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   947,     0,     0,     0,
     946,     0,     0,     0,     0,     0,     0,     0,  4594,     0,
       0,     0,   947,     0,     0,     0,  1123,     0,     0,     0,
       0,  3740,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4473,     0,  4474,     0,     0,  4595,
       0,  4596,     0,     0,     0,     0,     0,     0,     0,     0,
    4468,     0,  4597,     0,  -923,     0,  4475,     0,  1574,  1123,
       0,     0,     0,     0,     0,     0,  3739,  1123,  1123,     0,
       0,     0,     0,     0,  4476,  4598,     0,     0,     0,     0,
       0,  4477,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4478,     0,     0,     0,
   -1902,     0,     0,  4479,     0,     0,     0,  4469,  4470,  4471,
       0,     0,     0,     0,     0,     0,     0,     0,  4480,     0,
       0,  1123,     0,     0,     0,     0,     0,  4472,     0,     0,
       0,     0,  1574,  1574,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   947,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1123,  1123,  1123,     0,     0,
       0,     0,     0,     0,     0,  4481,  4599,     0,     0,     0,
       0,     0,     0,     0,  4473,  4482,  4474,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1902,     0,     0,
       0,     0,     0,     0,     0,     0,  4475,     0,     0,     0,
       0,     0,     0,  4600,     0,  1574,     0,     0,     0,     0,
       0,     0,     0,  4483,  4476,  1123,     0,     0,  1574,     0,
       0,  4477,     0,     0,     0,     0,  4484,     0,     0,     0,
       0,     0,     0,  1123,     0,     0,  4478,  1123,  1123,     0,
    1123,  1123,     0,  4479,     0,     0,     0,  4601,  4602,  1123,
       0,  1123,     0,     0,  4603,     0,     0,     0,  4480,     0,
       0,     0,     0,     0,     0,  4485,  4604, -1902,     0,     0,
       0,  4486,     0,     0,     0,     0,     0,     0,     0,     0,
    2170,     0,  1123,     0,     0,  2612,     0,  4605,     0,   947,
       0,     0,     0,     0,     0,  4487,     0,     0, -1902,     0,
   -1902,     0,     0, -1902, -1902,     0,     0,     0,  1123,     0,
       0,  4606,     0,     0,     0,  4481,     0,     0,     0,     0,
       0,     0,     0,     0,  1574,  4482,     0,     0,     0,  4488,
       0,     0,     0,     0,     0,     0,  4489,     0,     0,     0,
       0,     0,     0,   947,  1123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,  4483, -1902,     0,     0,     0,     0,     0,
       0,  4490,     0,     0,     0,     0,  4484,  2170,  4607,     0,
       0,   863,     0,     0,     0,     0,  4491,  4492,     0,     0,
       0,     0,     0,     0,     0, -1902,     0, -1902,  1123,  4493,
   -1902, -1902,     0,     0,     0,  1123,     0,     0,     0,     0,
       0,     0,  1574,   864,     0,  4485,     0,     0,     0,     0,
       0,  4486,     0,     0,     0,     0,     0,     0,     0,  3740,
       0,     0,     0,     0,   866,     0,  4494,     0,     0,     0,
       0,     0,     0,   867,     0,  4487,  4608,     0,     0,     0,
       0,     0,  1574,     0,     0,     0,     0,  4609,  4610,  4611,
       0,     0,     0,     0,   868,  4956,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3447,     0,     0,   869,  4488,
       0,     0,     0,   870,     0,     0,  4489,     0,     0,     0,
       0,     0,   946,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   871,  1123,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4490,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4491,  4492,     0,     0,
       0,     0,  1123,     0,     0,     0,     0,     0,     0,  4493,
       0,     0,     0,  4612,     0,  1574,     0,  1574,  1574,  1574,
       0,  1123,     0,     0,     0,     0,   872,     0,     0,     0,
     873,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4494,     0,   874,     0,
       0,     0,   875,   876,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2029,     0,     0,
       0,     0,     0,     0,   947,   947,     0,     0,     0, -1085,
       0,     0,     0,   877,     0,     0,     0,     0,     0,     0,
     878,   879,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1574,     0,     0,  3842,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2140,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3447,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2141,  1123,     0,     0,     0,  1123,     0,     0,  1123,     0,
       0,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
       0,     0,     0,     0,     0,     0,  1123,     0,  1123,  1123,
       0,  1123,  1123,  1123,  1123,     0,  1123,     0,  1123,  1123,
       0,  1123,     0,  2142,     0,     0,     0,     0,  2143,  1123,
    1123,     0,     0,     0,  1123,  1123,  1123,     0,     0,  2144,
    2145,     0,     0,     0,  1123,  1123,  1123,     0,  1123,     0,
    1123,     0,  1123,     0,  1123,     0,  1123,     0,     0,     0,
       0,  1123,  1123,     0,  1123,  1123,  1123,     0,     0,     0,
    1123,     0,     0,  1123,     0,     0,     0,     0,     0,     0,
       0,     0,  1123,     0,     0,  1123,     0,  1123,  1123,  1123,
       0,     0,  1123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1123,     0,  1123,     0,     0,  1123,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1123,
    1123,  1123,  1123,  1574,  1123,     0,     0,     0,     0,  1123,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1574,     0,     0,     0,  3447,     0,     0,     0,  3739,     0,
       0,     0,     0,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     1,     0,     2,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  2146,     0,     0,     0,     0,  1123,
       0,     0,     0,     0,  2147,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,  2148,     3,     4,     0,  1574,
       0,  2149,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     5,     0,     6,     0,     7,     0,
       8,     0,     0,     0,     0,     0,     0,     0,     9,     0,
       0,     0,  1123,  2150,     0,     0,     0,  2151,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
       0,    11,    12,  1123,   174,   175,     0,     0,    13,     0,
       0,     0,  1574,  1574,     0,     0,   947,     0,  2152,     0,
       0,  5631,     0,     0,     0,    14,     0,     0,     0,    15,
       0,     0,  1207,     0,  1208,     0,     0,     0,     0,    16,
       0,     0,   670,     0,     0,     0,     0,     0,    17,     0,
       0,     0,  4051,  4183,     0,     0,  1176,  4184,  4185,    18,
       0,     0,     0,     0,  1209,  1210,     0,  4186,     0,    19,
       0,     0,    20,  1123,  1211,     0,    21,     0,     0,     0,
       0,  3739,     0,     0,     0,     0,     0,     0,    11,    12,
       0,     0,  4187,   946,     0,     0,  1123,     0,     0,     0,
       0,     0,     0,    22,     0,  4188,     0,     0,  1574,   946,
       0,     0,     0,     0,     0,    23,    24,     0,  3739,     0,
       0,  4189,     0,  6138,     0,     0,    25,    26,     0,     0,
    1212,     0,     0,     0,     0,     0,     0,     0,    27,    28,
      29,     0,    30,     0,  1213,     0,     0,    31,     0,     0,
       0,  4052,     0,    32,     0,     0,     0,    33,    34,    35,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4191,  4192,  4193,     0,     0,     0,     0,     0,     0,
    1123,  4194,  4053,  4195,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    36,     0,    37,     0,    38,     0,  4196,
    1214,     0,  1124,     0,    39,     0,  1124,     0,     0,     0,
       0,     0,  1215,    40,    41,     0,     0,     0,     0,  1574,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1124,
      42,  4197,     0,     0,     0,     0,     0,     0,     0,  1124,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   946,
       0,     0,    43,    44,     0,    45,     0,     0,  4054,     0,
       0,     0,    46,     0,     0,     0,     0,  1216,     0,     0,
      47,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4199,  4055,  4200,     0,     0,     0,     0,     0,     0,
      48,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
    1123,     0,     0,  4201,  4202,  1124,  1124,  1124,  1124,     0,
       0,     0,  1217,     0,    49,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,    50,     0,     0,     0,     0,     0,
       0,     0,     0,  1218,     0,     0,     0,     0,     0,     0,
       0,     0,  1219,    51,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4203,  1220,  4204,  4205,    52,     0,
       0,     0,     0,     0,     0,     0,  1221,     0,     0,    53,
       0,     0,    54,  4206,     0,    55,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2157,     0,  1222,
      56,     0,     0,     0,     0,     0,   946,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4207,
    4208,     0,     0,     0,     0,     0,     0,     0, -2312,  1223,
       0,     0,  1224,     0,  1225,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     946,  1226,  1227,     0,     0,  4210,     0,  1228,  1229,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1230,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1231,  4211,     0,     0,  1124,
       0,     0,     0,     0,    57,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1232,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    58,     0,     0,  3739,    59,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    60,     0,     0,
       0,     0,     0,     0,     0,    61,     0,     0,  4212,  4213,
       0,     0,     0,     0,     0,     0,     0,     0,    62,     0,
       0,  1233,     0,     0,  4214,  4215,  1123,  1123,     0,     0,
       0,  1123,     0,     0,     0,     0,  1234,     0,     0,     0,
    1574,    63,     0,     0,    64,  1235,     0,     0,  1236,  1237,
       0,     0,     0,  1123,     0,  1123,     0,  1123,     0,  1123,
       0,     0,     0,  1238,     0,     0,  4216,     0,     0,     0,
       0,     0,     0,  1123,     0,     0,     0,    65,     0,  1574,
       0,     0,     0,     0,     0,     0,    66,     0,     0,     0,
       0,     0,  1123,  1123,     0,     0,     0,  1123,     0,  1123,
    1239,  1123,     0,     0,     0,     0,  1123,     0,     0,  1240,
       0,     0,     0,    67,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1124,
   -3343,     0,  1241,     0,     0,     0,    68,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1574,     0,     0,
       0,  1123,     0,     0,     0,     0,     0,     0,  1123,     0,
       0,     0,     0,  4218,     0,     0,  4219,     0,     0,  4220,
       0,   946,   946,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0, -3343,     0,     0,     0,     0,     0,     0,
    1242,     0,     0,  4222,     0,  1123,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1124,     0,  1124,     0,     0,
       0,     0,     0,  4223,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1124,  1124,     0,     0,     0,     0,  1124,
       0,     0,     0,  1124,  1124,  1124,     0,     0,     0,     0,
       0,     0,     0,  1124,  1124,     0,     0,     0,     0,  1124,
       0,     0,     0,  1124,  1124,  1124,     0,  1124,  1124,  1124,
    1123,     0,     0,     0,     0,     0,     0,     0,  1124,  1123,
    1124,     0,     0,  1124,  1124,  1124,  1124,     0,  1124,     0,
    1124,  1124,     0,  1123,     0,  1574,  1123,     0,     0,     0,
       0,     0,     0,     0,  1124,  1124,  1124,  1124,  1124,     0,
    1124,  1124,  1124,  1124,  1124,  1124,     0,  1124,  1124,     0,
    1124,  1124,     0,  1124,  1124,     0,     0,  1124,  1124,     0,
    1124,  1124,     0,     0,  1124,     0,  1124,     0,     0,     0,
    1124,  1124,  1124,     0,     0,  1124,  1124,  1124,  1124,     0,
    1124,     0,     0,     0,     1,     0,     0,  1124,     0,     0,
    4465,   174,   175,  1124,  1124,  1124,  1124,     0,     0,     0,
       0,     0,     0,     0,  1124,  1124,     0,  1124,  1124,     0,
       0,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,  1124,
    1124,  1124,  1124,  1124,     0,     0,  1124,     3,     4,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     5,     0,     6,  1123,     7,
       0,     8,     0,     0,     0,     0,     0,     0,     0,     9,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2049,     0,     0,     0,     0,     0,     0,     0,     0,
      10,     0,    11,    12,     0,     0,     0,     0,     0,    13,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    14,     0,     0,     0,
      15,     0,     0,     0,     0,     0,     0,  4466,     0,     0,
      16,     0,     0,     0,     0,     0,     0,     0,  1123,    17,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      18,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      19,     0,     0,    20,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1123,
    1123,     0,  1123,     0,     0,     0,     0,     0,  1124,     0,
    1124,     0,     0,     0,    22,  1123,  1123,  1123,  4468,     0,
       0,     0,     0,     0,     0,     0,    23,    24,     0,     0,
       0,     0,     0,   946,     0,     0,     0,    25,    26,     0,
       0,  1124,  1123,  1123,     0,     0,     0,     0,     0,    27,
      28,    29,     0,    30,     0,     0,     0,     0,    31,     0,
       0,     0,     0,     0,    32,     0,  1123,     0,    33,    34,
      35,     0,     0,     0,     0,  4469,  4470,  4471,  1123,     0,
       0,     0,     0,     0,     0,     0,     0,  1123,     0,     0,
       0,     0,     0,     0,     0,  4472,     0,     0,     0,     0,
       0,     0,     0,     0,    36,     0,    37,     0,    38,     0,
       0,     0,     0,     0,     0,    39,     0,     0,     0,     0,
       0,     0,     0,     0,    40,    41,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,  1123,     0,     0,     0,  1123,
       0,    42,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4473,     0,  4474,     0,  1124,     0,     0,     0,
       0,  1574,     0,    43,    44,     0,    45,     0,     0,     0,
       0,     0,     0,    46,  4475,     0,     0,     0,     0,     0,
       0,    47,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4476,     0,     0,     0,  1124,     0,     0,  4477,
       0,    48,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4478,     0,     0,     0,     0,     0,
       0,  4479,     0,     0,     0,    49,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    50,  4480,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    51,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    52,
       0,     0,     0,     0,     0,     0,  1124,     0,     0,     0,
      53,     0,     0,    54,     0,     0,    55,     0,     0,     0,
       0,     0,     0,  4481,     0,     0,     0,     0,     0,     0,
       0,    56,     0,  4482,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1124,
       0,     0,     0,     0,     0,     0,     0,  1124,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4483,     0,  1123,  1123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4484,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4485,     0,     0,     0,     0,     0,  4486,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    57,     0,     0,     0,     0,
       0,     0,     0,  4487,     0,  1124,  1124,  1124,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    58,     0,     0,     0,    59,     0,
       0,     0,     0,     0,     0,     0,     0,  4488,    60,     0,
       0,     0,     0,     0,  4489,     0,    61,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    62,
    1123,     0,     0,  1574,     0,  1124,     0,     0,     0,     0,
       0,     0,     0,     1,     0,     0,     0,     0,     0,  4490,
       0,     0,    63,  1124,     0,    64,     0,  1124,  1124,     0,
    1124,  1124,     0,     0,  4491,  4492,     0,     0,     0,  1124,
       0,  1124,     0,     0,     0,     0,     0,  4493,     0,     0,
       0,     0,     0,     0,  1123,     0,     3,     4,    65,     0,
       0,     0,     0,     0,     0,     0,     0,    66,     0,     0,
       0,     0,  1124,  1574,     5,     0,     0,     0,     7,     0,
       8,     0,     0,     0,  4494,     0,     0,     0,     9,     0,
       0,     0,     0,     0,    67,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    10,
       0,    11,    12,     0,     0,     0,     0,    68,    13,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,     0,  1124,     0,     0,     0,     0,    15,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,  4463,     0,  4464,     0,    17,     0,
       0,  4465,   174,   175,     0,     0,     0,     0,     0,    18,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    19,
       0,     0,    20,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,  1124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    22,  -923,     0,  -923,     0,     0,     0,
       0,     0,     0,     0,     0,    23,    24,     0,     0,  1123,
       0,  1123,     0,     0,     0,     0,    25,    26,     0,     0,
       0,     0,  2049,     0,     0,     0,     0,     0,    27,    28,
       0,     0,    30,     0,     0,     0,     0,    31,     0,     0,
       0,     0,     0,    32,     0,     0,     0,    33,    34,    35,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4466,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,    36,     0,    37,     0,    38,     0,     0,
    4467,     0,     0,     0,    39,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    41,     0,     0,     0,     0,     0,
       0,     0,  1124,     0,     0,     0,     0,     0,     0,     0,
      42,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,  1123,     0,     0,     0,  4468,
       0,     0,    43,     0,     0,    45,     0,     0,     0,     0,
       0,     0,    46,     0,     0,     0,     0,     0,     0,     0,
      47,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      48,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4469,  4470,  4471,     0,
       0,     0,     0,     0,    49,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    50,     0,  4472,     0,     0,     0,
       0,  1123,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    51,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1123,     0,     0,     0,    52,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    53,
       0,     0,    54,     0,     0,    55,     0,     0,     0,     0,
       0,     0,     0,  4473,     0,  4474,     0,     0,     0,     0,
      56,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  -923,     0,  4475,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,  1124,     0,     0,  1124,     0,
       0,     0,     0,  4476,     0,     0,     0,  1124,     0,     0,
    4477,     0,     0,     0,     0,     0,  1124,     0,  1124,  1124,
       0,  1124,  1124,  1124,  1124,  4478,  1124,     0,  1124,  1124,
       0,  1124,  4479,     0,     0,     0,     0,     0,     0,  1124,
    1124,     0,     0,     0,  1124,  1124,  1124,  4480,     0,     0,
       0,     0,     0,     0,  1124,  1124,  1124,     0,  1124,     0,
    1124,     0,  1124,     0,  1124,     0,  1124,     0,     0,     0,
       0,  1124,  1124,     0,  1124,  1124,  1124,     0,     0,     0,
    1124,     0,     0,  1124,    57,     0,     0,     0,     0,     0,
       0,     0,  1124,     0,     0,  1124,     0,  1124,  1124,  1124,
       0,     0,  1124,     0,  4481,     0,     0,     0,  4465,   174,
     175,     0,     0,    58,  4482,     0,     0,    59,     0,     0,
       0,     0,     0,     0,  1124,     0,  1124,    60,     0,  1124,
       0,     0,     0,     0,     0,    61,  5464,     0,  4588,  1124,
    1124,  1124,  1124,     0,  1124,     0,     0,     0,    62,  1124,
       0,     0,  4483,     0,     0,     0,     0,     0,     0,     0,
    4590,     0,     0,     0,     0,  4484,     0,     0,  5465,     0,
       0,    63,     0,     0,    64,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2049,
       0,     0,  1125,     0,     0,     0,     0,     0,     0,     0,
    5466,     0,     0,     0,  4485,     0,     0,    65,     0,  1124,
    4486,     0,     0,     0,     0,     0,    66,     0,     0,     0,
       0,     0,  1123,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4487,  4466,     0,  1125,     0,     0,
       0,  1123,     0,    67,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,     0,  4594,  1123,    68,     0,  4488,     0,
       0,     0,     0,  1574,     0,  4489,     0,     0,     0,  1123,
       0,     0,     0,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1123,  4596,     0,     0,
       0,  4465,   174,   175,     0,     0,  4468,     0,     0,     0,
    4490,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4491,  4492,     0,     0,     0,
       0,  4598,     0,     0,     0,     0,     0,     0,  4493,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1124,  -923,     0,  -923,     0,     0,     0,
       0,     0,     0,  4469,  4470,  4471,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4494,  1124,     0,     0,     0,
       0,     0,  2049,  4472,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4466,     0,
       0,     0,  4599,     0,     0,     0,     0,     0,     0,     0,
    4473,     0,  4474,     0,  1123,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1124,     0,  4475,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4476,     0,     0,     0,     0,     0,     0,  4477,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4468,
       0,  1125,  4478,     0,     0,  1125,     0,     0,     0,  4479,
       0,     0,     0,  4601,   944,     0,     0,     0,     0,     0,
    4603,     0,     0,     0,  4480,     0,     0,     0,  1125,     0,
     944,     0,     0,     0,     0,     0,  1250,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4605,     0,     0,  4469,  4470,  4471,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4472,  1124,     0,     0,
    1124,  4481,     0,     0,     0,  1123,     0,     0,     0,     0,
       0,  4482,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,  1125,  1125,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4483,
       0,     0,     0,  4473,     0,  4474,     0,     0,     0,     0,
       0,     0,  4484,     0,  4607,     0,     0,     0,     0,     0,
       0,     0,     0,  -923,     0,  4475,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4476,     0,     0,     0,     0,     0,  1574,
    4477,  4485,     0,     0,     0,     0,     0,  4486,     0,     0,
       0,     0,     0,     0,     0,  4478,     0,     0,     0,     0,
       0,     0,  4479,     0,     0,     0,     0,     0,     0,     0,
       0,  4487,     0,     0,     0,     0,     0,  4480,  1574,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1123,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4488,     0,     0,     0,     0,
       0,     0,  4489,     0,     0,     0,     0,     0,     0,     0,
       0,   944,     0,   944,     0,   944,   944,     0,     0,     0,
       0,     0,   944,     0,  4481,   944,     0,     0,     0,     0,
       0,     0,     0,     0,  4482,     0,     0,  4490,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,     0,
       0,     0,  4491,  4492,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4493,  1123,     0,     0,     0,
       0,     0,  4483,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4484,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4494,     0,     0,     0,  1124,  1124,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1123,     0,     0,  4485,     0,     0,     0,     0,     0,
    4486,     0,     0,  1124,     0,  1124,     0,  1124,     0,  1124,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1124,  4487,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,  1124,     0,     0,     0,  1124,     0,  1124,
       0,  1124,     0,     0,     0,     0,  1124,     0,  4488,     0,
       0,     0,     0,     0,     0,  4489,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,     0,
    4490,  1124,     0,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,  4491,  4492,     0,   944,     0,
       0,  1123,     0,     0,     0,  1123,     0,     0,  4493,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4494,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,  1125,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1125,     0,     0,     0,     0,  1125,     0,
       0,     0,  1125,  1125,  1125,     0,     0,     0,     0,     0,
    1124,     0,  1125,  1125,     0,  1918,     0,     0,  1125,  1124,
    1123,     0,  1125,  1125,  1125,     0,  1125,  1125,  1125,     0,
       0,     0,     0,  1124,     0,     0,  1124,  1125,     0,  1125,
       0,     0,  1125,  1125,  1125,  1125,     0,  1125,     0,  1125,
    1125,     0,     0,     0,     0,     0,     0,  1089,     0,     0,
       0,     0,     0,  1125,  1125,  1125,  1125,  1125,     0,  1125,
    1125,  1125,  1125,  1125,  1125,     0,  1125,  1125,     0,  1125,
    1125,     0,  1125,  1125,     0,     0,  1125,  1125,     0,  1125,
    1125,     0,     0,  1125,     0,  1125,     0,     0,     0,  1125,
    1125,  1125,     0,     0,  1125,  1125,  1125,  1125,     0,  1125,
       0,     0,     0,     0,     0,     0,  1125,     0,     0,     0,
       0,     0,  1125,  1125,  1125,  1125,     0,     0,     0,     0,
       0,     0,     0,  1125,  1125,     0,  1125,  1125,     0,     0,
    1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,  1125,
    1125,  1125,  1125,     0,     0,  1125,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,   944,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1124,
    1124,     0,  1124,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1124,  1124,  1124,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,  1125,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,  1124,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,     0,     0,  1124,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,  1124,     0,     0,
    1585,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1611,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1626,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1124,     0,     0,     0,  1124,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1700,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,     0,
       0,     0,     0,  1124,  1124,     0,  1125,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1894,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,  1125,  1125,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1124,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,     0,     0,     0,  1125,  1125,     0,  1125,
    1125,     0,     0,     0,  1124,     0,     0,     0,  1125,     0,
    1125,     0,     0,     0,     0,   944,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2086,     0,     0,     0,     0,     0,     0,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   944,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,   944,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2844,
       0,     0,     0,  1125,     0,     0,     0,     0,     0,  2163,
       0,  2163,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,   944,   944,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,  2210,  1125,     0,     0,  2215,     0,  2217,
       0,     0,     0,     0,     0,     0,     0,  2232,  2233,  1124,
       0,  1124,     0,  2262,     0,     0,     0,  2267,  2268,  2269,
       0,  2271,  2272,  2273,     0,     0,     0,     0,     0,     0,
       0,     0,  2281,     0,  2284,     0,     0,  2285,  2286,  2287,
    2288,     0,     0,     0,  2292,  2293,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2305,  2306,
    2313,  2317,  2318,     0,  2321,  2322,  2323,  2326,  2327,     0,
       0,  2330,  2331,     0,  2337,  2338,     0,  2341,  2342,     0,
       0,     0,  2346,     0,  2348,  2349,     0,     0,  2352,     0,
    2353,     0,     0,     0,  2356,  2313,  2358,  1125,     0,  2364,
       0,  2366,  2367,     0,  2368,     0,     0,     0,     0,     0,
       0,  2372,     0,     0,     0,     0,     0,  2374,  2375,  2376,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,     0,     0,     0,  1124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2472,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,  3080,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1124,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2585,     0,  2590,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,   944,  1125,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,  2617,  1125,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,  1125,  1125,     0,
    1125,  1125,  1125,  1125,     0,  1125,     0,  1125,  1125,     0,
    1125,  1918,     0,     0,     0,     0,     0,     0,  1125,  1125,
       0,     0,     0,  1125,  1125,  1125,     0,     0,     0,     0,
       0,     0,     0,  1125,  1125,  1125,     0,  1125,     0,  1125,
       0,  1125,     0,  1125,     0,  1125,     0,     0,     0,     0,
    1125,  1125,     0,  1125,  1125,  1125,     0,     0,     0,  1125,
       0,     0,  1125,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,  2696,     0,  1125,     0,  1125,  1125,  1125,     0,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2720,     0,     0,  1125,     0,  1125,     0,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,  1125,
    1125,  1125,     0,  1125,     0,     0,     0,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2756,     0,     0,     0,     0,     0,     0,     0,  3328,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   944,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1124,     0,     0,     0,     0,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    2833,     0,     0,     0,   944,  1124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   944,  1124,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1124,     0,     0,     0,
       0,     0,  1125,  2888,     0,     0,     0,     0,     0,     0,
       0,  2895,  2896,     0,     0,     0,     0,     0,  3443,   944,
       0,     0,     0,     0,     0,     0,     0,     0,   944,   944,
     944,     0,     0,  3080,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3734,     0,     0,     0,  3734,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2915,     0,     0,     0,     0,
       0,     0,  1125,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2954,
    2956,  2958,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1124,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1125,
       0,     0,     0,     0,     0,     0,     0,  3020,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3028,     0,  3029,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3054,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3068,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1125,     0,  3125,  1125,
       0,     0,     0,     0,     0,     0,   944,     0,     0,     0,
       0,     0,   944,     0,     0,  2696,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3151,     0,     0,     0,     0,     0,     0,  2590,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1124,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1124,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1124,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3241,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3268,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3268,  1124,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1124,     0,     0,     0,  1125,  1125,     0,     0,     0,
    1125,     0,     0,     0,     0,  3734,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,     0,  1125,     0,  1125,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,   944,     0,     0,
       0,     0,  1125,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,  1125,     0,     0,     0,  1125,     0,  1125,     0,
    1125,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3471,     0,     0,     0,  3473,
       0,     0,  3474,     0,     0,     0,     0,     0,     0,     0,
    1125,  1124,     0,     0,     0,  1124,     0,  1125,     0,     0,
    3753,     0,     0,     0,     0,  3757,  3758,  3759,  3760,     0,
    3761,     0,  3762,  3763,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3768,  3769,     0,     0,     0,  3770,  3771,
    3772,     0,     0,     0,  1125,     0,     0,     0,  3774,  3775,
    3776,     0,  3777,     0,  3779,     0,  3781,     0,  3783,     0,
    3785,     0,     0,     0,     0,  2323,  3788,     0,  2323,     0,
    3791,     0,     0,     0,  3792,     0,     0,  3793,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3799,
       0,  3800,  3801,  3802,     0,     0,  3803,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3825,     0,     0,     0,     0,     0,     0,
    1124,     0,     0,     0,  3835,  3838,     0,     0,  3843,  1125,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3886,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2590,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2590,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
    2696,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,  1125,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,  1125,  1125,     0,     0,     0,
       0,     0,     0,  4507,  4507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,  1125,     0,  4115,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,  1125,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3328,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,     0,     0,  1125,     0,
    4507,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   944,     0,     0,     0,     0,     0,
       0,  4248,     0,     0,  4249,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   944,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   944,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1125,  1125,     0,     0,     0,     0,     0,     0,
    3734,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4277,  4278,     0,     0,     0,  4283,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4303,     0,  4304,
       0,  4305,     0,  4306,     0,     0,     0,     0,     0,  1125,
       0,     0,     0,     0,     0,     0,     0,  4324,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4345,  4346,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3268,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,     0,     0,     0,  4507,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4393,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2590,
    1125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4507,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4537,     0,     0,     0,  1125,     0,
    1125,     0,     0,  3268,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3268,     0,     0,
    4549,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3443,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   944,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4668,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4747,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4772,  4773,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4780,
    4781,  4782,     0,     0,  4507,     0,     0,  4507,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3443,     0,     0,     0,     0,     0,  4804,  4805,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4827,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2590,
       0,     0,     0,  2590,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4507,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3443,     0,
       0,     0,  3734,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1125,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  5095,  5096,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5627,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3734,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   944,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   944,     0,     0,     0,     0,     0,     0,
       0,     0,  3734,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1125,  3268,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3268,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   944,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  2590,     0,     0,     0,     0,
       0,     0,     0,     0,  1125,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2696,     0,  5405,     0,     0,  1125,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     944,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1125,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1125,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   944,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4507,     0,     0,  1125,     0,     0,     0,     0,
       0,     0,     0,     0,  3328,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4507,
    3734,     0,     0,  4507,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5539,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3268,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4507,     0,     0,     0,
       0,     0,     0,     0,  4507,     0,     0,     0,     0,     0,
    4507,  4507,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4507,     0,     0,     0,     0,     0,     0,
    1125,     0,     0,     0,  1125,     0,     0,     0,     0,     0,
    4507,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   944,   944,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4507,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4507,     0,     0,
       0,  4507,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1125,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5751,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3268,     0,     0,     0,  4507,
    6266,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2590,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5801,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4507,     0,  4507,  4507,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4507,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4507,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4507,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   944,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  6024,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   960,
       0,     0,     0,     0,   961,   962,     0,     0,     0,     0,
       0,     0,     0,     0,  6155,   963,   964,     0,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
    1700,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,    32,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,  2590,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,    39,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,    41,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,  2590,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,  2310,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,  2311,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
    2312,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,  3882,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3883,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,  3884,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
    3885,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,  1584,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,  2587,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,  2588,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,  2953,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,  2955,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,  2957,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,  4852,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,  2588,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1610,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,  2161,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  2162,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  2162,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,  2383,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1004,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,     0,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,  2384,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  3784,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,  1014,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  3798,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,  1014,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,  6250,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,     0,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1577,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,     0,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1578,  1579,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1693,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,     0,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1578,  1579,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1695,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,     0,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1578,  1579,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  1004,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,     0,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
     963,   964,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,   976,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   977,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  2404,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,     0,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  1080,  1081,   960,
       0,     0,     0,  1082,   961,   962,     0,     0,     0,  1083,
       0,     0,     0,  1084,  1085,   963,   964,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,   976,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   977,   978,   979,   980,     0,     0,     0,
       0,     0,     0,     0,   981,   982,     0,   983,     0,     0,
       0,     0,     0,     0,   984,   985,     0,     0,   986,   987,
     988,   989,     0,   990,   176,     0,   991,   992,     0,     0,
       0,     0,     0,     0,     0,   993,     0,     0,   994,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,   995,   996,   997,     0,
     998,     0,     0,     0,     0,     0,     0,     0,   999,  1000,
    1001,   178,     0,     0,     0,     0,     0,  1002,     0,     0,
     179,     0,     0,     0,     0,     0,  1003,     0,     0,  2406,
       0,     0,     0,     0,     0,     0,     0,     0,  1005,     0,
    1006,     0,  1007,     0,     0,     0,     0,     0,  1008,     0,
       0,     0,     0,     0,     0,     0,     0,  1009,  1010,     0,
    1011,     0,     0,     0,  1012,   180,     0,     0,     0,  1013,
       0,     0,   181,     0,     0,  1015,  1016,  1017,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,  1019,  1020,  1021,     0,
    1022,     0,     0,     0,     0,     0,     0,  1023,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1024,     0,
       0,     0,     0,     0,     0,     0,  1025,  1026,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1027,     0,     0,     0,     0,
       0,     0,  1028,  1029,     0,  1030,  1031,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1033,  1034,  1035,
       0,     0,     0,     0,     0,  1036,  1037,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,  1038,  1039,  1040,
    1041,   197,   198,   199,  1042,   201,   202,   203,   204,   205,
     206,  1043,   208,   209,   210,   211,   212,   213,   214,  1044,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,  1045,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,  1046,
     245,  1047,  1048,  1049,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,  1050,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    1051,  1052,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,  1053,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,  1054,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
    1055,  1056,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,  1057,   405,   406,   407,
     408,   409,  1058,   411,   412,   413,   414,   415,   416,   417,
     418,  1059,  1060,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,  1061,   443,   444,   445,   446,
     447,   448,   449,  1062,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,  1063,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  1064,
     507,   508,   509,   510,   511,   512,  1065,   514,   515,   516,
     517,   518,  1066,   520,  1067,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,  1068,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  1069,  1070,  1071,  1072,
     574,   575,   576,   577,  1073,  1074,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,  1075,   593,
     594,  1076,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,  1077,   608,  1078,   610,   611,   612,     0,
     613,   614,   615,  1079,     0,     0,     0,     0,     0,     0,
       0,     0,  1080,  1081,   960,     0,     0,     0,  1082,   961,
     962,     0,     0,     0,  1083,     0,     0,     0,  1084,  1085,
    6107,  6108,  1086,   965,   966,   967,   968,   969,   970,   971,
     972,   973,   974,   975,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   978,
     979,   980,     0,     0,     0,     0,     0,     0,     0,   981,
     982,     0,   983,     0,     0,     0,     0,     0,     0,   984,
     985,     0,     0,   986,   987,   988,   989,     0,   990,   176,
       0,   991,   992,     0,     0,     0,     0,     0,     0,     0,
     993,     0,     0,   994,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,   995,   996,   997,     0,   998,     0,     0,     0,     0,
       0,     0,     0,   999,  1000,  1001,   178,     0,     0,     0,
       0,     0,  1002,     0,     0,   179,     0,     0,     0,     0,
       0,  1003,     0,     0,  1577,     0,     0,     0,     0,     0,
       0,     0,     0,  1005,     0,  1006,     0,  1007,     0,     0,
       0,     0,     0,  1008,     0,     0,     0,     0,     0,     0,
       0,     0,  1009,  1010,     0,  1011,     0,     0,     0,  1012,
     180,     0,     0,     0,  1013,     0,     0,   181,     0,     0,
    1015,  1016,  1017,  1018,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,  1019,  1020,  1021,     0,  1022,     0,     0,     0,     0,
       0,     0,  1023,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1024,     0,     0,     0,     0,     0,     0,
       0,  1025,  1026,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1027,     0,     0,     0,     0,     0,     0,  1028,  1029,     0,
    1030,  1031,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1032,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1033,  1034,  1035,     0,     0,     0,     0,     0,
    1036,  1037,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,  1038,  1039,  1040,  1041,   197,   198,   199,  1042,
     201,   202,   203,   204,   205,   206,  1043,   208,   209,   210,
     211,   212,   213,   214,  1044,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,  1045,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,  1046,   245,  1047,  1048,  1049,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,  1050,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,  1051,  1052,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,  1053,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,  1054,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,  1055,  1056,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,  1057,   405,   406,   407,   408,   409,  1058,   411,   412,
     413,   414,   415,   416,   417,   418,  1059,  1060,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
    1061,   443,   444,   445,   446,   447,   448,   449,  1062,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
    1063,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,  1064,   507,   508,   509,   510,   511,
     512,  1065,   514,   515,   516,   517,   518,  1066,   520,  1067,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,  1068,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,  1069,  1070,  1071,  1072,   574,   575,   576,   577,  1073,
    1074,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,  1075,   593,   594,  1076,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,  1077,   608,
    1078,   610,   611,   612,     0,   613,   614,   615,  1079,     0,
       0,     0,     0,     0,     0,     0,     0,  6109,  6110,   960,
       0,     0,     0,     0,  1616,     0,     0,     0,     0,  6111,
       0,     0,     0,     0,  1085,  1570,  1571,  1086,   965,   966,
     967,   968,   969,   970,   971,   972,   973,   974,   975,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,   997,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,  1018,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1032,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
    2440,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,  2441,   571,   572,  2442,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,  6400,
     613,   614,   615,   616,  2360,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1086,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,  6400,
     613,   614,   615,   616,  2360,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,  6401,     0,     0,     0,     0,
       0,     0,  2361,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,  1616,
     613,   614,   615,   616,     0,     0,     0,     0,     0,     0,
    1570,  1571,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2361,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,  1616,   613,   614,   615,   616,     0,
       0,     0,     0,     0,     0,  1570,  1571,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1617,
       0,     0,     0,     0,     0,     0,     0,  1086,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,  2360,
     613,   614,   615,   616,     0,     0,     0,     0,     0,     0,
     174,   175,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1086,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  2361,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4906,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   754,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,  3173,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3174,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   756,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   758,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,  4907,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,   174,   175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4908,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1351,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    32,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    39,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    41,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,   174,   175,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1352,     0,     0,
       0,     0,     0,     0,     0,   786,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1350,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1351,     0,     0,     0,     0,     0,     0,
       0,     0,   179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1352,     0,     0,     0,
       0,  1353,     0,     0,   786,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1351,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1352,     0,     0,     0,     0,
    1353,     0,     0,   786,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1351,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1352,     0,     0,     0,     0,     0,
       0,     0,   786,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,     0,     0,     0,   179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,     0,   613,
     614,   615,   616,   174,   175,     0,     0,     0,     0,     0,
       0,     0,     0,  2823,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   786,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   182,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   183,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,     0,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,     0,   613,   614,
     615,   616,   174,   175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5092,     0,     0,     0,     0,     0,     0,     0,
    4908,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,  5422,     0,     0,   179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,     0,   613,   614,   615,
     616,   174,   175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4908,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
       0,   306,   307,   308,   783,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   784,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   785,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   786,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   786,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,   174,   175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4908,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     6,     0,     0,
       0,     0,     0,     0,     0,     0,   913,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,   914,     0,     0,     0,    14,     0,     0,   915,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
      16,     0,     0,   916,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   917,     0,     0,     0,
       0,     0,     0,     0,   918,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,   919,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    40,     0,     0,     0,     0,   185,
     186,   187,   921,   189,   190,     0,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,     0,   208,   209,   210,   211,   212,
     213,   214,   215,     0,   922,     0,     0,   219,   220,   221,
     222,   223,     0,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   234,   235,   236,   237,   238,   923,   240,   241,
     242,   243,     0,     0,     0,     0,     0,     0,   249,     0,
     251,     0,   253,   254,     0,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,     0,     0,     0,   305,     0,   924,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
       0,     0,     0,     0,   321,   322,   925,   324,   325,   326,
       0,   328,   329,     0,   331,   332,     0,     0,   334,     0,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   926,     0,     0,   442,     0,
     444,   445,     0,   447,   448,   449,   450,     0,   452,   453,
     454,   455,     0,     0,     0,     0,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,     0,   487,     0,   489,   490,   491,     0,   493,
     494,     0,   496,   497,   498,   499,   500,   501,     0,   503,
     504,   505,   506,   507,   508,   509,     0,   511,   512,   513,
       0,   515,   516,   517,   518,   519,     0,   521,   522,     0,
       0,   525,   526,     0,     0,   529,   530,   531,     0,   533,
       0,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,     0,   544,   545,     0,   547,     0,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,     0,   570,
     571,   572,   573,   574,   575,   576,   577,   578,     0,   580,
     581,     0,   583,   584,   585,   586,     0,     0,   589,   590,
       0,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,     0,     0,   610,
     611,     0,     0,   613,     0,   615,   616,   174,   175,   803,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   707,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5754,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1427,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
       0,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1688,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
    1175,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,     0,     0,
       0,     0,     0,     0,     0,  2415,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,  1178,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
    1179,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,  1180,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,  1181,   324,   325,   326,   327,  1182,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,  1183,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,  1184,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,  1185,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,  1186,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,  1187,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,  1188,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,  1189,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,  1190,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,  1191,   609,   610,   611,   612,
    1175,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,  1178,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
    1179,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,  1180,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,  1181,   324,   325,   326,   327,  1182,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,  1183,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,  1184,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,  1185,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,  1186,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,  1187,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,  1188,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,  1191,   609,   610,   611,   612,
    1767,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
    2007,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
    2200,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   174,   175,   803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
    2606,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2607,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
    2606,   613,   614,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,  2021,   962,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,  2022,     0,  2023,     0,  2024,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2025,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,  2021,   962,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,  2022,     0,  2023,     0,  2024,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2701,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
    2702,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,  2021,   962,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,  2022,     0,  2023,     0,  2024,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4154,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,  2021,   962,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,  2022,     0,  2023,     0,  2024,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,  1570,  1571,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,  2421,  2422,
    2423,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,  4388,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,     0,     0,     0,   179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,     0,   613,
     614,   615,   616,   174,   175,     0,     0,     0,     0,     0,
       0,     0,     0,  2805,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   182,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   183,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,     0,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,     0,   613,   614,
     615,   616,  1570,  1571,     0,     0,     0,     0,     0,     0,
       0,     0,  4169,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,     0,     0,     0,   179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,     0,   613,   614,   615,
     616,   174,   175,     0,     0,     0,     0,     0,     0,     0,
       0,  5244,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,     0,     0,     0,     0,     0,     0,     0,     0,
    5570,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,     0,     0,  2860,     0,     0,  5935,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     702,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,   703,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
    5522,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  5523,     0,   674,     0,
    5524,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,   174,   175,
     803,     0,     0,     0,     0,     0,     0,  2861,     0,     0,
     707,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1416,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1772,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1773,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,   174,   175,   803,
    1417,     0,     0,     0,     0,     0,     0,     0,     0,   707,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1416,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,     0,  1417,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3476,  3477,  3478,  3479,  3480,  3481,  3482,  3483,
    3484,  3485,  3486,  4051,  4183,  3488,  3489,  3490,  4184,  4185,
    3491,  3492,  3493,  3494,  3495,  3496,  3497,  3498,  4186,  3500,
    3501,     0,  3502,  3503,  3504,  3505,  3506,  3507,  3508,  3509,
    3510,  3511,  3512,     0,  3513,   176,  3514,  3515,  3516,  3517,
    3518,  3519,  3520,  4187,  3522,  3523,  3524,  3525,  3526,  3527,
    3528,  3529,  3530,  3531,  3532,  3533,  4188,  3535,  3536,  3537,
    3538,  3539,  3540,   177,  3541,  3542,  3543,  3544,  3545,  3546,
    3547,  3548,  4189,  3550,     0,  3551,  3552,  3553,  3554,  3555,
       0,     0,   178,  3556,  3557,  3558,  3559,  3560,  3561,  3562,
    3563,  5602,  3565,  3566,  3567,  3568,  3569,  3570,  3571,  3572,
    4190,  3574,  4052,  3576,  3577,  3578,  3579,  3580,  3581,  3582,
    3583,  3584,  3585,  3586,  3587,  3588,  3589,  3590,  3591,     0,
    3592,  3593,  4191,  4192,  4193,  3594,  3595,  3596,  3597,  3598,
    3599,  3600,  4194,  4053,  4195,  3601,   180,  3602,  3603,  3604,
    3605,  3606,  3607,   181,  3608,  3609,  3610,  3611,  3612,  3613,
    4196,  3614,  3615,  3616,  3617,   182,  3618,  3619,  3620,  3621,
    3622,  3623,  3624,  3625,  3626,  3627,   183,  3628,  3629,  3630,
    3631,  3632,  3633,  3634,  3635,  3636,  3637,  3638,  3639,  3640,
    3641,  3642,  4197,  3643,  3644,  3645,  3646,  3647,  3648,  3649,
    3650,  3651,  3652,  3653,  3654,  3655,  3656,  3657,  3658,  3659,
    3660,  3661,  3662,  3663,  3664,  3665,  4198,  3666,  3667,  4054,
    3668,  3669,  3670,  3671,  3672,  3673,  3674,  3675,  3676,  3677,
    3678,  3679,  3680,  3681,  3682,  3683,  3684,   184,  3685,  3686,
    3687,  3688,  4199,  4055,  4200,  3689,  3690,  3691,  3692,  3693,
    3694,  3695,  3696,     0,  3698,  3699,  3700,  3701,  3702,  3703,
    3704,  3705,  3706,  3707,  4201,  4202,  3709,  3710,  3711,  3712,
    3713,  3714,  3715,  3716,  3717,  3718,  3719,   185,   186,   187,
       0,   189,   190,   191,   192,   193,   194,   195,   196,  3720,
    3721,  3722,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,  5603,   220,  5604,  5605,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,  5606,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
    5607,  5608,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,  5609,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,  5610,   317,   318,   319,
       0,   320,   321,   322,  3435,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,  5611,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,  5612,
    5613,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,  5614,  5615,   434,  3726,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,  5616,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,  5617,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,  5618,   568,   569,  5619,   571,   572,
    5620,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,  5621,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,  3436,   609,   610,   611,   612,
       0,   613,   614,   615,  5622,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3476,  3477,  3478,  3479,  3480,  3481,  3482,  3483,  3484,
    3485,  3486,  4051,  4183,  3488,  3489,  3490,  4184,  4185,  3491,
    3492,  3493,  3494,  3495,  3496,  3497,  3498,  4186,  3500,  3501,
       0,  3502,  3503,  3504,  3505,  3506,  3507,  3508,  3509,  3510,
    3511,  3512,     0,  3513,   176,  3514,  3515,  3516,  3517,  3518,
    3519,  3520,  4187,  3522,  3523,  3524,  3525,  3526,  3527,  3528,
    3529,  3530,  3531,  3532,  3533,  4188,  3535,  3536,  3537,  3538,
    3539,  3540,   177,  3541,  3542,  3543,  3544,  3545,  3546,  3547,
    3548,  4189,  3550,     0,  3551,  3552,  3553,  3554,  3555,     0,
       0,   178,  3556,  3557,  3558,  3559,  3560,  3561,  3562,  3563,
    3564,  3565,  3566,  3567,  3568,  3569,  3570,  3571,  3572,  4190,
    3574,  4052,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,  3586,  3587,  3588,  3589,  3590,  3591,     0,  3592,
    3593,  4191,  4192,  4193,  3594,  3595,  3596,  3597,  3598,  3599,
    3600,  4194,  4053,  4195,  3601,   180,  3602,  3603,  3604,  3605,
    3606,  3607,   181,  3608,  3609,  3610,  3611,  3612,  3613,  4196,
    3614,  3615,  3616,  3617,   182,  3618,  3619,  3620,  3621,  3622,
    3623,  3624,  3625,  3626,  3627,   183,  3628,  3629,  3630,  3631,
    3632,  3633,  3634,  3635,  3636,  3637,  3638,  3639,  3640,  3641,
    3642,  4197,  3643,  3644,  3645,  3646,  3647,  3648,  3649,  3650,
    3651,  3652,  3653,  3654,  3655,  3656,  3657,  3658,  3659,  3660,
    3661,  3662,  3663,  3664,  3665,  4198,  3666,  3667,  4054,  3668,
    3669,  3670,  3671,  3672,  3673,  3674,  3675,  3676,  3677,  3678,
    3679,  3680,  3681,  3682,  3683,  3684,   184,  3685,  3686,  3687,
    3688,  4199,  4055,  4200,  3689,  3690,  3691,  3692,  3693,  3694,
    3695,  3696,     0,  3698,  3699,  3700,  3701,  3702,  3703,  3704,
    3705,  3706,  3707,  4201,  4202,  3709,  3710,  3711,  3712,  3713,
    3714,  3715,  3716,  3717,  3718,  3719,   185,   186,   187,     0,
     189,   190,   191,   192,   193,   194,   195,   196,  3720,  3721,
    3722,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,  4203,   220,  4204,  4205,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,  4206,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,  4207,
    4208,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,  4209,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,  4210,   317,   318,   319,     0,
     320,   321,   322,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,  4211,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
       0,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,  4212,  4213,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,     0,  4214,  4215,   434,  3726,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,  4216,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,  4217,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
       0,   518,   519,   520,   521,   522,   523,     0,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,  4218,   568,   569,  4219,   571,   572,  4220,
     574,   575,   576,   577,   578,   579,  4221,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,     0,  4222,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,     0,   609,   610,   611,   612,     0,
     613,   614,   615,  4223,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3476,  3477,  3478,  3479,  3480,  3481,  3482,  3483,  3484,  3485,
    3486,  4051,  4183,  3488,  3489,  3490,  4184,  4185,  3491,  3492,
    3493,  3494,  3495,  3496,  3497,  3498,  4186,  3500,  3501,     0,
    3502,  3503,  3504,  3505,  3506,  3507,  3508,  3509,  3510,  3511,
    3512,     0,  3513,   176,  3514,  3515,  3516,  3517,  3518,  3519,
    3520,  4187,  3522,  3523,  3524,  3525,  3526,  3527,  3528,  3529,
    3530,  3531,  3532,  3533,  4188,  3535,  3536,  3537,  3538,  3539,
    3540,   177,  3541,  3542,  3543,  3544,  3545,  3546,  3547,  3548,
    4189,  3550,     0,  3551,  3552,  3553,  3554,  3555,     0,     0,
     178,  3556,  3557,  3558,  3559,  3560,  3561,  3562,  3563,  3564,
    3565,  3566,  3567,  3568,  3569,  3570,  3571,  3572,  4190,  3574,
    4052,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,  3584,
    3585,  3586,  3587,  3588,  3589,  3590,  3591,     0,  3592,  3593,
    4191,  4192,  4193,  3594,  3595,  3596,  3597,  3598,  3599,  3600,
    4194,  4053,  4195,  3601,   180,  3602,  3603,  3604,  3605,  3606,
    3607,   181,  3608,  3609,  3610,  3611,  3612,  3613,  4196,  3614,
    3615,  3616,  3617,   182,  3618,  3619,  3620,  3621,  3622,  3623,
    3624,  3625,  3626,  3627,   183,  3628,  3629,  3630,  3631,  3632,
    3633,  3634,  3635,  3636,  3637,  3638,  3639,  3640,  3641,  3642,
    4197,  3643,  3644,  3645,  3646,  3647,  3648,  3649,  3650,  3651,
    3652,  3653,  3654,  3655,  3656,  3657,  3658,  3659,  3660,  3661,
    3662,  3663,  3664,  3665,  4198,  3666,  3667,  4054,  3668,  3669,
    3670,  3671,  3672,  3673,  3674,  3675,  3676,  3677,  3678,  3679,
    3680,  3681,  3682,  3683,  3684,   184,  3685,  3686,  3687,  3688,
    4199,  4055,  4200,  3689,  3690,  3691,  3692,  3693,  3694,  3695,
    3696,     0,  3698,  3699,  3700,  3701,  3702,  3703,  3704,  3705,
    3706,  3707,  4201,  4202,  3709,  3710,  3711,  3712,  3713,  3714,
    3715,  3716,  3717,  3718,  3719,   185,   186,   187,     0,   189,
     190,   191,   192,   193,   194,   195,   196,  3720,  3721,  3722,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,  4203,   220,  4204,  4205,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,     0,  4206,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,  4207,  4208,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
    4209,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,  4210,   317,   318,   319,     0,   320,
     321,   322,     0,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,  4211,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,     0,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,  4212,  4213,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,     0,  4214,  4215,   434,  3726,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,     0,  4216,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,  5643,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,     0,
     518,   519,   520,   521,   522,   523,     0,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,  4218,   568,   569,  4219,   571,   572,  4220,   574,
     575,   576,   577,   578,   579,  5644,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,     0,  4222,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,     0,   609,   610,   611,   612,     0,   613,
     614,   615,  4223,   174,   175,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3476,
    3477,  3478,  3479,  3480,  3481,  3482,  3483,  3484,  3485,  3486,
    4051,  4183,  3488,  3489,  3490,  4184,  4185,  3491,  3492,  3493,
    3494,  3495,  3496,  3497,  3498,  4186,  3500,  3501,     0,  3502,
    3503,  3504,  3505,  3506,  3507,  3508,  3509,  3510,  3511,  3512,
       0,  3513,   176,  3514,  3515,  3516,  3517,  3518,  3519,  3520,
    4187,  3522,  3523,  3524,  3525,  3526,  3527,  3528,  3529,  3530,
    3531,  3532,  3533,  4188,  3535,  3536,  3537,  3538,  3539,  3540,
     177,  3541,  3542,  3543,  3544,  3545,  3546,  3547,  3548,  4189,
    3550,     0,  3551,  3552,  3553,  3554,  3555,     0,     0,   178,
    3556,  3557,  3558,  3559,  3560,  3561,  3562,  3563,  3564,  3565,
    3566,  3567,  3568,  3569,  3570,  3571,  3572,  4190,  3574,  4052,
    3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,  3584,  3585,
    3586,  3587,  3588,  3589,  3590,  3591,     0,  3592,  3593,  4191,
    4192,  4193,  3594,  3595,  3596,  3597,  3598,  3599,  3600,  4194,
    4053,  4195,  3601,   180,  3602,  3603,  3604,  3605,  3606,  3607,
     181,  3608,  3609,  3610,  3611,  3612,  3613,  4196,  3614,  3615,
    3616,  3617,   182,  3618,  3619,  3620,  3621,  3622,  3623,  3624,
    3625,  3626,  3627,   183,  3628,  3629,  3630,  3631,  3632,  3633,
    3634,  3635,  3636,  3637,  3638,  3639,  3640,  3641,  3642,  4197,
    3643,  3644,  3645,  3646,  3647,  3648,  3649,  3650,  3651,  3652,
    3653,  3654,  3655,  3656,  3657,  3658,  3659,  3660,  3661,  3662,
    3663,  3664,  3665,  4198,  3666,  3667,  4054,  3668,  3669,  3670,
    3671,  3672,  3673,  3674,  3675,  3676,  3677,  3678,  3679,  3680,
    3681,  3682,  3683,  3684,   184,  3685,  3686,  3687,  3688,  4199,
    4055,  4200,  3689,  3690,  3691,  3692,  3693,  3694,  3695,  3696,
       0,  3698,  3699,  3700,  3701,  3702,  3703,  3704,  3705,  3706,
    3707,  4201,  4202,  3709,  3710,  3711,  3712,  3713,  3714,  3715,
    3716,  3717,  3718,  3719,   185,   186,   187,     0,   189,   190,
     191,   192,   193,   194,   195,   196,  3720,  3721,  3722,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,  4203,   220,  4204,  4205,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
       0,  4206,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,  4207,  4208,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,  4209,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,  4210,   317,   318,   319,     0,   320,   321,
     322,     0,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,  4211,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,     0,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,  4212,  4213,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,     0,  4214,  4215,   434,  3726,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,     0,  4216,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,  5668,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,     0,   518,
     519,   520,   521,   522,   523,     0,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,  4218,   568,   569,  4219,   571,   572,  4220,   574,   575,
     576,   577,   578,   579,  5669,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
       0,  4222,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,     0,   609,   610,   611,   612,     0,   613,   614,
     615,  4223,   174,   175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3476,  3477,
    3478,  3479,  3480,  3481,  3482,  3483,  3484,  3485,  3486,  4051,
    4183,  3488,  3489,  3490,  4184,  4185,  3491,  3492,  3493,  3494,
    3495,  3496,  3497,  3498,  4186,  3500,  3501,     0,  3502,  3503,
    3504,  3505,  3506,  3507,  3508,  3509,  3510,  3511,  3512,     0,
    3513,   176,  3514,  3515,  3516,  3517,  3518,  3519,  3520,  4187,
    3522,  3523,  3524,  3525,  3526,  3527,  3528,  3529,  3530,  3531,
    3532,  3533,  4188,  3535,  3536,  3537,  3538,  3539,  3540,   177,
    3541,  3542,  3543,  3544,  3545,  3546,  3547,  3548,  4189,  3550,
       0,  3551,  3552,  3553,  3554,  3555,     0,     0,   178,  3556,
    3557,  3558,  3559,  3560,  3561,  3562,  3563,  3564,  3565,  3566,
    3567,  3568,  3569,  3570,  3571,  3572,  4190,  3574,  4052,  3576,
    3577,  3578,  3579,  3580,  3581,  3582,  3583,  3584,  3585,  3586,
    3587,  3588,  3589,  3590,  3591,     0,  3592,  3593,  4191,  4192,
    4193,  3594,  3595,  3596,  3597,  3598,  3599,  3600,  4194,  4053,
    4195,  3601,   180,  3602,  3603,  3604,  3605,  3606,  3607,   181,
    3608,  3609,  3610,  3611,  3612,  3613,  4196,  3614,  3615,  3616,
    3617,   182,  3618,  3619,  3620,  3621,  3622,  3623,  3624,  3625,
    3626,  3627,   183,  3628,  3629,  3630,  3631,  3632,  3633,  3634,
    3635,  3636,  3637,  3638,  3639,  3640,  3641,  3642,  4197,  3643,
    3644,  3645,  3646,  3647,  3648,  3649,  3650,  3651,  3652,  3653,
    3654,  3655,  3656,  3657,  3658,  3659,  3660,  3661,  3662,  3663,
    3664,  3665,  4198,  3666,  3667,  4054,  3668,  3669,  3670,  3671,
    3672,  3673,  3674,  3675,  3676,  3677,  3678,  3679,  3680,  3681,
    3682,  3683,  3684,   184,  3685,  3686,  3687,  3688,  4199,  4055,
    4200,  3689,  3690,  3691,  3692,  3693,  3694,  3695,  3696,     0,
    3698,  3699,  3700,  3701,  3702,  3703,  3704,  3705,  3706,  3707,
    4201,  4202,  3709,  3710,  3711,  3712,  3713,  3714,  3715,  3716,
    3717,  3718,  3719,   185,   186,   187,     0,   189,   190,   191,
     192,   193,   194,   195,   196,  3720,  3721,  3722,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,  4203,   220,  4204,  4205,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,     0,
    4206,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,  4207,  4208,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,  4209,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,  4210,   317,   318,   319,     0,   320,   321,   322,
       0,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,  4211,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,     0,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,  4212,  4213,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
       0,  4214,  4215,   434,  3726,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,     0,  4216,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,     0,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,     0,   518,   519,
     520,   521,   522,   523,     0,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
    4218,   568,   569,  4219,   571,   572,  4220,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,     0,
    4222,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,     0,   609,   610,   611,   612,     0,   613,   614,   615,
    4223,   174,   175,   803,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   862,
     863,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   864,     0,     0,     0,   865,     0,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   866,     0,     0,     0,     0,     0,     0,
       0,     0,   867,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   868,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,   869,     0,     0,
       0,     0,   870,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   871,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   872,     0,     0,     0,   873,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   874,     0,     0,
       0,   875,   876,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   877,     0,     0,     0,     0,     0,     0,   878,
     879,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   880,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   881,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   882,   300,   301,   302,   303,   883,   305,     0,
       0,   306,   307,   308,   309,   310,   311,   312,   884,   885,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   886,   465,   466,   467,   887,   469,   470,
     471,   472,   473,   888,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   889,   486,   487,   488,   489,   490,
     890,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   891,   524,   525,   526,   892,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   893,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,   803,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   707,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1153,   863,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   864,     0,     0,     0,   865,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   866,     0,     0,     0,     0,     0,     0,     0,
       0,   867,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   868,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,   869,     0,     0,     0,
       0,   870,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   871,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   872,     0,     0,     0,   873,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   874,     0,     0,     0,
     875,   876,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   877,     0,     0,     0,     0,     0,     0,   878,   879,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,  1154,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   880,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   881,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   882,   300,   301,   302,   303,   883,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   884,   885,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   886,   465,   466,   467,  1155,   469,   470,   471,
     472,   473,   888,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   889,   486,   487,   488,   489,   490,   890,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   891,   524,   525,   526,   892,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   893,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,  2222,  2223,  5343,     0,  5344,     0,
    5345,   707,  5346,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5347,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,   174,   175,
     803,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     707,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   865,  1427,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,   174,   175,   803,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   707,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1787,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1788,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,     0,     0,
    1311,     0,     0,  1312,  1313,     0,     0,     0,  1314,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,   174,   175,   803,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   707,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3095,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3096,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,   803,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   707,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1772,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1773,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,     0,     0,     0,   179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,     0,   613,
     614,   615,   616,   174,   175,   803,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   707,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  5142,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  5143,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   182,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   183,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,     0,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,     0,   613,   614,
     615,   616,   174,   175,   803,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   707,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5504,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5505,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,     0,     0,     0,   179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,     0,   613,   614,   615,
     616,   174,   175,   803,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1427,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,   803,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   707,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,   803,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   707,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   865,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,  1570,  1571,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,  2421,  2422,  2423,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,   174,   175,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3430,  3431,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,  3432,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,     0,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,  3433,  3434,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,  3435,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,  3436,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,   803,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1772,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,  5353,     0,     0,  5354,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,  5355,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,     0,     0,     0,   179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   673,     0,     0,     0,     0,     0,
       0,     0,     0,   674,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,     0,   613,
     614,   615,   616,   174,   175,   803,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   707,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   182,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   183,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,     0,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,     0,   613,   614,
     615,   616,   174,   175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1542,     0,     0,     0,     0,     0,     0,   178,  1543,
       0,     0,     0,     0,     0,     0,     0,   179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,  1544,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,     0,   613,   614,   615,
     616,   174,   175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4384,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   674,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1465,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,  1570,  1571,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1572,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,  1570,  1571,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1782,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,     0,   613,   614,   615,   616,  1570,  1571,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2489,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,  2490,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2502,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3166,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,     0,     0,     0,   179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,     0,   613,
     614,   615,   616,  1570,  1571,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2489,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   182,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   183,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,     0,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,     0,   613,   614,
     615,   616,   174,   175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,     0,     0,     0,   179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,  4437,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,     0,   613,   614,   615,
     616,   174,   175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   707,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  4868,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   179,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  5445,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,   174,   175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  5455,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,   174,   175,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,   179,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,  5887,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   179,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     188,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
       0,   613,   614,   615,   616,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
     179,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,   188,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   714,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,     0,     0,     0,   179,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   185,   186,   187,   188,   189,
     190,   191,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,     0,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   793,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,     0,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,     0,     0,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,   317,   318,   319,     0,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,     0,   334,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,   447,
     448,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,     0,   613,
     614,   615,   616,  1570,  1571,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   176,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     177,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   178,
       0,     0,     0,     0,     0,     0,     0,     0,   179,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   180,     0,     0,     0,     0,     0,     0,
     181,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   182,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   183,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   184,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   185,   186,   187,   188,   189,   190,
     191,   192,   193,   194,   195,   196,     0,     0,     0,   197,
     198,   199,   200,   201,   202,   203,   204,   205,   206,   207,
     208,   209,   210,   211,   212,   213,   214,   215,   216,   217,
       0,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,     0,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,     0,     0,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,     0,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
     332,   333,     0,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,   388,   389,   390,
       0,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,     0,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,   447,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,   478,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,   536,     0,     0,
     537,   538,     0,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,     0,   613,   614,
     615,   616,   174,   175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,     0,     0,     0,   179,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   185,   186,   187,   188,   189,   190,   191,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,   207,   208,
     209,   210,   211,   212,   213,   214,   215,   216,   217,     0,
     218,   219,   220,   221,   222,   223,   224,   225,   226,   227,
     228,   229,   230,   231,   232,   233,   234,   235,   236,   237,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,     0,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,   302,   303,   304,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,     0,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,     0,   334,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,   447,   448,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
    1934,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,     0,   613,   614,   615,
     616,   174,   175,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     176,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   177,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   178,     0,     0,
       0,     0,     0,     0,     0,     0,   179,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   180,     0,     0,     0,     0,     0,     0,   181,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     182,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   183,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   184,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2507,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,     0,     0,     0,   197,   198,   199,
     200,   201,   202,   203,   204,   205,   206,   207,   208,   209,
     210,   211,   212,   213,   214,   215,   216,   217,     0,   218,
     219,   220,   221,   222,   223,   224,   225,   226,   227,   228,
     229,   230,   231,   232,   233,   234,   235,   236,   237,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,   251,   252,   253,   254,   255,   256,   257,
     258,   259,   260,   261,   262,   263,   264,   265,   266,   267,
     268,   269,   270,   271,   272,   273,   274,   275,   276,   277,
       0,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,   296,
     297,   298,   299,   300,   301,   302,   303,   304,   305,     0,
       0,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,     0,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
       0,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,   388,   389,   390,     0,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,     0,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   447,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,   478,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,   536,     0,     0,   537,   538,
       0,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,   581,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,     0,   613,   614,   615,   616,
     174,   175,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   707,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3074,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,  3075,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   185,   186,   187,  3076,   189,   190,   191,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,   207,   208,   209,   210,
     211,   212,   213,   214,   215,   216,   217,     0,   218,   219,
     220,   221,   222,   223,   224,   225,   226,   227,   228,   229,
     230,   231,   232,   233,   234,   235,   236,   237,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,   251,   252,   253,   254,   255,   256,   257,   258,
     259,   260,   261,   262,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,   276,   277,     0,
     278,   279,   280,   281,   282,   283,   284,   285,   286,   287,
     288,   289,   290,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,   302,   303,   304,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,     0,   320,   321,   322,  3077,   324,
     325,   326,   327,     0,   329,   330,   331,   332,   333,     0,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,     0,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,  3078,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,     0,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,  3079,
     609,   610,   611,   612,     0,   613,   614,   615,   616,   174,
     175,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   176,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   177,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   178,     0,     0,     0,     0,
       0,     0,     0,     0,   179,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   180,
       0,     0,     0,     0,     0,     0,   181,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   182,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   183,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     184,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,     0,     0,     0,   197,   198,   199,   200,   201,
     202,   203,   204,   205,   206,   207,   208,   209,   210,   211,
     212,   213,   214,   215,   216,   217,     0,   218,   219,   220,
     221,   222,   223,   224,   225,   226,   227,   228,   229,   230,
     231,   232,   233,   234,   235,   236,   237,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,   251,   252,   253,   254,   255,   256,   257,   258,   259,
     260,   261,   262,   263,   264,   265,   266,   267,   268,   269,
     270,   271,   272,   273,   274,   275,   276,   277,     0,   278,
     279,   280,   281,   282,   283,   284,   285,   286,   287,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,     0,     0,   306,
     307,   308,   309,   310,   311,   312,   313,   314,  3190,   316,
     317,   318,   319,     0,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,     0,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,     0,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,   418,  3191,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,     0,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,   447,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,   478,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,   536,     0,     0,   537,   538,     0,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,   581,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,     0,   613,   614,   615,   616,   174,   175,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   179,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,  5844,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,     0,   218,   219,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   235,   236,   237,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
     251,   252,   253,   254,   255,   256,   257,   258,   259,   260,
     261,   262,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,   276,   277,     0,   278,   279,
     280,   281,   282,   283,   284,   285,   286,   287,   288,   289,
     290,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,   302,   303,   304,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,   317,
     318,   319,     0,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,     0,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,   447,   448,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
     581,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,     0,   613,   614,   615,   616,   174,   175,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   176,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   177,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   178,     0,     0,     0,     0,     0,     0,
       0,     0,  2841,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   180,     0,     0,
       0,     0,     0,     0,   181,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   182,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   183,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   184,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   185,   186,
     187,  2842,   189,   190,   191,   192,   193,   194,   195,   196,
       0,     0,     0,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,     0,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,   251,
     252,   253,   254,   255,   256,   257,   258,   259,   260,   261,
     262,   263,   264,   265,   266,   267,   268,   269,   270,   271,
     272,   273,   274,   275,   276,   277,     0,   278,   279,   280,
     281,   282,   283,   284,   285,   286,   287,   288,   289,   290,
     291,   292,   293,   294,   295,   296,   297,   298,   299,   300,
     301,   302,   303,   304,   305,     0,     0,   306,   307,   308,
     309,   310,   311,   312,   313,   314,   315,   316,   317,   318,
     319,     0,   320,   321,   322,  2843,   324,   325,   326,   327,
     328,   329,   330,   331,   332,   333,     0,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,   388,   389,   390,     0,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,     0,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,     0,     0,   537,   538,     0,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,   581,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,     0,   609,   610,   611,
     612,     0,   613,   614,   615,   616,   174,   175,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   707,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,  3075,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
    3076,   189,   190,   191,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,     0,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,     0,   278,   279,   280,   281,
     282,   283,   284,   285,   286,   287,   288,   289,   290,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
       0,   320,   321,   322,  3077,   324,   325,   326,   327,     0,
     329,   330,   331,   332,   333,     0,   334,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,     0,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,  3078,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,   447,   448,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,     0,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,  3079,   609,   610,   611,   612,
       0,   613,   614,   615,   616,   174,   175,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   176,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   177,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   178,     0,     0,     0,     0,     0,     0,     0,     0,
    3432,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   180,     0,     0,     0,     0,
       0,     0,   181,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   182,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   183,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   184,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   185,   186,   187,     0,
     189,   190,   191,   192,   193,   194,   195,   196,     0,     0,
       0,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,   316,   317,   318,   319,     0,
     320,   321,   322,  3435,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,     0,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,  3436,   609,   610,   611,   612,     0,
     613,   614,   615,   616,   174,   175,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     6,     0,     0,     0,     0,     0,     0,
       0,     0,   913,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -3692, -3692,
   -3692,   177,     0,     0,     0,     0,     0,     0,   914,     0,
       0,     0,    14,     0,     0,   915,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,    16,     0,     0,   916,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   917,     0,     0,     0,     0,     0,     0,     0,
     918,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,   919,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      40,     0,     0,     0,     0,   185,   186,   187,   921,   189,
     190,     0,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
       0,   208,   209,   210,   211,   212,   213,   214,   215,     0,
     922,     0,     0,   219,   220,   221,   222,   223,     0,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   234,   235,
     236,   237,   238,   923,   240,   241,   242,   243,     0,     0,
       0,     0,     0,     0,   249,     0,   251,     0,   253,   254,
       0,   256,   257,   258,   259,   260,   261,     0,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289, -3692,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,     0,     0,
       0,   305,     0,   924,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,     0,     0,     0,     0,
     321,   322,   925,   324,   325,   326,     0,   328,   329,     0,
     331,   332,     0,     0,   334,     0,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   926,     0,     0,   442,     0,   444,   445,     0,   447,
     448,   449,   450,     0,   452,   453,   454,   455,     0,     0,
       0,     0,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,     0,   487,
       0,   489,   490,   491,     0,   493,   494,     0,   496,   497,
     498,   499,   500,   501,     0,   503,   504,   505,   506,   507,
     508,   509,     0,   511,   512,   513,     0,   515,   516,   517,
     518,   519,     0,   521,   522,     0,     0,   525,   526,     0,
       0,   529,   530,   531,     0,   533,     0,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,     0,   544,
     545,     0,   547,     0,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,     0,   570,   571,   572,   573,   574,
     575,   576,   577,   578,     0,   580,   581,     0,   583,   584,
     585,   586,   174,   175,   589,   590,     0,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,     0,     0,   610,   611,     0,     0,   613,
       0,   615,   616,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     0,
     913,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -3693,     0,   177,
       0,     0,     0,     0,     0,     0,   914,     0,     0,     0,
      14,     0,     0,   915,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,    16,     0,     0,   916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     917,     0,     0,     0,     0,     0,     0,     0,   918,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
     919,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0, -3693,     0,    40,     0,
       0,     0,     0,   185,   186,   187,   921,   189,   190,     0,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,     0,   208,
     209,   210,   211,   212,   213,   214,   215,     0,   922,     0,
       0,   219,   220,   221,   222,   223,     0,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   234,   235,   236,   237,
     238,   923,   240,   241,   242,   243,     0,     0,     0,     0,
       0,     0,   249,     0,   251,     0,   253,   254,     0,   256,
     257,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289, -3693,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,     0,     0,     0,   305,
       0,   924,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,     0,     0,     0,     0,   321,   322,
     925,   324,   325,   326,     0,   328,   329,     0,   331,   332,
       0,     0,   334,     0,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   926,
       0,     0,   442,     0,   444,   445,     0,   447,   448,   449,
     450,     0,   452,   453,   454,   455,     0,     0,     0,     0,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,     0,   487,     0,   489,
     490,   491,     0,   493,   494,     0,   496,   497,   498,   499,
     500,   501,     0,   503,   504,   505,   506,   507,   508,   509,
       0,   511,   512,   513,     0,   515,   516,   517,   518,   519,
       0,   521,   522,     0,     0,   525,   526,     0,     0,   529,
     530,   531,     0,   533,     0,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,     0,   544,   545,     0,
     547,     0,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,     0,   570,   571,   572,   573,   574,   575,   576,
     577,   578,     0,   580,   581,     0,   583,   584,   585,   586,
     174,   175,   589,   590,     0,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,     0,     0,   610,   611,     0,     0,   613,     0,   615,
     616,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     6,
       0,     0,     0,     0,     0,     0,     0,     0,   913,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,   914,     0,     0,     0,    14,     0,
       0,   915,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,    16,     0,     0,   916,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   917,     0,
       0,     0,     0,     0,     0,     0,   918,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,   919,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,   185,   186,   187,   921,   189,   190,     0,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,     0,   208,   209,   210,
     211,   212,   213,   214,   215,     0,   922,     0,     0,   219,
     220,   221,   222,   223,     0,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   234,   235,   236,   237,   238,   923,
     240,   241,   242,   243,     0,     0,     0,     0,     0,     0,
     249,     0,   251,     0,   253,   254,     0,   256,   257,   258,
     259,   260,   261,     0,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,   284,     0,   286,   287,
     288,   289,  1554,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,     0,     0,     0,   305,     0,   924,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,     0,     0,     0,     0,   321,   322,   925,   324,
     325,   326,     0,   328,   329,     0,   331,   332,     0,     0,
     334,     0,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   926,     0,     0,
     442,     0,   444,   445,     0,   447,   448,   449,   450,     0,
     452,   453,   454,   455,     0,     0,     0,     0,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,     0,   487,     0,   489,   490,   491,
       0,   493,   494,     0,   496,   497,   498,   499,   500,   501,
       0,   503,   504,   505,   506,   507,   508,   509,     0,   511,
     512,   513,     0,   515,   516,   517,   518,   519,     0,   521,
     522,     0,     0,   525,   526,     0,     0,   529,   530,   531,
       0,   533,     0,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,     0,   544,   545,     0,   547,     0,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
       0,   570,   571,   572,   573,   574,   575,   576,   577,   578,
       0,   580,   581,     0,   583,   584,   585,   586,   174,   175,
     589,   590,     0,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,     0,
       0,   610,   611,     0,     0,   613,     0,   615,   616,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     6,     0,     0,
       0,     0,     0,     0,     0,     0,   913,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,   914,     0,     0,     0,    14,     0,     0,   915,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
      16,     0,     0,   916,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   917,     0,     0,     0,
       0,     0,     0,     0,   918,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,   919,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    40,     0,     0,     0,     0,   185,
     186,   187,   921,   189,   190,     0,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,     0,   208,   209,   210,   211,   212,
     213,   214,   215,     0,   922,     0,     0,   219,   220,   221,
     222,   223,     0,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   234,   235,   236,   237,   238,   923,   240,   241,
     242,   243,     0,     0,     0,     0,     0,     0,   249,     0,
     251,     0,   253,   254,     0,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
    3402,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,     0,     0,     0,   305,     0,   924,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
       0,     0,     0,     0,   321,   322,   925,   324,   325,   326,
       0,   328,   329,     0,   331,   332,     0,     0,   334,     0,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   926,     0,     0,   442,     0,
     444,   445,     0,   447,   448,   449,   450,     0,   452,   453,
     454,   455,     0,     0,     0,     0,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,     0,   487,     0,   489,   490,   491,     0,   493,
     494,     0,   496,   497,   498,   499,   500,   501,     0,   503,
     504,   505,   506,   507,   508,   509,     0,   511,   512,   513,
       0,   515,   516,   517,   518,   519,     0,   521,   522,     0,
       0,   525,   526,     0,     0,   529,   530,   531,     0,   533,
       0,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,     0,   544,   545,     0,   547,     0,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,     0,   570,
     571,   572,   573,   574,   575,   576,   577,   578,     0,   580,
     581,     0,   583,   584,   585,   586,   174,   175,   589,   590,
       0,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,     0,     0,   610,
     611,     0,     0,   613,     0,   615,   616,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     6,     0,     0,     0,     0,
       0,     0,     0,     0,   913,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
     914,     0,     0,     0,    14,     0,     0,   915,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,    16,     0,
       0,   916,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   917,     0,     0,     0,     0,     0,
       0,     0,   918,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,   919,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    40,     0,     0,     0,     0,   185,   186,   187,
     921,   189,   190,     0,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,     0,   208,   209,   210,   211,   212,   213,   214,
     215,     0,   922,     0,     0,   219,   220,   221,   222,   223,
       0,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     234,   235,   236,   237,   238,   923,   240,   241,   242,   243,
       0,     0,     0,     0,     0,     0,   249,     0,   251,     0,
     253,   254,     0,   256,   257,   258,   259,   260,   261,     0,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,  3456,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
       0,     0,     0,   305,     0,   924,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,     0,     0,
       0,     0,   321,   322,   925,   324,   325,   326,     0,   328,
     329,     0,   331,   332,     0,     0,   334,     0,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   926,     0,     0,   442,     0,   444,   445,
       0,   447,   448,   449,   450,     0,   452,   453,   454,   455,
       0,     0,     0,     0,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
       0,   487,     0,   489,   490,   491,     0,   493,   494,     0,
     496,   497,   498,   499,   500,   501,     0,   503,   504,   505,
     506,   507,   508,   509,     0,   511,   512,   513,     0,   515,
     516,   517,   518,   519,     0,   521,   522,     0,     0,   525,
     526,     0,     0,   529,   530,   531,     0,   533,     0,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
       0,   544,   545,     0,   547,     0,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,     0,   570,   571,   572,
     573,   574,   575,   576,   577,   578,     0,   580,   581,     0,
     583,   584,   585,   586,   174,   175,   589,   590,     0,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,     0,     0,   610,   611,     0,
       0,   613,     0,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     6,     0,     0,     0,     0,     0,     0,
       0,     0,   913,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,   914,     0,
       0,     0,    14,     0,     0,   915,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,    16,     0,     0,   916,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   917,     0,     0,     0,     0,     0,     0,     0,
     918,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,   919,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      40,     0,     0,     0,     0,   185,   186,   187,   921,   189,
     190,     0,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
       0,   208,   209,   210,   211,   212,   213,   214,   215,     0,
     922,     0,     0,   219,   220,   221,   222,   223,     0,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   234,   235,
     236,   237,   238,   923,   240,   241,   242,   243,     0,     0,
       0,     0,     0,     0,   249,     0,   251,     0,   253,   254,
       0,   256,   257,   258,   259,   260,   261,     0,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,  3924,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,     0,     0,
       0,   305,     0,   924,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,     0,     0,     0,     0,
     321,   322,   925,   324,   325,   326,     0,   328,   329,     0,
     331,   332,     0,     0,   334,     0,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   926,     0,     0,   442,     0,   444,   445,     0,   447,
     448,   449,   450,     0,   452,   453,   454,   455,     0,     0,
       0,     0,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,     0,   487,
       0,   489,   490,   491,     0,   493,   494,     0,   496,   497,
     498,   499,   500,   501,     0,   503,   504,   505,   506,   507,
     508,   509,     0,   511,   512,   513,     0,   515,   516,   517,
     518,   519,     0,   521,   522,     0,     0,   525,   526,     0,
       0,   529,   530,   531,     0,   533,     0,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,     0,   544,
     545,     0,   547,     0,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,     0,   570,   571,   572,   573,   574,
     575,   576,   577,   578,     0,   580,   581,     0,   583,   584,
     585,   586,   174,   175,   589,   590,     0,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,     0,     0,   610,   611,     0,     0,   613,
       0,   615,   616,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     0,
     913,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,   914,     0,     0,     0,
      14,     0,     0,   915,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,    16,     0,     0,   916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     917,     0,     0,     0,     0,     0,     0,     0,   918,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
     919,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    40,     0,
       0,     0,     0,   185,   186,   187,   921,   189,   190,     0,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,     0,   208,
     209,   210,   211,   212,   213,   214,   215,     0,   922,     0,
       0,   219,   220,   221,   222,   223,     0,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   234,   235,   236,   237,
     238,   923,   240,   241,   242,   243,     0,     0,     0,     0,
       0,     0,   249,     0,   251,     0,   253,   254,     0,   256,
     257,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,  3930,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,     0,     0,     0,   305,
       0,   924,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,     0,     0,     0,     0,   321,   322,
     925,   324,   325,   326,     0,   328,   329,     0,   331,   332,
       0,     0,   334,     0,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,   926,
       0,     0,   442,     0,   444,   445,     0,   447,   448,   449,
     450,     0,   452,   453,   454,   455,     0,     0,     0,     0,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,     0,   487,     0,   489,
     490,   491,     0,   493,   494,     0,   496,   497,   498,   499,
     500,   501,     0,   503,   504,   505,   506,   507,   508,   509,
       0,   511,   512,   513,     0,   515,   516,   517,   518,   519,
       0,   521,   522,     0,     0,   525,   526,     0,     0,   529,
     530,   531,     0,   533,     0,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,     0,   544,   545,     0,
     547,     0,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,     0,   570,   571,   572,   573,   574,   575,   576,
     577,   578,     0,   580,   581,     0,   583,   584,   585,   586,
     174,   175,   589,   590,     0,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,     0,     0,   610,   611,     0,     0,   613,     0,   615,
     616,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     6,
       0,     0,     0,     0,     0,     0,     0,     0,   913,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,   914,     0,     0,     0,    14,     0,
       0,   915,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,    16,     0,     0,   916,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   917,     0,
       0,     0,     0,     0,     0,     0,   918,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    21,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    29,     0,     0,     0,     0,   919,   920,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    40,     0,     0,     0,
       0,   185,   186,   187,   921,   189,   190,     0,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,     0,   208,   209,   210,
     211,   212,   213,   214,   215,     0,   922,     0,     0,   219,
     220,   221,   222,   223,     0,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   234,   235,   236,   237,   238,   923,
     240,   241,   242,   243,     0,     0,     0,     0,     0,     0,
     249,     0,   251,     0,   253,   254,     0,   256,   257,   258,
     259,   260,   261,     0,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,   284,     0,   286,   287,
     288,   289,  4246,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,     0,     0,     0,   305,     0,   924,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,     0,     0,     0,     0,   321,   322,   925,   324,
     325,   326,     0,   328,   329,     0,   331,   332,     0,     0,
     334,     0,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,   926,     0,     0,
     442,     0,   444,   445,     0,   447,   448,   449,   450,     0,
     452,   453,   454,   455,     0,     0,     0,     0,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,     0,   487,     0,   489,   490,   491,
       0,   493,   494,     0,   496,   497,   498,   499,   500,   501,
       0,   503,   504,   505,   506,   507,   508,   509,     0,   511,
     512,   513,     0,   515,   516,   517,   518,   519,     0,   521,
     522,     0,     0,   525,   526,     0,     0,   529,   530,   531,
       0,   533,     0,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,     0,   544,   545,     0,   547,     0,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
       0,   570,   571,   572,   573,   574,   575,   576,   577,   578,
       0,   580,   581,     0,   583,   584,   585,   586,   174,   175,
     589,   590,     0,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,     0,
       0,   610,   611,     0,     0,   613,     0,   615,   616,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     6,     0,     0,
       0,     0,     0,     0,     0,     0,   913,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,   914,     0,     0,     0,    14,     0,     0,   915,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
      16,     0,     0,   916,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   917,     0,     0,     0,
       0,     0,     0,     0,   918,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    21,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    29,     0,     0,     0,     0,   919,   920,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    40,     0,     0,     0,     0,   185,
     186,   187,   921,   189,   190,     0,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,     0,   208,   209,   210,   211,   212,
     213,   214,   215,     0,   922,     0,     0,   219,   220,   221,
     222,   223,     0,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   234,   235,   236,   237,   238,   923,   240,   241,
     242,   243,     0,     0,     0,     0,     0,     0,   249,     0,
     251,     0,   253,   254,     0,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
    5665,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,     0,     0,     0,   305,     0,   924,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
       0,     0,     0,     0,   321,   322,   925,   324,   325,   326,
       0,   328,   329,     0,   331,   332,     0,     0,   334,     0,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,   926,     0,     0,   442,     0,
     444,   445,     0,   447,   448,   449,   450,     0,   452,   453,
     454,   455,     0,     0,     0,     0,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,     0,   487,     0,   489,   490,   491,     0,   493,
     494,     0,   496,   497,   498,   499,   500,   501,     0,   503,
     504,   505,   506,   507,   508,   509,     0,   511,   512,   513,
       0,   515,   516,   517,   518,   519,     0,   521,   522,     0,
       0,   525,   526,     0,     0,   529,   530,   531,     0,   533,
       0,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,     0,   544,   545,     0,   547,     0,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,     0,   570,
     571,   572,   573,   574,   575,   576,   577,   578,     0,   580,
     581,     0,   583,   584,   585,   586,   174,   175,   589,   590,
       0,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,     0,     0,   610,
     611,     0,     0,   613,     0,   615,   616,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     6,     0,     0,     0,     0,
       0,     0,     0,     0,   913,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
     914,     0,     0,     0,    14,     0,     0,   915,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,    16,     0,
       0,   916,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   917,     0,     0,     0,     0,     0,
       0,     0,   918,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    21,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    29,
       0,     0,     0,     0,   919,   920,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    40,     0,     0,     0,     0,   185,   186,   187,
     921,   189,   190,     0,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,     0,   208,   209,   210,   211,   212,   213,   214,
     215,     0,   922,     0,     0,   219,   220,   221,   222,   223,
       0,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     234,   235,   236,   237,   238,   923,   240,   241,   242,   243,
       0,     0,     0,     0,     0,     0,   249,     0,   251,     0,
     253,   254,     0,   256,   257,   258,   259,   260,   261,     0,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
       0,     0,     0,   305,     0,   924,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,     0,     0,
       0,     0,   321,   322,   925,   324,   325,   326,     0,   328,
     329,     0,   331,   332,     0,     0,   334,     0,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,   926,     0,     0,   442,     0,   444,   445,
       0,   447,   448,   449,   450,     0,   452,   453,   454,   455,
       0,     0,     0,     0,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
       0,   487,     0,   489,   490,   491,     0,   493,   494,     0,
     496,   497,   498,   499,   500,   501,     0,   503,   504,   505,
     506,   507,   508,   509,     0,   511,   512,   513,     0,   515,
     516,   517,   518,   519,     0,   521,   522,     0,     0,   525,
     526,     0,     0,   529,   530,   531,     0,   533,     0,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
       0,   544,   545,     0,   547,     0,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,     0,   570,   571,   572,
     573,   574,   575,   576,   577,   578,     0,   580,   581,     0,
     583,   584,   585,   586,   174,   175,   589,   590,     0,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,     0,     0,   610,   611,     0,
       0,   613,     0,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     6,     0,     0,     0,     0,     0,     0,
       0,     0,   913,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   176,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   177,     0,     0,     0,     0,     0,     0,   914,     0,
       0,     0,    14,     0,     0,   915,     0,     0,     0,     0,
     178,     0,     0,     0,     0,     0,    16,     0,     0,   916,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   917,     0,     0,     0,     0,     0,     0,     0,
     918,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    21,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   180,     0,     0,     0,     0,     0,
       0,   181,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   182,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   183,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    29,     0,     0,
       0,     0,   919,   920,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   184,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      40,     0,     0,     0,     0,   185,   186,   187,   921,   189,
     190,     0,   192,   193,   194,   195,   196,     0,     0,     0,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
       0,   208,   209,   210,   211,   212,   213,   214,   215,     0,
     922,     0,     0,   219,   220,   221,   222,   223,     0,     0,
     226,   227,   228,   229,   230,     0,     0,     0,   234,   235,
     236,   237,   238,   923,   240,   241,   242,   243,     0,     0,
       0,     0,     0,     0,   249,     0,   251,     0,   253,   254,
       0,   256,   257,   258,   259,   260,   261,     0,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,     0,   277,     0,   278,   279,   280,   281,   282,   283,
     284,     0,   286,   287,   288,   289,     0,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,     0,     0,
       0,   305,     0,   924,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,   316,     0,     0,     0,     0,     0,
     321,   322,   925,   324,   325,   326,     0,   328,   329,     0,
     331,   332,     0,     0,   334,     0,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,     0,   348,   349,
     350,   351,   352,   353,   354,   355,   356,     0,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,   388,   389,
     390,     0,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,   418,
     419,   420,   421,   422,   423,   424,   425,     0,   427,   428,
     429,   430,   431,   432,   433,   434,     0,   435,   436,   437,
     438,   926,     0,     0,   442,     0,   444,   445,     0,   447,
     448,   449,   450,     0,   452,   453,   454,   455,     0,     0,
       0,     0,   460,   461,   462,   463,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
     478,   479,   480,   481,   482,   483,   484,   485,     0,   487,
       0,   489,   490,   491,     0,   493,   494,     0,   496,   497,
     498,   499,   500,   501,     0,   503,   504,   505,   506,   507,
     508,   509,     0,   511,   512,   513,     0,   515,   516,   517,
     518,   519,     0,   521,   522,     0,     0,   525,   526,     0,
       0,   529,   530,   531,     0,   533,     0,   535,   536,     0,
       0,   537,   538,     0,   539,   540,   541,   542,     0,   544,
     545,     0,   547,     0,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,     0,   570,   571,   572,   573,   574,
     575,   576,   577,   578,     0,   580,   581,     0,   583,   584,
     585,   586,   174,   175,   589,  1759,     0,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,     0,     0,   610,   611,     0,     0,   613,
       0,   615,   616,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     6,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   176,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   177,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
      14,     0,     0,     0,     0,     0,     0,     0,   178,     0,
       0,     0,     0,     0,    16,     0,     0,   916,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    21,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   180,     0,     0,     0,     0,     0,     0,   181,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   182,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   183,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,    29,     0,     0,     0,     0,
     919,   920,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   184,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    40,     0,
       0,     0,     0,   185,   186,   187,   921,   189,   190,     0,
     192,   193,   194,   195,   196,     0,     0,     0,   197,   198,
     199,   200,   201,   202,   203,   204,   205,   206,     0,   208,
     209,   210,   211,   212,   213,   214,   215,     0,   922,     0,
       0,   219,   220,   221,   222,   223,     0,     0,   226,   227,
     228,   229,   230,     0,     0,     0,   234,   235,   236,   237,
     238,     0,   240,   241,   242,   243,     0,     0,     0,     0,
       0,     0,   249,     0,   251,     0,   253,   254,     0,   256,
     257,   258,   259,   260,   261,     0,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,     0,
     277,     0,   278,   279,   280,   281,   282,   283,   284,     0,
     286,   287,   288,   289,     0,   291,   292,   293,   294,   295,
     296,   297,   298,   299,   300,   301,     0,     0,     0,   305,
       0,     0,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,     0,     0,     0,     0,     0,   321,   322,
     925,   324,   325,   326,     0,   328,   329,     0,   331,   332,
       0,     0,   334,     0,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,     0,   348,   349,   350,   351,
     352,   353,   354,   355,   356,     0,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,   388,   389,   390,     0,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,   418,   419,   420,
     421,   422,   423,   424,   425,     0,   427,   428,   429,   430,
     431,   432,   433,   434,     0,   435,   436,   437,   438,     0,
       0,     0,   442,     0,   444,   445,     0,   447,   448,   449,
     450,     0,   452,   453,   454,   455,     0,     0,     0,     0,
     460,   461,   462,   463,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,   478,   479,
     480,   481,   482,   483,   484,   485,     0,   487,     0,   489,
     490,   491,     0,   493,   494,     0,   496,   497,   498,   499,
     500,   501,     0,   503,   504,   505,   506,   507,   508,   509,
       0,   511,   512,   513,     0,   515,   516,   517,   518,   519,
       0,   521,   522,     0,     0,   525,   526,     0,     0,   529,
     530,   531,     0,   533,     0,   535,   536,     0,     0,   537,
     538,     0,   539,   540,   541,   542,     0,   544,   545,     0,
     547,     0,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,     0,   570,   571,   572,   573,   574,   575,   576,
     577,   578,     0,   580,   581,     0,   583,   584,   585,   586,
     174,   175,   589,   590,     0,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,     0,     0,   610,   611,     0,     0,   613,     0,   615,
     616,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   176,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   177,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   178,     0,     0,     0,
       0,     0,     0,     0,     0,   916,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     180,     0,     0,     0,     0,     0,     0,   181,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   182,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   184,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1540,     0,     0,     0,     0,     0,
       0,   185,   186,   187,   921,   189,   190,     0,   192,   193,
     194,   195,   196,     0,     0,     0,   197,   198,   199,   200,
     201,   202,   203,   204,   205,   206,     0,   208,   209,   210,
     211,   212,   213,   214,   215,     0,     0,     0,     0,   219,
     220,   221,   222,   223,     0,     0,   226,   227,   228,   229,
     230,     0,     0,     0,   234,   235,   236,   237,   238,     0,
     240,   241,   242,   243,     0,     0,     0,     0,     0,     0,
     249,     0,   251,     0,   253,   254,     0,   256,   257,   258,
     259,   260,   261,     0,   263,   264,   265,   266,   267,   268,
     269,   270,   271,   272,   273,   274,   275,     0,   277,     0,
     278,   279,   280,   281,   282,   283,   284,     0,   286,   287,
     288,   289,     0,   291,   292,   293,   294,   295,   296,   297,
     298,   299,   300,   301,     0,     0,     0,   305,     0,     0,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,     0,     0,     0,     0,     0,   321,   322,   925,   324,
     325,   326,     0,   328,   329,     0,   331,   332,     0,     0,
     334,     0,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,     0,   348,   349,   350,   351,   352,   353,
     354,   355,   356,     0,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,   388,   389,   390,     0,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,   418,   419,   420,   421,   422,
     423,   424,   425,     0,   427,   428,   429,   430,   431,   432,
     433,   434,     0,   435,   436,   437,   438,     0,     0,     0,
     442,     0,   444,   445,     0,   447,   448,   449,   450,     0,
     452,   453,   454,   455,     0,     0,     0,     0,   460,   461,
     462,   463,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,   478,   479,   480,   481,
     482,   483,   484,   485,     0,   487,     0,   489,   490,   491,
       0,   493,   494,     0,   496,   497,   498,   499,   500,   501,
       0,   503,   504,   505,   506,   507,   508,   509,     0,   511,
     512,   513,     0,   515,   516,   517,   518,   519,     0,   521,
     522,     0,     0,   525,   526,     0,     0,   529,   530,   531,
       0,   533,     0,   535,   536,     0,     0,   537,   538,     0,
     539,   540,   541,   542,     0,   544,   545,     0,   547,     0,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
       0,   570,   571,   572,   573,   574,   575,   576,   577,   578,
       0,   580,   581,     0,   583,   584,   585,   586,   174,   175,
     589,   590,     0,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,     0,
       0,   610,   611,     0,     0,   613,     0,   615,   616,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   176,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   177,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   178,     0,     0,     0,     0,     0,
       0,     0,     0,   916,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   180,     0,
       0,     0,     0,     0,     0,   181,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   182,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   183,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   184,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1551,     0,     0,     0,     0,     0,     0,   185,
     186,   187,   921,   189,   190,     0,   192,   193,   194,   195,
     196,     0,     0,     0,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,     0,   208,   209,   210,   211,   212,
     213,   214,   215,     0,     0,     0,     0,   219,   220,   221,
     222,   223,     0,     0,   226,   227,   228,   229,   230,     0,
       0,     0,   234,   235,   236,   237,   238,     0,   240,   241,
     242,   243,     0,     0,     0,     0,     0,     0,   249,     0,
     251,     0,   253,   254,     0,   256,   257,   258,   259,   260,
     261,     0,   263,   264,   265,   266,   267,   268,   269,   270,
     271,   272,   273,   274,   275,     0,   277,     0,   278,   279,
     280,   281,   282,   283,   284,     0,   286,   287,   288,   289,
       0,   291,   292,   293,   294,   295,   296,   297,   298,   299,
     300,   301,     0,     0,     0,   305,     0,     0,   306,   307,
     308,   309,   310,   311,   312,   313,   314,   315,   316,     0,
       0,     0,     0,     0,   321,   322,   925,   324,   325,   326,
       0,   328,   329,     0,   331,   332,     0,     0,   334,     0,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,     0,   348,   349,   350,   351,   352,   353,   354,   355,
     356,     0,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,   388,   389,   390,     0,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,     0,   427,   428,   429,   430,   431,   432,   433,   434,
       0,   435,   436,   437,   438,     0,     0,     0,   442,     0,
     444,   445,     0,   447,   448,   449,   450,     0,   452,   453,
     454,   455,     0,     0,     0,     0,   460,   461,   462,   463,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   478,   479,   480,   481,   482,   483,
     484,   485,     0,   487,     0,   489,   490,   491,     0,   493,
     494,     0,   496,   497,   498,   499,   500,   501,     0,   503,
     504,   505,   506,   507,   508,   509,     0,   511,   512,   513,
       0,   515,   516,   517,   518,   519,     0,   521,   522,     0,
       0,   525,   526,     0,     0,   529,   530,   531,     0,   533,
       0,   535,   536,     0,     0,   537,   538,     0,   539,   540,
     541,   542,     0,   544,   545,     0,   547,     0,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,     0,   570,
     571,   572,   573,   574,   575,   576,   577,   578,     0,   580,
     581,     0,   583,   584,   585,   586,   174,   175,   589,   590,
       0,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,     0,     0,   610,
     611,     0,     0,   613,     0,   615,   616,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   176,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   177,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   178,     0,     0,     0,     0,     0,     0,     0,
       0,   916,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   180,     0,     0,     0,
       0,     0,     0,   181,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   182,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   183,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   184,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   185,   186,   187,
     921,   189,   190,     0,   192,   193,   194,   195,   196,     0,
       0,     0,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,     0,   208,   209,   210,   211,   212,   213,   214,
     215,     0,     0,     0,     0,   219,   220,   221,   222,   223,
       0,     0,   226,   227,   228,   229,   230,     0,     0,     0,
     234,   235,   236,   237,   238,     0,   240,   241,   242,   243,
       0,     0,     0,     0,     0,     0,   249,     0,   251,     0,
     253,   254,     0,   256,   257,   258,   259,   260,   261,     0,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,     0,   277,     0,   278,   279,   280,   281,
     282,   283,   284,     0,   286,   287,   288,   289,     0,   291,
     292,   293,   294,   295,   296,   297,   298,   299,   300,   301,
       0,     0,     0,   305,     0,     0,   306,   307,   308,   309,
     310,   311,   312,   313,   314,   315,   316,     0,     0,     0,
       0,     0,   321,   322,   925,   324,   325,   326,     0,   328,
     329,     0,   331,   332,     0,     0,   334,     0,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,     0,
     348,   349,   350,   351,   352,   353,   354,   355,   356,     0,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
     388,   389,   390,     0,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,   418,   419,   420,   421,   422,   423,   424,   425,     0,
     427,   428,   429,   430,   431,   432,   433,   434,     0,   435,
     436,   437,   438,     0,     0,     0,   442,     0,   444,   445,
       0,   447,   448,   449,   450,     0,   452,   453,   454,   455,
       0,     0,     0,     0,   460,   461,   462,   463,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,   478,   479,   480,   481,   482,   483,   484,   485,
       0,   487,     0,   489,   490,   491,     0,   493,   494,     0,
     496,   497,   498,   499,   500,   501,     0,   503,   504,   505,
     506,   507,   508,   509,     0,   511,   512,   513,     0,   515,
     516,   517,   518,   519,     0,   521,   522,     0,     0,   525,
     526,     0,     0,   529,   530,   531,     0,   533,     0,   535,
     536,     0,     0,   537,   538,     0,   539,   540,   541,   542,
       0,   544,   545,     0,   547,     0,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,     0,   570,   571,   572,
     573,   574,   575,   576,   577,   578,     0,   580,   581,     0,
     583,   584,   585,   586,     0,     0,   589,   590,     0,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   174,   175,   610,   611,     0,
       0,   613,     0,   615,   616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3476,  3477,  3478,  3479,  3480,  3481,  3482,  3483,  3484,
    3485,  3486,     0,  3487,  3488,  3489,  3490,     0,     0,  3491,
    3492,  3493,  3494,  3495,  3496,  3497,  3498,  3499,  3500,  3501,
       0,  3502,  3503,  3504,  3505,  3506,  3507,  3508,  3509,  3510,
    3511,  3512,     0,  3513,   176,  3514,  3515,  3516,  3517,  3518,
    3519,  3520,  3521,  3522,  3523,  3524,  3525,  3526,  3527,  3528,
    3529,  3530,  3531,  3532,  3533,  3534,  3535,  3536,  3537,  3538,
    3539,  3540,   177,  3541,  3542,  3543,  3544,  3545,  3546,  3547,
    3548,  3549,  3550,     0,  3551,  3552,  3553,  3554,  3555,     0,
       0,   178,  3556,  3557,  3558,  3559,  3560,  3561,  3562,  3563,
    3564,  3565,  3566,  3567,  3568,  3569,  3570,  3571,  3572,  3573,
    3574,  3575,  3576,  3577,  3578,  3579,  3580,  3581,  3582,  3583,
    3584,  3585,  3586,  3587,  3588,  3589,  3590,  3591,     0,  3592,
    3593,     0,     0,     0,  3594,  3595,  3596,  3597,  3598,  3599,
    3600,     0,     0,     0,  3601,   180,  3602,  3603,  3604,  3605,
    3606,  3607,   181,  3608,  3609,  3610,  3611,  3612,  3613,     0,
    3614,  3615,  3616,  3617,   182,  3618,  3619,  3620,  3621,  3622,
    3623,  3624,  3625,  3626,  3627,   183,  3628,  3629,  3630,  3631,
    3632,  3633,  3634,  3635,  3636,  3637,  3638,  3639,  3640,  3641,
    3642,     0,  3643,  3644,  3645,  3646,  3647,  3648,  3649,  3650,
    3651,  3652,  3653,  3654,  3655,  3656,  3657,  3658,  3659,  3660,
    3661,  3662,  3663,  3664,  3665,     0,  3666,  3667,     0,  3668,
    3669,  3670,  3671,  3672,  3673,  3674,  3675,  3676,  3677,  3678,
    3679,  3680,  3681,  3682,  3683,  3684,   184,  3685,  3686,  3687,
    3688,     0,     0,     0,  3689,  3690,  3691,  3692,  3693,  3694,
    3695,  3696,  3697,  3698,  3699,  3700,  3701,  3702,  3703,  3704,
    3705,  3706,  3707,     0,  3708,  3709,  3710,  3711,  3712,  3713,
    3714,  3715,  3716,  3717,  3718,  3719,   185,   186,   187,     0,
     189,   190,   191,   192,   193,   194,   195,   196,  3720,  3721,
    3722,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,     0,   218,     0,   220,     0,     0,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,     0,     0,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,  3723,
    3724,   275,   276,   277,     0,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,     0,   295,   296,   297,   298,   299,   300,   301,   302,
     303,   304,   305,     0,     0,   306,   307,   308,   309,   310,
     311,   312,   313,   314,   315,     0,   317,   318,   319,     0,
     320,   321,   322,     0,   324,   325,   326,   327,   328,   329,
     330,   331,   332,   333,     0,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,     0,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   388,
     389,   390,     0,   391,   392,   393,   394,   395,   396,   397,
       0,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,     0,  3725,
     418,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,     0,     0,     0,   434,  3726,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
     447,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,   465,   466,
     467,   468,   469,   470,   471,     0,     0,   474,   475,   476,
     477,   478,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,     0,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
       0,   518,   519,   520,   521,   522,   523,  3727,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,   536,
       0,     0,   537,   538,     0,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,     0,   568,   569,     0,   571,   572,  3728,
     574,   575,   576,   577,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,     0,  3729,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,     0,   609,   610,   611,   612,     0,
     613,   614,   615
};

static const yytype_int16 yycheck[] =
{
       5,   165,     0,    44,     0,   687,   688,  1753,    68,   927,
     163,     0,  1596,  1895,  1740,   769,   173,   162,  1921,   713,
    2061,    26,  2559,  1689,  1242,    30,     0,    22,  1412,  2567,
      35,   799,  1611,    38,   687,  1947,    45,   774,   687,  1602,
    1549,     0,   779,   666,   781,   687,    51,  3218,  2112,  2716,
    1377,  3294,    57,  1946,   160,   799,    61,    52,  1642,   682,
    2032,    31,  2516,    58,  2870,  1148,  3289,  3379,  1633,  3401,
      68,  2572,  1672,  2579,  1184,   687,  1186,  1187,  3264,  4102,
     655,   913,  4017,   915,  1194,   917,   918,   666,  4102,   977,
    1380,  1691,   924,  1383,   655,  4001,  3138,   687,  1518,  3092,
    2881,  2882,  4510,   682,   730,  3278,  2646,   733,   687,  3295,
     685,  1869,  2577,  2898,  4526,  2900,  1371,   687,  1383,   124,
    2188,  2901,  1811,  1812,   685,  3997,  2488,  1308,  2757,  1420,
    2685,  1753,  2675,  2676,  3187,   173,  2897,   135,  3068,  3069,
    2901,   173,  1469,  2080,  4958,  1009,   135,   173,   173,  2051,
    1352,   156,   157,  2676,   173,   160,  3350,   162,   124,  3263,
    1420,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,  3728,   173,   135,   173,  4630,  4744,
    4102,   753,  3986,   755,   173,  3967,  4587,   759,   760,  4538,
    4587,  5277,  1080,  1081,  1082,  3723,  5276,  4587,  3047,  2102,
    3728,  1818,     6,     7,  4588,  1093,  4590,    12,   632,  4593,
       6,     7,  5241,   793,   173,  3487,    15,  3521,    28,     6,
       7,  1838,  3342,  4607,  3154,    11,    12,  3499,    47,  1918,
      47,    26,  1150,  4192,  4193,  4735,  4195,    47,     6,     7,
      15,  4200,    67,  2989,  3317,  1862,  1863,  4206,     6,     7,
    3234,     6,     7,  2796,    60,     6,     7,  1711,  4639,     6,
       7,   780,    53,    16,    17,  1719,  1720,  1448,  1722,  1723,
     694,  3534,  4254,  2796,    26,    31,  5843,    31,    26,  1221,
     204,   127,  4264,    31,    24,    25,    26,  2199,    28,  4271,
      30,  5187,    32,    42,    31,    99,    63,    31,    53,    26,
    1244,  1243,  2806,    65,    42,    26,    53,    54,    26,    33,
    1996,  3521,    24,    25,    26,  5882,    28,    41,    30,   245,
      32,    26,    47,    42,  3366,   183,    50,   123,  3985,  3986,
      26,    42,    33,    14,   913,  4432,   915,   127,   917,   918,
      41,   282,    26,    26,   145,   924,    65,    33,   927,    50,
     158,    33,    24,    25,    26,    41,    28,    42,    30,    41,
      32,    26,   172,  4984,    50,   123,   204,    53,    50,   143,
      14,  1880,   168,    26,  2839,   143,   136,  4264,   127,    42,
     127,   311,  2883,   837,  4271,  5297,   308,    33,   243,   311,
    4499,    57,  3138,    42,    14,    41,   143,   269,  1481,    43,
      44,   122,   826,    99,    50,   127,   128,   282,   124,    42,
     168,    14,  3405,  4513,   666,    99,    99,   320,    80,   204,
     245,   168,    31,    43,    44,    51,   107,    89,   781,  1512,
     682,  4979,   382,    42,    99,   687,   207,    42,  2607,    33,
      43,    44,  5624,   380,   395,  4102,    99,    41,   282,    33,
     255,   439,    42,  3725,   204,   373,    50,    41,   119,    97,
     207,   300,    89,   107,    33,    42,    50,  3460,   252,   255,
      42,   218,    41,   259,    47,    35,    36,    37,   104,    39,
     160,    50,   128,   316,   637,   209,    47,   107,   641,   204,
     643,   152,   645,   646,  5438,   648,   649,   650,  3708,   246,
    4152,   306,   233,  5583,   107,  5672,   930,    14,   209,    33,
     655,   316,   193,   300,    71,   204,   268,    41,   314,  3729,
     306,    33,    31,   209,  6009,    51,    50,   209,   681,    41,
     316,    53,   466,    53,   123,    71,    43,    44,    50,  2451,
     685,   168,    33,    33,    31,  1965,  4920,   645,   151,   193,
      41,   114,   299,   204,   316,    40,   314,   110,   255,    50,
      50,   706,   269,   209,   332,   169,  1950,   314,    33,    10,
     291,  1150,   648,   193,  5811,   720,    41,    10,   104,   168,
     498,   233,   735,   736,   179,    50,   390,    33,   120,   227,
     193,   233,   233,   317,    47,    41,   156,   141,  1352,   300,
     107,  4982,   765,   695,    50,   316,   127,  6269,   316,   306,
     730,   412,  1238,    57,  1240,   209,   317,   602,  5183,   316,
    3366,  6302,    33,   143,   633,   209,   230,    71,   128,    73,
      41,   317,   293,   777,  4967,   317,   128,   122,   233,    50,
     209,  4974,    31,    30,   151,   789,  6308,   407,    35,   654,
     655,   814,   395,   106,   154,  2548,   748,   179,  1768,   151,
     594,   913,  4597,   915,   316,   917,   918,  6348,   788,  5169,
     815,   317,   924,  1783,   679,   927,  3437,  1414,  2560,  1762,
     685,   174,   226,   390,   255,   209,   193,   219,   218,  2198,
    1578,  1579,  1436,  4615,   127,   700,   681,   209,   796,  3254,
     141,   706,  3245,  3258,   857,   858,   259,   695,   853,   316,
     680,   233,   197,   722,   719,   720,   463,   202,   209,  4701,
     796,   730,  3245,   317,   733,   143,  1809,   122,  5965,  2019,
    3867,  3868,  2704,   317,  4262,   306,  1600,   378,   672,   259,
     316,  4700,    31,   849,   209,   851,  3108,   752,   317,    99,
     313,   308,   240,  1617,  2019,  4737,  2797,  6242,   695,  1331,
    2051,   179,  1334,   209,   769,   496,  1338,  1339,  1340,  4728,
     711,  1343,  1344,  4732,  1518,   123,  5720,    19,    20,   299,
    4739,   786,   780,  4095,   702,   581,  1988,  2690,  2367,  2368,
     300,  2051,   695,   317,   799,   316,   476,  1999,   209,   300,
      50,   742,   295,   153,  3998,   317,   291,   202,  3850,   345,
     815,   585,   572,  4795,  4701,  1269,   300,  3271,   282,   824,
     168,   382,   508,   581,   634,  6007,   317,   317,   662,   467,
      53,  5998,   837,  2745,   370,   643,   711,   807,   788,   844,
    5388,   846,  4499,   653,   849,   796,   851,  4956,   853,  3386,
    4737,   856,   317,  1741,   496,    33,  6423,   667,   788,   207,
      33,  2607,  5758,    41,  5364,   791,   532,   791,    41,   653,
    4970,   317,    50,  1815,   796,  1817,  1455,    50,  1820,   751,
     690,   922,   852,  4187,   854,  4189,  3055,  3391,  1407,  1753,
    1832,   730,  4196,  1835,  2787,  1589,   291,  1839,  1150,   705,
    5812,   345,   144,  2815,  1479,   509,   317,   912,  4795,   914,
    4214,  4183,  4184,  3843,  3987,  5289,  1860,  2098,   923,   363,
    4224,   926,   145,  1865,  1866,  1867,   370,   760,   695,  4201,
     788,   929,  2549,   929,   939,  4207,   791,   160,  2392,  2393,
     929,  2395,  2396,   463,  4216,   791,  4218,  4219,  4220,   674,
    4222,  4223,  3417,   791,  3884,   197,  3886,  3887,  4615,   719,
    4232,  4233,  4234,  4235,  4236,   766,   791,  1721,  4463,   788,
     929,   788,  1666,    33,  4237,  4185,    33,  4187,  4098,  4189,
     771,    41,   777,   788,    41,  2607,  4196,  6016,   750,   788,
      50,   795,   581,    50,   789,  1763,   791,  2683,  2684,   795,
    4210,   791,   788,   719,  4214,  1459,   791,  4659,   795,  3858,
    5510,  3995,  6098,   788,  4224,  6095,   771,  6097,  5399,  1763,
     791,   647,   771,  1083,   771,   777,  5647,   795,  1482,   777,
    1175,   209,   788,   771,   788,  5132,   209,   795,   791,  1184,
     795,   791,  1187,  2801,   795,   788,  5667,  1192,   795,   789,
     777,   788,   771,   769,   788,  5404,   777,  5406,   796,   777,
     771,  1414,   789,  5464,   791,   288,  5089,  5464,  1836,   791,
     794,   789,   777,   791,  5464,  5089,   791,   789,  1223,  2162,
    1085,   777,  5466,   791,   572,  1083,   771,  1083,   597,   751,
     791,   788,  1836,   777,   777,   776,   777,   778,   779,   780,
     781,   674,   791,   633,  3850,   791,   710,   789,   771,   791,
     597,   796,   777,  1795,  1568,  1869,  1540,   789,  4900,  6199,
    6200,   647,   771,   373,   777,   233,  4621,  1551,   789,   282,
    6210,   775,   776,   777,   778,   779,   780,   781,   771,   317,
     791,   768,  1795,  1148,   317,   791,  1795,   796,   390,   209,
     776,   724,   209,  1795,  5398,  4959,   776,   777,   778,   779,
     780,   781,   771,   796,   282,   388,   771,  5089,   763,  2087,
    1175,   774,   775,   776,   777,   778,   779,   780,   781,  1184,
    2139,   771,  1187,  1795,   791,   183,  1349,  1192,  2175,  5754,
    6270,   796,   481,   582,   771,  1770,   912,   791,   691,   771,
     618,   737,  5654,  1455,   116,  1795,   796,   791,   597,  1770,
      67,   771,   772,   773,   564,   791,  1795,   788,  1223,   796,
     789,  1965,   791,   380,   796,  1795,   394,  1799,  1373,  1238,
      40,  1240,   586,   581,  1988,   335,  4790,    72,  6052,  6053,
    4794,   763,  1208,  1284,  4381,  1999,  2000,   711,   498,   771,
     127,   771,   437,  1410,   739,   532,  1261,   317,  1263,   501,
     317,   791,  4790,  1268,  1269,   789,  4794,   774,   775,   776,
     777,   778,   779,   780,   781,    99,   382,   789,    96,   791,
    1285,   791,   209,  1249,  1437,  1911,   796,   751,  3181,  1294,
     791,   380,  1352,   737,   431,   796,  3178,   233,   789,  4956,
     791,  1310,  4959,  1308,  1309,   789,  1932,   791,   425,  3055,
     143,  4057,  4058,  3206,  3216,  4061,  4062,  4421,   101,   391,
    4543,  4067,  4068,  4546,  1329,  1880,   791,  2545,  5661,   452,
    5663,   413,   414,  4527,  1479,  1759,    99,   155,  1444,    57,
     380,    99,   198,   789,   739,   791,   179,  1352,  1353,   657,
    4096,  2642,   107,    71,  1352,    73,  1352,  4024,    33,   143,
    2470,  2926,  1332,  1333,  2447,  2448,    41,   150,  1373,   198,
     160,  4038,  1410,  2055,  4547,    50,   296,  2487,  1410,   621,
     791,  2491,  2642,    71,  1410,  1410,  1391,   197,   245,  1964,
    2473,  1410,  3929,  4446,  3462,  1967,  1968,   227,   127,   319,
    2820,   730,   259,    54,  1976,  1977,  1978,  1412,  1413,  1407,
    1419,   337,  1410,  2277,  1410,  5659,  3353,   235,  1423,    50,
    2710,  1410,  2712,  2713,  1569,    71,   282,    73,   545,  1434,
    2721,  1436,  5089,  3055,  3034,  3035,  3036,  3037,   193,  1444,
    1445,   179,   796,  1448,   202,  2710,   375,  2712,  2713,  3028,
    3029,  1410,   702,    99,  1459,  3018,  4011,  4012,  1463,   788,
    1465,  2721,  2664,  4393,  4007,  4008,  3050,  1277,  2670,  5053,
    2050,  1476,   255,  5293,  1479,  1929,  1481,  1482,  1288,  3044,
    4784,   145,  6003,   179,  4007,  4008,  3398,  4116,    33,   145,
     658,   368,  4422,   143,   123,   618,    41,   597,   127,  2458,
    2459,    40,  2125,  5087,   160,    50,   612,  1512,  2087,    33,
     752,  5383,  5384,  1518,   297,   299,  3878,    41,  2171,   397,
     762,   316,  2171,   306,   436,  5507,    50,  5509,   636,  2171,
     365,  3148,  4312,   316,   209,  2158,  3898,  1542,   695,   168,
    3902,   304,   305,  1795,   662,   174,  2125,  1263,   771,   332,
    1610,  4312,  1268,   551,    33,   663,   693,    71,   711,    73,
     496,  1519,    41,  1568,  1569,  3019,   390,  3021,  2749,    53,
     755,    50,  2195,  2196,  4784,   452,  2518,   454,   207,  2158,
    2522,  2171,  2524,    33,  5996,  2840,   227,  5995,   987,   988,
     989,    41,  2171,   711,  5838,  1740,  2538,  5092,   751,    54,
      50,  2171,   316,   532,  1602,   711,   695,    33,   464,  2551,
    2552,   789,  1610,   791,  1610,    41,  2195,  2196,   791,  4549,
    5507,   727,  5509,   174,    50,  1770,  5459,   345,   438,   555,
    4170,  4171,  3390,  2620,  1033,    40,  1352,   467,   720,   368,
    2394,   723,   317,  2198,   407,   363,   479,  5606,    33,   299,
      55,   131,   370,   475,   510,   695,    41,   288,   197,  2083,
     212,   733,  1667,  1808,   209,    50,  1671,   544,   791,  2123,
    2124,   576,   576,  1678,  1715,   510,  2370,   395,   436,   463,
     418,   510,   370,  3248,  1689,   209,   476,    28,   339,    30,
     179,    32,   730,   362,  1800,  1801,  4442,  1803,  1804,  1805,
    1806,    42,  3211,  1701,  3393,    31,  1870,   194,   581,   101,
    1816,   637,  1701,  4178,  6235,   572,   479,    72,  1434,    33,
    2707,  6129,   418,   452,   370,   454,  2809,    41,  1834,  1445,
     209,   791,   388,   143,   791,  1740,    50,  1742,  4668,   617,
     478,   618,  1751,  2607,   390,   674,   151,  1463,  6078,  1465,
     788,   671,  6082,  1758,   458,  2179,   720,  1762,  1763,   209,
     724,   367,   167,  2187,   408,  1770,  1771,    10,   341,    33,
    6291,   126,   317,  2197,   653,  5595,   294,    41,   101,  6044,
    5600,  5601,  6047,   209,   595,   618,    50,  1792,  5718,   584,
    5285,   342,   197,   317,    51,  1800,  1801,  1802,  1803,  1804,
    1805,  1806,  1807,  1808,  1809,  1810,  1764,   476,  1972,  1973,
    1955,  1816,   452,   463,  2467,   544,   300,  4747,  2467,  1964,
    3147,  1966,   576,   463,   209,  2467,   467,   150,  1833,  1834,
    1839,  1836,   167,   288,   239,  2087,    33,    33,   317,  5012,
      33,   167,   472,   576,    41,    41,  5430,   104,    41,   754,
     754,  5792,  1857,    50,    50,   711,   370,    50,   680,  5054,
     236,   565,  2007,  5447,  1869,  5698,  3193,   317,  1974,  1975,
     584,   226,   390,  2125,   361,   427,  5460,  2467,  5462,  2454,
     510,   699,    67,  5643,   127,  5080,   791,   791,  2467,   618,
    4932,   317,   584,  2454,   467,   209,    33,  2467,  2816,   438,
    4942,  4943,  1911,    33,    41,   297,  2158,   396,  5668,   788,
    2664,    41,  2830,    50,   791,  2060,  2670,  4702,   791,  2171,
      50,    75,   332,  1932,  1929,  3216,  5832,  4192,   572,  1934,
      33,  2685,   317,  5863,  5429,  6265,  5431,   546,    41,   294,
     673,  5436,  2565,  2195,  2196,   209,    33,    50,  5443,  5444,
    1955,  1667,   581,  2871,    41,  1671,  3216,  1962,  5453,  1964,
    1965,  1966,  1678,    50,  5459,  1970,   572,  4748,   462,  1974,
    1975,   271,  3082,  2599,   297,   316,  5199,   788,   618,   314,
    3063,   499,  5802,  1988,  6249,    40,  2565,   656,   314,  3099,
     452,  3411,  3412,  3283,  1999,  2000,  3106,  3107,  5939,  2743,
     754,   463,  2007,   317,    14,   788,   584,    10,   119,  2691,
    3093,  5234,   209,   209,    33,  3918,   209,  3004,  3283,   737,
     532,   754,    41,   778,   779,   780,   781,   599,  1427,  4070,
    4392,    50,   676,    43,    44,   665,    40,    33,  3920,  4401,
    4402,   152,  1758,  6021,  4309,    41,    50,  2801,  2880,  2881,
    2882,    55,  3254,   317,    50,  2060,  3258,   537,   538,   417,
     245,   541,   542,   543,  2069,  3392,    14,  5262,  4040,   407,
    2075,   763,   209,   373,  2079,   346,  2820,  5357,   796,   209,
      55,  2653,  4588,   237,  2656,   514,  1802,  4593,   215,   210,
    2662,  1807,  4598,  2098,  1810,    43,    44,   107,  4765,   761,
     227,   174,  2107,   743,  3394,   617,   209,   716,  2113,    99,
     339,   605,     7,   462,  5394,   461,   791,  2122,  2123,  2124,
     317,   317,   209,    33,   317,   734,   698,  5784,   557,  3394,
     417,    41,   602,  2138,  2139,   493,   465,  1113,   141,     0,
      50,  1857,   197,    33,  2724,  2725,   144,   151,  4654,   170,
    4656,    41,  4819,  1869,  5811,   282,   618,  2162,  5815,   107,
      50,  2166,   674,   167,  2618,  6188,  4972,    33,   497,  1145,
     441,  2176,  5165,  6187,  6152,    41,   151,  2182,  2757,  5221,
     317,   753,   293,   193,    50,   763,  4932,   317,  2193,  2194,
     209,  3055,   167,   197,  5124,   154,  4942,  4943,   498,   197,
     327,   117,   118,  5698,   136,   326,   493,   606,  2902,  5704,
    5514,   681,   202,   209,   317,  2467,  6151,  2870,  6153,  2913,
    2914,  2870,   295,    47,  2918,  3212,   158,  5450,  2870,   458,
     317,   252,  2885,  2808,     3,   239,  2885,  2816,    47,   127,
    3158,  2239,   571,  2885,   789,   193,  3164,  2808,  2897,  5435,
    2239,  2830,  2901,    56,  1970,  2897,   605,    33,   604,  2901,
     771,  2425,    31,  6273,   239,    41,   695,   791,   227,   771,
     570,  5928,  1988,   666,    50,   207,  2970,   682,   288,   127,
    2870,   743,   106,  1999,  2000,   730,   174,   577,   578,   682,
     206,  2870,  2871,  2987,   687,  2885,  3064,   106,   317,   209,
    2870,  2880,  2881,  2882,  5514,  6240,  2885,  2897,  5965,  2454,
    5614,  2901,   791,  2565,   218,  2885,   141,   458,  2897,   209,
    3064,   317,  2901,   652,  6328,  5982,  2471,  2897,  2388,   791,
     178,  2901,    36,    37,   417,  5607,  3323,    33,  2343,    81,
     467,   791,  2347,   209,  5616,    41,  5618,  5619,  5620,  5621,
    5622,   796,   155,  2069,    50,   730,  2361,  5580,  6362,  2075,
    5855,   796,   503,  3926,   654,   791,    47,   283,  6378,  6379,
    3824,  5974,  3826,  3360,    33,  3362,  3363,  5709,   282,  5874,
      33,  3368,    41,   186,   288,    47,   230,   760,    41,  3376,
    2388,    50,  2388,  3380,   242,  3382,  2502,    50,  5942,  5943,
    5610,  2507,   702,    47,  5614,   147,   791,   317,   252,   771,
    6013,  2517,    33,  4919,  4920,   788,   158,  2523,    57,   631,
      41,   796,  2138,  2139,   166,   106,   147,   317,  2573,    50,
     771,   572,   313,   209,    73,   776,   777,   158,    33,    33,
    3122,  3123,  2447,  2448,   106,   166,    41,    41,    33,  2454,
    2166,   317,   194,  2458,  2459,    50,    50,    31,  2467,   262,
    2176,  2606,   106,   332,   764,    50,  2471,   315,  2473,  3122,
    3123,  2476,  2477,  3122,  3123,  5221,  4977,   791,   690,   145,
    3122,  3123,    63,   286,   272,  4847,  4848,  6281,  6282,    57,
      33,  5297,   320,    47,   160,   283,  2501,  2502,    41,    53,
    3254,    55,  2507,    71,  3258,  2757,  2515,    50,   250,   777,
    3122,  3123,  2517,   209,    74,   153,    65,  2526,  2523,  5265,
     913,   789,   915,   791,   917,   918,    86,   791,  6322,   250,
     168,   924,  3122,  3123,   927,  6079,   278,   777,  5761,  6083,
    4994,   317,  4424,  3122,  3123,  2550,  2652,   154,  2693,   789,
     209,  3469,  3122,  3123,  2660,  2661,   209,   278,   423,   776,
     777,  2566,  5229,   788,  2816,   430,  1008,  2537,  2573,  2574,
    2575,   796,    33,  1015,   128,   788,  4548,    22,  2830,  3158,
      41,    19,    20,   796,    29,  3164,    31,  2057,   209,    50,
    2599,  2061,  1034,  1035,   791,   791,  4637,   676,   791,   514,
    2605,  2606,  4339,    33,   101,   684,  4343,  2616,   788,  2614,
     689,    41,  4947,  2618,   209,   209,   796,  4952,  2870,  2871,
      50,   317,   745,   308,  5867,  4666,   311,  2343,  2880,  2881,
    2882,  2347,    33,  2885,    33,  5806,  3390,  5808,   788,  2644,
      41,   179,    41,  2648,  2649,  2650,   796,  2652,   259,    50,
      88,    50,   789,   150,  2659,  2660,  2661,  6191,   317,  2664,
     788,   791,    33,  2808,   317,  2670,   209,  3411,  3412,   789,
      41,   791,   347,    33,    33,   788,    50,    33,   682,    50,
    2685,    41,    41,   796,  2689,    41,   789,   788,  2693,  2694,
      50,    50,  3910,   421,    50,   796,   317,   788,  4277,  4278,
     788,    33,    33,    33,   791,   796,   141,   788,   796,    41,
      41,    41,   300,  2722,  5937,   796,   788,   128,    50,    50,
      50,  2730,   317,   317,   796,  3305,  3306,  4306,  3308,  3309,
    1299,  1390,  6276,  6277,  1393,  1394,  1305,  1306,  2743,    33,
    6274,  3959,  2458,  2459,  2749,  4324,   754,    41,   209,  4333,
    4040,   788,   788,  2898,   458,  2900,    50,  1150,   255,   796,
     796,  4427,   675,  4363,   774,   775,   776,   777,   778,   779,
     780,   781,   791,    33,   317,  4040,   675,  3860,  5949,   209,
     282,    41,  6316,  5289,   113,   114,   115,  4851,  3437,  3899,
      50,  3901,  4376,   789,  2799,  3437,  2801,  6109,  6110,   503,
     297,   464,  2807,  2808,  2809,    33,    33,  3917,   209,   306,
     209,    19,    20,    41,    41,  2820,    28,  6351,    30,   316,
      32,  5751,    50,    50,  4151,  4866,   774,   775,   776,   777,
     778,   779,   780,   781,  2550,   332,   128,   789,   209,   791,
      24,    25,   415,  6377,    28,   789,    30,  3437,    32,   209,
     209,   667,   789,   209,   791,    33,   317,   795,  3437,  2575,
      24,   565,   651,    41,    28,   145,    30,  3437,    32,  5536,
    3122,  3123,    50,    28,   145,    30,  2885,   209,   209,   209,
      33,   791,   145,  5245,  5246,   776,   777,   317,    41,  6060,
    3469,   215,  6063,  2898,    33,  2900,   789,    50,   791,   796,
      33,   791,    41,   227,   608,   789,  3158,   791,    41,   482,
     314,    50,  3164,   776,   777,   209,   317,    50,   317,   741,
      33,    33,    33,   712,   127,   791,   715,    33,    41,    41,
      41,   789,   796,   791,  2650,    41,   144,    50,    50,    50,
     776,   777,    33,  2659,    50,   269,   317,   120,  2664,   209,
      41,    19,    20,   742,  2670,   282,  4849,   317,   317,    50,
    5466,   317,   751,   789,  3024,   791,   290,  4693,   789,  2685,
     791,   789,  3914,   791,   789,   548,   791,   550,    47,   661,
      33,   209,   209,   556,   751,   317,   317,   317,    41,   197,
      33,    33,  3156,    33,   440,  3883,  3001,    50,    41,    41,
    4172,    41,  4174,   327,  4513,  6338,  6339,    50,    50,   789,
      50,   791,    18,    19,    20,   791,    33,   789,   269,   791,
    3018,    33,   788,   317,    41,  3030,  3024,   114,  3024,    41,
    5568,   209,   101,    50,    40,   288,    47,    33,    50,   128,
      24,    25,   480,   616,    28,    41,    30,    33,    32,   789,
     151,   791,   794,  3058,    50,    41,   209,   317,  3063,  3064,
    1682,  1683,  1455,    33,    50,  5106,    33,   771,   772,   773,
     209,    41,  4067,  4068,    41,  4638,   209,   789,  5119,   791,
      50,   150,    28,    50,    30,  2801,    32,   660,  3093,   317,
     317,  2807,  4419,  6052,  6053,   791,   209,   209,   209,  3867,
    3868,   610,    99,   209,   141,  4092,  4093,  4094,   316,   789,
     651,   791,  3110,  3118,  3110,  3120,   440,   788,   209,  3264,
     789,  3110,   791,  3867,  3868,   479,  3232,  3291,  3822,   588,
    4117,  4118,   791,  4120,   777,   778,  3110,    81,   791,   317,
      24,    25,    26,   789,    28,   791,    30,  3152,    32,  3294,
    3295,  3110,   590,    28,   160,    30,   209,    32,  3163,   597,
      57,   788,   519,   520,   317,   603,   209,   209,   584,   209,
     791,   789,   711,   791,    71,   788,    73,   534,   317,   536,
     788,   742,   390,   756,   317,   788,   255,  3332,   789,   192,
     791,   197,   209,   337,   767,   789,   791,   209,  4416,  4865,
    3209,    75,    33,   147,   317,   317,   317,  5744,   337,   204,
      41,   317,  3980,   209,   158,    19,    20,  3469,   337,    50,
     226,   555,   166,   209,   288,   204,   317,  3232,   297,   232,
      23,   788,   791,    26,    27,  3240,  3980,   306,    31,   209,
     284,   679,   209,   789,   364,   791,   789,   316,  4827,  3254,
     194,   431,   126,  3258,   789,   797,   791,  4011,  4012,  3264,
     789,   355,   791,   332,   317,   355,   269,  3272,   795,    57,
    4185,   145,   629,   630,   317,   317,  4191,   317,   788,  4194,
    4390,  4391,   788,    71,  4199,    73,   160,   788,   294,  3294,
    3295,   788,    40,   501,   788,    24,    25,   128,   284,    28,
     317,    30,    50,    32,   742,   317,   250,    55,   788,   788,
    3319,  3320,  3321,  3322,  3323,  3324,  3325,   788,    24,  3328,
     788,   317,    28,   788,    30,  4709,    32,  3332,   789,    15,
     788,   317,  4716,   789,   278,   791,  4323,    33,   745,   789,
     144,   791,  3058,  3348,   218,    41,   313,   317,   359,   789,
     317,   791,   226,   745,    50,  3364,  3365,  4344,  3367,   789,
    3369,  3370,  3371,  3372,  3373,  3374,  3375,   788,  3377,    24,
      25,    26,  3381,    28,   789,    30,   791,    32,   209,   789,
     788,   791,  4766,   788,   390,  3390,   788,   390,   789,    88,
     789,  4501,   403,   197,   405,   789,   393,   791,   395,   402,
     666,  5067,  1795,   151,    24,  3410,  3411,  3412,    28,   788,
      30,  3416,    32,   621,  4246,  4152,   682,    23,   789,   167,
      26,    27,   537,   538,  5150,    31,   541,   542,   543,   789,
     789,    88,   429,   789,    73,    47,    22,    23,    24,    25,
      26,    27,    28,    29,    30,    31,    32,  3163,   345,   197,
     788,  5492,    19,    20,    18,    19,    20,   789,   789,   789,
    5501,   789,   459,   791,    38,   788,   363,   788,  1582,  1583,
     355,   356,   789,   370,   791,    24,    40,  1591,  4768,    28,
     789,    30,   791,    32,   495,   788,   317,  5233,   789,   788,
     791,   239,   788,   499,   106,   789,   300,  6427,   395,   502,
     789,   788,   791,    40,    33,   788,   788,   392,  1622,    73,
    1624,   788,    41,   209,   388,   788,   215,  5096,   788,   307,
     308,    50,   214,   788,  3240,  1639,  1640,  1641,   227,   789,
     788,   788,  1646,  1647,   545,    99,   122,  4116,  3254,   789,
    1654,   791,  3258,   789,   752,   791,   431,   788,   740,   741,
    4173,   743,   788,   745,   762,  5120,   789,   345,   791,   788,
     214,   789,   789,   789,   789,   791,   791,   788,   788,   572,
     227,  4192,  4193,  4683,  4195,   363,   119,   788,   145,  4200,
     123,   592,   370,   282,   127,   789,   390,   791,  5254,   214,
     789,   290,   791,  4287,  4173,   592,   160,    33,   789,   789,
     791,   791,   789,   788,   791,    41,   789,   395,   791,   152,
     214,   789,   269,  4381,    50,   621,   202,    53,    81,    31,
     789,   317,   791,   160,   789,   168,   791,   788,   327,   626,
     789,   174,   791,   197,   788,   759,   789,  4381,   202,   789,
     204,   791,   789,   789,   791,   791,   788,   913,   788,   915,
     789,   917,   918,   265,   788,   267,   789,  4351,   924,   796,
     197,   927,   226,  4312,   207,   788,   278,  4246,    15,    15,
    4312,   788,   683,   791,  3390,   771,   789,   789,   789,   788,
     209,  3845,   294,   789,   147,   342,   788,   588,   788,   226,
     788,   788,  5574,   788,  2087,   158,   707,   501,   789,   204,
    3416,   128,   788,   166,   788,   291,   788,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,   788,   788,
     204,   606,  4312,   788,   598,   788,   788,   788,   788,   788,
     294,   194,  2125,  4312,   788,   259,   789,   788,   623,   788,
      55,   440,  4312,   788,  5785,    53,   789,   789,   675,   789,
     293,   464,   788,   788,   760,   284,   762,   294,   788,   145,
     417,   788,   788,   788,   649,  2158,    71,  4682,   467,  4684,
     788,   791,   789,   209,  5677,   788,   695,   789,  2171,  4694,
     788,   788,   127,   440,   788,   695,   350,   250,   317,   788,
     961,    96,   681,   789,   788,   788,   788,  4712,   788,  4689,
    3805,  5547,  2195,  2196,   109,   788,   788,   122,   693,  4724,
     467,  5557,   788,   788,    33,   278,   788,   621,  4708,   789,
     125,   711,    41,   390,   514,  4740,   390,  4717,   414,   143,
     397,    50,   433,  4723,    53,   709,   791,   426,  1009,   791,
     737,  3846,   791,  4733,   586,   412,   364,   791,   791,   127,
     155,  4741,  4742,   390,   398,  3860,   791,  3862,   791,   583,
     706,  3870,  3867,  3868,  4116,  3870,   478,   434,  3873,  3874,
       7,   771,   751,  5457,   467,   183,   467,   788,    10,  5791,
     218,   317,    88,  3989,  1150,  5797,  5798,   202,  4468,  4469,
    4470,  4471,  4472,  4473,  4474,  4475,  4476,  4477,   791,  4479,
    4480,  4481,  4482,  4483,  4484,  4485,  4486,  5573,  4488,  4489,
      31,   136,  4492,  4493,   297,  1086,  4748,   151,    65,   397,
     412,  4173,  4659,   587,     3,   751,   730,  3932,  3926,  3927,
     235,   796,   313,   431,   682,   499,    54,   791,   127,   145,
    4927,  4928,  4929,  4930,   796,   120,  4933,  4934,   752,   737,
      75,  4938,   796,    33,  4941,   426,   647,  4944,   762,   711,
    4947,    41,   499,   662,  4951,  4952,   789,   337,   667,   651,
      50,   337,   539,  3978,    81,  3980,   291,   337,  3983,  3984,
     141,   313,   510,  3992,  3989,   552,   565,    88,   128,   154,
     209,   296,   313,   788,  4246,  5560,   178,  4161,   795,   791,
     796,   126,   569,   788,   390,   662,  4011,  4012,    47,   215,
     667,   397,   431,  4018,  4594,   789,   789,   106,  1189,  4599,
     145,   227,   340,   791,  5408,  5409,   412,  5411,   129,   796,
     789,    18,    19,    20,   789,   160,   789,   652,   581,   789,
     147,   127,   127,   742,   145,  5711,   789,   127,   434,   789,
     789,   158,   751,    40,   621,   796,   364,   621,   788,   166,
     788,   167,  4103,   136,   791,   288,    53,   127,   791,   778,
      73,   797,   791,   695,   686,   687,   688,   689,  4731,  4700,
     796,   127,  4731,   778,   290,   742,    73,   194,   151,  4731,
     494,   708,   407,   455,   751,   127,   439,   204,   317,   414,
     664,   226,   410,   791,   127,   695,   789,  4728,   413,   414,
     788,  4732,    99,   788,   791,     3,   154,   151,  4739,   791,
     218,   327,   367,  5110,  5508,  5112,   240,  5114,   364,   209,
     697,   791,   514,   695,   720,   514,   514,   723,   514,   514,
     695,  4731,   514,   250,   120,   712,  3862,   681,  4153,  5259,
     288,    47,  4731,   539,   127,   678,   600,   751,   789,  5905,
     789,  4731,   263,  6075,   158,  2279,   552,   158,  2282,  4748,
     789,   278,  2565,   160,  5739,   789,   789,   788,  4176,    65,
     488,   282,   211,   569,  2298,   137,   791,   796,   443,  1455,
     776,   777,   669,   294,   252,   762,   760,   796,   762,   484,
     422,   788,   484,   791,   599,  2319,   284,    68,   741,  1380,
     197,   312,  1383,   710,   128,   202,   223,   204,   207,   204,
     791,    22,    23,    24,    25,    26,    27,    28,    29,    30,
      31,    32,   791,   288,   440,   788,  4241,   317,   146,   226,
    5227,   342,  4247,   551,   154,   653,   789,  5973,    97,    19,
      20,    42,   431,   789,   789,   128,   778,   562,   563,   567,
     568,   467,  3978,   388,   572,   573,   574,  3983,  3984,    22,
      23,    24,    25,    26,    27,    28,    29,    30,    31,    32,
     119,   789,   789,   789,   123,   789,   789,    57,   127,    33,
     777,   791,   788,   781,   789,  4011,  4012,    41,  5682,   789,
    5684,  5685,   791,   789,   789,   796,    50,   294,   789,   789,
     789,   697,   788,   152,   789,   789,   417,   789,   791,  4972,
     789,   122,   789,  4972,    40,   789,   712,  4332,   789,   168,
    4972,  5915,   640,   789,   791,   174,   791,   789,   789,   789,
     789,    33,   788,    33,   218,  4925,  4918,   788,   788,    41,
    1521,    41,   789,    33,   788,  4364,   788,  4937,    50,  4364,
      50,    41,   788,   350,  2757,  6406,   382,   595,   207,   122,
      50,   771,  4377,    53,  5056,  4384,  4381,    31,    31,  4384,
      31,   791,  4972,   431,   128,   693,   131,  4551,   128,   105,
     791,   796,   791,  4972,   796,   127,   127,   508,   796,   791,
     606,   202,  4972,   390,   791,   720,   796,   791,   723,   128,
     617,   791,   789,  4418,  6296,   259,   789,   732,   723,    53,
     791,   100,  4427,  2816,  6008,    47,    33,   791,  4573,  1600,
     791,  4436,  4428,   675,    41,  4433,   128,  2830,   128,   791,
     771,   369,   648,    50,   127,  1616,  1617,   791,   158,   202,
     580,  5369,  4457,   158,   293,   758,   553,   511,  4463,   443,
     123,   667,  4467,   788,   269,   209,   561,  5385,   661,  5041,
    6054,   269,   269,   598,   269,   269,   192,  2870,  2871,  4731,
     316,   197,   469,   204,   788,   127,  4491,  2880,  2881,  2882,
     291,   789,   791,  6159,   771,   771,  4748,   771,   771,   771,
     771,   271,   771,   771,  2897,   771,   771,  5160,  2901,   715,
    4667,  5160,   499,   771,   771,  5164,   232,   209,  5160,   209,
     771,   128,  5164,   771,   771,  4631,   741,   771,   771,   209,
     771,   771,   771,  4538,   251,   300,   742,   580,   291,   771,
    4545,   771,   771,  6425,   771,   751,   796,   648,  4693,   168,
     771,    34,   337,   269,   791,   288,   791,  4702,   796,    19,
      20,   662,  4571,   796,   288,   763,   667,   510,  4573,   396,
    5160,   154,   153,   317,  5164,  1746,   789,    81,   795,   153,
     796,  5160,  1753,   214,   709,  5164,   789,  6333,   789,   789,
    5160,   796,   789,   517,  5164,   519,   520,    57,   789,   777,
     796,  6166,   209,   777,    65,   789,   407,  5525,   789,   242,
     534,   791,   536,   414,   715,   788,  4621,   788,   288,   342,
     704,   288,   588,  1794,   796,   317,  4631,   317,   128,  6295,
     128,  4636,   796,   788,   621,   788,   496,   317,   233,    30,
    4638,   742,   777,   147,  5297,   788,   788,   771,  5297,   366,
     420,   549,   740,   204,   158,  5297,   337,   374,   126,   204,
     204,   414,   166,    50,   434,   288,   436,   158,   158,  4667,
     719,  4667,   389,   412,   390,   791,   789,   664,  4667,    31,
      31,   241,   399,   400,   401,   412,   402,    31,  4693,    53,
     194,   284,   409,   246,   788,  6279,   788,  4702,   468,   127,
     204,   788,   472,    81,   778,   629,   630,  5297,  5357,   588,
     317,   481,   789,   778,   143,  5357,   474,   788,  5297,  5291,
    4972,  4726,    72,  5295,  5296,    75,   795,  5297,  6394,  3122,
    3123,   788,   791,    95,   796,  6300,   788,   155,   155,  6405,
     796,  4457,   581,   788,   514,  5394,   250,  6413,   789,  1920,
     207,  4467,  5394,   789,   789,  6421,   789,   788,  4903,   789,
     684,   685,   532,   791,   791,  3158,    65,  5357,   789,   147,
     789,  3164,   789,   760,   278,   762,   126,   789,  5357,   129,
     158,   789,   153,   789,   789,   771,   502,  5357,   166,   788,
    5369,   788,   128,    31,  4939,   145,   300,    72,    31,   233,
      75,   791,   315,   791,  5394,   788,  5385,   789,  5726,   788,
     160,   271,   233,   771,   791,  5394,   194,   558,   741,  4824,
     204,  2087,   282,   412,  5394,   788,   204,   788,   300,   300,
     547,   788,   382,    53,   789,   791,    31,   791,   450,   209,
     610,   288,   559,    53,   443,   252,   131,   617,  2019,   506,
    2021,   126,   225,   395,   129,   788,   572,   627,   788,  2125,
    4865,   127,   580,   127,    30,    65,  4864,   789,   218,  4874,
     145,   641,   250,   168,   257,  4864,   226,   789,   316,   508,
     789,   647,   207,    65,   791,   160,   789,   789,  4897,  4898,
    4899,   791,  2158,   351,   218,   665,   169,   789,  4903,   789,
     278,  4906,   789,  4908,   674,  2171,  5059,   677,  5160,   789,
     316,   451,   174,   263,   791,   771,   788,   771,  4923,   720,
    4961,   771,   723,   791,   762,   695,  4935,  4936,   167,  2195,
    2196,   732,   749,   422,  4939,   422,  4945,   218,    53,   204,
     300,   789,   659,   645,   294,   681,  5525,   300,   170,  4958,
     319,   226,    30,  4958,   788,  4960,   726,   296,    30,   597,
     420,   218,   312,   388,   218,   218,    65,   720,   218,   159,
     723,   159,   218,   218,   434,   712,   436,   712,  4987,  4984,
     596,   218,   218,   700,   218,   204,   607,   204,   263,  6373,
     390,   128,  5049,  5050,   489,  5052,   588,   714,   443,   316,
    5057,   204,   154,  5060,   311,  5150,  5063,  5064,   468,   311,
     580,    99,   472,   238,  5071,    57,  5073,   788,   791,   294,
    5592,   481,   789,   502,   553,  5082,   789,   789,   789,   789,
     789,   617,  2203,   789,   155,  5040,    71,   312,   388,   789,
     789,    65,   789,   791,  3437,  5297,   789,   410,  5053,  5054,
    5055,   789,    50,   658,   514,   431,  5051,   791,    53,   788,
    5065,   789,  5067,   788,    31,   791,   796,   382,   788,  5074,
    5075,  5066,   532,   788,   796,  5080,  3469,   789,    65,  5997,
     788,  5076,  5087,    65,   117,    65,    30,  5092,  5083,   788,
    5085,  5086,  5101,  5672,   450,   335,   251,   749,   141,   160,
     749,   226,  5107,   394,   426,   674,  2277,  2278,   316,   127,
     428,   282,   796,   388,   127,   771,    30,  5369,   791,   449,
     789,   553,   423,   789,   789,   692,   788,  5125,   789,   160,
     788,  5136,   791,  5385,   587,  6245,  5125,   160,   788,   237,
     788,   788,  5183,   789,    53,  5150,   789,  5726,   105,   580,
     610,   791,    65,   788,   795,   791,   795,   617,   795,   789,
      65,    65,    31,  5812,   415,   127,   288,   627,   127,   160,
    5812,   791,   316,   791,   288,   789,   588,    30,  5183,   465,
     789,   641,  5187,   789,   653,   789,   605,   788,   444,  2360,
     605,   371,   788,   796,   788,   300,   796,  6184,   789,   796,
     788,  2467,  2373,   580,    72,   665,   796,  4923,     6,   796,
     204,   366,   796,   795,   674,   580,   796,   677,   796,   374,
    5974,   796,  5812,   796,   796,   796,   789,   120,   796,   120,
     796,   796,   796,  5812,   389,   695,   795,  5242,    92,    93,
      94,    95,  5812,   282,   399,   400,   401,   796,   598,  5254,
    5255,   711,   288,    73,   409,   282,   288,  5262,   288,  6013,
     588,    72,   692,    72,    65,    65,   726,   788,  5273,   788,
     160,  5276,  5277,  5525,   796,    50,  5281,   789,   718,   703,
    5285,    30,   791,   791,   138,   139,   140,   788,  5293,    18,
    5435,  5300,  2463,  5298,   791,   789,   580,   580,   219,  2565,
     144,   218,    99,    99,   432,   297,  6416,  5316,  2479,   588,
     588,   653,   788,   422,   422,   788,   434,   791,   181,   789,
     160,   709,   789,   598,   788,   788,   788,   749,   160,   202,
      99,   297,   343,    53,   789,   154,   190,   191,   788,  5055,
    5920,  5921,   796,  5923,  5924,  5925,  5926,   796,   789,   704,
     593,   788,   788,  6035,  5395,  5360,   204,   430,  5074,   709,
     199,   788,   788,   745,   426,   788,     6,  6121,   174,   744,
    5375,   208,  5377,   342,   589,   788,   796,   744,   789,   788,
    5437,  5422,   796,  5424,   789,   789,   788,   127,   796,   219,
     791,   252,   547,   796,   791,   484,  2567,   789,   336,  5404,
     254,  5406,   204,   789,   559,   204,    65,   101,   789,   204,
     789,   297,   112,   204,   204,   143,   436,   116,  5997,  5998,
    5672,   653,    30,  5428,  5429,  5430,  5431,   788,  5423,  2586,
    5435,  5436,   259,  5438,   709,  5114,  2607,   791,  5443,  5444,
    3110,  3383,  5447,  5110,  5112,  3228,  5796,  5452,  5453,  5374,
    5829,  5993,  4080,  6225,  5459,  5460,   767,  5462,  1432,   765,
     765,  5360,  5831,  5758,   318,  5470,  5160,  5512,  6048,  4972,
    5534,  6051,  5754,  4744,  5726,  3188,  4446,  1752,  3462,  6059,
    3406,  2084,  6062,   830,  4246,  2195,  2194,  5642,  5352,   644,
    5641,  2757,  2196,  4620,  4102,  5451,  5238,  5502,  4373,  4824,
    6161,  6419,  2433,   668,   659,  4377,  6042,  5512,  5560,  6300,
    6258,  5928,  5558,  5048,  5519,    33,  2721,  4615,  5818,  1420,
    5285,  5425,  5092,    41,  4621,  4917,  6282,  6111,  6121,  6013,
    3437,  6006,    50,  6006,  6006,  6006,  4309,  4192,  5750,  2710,
    3304,  2712,  2713,  2714,  4237,   700,  4056,  4262,   713,  5982,
    2816,  4691,  6035,  3808,  4340,  5180,  4343,  4335,    89,   714,
    6306,   415,    89,  6276,  2830,  6277,  5803,  6067,  5573,  3220,
    6083,  6079,  5695,  4716,    92,    93,    94,    95,  5583,  5421,
    3981,  4620,  5419,  5588,  5089,  1527,  1441,  1944,  3208,  5879,
    5595,  5596,  6031,  3203,  5699,  5600,  5601,  2749,  3058,  2101,
    2839,  2575,  3416,  4179,  2870,  2871,   135,  1407,  3153,  3018,
     773,  1172,  1354,  1394,  2880,  2881,  2882,  4665,  3067,  2885,
     138,   139,   140,  3287,  5666,  4364,  2969,  2966,   482,  3845,
    3036,  2897,  3035,  5638,  1742,  2901,  1686,  1606,  3755,  4767,
    1585,  6232,  5647,  5641,  6005,  1617,  6339,  5652,   108,  6338,
    2000,  1352,  1352,  1995,  1352,  1352,  1352,  5116,  2829,  4658,
    5893,  4874,  5667,  5894,  5828,  1591,  1990,  2700,  2016,  3831,
    3274,  5676,   190,   191,  4545,  4544,  3829,  5233,  5905,  4851,
    5711,  5229,   142,  4768,  3290,  3283,  5250,   779,  4659,  4061,
    1385,   209,  4062,  5698,   548,  2693,   550,  4323,  4551,  5704,
     107,  5706,   556,    89,  1415,  1262,  5711,   697,  1465,  4176,
    2107,  2832,  2160,  5754,  4433,  5720,  5573,  3316,  4420,  4896,
     180,  4418,  5867,  4116,  6295,   844,  5731,  5732,   845,  2546,
     688,  2547,  1825,   688,  1410,   688,   254,  2603,  5638,  1933,
    5265,  4182,  1532,  5003,  6298,  5997,  5998,  3145,  6344,  5754,
    6413,  5415,  6421,  5758,   965,  6333,  2566,  2678,  2829,  5254,
    2885,  3122,   616,   687,  2479,  3123,  3119,  2200,   687,  3124,
    5811,  5776,  3879,  3115,  5815,   685,  1964,  3114,  4091,  1153,
    4173,  2743,  5787,  2176,  1764,  3063,  5502,  5792,  1187,  3223,
    4671,  4573,  5498,  4103,   726,  5800,   961,  5802,   113,   317,
     318,    89,  1295,    89,    89,  3995,   660,  1520,  2658,   929,
    4173,  5816,   977,  1520,  6132,  4978,   981,  5822,  3463,  4988,
    4978,    -1,  4974,  2197,  4973,    -1,    -1,    -1,  5973,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5842,    -1,  1004,
    6419,    -1,    -1,    -1,  1009,    -1,    -1,    -1,    -1,  1014,
    5855,    -1,    -1,  4246,    -1,    -1,    -1,    -1,    -1,    -1,
    5865,    -1,  5867,    -1,    -1,    -1,    -1,  3038,  5873,  5874,
    5875,    -1,    -1,    -1,    -1,    -1,  5871,    -1,    -1,    -1,
    5596,    -1,    -1,    -1,  3055,    -1,    -1,    -1,  5893,  5894,
      -1,    -1,  3158,    -1,    -1,  5900,    -1,   415,  3164,    -1,
      -1,    -1,   756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6055,    -1,    -1,   767,    -1,  1080,  1081,  1082,  1083,  4312,
      -1,  1086,    -1,    -1,  5965,    -1,    -1,    -1,  1093,    -1,
      -1,    -1,    -1,    -1,  5939,    -1,    -1,    -1,    -1,  5944,
      -1,  5982,    -1,    -1,    -1,  5950,    -1,    -1,    -1,    -1,
      -1,  5960,    -1,  3124,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   482,    -1,    -1,    -1,  5973,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5989,    -1,  5991,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6000,    -1,    -1,    -1,    -1,
    6005,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3187,  3188,    -1,    -1,
      -1,    -1,    -1,    -1,  1189,   485,  6031,    -1,    -1,    -1,
     548,    -1,   550,    -1,    -1,    -1,  6181,  6042,   556,    -1,
    6049,  6050,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6055,  6111,  6061,    -1,    -1,   515,   516,    -1,   518,   519,
     520,   521,   522,    -1,   524,   525,   526,   527,   528,   529,
     530,   531,    -1,   533,   534,   535,   536,    -1,    -1,    -1,
      -1,    -1,  6087,    -1,    -1,    -1,    -1,  6128,    -1,    -1,
    6095,    -1,  6097,  6098,    -1,    -1,    -1,    -1,   616,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1274,
      -1,  6256,  3283,  6111,    -1,  6111,    -1,    -1,    -1,  6124,
      -1,  6126,  6286,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   660,    -1,    -1,    -1,    -1,    -1,    -1,  5865,
      -1,    -1,    -1,    -1,  6159,    -1,    -1,    -1,    -1,  5875,
      -1,  6170,    -1,    -1,  6173,    -1,    -1,  6419,    -1,   629,
     630,  3437,    -1,    -1,    -1,    -1,  6181,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6226,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6199,  6200,    -1,    -1,  6203,    -1,
      -1,    -1,    -1,  3469,    -1,  6210,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1380,    -1,  6222,  1383,    -1,
      -1,    -1,    -1,  3394,    -1,  6230,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   756,    -1,
    6281,  6282,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   767,
      -1,  6256,    -1,    -1,    -1,  6400,    -1,    -1,  6422,    -1,
      -1,    -1,    -1,    -1,  6409,  6270,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6285,  6322,    -1,    -1,  6289,    -1,    -1,    -1,    -1,  1454,
    6295,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4731,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4748,  1521,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1530,    -1,  1532,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6394,
      -1,    -1,    -1,    -1,    -1,  6400,    -1,    -1,    -1,    -1,
    6405,    -1,    -1,    -1,  6409,    -1,    -1,    -1,  6413,    -1,
    6126,    -1,    -1,  1578,  1579,    -1,  6421,    -1,    -1,  1584,
      -1,    -1,    -1,  1588,  1589,  1590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1598,  1599,  1600,    -1,    -1,    -1,  1604,
      -1,    -1,    -1,  1608,  1609,  1610,    -1,  1612,  1613,  1614,
      -1,  1616,  1617,    -1,    -1,    -1,    -1,    -1,  1623,    -1,
    1625,    -1,    -1,  1628,  1629,  1630,  1631,    -1,  1633,    -1,
    1635,  1636,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1649,  1650,  1651,  1652,  1653,    -1,
    1655,  1656,  1657,  1658,  1659,  1660,    -1,  1662,  1663,    -1,
    1665,  1666,    -1,  1668,  1669,     6,     7,  1672,  1673,    -1,
    1675,  1676,    -1,    -1,  1679,    -1,  1681,    18,    -1,    -1,
    1685,  1686,  1687,    -1,    -1,  1690,  1691,  1692,  1693,    -1,
    1695,    -1,    -1,    -1,    -1,    -1,    -1,  1702,    -1,    -1,
      -1,    -1,    -1,  1708,  1709,  1710,  1711,    -1,    -1,    -1,
      -1,    -1,    53,    -1,  1719,  1720,    -1,  1722,  1723,    -1,
      -1,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,    -1,    -1,  1741,    -1,    -1,  4972,
      81,  1746,    -1,    -1,    -1,    -1,    -1,    -1,  1753,    -1,
      -1,    -1,    -1,    -1,  3765,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,     6,     7,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  1776,    -1,    -1,    18,    -1,    -1,    -1,   119,    -1,
      -1,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,  1794,
      -1,    -1,    -1,  3804,    -1,   136,   137,    -1,    -1,    -1,
      -1,    -1,   143,    -1,    -1,    -1,   147,    -1,    -1,    53,
      -1,   152,    -1,   154,    -1,    -1,    -1,   158,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   166,    -1,   168,    -1,    -1,
      -1,    -1,    -1,   174,    -1,    -1,    -1,    81,    -1,    -1,
      -1,    -1,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3872,    -1,   204,    -1,    -1,   207,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   119,    -1,    -1,    -1,   123,
      -1,    -1,    -1,   127,    -1,    -1,   227,    -1,  1893,    -1,
    1895,    -1,   136,   137,    -1,    71,    -1,    73,    -1,    -1,
      -1,    -1,    -1,   147,    -1,   246,    -1,    -1,   152,   250,
     154,    -1,    -1,    -1,   158,  1920,    -1,    -1,   259,    -1,
      -1,  1926,   166,    99,   168,    -1,    -1,  5160,    -1,    -1,
     174,  5164,    -1,    -1,    -1,    -1,    -1,   278,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     194,    -1,   293,    -1,    -1,    -1,    -1,    -1,   299,   300,
     204,    -1,    -1,   207,    -1,    -1,    -1,    -1,    -1,   145,
      -1,    -1,    -1,   314,    -1,   316,    -1,    -1,    -1,    -1,
       6,     7,    -1,   227,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   246,    -1,    -1,    -1,   250,    -1,  2013,    -1,
    4116,    -1,    -1,    -1,  2019,   259,  2021,    -1,    -1,    -1,
      46,    -1,    48,    49,    -1,    -1,    -1,    -1,    -1,  4040,
      -1,    -1,    -1,    -1,   278,    -1,  2041,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    70,    -1,    72,    -1,    -1,   293,
      -1,    -1,    78,    -1,    -1,    -1,   300,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5297,    -1,    -1,  4173,    -1,    -1,
     314,    -1,   316,    99,    -1,    -1,  2081,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   110,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   273,   274,   275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   293,    -1,   145,
      -1,    -1,   463,    -1,  5357,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5369,    -1,    -1,    -1,
    4246,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,
      -1,    -1,  5385,    -1,    -1,    -1,  2161,    -1,    -1,    -1,
      -1,  5394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   350,    -1,   352,    -1,    -1,   205,
      -1,   207,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     216,    -1,   218,    -1,   370,    -1,   372,    -1,  2203,  2204,
      -1,    -1,    -1,    -1,    -1,    -1,  4312,  2212,  2213,    -1,
      -1,    -1,    -1,    -1,   390,   241,    -1,    -1,    -1,    -1,
      -1,   397,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   412,    -1,    -1,    -1,
     581,    -1,    -1,   419,    -1,    -1,    -1,   273,   274,   275,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   434,    -1,
      -1,  2266,    -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,
      -1,    -1,  2277,  2278,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5525,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2310,  2311,  2312,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   491,   342,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   350,   501,   352,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   581,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   372,    -1,    -1,    -1,
      -1,    -1,    -1,   379,    -1,  2360,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   539,   390,  2370,    -1,    -1,  2373,    -1,
      -1,   397,    -1,    -1,    -1,    -1,   552,    -1,    -1,    -1,
      -1,    -1,    -1,  2388,    -1,    -1,   412,  2392,  2393,    -1,
    2395,  2396,    -1,   419,    -1,    -1,    -1,   423,   424,  2404,
      -1,  2406,    -1,    -1,   430,    -1,    -1,    -1,   434,    -1,
      -1,    -1,    -1,    -1,    -1,   591,   442,   758,    -1,    -1,
      -1,   597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     771,    -1,  2437,    -1,    -1,  4446,    -1,   463,    -1,  5672,
      -1,    -1,    -1,    -1,    -1,   621,    -1,    -1,   789,    -1,
     791,    -1,    -1,   794,   795,    -1,    -1,    -1,  2463,    -1,
      -1,   487,    -1,    -1,    -1,   491,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2479,   501,    -1,    -1,    -1,   655,
      -1,    -1,    -1,    -1,    -1,    -1,   662,    -1,    -1,    -1,
      -1,    -1,    -1,  5726,  2499,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2516,    -1,   539,   758,    -1,    -1,    -1,    -1,    -1,
      -1,   697,    -1,    -1,    -1,    -1,   552,   771,   554,    -1,
      -1,    48,    -1,    -1,    -1,    -1,   712,   713,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   789,    -1,   791,  2553,   725,
     794,   795,    -1,    -1,    -1,  2560,    -1,    -1,    -1,    -1,
      -1,    -1,  2567,    80,    -1,   591,    -1,    -1,    -1,    -1,
      -1,   597,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5812,
      -1,    -1,    -1,    -1,   101,    -1,   762,    -1,    -1,    -1,
      -1,    -1,    -1,   110,    -1,   621,   622,    -1,    -1,    -1,
      -1,    -1,  2607,    -1,    -1,    -1,    -1,   633,   634,   635,
      -1,    -1,    -1,    -1,   131,   791,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4731,    -1,    -1,   145,   655,
      -1,    -1,    -1,   150,    -1,    -1,   662,    -1,    -1,    -1,
      -1,    -1,  4748,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   174,  2663,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   697,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   712,   713,    -1,    -1,
      -1,    -1,  2697,    -1,    -1,    -1,    -1,    -1,    -1,   725,
      -1,    -1,    -1,   729,    -1,  2710,    -1,  2712,  2713,  2714,
      -1,  2716,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
     237,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   762,    -1,   255,    -1,
      -1,    -1,   259,   260,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4768,    -1,    -1,
      -1,    -1,    -1,    -1,  5997,  5998,    -1,    -1,    -1,   795,
      -1,    -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,
     297,   298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2829,    -1,    -1,  4838,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     357,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4972,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     397,  2886,    -1,    -1,    -1,  2890,    -1,    -1,  2893,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2902,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2911,    -1,  2913,  2914,
      -1,  2916,  2917,  2918,  2919,    -1,  2921,    -1,  2923,  2924,
      -1,  2926,    -1,   440,    -1,    -1,    -1,    -1,   445,  2934,
    2935,    -1,    -1,    -1,  2939,  2940,  2941,    -1,    -1,   456,
     457,    -1,    -1,    -1,  2949,  2950,  2951,    -1,  2953,    -1,
    2955,    -1,  2957,    -1,  2959,    -1,  2961,    -1,    -1,    -1,
      -1,  2966,  2967,    -1,  2969,  2970,  2971,    -1,    -1,    -1,
    2975,    -1,    -1,  2978,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2987,    -1,    -1,  2990,    -1,  2992,  2993,  2994,
      -1,    -1,  2997,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3019,    -1,  3021,    -1,    -1,  3024,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3034,
    3035,  3036,  3037,  3038,  3039,    -1,    -1,    -1,    -1,  3044,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3055,    -1,    -1,    -1,  5160,    -1,    -1,    -1,  5164,    -1,
      -1,    -1,    -1,   668,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     5,    -1,     7,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   611,    -1,    -1,    -1,    -1,  3104,
      -1,    -1,    -1,    -1,   621,    -1,    -1,    -1,   713,    -1,
      -1,    -1,    -1,    -1,    -1,   632,    48,    49,    -1,  3124,
      -1,   638,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    66,    -1,    68,    -1,    70,    -1,
      72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,    -1,
      -1,    -1,  3157,   670,    -1,    -1,    -1,   674,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
      -1,   103,   104,  3178,    19,    20,    -1,    -1,   110,    -1,
      -1,    -1,  3187,  3188,    -1,    -1,  6419,    -1,   705,    -1,
      -1,  5297,    -1,    -1,    -1,   127,    -1,    -1,    -1,   131,
      -1,    -1,    47,    -1,    49,    -1,    -1,    -1,    -1,   141,
      -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,   150,    -1,
      -1,    -1,    56,    57,    -1,    -1,    71,    61,    62,   161,
      -1,    -1,    -1,    -1,    79,    80,    -1,    71,    -1,   171,
      -1,    -1,   174,  3248,    89,    -1,   178,    -1,    -1,    -1,
      -1,  5357,    -1,    -1,    -1,    -1,    -1,    -1,   103,   104,
      -1,    -1,    96,  5369,    -1,    -1,  3271,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    -1,   109,    -1,    -1,  3283,  5385,
      -1,    -1,    -1,    -1,    -1,   217,   218,    -1,  5394,    -1,
      -1,   125,    -1,   127,    -1,    -1,   228,   229,    -1,    -1,
     145,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   240,   241,
     242,    -1,   244,    -1,   159,    -1,    -1,   249,    -1,    -1,
      -1,   155,    -1,   255,    -1,    -1,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   175,   176,   177,    -1,    -1,    -1,    -1,    -1,    -1,
    3355,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,    -1,   299,    -1,   203,
     215,    -1,   977,    -1,   306,    -1,   981,    -1,    -1,    -1,
      -1,    -1,   227,   315,   316,    -1,    -1,    -1,    -1,  3394,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1004,
     332,   235,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1014,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5525,
      -1,    -1,   354,   355,    -1,   357,    -1,    -1,   262,    -1,
      -1,    -1,   364,    -1,    -1,    -1,    -1,   282,    -1,    -1,
     372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
     392,    -1,    -1,    -1,    -1,    -1,    -1,  3472,    -1,    -1,
    3475,    -1,    -1,   307,   308,  1080,  1081,  1082,  1083,    -1,
      -1,    -1,   327,    -1,   416,    -1,    -1,    -1,  1093,    -1,
      -1,    -1,    -1,    -1,   426,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   348,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   357,   445,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   358,   370,   360,   361,   460,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   381,    -1,    -1,   471,
      -1,    -1,   474,   377,    -1,   477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5568,    -1,   404,
     492,    -1,    -1,    -1,    -1,    -1,  5672,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   413,
     414,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   433,   434,
      -1,    -1,   437,    -1,   439,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5726,   466,   467,    -1,    -1,   459,    -1,   472,   473,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   489,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   510,   500,    -1,    -1,  1274,
      -1,    -1,    -1,    -1,   606,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   532,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   635,    -1,    -1,  5812,   639,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   657,    -1,    -1,   562,   563,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   670,    -1,
      -1,   586,    -1,    -1,   578,   579,  3751,  3752,    -1,    -1,
      -1,  3756,    -1,    -1,    -1,    -1,   601,    -1,    -1,    -1,
    3765,   693,    -1,    -1,   696,   610,    -1,    -1,   613,   614,
      -1,    -1,    -1,  3778,    -1,  3780,    -1,  3782,    -1,  3784,
      -1,    -1,    -1,   628,    -1,    -1,   620,    -1,    -1,    -1,
      -1,    -1,    -1,  3798,    -1,    -1,    -1,   729,    -1,  3804,
      -1,    -1,    -1,    -1,    -1,    -1,   738,    -1,    -1,    -1,
      -1,    -1,  3817,  3818,    -1,    -1,    -1,  3822,    -1,  3824,
     665,  3826,    -1,    -1,    -1,    -1,  3831,    -1,    -1,   674,
      -1,    -1,    -1,   765,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1454,
     695,    -1,   697,    -1,    -1,    -1,   788,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3872,    -1,    -1,
      -1,  3876,    -1,    -1,    -1,    -1,    -1,    -1,  3883,    -1,
      -1,    -1,    -1,   717,    -1,    -1,   720,    -1,    -1,   723,
      -1,  5997,  5998,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   748,    -1,    -1,    -1,    -1,    -1,    -1,
     755,    -1,    -1,   747,    -1,  3920,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1530,    -1,  1532,    -1,    -1,
      -1,    -1,    -1,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1578,  1579,    -1,    -1,    -1,    -1,  1584,
      -1,    -1,    -1,  1588,  1589,  1590,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1598,  1599,    -1,    -1,    -1,    -1,  1604,
      -1,    -1,    -1,  1608,  1609,  1610,    -1,  1612,  1613,  1614,
    4015,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1623,  4024,
    1625,    -1,    -1,  1628,  1629,  1630,  1631,    -1,  1633,    -1,
    1635,  1636,    -1,  4038,    -1,  4040,  4041,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1649,  1650,  1651,  1652,  1653,    -1,
    1655,  1656,  1657,  1658,  1659,  1660,    -1,  1662,  1663,    -1,
    1665,  1666,    -1,  1668,  1669,    -1,    -1,  1672,  1673,    -1,
    1675,  1676,    -1,    -1,  1679,    -1,  1681,    -1,    -1,    -1,
    1685,  1686,  1687,    -1,    -1,  1690,  1691,  1692,  1693,    -1,
    1695,    -1,    -1,    -1,     5,    -1,    -1,  1702,    -1,    -1,
      18,    19,    20,  1708,  1709,  1710,  1711,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1719,  1720,    -1,  1722,  1723,    -1,
      -1,  1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,
    1735,  1736,  1737,  1738,    -1,    -1,  1741,    48,    49,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    66,    -1,    68,  4163,    70,
      -1,    72,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    80,
      -1,  1776,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     101,    -1,   103,   104,    -1,    -1,    -1,    -1,    -1,   110,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   127,    -1,    -1,    -1,
     131,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,    -1,
     141,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4243,   150,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     161,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     171,    -1,    -1,   174,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4284,
    4285,    -1,  4287,    -1,    -1,    -1,    -1,    -1,  1893,    -1,
    1895,    -1,    -1,    -1,   205,  4300,  4301,  4302,   216,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   217,   218,    -1,    -1,
      -1,    -1,    -1,  6419,    -1,    -1,    -1,   228,   229,    -1,
      -1,  1926,  4327,  4328,    -1,    -1,    -1,    -1,    -1,   240,
     241,   242,    -1,   244,    -1,    -1,    -1,    -1,   249,    -1,
      -1,    -1,    -1,    -1,   255,    -1,  4351,    -1,   259,   260,
     261,    -1,    -1,    -1,    -1,   273,   274,   275,  4363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4372,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   293,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,    -1,   299,    -1,
      -1,    -1,    -1,    -1,    -1,   306,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,   316,    -1,    -1,  2013,    -1,
      -1,    -1,    -1,    -1,    -1,  4420,    -1,    -1,    -1,  4424,
      -1,   332,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   350,    -1,   352,    -1,  2041,    -1,    -1,    -1,
      -1,  4446,    -1,   354,   355,    -1,   357,    -1,    -1,    -1,
      -1,    -1,    -1,   364,   372,    -1,    -1,    -1,    -1,    -1,
      -1,   372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   390,    -1,    -1,    -1,  2081,    -1,    -1,   397,
      -1,   392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   412,    -1,    -1,    -1,    -1,    -1,
      -1,   419,    -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   426,   434,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   445,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   460,
      -1,    -1,    -1,    -1,    -1,    -1,  2161,    -1,    -1,    -1,
     471,    -1,    -1,   474,    -1,    -1,   477,    -1,    -1,    -1,
      -1,    -1,    -1,   491,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   492,    -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2204,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2212,  2213,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   539,    -1,  4628,  4629,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   552,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   591,    -1,    -1,    -1,    -1,    -1,   597,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   606,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   621,    -1,  2310,  2311,  2312,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   635,    -1,    -1,    -1,   639,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   655,   649,    -1,
      -1,    -1,    -1,    -1,   662,    -1,   657,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   670,
    4765,    -1,    -1,  4768,    -1,  2370,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,     5,    -1,    -1,    -1,    -1,    -1,   697,
      -1,    -1,   693,  2388,    -1,   696,    -1,  2392,  2393,    -1,
    2395,  2396,    -1,    -1,   712,   713,    -1,    -1,    -1,  2404,
      -1,  2406,    -1,    -1,    -1,    -1,    -1,   725,    -1,    -1,
      -1,    -1,    -1,    -1,  4819,    -1,    48,    49,   729,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   738,    -1,    -1,
      -1,    -1,  2437,  4838,    66,    -1,    -1,    -1,    70,    -1,
      72,    -1,    -1,    -1,   762,    -1,    -1,    -1,    80,    -1,
      -1,    -1,    -1,    -1,   765,    -1,    -1,    -1,  2463,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   101,
      -1,   103,   104,    -1,    -1,    -1,    -1,   788,   110,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4896,    -1,    -1,  2499,    -1,    -1,    -1,    -1,   131,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2516,    -1,    -1,    11,    -1,    13,    -1,   150,    -1,
      -1,    18,    19,    20,    -1,    -1,    -1,    -1,    -1,   161,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   171,
      -1,    -1,   174,    -1,    -1,    -1,    -1,    -1,  2553,    -1,
      -1,    -1,    -1,    -1,    -1,  2560,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   205,    71,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   217,   218,    -1,    -1,  4994,
      -1,  4996,    -1,    -1,    -1,    -1,   228,   229,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,   240,   241,
      -1,    -1,   244,    -1,    -1,    -1,    -1,   249,    -1,    -1,
      -1,    -1,    -1,   255,    -1,    -1,    -1,   259,   260,   261,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2663,    -1,
      -1,    -1,    -1,   295,    -1,   297,    -1,   299,    -1,    -1,
     167,    -1,    -1,    -1,   306,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   316,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2697,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     332,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2716,    -1,    -1,    -1,  5120,    -1,    -1,    -1,   216,
      -1,    -1,   354,    -1,    -1,   357,    -1,    -1,    -1,    -1,
      -1,    -1,   364,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     392,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   273,   274,   275,    -1,
      -1,    -1,    -1,    -1,   416,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   426,    -1,   293,    -1,    -1,    -1,
      -1,  5206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   445,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5229,    -1,    -1,    -1,   460,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   471,
      -1,    -1,   474,    -1,    -1,   477,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   350,    -1,   352,    -1,    -1,    -1,    -1,
     492,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   370,    -1,   372,    -1,    -1,    -1,    -1,
      -1,  2886,    -1,    -1,    -1,  2890,    -1,    -1,  2893,    -1,
      -1,    -1,    -1,   390,    -1,    -1,    -1,  2902,    -1,    -1,
     397,    -1,    -1,    -1,    -1,    -1,  2911,    -1,  2913,  2914,
      -1,  2916,  2917,  2918,  2919,   412,  2921,    -1,  2923,  2924,
      -1,  2926,   419,    -1,    -1,    -1,    -1,    -1,    -1,  2934,
    2935,    -1,    -1,    -1,  2939,  2940,  2941,   434,    -1,    -1,
      -1,    -1,    -1,    -1,  2949,  2950,  2951,    -1,  2953,    -1,
    2955,    -1,  2957,    -1,  2959,    -1,  2961,    -1,    -1,    -1,
      -1,  2966,  2967,    -1,  2969,  2970,  2971,    -1,    -1,    -1,
    2975,    -1,    -1,  2978,   606,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2987,    -1,    -1,  2990,    -1,  2992,  2993,  2994,
      -1,    -1,  2997,    -1,   491,    -1,    -1,    -1,    18,    19,
      20,    -1,    -1,   635,   501,    -1,    -1,   639,    -1,    -1,
      -1,    -1,    -1,    -1,  3019,    -1,  3021,   649,    -1,  3024,
      -1,    -1,    -1,    -1,    -1,   657,    46,    -1,    48,  3034,
    3035,  3036,  3037,    -1,  3039,    -1,    -1,    -1,   670,  3044,
      -1,    -1,   539,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      70,    -1,    -1,    -1,    -1,   552,    -1,    -1,    78,    -1,
      -1,   693,    -1,    -1,   696,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,   668,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     110,    -1,    -1,    -1,   591,    -1,    -1,   729,    -1,  3104,
     597,    -1,    -1,    -1,    -1,    -1,   738,    -1,    -1,    -1,
      -1,    -1,  5517,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   621,   145,    -1,   713,    -1,    -1,
      -1,  5536,    -1,   765,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3157,    -1,   174,  5560,   788,    -1,   655,    -1,
      -1,    -1,    -1,  5568,    -1,   662,    -1,    -1,    -1,  5574,
      -1,    -1,    -1,  3178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5591,   207,    -1,    -1,
      -1,    18,    19,    20,    -1,    -1,   216,    -1,    -1,    -1,
     697,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   712,   713,    -1,    -1,    -1,
      -1,   241,    -1,    -1,    -1,    -1,    -1,    -1,   725,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3248,    71,    -1,    73,    -1,    -1,    -1,
      -1,    -1,    -1,   273,   274,   275,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,  3271,    -1,    -1,    -1,
      -1,    -1,    99,   293,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   145,    -1,
      -1,    -1,   342,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     350,    -1,   352,    -1,  5739,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3355,    -1,   372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     390,    -1,    -1,    -1,    -1,    -1,    -1,   397,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   216,
      -1,   977,   412,    -1,    -1,   981,    -1,    -1,    -1,   419,
      -1,    -1,    -1,   423,   666,    -1,    -1,    -1,    -1,    -1,
     430,    -1,    -1,    -1,   434,    -1,    -1,    -1,  1004,    -1,
     682,    -1,    -1,    -1,    -1,    -1,   688,    -1,  1014,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   463,    -1,    -1,   273,   274,   275,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   293,  3472,    -1,    -1,
    3475,   491,    -1,    -1,    -1,  5880,    -1,    -1,    -1,    -1,
      -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1080,  1081,  1082,  1083,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1093,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   539,
      -1,    -1,    -1,   350,    -1,   352,    -1,    -1,    -1,    -1,
      -1,    -1,   552,    -1,   554,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   370,    -1,   372,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   390,    -1,    -1,    -1,    -1,    -1,  5974,
     397,   591,    -1,    -1,    -1,    -1,    -1,   597,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   412,    -1,    -1,    -1,    -1,
      -1,    -1,   419,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   621,    -1,    -1,    -1,    -1,    -1,   434,  6013,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   655,    -1,    -1,    -1,    -1,
      -1,    -1,   662,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   913,    -1,   915,    -1,   917,   918,    -1,    -1,    -1,
      -1,    -1,   924,    -1,   491,   927,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,    -1,    -1,   697,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1274,    -1,
      -1,    -1,   712,   713,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   725,  6111,    -1,    -1,    -1,
      -1,    -1,   539,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   552,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   762,    -1,    -1,    -1,  3751,  3752,    -1,    -1,
      -1,  3756,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6166,    -1,    -1,   591,    -1,    -1,    -1,    -1,    -1,
     597,    -1,    -1,  3778,    -1,  3780,    -1,  3782,    -1,  3784,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3798,   621,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3817,  3818,    -1,    -1,    -1,  3822,    -1,  3824,
      -1,  3826,    -1,    -1,    -1,    -1,  3831,    -1,   655,    -1,
      -1,    -1,    -1,    -1,    -1,   662,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1454,    -1,
     697,  3876,    -1,    -1,    -1,    -1,    -1,    -1,  3883,    -1,
      -1,    -1,    -1,    -1,    -1,   712,   713,    -1,  1150,    -1,
      -1,  6296,    -1,    -1,    -1,  6300,    -1,    -1,   725,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3920,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   762,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1530,    -1,  1532,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1578,  1579,    -1,    -1,    -1,    -1,  1584,    -1,
      -1,    -1,  1588,  1589,  1590,    -1,    -1,    -1,    -1,    -1,
    4015,    -1,  1598,  1599,    -1,  1277,    -1,    -1,  1604,  4024,
    6425,    -1,  1608,  1609,  1610,    -1,  1612,  1613,  1614,    -1,
      -1,    -1,    -1,  4038,    -1,    -1,  4041,  1623,    -1,  1625,
      -1,    -1,  1628,  1629,  1630,  1631,    -1,  1633,    -1,  1635,
    1636,    -1,    -1,    -1,    -1,    -1,    -1,   668,    -1,    -1,
      -1,    -1,    -1,  1649,  1650,  1651,  1652,  1653,    -1,  1655,
    1656,  1657,  1658,  1659,  1660,    -1,  1662,  1663,    -1,  1665,
    1666,    -1,  1668,  1669,    -1,    -1,  1672,  1673,    -1,  1675,
    1676,    -1,    -1,  1679,    -1,  1681,    -1,    -1,    -1,  1685,
    1686,  1687,    -1,    -1,  1690,  1691,  1692,  1693,    -1,  1695,
      -1,    -1,    -1,    -1,    -1,    -1,  1702,    -1,    -1,    -1,
      -1,    -1,  1708,  1709,  1710,  1711,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1719,  1720,    -1,  1722,  1723,    -1,    -1,
    1726,  1727,  1728,  1729,  1730,  1731,  1732,  1733,  1734,  1735,
    1736,  1737,  1738,    -1,    -1,  1741,    -1,    -1,  4163,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1776,    -1,    -1,  1455,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4243,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4284,
    4285,    -1,  4287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4300,  4301,  4302,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1893,    -1,  1895,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4327,  4328,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    1926,    -1,    -1,    -1,    -1,    -1,  4351,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4363,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4372,    -1,    -1,
     981,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1004,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1014,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4420,    -1,    -1,    -1,  4424,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2013,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2041,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1083,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2081,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2161,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2204,    -1,
      -1,    -1,    -1,  4628,  4629,    -1,  2212,  2213,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1274,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2266,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2310,  2311,  2312,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4765,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2370,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2388,    -1,    -1,    -1,  2392,  2393,    -1,  2395,
    2396,    -1,    -1,    -1,  4819,    -1,    -1,    -1,  2404,    -1,
    2406,    -1,    -1,    -1,    -1,  2087,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  1454,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2437,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2125,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2463,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4896,    -1,    -1,    -1,    -1,  2158,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2171,
      -1,    -1,    -1,  2499,    -1,    -1,    -1,    -1,    -1,  1530,
      -1,  1532,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2516,    -1,    -1,  2195,  2196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2553,    -1,    -1,
      -1,    -1,    -1,  1584,  2560,    -1,    -1,  1588,    -1,  1590,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1598,  1599,  4994,
      -1,  4996,    -1,  1604,    -1,    -1,    -1,  1608,  1609,  1610,
      -1,  1612,  1613,  1614,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1623,    -1,  1625,    -1,    -1,  1628,  1629,  1630,
    1631,    -1,    -1,    -1,  1635,  1636,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1649,  1650,
    1651,  1652,  1653,    -1,  1655,  1656,  1657,  1658,  1659,    -1,
      -1,  1662,  1663,    -1,  1665,  1666,    -1,  1668,  1669,    -1,
      -1,    -1,  1673,    -1,  1675,  1676,    -1,    -1,  1679,    -1,
    1681,    -1,    -1,    -1,  1685,  1686,  1687,  2663,    -1,  1690,
      -1,  1692,  1693,    -1,  1695,    -1,    -1,    -1,    -1,    -1,
      -1,  1702,    -1,    -1,    -1,    -1,    -1,  1708,  1709,  1710,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2697,    -1,    -1,    -1,  5120,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2716,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1776,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5206,    -1,    -1,    -1,  2467,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5229,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1893,    -1,  1895,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2886,    -1,    -1,  2565,  2890,    -1,    -1,  2893,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1926,  2902,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2911,    -1,  2913,  2914,    -1,
    2916,  2917,  2918,  2919,    -1,  2921,    -1,  2923,  2924,    -1,
    2926,  2603,    -1,    -1,    -1,    -1,    -1,    -1,  2934,  2935,
      -1,    -1,    -1,  2939,  2940,  2941,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2949,  2950,  2951,    -1,  2953,    -1,  2955,
      -1,  2957,    -1,  2959,    -1,  2961,    -1,    -1,    -1,    -1,
    2966,  2967,    -1,  2969,  2970,  2971,    -1,    -1,    -1,  2975,
      -1,    -1,  2978,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2987,  2013,    -1,  2990,    -1,  2992,  2993,  2994,    -1,
      -1,  2997,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2041,    -1,    -1,  3019,    -1,  3021,    -1,    -1,  3024,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3034,  3035,
    3036,  3037,    -1,  3039,    -1,    -1,    -1,    -1,  3044,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2081,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2740,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2757,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5517,    -1,    -1,    -1,    -1,    -1,  3104,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5536,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2161,    -1,    -1,    -1,  2816,  5560,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2830,  5574,
      -1,  3157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5591,    -1,    -1,    -1,
      -1,    -1,  3178,  2204,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2212,  2213,    -1,    -1,    -1,    -1,    -1,  2870,  2871,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2880,  2881,
    2882,    -1,    -1,  2885,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2897,    -1,    -1,    -1,  2901,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2266,    -1,    -1,    -1,    -1,
      -1,    -1,  3248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3271,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2310,
    2311,  2312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5739,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3355,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2388,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2404,    -1,  2406,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2437,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2463,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5880,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3472,    -1,  2499,  3475,
      -1,    -1,    -1,    -1,    -1,    -1,  3158,    -1,    -1,    -1,
      -1,    -1,  3164,    -1,    -1,  2516,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2553,    -1,    -1,    -1,    -1,    -1,    -1,  2560,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5974,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6013,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6025,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2663,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  2697,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2716,  6111,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  6166,    -1,    -1,    -1,  3751,  3752,    -1,    -1,    -1,
    3756,    -1,    -1,    -1,    -1,  3437,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  3778,    -1,  3780,    -1,  3782,    -1,  3784,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3469,    -1,    -1,
      -1,    -1,  3798,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3817,  3818,    -1,    -1,    -1,  3822,    -1,  3824,    -1,
    3826,    -1,    -1,    -1,    -1,  3831,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  2886,    -1,    -1,    -1,  2890,
      -1,    -1,  2893,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3876,  6296,    -1,    -1,    -1,  6300,    -1,  3883,    -1,    -1,
    2911,    -1,    -1,    -1,    -1,  2916,  2917,  2918,  2919,    -1,
    2921,    -1,  2923,  2924,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2934,  2935,    -1,    -1,    -1,  2939,  2940,
    2941,    -1,    -1,    -1,  3920,    -1,    -1,    -1,  2949,  2950,
    2951,    -1,  2953,    -1,  2955,    -1,  2957,    -1,  2959,    -1,
    2961,    -1,    -1,    -1,    -1,  2966,  2967,    -1,  2969,    -1,
    2971,    -1,    -1,    -1,  2975,    -1,    -1,  2978,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2990,
      -1,  2992,  2993,  2994,    -1,    -1,  2997,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3024,    -1,    -1,    -1,    -1,    -1,    -1,
    6425,    -1,    -1,    -1,  3035,  3036,    -1,    -1,  3039,  4015,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4024,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4038,    -1,    -1,  4041,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3104,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4163,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4243,    -1,    -1,
    3271,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4284,  4285,
      -1,  4287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4300,  4301,  4302,    -1,    -1,    -1,
      -1,    -1,    -1,  3985,  3986,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4327,  4328,    -1,  3355,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4351,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4363,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4372,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4080,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4420,    -1,    -1,    -1,  4424,    -1,
    4102,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4116,    -1,    -1,    -1,    -1,    -1,
      -1,  3472,    -1,    -1,  3475,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4173,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4246,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4628,  4629,    -1,    -1,    -1,    -1,    -1,    -1,
    4312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3751,  3752,    -1,    -1,    -1,  3756,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3778,    -1,  3780,
      -1,  3782,    -1,  3784,    -1,    -1,    -1,    -1,    -1,  4765,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3798,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3817,  3818,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    3831,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4819,    -1,    -1,    -1,  4499,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3876,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3920,
    4896,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4615,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4015,    -1,    -1,    -1,  4994,    -1,
    4996,    -1,    -1,  4024,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4038,    -1,    -1,
    4041,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4731,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4748,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5120,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4163,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5206,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4243,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5229,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4284,  4285,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4300,
    4301,  4302,    -1,    -1,  4956,    -1,    -1,  4959,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4972,    -1,    -1,    -1,    -1,    -1,  4327,  4328,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4372,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4420,
      -1,    -1,    -1,  4424,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5089,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5160,    -1,
      -1,    -1,  5164,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  5517,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5536,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5560,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5574,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5591,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  4628,  4629,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5297,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5357,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5369,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5385,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5394,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5739,  4765,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4819,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5525,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4896,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5880,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4994,    -1,  4996,    -1,    -1,  5974,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5672,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6013,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6025,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5726,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5784,    -1,    -1,  6111,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5796,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5811,
    5812,    -1,    -1,  5815,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    6166,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5206,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5229,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5928,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  5936,    -1,    -1,    -1,    -1,    -1,
    5942,  5943,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5965,    -1,    -1,    -1,    -1,    -1,    -1,
    6296,    -1,    -1,    -1,  6300,    -1,    -1,    -1,    -1,    -1,
    5982,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5997,  5998,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6067,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6079,    -1,    -1,
      -1,  6083,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6425,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5517,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5536,    -1,    -1,    -1,  6191,
    6192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5574,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5591,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  6274,    -1,  6276,  6277,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6316,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  6351,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6377,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  6419,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5880,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,     3,
      -1,    -1,    -1,    -1,     8,     9,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  6025,    19,    20,    -1,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
    6111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,   255,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  6296,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,   306,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,   316,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,  6425,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    64,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,   163,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     289,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    47,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
     204,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,   143,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,   128,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,   128,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,   143,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,   197,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,   197,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,   183,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    57,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,   782,     8,     9,    -1,    -1,    -1,   788,
      -1,    -1,    -1,   792,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    40,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    58,    59,    60,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    68,    69,    -1,    71,    -1,    -1,
      -1,    -1,    -1,    -1,    78,    79,    -1,    -1,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,   102,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,   120,   121,   122,    -1,
     124,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   132,   133,
     134,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,   150,    -1,    -1,   153,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   162,    -1,
     164,    -1,   166,    -1,    -1,    -1,    -1,    -1,   172,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   181,   182,    -1,
     184,    -1,    -1,    -1,   188,   189,    -1,    -1,    -1,   193,
      -1,    -1,   196,    -1,    -1,   199,   200,   201,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,   220,   221,   222,    -1,
     224,    -1,    -1,    -1,    -1,    -1,    -1,   231,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   250,   251,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   269,    -1,    -1,    -1,    -1,
      -1,    -1,   276,   277,    -1,   279,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   301,   302,   303,
      -1,    -1,    -1,    -1,    -1,   309,   310,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   776,   777,     3,    -1,    -1,    -1,   782,     8,
       9,    -1,    -1,    -1,   788,    -1,    -1,    -1,   792,   793,
      19,    20,   796,    22,    23,    24,    25,    26,    27,    28,
      29,    30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,
      59,    60,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      69,    -1,    71,    -1,    -1,    -1,    -1,    -1,    -1,    78,
      79,    -1,    -1,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,   102,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,   120,   121,   122,    -1,   124,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   132,   133,   134,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,   150,    -1,    -1,   153,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   162,    -1,   164,    -1,   166,    -1,    -1,
      -1,    -1,    -1,   172,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   181,   182,    -1,   184,    -1,    -1,    -1,   188,
     189,    -1,    -1,    -1,   193,    -1,    -1,   196,    -1,    -1,
     199,   200,   201,   202,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,   220,   221,   222,    -1,   224,    -1,    -1,    -1,    -1,
      -1,    -1,   231,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   250,   251,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     269,    -1,    -1,    -1,    -1,    -1,    -1,   276,   277,    -1,
     279,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   301,   302,   303,    -1,    -1,    -1,    -1,    -1,
     309,   310,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,   332,   333,   334,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   776,   777,     3,
      -1,    -1,    -1,    -1,     8,    -1,    -1,    -1,    -1,   788,
      -1,    -1,    -1,    -1,   793,    19,    20,   796,    22,    23,
      24,    25,    26,    27,    28,    29,    30,    31,    32,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,   122,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,   202,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   291,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,     3,
     764,   765,   766,   767,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,     3,
     764,   765,   766,   767,     8,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   789,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,     8,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,     8,   764,   765,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   788,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,     8,
     764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    75,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,   145,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     160,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   263,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   312,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   255,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   306,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   316,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,
      -1,   793,    -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,    -1,
     793,    -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   788,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     796,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,   141,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   796,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,   130,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
     141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    -1,   247,   248,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,   365,   366,   367,   368,   369,    -1,
      -1,    -1,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,    -1,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,    -1,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,    -1,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,    -1,   493,   494,   495,   496,   497,   498,   499,   500,
     501,    -1,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,    -1,    -1,   589,    -1,
     591,   592,    -1,   594,   595,   596,   597,    -1,   599,   600,
     601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,    -1,   634,    -1,   636,   637,   638,    -1,   640,
     641,    -1,   643,   644,   645,   646,   647,   648,    -1,   650,
     651,   652,   653,   654,   655,   656,    -1,   658,   659,   660,
      -1,   662,   663,   664,   665,   666,    -1,   668,   669,    -1,
      -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,   680,
      -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,    -1,   694,   695,    -1,   697,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,    -1,   730,
     731,    -1,   733,   734,   735,   736,    -1,    -1,   739,   740,
      -1,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,    -1,   760,
     761,    -1,    -1,   764,    -1,   766,   767,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     791,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    85,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
      -1,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   788,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    71,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    74,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
       3,   764,   765,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,     8,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   252,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,     8,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   252,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,     8,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   252,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,     8,     9,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    28,    -1,    30,    -1,    32,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     778,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    26,    -1,    -1,   778,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      40,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,   197,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
     210,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   266,    -1,   268,    -1,
     270,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,   777,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    21,
     771,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      42,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,   771,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    45,    46,    47,    48,    49,    50,    51,    52,
      53,    54,    55,    56,    57,    58,    59,    60,    61,    62,
      63,    64,    65,    66,    67,    68,    69,    70,    71,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    89,    90,    91,    92,
      93,    94,    95,    96,    97,    98,    99,   100,   101,   102,
     103,   104,   105,   106,   107,   108,   109,   110,   111,   112,
     113,   114,   115,   116,   117,   118,   119,   120,   121,   122,
     123,   124,   125,   126,    -1,   128,   129,   130,   131,   132,
      -1,    -1,   135,   136,   137,   138,   139,   140,   141,   142,
     143,   144,   145,   146,   147,   148,   149,   150,   151,   152,
     153,   154,   155,   156,   157,   158,   159,   160,   161,   162,
     163,   164,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,   182,
     183,   184,   185,   186,   187,   188,   189,   190,   191,   192,
     193,   194,   195,   196,   197,   198,   199,   200,   201,   202,
     203,   204,   205,   206,   207,   208,   209,   210,   211,   212,
     213,   214,   215,   216,   217,   218,   219,   220,   221,   222,
     223,   224,   225,   226,   227,   228,   229,   230,   231,   232,
     233,   234,   235,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   259,   260,   261,   262,
     263,   264,   265,   266,   267,   268,   269,   270,   271,   272,
     273,   274,   275,   276,   277,   278,   279,   280,   281,   282,
     283,   284,   285,   286,   287,   288,   289,   290,   291,   292,
     293,   294,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,   315,   316,   317,   318,   319,   320,   321,   322,
      -1,   324,   325,   326,   327,   328,   329,   330,   331,   332,
     333,   334,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    56,    57,    58,    59,    60,    61,    62,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,    -1,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,   182,   183,
     184,   185,   186,   187,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,   203,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,   235,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,   259,   260,   261,   262,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,   285,   286,   287,   288,   289,   290,   291,   292,   293,
     294,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
      -1,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,   578,   579,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,    -1,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
      -1,   665,   666,   667,   668,   669,   670,    -1,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,    -1,   128,   129,   130,   131,   132,    -1,    -1,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,    -1,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,    -1,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,    -1,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,    -1,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,    -1,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,    -1,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,    -1,
     665,   666,   667,   668,   669,   670,    -1,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,    -1,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,
      46,    47,    48,    49,    50,    51,    52,    53,    54,    55,
      56,    57,    58,    59,    60,    61,    62,    63,    64,    65,
      66,    67,    68,    69,    70,    71,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    89,    90,    91,    92,    93,    94,    95,
      96,    97,    98,    99,   100,   101,   102,   103,   104,   105,
     106,   107,   108,   109,   110,   111,   112,   113,   114,   115,
     116,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,    -1,   128,   129,   130,   131,   132,    -1,    -1,   135,
     136,   137,   138,   139,   140,   141,   142,   143,   144,   145,
     146,   147,   148,   149,   150,   151,   152,   153,   154,   155,
     156,   157,   158,   159,   160,   161,   162,   163,   164,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,   182,   183,   184,   185,
     186,   187,   188,   189,   190,   191,   192,   193,   194,   195,
     196,   197,   198,   199,   200,   201,   202,   203,   204,   205,
     206,   207,   208,   209,   210,   211,   212,   213,   214,   215,
     216,   217,   218,   219,   220,   221,   222,   223,   224,   225,
     226,   227,   228,   229,   230,   231,   232,   233,   234,   235,
     236,   237,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,   249,   250,   251,   252,   253,   254,   255,
     256,   257,   258,   259,   260,   261,   262,   263,   264,   265,
     266,   267,   268,   269,   270,   271,   272,   273,   274,   275,
     276,   277,   278,   279,   280,   281,   282,   283,   284,   285,
     286,   287,   288,   289,   290,   291,   292,   293,   294,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     316,   317,   318,   319,   320,   321,   322,    -1,   324,   325,
     326,   327,   328,   329,   330,   331,   332,   333,   334,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
      -1,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,    -1,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,    -1,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,    -1,   578,   579,   580,   581,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,    -1,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,    -1,   665,
     666,   667,   668,   669,   670,    -1,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
      -1,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,    -1,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    45,    46,
      47,    48,    49,    50,    51,    52,    53,    54,    55,    56,
      57,    58,    59,    60,    61,    62,    63,    64,    65,    66,
      67,    68,    69,    70,    71,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    89,    90,    91,    92,    93,    94,    95,    96,
      97,    98,    99,   100,   101,   102,   103,   104,   105,   106,
     107,   108,   109,   110,   111,   112,   113,   114,   115,   116,
     117,   118,   119,   120,   121,   122,   123,   124,   125,   126,
      -1,   128,   129,   130,   131,   132,    -1,    -1,   135,   136,
     137,   138,   139,   140,   141,   142,   143,   144,   145,   146,
     147,   148,   149,   150,   151,   152,   153,   154,   155,   156,
     157,   158,   159,   160,   161,   162,   163,   164,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,   182,   183,   184,   185,   186,
     187,   188,   189,   190,   191,   192,   193,   194,   195,   196,
     197,   198,   199,   200,   201,   202,   203,   204,   205,   206,
     207,   208,   209,   210,   211,   212,   213,   214,   215,   216,
     217,   218,   219,   220,   221,   222,   223,   224,   225,   226,
     227,   228,   229,   230,   231,   232,   233,   234,   235,   236,
     237,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,   249,   250,   251,   252,   253,   254,   255,   256,
     257,   258,   259,   260,   261,   262,   263,   264,   265,   266,
     267,   268,   269,   270,   271,   272,   273,   274,   275,   276,
     277,   278,   279,   280,   281,   282,   283,   284,   285,   286,
     287,   288,   289,   290,   291,   292,   293,   294,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   315,   316,
     317,   318,   319,   320,   321,   322,    -1,   324,   325,   326,
     327,   328,   329,   330,   331,   332,   333,   334,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,    -1,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
      -1,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,    -1,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
      -1,   578,   579,   580,   581,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,    -1,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,    -1,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,    -1,   665,   666,
     667,   668,   669,   670,    -1,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,    -1,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,
      48,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    80,    -1,    -1,    -1,    84,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   131,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,   145,    -1,    -1,
      -1,    -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,   237,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   255,    -1,    -1,
      -1,   259,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,   297,
     298,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    48,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    80,    -1,    -1,    -1,    84,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   101,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   110,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   131,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,   145,    -1,    -1,    -1,
      -1,   150,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   174,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,   237,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   255,    -1,    -1,    -1,
     259,   260,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   290,    -1,    -1,    -1,    -1,    -1,    -1,   297,   298,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    24,    25,    26,    -1,    28,    -1,
      30,    31,    32,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    84,    85,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    21,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      23,    -1,    -1,    26,    27,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    21,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    21,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      57,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    85,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    21,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    84,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,   332,   333,   334,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    76,    77,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,    -1,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,   447,   448,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    21,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    57,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,   148,    -1,    -1,   151,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,   213,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   259,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   268,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    21,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   128,    -1,    -1,    -1,    -1,    -1,    -1,   135,   136,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    53,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   268,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   128,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    30,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    63,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    99,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,   226,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,   472,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,   665,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    99,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,   226,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,   758,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,   472,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,   665,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,    -1,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,    -1,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,    -1,    -1,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,    -1,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,    -1,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,    -1,   764,
     765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,
     196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,   325,
     326,   327,   328,   329,   330,   331,    -1,    -1,    -1,   335,
     336,   337,   338,   339,   340,   341,   342,   343,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,   355,
      -1,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,   371,   372,   373,   374,   375,
     376,   377,   378,   379,   380,   381,   382,   383,   384,   385,
     386,   387,    -1,   389,   390,   391,   392,   393,   394,   395,
     396,   397,   398,   399,   400,   401,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,   414,   415,
     416,   417,    -1,   419,   420,   421,   422,   423,   424,   425,
     426,   427,   428,   429,   430,   431,   432,   433,   434,   435,
     436,   437,   438,   439,   440,   441,   442,   443,   444,   445,
     446,    -1,    -1,   449,   450,   451,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,    -1,   464,   465,
     466,   467,   468,   469,   470,   471,   472,   473,   474,   475,
     476,   477,    -1,   479,   480,   481,   482,   483,   484,   485,
     486,   487,   488,   489,   490,   491,   492,   493,   494,   495,
     496,   497,   498,   499,   500,   501,   502,   503,   504,   505,
     506,   507,   508,   509,   510,   511,   512,   513,   514,   515,
     516,   517,   518,   519,   520,   521,   522,   523,   524,   525,
     526,   527,   528,   529,   530,   531,   532,   533,   534,   535,
      -1,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,    -1,   582,   583,   584,   585,
     586,   587,   588,   589,   590,   591,   592,   593,   594,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   628,   629,   630,   631,   632,   633,   634,   635,
     636,   637,   638,   639,   640,   641,   642,   643,   644,   645,
     646,   647,   648,   649,   650,   651,   652,   653,   654,   655,
     656,   657,   658,   659,   660,   661,   662,   663,   664,   665,
     666,   667,   668,   669,   670,   671,   672,   673,   674,   675,
     676,   677,   678,   679,   680,   681,   682,   683,    -1,    -1,
     686,   687,    -1,   689,   690,   691,   692,   693,   694,   695,
     696,   697,   698,   699,   700,   701,   702,   703,   704,   705,
     706,   707,   708,   709,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   744,   745,
     746,   747,   748,   749,   750,   751,   752,   753,   754,   755,
     756,   757,   758,   759,   760,   761,   762,    -1,   764,   765,
     766,   767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,   326,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,   355,    -1,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,   371,   372,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,   383,   384,   385,   386,
     387,    -1,   389,   390,   391,   392,   393,   394,   395,   396,
     397,   398,   399,   400,   401,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,   416,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,   426,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,   443,   444,   445,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,    -1,   464,   465,   466,
     467,   468,   469,   470,   471,   472,   473,   474,   475,   476,
     477,    -1,   479,   480,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,   492,   493,   494,   495,   496,
     497,   498,   499,   500,   501,   502,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,   572,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,   693,   694,   695,   696,
     697,   698,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,   720,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,   758,   759,   760,   761,   762,    -1,   764,   765,   766,
     767,    19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   320,   321,   322,   323,   324,   325,   326,   327,
     328,   329,   330,   331,    -1,    -1,    -1,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,    -1,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,   371,   372,   373,   374,   375,   376,   377,
     378,   379,   380,   381,   382,   383,   384,   385,   386,   387,
      -1,   389,   390,   391,   392,   393,   394,   395,   396,   397,
     398,   399,   400,   401,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,   414,   415,   416,   417,
      -1,   419,   420,   421,   422,   423,   424,   425,   426,   427,
     428,   429,   430,   431,   432,   433,   434,   435,   436,   437,
     438,   439,   440,   441,   442,   443,   444,   445,   446,    -1,
      -1,   449,   450,   451,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,    -1,   464,   465,   466,   467,
     468,   469,   470,   471,   472,   473,   474,   475,   476,   477,
      -1,   479,   480,   481,   482,   483,   484,   485,   486,   487,
     488,   489,   490,   491,   492,   493,   494,   495,   496,   497,
     498,   499,   500,   501,   502,   503,   504,   505,   506,   507,
     508,   509,   510,   511,   512,   513,   514,   515,   516,   517,
     518,   519,   520,   521,   522,   523,   524,   525,   526,   527,
     528,   529,   530,   531,   532,   533,   534,   535,    -1,   537,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
     548,   549,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,   565,   566,   567,
     568,   569,   570,   571,   572,   573,   574,   575,   576,   577,
     578,   579,   580,    -1,   582,   583,   584,   585,   586,   587,
     588,   589,   590,   591,   592,   593,   594,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     628,   629,   630,   631,   632,   633,   634,   635,   636,   637,
     638,   639,   640,   641,   642,   643,   644,   645,   646,   647,
     648,   649,   650,   651,   652,   653,   654,   655,   656,   657,
     658,   659,   660,   661,   662,   663,   664,   665,   666,   667,
     668,   669,   670,   671,   672,   673,   674,   675,   676,   677,
     678,   679,   680,   681,   682,   683,    -1,    -1,   686,   687,
      -1,   689,   690,   691,   692,   693,   694,   695,   696,   697,
     698,   699,   700,   701,   702,   703,   704,   705,   706,   707,
     708,   709,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,   720,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,   744,   745,   746,   747,
     748,   749,   750,   751,   752,   753,   754,   755,   756,   757,
     758,   759,   760,   761,   762,    -1,   764,   765,   766,   767,
      19,    20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    31,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,   326,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   355,    -1,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,    -1,
     389,   390,   391,   392,   393,   394,   395,   396,   397,   398,
     399,   400,   401,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,   416,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,   426,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,   443,   444,   445,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,    -1,   464,   465,   466,   467,   468,
     469,   470,   471,    -1,   473,   474,   475,   476,   477,    -1,
     479,   480,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,   492,   493,   494,   495,   496,   497,   498,
     499,   500,   501,   502,   503,   504,   505,   506,   507,   508,
     509,    -1,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,   572,   573,   574,   575,   576,   577,   578,
     579,   580,   581,   582,   583,   584,   585,   586,   587,   588,
     589,   590,   591,   592,   593,   594,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,   633,   634,   635,   636,   637,   638,
     639,   640,   641,   642,   643,   644,   645,   646,   647,   648,
     649,   650,   651,   652,   653,   654,   655,   656,   657,   658,
     659,   660,   661,   662,   663,   664,    -1,   666,   667,   668,
     669,   670,   671,   672,   673,   674,   675,   676,   677,   678,
     679,   680,   681,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,   693,   694,   695,   696,   697,   698,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,   758,
     759,   760,   761,   762,    -1,   764,   765,   766,   767,    19,
      20,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,
      -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     320,   321,   322,   323,   324,   325,   326,   327,   328,   329,
     330,   331,    -1,    -1,    -1,   335,   336,   337,   338,   339,
     340,   341,   342,   343,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,   355,    -1,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,   371,   372,   373,   374,   375,   376,   377,   378,   379,
     380,   381,   382,   383,   384,   385,   386,   387,    -1,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,    -1,   419,
     420,   421,   422,   423,   424,   425,   426,   427,   428,   429,
     430,   431,   432,   433,   434,   435,   436,   437,   438,   439,
     440,   441,   442,   443,   444,   445,   446,    -1,    -1,   449,
     450,   451,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,    -1,   464,   465,   466,   467,   468,   469,
     470,   471,   472,   473,   474,   475,   476,   477,    -1,   479,
     480,   481,   482,   483,   484,   485,   486,   487,   488,   489,
     490,   491,   492,   493,   494,   495,   496,   497,   498,   499,
     500,   501,   502,   503,   504,   505,   506,   507,   508,   509,
     510,   511,   512,   513,   514,   515,   516,   517,   518,   519,
     520,   521,   522,   523,   524,   525,   526,   527,   528,   529,
     530,   531,   532,   533,   534,   535,    -1,   537,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,   548,   549,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,   565,   566,   567,   568,   569,
     570,   571,   572,   573,   574,   575,   576,   577,   578,   579,
     580,    -1,   582,   583,   584,   585,   586,   587,   588,   589,
     590,   591,   592,   593,   594,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   628,   629,
     630,   631,   632,   633,   634,   635,   636,   637,   638,   639,
     640,   641,   642,   643,   644,   645,   646,   647,   648,   649,
     650,   651,   652,   653,   654,   655,   656,   657,   658,   659,
     660,   661,   662,   663,   664,   665,   666,   667,   668,   669,
     670,   671,   672,   673,   674,   675,   676,   677,   678,   679,
     680,   681,   682,   683,    -1,    -1,   686,   687,    -1,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,    -1,   764,   765,   766,   767,    19,    20,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,   326,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,   355,    -1,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
     371,   372,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,   383,   384,   385,   386,   387,    -1,   389,   390,
     391,   392,   393,   394,   395,   396,   397,   398,   399,   400,
     401,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,   416,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,    -1,   464,   465,   466,   467,   468,   469,   470,
     471,   472,   473,   474,   475,   476,   477,    -1,   479,   480,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,   492,   493,   494,   495,   496,   497,   498,   499,   500,
     501,   502,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,   572,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,   587,   588,   589,   590,
     591,   592,   593,   594,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,   633,   634,   635,   636,   637,   638,   639,   640,
     641,   642,   643,   644,   645,   646,   647,   648,   649,   650,
     651,   652,   653,   654,   655,   656,   657,   658,   659,   660,
     661,   662,   663,   664,   665,   666,   667,   668,   669,   670,
     671,   672,   673,   674,   675,   676,   677,   678,   679,   680,
     681,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,   693,   694,   695,   696,   697,   698,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,   758,   759,   760,
     761,   762,    -1,   764,   765,   766,   767,    19,    20,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,
      -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,
     322,   323,   324,   325,   326,   327,   328,   329,   330,   331,
      -1,    -1,    -1,   335,   336,   337,   338,   339,   340,   341,
     342,   343,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,   355,    -1,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,   371,
     372,   373,   374,   375,   376,   377,   378,   379,   380,   381,
     382,   383,   384,   385,   386,   387,    -1,   389,   390,   391,
     392,   393,   394,   395,   396,   397,   398,   399,   400,   401,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,   414,   415,   416,   417,    -1,   419,   420,   421,
     422,   423,   424,   425,   426,   427,   428,   429,   430,   431,
     432,   433,   434,   435,   436,   437,   438,   439,   440,   441,
     442,   443,   444,   445,   446,    -1,    -1,   449,   450,   451,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,    -1,   464,   465,   466,   467,   468,   469,   470,   471,
     472,   473,   474,   475,   476,   477,    -1,   479,   480,   481,
     482,   483,   484,   485,   486,   487,   488,   489,   490,   491,
     492,   493,   494,   495,   496,   497,   498,   499,   500,   501,
     502,   503,   504,   505,   506,   507,   508,   509,   510,   511,
     512,   513,   514,   515,   516,   517,   518,   519,   520,   521,
     522,   523,   524,   525,   526,   527,   528,   529,   530,   531,
     532,   533,   534,   535,    -1,   537,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,   548,   549,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,   565,   566,   567,   568,   569,   570,   571,
     572,   573,   574,   575,   576,   577,   578,   579,   580,    -1,
     582,   583,   584,   585,   586,   587,   588,   589,   590,   591,
     592,   593,   594,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   628,   629,   630,   631,
     632,   633,   634,   635,   636,   637,   638,   639,   640,   641,
     642,   643,   644,   645,   646,   647,   648,   649,   650,   651,
     652,   653,   654,   655,   656,   657,   658,   659,   660,   661,
     662,   663,   664,   665,   666,   667,   668,   669,   670,   671,
     672,   673,   674,   675,   676,   677,   678,   679,   680,   681,
     682,   683,    -1,    -1,   686,   687,    -1,   689,   690,   691,
     692,   693,   694,   695,   696,   697,   698,   699,   700,   701,
     702,   703,   704,   705,   706,   707,   708,   709,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,   720,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,   744,   745,   746,   747,   748,   749,   750,   751,
     752,   753,   754,   755,   756,   757,    -1,   759,   760,   761,
     762,    -1,   764,   765,   766,   767,    19,    20,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    31,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,   326,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,   355,    -1,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,   371,   372,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
     383,   384,   385,   386,   387,    -1,   389,   390,   391,   392,
     393,   394,   395,   396,   397,   398,   399,   400,   401,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,   416,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,   426,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
     443,   444,   445,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
      -1,   464,   465,   466,   467,   468,   469,   470,   471,    -1,
     473,   474,   475,   476,   477,    -1,   479,   480,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,   492,
     493,   494,   495,   496,   497,   498,   499,   500,   501,   502,
     503,   504,   505,   506,   507,   508,   509,    -1,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,   572,
     573,   574,   575,   576,   577,   578,   579,   580,   581,   582,
     583,   584,   585,   586,   587,   588,   589,   590,   591,   592,
     593,   594,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
     633,   634,   635,   636,   637,   638,   639,   640,   641,   642,
     643,   644,   645,   646,   647,   648,   649,   650,   651,   652,
     653,   654,   655,   656,   657,   658,   659,   660,   661,   662,
     663,   664,    -1,   666,   667,   668,   669,   670,   671,   672,
     673,   674,   675,   676,   677,   678,   679,   680,   681,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
     693,   694,   695,   696,   697,   698,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,   720,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,   758,   759,   760,   761,   762,
      -1,   764,   765,   766,   767,    19,    20,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,
      -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,    -1,    -1,
      -1,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,   376,   377,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,   435,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,    -1,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,   500,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,   577,   578,   579,   580,    -1,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,   653,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
     664,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,   720,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,   746,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,   758,   759,   760,   761,   762,    -1,
     764,   765,   766,   767,    19,    20,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   113,   114,
     115,   116,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,   247,   248,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
     365,   366,   367,   368,   369,    -1,    -1,    -1,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,    -1,    -1,
      -1,    -1,    -1,    -1,   389,    -1,   391,    -1,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,    -1,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
      -1,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,    -1,    -1,    -1,    -1,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
     475,   476,    -1,    -1,   479,    -1,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,    -1,   493,   494,
     495,   496,   497,   498,   499,   500,   501,    -1,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,    -1,    -1,   589,    -1,   591,   592,    -1,   594,
     595,   596,   597,    -1,   599,   600,   601,   602,    -1,    -1,
      -1,    -1,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,    -1,   634,
      -1,   636,   637,   638,    -1,   640,   641,    -1,   643,   644,
     645,   646,   647,   648,    -1,   650,   651,   652,   653,   654,
     655,   656,    -1,   658,   659,   660,    -1,   662,   663,   664,
     665,   666,    -1,   668,   669,    -1,    -1,   672,   673,    -1,
      -1,   676,   677,   678,    -1,   680,    -1,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,    -1,   694,
     695,    -1,   697,    -1,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,    -1,   730,   731,    -1,   733,   734,
     735,   736,    19,    20,   739,   740,    -1,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,    -1,   760,   761,    -1,    -1,   764,
      -1,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   114,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
     127,    -1,    -1,   130,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,   141,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   165,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
     247,   248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   313,    -1,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,   365,   366,
     367,   368,   369,    -1,    -1,    -1,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,    -1,    -1,    -1,    -1,
      -1,    -1,   389,    -1,   391,    -1,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,    -1,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,    -1,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,    -1,    -1,    -1,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,   475,   476,
      -1,    -1,   479,    -1,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,    -1,   493,   494,   495,   496,
     497,   498,   499,   500,   501,    -1,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
      -1,    -1,   589,    -1,   591,   592,    -1,   594,   595,   596,
     597,    -1,   599,   600,   601,   602,    -1,    -1,    -1,    -1,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,    -1,   634,    -1,   636,
     637,   638,    -1,   640,   641,    -1,   643,   644,   645,   646,
     647,   648,    -1,   650,   651,   652,   653,   654,   655,   656,
      -1,   658,   659,   660,    -1,   662,   663,   664,   665,   666,
      -1,   668,   669,    -1,    -1,   672,   673,    -1,    -1,   676,
     677,   678,    -1,   680,    -1,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,    -1,   694,   695,    -1,
     697,    -1,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,    -1,   730,   731,    -1,   733,   734,   735,   736,
      19,    20,   739,   740,    -1,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,    -1,   760,   761,    -1,    -1,   764,    -1,   766,
     767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,   127,    -1,
      -1,   130,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,   247,   248,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,    -1,    -1,   358,
     359,   360,   361,   362,    -1,    -1,   365,   366,   367,   368,
     369,    -1,    -1,    -1,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,
     389,    -1,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,    -1,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,    -1,   446,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,    -1,    -1,    -1,    -1,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,   475,   476,    -1,    -1,
     479,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,    -1,   493,   494,   495,   496,   497,   498,
     499,   500,   501,    -1,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,    -1,    -1,
     589,    -1,   591,   592,    -1,   594,   595,   596,   597,    -1,
     599,   600,   601,   602,    -1,    -1,    -1,    -1,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,    -1,   634,    -1,   636,   637,   638,
      -1,   640,   641,    -1,   643,   644,   645,   646,   647,   648,
      -1,   650,   651,   652,   653,   654,   655,   656,    -1,   658,
     659,   660,    -1,   662,   663,   664,   665,   666,    -1,   668,
     669,    -1,    -1,   672,   673,    -1,    -1,   676,   677,   678,
      -1,   680,    -1,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,    -1,   694,   695,    -1,   697,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
      -1,   730,   731,    -1,   733,   734,   735,   736,    19,    20,
     739,   740,    -1,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
      -1,   760,   761,    -1,    -1,   764,    -1,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,   130,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
     141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    -1,   247,   248,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,   365,   366,   367,   368,   369,    -1,
      -1,    -1,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,    -1,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,    -1,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,    -1,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,    -1,   493,   494,   495,   496,   497,   498,   499,   500,
     501,    -1,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,    -1,    -1,   589,    -1,
     591,   592,    -1,   594,   595,   596,   597,    -1,   599,   600,
     601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,    -1,   634,    -1,   636,   637,   638,    -1,   640,
     641,    -1,   643,   644,   645,   646,   647,   648,    -1,   650,
     651,   652,   653,   654,   655,   656,    -1,   658,   659,   660,
      -1,   662,   663,   664,   665,   666,    -1,   668,   669,    -1,
      -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,   680,
      -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,    -1,   694,   695,    -1,   697,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,    -1,   730,
     731,    -1,   733,   734,   735,   736,    19,    20,   739,   740,
      -1,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,    -1,   760,
     761,    -1,    -1,   764,    -1,   766,   767,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,   127,    -1,    -1,   130,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,   247,   248,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,   365,   366,   367,   368,   369,    -1,    -1,    -1,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
      -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,   431,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,    -1,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,    -1,
      -1,    -1,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,   475,   476,    -1,    -1,   479,    -1,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,    -1,
     493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,    -1,    -1,   589,    -1,   591,   592,
      -1,   594,   595,   596,   597,    -1,   599,   600,   601,   602,
      -1,    -1,    -1,    -1,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
      -1,   634,    -1,   636,   637,   638,    -1,   640,   641,    -1,
     643,   644,   645,   646,   647,   648,    -1,   650,   651,   652,
     653,   654,   655,   656,    -1,   658,   659,   660,    -1,   662,
     663,   664,   665,   666,    -1,   668,   669,    -1,    -1,   672,
     673,    -1,    -1,   676,   677,   678,    -1,   680,    -1,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
      -1,   694,   695,    -1,   697,    -1,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,    -1,   730,   731,    -1,
     733,   734,   735,   736,    19,    20,   739,   740,    -1,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,    -1,   760,   761,    -1,
      -1,   764,    -1,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,   247,   248,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
     365,   366,   367,   368,   369,    -1,    -1,    -1,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,    -1,    -1,
      -1,    -1,    -1,    -1,   389,    -1,   391,    -1,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,    -1,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
      -1,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,    -1,    -1,    -1,    -1,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
     475,   476,    -1,    -1,   479,    -1,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,    -1,   493,   494,
     495,   496,   497,   498,   499,   500,   501,    -1,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,    -1,    -1,   589,    -1,   591,   592,    -1,   594,
     595,   596,   597,    -1,   599,   600,   601,   602,    -1,    -1,
      -1,    -1,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,    -1,   634,
      -1,   636,   637,   638,    -1,   640,   641,    -1,   643,   644,
     645,   646,   647,   648,    -1,   650,   651,   652,   653,   654,
     655,   656,    -1,   658,   659,   660,    -1,   662,   663,   664,
     665,   666,    -1,   668,   669,    -1,    -1,   672,   673,    -1,
      -1,   676,   677,   678,    -1,   680,    -1,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,    -1,   694,
     695,    -1,   697,    -1,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,    -1,   730,   731,    -1,   733,   734,
     735,   736,    19,    20,   739,   740,    -1,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,    -1,   760,   761,    -1,    -1,   764,
      -1,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,
     127,    -1,    -1,   130,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,   141,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   165,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
     247,   248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,   365,   366,
     367,   368,   369,    -1,    -1,    -1,   373,   374,   375,   376,
     377,   378,   379,   380,   381,   382,    -1,    -1,    -1,    -1,
      -1,    -1,   389,    -1,   391,    -1,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,    -1,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,   431,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,    -1,   446,
      -1,   448,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,    -1,    -1,    -1,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,   475,   476,
      -1,    -1,   479,    -1,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,    -1,   493,   494,   495,   496,
     497,   498,   499,   500,   501,    -1,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,   586,
      -1,    -1,   589,    -1,   591,   592,    -1,   594,   595,   596,
     597,    -1,   599,   600,   601,   602,    -1,    -1,    -1,    -1,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,    -1,   634,    -1,   636,
     637,   638,    -1,   640,   641,    -1,   643,   644,   645,   646,
     647,   648,    -1,   650,   651,   652,   653,   654,   655,   656,
      -1,   658,   659,   660,    -1,   662,   663,   664,   665,   666,
      -1,   668,   669,    -1,    -1,   672,   673,    -1,    -1,   676,
     677,   678,    -1,   680,    -1,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,    -1,   694,   695,    -1,
     697,    -1,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,    -1,   730,   731,    -1,   733,   734,   735,   736,
      19,    20,   739,   740,    -1,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,    -1,   760,   761,    -1,    -1,   764,    -1,   766,
     767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,   127,    -1,
      -1,   130,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,   141,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,   247,   248,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,   355,    -1,    -1,   358,
     359,   360,   361,   362,    -1,    -1,   365,   366,   367,   368,
     369,    -1,    -1,    -1,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,
     389,    -1,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,    -1,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,   431,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,    -1,   446,    -1,   448,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,    -1,    -1,    -1,    -1,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,   475,   476,    -1,    -1,
     479,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,    -1,   493,   494,   495,   496,   497,   498,
     499,   500,   501,    -1,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,   586,    -1,    -1,
     589,    -1,   591,   592,    -1,   594,   595,   596,   597,    -1,
     599,   600,   601,   602,    -1,    -1,    -1,    -1,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,    -1,   634,    -1,   636,   637,   638,
      -1,   640,   641,    -1,   643,   644,   645,   646,   647,   648,
      -1,   650,   651,   652,   653,   654,   655,   656,    -1,   658,
     659,   660,    -1,   662,   663,   664,   665,   666,    -1,   668,
     669,    -1,    -1,   672,   673,    -1,    -1,   676,   677,   678,
      -1,   680,    -1,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,    -1,   694,   695,    -1,   697,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
      -1,   730,   731,    -1,   733,   734,   735,   736,    19,    20,
     739,   740,    -1,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
      -1,   760,   761,    -1,    -1,   764,    -1,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,   123,    -1,    -1,    -1,   127,    -1,    -1,   130,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
     141,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   242,    -1,    -1,    -1,    -1,   247,   248,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   315,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,   355,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,   365,   366,   367,   368,   369,    -1,
      -1,    -1,   373,   374,   375,   376,   377,   378,   379,   380,
     381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,    -1,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,    -1,   446,    -1,   448,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,    -1,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,    -1,   493,   494,   495,   496,   497,   498,   499,   500,
     501,    -1,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,   586,    -1,    -1,   589,    -1,
     591,   592,    -1,   594,   595,   596,   597,    -1,   599,   600,
     601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,    -1,   634,    -1,   636,   637,   638,    -1,   640,
     641,    -1,   643,   644,   645,   646,   647,   648,    -1,   650,
     651,   652,   653,   654,   655,   656,    -1,   658,   659,   660,
      -1,   662,   663,   664,   665,   666,    -1,   668,   669,    -1,
      -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,   680,
      -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,    -1,   694,   695,    -1,   697,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,    -1,   730,
     731,    -1,   733,   734,   735,   736,    19,    20,   739,   740,
      -1,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,    -1,   760,
     761,    -1,    -1,   764,    -1,   766,   767,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,    -1,   127,    -1,    -1,   130,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,   141,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,
      -1,    -1,    -1,    -1,   247,   248,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   315,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,   355,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,   365,   366,   367,   368,   369,    -1,    -1,    -1,
     373,   374,   375,   376,   377,   378,   379,   380,   381,   382,
      -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,    -1,   446,    -1,   448,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,    -1,
      -1,    -1,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,   475,   476,    -1,    -1,   479,    -1,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,    -1,
     493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,   586,    -1,    -1,   589,    -1,   591,   592,
      -1,   594,   595,   596,   597,    -1,   599,   600,   601,   602,
      -1,    -1,    -1,    -1,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
      -1,   634,    -1,   636,   637,   638,    -1,   640,   641,    -1,
     643,   644,   645,   646,   647,   648,    -1,   650,   651,   652,
     653,   654,   655,   656,    -1,   658,   659,   660,    -1,   662,
     663,   664,   665,   666,    -1,   668,   669,    -1,    -1,   672,
     673,    -1,    -1,   676,   677,   678,    -1,   680,    -1,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
      -1,   694,   695,    -1,   697,    -1,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,    -1,   730,   731,    -1,
     733,   734,   735,   736,    19,    20,   739,   740,    -1,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    -1,    -1,   760,   761,    -1,
      -1,   764,    -1,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    77,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,   123,    -1,
      -1,    -1,   127,    -1,    -1,   130,    -1,    -1,    -1,    -1,
     135,    -1,    -1,    -1,    -1,    -1,   141,    -1,    -1,   144,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   157,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     165,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,
      -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,
      -1,    -1,   247,   248,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     315,    -1,    -1,    -1,    -1,   320,   321,   322,   323,   324,
     325,    -1,   327,   328,   329,   330,   331,    -1,    -1,    -1,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,    -1,
     355,    -1,    -1,   358,   359,   360,   361,   362,    -1,    -1,
     365,   366,   367,   368,   369,    -1,    -1,    -1,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,    -1,    -1,
      -1,    -1,    -1,    -1,   389,    -1,   391,    -1,   393,   394,
      -1,   396,   397,   398,   399,   400,   401,    -1,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,    -1,   417,    -1,   419,   420,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,   430,    -1,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,    -1,    -1,
      -1,   446,    -1,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,    -1,    -1,    -1,    -1,    -1,
     465,   466,   467,   468,   469,   470,    -1,   472,   473,    -1,
     475,   476,    -1,    -1,   479,    -1,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,    -1,   493,   494,
     495,   496,   497,   498,   499,   500,   501,    -1,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,    -1,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,    -1,   573,   574,
     575,   576,   577,   578,   579,   580,    -1,   582,   583,   584,
     585,   586,    -1,    -1,   589,    -1,   591,   592,    -1,   594,
     595,   596,   597,    -1,   599,   600,   601,   602,    -1,    -1,
      -1,    -1,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,    -1,   634,
      -1,   636,   637,   638,    -1,   640,   641,    -1,   643,   644,
     645,   646,   647,   648,    -1,   650,   651,   652,   653,   654,
     655,   656,    -1,   658,   659,   660,    -1,   662,   663,   664,
     665,   666,    -1,   668,   669,    -1,    -1,   672,   673,    -1,
      -1,   676,   677,   678,    -1,   680,    -1,   682,   683,    -1,
      -1,   686,   687,    -1,   689,   690,   691,   692,    -1,   694,
     695,    -1,   697,    -1,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,    -1,   720,   721,   722,   723,   724,
     725,   726,   727,   728,    -1,   730,   731,    -1,   733,   734,
     735,   736,    19,    20,   739,   740,    -1,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,    -1,    -1,   760,   761,    -1,    -1,   764,
      -1,   766,   767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    68,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    88,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     127,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,
      -1,    -1,    -1,    -1,   141,    -1,    -1,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   178,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   189,    -1,    -1,    -1,    -1,    -1,    -1,   196,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   242,    -1,    -1,    -1,    -1,
     247,   248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   315,    -1,
      -1,    -1,    -1,   320,   321,   322,   323,   324,   325,    -1,
     327,   328,   329,   330,   331,    -1,    -1,    -1,   335,   336,
     337,   338,   339,   340,   341,   342,   343,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,    -1,   355,    -1,
      -1,   358,   359,   360,   361,   362,    -1,    -1,   365,   366,
     367,   368,   369,    -1,    -1,    -1,   373,   374,   375,   376,
     377,    -1,   379,   380,   381,   382,    -1,    -1,    -1,    -1,
      -1,    -1,   389,    -1,   391,    -1,   393,   394,    -1,   396,
     397,   398,   399,   400,   401,    -1,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,   414,   415,    -1,
     417,    -1,   419,   420,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,   430,    -1,   432,   433,   434,   435,   436,
     437,   438,   439,   440,   441,   442,    -1,    -1,    -1,   446,
      -1,    -1,   449,   450,   451,   452,   453,   454,   455,   456,
     457,   458,   459,    -1,    -1,    -1,    -1,    -1,   465,   466,
     467,   468,   469,   470,    -1,   472,   473,    -1,   475,   476,
      -1,    -1,   479,    -1,   481,   482,   483,   484,   485,   486,
     487,   488,   489,   490,   491,    -1,   493,   494,   495,   496,
     497,   498,   499,   500,   501,    -1,   503,   504,   505,   506,
     507,   508,   509,   510,   511,   512,   513,   514,   515,   516,
     517,   518,   519,   520,   521,   522,   523,   524,   525,   526,
     527,   528,   529,   530,   531,   532,   533,   534,   535,    -1,
     537,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,   548,   549,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,   565,   566,
     567,   568,   569,   570,   571,    -1,   573,   574,   575,   576,
     577,   578,   579,   580,    -1,   582,   583,   584,   585,    -1,
      -1,    -1,   589,    -1,   591,   592,    -1,   594,   595,   596,
     597,    -1,   599,   600,   601,   602,    -1,    -1,    -1,    -1,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,    -1,   634,    -1,   636,
     637,   638,    -1,   640,   641,    -1,   643,   644,   645,   646,
     647,   648,    -1,   650,   651,   652,   653,   654,   655,   656,
      -1,   658,   659,   660,    -1,   662,   663,   664,   665,   666,
      -1,   668,   669,    -1,    -1,   672,   673,    -1,    -1,   676,
     677,   678,    -1,   680,    -1,   682,   683,    -1,    -1,   686,
     687,    -1,   689,   690,   691,   692,    -1,   694,   695,    -1,
     697,    -1,   699,   700,   701,   702,   703,   704,   705,   706,
     707,   708,   709,   710,   711,   712,   713,   714,   715,   716,
     717,   718,    -1,   720,   721,   722,   723,   724,   725,   726,
     727,   728,    -1,   730,   731,    -1,   733,   734,   735,   736,
      19,    20,   739,   740,    -1,   742,   743,   744,   745,   746,
     747,   748,   749,   750,   751,   752,   753,   754,   755,   756,
     757,    -1,    -1,   760,   761,    -1,    -1,   764,    -1,   766,
     767,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     189,    -1,    -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     219,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   280,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,
      -1,   320,   321,   322,   323,   324,   325,    -1,   327,   328,
     329,   330,   331,    -1,    -1,    -1,   335,   336,   337,   338,
     339,   340,   341,   342,   343,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,    -1,    -1,    -1,    -1,   358,
     359,   360,   361,   362,    -1,    -1,   365,   366,   367,   368,
     369,    -1,    -1,    -1,   373,   374,   375,   376,   377,    -1,
     379,   380,   381,   382,    -1,    -1,    -1,    -1,    -1,    -1,
     389,    -1,   391,    -1,   393,   394,    -1,   396,   397,   398,
     399,   400,   401,    -1,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,   414,   415,    -1,   417,    -1,
     419,   420,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,   430,    -1,   432,   433,   434,   435,   436,   437,   438,
     439,   440,   441,   442,    -1,    -1,    -1,   446,    -1,    -1,
     449,   450,   451,   452,   453,   454,   455,   456,   457,   458,
     459,    -1,    -1,    -1,    -1,    -1,   465,   466,   467,   468,
     469,   470,    -1,   472,   473,    -1,   475,   476,    -1,    -1,
     479,    -1,   481,   482,   483,   484,   485,   486,   487,   488,
     489,   490,   491,    -1,   493,   494,   495,   496,   497,   498,
     499,   500,   501,    -1,   503,   504,   505,   506,   507,   508,
     509,   510,   511,   512,   513,   514,   515,   516,   517,   518,
     519,   520,   521,   522,   523,   524,   525,   526,   527,   528,
     529,   530,   531,   532,   533,   534,   535,    -1,   537,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,   548,
     549,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,   565,   566,   567,   568,
     569,   570,   571,    -1,   573,   574,   575,   576,   577,   578,
     579,   580,    -1,   582,   583,   584,   585,    -1,    -1,    -1,
     589,    -1,   591,   592,    -1,   594,   595,   596,   597,    -1,
     599,   600,   601,   602,    -1,    -1,    -1,    -1,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   628,
     629,   630,   631,   632,    -1,   634,    -1,   636,   637,   638,
      -1,   640,   641,    -1,   643,   644,   645,   646,   647,   648,
      -1,   650,   651,   652,   653,   654,   655,   656,    -1,   658,
     659,   660,    -1,   662,   663,   664,   665,   666,    -1,   668,
     669,    -1,    -1,   672,   673,    -1,    -1,   676,   677,   678,
      -1,   680,    -1,   682,   683,    -1,    -1,   686,   687,    -1,
     689,   690,   691,   692,    -1,   694,   695,    -1,   697,    -1,
     699,   700,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
      -1,   720,   721,   722,   723,   724,   725,   726,   727,   728,
      -1,   730,   731,    -1,   733,   734,   735,   736,    19,    20,
     739,   740,    -1,   742,   743,   744,   745,   746,   747,   748,
     749,   750,   751,   752,   753,   754,   755,   756,   757,    -1,
      -1,   760,   761,    -1,    -1,   764,    -1,   766,   767,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,
      -1,    -1,    -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   313,    -1,    -1,    -1,    -1,    -1,    -1,   320,
     321,   322,   323,   324,   325,    -1,   327,   328,   329,   330,
     331,    -1,    -1,    -1,   335,   336,   337,   338,   339,   340,
     341,   342,   343,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,    -1,    -1,    -1,    -1,   358,   359,   360,
     361,   362,    -1,    -1,   365,   366,   367,   368,   369,    -1,
      -1,    -1,   373,   374,   375,   376,   377,    -1,   379,   380,
     381,   382,    -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,
     391,    -1,   393,   394,    -1,   396,   397,   398,   399,   400,
     401,    -1,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,   414,   415,    -1,   417,    -1,   419,   420,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,   430,
      -1,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,    -1,    -1,    -1,   446,    -1,    -1,   449,   450,
     451,   452,   453,   454,   455,   456,   457,   458,   459,    -1,
      -1,    -1,    -1,    -1,   465,   466,   467,   468,   469,   470,
      -1,   472,   473,    -1,   475,   476,    -1,    -1,   479,    -1,
     481,   482,   483,   484,   485,   486,   487,   488,   489,   490,
     491,    -1,   493,   494,   495,   496,   497,   498,   499,   500,
     501,    -1,   503,   504,   505,   506,   507,   508,   509,   510,
     511,   512,   513,   514,   515,   516,   517,   518,   519,   520,
     521,   522,   523,   524,   525,   526,   527,   528,   529,   530,
     531,   532,   533,   534,   535,    -1,   537,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,   548,   549,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,   565,   566,   567,   568,   569,   570,
     571,    -1,   573,   574,   575,   576,   577,   578,   579,   580,
      -1,   582,   583,   584,   585,    -1,    -1,    -1,   589,    -1,
     591,   592,    -1,   594,   595,   596,   597,    -1,   599,   600,
     601,   602,    -1,    -1,    -1,    -1,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   628,   629,   630,
     631,   632,    -1,   634,    -1,   636,   637,   638,    -1,   640,
     641,    -1,   643,   644,   645,   646,   647,   648,    -1,   650,
     651,   652,   653,   654,   655,   656,    -1,   658,   659,   660,
      -1,   662,   663,   664,   665,   666,    -1,   668,   669,    -1,
      -1,   672,   673,    -1,    -1,   676,   677,   678,    -1,   680,
      -1,   682,   683,    -1,    -1,   686,   687,    -1,   689,   690,
     691,   692,    -1,   694,   695,    -1,   697,    -1,   699,   700,
     701,   702,   703,   704,   705,   706,   707,   708,   709,   710,
     711,   712,   713,   714,   715,   716,   717,   718,    -1,   720,
     721,   722,   723,   724,   725,   726,   727,   728,    -1,   730,
     731,    -1,   733,   734,   735,   736,    19,    20,   739,   740,
      -1,   742,   743,   744,   745,   746,   747,   748,   749,   750,
     751,   752,   753,   754,   755,   756,   757,    -1,    -1,   760,
     761,    -1,    -1,   764,    -1,   766,   767,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    88,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   116,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   135,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   144,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   189,    -1,    -1,    -1,
      -1,    -1,    -1,   196,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   208,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   219,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   280,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   320,   321,   322,
     323,   324,   325,    -1,   327,   328,   329,   330,   331,    -1,
      -1,    -1,   335,   336,   337,   338,   339,   340,   341,   342,
     343,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,    -1,    -1,    -1,    -1,   358,   359,   360,   361,   362,
      -1,    -1,   365,   366,   367,   368,   369,    -1,    -1,    -1,
     373,   374,   375,   376,   377,    -1,   379,   380,   381,   382,
      -1,    -1,    -1,    -1,    -1,    -1,   389,    -1,   391,    -1,
     393,   394,    -1,   396,   397,   398,   399,   400,   401,    -1,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,   414,   415,    -1,   417,    -1,   419,   420,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,   430,    -1,   432,
     433,   434,   435,   436,   437,   438,   439,   440,   441,   442,
      -1,    -1,    -1,   446,    -1,    -1,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,    -1,    -1,    -1,
      -1,    -1,   465,   466,   467,   468,   469,   470,    -1,   472,
     473,    -1,   475,   476,    -1,    -1,   479,    -1,   481,   482,
     483,   484,   485,   486,   487,   488,   489,   490,   491,    -1,
     493,   494,   495,   496,   497,   498,   499,   500,   501,    -1,
     503,   504,   505,   506,   507,   508,   509,   510,   511,   512,
     513,   514,   515,   516,   517,   518,   519,   520,   521,   522,
     523,   524,   525,   526,   527,   528,   529,   530,   531,   532,
     533,   534,   535,    -1,   537,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,   548,   549,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,   565,   566,   567,   568,   569,   570,   571,    -1,
     573,   574,   575,   576,   577,   578,   579,   580,    -1,   582,
     583,   584,   585,    -1,    -1,    -1,   589,    -1,   591,   592,
      -1,   594,   595,   596,   597,    -1,   599,   600,   601,   602,
      -1,    -1,    -1,    -1,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   628,   629,   630,   631,   632,
      -1,   634,    -1,   636,   637,   638,    -1,   640,   641,    -1,
     643,   644,   645,   646,   647,   648,    -1,   650,   651,   652,
     653,   654,   655,   656,    -1,   658,   659,   660,    -1,   662,
     663,   664,   665,   666,    -1,   668,   669,    -1,    -1,   672,
     673,    -1,    -1,   676,   677,   678,    -1,   680,    -1,   682,
     683,    -1,    -1,   686,   687,    -1,   689,   690,   691,   692,
      -1,   694,   695,    -1,   697,    -1,   699,   700,   701,   702,
     703,   704,   705,   706,   707,   708,   709,   710,   711,   712,
     713,   714,   715,   716,   717,   718,    -1,   720,   721,   722,
     723,   724,   725,   726,   727,   728,    -1,   730,   731,    -1,
     733,   734,   735,   736,    -1,    -1,   739,   740,    -1,   742,
     743,   744,   745,   746,   747,   748,   749,   750,   751,   752,
     753,   754,   755,   756,   757,    19,    20,   760,   761,    -1,
      -1,   764,    -1,   766,   767,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    45,    46,    47,    48,    49,    50,    51,    52,    53,
      54,    55,    -1,    57,    58,    59,    60,    -1,    -1,    63,
      64,    65,    66,    67,    68,    69,    70,    71,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    89,    90,    91,    92,    93,
      94,    95,    96,    97,    98,    99,   100,   101,   102,   103,
     104,   105,   106,   107,   108,   109,   110,   111,   112,   113,
     114,   115,   116,   117,   118,   119,   120,   121,   122,   123,
     124,   125,   126,    -1,   128,   129,   130,   131,   132,    -1,
      -1,   135,   136,   137,   138,   139,   140,   141,   142,   143,
     144,   145,   146,   147,   148,   149,   150,   151,   152,   153,
     154,   155,   156,   157,   158,   159,   160,   161,   162,   163,
     164,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,    -1,    -1,    -1,   178,   179,   180,   181,   182,   183,
     184,    -1,    -1,    -1,   188,   189,   190,   191,   192,   193,
     194,   195,   196,   197,   198,   199,   200,   201,   202,    -1,
     204,   205,   206,   207,   208,   209,   210,   211,   212,   213,
     214,   215,   216,   217,   218,   219,   220,   221,   222,   223,
     224,   225,   226,   227,   228,   229,   230,   231,   232,   233,
     234,    -1,   236,   237,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,   249,   250,   251,   252,   253,
     254,   255,   256,   257,   258,    -1,   260,   261,    -1,   263,
     264,   265,   266,   267,   268,   269,   270,   271,   272,   273,
     274,   275,   276,   277,   278,   279,   280,   281,   282,   283,
     284,    -1,    -1,    -1,   288,   289,   290,   291,   292,   293,
     294,   295,   296,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,    -1,   308,   309,   310,   311,   312,   313,
     314,   315,   316,   317,   318,   319,   320,   321,   322,    -1,
     324,   325,   326,   327,   328,   329,   330,   331,   332,   333,
     334,   335,   336,   337,   338,   339,   340,   341,   342,   343,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,   355,    -1,   357,    -1,   359,    -1,    -1,   362,   363,
     364,   365,   366,   367,   368,   369,   370,   371,   372,   373,
     374,   375,    -1,    -1,   378,   379,   380,   381,   382,   383,
     384,   385,   386,   387,    -1,   389,   390,   391,   392,   393,
     394,   395,   396,   397,   398,   399,   400,   401,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
     414,   415,   416,   417,    -1,   419,   420,   421,   422,   423,
     424,   425,   426,   427,   428,   429,   430,   431,   432,   433,
     434,    -1,   436,   437,   438,   439,   440,   441,   442,   443,
     444,   445,   446,    -1,    -1,   449,   450,   451,   452,   453,
     454,   455,   456,   457,   458,    -1,   460,   461,   462,    -1,
     464,   465,   466,    -1,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,    -1,   479,   480,   481,   482,   483,
     484,   485,   486,   487,   488,   489,   490,   491,   492,   493,
     494,   495,   496,   497,   498,   499,    -1,   501,   502,   503,
     504,   505,   506,   507,   508,   509,   510,   511,   512,   513,
     514,   515,   516,   517,   518,   519,   520,   521,   522,   523,
     524,   525,   526,   527,   528,   529,   530,   531,   532,   533,
     534,   535,    -1,   537,   538,   539,   540,   541,   542,   543,
      -1,   545,   546,   547,   548,   549,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,    -1,   563,
     564,   565,   566,   567,   568,   569,   570,   571,   572,   573,
     574,   575,   576,    -1,    -1,    -1,   580,   581,   582,   583,
     584,   585,   586,   587,   588,   589,   590,   591,   592,   593,
     594,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,    -1,    -1,   621,   622,   623,
     624,   625,   626,   627,   628,   629,   630,   631,   632,   633,
     634,   635,   636,   637,   638,   639,   640,   641,   642,   643,
     644,   645,   646,   647,   648,   649,   650,   651,   652,    -1,
     654,   655,   656,   657,   658,   659,   660,   661,   662,   663,
      -1,   665,   666,   667,   668,   669,   670,   671,   672,   673,
     674,   675,   676,   677,   678,   679,   680,   681,   682,   683,
      -1,    -1,   686,   687,    -1,   689,   690,   691,   692,   693,
     694,   695,   696,   697,   698,   699,   700,   701,   702,   703,
     704,   705,   706,   707,   708,   709,   710,   711,   712,   713,
     714,   715,   716,    -1,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
     744,   745,    -1,   747,   748,   749,   750,   751,   752,   753,
     754,   755,   756,   757,    -1,   759,   760,   761,   762,    -1,
     764,   765,   766
};

/* YYSTOS[STATE-NUM] -- The symbol kind of the accessing symbol of
   state STATE-NUM.  */
static const yytype_int16 yystos[] =
{
       0,     5,     7,    48,    49,    66,    68,    70,    72,    80,
     101,   103,   104,   110,   127,   131,   141,   150,   161,   171,
     174,   178,   205,   217,   218,   228,   229,   240,   241,   242,
     244,   249,   255,   259,   260,   261,   295,   297,   299,   306,
     315,   316,   332,   354,   355,   357,   364,   372,   392,   416,
     426,   445,   460,   471,   474,   477,   492,   606,   635,   639,
     649,   657,   670,   693,   696,   729,   738,   765,   788,   799,
     802,   803,   804,   805,   806,   808,   814,   816,   831,   874,
     881,   925,   926,   933,   934,   948,   983,  1008,  1026,  1088,
    1143,  1245,  1299,  1302,  1312,  1317,  1323,  1336,  1339,  1345,
    1348,  1353,  1360,  1372,  1375,  1378,  1379,  1381,  1384,  1385,
    1387,  1388,  1391,  1392,  1395,  1641,  1643,  1656,  1659,  1697,
    1706,  1724,  1732,  1746,  1750,  1751,  1755,  1756,  1766,  1773,
    1781,  1783,  1789,  1792,  1793,  1825,  1880,  1922,  1929,  1931,
    1940,  1943,  1979,  1981,  1986,  1987,  1988,  1989,  2019,  2028,
    2029,  2030,  2032,  2080,  2085,  2101,    88,   227,   342,   417,
     467,   662,   667,   742,  1246,  1993,  1994,  1995,  1996,   198,
     464,   510,  1347,  1753,    19,    20,    88,   116,   135,   144,
     189,   196,   208,   219,   280,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   335,   336,   337,
     338,   339,   340,   341,   342,   343,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,   355,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,   371,   372,   373,   374,   375,   376,   377,   378,
     379,   380,   381,   382,   383,   384,   385,   386,   387,   389,
     390,   391,   392,   393,   394,   395,   396,   397,   398,   399,
     400,   401,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,   414,   415,   416,   417,   419,   420,
     421,   422,   423,   424,   425,   426,   427,   428,   429,   430,
     431,   432,   433,   434,   435,   436,   437,   438,   439,   440,
     441,   442,   443,   444,   445,   446,   449,   450,   451,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     464,   465,   466,   467,   468,   469,   470,   471,   472,   473,
     474,   475,   476,   477,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   537,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,   548,   549,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,   565,
     566,   567,   568,   569,   570,   571,   572,   573,   574,   575,
     576,   577,   578,   579,   580,   582,   583,   584,   585,   586,
     587,   588,   589,   590,   591,   592,   593,   594,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   628,   629,   630,   631,   632,   633,   634,   635,   636,
     637,   638,   639,   640,   641,   642,   643,   644,   645,   646,
     647,   648,   649,   650,   651,   652,   653,   654,   655,   656,
     657,   658,   659,   660,   661,   662,   663,   664,   665,   666,
     667,   668,   669,   670,   671,   672,   673,   674,   675,   676,
     677,   678,   679,   680,   681,   682,   683,   686,   687,   689,
     690,   691,   692,   693,   694,   695,   696,   697,   698,   699,
     700,   701,   702,   703,   704,   705,   706,   707,   708,   709,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
     720,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,   744,   745,   746,   747,   748,   749,
     750,   751,   752,   753,   754,   755,   756,   757,   758,   759,
     760,   761,   762,   764,   765,   766,   767,  1847,  1849,  1858,
    1865,  1869,  1870,  1871,  1872,  1873,  1874,  1875,  1876,  1877,
    1878,  2052,   984,   532,  1340,   209,  1707,    88,   145,   215,
     227,   290,   327,   440,   467,   648,   667,   715,   742,   751,
     871,   872,   873,  1655,  1011,   869,   949,  1657,  1784,   145,
     412,   766,  1798,   282,   711,  1925,  1009,  1347,  1144,  1027,
      57,   532,  1738,   259,   268,   922,   927,   929,  1858,   657,
     742,  1925,  1013,   927,   928,   869,  1382,  1881,  1733,   927,
    1930,  1698,  1858,  1380,  1010,   236,  1827,  1660,   174,   295,
     691,  1767,    40,   197,  1433,  1980,     3,    31,  1852,   145,
    1925,   761,  1983,  1642,   486,  1858,  1347,   407,   936,  1932,
     815,   602,   681,  1858,  1347,  1774,  1983,  1858,  1790,    47,
     674,   724,    47,   674,  1725,   602,   681,   355,   356,   392,
     431,   606,   623,   649,   693,  2022,  1381,  1388,  1391,     0,
       7,   800,   606,    88,   129,   145,   263,   294,   312,   648,
     742,   848,  1222,  1223,  1655,  1993,  1994,  1995,  1996,   128,
     154,  1398,  1399,  1637,  1376,  1373,   119,   152,   293,  1390,
    1990,  1389,  1990,   452,   464,   595,   796,  1752,  1753,  1844,
    1858,  1385,  1387,   390,  1265,  1858,   875,  1858,   771,   771,
     875,   141,  1654,    21,  1852,  1858,  1860,  1654,  1291,  1292,
     269,  1416,  1997,  1998,  1993,   771,  1925,  1372,  1375,  1656,
    1659,  1697,  1706,  1749,   796,   882,   313,   964,   965,   985,
     988,   991,   827,   828,  1852,   751,  1337,  1925,   332,   143,
     179,   479,   618,  1709,  1722,  1723,  1654,  1645,    63,  1654,
     320,  1654,  1654,  1654,  1654,  1654,  1654,   662,  1925,   996,
    1858,  2056,    47,    48,    80,    84,   101,   110,   131,   145,
     150,   174,   233,   237,   255,   259,   260,   290,   297,   298,
     357,   397,   440,   445,   456,   457,   611,   615,   621,   632,
     638,   670,   674,   705,  1860,  1944,  1948,  1949,  1950,  1952,
    1954,  1955,  1956,  1957,   964,   979,  1662,   475,   680,  1785,
     154,  1794,  1923,    77,   123,   130,   144,   157,   165,   247,
     248,   323,   355,   378,   448,   467,   586,   904,   950,   951,
     952,   953,   955,   958,   961,   962,   963,   973,   974,   975,
     976,   977,   998,  1001,  1849,  1859,  1872,  1873,  1874,  1878,
    2053,  2061,  2062,  2063,  2078,  2079,  2080,  2081,  2083,  1925,
       3,     8,     9,    19,    20,    22,    23,    24,    25,    26,
      27,    28,    29,    30,    31,    32,    40,    57,    58,    59,
      60,    68,    69,    71,    78,    79,    82,    83,    84,    85,
      87,    90,    91,    99,   102,   120,   121,   122,   124,   132,
     133,   134,   141,   150,   153,   162,   164,   166,   172,   181,
     182,   184,   188,   193,   197,   199,   200,   201,   202,   220,
     221,   222,   224,   231,   242,   250,   251,   269,   276,   277,
     279,   280,   291,   301,   302,   303,   309,   310,   331,   332,
     333,   334,   338,   345,   353,   370,   383,   385,   386,   387,
     402,   414,   415,   470,   482,   504,   505,   550,   556,   565,
     566,   589,   597,   609,   653,   660,   666,   668,   701,   720,
     721,   722,   723,   728,   729,   742,   745,   757,   759,   767,
     776,   777,   782,   788,   792,   793,   796,  1391,  1397,  1427,
    1428,  1429,  1430,  1434,  1445,  1449,  1450,  1451,  1452,  1453,
    1454,  1455,  1459,  1460,  1461,  1469,  1475,  1476,  1477,  1478,
    1479,  1481,  1484,  1817,  1820,  1822,  1823,  1824,  1841,  1848,
    1850,  1851,  1858,  1865,  1876,  1877,    65,  1028,   514,   251,
     366,   374,   389,   399,   400,   401,   409,   547,   559,   659,
     700,   714,   930,   932,   745,   923,   929,  1858,   869,  1654,
     904,   999,   929,    47,   337,   615,  1941,  1942,  1950,  1952,
      47,   106,   265,   267,   278,   294,   478,   686,   687,   688,
     689,  1401,  1408,  1409,  1992,     3,    71,    99,   144,   323,
     370,   467,   472,   510,   560,   581,   597,   648,   665,   694,
     724,   758,  1187,  1847,  1856,  1867,  1869,  1870,  1871,  1873,
    1874,  1875,  1878,  1882,  1892,  1903,  2052,    47,    49,    79,
      80,    89,   145,   159,   215,   227,   282,   327,   348,   357,
     370,   381,   404,   434,   437,   439,   466,   467,   472,   473,
     489,   510,   532,   586,   601,   610,   613,   614,   628,   665,
     674,   697,   755,  1187,  1221,  1734,  1738,  1739,  1741,  1750,
    1849,  1893,   929,  1925,   179,  1705,   788,  1676,  1685,   964,
    2058,  1826,  1662,  1768,  1858,   347,  1983,  1860,  1354,  1313,
      50,  1984,  1427,  1500,   809,   300,   811,  1757,   421,  1844,
    1846,  1858,  1933,  1860,   141,  1087,  1852,   128,  1318,   532,
     617,   674,  1775,  1776,   288,  1984,   754,  1791,   675,   827,
     233,   316,  1303,  1304,  1305,   675,   827,   282,  1727,  1654,
    1654,    23,    26,    27,    31,  1818,  1819,  1853,  2021,  2021,
    2021,   464,  2020,  2021,  2021,   789,   789,   795,  1858,  1087,
    1087,   145,  1087,  1087,   667,   853,   145,   145,   282,   662,
     227,   290,   440,   872,   873,  1997,   341,   870,   870,  1993,
     111,   135,   788,   793,  1397,  1400,  1505,  1507,  1520,  1523,
    1524,  1525,  1536,  1537,  1538,  1539,  1541,  1542,  1544,  1844,
     212,   427,  1632,  1633,  1638,   314,  1567,  1398,   123,   127,
     168,   174,   207,   581,  1410,  1592,  1597,  1598,  1607,  1608,
    1613,   227,  1611,  1627,  1637,    47,   106,  1991,  1991,  1991,
    1607,  1609,  1391,  1394,  1395,  1608,  1610,  1393,    47,  1858,
    1748,   127,  1747,   796,  1377,  1374,    42,   771,  1679,  1680,
    1248,   741,  1250,   796,   546,   716,   734,    85,  1860,  1861,
    1862,  1948,  1251,   120,  1256,  1255,   869,   282,   143,   585,
    1293,  1294,  1295,   661,   440,   751,  1997,  1860,  1324,  1858,
     788,   885,   964,   986,  1419,   114,   993,   991,   288,  1338,
    1648,  1649,  1844,   128,  1711,   128,  1651,  1652,  1711,  1712,
    1713,  1845,  1858,  1722,  1858,   141,  1653,   875,   875,   869,
    1860,   869,  1646,  1858,  1654,  1654,  1012,   151,   997,   610,
    1953,   651,   651,   712,   715,   742,   751,   788,  1425,   479,
     588,   711,   584,   742,    80,    89,   751,   337,   555,   637,
     337,   337,   204,   337,   375,   532,   674,   555,   288,   204,
     791,   788,   284,   431,   179,   418,   478,  1664,  1666,   397,
     617,  1786,  1787,   364,   179,   396,  1800,  1844,  1926,  1927,
     313,  1859,   128,   136,   565,  1858,  1859,  1859,  1859,  2084,
    1858,   313,  1859,  1858,   431,  2079,  2032,  2033,   964,   978,
    1858,   797,   127,   178,   242,   315,   355,   795,  1346,  1485,
      19,    20,    30,  1848,  1865,    31,  1819,   153,   776,   777,
    1452,   788,   788,   788,   313,  1427,  1503,  1504,   788,   788,
     788,   788,   788,  1425,  1425,  1425,   788,  1424,   788,   788,
     788,   788,   788,   788,   788,   788,   788,   788,   788,   788,
     788,  1427,   788,   788,   788,  1424,     8,   788,  1501,  1502,
    1841,  1848,   788,   788,   788,   788,  1427,  1424,   788,   788,
     788,   788,   788,   788,   788,   788,   788,   788,    15,   788,
     788,   788,   788,  1425,  1424,  1424,   788,   788,   788,   788,
     788,   788,   788,   788,   788,   788,   788,   788,   788,   788,
     788,    31,   788,   788,   788,   788,   788,   788,   788,   788,
     745,   788,   788,   788,   745,   788,   788,   788,   788,   788,
      31,   788,   788,   788,    31,   788,   788,   788,   788,   788,
     788,   788,   788,   153,  1452,   153,  1452,  1452,  1145,  1391,
    1427,  1825,  1858,  1848,    33,    41,    50,   209,   317,  1431,
    1432,    35,    36,    37,    39,   156,   771,   772,   773,  1435,
      55,   151,   167,   239,   682,  1433,    14,    43,    44,   107,
     193,   774,   775,   776,   777,   778,   779,   780,   781,  1452,
      73,    38,   214,   214,   759,  1853,   796,   788,    15,  1029,
      54,   288,   791,   771,  1853,  1350,  1861,  1863,  1349,   740,
    1953,   588,   204,   128,   204,  1383,  1409,     3,  1860,   259,
     648,   796,    57,    99,  1188,  1189,  1679,  1860,   127,  1679,
    1679,  1949,    99,  1848,  1886,  1895,  1883,    57,    99,  1191,
    1192,  1860,   796,  1679,  1884,   791,   675,  1753,   788,    88,
     215,   227,   282,   290,   327,   440,   467,   662,   667,   742,
     751,   167,   314,  1745,    63,   695,   380,   695,   695,   320,
     695,   439,   695,  1745,    47,  1102,  1860,  1596,  1597,  1602,
     128,   151,  1740,  1742,   380,   695,   127,   695,   711,   681,
      47,   359,   403,   405,   495,   545,   592,   683,   707,  1728,
    1729,  1730,   827,   481,   827,  1602,  1745,  1742,   514,   433,
     382,   612,   711,   727,  1753,  1415,   695,   748,   143,  1290,
    1686,   791,   426,  1828,  1830,  1836,  1858,  1665,  1666,  1844,
    2086,   791,  1355,  1356,  1357,  1358,  1844,  1648,   367,   572,
     240,   572,  1985,   791,  1427,   812,    57,   271,   420,   434,
     436,   468,   472,   481,   514,   532,   610,   617,   627,   641,
     665,   674,   677,   695,   726,  1758,  1763,  1764,  1849,  1925,
     935,   586,   233,   378,  1433,  1858,   807,   751,  1315,  1925,
    1778,   364,  1777,   791,   657,  1858,  1985,   127,  1306,  1307,
    1306,   584,   763,   398,   791,  1306,  1306,  1649,  1858,  1852,
     791,   583,  2024,   706,  2025,   771,   158,   643,  2023,     7,
     801,  1858,   835,  1087,   869,   869,  1087,   839,   841,  1087,
    1087,  1087,   846,   847,  1087,  1087,   751,   467,   467,  1997,
     788,  1505,  1525,  1537,  1538,  1539,  1540,  1541,  1858,    10,
    1406,    81,   147,   158,   166,   194,   250,   278,  1532,  1533,
     791,   218,  1534,  1535,    31,  1854,  1854,     3,  1634,  1635,
    1636,  1858,  1860,  1568,   136,  1571,  1567,   458,   565,  1599,
     297,     8,    28,    30,    32,   252,  1603,  1604,  1820,  1848,
     151,    65,  1604,  1596,  1410,  1858,  1410,  1411,  1411,  1394,
    1749,   397,  1754,  1818,  1858,  1858,  1608,  1611,  1852,    99,
     390,  1084,  1085,  1099,  1100,  1195,   412,   876,  1858,  1425,
       3,   876,  1844,   587,  1861,  1862,  1863,  1963,  1967,  1654,
    1295,   417,   493,   875,  1844,   751,  1325,  1326,  1649,   796,
     883,   886,   992,   313,   987,   989,  1427,   904,  2035,   431,
     817,  1648,   127,   368,   452,   454,   544,   618,   791,  1341,
    1342,  1343,  1844,    54,  1708,  1651,  1858,   791,  1715,   127,
    1404,  1405,  1567,   796,  1721,   120,  1858,  1947,  1950,  1863,
    1962,  1648,   796,  1647,  1644,   426,  2060,   647,   995,   711,
     789,   337,   651,  1863,   337,   337,  1963,   282,   871,  1951,
     357,   397,   440,   445,   456,   457,   611,   621,   632,   638,
     670,   674,   705,  1955,  1957,  1834,  1835,  1848,   980,   141,
    1290,   483,   742,  1427,  1788,  1788,  1361,   510,  1799,    53,
     771,  1563,  1564,  1565,   576,   754,   791,  1924,   964,   313,
    1858,   565,   128,   154,  2031,  2074,   964,   313,   788,   972,
     178,   795,   954,   791,  1004,  1002,  1007,  1003,  2082,  1648,
       3,  1486,  1860,   796,   788,    47,  1494,  1566,  1494,  1494,
    1427,  1504,   114,   313,   431,  1427,  1500,  1427,   106,  1494,
    1566,   789,    24,    25,    26,    28,    30,    32,   789,  1617,
    1623,  1624,  1427,  1427,  1841,   789,  1386,  1387,  1396,  1825,
      92,    93,    94,    95,   138,   139,   140,   190,   191,   254,
     318,   415,   482,   548,   550,   556,   616,   660,   756,   767,
    1560,  1561,  1427,   106,  1487,  1487,  1474,  1427,  1427,  1427,
    1560,  1427,  1427,  1427,  1848,  1502,   340,   791,   796,   106,
    1494,  1427,   106,  1494,  1427,  1427,  1427,  1427,  1427,   789,
    1430,   789,  1427,  1427,   789,   652,  1494,  1494,   106,  1494,
     789,  1617,  1494,  1494,   789,  1427,  1427,  1456,  1457,  1458,
      64,   163,   289,  1427,  1446,  1447,  1448,  1427,  1427,   106,
    1494,  1427,  1427,  1427,  1442,  1443,  1427,  1427,  1499,  1500,
    1427,  1427,   413,   414,   720,   723,  1562,  1427,  1427,  1500,
    1844,  1427,  1427,   127,  1844,  1499,  1427,   127,  1427,  1427,
     789,  1844,  1427,  1427,  1561,  1561,  1427,  1446,  1427,   789,
       8,   796,  1842,  1858,  1427,  1499,  1427,  1427,  1427,   789,
     791,  1387,  1427,   796,  1427,  1427,  1427,  1429,   122,   202,
     291,   739,  1433,    47,   344,  1429,  1436,  1429,   788,  1397,
    1429,  1429,   167,    55,   151,   167,   239,  1430,  1430,  1430,
    1430,  1430,  1430,  1430,   153,  1430,   153,  1430,  1430,  1430,
    1430,  1430,  1193,  1860,  1452,   788,  1483,  1577,  1858,   788,
     136,   332,   333,   334,  1848,  1462,   465,   497,   571,   652,
    1444,   169,   230,   509,   710,  1030,  1034,  1782,  1852,   932,
     414,   720,   723,   931,  1484,  1822,  1841,   791,   288,  1351,
    1352,  1844,   964,   791,   127,  1863,  1862,  1964,   871,  1951,
     778,  1413,  1414,  1416,   472,   510,   665,  1894,  1679,  1950,
    1858,    73,  1427,  1913,  1912,  1911,   796,   796,  1679,   791,
    1885,   233,   496,  1914,  1915,  1916,  1917,  1858,  1904,    99,
     724,  1848,  1887,  1899,  1889,  1890,  1892,  1903,   695,   127,
     778,  1087,    63,   875,   875,  1844,   875,   320,   875,   875,
     875,  1844,  1860,  1863,  1844,  1415,  1415,   380,   695,  1745,
     875,  1745,  1740,   380,   695,  1745,   151,  1743,   514,   557,
     695,  1737,  1737,  1745,  1858,   875,  1745,  1862,  1740,  1745,
    1852,   494,   708,   455,   127,  1731,   791,   439,   695,  1844,
    1742,  1740,  1740,   127,  1745,  1745,  1745,  1507,  1696,  1844,
    1416,  1688,  1690,   788,  1683,  2059,   791,   788,  1829,  1833,
     154,  1667,  2074,     3,   151,   791,   218,  1366,  1368,  1369,
     452,   618,  1314,   367,   240,  1427,   810,    99,   143,   813,
    1427,  1691,  1692,   514,   514,   514,   514,   695,   364,   514,
     695,   827,   514,   791,  1415,  1759,     3,    74,   937,   938,
     939,   940,  1848,  1564,  1934,   120,   681,  1427,  1316,  1648,
     288,  1780,   827,  1776,  1858,    47,  1301,   631,   690,  1308,
    1309,   127,   829,   830,   678,  1305,   829,  1924,  1818,   600,
    2026,  1860,   843,  1858,   837,  1947,  1963,  1860,  1087,  1087,
     832,  1844,  2102,  1416,  2008,   857,  1416,   875,   875,  1087,
    1087,  1087,   751,  1521,   791,   789,   789,   789,   789,   789,
     791,   789,  1505,    47,    53,    55,   128,  1407,  1565,   158,
     158,   211,  1545,   166,   250,  1532,  1545,  1505,  1523,   788,
    1406,  1639,  1860,   791,   796,  1426,  1427,    65,   137,  1569,
    1571,   252,   653,  1600,  1604,   576,   673,   754,  1412,  1848,
     443,   252,   581,   791,   796,   669,  1593,   653,  1600,  1628,
    1427,  1249,  1680,  1085,    73,  1187,   422,   192,   232,   269,
     390,   402,   502,   572,   878,   880,  1663,  1860,  1663,  1257,
     788,   484,   243,   791,  1971,  1844,  1254,  1253,  1844,   791,
     599,  1327,  1858,   885,   887,   888,  1427,   284,   964,   989,
    1417,    68,   108,   142,   180,   485,   515,   516,   518,   519,
     520,   521,   522,   524,   525,   526,   527,   528,   529,   530,
     531,   533,   534,   535,   536,   629,   630,   818,   819,   826,
     127,  1344,   741,  1649,  1342,  1564,   710,  1710,  1717,   796,
    1652,   128,   223,  1591,  1592,   778,  1858,   204,   791,   791,
      67,   245,  1296,  1858,  1648,  1648,   904,   788,   966,   969,
     288,   316,  1946,   778,  1844,  1858,  1961,  1961,   789,   791,
     904,  2034,  1667,  1427,  1863,  1362,  1363,  1364,  1365,  1844,
     146,   144,   323,   467,  1849,  1855,  1864,  1869,  1870,  1871,
    1872,  1873,  1874,  1875,  1878,  2052,   179,   233,   763,  1928,
      26,   777,  1614,  1616,  1927,   959,   964,   154,   653,  1858,
      97,   903,  2075,   956,   964,   966,   967,   971,  1858,   996,
     998,   999,  2058,  2074,  1924,  1894,    42,  1848,  1427,   789,
    1495,   789,   789,   284,   431,  1427,  1427,    53,   300,   789,
     300,   791,  1470,   789,   778,   789,   791,   791,   789,   789,
    1387,   128,   789,  1472,  1473,  1427,   791,   791,   791,   777,
     789,   791,   789,   791,   791,   789,   788,  1841,  1848,  1494,
     789,   789,  1494,   789,   791,   791,   789,   789,   789,   151,
     791,   791,   789,   789,  1494,   789,   789,   789,   789,   791,
     128,   791,   789,   128,  1427,   128,  1427,   128,  1427,   128,
     789,   791,   789,  1494,   789,   789,   791,   791,   789,   791,
     791,   791,   789,   789,   789,   791,   789,   789,   791,   789,
     789,   789,  1844,   789,   789,   789,  1844,   791,   789,   791,
     791,   789,   791,   791,   791,   789,   789,   791,  1848,  1858,
     789,   796,    53,   508,   791,  1210,   789,   789,  1560,  1560,
    1500,   789,   794,  1848,   122,   202,   291,   739,   788,    50,
    1427,   438,  1429,  1429,   788,  1397,  1429,  1429,  1427,  1427,
    1578,   218,  1580,   788,   788,   788,   788,   788,   796,  1416,
    1466,  1467,  1468,   382,   788,  1039,  1040,  1032,  1039,  1033,
     595,  1042,   160,   476,  1427,   771,  1863,  1863,   791,  1924,
     431,   131,  1950,   128,   791,  1961,  1961,   791,  1427,  1839,
    1848,   796,   796,   796,    99,   144,   323,   467,   581,   758,
    1849,  1852,  1857,  1866,  1869,  1870,  1871,  1872,  1874,  1875,
    1878,  2052,  1907,   127,  1679,    57,    99,  1193,  1194,  1863,
      31,   582,   597,  1919,  1418,  1920,  1858,  1858,  1896,  1895,
     127,   584,   763,   508,   791,   791,  1679,  1920,   796,  1888,
     796,  1679,   791,   791,  1891,  1427,   789,  1858,   875,   875,
    1852,  1426,   875,  1745,  1745,   875,  1745,  1852,   128,  1744,
     869,  1745,   617,  1602,  1730,  1743,   829,  1740,  1844,  1745,
    1745,  1427,   259,  1534,  1692,   789,   791,  1684,   904,  1830,
    1835,    53,  1668,  1669,   903,  1860,    99,  1359,  1858,  1357,
    1844,  1025,  1368,   145,   160,  1219,  1370,   811,   791,   100,
    1769,   827,  1764,  1648,  1765,  1860,   931,   942,   791,   771,
     458,   565,  1858,  1935,  1936,  1852,  1648,   452,   463,   618,
     743,  1319,  1320,  1321,  1616,    47,  1779,   675,   791,   369,
    1300,  1726,   791,   127,  2027,  1083,  1084,   300,   730,  1231,
    1858,   316,  1945,  1971,   854,  1858,  1858,  1844,   834,   875,
    2071,  1087,  1087,  2017,  2018,  2017,  1844,   875,  1858,   875,
    1087,  1427,  1505,  1505,   794,   580,   720,   724,  1402,  1403,
    1454,  1403,  1543,  1833,   158,  1545,  1545,  1536,   158,   204,
     300,  1559,  1858,  1564,  1187,  1190,  1635,  1858,  1427,  1572,
    1840,  1570,   758,  1574,  1569,   316,   584,  1601,  1600,   511,
    1616,  1604,  1605,   443,  1604,  1604,  1848,   553,  1594,  1840,
     123,   788,  1083,  1852,  1680,  1680,   561,   269,   269,   661,
    1852,   269,   269,   269,    53,   183,   364,   410,   488,   551,
     567,   568,   572,   573,   574,   640,   693,   850,   851,    88,
     480,   590,   597,   603,   679,   742,   855,   856,  1849,    65,
     316,   750,  1965,   271,   373,   498,   570,   702,   764,  1959,
    1960,  1967,   316,  1974,  1924,   204,   865,  1262,   788,  1999,
    1252,  1326,   127,   884,   789,   791,  2035,   990,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   771,   771,   771,   771,   771,   771,   771,
     771,   771,   771,   791,   829,   741,  1554,  1555,  1403,  1663,
     300,  1858,  1507,   580,   168,  1606,   796,  1721,  1844,  1950,
    1863,  1924,   431,   915,   916,   970,    34,  1963,   337,   796,
     796,   288,   288,  1834,   981,  1668,   791,  1366,  1368,  1854,
     763,   510,   396,    24,    25,    28,    30,    32,   960,   154,
      76,    77,   144,   447,   448,   467,   758,   909,   910,   912,
     918,   946,   947,  1849,  1869,  1870,  1871,  1872,  1873,  1874,
    1875,  1878,  2052,  2054,  2065,  2076,   431,  2079,   795,   957,
     968,   789,   791,  1005,   994,  1000,  1859,  1000,  1000,   903,
    1857,  1427,   791,  1427,  1427,   284,    45,    46,    47,    48,
      49,    50,    51,    52,    53,    54,    55,    57,    58,    59,
      60,    63,    64,    65,    66,    67,    68,    69,    70,    71,
      72,    73,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    87,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   117,   118,   119,   120,   121,   122,   123,   124,   125,
     126,   128,   129,   130,   131,   132,   136,   137,   138,   139,
     140,   141,   142,   143,   144,   145,   146,   147,   148,   149,
     150,   151,   152,   153,   154,   155,   156,   157,   158,   159,
     160,   161,   162,   163,   164,   165,   166,   167,   168,   169,
     170,   171,   173,   174,   178,   179,   180,   181,   182,   183,
     184,   188,   190,   191,   192,   193,   194,   195,   197,   198,
     199,   200,   201,   202,   204,   205,   206,   207,   209,   210,
     211,   212,   213,   214,   215,   216,   217,   218,   220,   221,
     222,   223,   224,   225,   226,   227,   228,   229,   230,   231,
     232,   233,   234,   236,   237,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,   249,   250,   251,   252,
     253,   254,   255,   256,   257,   258,   260,   261,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   281,   282,   283,   284,   288,
     289,   290,   291,   292,   293,   294,   295,   296,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   308,   309,
     310,   311,   312,   313,   314,   315,   316,   317,   318,   319,
     332,   333,   334,   413,   414,   563,   581,   671,   723,   747,
    1151,  1496,  1497,  1498,  1849,  1868,  1869,  1870,  1871,  1872,
    1873,  1878,  1879,  2050,  2051,  2052,  1188,  1188,  1496,  1500,
     789,   153,   153,  1427,  1500,  1500,   791,  1427,  1427,  1427,
    1427,  1427,  1427,  1427,  1430,   796,   789,   789,  1427,  1427,
    1427,  1427,  1427,   789,  1427,  1427,  1427,  1427,   128,  1427,
     128,  1427,   128,  1427,   153,  1427,   789,  1443,  1427,  1442,
    1500,  1427,  1427,  1427,  1500,   776,  1614,  1619,   153,  1427,
    1427,  1427,  1427,  1427,   796,   796,  1858,    57,    71,  1205,
    1206,  1207,  1208,  1209,  1617,  1616,   789,   777,   777,  1396,
    1429,   789,   791,  1429,    50,  1427,   438,  1560,  1560,  1579,
    1858,    65,   789,  1480,  1499,  1427,  1458,  1499,  1427,  1448,
    1499,  1499,  1848,  1427,   789,   791,   788,  1048,  1430,  1040,
     168,  1078,  1079,  1617,   704,  1043,   342,  1035,  1031,   931,
     288,  1352,   288,   242,   588,  1962,  1862,   128,   128,  1414,
    1417,  1417,   796,   796,   796,  1679,  1418,  1863,  1906,  1679,
     788,   788,    47,    57,    99,   204,  1427,  1921,  1679,  1679,
    1920,   802,   233,   636,   663,  1918,  1916,  1915,  1905,  1858,
    1914,  1858,  1900,  1889,  1890,  1899,   437,   755,  1614,  1621,
    1735,    30,  1744,  1567,  1740,  1701,  1702,  1842,  1404,  1417,
    1416,  1687,  1689,  1692,   431,   789,   788,  1661,  1650,  1844,
     431,  1367,   788,  1692,   771,   829,   127,   316,  1760,  1761,
     940,   943,   944,   939,   577,   578,   654,   941,    36,    37,
     458,   503,   565,   608,   771,   772,   773,  1937,  1939,  1567,
     127,   128,  1322,  1320,   829,  1309,  1852,   740,  1310,  2031,
    2055,  1616,   549,   362,   476,   656,  1237,  1237,   204,  1231,
     337,  1974,   126,   204,   204,   833,   849,   850,  2072,  2009,
     875,  2105,   390,   880,  2014,  2015,  2016,  2106,   844,  2104,
     645,  2103,  1844,   791,  1403,    31,  1430,    50,   288,  1505,
    1536,   158,   158,  1505,  1536,  1526,  1527,   789,   791,  1554,
    1189,  1640,    16,    17,   791,  1573,    51,   104,  1595,  1426,
    1483,  1575,  1576,  1574,   719,  1601,  1605,  1412,   791,  1595,
    1599,  1416,  1629,  1630,  1631,  1194,  1189,   412,   412,   417,
     493,    56,   155,   186,   262,   286,  1165,  1680,  1680,    65,
    1680,  1682,  1680,   183,   551,   316,  1680,  1681,  1681,   851,
    1258,  1852,  1852,  1852,  1852,  1616,  1852,  1852,  1852,   789,
     791,  1852,    31,   597,  1860,  1968,  1969,    31,    31,    31,
      50,  1958,   537,   538,   541,   542,   543,  1972,  1973,   335,
     597,  1261,  1247,   394,   658,   241,  1263,  1858,  2000,    53,
    1999,    47,   382,  1328,   885,  1427,   284,   788,   788,  1616,
     788,  1616,  1616,  1852,  1852,  1621,  1852,  1616,  1852,  1852,
    1852,  1852,  1852,  1852,  1852,  1616,  1852,   408,   572,   676,
    1823,   122,   291,  1616,  1626,  1852,  1616,   819,  1534,  1552,
    1553,  1507,  1567,  1415,   252,  1604,   246,  1719,  1924,  1296,
     127,   917,   789,  1418,   969,   316,  1976,   588,   778,   778,
    1963,  1963,   113,   114,   115,   982,  1658,  1364,  1844,  1368,
     143,  1371,  1795,    57,    61,    62,    71,    96,   109,   125,
     153,   175,   176,   177,   185,   187,   203,   235,   259,   285,
     287,   307,   308,   358,   360,   361,   377,   413,   414,   435,
     459,   500,   562,   563,   578,   579,   620,   653,   717,   720,
     723,   730,   747,   767,  1151,  1152,  1154,  1155,  1157,  1158,
    1159,  1160,  1161,  1162,  1163,  1164,  1165,  1166,   474,    74,
      86,   791,   795,  1418,   967,  2060,   431,   796,  1427,  1427,
     788,  1172,  1173,  1175,  1175,   788,  1168,  1169,  1173,   788,
    1169,  1177,    95,   155,  1173,  1172,  1174,  1176,  1175,   155,
    1176,  1173,   789,   789,   789,   789,  1471,  1427,  1427,   789,
     207,  1489,  1489,  1427,   791,   791,   789,   791,   789,   789,
     789,   151,  1463,  1464,  1848,   789,   789,   789,   789,   789,
     791,   127,   791,  1427,  1427,  1427,  1427,   789,   789,    53,
    1437,   789,    53,   789,   789,   789,    28,    30,    32,    28,
      30,    32,   789,   791,  1427,   789,   789,   791,   791,   789,
    1848,  1858,   796,   788,  1200,  1200,    51,   104,   647,   776,
    1202,  1203,  1204,   791,   791,  1427,  1427,   789,  1500,  1429,
     789,   791,  1429,  1580,  1572,   207,  1482,   789,   789,   789,
     789,   789,   789,   788,  1417,  1468,  1036,  1037,  1038,  1858,
     789,  1621,   153,    65,   788,  1050,   771,   788,  1040,  1863,
    1844,   128,  1964,  1964,    53,  1422,  1852,  1858,   778,  1848,
    1858,  1858,  1908,  1427,  1920,  1919,    31,    31,  1417,  1417,
    1417,  1898,  1897,   391,   733,   233,  1920,  1679,  1679,  1920,
      24,    25,    28,    30,    32,  1602,  1736,  1745,   791,  1699,
    1679,  1564,  1692,   789,   791,   315,  1386,    11,    12,   259,
    1020,  1386,  1670,  1672,  1675,  1534,   788,   226,  1556,  1557,
    1558,  1858,   788,  1762,   233,   771,   791,  1938,  1602,   741,
     558,   517,   684,   685,   826,  1311,  1844,   204,  1862,  1261,
     412,  1844,  1844,    11,    13,    18,   145,   167,   216,   273,
     274,   275,   293,   350,   352,   372,   390,   397,   412,   419,
     434,   491,   501,   539,   552,   591,   597,   621,   655,   662,
     697,   712,   713,   725,   762,  1016,  1018,  1089,  1091,  1092,
    1094,  1095,  1096,  1098,  1099,  1100,  1107,  1849,  1089,   788,
     898,   875,   858,  2036,  1852,  2014,  2036,  1999,   788,   902,
    2041,    96,   155,   235,   699,  1105,  2041,   845,  1522,  1403,
    1403,   204,  1529,  1536,  1536,   204,  1531,  1427,   788,  1025,
    1858,   382,  1802,  1840,    53,   791,  1840,  1600,  1604,  1427,
     789,   791,   296,   319,   671,  1170,   776,  1614,  1620,   776,
    1614,  1618,  1618,  1620,  1619,  1619,  1663,   856,    31,    53,
     300,  1966,  1970,   209,  1959,  1616,  1616,  1616,  1823,   776,
    1614,  1615,  1972,   174,   295,  1259,   450,    46,    48,    49,
      70,    72,    78,   110,   174,   205,   207,   218,   241,   342,
     379,   423,   424,   430,   442,   463,   487,   554,   622,   633,
     634,   635,   729,  1023,  1090,  1092,  1266,  1271,  1273,  1276,
    1282,  1283,  1284,  1287,  1288,  1588,  1433,  1982,   346,   441,
     859,   288,   423,   430,   861,   789,   791,  2001,  2002,    53,
      47,   788,  1329,  2035,   822,   823,  1616,   824,   825,  1616,
     820,   821,  1616,   143,   299,   463,  1547,  1548,  1551,  1567,
    1612,  1613,  1858,   443,   252,  1720,  1714,  1416,  1427,   131,
    1971,  1971,   979,  2034,   979,  1670,  1371,   506,   143,   332,
    1801,  1175,  1175,   395,  1173,  1181,  1183,  1168,   225,  1168,
    1181,    57,    71,    73,   307,   345,   363,   737,  1156,  1161,
    1163,  1183,  1187,  1196,  1198,  1156,  1181,  1156,  1168,   788,
    1181,  1156,  1175,  1175,  1156,  1175,   788,  1168,  1181,    71,
     308,   308,   311,  1168,  1175,   730,   788,   908,  1175,  1175,
    1175,   580,  1175,  1175,  1168,   911,   311,  1175,  1175,  1175,
    1175,  1175,  1177,   127,   127,  2077,  1858,  1427,  1006,   994,
    1858,    24,    28,    30,    32,  1197,  1198,    30,    30,  1174,
    1197,  1197,   789,  1560,  1560,    65,   257,  1488,   168,  1491,
    1492,   789,  1427,  1427,  1500,   194,   361,   789,   316,  1465,
    1427,  1427,  1427,  1560,    96,   109,   125,   155,   235,   296,
     413,   414,   562,   563,   723,  1161,  1162,  1438,  1439,  1440,
    1441,  1496,  1626,  1560,  1427,  1427,  1858,  1617,   789,  1210,
    1205,  1203,  1205,  1206,  1616,   789,  1500,   207,  1581,    65,
     789,  1499,  1422,   789,   791,   351,  1081,  1427,  1034,   218,
    1051,  1052,  1053,  1617,  1036,  1964,  1852,  1858,   796,  1679,
    1679,  1920,  1417,   789,   789,  1920,  1920,  1902,  1901,  1602,
    1702,  1567,    99,  1691,  1554,  1417,  1692,   789,  1673,  1674,
    1837,  1838,  1842,  1858,  1825,  1671,  1719,  1675,    47,  1272,
    1280,  1281,  1858,   789,   791,  1621,  1770,  1771,   451,   174,
     251,   366,   374,   389,   399,   400,   401,   409,   547,   559,
     644,   659,   700,   714,   945,   944,   788,   771,   771,   771,
     791,   836,  1844,   762,   840,   842,    75,   598,   796,  1108,
    1109,  1110,  1111,  1119,  1120,  1125,  1126,  1127,  1219,  1222,
    1223,  1843,  1858,   167,   749,   422,  1844,  1680,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,   422,  1680,  1680,
    1680,  1680,  1680,  1680,  1680,  1680,  1680,  1680,   425,   545,
    1858,  1680,  1680,  1021,  1022,  1023,   791,  1091,  1679,  1017,
     899,   877,    54,   339,  1014,   204,   227,   467,  2031,  2098,
    2099,  2100,    97,   227,   467,  2046,  2047,  2048,  2087,  2088,
    2093,  2100,    53,   889,   890,   645,  2043,   681,  2043,  1999,
      22,    29,    31,  1506,  1528,   300,  1530,   300,  1559,   117,
     118,   206,   283,  1803,  1804,   170,  1805,  1595,  1577,  1576,
    1595,  1601,  1600,  1417,  1631,   319,   296,    24,    28,    30,
      32,    24,    28,    30,    32,    28,    30,    32,    28,    30,
     597,  1852,  1968,    30,    30,   597,    99,   153,   564,  1260,
      75,   218,   388,   598,   709,  1111,  1119,  1120,  1289,  1219,
    1289,   218,  1289,   218,   218,   282,   288,    75,   126,   218,
     598,   709,  1124,  1219,  1289,  1680,   218,    65,  1025,    53,
     288,   388,   771,  1219,  1298,  1680,   218,   159,   712,   159,
     218,   712,  1289,   218,   596,   218,   218,   218,  1090,   791,
    1022,  1271,   788,  1110,   607,  1427,  1427,   204,   865,   875,
     204,   390,   866,  1858,  1663,  1386,  2001,  1330,   489,   789,
     791,   789,   791,   789,   791,  1219,  1219,  1548,  1612,  1716,
     128,   443,  1413,  1663,  1372,  1825,  1417,   588,   316,  1975,
    1975,   204,  1693,   154,  1181,  1180,  1679,  1181,  1170,  1171,
    1171,  1196,    57,    99,  1193,  1181,  1156,  1197,  1188,    57,
      73,  1171,  1244,  1818,  1181,  1244,  1171,   311,  1171,  1181,
     580,   906,   907,  1858,  2057,    99,  2031,  2064,  1156,   905,
     946,  1156,  1171,   238,  1167,  2064,  1197,    57,  1199,  1156,
    1181,  1171,  1171,   913,   921,   922,  1616,   788,   914,  1417,
    1000,   789,   789,   789,   789,   791,   789,   789,  1490,  1840,
    1818,  1491,  1493,  1603,   789,   789,   791,   789,   502,   553,
     617,   789,   789,  1168,   155,  1176,    71,  1176,  1197,   789,
     789,   791,   789,   789,   789,  1201,   789,   791,   789,    65,
     230,   252,  1582,  1583,  1840,   789,  1038,  1560,   160,   476,
     789,   791,  1054,   789,   778,  1910,  1909,  1920,  1920,   829,
    1591,   410,  1831,   789,   791,   796,  1387,  1677,  1678,  1842,
    1663,   789,   791,  1557,   789,   791,    50,  1772,  1689,  1852,
    1852,  1852,   826,   788,   838,  1860,   788,   788,  1243,  1843,
      10,   127,  1121,  1858,   789,   791,    72,   126,   226,   294,
    1123,  1218,  1125,  1087,  1219,  1220,  1220,  1128,   796,  1844,
    1680,    99,  1616,  1625,    99,  1616,    99,  1616,    99,  1616,
    1093,  1621,  1616,  1616,  1852,  1852,  1680,  1616,  1860,   458,
     503,   572,  1104,  1616,  1621,  1621,    99,  1616,  1852,    99,
     393,   395,   429,   459,   592,   626,  1103,  1625,  1616,  1625,
    1019,  1801,  1091,    26,    28,    30,    32,    99,  1622,  1623,
    1852,  1858,  1089,   148,   151,   213,   893,   894,   895,   896,
     897,   900,  1858,  2066,  2067,  2068,   878,   879,  1982,  2073,
     101,   150,   297,  1015,   658,  1421,  2091,  1421,  2089,   431,
    2100,   910,   946,  2091,  2089,   903,  2049,  2046,  2088,  2093,
    2001,   789,   891,   900,  2044,   877,  2069,  1852,  2069,    53,
      31,   382,  1508,  1426,   788,  1427,   788,   789,    65,    65,
     117,    65,  1804,   272,   283,  1806,  1807,  1601,   788,   450,
      30,   335,   141,  1087,   141,  1086,   749,  1086,  1653,  1653,
    1347,  1653,  1272,  1281,  1844,  1187,  1653,   160,  1654,    10,
    1653,   749,   226,  1653,  1653,    99,  1858,  1347,  1589,  1590,
    1842,  1024,  1653,  1653,  1844,    99,  1858,  1347,  1281,  1653,
    1347,  1347,  1347,  1272,    46,    78,   110,  1284,  1106,  1108,
     339,   458,  1297,  1560,   674,  1852,   426,  1264,   316,  2003,
    1663,  1333,  1858,    47,   788,  1331,   823,   825,   821,   127,
    1546,  1546,  1718,  1663,  1430,  1417,   131,  1972,  1977,  1978,
     428,  1719,   282,  1858,    57,    99,  1193,   789,   791,   789,
     905,   789,   791,  1149,  1151,  1152,  1153,  1418,  2064,   796,
     771,  1199,   210,   266,   270,   919,   920,   921,   924,  1433,
    1858,   892,   901,  2067,   127,    30,   791,  1595,   789,  1427,
     553,   449,  1621,   789,  1616,  1594,   789,    55,   407,   414,
     720,   723,   732,  1584,  1585,  1822,  1595,   692,  1080,  1035,
     788,  1041,  1053,  1055,  1858,  1920,  1920,  1606,  1832,  1837,
     778,  1858,   789,   791,  1679,  1281,  1771,   423,   789,  1239,
    1241,  1242,  1858,   788,   587,  1239,  1242,  1858,   788,  1858,
    1109,   788,   160,   160,  1220,  1087,   237,  1212,  1243,  1858,
    1087,  1087,   144,   358,   360,   361,   377,   413,   414,   435,
     459,   500,   562,   563,   578,   579,   620,   664,   717,   720,
     723,   747,   767,   946,  1129,  1150,  1153,  1849,  1869,  1870,
    1871,  1872,  1873,  1878,  2052,  1858,   789,  1852,   788,  1852,
      53,  1082,  1021,   653,   730,  1149,   789,   791,   893,  2064,
     105,  2079,   580,  2006,   859,  1858,   795,  1858,   795,  1420,
     795,  2036,  2096,  2036,  2094,   431,  2107,   791,   653,   730,
    1149,  2045,  2070,  2039,  2039,  2001,   788,   789,  1559,  1559,
    1818,  1818,    65,  1818,    65,    65,  1807,    31,  1260,   415,
    1259,  1433,  1347,  1433,  1121,  1858,  1843,  1272,  1843,  1268,
     288,  1270,  1189,  1843,  1653,  1280,   127,   160,  1843,  1843,
    1272,   791,  1595,  1028,  1858,  1843,  1617,   316,  1127,  1272,
    1277,  1272,   789,  1858,   860,   867,   868,    72,   365,   510,
     789,   791,  1332,   136,   158,   207,  1550,  1549,  1663,   288,
     588,  1978,  1694,  1663,  1844,  1197,  1818,  1197,  2064,   906,
    1168,  1427,  1858,    30,   791,  2079,   465,   789,   791,   916,
     789,  1840,   789,   789,   789,   732,  1585,  1586,  1822,   653,
     605,   444,  1587,   605,  1822,  1081,   788,  1048,  1044,    99,
     304,   305,   407,   479,  1056,  1700,  1835,   796,  1678,  1692,
     371,   789,   791,  1595,   788,  1239,   788,   789,   789,  1858,
     788,  1427,  1087,  1243,  1858,  1844,   300,  1230,   730,  1243,
    1243,  1131,   796,  1122,  1123,  1130,   796,  1765,  1020,  1019,
     730,   908,   580,   900,     6,   852,  1858,  2007,   204,   864,
     865,  2092,  2090,  2039,  1421,   795,  1421,   795,  1420,   900,
     730,   908,   580,  2078,   196,  1509,  1510,  1858,  1564,   789,
     789,  1818,  1818,  1818,   789,   120,  1274,   120,   144,   197,
    1238,   110,   259,  1127,  1341,   282,   288,    73,  1843,  1858,
    1296,  1267,  1590,   288,   288,   282,  1297,  1278,  1280,  1269,
     692,   862,  2079,   588,    72,    72,  1858,   226,  1334,  1335,
    1858,    65,    65,   788,   788,  1430,   160,  1534,  1167,  1417,
     796,   920,   901,  1595,   462,    50,   462,   136,   407,   572,
     719,  1046,  1047,  1858,   789,   703,  1049,  1058,   718,   145,
     390,   397,   412,   539,   552,   569,   712,  1072,  1073,  1074,
    1077,  1094,  1739,  1663,   245,   778,  1924,  1241,    30,   791,
    1240,   855,  1924,  1924,   791,  1858,   789,  1243,  1230,   730,
     788,  1213,  1237,  1112,  1237,  1114,  1115,    18,   226,   294,
     390,   499,   760,  1094,  1132,  1133,  1142,  1184,  1185,  1186,
    1211,  1433,  1153,    73,    99,   202,   204,   350,   469,   664,
    1136,  1138,  1178,  1179,  1185,  1858,   789,  1097,  1098,   580,
    1858,   791,  1416,   861,   898,  2042,  2041,  2097,  2095,  2039,
     580,  1858,   852,   219,   789,   791,  1511,  1843,   595,   788,
    1275,   144,    99,    99,  1297,  1844,   218,  1194,  1347,  1858,
    1843,  1844,  1279,  1319,  1427,   432,   863,   852,   588,   588,
     789,   791,  1556,  1558,   297,  1796,  1858,  1586,   653,   210,
     326,   789,   791,  1617,   788,  1060,  1062,  1057,   422,  1680,
    1680,   422,  1680,  1680,  1680,  1680,   788,  1067,  1074,   434,
     300,   390,   501,   730,   752,  1094,  1224,  1227,  1232,  1233,
    1234,  1238,  1595,   789,  1858,   789,   789,   316,  1225,  1229,
    1233,  1236,  1226,  1228,  1233,  1235,  1858,   791,  1118,  1116,
    1237,  1214,  1858,   181,  1215,   788,  1113,   788,   788,   160,
    1852,   709,  1185,   749,   160,   202,  1193,    19,    20,   776,
     777,   788,  1146,  1147,  1148,  1397,  1449,  1821,   297,   343,
      99,    53,  1179,  1858,   796,  1858,  2010,   866,   877,  2043,
    2038,  2079,  2037,  2078,  1858,   796,  1506,  1510,   127,  1155,
    1157,  1158,  1159,  1513,  1514,  1123,  1617,  1051,  1148,   316,
     760,  1285,  1053,  1285,   154,  1427,  1335,   789,   789,  1695,
    1190,  1045,  1047,   788,  1061,  1062,  1063,   183,  1059,  1062,
    1680,  1852,  1852,  1680,  1622,  1622,  1617,  1860,   704,  1068,
    1069,  1680,  1237,  1852,  1680,  1237,  1286,  1287,  1288,  1234,
     760,  1924,   593,  1286,  1236,  1286,  1235,   789,  1858,   788,
     788,  1117,   789,   791,   466,   594,   672,   204,  1216,  1239,
     788,  1239,  1242,   430,  1182,  1823,  1823,  1145,   199,   745,
     653,  1146,   796,  1858,  1844,   426,   877,     6,  2040,  2040,
     796,  1858,  1512,   208,   120,   219,   789,   744,   744,  1025,
    1285,  1025,   788,  1703,  1704,  1842,  1797,  1049,   789,   791,
     183,  1065,  1066,  1430,  1852,  1852,  1070,   789,   791,  1101,
    1860,  1616,  1288,  1287,   589,  1224,  1849,   789,  1239,  1239,
     788,  1858,   101,   297,   789,  1239,   789,   789,   789,   788,
    1423,   431,   693,  1137,  1858,   796,   127,   867,  1858,   796,
    1508,   219,  1506,  1025,  1051,   791,  1679,   252,  1808,  1062,
     791,  1064,  1071,  1860,  1069,  1286,   789,  1240,  1239,    67,
     245,   259,   572,  1217,  1217,  1224,   789,  1225,  1226,   789,
    1617,  1134,  1135,  1184,  1134,   599,   698,   753,  1139,  1858,
    1416,  1858,  1506,    99,   202,   436,  1515,  1517,  1518,  1519,
     789,  1704,  1692,   484,  1802,  1066,   789,  1075,  1076,  1077,
    1212,   789,  1240,    99,   202,   336,   204,   204,  1224,   789,
    1184,  1140,  1141,  1142,  2011,  1516,  1821,  1822,   204,  1517,
    1519,  1517,  1518,    65,  1805,  1077,  1224,   789,   297,   101,
    1142,   112,   116,   436,   204,   204,  1818,   143,  1809,  1224,
    1217,  1217,   653,    30,   788,  1811,  2012,   170,   252,  1810,
       3,   789,  1812,  1813,  1842,   259,  1814,   461,   604,  2004,
    2005,  1860,   789,   791,  1815,  1816,  1842,  1663,  1860,  2013,
    1813,   791,  1679,  2079,  1816,  1416,   852,  1692,  1417
};

/* YYR1[RULE-NUM] -- Symbol kind of the left-hand side of rule RULE-NUM.  */
static const yytype_int16 yyr1[] =
{
       0,   798,   799,   800,   799,   799,   801,   801,   802,   802,
     802,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   803,   803,   803,   803,   803,   803,   803,   803,   803,
     803,   804,   805,   805,   807,   806,   808,   809,   810,   808,
     811,   812,   811,   813,   813,   815,   814,   817,   816,   818,
     818,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   819,   819,   819,   819,   819,   819,   819,   819,   819,
     819,   820,   820,   820,   821,   822,   822,   822,   823,   824,
     824,   824,   825,   826,   826,   826,   826,   826,   826,   826,
     826,   827,   827,   828,   829,   829,   830,   832,   833,   831,
     834,   831,   835,   836,   831,   837,   838,   831,   839,   840,
     831,   841,   842,   831,   843,   831,   844,   831,   845,   831,
     846,   831,   847,   831,   831,   831,   848,   831,   831,   849,
     849,   850,   850,   851,   851,   851,   851,   851,   851,   851,
     851,   851,   851,   851,   851,   851,   851,   851,   852,   852,
     854,   853,   855,   855,   856,   856,   856,   856,   856,   856,
     856,   856,   856,   858,   857,   860,   859,   859,   861,   861,
     861,   861,   862,   862,   863,   863,   864,   864,   865,   866,
     866,   868,   867,   869,   870,   870,   871,   871,   871,   871,
     872,   872,   873,   873,   874,   874,   875,   875,   876,   876,
     877,   877,   878,   878,   878,   878,   878,   878,   878,   879,
     879,   880,   880,   882,   881,   883,   881,   884,   881,   885,
     886,   885,   887,   887,   888,   888,   889,   890,   889,   891,
     891,   892,   892,   893,   894,   895,   895,   896,   896,   897,
     897,   897,   899,   898,   900,   901,   902,   903,   903,   904,
     904,   905,   905,   905,   906,   907,   907,   908,   909,   911,
     910,   910,   910,   913,   912,   914,   914,   915,   917,   916,
     918,   918,   918,   918,   919,   919,   920,   921,   921,   922,
     923,   923,   924,   924,   924,   924,   924,   924,   925,   925,
     926,   927,   927,   928,   928,   929,   929,   930,   930,   931,
     931,   931,   932,   932,   932,   932,   932,   932,   932,   932,
     932,   932,   932,   932,   932,   933,   935,   934,   936,   936,
     937,   937,   938,   938,   939,   940,   940,   941,   941,   941,
     942,   943,   943,   944,   945,   945,   945,   945,   945,   945,
     945,   945,   945,   945,   945,   945,   945,   945,   946,   946,
     947,   947,   949,   948,   951,   950,   952,   952,   954,   953,
     953,   955,   955,   956,   955,   957,   955,   958,   958,   959,
     958,   960,   958,   961,   962,   963,   965,   964,   966,   968,
     967,   970,   969,   971,   971,   972,   972,   973,   973,   973,
     974,   975,   975,   975,   976,   976,   977,   978,   978,   980,
     981,   979,   982,   982,   982,   982,   984,   983,   986,   985,
     985,   987,   987,   988,   988,   990,   989,   992,   991,   993,
     993,   994,   994,   995,   995,   996,   997,   997,   997,   998,
     999,  1000,  1002,  1001,  1003,  1001,  1004,  1005,  1006,  1001,
    1007,  1001,  1009,  1008,  1010,  1008,  1011,  1012,  1008,  1013,
    1008,  1014,  1014,  1015,  1015,  1015,  1017,  1016,  1016,  1016,
    1018,  1018,  1019,  1019,  1020,  1020,  1021,  1022,  1022,  1024,
    1023,  1025,  1027,  1026,  1029,  1028,  1030,  1031,  1030,  1030,
    1030,  1032,  1030,  1030,  1033,  1030,  1034,  1034,  1035,  1035,
    1036,  1036,  1037,  1037,  1038,  1039,  1040,  1041,  1042,  1042,
    1043,  1044,  1043,  1045,  1043,  1046,  1046,  1047,  1048,  1049,
    1049,  1050,  1050,  1051,  1051,  1052,  1052,  1054,  1053,  1055,
    1056,  1057,  1056,  1058,  1056,  1056,  1056,  1056,  1059,  1059,
    1060,  1060,  1061,  1061,  1063,  1064,  1062,  1065,  1065,  1066,
    1066,  1067,  1067,  1068,  1068,  1070,  1069,  1071,  1072,  1072,
    1073,  1073,  1074,  1074,  1075,  1075,  1076,  1076,  1077,  1077,
    1077,  1077,  1077,  1077,  1077,  1077,  1077,  1078,  1079,  1078,
    1078,  1080,  1080,  1081,  1081,  1082,  1082,  1083,  1083,  1084,
    1084,  1085,  1085,  1085,  1086,  1086,  1087,  1087,  1088,  1088,
    1089,  1089,  1090,  1090,  1091,  1091,  1091,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1093,  1092,  1092,
    1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,  1092,
    1092,  1092,  1092,  1094,  1094,  1094,  1094,  1095,  1095,  1096,
    1096,  1097,  1097,  1098,  1099,  1100,  1101,  1102,  1103,  1103,
    1103,  1103,  1103,  1103,  1103,  1104,  1104,  1104,  1105,  1105,
    1105,  1105,  1106,  1107,  1108,  1108,  1109,  1109,  1109,  1109,
    1109,  1110,  1110,  1112,  1111,  1113,  1111,  1114,  1111,  1115,
    1111,  1116,  1111,  1117,  1111,  1118,  1111,  1119,  1120,  1121,
    1122,  1122,  1123,  1124,  1124,  1125,  1125,  1126,  1128,  1127,
    1130,  1129,  1131,  1129,  1132,  1132,  1133,  1133,  1134,  1134,
    1135,  1135,  1136,  1136,  1137,  1136,  1136,  1136,  1138,  1138,
    1139,  1139,  1139,  1139,  1140,  1140,  1141,  1141,  1142,  1142,
    1142,  1142,  1144,  1143,  1145,  1145,  1146,  1146,  1147,  1147,
    1148,  1148,  1149,  1150,  1150,  1151,  1151,  1151,  1152,  1152,
    1152,  1152,  1152,  1153,  1153,  1154,  1154,  1155,  1155,  1155,
    1155,  1155,  1155,  1155,  1155,  1155,  1155,  1156,  1156,  1156,
    1157,  1157,  1157,  1157,  1157,  1157,  1157,  1157,  1158,  1158,
    1158,  1158,  1158,  1159,  1159,  1159,  1159,  1159,  1159,  1159,
    1159,  1159,  1159,  1159,  1159,  1159,  1159,  1159,  1160,  1160,
    1161,  1162,  1162,  1163,  1163,  1164,  1164,  1164,  1164,  1164,
    1165,  1165,  1165,  1165,  1165,  1166,  1166,  1166,  1167,  1167,
    1168,  1168,  1168,  1169,  1170,  1170,  1170,  1170,  1170,  1170,
    1171,  1172,  1172,  1172,  1172,  1173,  1174,  1175,  1175,  1176,
    1176,  1177,  1177,  1178,  1178,  1179,  1179,  1179,  1179,  1179,
    1179,  1179,  1180,  1180,  1181,  1181,  1182,  1182,  1183,  1184,
    1184,  1184,  1185,  1185,  1185,  1186,  1186,  1187,  1187,  1188,
    1188,  1189,  1189,  1190,  1190,  1191,  1191,  1192,  1192,  1193,
    1194,  1194,  1194,  1195,  1195,  1196,  1196,  1196,  1197,  1197,
    1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,  1198,
    1198,  1199,  1199,  1201,  1200,  1202,  1202,  1203,  1204,  1204,
    1204,  1204,  1205,  1206,  1207,  1207,  1208,  1209,  1209,  1210,
    1210,  1211,  1211,  1212,  1213,  1213,  1214,  1214,  1215,  1215,
    1215,  1215,  1216,  1216,  1216,  1216,  1216,  1217,  1217,  1217,
    1217,  1217,  1218,  1218,  1219,  1219,  1220,  1220,  1221,  1221,
    1221,  1222,  1223,  1223,  1224,  1224,  1225,  1225,  1226,  1226,
    1227,  1227,  1228,  1228,  1229,  1229,  1230,  1230,  1231,  1231,
    1231,  1232,  1232,  1233,  1233,  1233,  1233,  1233,  1234,  1234,
    1235,  1236,  1236,  1237,  1237,  1237,  1238,  1238,  1239,  1239,
    1240,  1240,  1241,  1241,  1242,  1243,  1243,  1244,  1244,  1246,
    1247,  1245,  1248,  1245,  1249,  1245,  1245,  1250,  1245,  1251,
    1245,  1252,  1245,  1253,  1245,  1254,  1245,  1255,  1245,  1245,
    1256,  1257,  1258,  1245,  1259,  1259,  1260,  1260,  1260,  1260,
    1261,  1261,  1261,  1261,  1261,  1262,  1262,  1262,  1262,  1263,
    1263,  1264,  1264,  1265,  1265,  1266,  1266,  1266,  1266,  1266,
    1266,  1266,  1266,  1266,  1266,  1267,  1266,  1266,  1268,  1266,
    1269,  1266,  1266,  1266,  1266,  1266,  1266,  1270,  1266,  1271,
    1272,  1272,  1274,  1273,  1275,  1275,  1275,  1277,  1276,  1278,
    1279,  1278,  1280,  1280,  1281,  1282,  1282,  1283,  1284,  1284,
    1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,
    1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,
    1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,  1284,
    1284,  1285,  1285,  1285,  1286,  1286,  1286,  1286,  1286,  1287,
    1287,  1288,  1288,  1289,  1289,  1290,  1290,  1292,  1291,  1293,
    1293,  1294,  1294,  1295,  1295,  1296,  1296,  1296,  1297,  1297,
    1297,  1298,  1298,  1298,  1298,  1300,  1299,  1301,  1299,  1299,
    1299,  1302,  1303,  1303,  1304,  1304,  1305,  1305,  1305,  1307,
    1306,  1308,  1308,  1309,  1309,  1309,  1310,  1310,  1310,  1310,
    1310,  1311,  1311,  1313,  1312,  1314,  1314,  1314,  1315,  1316,
    1315,  1318,  1317,  1319,  1319,  1320,  1320,  1321,  1321,  1321,
    1321,  1322,  1322,  1322,  1324,  1323,  1325,  1325,  1326,  1327,
    1327,  1328,  1328,  1329,  1330,  1329,  1331,  1332,  1331,  1333,
    1333,  1333,  1334,  1334,  1334,  1335,  1335,  1336,  1336,  1337,
    1338,  1337,  1340,  1339,  1341,  1341,  1342,  1342,  1343,  1343,
    1343,  1343,  1343,  1343,  1344,  1344,  1346,  1345,  1347,  1347,
    1347,  1349,  1348,  1348,  1350,  1350,  1351,  1351,  1352,  1354,
    1353,  1355,  1355,  1356,  1356,  1357,  1358,  1359,  1359,  1361,
    1360,  1362,  1362,  1363,  1363,  1364,  1365,  1367,  1366,  1369,
    1368,  1370,  1370,  1371,  1371,  1373,  1372,  1374,  1372,  1376,
    1375,  1377,  1375,  1378,  1378,  1380,  1379,  1382,  1383,  1381,
    1384,  1385,  1386,  1386,  1387,  1387,  1389,  1388,  1390,  1388,
    1391,  1391,  1392,  1393,  1392,  1392,  1394,  1394,  1395,  1396,
    1397,  1397,  1398,  1398,  1399,  1400,  1400,  1401,  1401,  1402,
    1402,  1402,  1403,  1403,  1403,  1404,  1405,  1405,  1406,  1406,
    1407,  1407,  1407,  1407,  1408,  1408,  1409,  1409,  1409,  1410,
    1410,  1411,  1411,  1412,  1412,  1412,  1412,  1413,  1413,  1413,
    1414,  1414,  1415,  1416,  1417,  1418,  1419,  1420,  1421,  1422,
    1422,  1422,  1422,  1422,  1423,  1423,  1423,  1424,  1424,  1424,
    1425,  1425,  1426,  1427,  1427,  1427,  1427,  1427,  1428,  1428,
    1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,  1428,
    1429,  1429,  1429,  1429,  1429,  1429,  1429,  1429,  1429,  1429,
    1429,  1429,  1429,  1429,  1429,  1429,  1430,  1430,  1430,  1430,
    1430,  1430,  1430,  1430,  1430,  1430,  1430,  1430,  1430,  1430,
    1430,  1430,  1430,  1430,  1430,  1431,  1431,  1432,  1432,  1433,
    1433,  1434,  1434,  1435,  1435,  1435,  1435,  1435,  1435,  1436,
    1436,  1437,  1437,  1438,  1438,  1438,  1439,  1439,  1439,  1439,
    1439,  1439,  1440,  1440,  1440,  1441,  1441,  1442,  1443,  1443,
    1444,  1444,  1444,  1444,  1445,  1446,  1446,  1447,  1448,  1448,
    1448,  1448,  1448,  1448,  1448,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,  1449,
    1449,  1449,  1449,  1449,  1450,  1450,  1450,  1450,  1451,  1451,
    1452,  1452,  1452,  1452,  1452,  1452,  1453,  1453,  1454,  1454,
    1455,  1455,  1455,  1455,  1455,  1455,  1455,  1455,  1455,  1455,
    1455,  1455,  1455,  1455,  1455,  1455,  1455,  1455,  1455,  1455,
    1455,  1455,  1456,  1456,  1457,  1457,  1458,  1458,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,  1459,
    1459,  1459,  1459,  1459,  1459,  1460,  1460,  1460,  1460,  1460,
    1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1460,  1462,
    1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,  1461,
    1461,  1463,  1463,  1464,  1464,  1465,  1465,  1466,  1466,  1467,
    1467,  1468,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1470,
    1471,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,  1469,
    1469,  1469,  1472,  1469,  1473,  1469,  1474,  1469,  1475,  1475,
    1476,  1476,  1476,  1477,  1477,  1477,  1477,  1477,  1477,  1477,
    1477,  1477,  1477,  1477,  1477,  1477,  1478,  1480,  1479,  1479,
    1481,  1481,  1482,  1483,  1485,  1484,  1486,  1486,  1486,  1486,
    1487,  1487,  1488,  1488,  1489,  1489,  1490,  1490,  1491,  1491,
    1492,  1493,  1495,  1494,  1496,  1496,  1496,  1496,  1496,  1496,
    1496,  1496,  1497,  1497,  1497,  1497,  1497,  1497,  1497,  1497,
    1498,  1498,  1498,  1498,  1499,  1499,  1500,  1500,  1501,  1501,
    1502,  1502,  1503,  1503,  1504,  1504,  1505,  1505,  1506,  1506,
    1506,  1507,  1508,  1509,  1509,  1511,  1510,  1512,  1510,  1513,
    1513,  1513,  1514,  1514,  1514,  1514,  1515,  1515,  1515,  1515,
    1515,  1516,  1516,  1517,  1517,  1517,  1518,  1519,  1521,  1522,
    1520,  1523,  1523,  1524,  1524,  1525,  1526,  1525,  1527,  1525,
    1525,  1528,  1525,  1529,  1525,  1525,  1530,  1525,  1531,  1525,
    1525,  1532,  1532,  1532,  1533,  1533,  1534,  1534,  1535,  1536,
    1536,  1536,  1536,  1536,  1537,  1537,  1538,  1538,  1539,  1539,
    1540,  1540,  1541,  1541,  1542,  1543,  1544,  1545,  1545,  1546,
    1546,  1546,  1546,  1547,  1547,  1549,  1548,  1550,  1548,  1551,
    1551,  1552,  1553,  1552,  1555,  1554,  1556,  1556,  1557,  1557,
    1558,  1558,  1559,  1559,  1560,  1560,  1560,  1560,  1560,  1560,
    1560,  1560,  1560,  1560,  1560,  1560,  1561,  1561,  1561,  1561,
    1561,  1561,  1561,  1561,  1561,  1562,  1562,  1562,  1562,  1563,
    1563,  1563,  1564,  1564,  1565,  1566,  1566,  1567,  1568,  1567,
    1569,  1570,  1569,  1571,  1571,  1572,  1572,  1573,  1573,  1573,
    1574,  1574,  1575,  1575,  1576,  1578,  1577,  1579,  1579,  1580,
    1580,  1581,  1581,  1582,  1582,  1583,  1583,  1584,  1584,  1585,
    1585,  1585,  1586,  1586,  1586,  1587,  1587,  1587,  1587,  1587,
    1587,  1588,  1589,  1589,  1590,  1591,  1591,  1593,  1592,  1594,
    1594,  1595,  1595,  1595,  1596,  1596,  1597,  1597,  1597,  1597,
    1598,  1598,  1598,  1598,  1598,  1599,  1599,  1600,  1600,  1601,
    1601,  1602,  1603,  1603,  1603,  1604,  1604,  1604,  1604,  1604,
    1604,  1605,  1606,  1606,  1606,  1606,  1607,  1607,  1607,  1608,
    1608,  1609,  1610,  1611,  1611,  1611,  1612,  1612,  1613,  1613,
    1614,  1614,  1615,  1615,  1616,  1616,  1616,  1616,  1616,  1616,
    1617,  1617,  1617,  1617,  1617,  1618,  1618,  1618,  1618,  1618,
    1619,  1619,  1619,  1619,  1619,  1619,  1620,  1620,  1620,  1620,
    1620,  1620,  1620,  1620,  1621,  1621,  1621,  1621,  1621,  1622,
    1622,  1622,  1622,  1622,  1623,  1624,  1624,  1625,  1625,  1626,
    1626,  1626,  1628,  1627,  1629,  1629,  1630,  1630,  1631,  1633,
    1632,  1634,  1634,  1635,  1636,  1636,  1636,  1637,  1639,  1640,
    1638,  1638,  1638,  1642,  1641,  1644,  1643,  1645,  1643,  1643,
    1643,  1643,  1646,  1643,  1643,  1643,  1643,  1647,  1643,  1643,
    1648,  1648,  1649,  1650,  1651,  1651,  1652,  1653,  1653,  1654,
    1654,  1655,  1655,  1657,  1658,  1656,  1660,  1661,  1659,  1662,
    1663,  1664,  1664,  1664,  1665,  1665,  1666,  1666,  1667,  1667,
    1669,  1668,  1670,  1670,  1671,  1670,  1672,  1673,  1673,  1674,
    1674,  1675,  1676,  1676,  1677,  1677,  1678,  1679,  1679,  1680,
    1680,  1681,  1681,  1682,  1682,  1684,  1683,  1686,  1685,  1687,
    1687,  1688,  1688,  1689,  1689,  1690,  1690,  1691,  1691,  1692,
    1692,  1693,  1694,  1695,  1693,  1696,  1696,  1698,  1699,  1700,
    1697,  1701,  1701,  1702,  1702,  1703,  1703,  1704,  1705,  1705,
    1707,  1706,  1708,  1708,  1709,  1710,  1709,  1711,  1712,  1714,
    1713,  1715,  1716,  1713,  1717,  1718,  1713,  1719,  1720,  1719,
    1721,  1721,  1722,  1722,  1723,  1723,  1723,  1725,  1726,  1724,
    1727,  1727,  1728,  1728,  1729,  1729,  1730,  1730,  1730,  1730,
    1730,  1730,  1730,  1730,  1730,  1731,  1731,  1733,  1732,  1734,
    1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,
    1734,  1734,  1734,  1735,  1734,  1736,  1734,  1734,  1734,  1734,
    1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,
    1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,
    1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,
    1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,  1734,
    1734,  1734,  1734,  1734,  1734,  1734,  1734,  1737,  1737,  1737,
    1738,  1738,  1739,  1739,  1740,  1740,  1741,  1741,  1742,  1742,
    1743,  1743,  1744,  1744,  1745,  1745,  1745,  1747,  1746,  1748,
    1746,  1749,  1749,  1749,  1749,  1749,  1749,  1750,  1750,  1751,
    1752,  1752,  1752,  1752,  1753,  1753,  1754,  1754,  1754,  1755,
    1757,  1756,  1759,  1758,  1758,  1760,  1760,  1761,  1762,  1761,
    1763,  1763,  1764,  1764,  1764,  1764,  1764,  1764,  1764,  1764,
    1764,  1764,  1764,  1764,  1764,  1764,  1764,  1764,  1764,  1764,
    1764,  1764,  1765,  1765,  1766,  1767,  1768,  1767,  1767,  1769,
    1769,  1770,  1770,  1770,  1771,  1772,  1772,  1774,  1773,  1775,
    1775,  1777,  1776,  1778,  1776,  1776,  1779,  1779,  1780,  1780,
    1781,  1782,  1781,  1784,  1783,  1785,  1785,  1785,  1786,  1786,
    1786,  1787,  1787,  1788,  1788,  1790,  1789,  1791,  1791,  1792,
    1794,  1795,  1796,  1797,  1793,  1798,  1798,  1799,  1799,  1800,
    1800,  1800,  1801,  1801,  1801,  1802,  1802,  1803,  1803,  1804,
    1804,  1804,  1804,  1805,  1805,  1806,  1806,  1807,  1807,  1808,
    1808,  1809,  1809,  1810,  1810,  1811,  1811,  1811,  1812,  1812,
    1813,  1813,  1814,  1814,  1815,  1815,  1816,  1817,  1817,  1817,
    1817,  1818,  1818,  1819,  1819,  1819,  1820,  1820,  1820,  1821,
    1821,  1822,  1822,  1822,  1822,  1822,  1822,  1822,  1822,  1822,
    1822,  1823,  1823,  1823,  1823,  1823,  1824,  1824,  1824,  1826,
    1825,  1827,  1827,  1828,  1828,  1829,  1830,  1831,  1832,  1831,
    1833,  1833,  1834,  1835,  1835,  1836,  1837,  1837,  1838,  1838,
    1839,  1839,  1840,  1841,  1841,  1841,  1841,  1841,  1842,  1842,
    1842,  1842,  1842,  1843,  1843,  1843,  1843,  1844,  1844,  1844,
    1845,  1845,  1846,  1847,  1847,  1848,  1848,  1848,  1849,  1850,
    1850,  1850,  1850,  1851,  1852,  1853,  1854,  1855,  1855,  1856,
    1856,  1857,  1857,  1857,  1858,  1858,  1859,  1859,  1860,  1860,
    1860,  1861,  1861,  1861,  1862,  1862,  1863,  1864,  1864,  1864,
    1864,  1864,  1864,  1864,  1864,  1864,  1864,  1864,  1864,  1865,
    1865,  1865,  1865,  1865,  1865,  1865,  1865,  1865,  1865,  1865,
    1865,  1865,  1866,  1866,  1866,  1866,  1866,  1866,  1866,  1866,
    1866,  1866,  1866,  1866,  1866,  1867,  1867,  1867,  1867,  1867,
    1867,  1867,  1867,  1867,  1867,  1867,  1867,  1867,  1868,  1868,
    1868,  1868,  1868,  1868,  1868,  1868,  1869,  1869,  1869,  1869,
    1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,
    1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,
    1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,
    1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,
    1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1869,  1870,
    1870,  1870,  1870,  1870,  1870,  1871,  1871,  1871,  1871,  1871,
    1871,  1871,  1871,  1871,  1871,  1872,  1872,  1872,  1873,  1873,
    1873,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,
    1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,  1874,
    1874,  1874,  1874,  1874,  1874,  1874,  1874,  1875,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,  1876,
    1876,  1876,  1877,  1877,  1878,  1878,  1878,  1878,  1878,  1878,
    1878,  1878,  1878,  1878,  1878,  1878,  1878,  1878,  1878,  1878,
    1878,  1878,  1878,  1878,  1878,  1878,  1878,  1878,  1878,  1878,
    1878,  1878,  1878,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,
    1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1879,  1881,
    1880,  1882,  1882,  1883,  1882,  1884,  1882,  1885,  1882,  1886,
    1886,  1887,  1887,  1888,  1887,  1889,  1889,  1891,  1890,  1890,
    1892,  1892,  1892,  1893,  1893,  1893,  1893,  1894,  1894,  1894,
    1894,  1896,  1895,  1897,  1895,  1898,  1895,  1900,  1899,  1901,
    1899,  1902,  1899,  1904,  1903,  1905,  1903,  1906,  1903,  1907,
    1903,  1908,  1903,  1909,  1903,  1910,  1903,  1903,  1903,  1903,
    1903,  1903,  1903,  1903,  1911,  1903,  1912,  1903,  1913,  1903,
    1914,  1914,  1914,  1914,  1915,  1916,  1917,  1917,  1918,  1918,
    1918,  1918,  1919,  1919,  1919,  1920,  1920,  1920,  1921,  1921,
    1921,  1923,  1922,  1924,  1924,  1924,  1925,  1925,  1926,  1926,
    1927,  1928,  1928,  1928,  1928,  1928,  1930,  1929,  1932,  1931,
    1933,  1933,  1934,  1933,  1935,  1935,  1936,  1936,  1937,  1937,
    1937,  1937,  1938,  1937,  1939,  1939,  1939,  1939,  1939,  1940,
    1941,  1941,  1941,  1941,  1941,  1942,  1942,  1943,  1944,  1944,
    1944,  1944,  1945,  1945,  1946,  1946,  1947,  1947,  1948,  1949,
    1950,  1950,  1951,  1951,  1952,  1952,  1953,  1953,  1954,  1954,
    1954,  1954,  1955,  1956,  1956,  1956,  1956,  1957,  1957,  1957,
    1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,
    1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,
    1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,
    1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,  1957,
    1958,  1958,  1959,  1959,  1960,  1960,  1960,  1961,  1961,  1961,
    1961,  1962,  1962,  1963,  1963,  1964,  1964,  1965,  1965,  1966,
    1966,  1967,  1967,  1967,  1967,  1968,  1968,  1969,  1970,  1970,
    1970,  1971,  1971,  1971,  1971,  1971,  1972,  1972,  1972,  1972,
    1972,  1973,  1973,  1974,  1974,  1975,  1975,  1976,  1976,  1977,
    1977,  1978,  1978,  1980,  1979,  1981,  1982,  1982,  1983,  1983,
    1984,  1984,  1984,  1985,  1985,  1985,  1986,  1987,  1987,  1987,
    1988,  1989,  1990,  1990,  1990,  1991,  1991,  1991,  1992,  1992,
    1992,  1992,  1992,  1992,  1992,  1992,  1992,  1993,  1993,  1994,
    1995,  1996,  1996,  1996,  1997,  1997,  1998,  1998,  1999,  1999,
    2000,  2000,  2002,  2001,  2003,  2003,  2003,  2003,  2004,  2004,
    2005,  2005,  2006,  2006,  2007,  2007,  2009,  2010,  2011,  2012,
    2013,  2008,  2014,  2014,  2015,  2015,  2016,  2016,  2018,  2017,
    2019,  2019,  2019,  2019,  2019,  2019,  2020,  2020,  2021,  2021,
    2021,  2022,  2022,  2022,  2023,  2023,  2023,  2024,  2024,  2025,
    2026,  2025,  2027,  2027,  2028,  2028,  2029,  2029,  2030,  2031,
    2032,  2033,  2034,  2035,  2036,  2037,  2038,  2039,  2040,  2040,
    2041,  2042,  2044,  2043,  2045,  2045,  2045,  2045,  2045,  2045,
    2046,  2047,  2047,  2047,  2048,  2049,  2050,  2050,  2050,  2051,
    2051,  2052,  2052,  2053,  2053,  2053,  2053,  2053,  2053,  2053,
    2054,  2054,  2054,  2054,  2054,  2054,  2054,  2054,  2054,  2054,
    2054,  2054,  2055,  2056,  2057,  2059,  2058,  2060,  2061,  2062,
    2063,  2064,  2064,  2065,  2065,  2066,  2066,  2067,  2067,  2067,
    2068,  2068,  2068,  2068,  2070,  2069,  2072,  2073,  2071,  2074,
    2074,  2075,  2076,  2076,  2076,  2077,  2076,  2078,  2078,  2078,
    2078,  2078,  2079,  2079,  2079,  2079,  2079,  2079,  2079,  2079,
    2080,  2080,  2080,  2080,  2082,  2081,  2084,  2083,  2086,  2085,
    2087,  2087,  2088,  2088,  2090,  2089,  2092,  2091,  2093,  2093,
    2093,  2095,  2094,  2097,  2096,  2098,  2098,  2099,  2099,  2100,
    2100,  2102,  2101,  2103,  2101,  2104,  2101,  2101,  2105,  2101,
    2106,  2107,  2101
};

/* YYR2[RULE-NUM] -- Number of symbols on the right-hand side of rule RULE-NUM.  */
static const yytype_int8 yyr2[] =
{
       0,     2,     1,     0,     4,     2,     0,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     5,     3,     0,     0,     6,
       0,     0,     3,     1,     3,     0,     3,     0,     7,     1,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     5,     5,     5,
       1,     0,     1,     3,     1,     0,     1,     3,     1,     0,
       1,     3,     1,     3,     3,     3,     3,     3,     3,     3,
       3,     0,     1,     1,     0,     1,     3,     0,     0,     8,
       0,     8,     0,     0,    15,     0,     0,    17,     0,     0,
      15,     0,     0,    15,     0,     6,     0,    10,     0,    11,
       0,     5,     0,     5,     8,     6,     0,     3,     1,     0,
       1,     1,     2,     3,     3,     2,     1,     3,     2,     1,
       3,     3,     3,     1,     1,     1,     1,     3,     0,     1,
       0,    12,     1,     3,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     0,    12,     0,     6,     2,     0,     1,
       3,     1,     0,     2,     0,     2,     0,     1,     4,     0,
       2,     0,     3,     0,     0,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     6,     4,     3,     1,     0,     2,
       0,     2,     2,     2,     2,     2,     3,     3,     1,     1,
       2,     3,     3,     0,     4,     0,     6,     0,     8,     0,
       0,     4,     0,     1,     3,     1,     0,     0,     2,     3,
       1,     3,     1,     1,     1,     0,     1,     3,     1,     1,
       1,     1,     0,     4,     2,     1,     3,     0,     3,     2,
       3,     1,     3,     5,     2,     1,     3,     3,     1,     0,
       4,     4,     1,     0,     6,     0,     3,     0,     0,     5,
       1,     1,     1,     1,     1,     3,     1,     1,     1,     3,
       0,     1,     1,     1,     1,     2,     1,     1,     2,     3,
       3,     1,     1,     0,     1,     0,     2,     3,     5,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     0,     5,     0,     1,
       1,     3,     1,     3,     3,     1,     2,     1,     1,     1,
       1,     1,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     0,     5,     0,     2,     1,     1,     0,     3,
       1,     1,     2,     0,     4,     0,     5,     1,     2,     0,
       4,     0,     5,     2,     2,     2,     0,     4,     0,     0,
       5,     0,     5,     1,     3,     0,     3,     1,     1,     1,
       3,     3,     4,     5,     2,     4,     2,     1,     3,     0,
       0,     6,     0,     2,     2,     2,     0,     6,     0,     3,
       1,     1,     2,     1,     2,     0,     5,     0,     5,     0,
       2,     0,     1,     0,     1,     2,     5,     3,     5,     3,
       5,     1,     0,     5,     0,     5,     0,     0,     0,     8,
       0,     5,     0,     3,     0,     3,     0,     0,     5,     0,
       3,     1,     1,     1,     1,     1,     0,     5,     3,     1,
       2,     4,     0,     4,     1,     4,     1,     0,     1,     0,
       4,     0,     0,     3,     0,     6,     6,     0,     4,     2,
       2,     0,     3,     2,     0,     3,     0,     1,     0,     3,
       0,     1,     1,     3,     1,     4,     3,     3,     0,     2,
       0,     0,     7,     0,    10,     1,     3,     1,     1,     0,
       2,     0,     3,     1,     3,     0,     1,     0,     6,     1,
       0,     0,     4,     0,     3,     1,     1,     1,     1,     1,
       1,     3,     1,     3,     0,     0,     5,     1,     3,     1,
       1,     0,     3,     1,     3,     0,     4,     1,     0,     1,
       2,     1,     1,     1,     0,     1,     2,     1,     3,     4,
       3,     3,     3,     3,     4,     4,     3,     0,     0,     6,
       3,     0,     2,     0,     1,     0,     1,     0,     1,     1,
       2,     1,     1,     3,     0,     3,     0,     3,     1,     3,
       0,     1,     1,     2,     1,     2,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     0,     6,     1,
       1,     3,     4,     4,     2,     2,     2,     3,     3,     3,
       1,     3,     1,     3,     3,     3,     3,     1,     1,     1,
       1,     0,     1,     2,     4,     4,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     1,
       2,     1,     3,     0,     9,     0,    10,     0,     9,     0,
       9,     0,    11,     0,    12,     0,    10,     2,     7,     7,
       0,     1,     4,     0,     1,     0,     1,     2,     0,     4,
       0,     3,     0,     3,     0,     1,     2,     1,     0,     1,
       2,     1,     0,     1,     0,     6,     5,     5,     0,     2,
       0,     1,     1,     1,     0,     1,     2,     1,     1,     2,
       2,     1,     0,     3,     1,     3,     3,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     3,     1,     3,     3,     3,     3,
       2,     1,     1,     3,     3,     3,     3,     0,     1,     2,
       3,     3,     2,     3,     3,     4,     3,     3,     3,     1,
       2,     2,     2,     2,     3,     3,     2,     2,     2,     3,
       3,     2,     3,     2,     2,     2,     2,     2,     5,     5,
       1,     1,     2,     2,     1,     2,     1,     2,     3,     2,
       1,     1,     1,     1,     1,     1,     1,     2,     0,     3,
       0,     1,     1,     5,     0,     1,     1,     1,     2,     2,
       1,     3,     3,     3,     3,     1,     1,     0,     1,     0,
       1,     0,     1,     2,     1,     1,     2,     4,     1,     3,
       2,     1,     0,     2,     0,     1,     0,     1,     2,     3,
       2,     1,     1,     1,     2,     1,     2,     2,     1,     1,
       1,     1,     1,     0,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     0,     1,     2,     1,     1,     0,     1,
       1,     1,     2,     1,     2,     3,     3,     2,     2,     3,
       2,     0,     1,     0,     4,     1,     1,     1,     0,     1,
       2,     1,     1,     2,     1,     3,     3,     1,     1,     0,
       2,     0,     1,     5,     0,     3,     3,     1,     0,     2,
       2,     2,     0,     3,     3,     6,     6,     1,     1,     2,
       2,     2,     2,     2,     1,     1,     0,     1,     1,     1,
       1,     1,     1,     1,     0,     1,     0,     1,     0,     1,
       1,     2,     1,     2,     1,     2,     0,     2,     0,     2,
       2,     2,     2,     3,     2,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     1,     1,     1,     2,     4,     2,
       0,     4,     1,     4,     1,     0,     1,     1,     3,     0,
       0,     9,     0,     5,     0,     7,     7,     0,     6,     0,
       6,     0,    11,     0,    10,     0,    11,     0,     8,     8,
       0,     0,     0,     9,     1,     1,     0,     1,     1,     3,
       0,     2,     3,     5,     5,     0,     3,     1,     4,     0,
       3,     0,     2,     0,     1,     0,     2,     2,     2,     2,
       1,     1,     1,     4,     4,     0,     6,     4,     0,     5,
       0,     6,     4,     3,     1,     8,     8,     0,     9,     2,
       1,     1,     0,     6,     0,     3,     2,     0,     5,     0,
       0,     6,     1,     3,     1,     1,     3,     3,     3,     2,
       2,     4,     4,     2,     7,     6,     5,     5,     4,     5,
       4,     4,     2,     2,     7,     5,     6,     3,     6,     6,
       4,     6,     1,     1,     1,     1,     1,     3,     3,     3,
       5,     0,     2,     2,     0,     1,     1,     2,     2,     3,
       3,     3,     3,     0,     1,     0,     1,     0,     2,     0,
       1,     2,     1,     1,     1,     0,     1,     1,     0,     2,
       1,     0,     1,     1,     1,     0,     7,     0,     5,     5,
       4,     3,     0,     1,     1,     3,     3,     2,     2,     0,
       2,     1,     3,     0,     1,     1,     0,     2,     4,     4,
       4,     1,     3,     0,     5,     0,     1,     1,     3,     0,
       4,     0,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     0,     2,     2,     0,     5,     1,     3,     2,     0,
       3,     1,     4,     1,     0,     4,     1,     0,     4,     0,
       1,     3,     0,     1,     3,     1,     1,     2,     6,     3,
       0,     4,     0,     3,     0,     1,     1,     2,     1,     1,
       1,     1,     1,     2,     0,     2,     0,     6,     0,     1,
       1,     0,     5,     4,     3,     5,     1,     3,     4,     0,
       6,     1,     1,     1,     3,     2,     3,     1,     1,     0,
       6,     1,     1,     1,     3,     3,     4,     0,     6,     0,
       2,     0,     4,     0,     2,     0,     3,     0,     4,     0,
       3,     0,     4,     1,     1,     0,     3,     0,     0,     5,
       6,     7,     1,     2,     1,     1,     0,     3,     0,     3,
       3,     3,     1,     0,     4,     3,     1,     1,     1,     1,
       1,     4,     0,     1,     2,     1,     1,     0,     1,     0,
       1,     1,     2,     1,     2,     9,     0,     1,     0,     2,
       3,     1,     4,     4,     2,     1,     1,     1,     1,     3,
       5,     0,     1,     0,     2,     1,     2,     3,     1,     1,
       3,     4,     0,     0,     0,     0,     0,     0,     0,     0,
       2,     2,     1,     1,     0,     2,     3,     0,     2,     3,
       0,     2,     1,     3,     3,     3,     2,     1,     3,     4,
       3,     4,     3,     4,     3,     4,     3,     3,     6,     1,
       3,     4,     5,     7,     6,     8,     5,     6,     4,     3,
       5,     4,     6,     3,     4,     1,     3,     3,     3,     3,
       3,     3,     3,     5,     5,     5,     6,     6,     3,     3,
       3,     3,     3,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     2,     1,     1,
       1,     2,     1,     2,     2,     2,     1,     4,     1,     3,
       1,     1,     1,     1,     3,     1,     1,     1,     4,     4,
       4,     3,     3,     3,     3,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     6,     4,     4,     7,
       6,     3,     4,     6,     6,     4,     4,     4,     4,     4,
       4,     6,     8,    10,     1,     1,     3,     1,     1,     3,
       1,     2,     2,     2,     2,     2,     1,     3,     4,     6,
       4,     6,     2,     2,     4,     4,     4,    10,     6,     8,
       6,     4,     4,     6,     4,     3,     3,     4,     1,     4,
       3,     4,     1,     1,     5,     3,     5,     3,     6,     8,
       2,     2,     8,     8,     6,     6,     2,     2,     6,     3,
       6,     8,     4,     3,     4,     8,     8,     4,     2,     2,
       2,     6,     6,     4,     8,     4,     4,     8,     4,     6,
       6,     4,     6,     8,     6,     5,     8,     7,    10,     0,
       5,     4,     4,     4,     6,     8,     6,     6,     6,     6,
       6,     2,     3,     0,     4,     0,     3,     0,     1,     1,
       3,     4,     4,     5,     4,     4,     4,     5,     4,     0,
       0,     7,     4,     5,     4,     5,     4,     4,     4,     4,
       4,     5,     0,     9,     0,     8,     0,     7,     3,     3,
       1,     1,     1,     3,     3,     3,     3,     3,     4,     4,
       4,     6,     4,     6,     4,     6,     5,     0,     7,     4,
       4,     4,     4,     1,     0,     3,     3,     1,     3,     5,
       0,     1,     0,     2,     0,     3,     4,     2,     0,     1,
       2,     1,     0,     3,     2,     3,     3,     3,     2,     1,
       1,     1,     1,     1,     2,     1,     2,     2,     1,     2,
       1,     2,     2,     3,     0,     1,     1,     3,     1,     3,
       1,     3,     4,     5,     1,     3,     1,     1,     1,     1,
       2,     1,     4,     1,     3,     0,     3,     0,     5,     2,
       4,     4,     1,     1,     1,     1,     0,     1,     2,     1,
       2,     1,     1,     1,     1,     2,     3,     3,     0,     0,
      10,     1,     4,     1,     3,     3,     0,     6,     0,     8,
       4,     0,     8,     0,    10,     6,     0,     8,     0,    10,
       6,     1,     2,     1,     1,     2,     0,     1,     5,     1,
       1,     1,     1,     1,     1,     3,     1,     3,     3,     3,
       3,     3,     3,     3,     5,     1,     4,     0,     1,     0,
       2,     3,     3,     1,     1,     0,     7,     0,     7,     1,
       2,     0,     0,     2,     0,     2,     0,     1,     1,     1,
       1,     3,     1,     3,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     0,     1,     2,     0,     1,     0,     0,     3,
       0,     0,     3,     0,     4,     4,     2,     0,     1,     1,
       0,     2,     3,     1,     3,     0,     7,     0,     1,     0,
       3,     0,     3,     0,     3,     1,     1,     1,     4,     2,
       2,     2,     1,     2,     2,     0,     3,     2,     2,     3,
       3,     3,     3,     1,     2,     0,     1,     0,     4,     4,
       2,     0,     1,     1,     0,     1,     2,     5,     4,     1,
       4,     7,     5,     8,     3,     1,     1,     1,     1,     1,
       2,     1,     1,     3,     3,     1,     3,     1,     1,     1,
       1,     1,     0,     2,     3,     4,     1,     2,     1,     0,
       1,     1,     1,     0,     2,     2,     0,     1,     2,     1,
       0,     1,     2,     2,     2,     1,     2,     2,     2,     2,
       1,     1,     1,     1,     1,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     0,     6,     0,     1,     3,     1,     3,     0,
       2,     3,     1,     1,     2,     1,     3,     2,     0,     0,
       7,     2,     1,     0,     3,     0,     8,     0,     8,     4,
       5,     5,     0,     6,     4,     4,     4,     0,     6,     1,
       1,     3,     1,     2,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     0,     0,    12,     0,     0,    10,     0,
       0,     0,     1,     1,     0,     1,     1,     1,     0,     1,
       0,     2,     1,     2,     0,     3,     3,     0,     1,     3,
       1,     1,     3,     1,     3,     1,     3,     1,     1,     0,
       1,     1,     1,     1,     1,     0,     4,     0,     4,     0,
       1,     0,     1,     3,     1,     5,     3,     1,     1,     1,
       1,     0,     0,     0,     7,     5,     1,     0,     0,     0,
      13,     3,     1,     3,     3,     3,     1,     3,     0,     1,
       0,     3,     0,     3,     2,     0,     5,     5,     2,     0,
       7,     0,     0,     8,     0,     0,     9,     0,     0,     3,
       0,     2,     0,     2,     1,     1,     1,     0,     0,     7,
       0,     1,     0,     1,     1,     3,     1,     1,     2,     2,
       2,     1,     1,     1,     1,     0,     3,     0,     3,     2,
       4,     4,     3,     4,     4,     1,     3,     3,     3,     3,
       6,     2,     2,     0,     6,     0,     8,     5,     2,     1,
       1,     1,     5,     5,     2,     2,     1,     4,     3,     2,
       3,     2,     2,     1,     4,     4,     3,     3,     3,     2,
       2,     3,     4,     3,     3,     3,     3,     4,     4,     3,
       3,     2,     3,     3,     3,     3,     3,     4,     4,     3,
       3,     4,     4,     3,     4,     4,     3,     1,     1,     1,
       1,     1,     0,     1,     0,     2,     0,     1,     1,     1,
       0,     2,     0,     2,     0,     3,     3,     0,     4,     0,
       4,     1,     1,     1,     1,     1,     1,     1,     1,     3,
       1,     2,     1,     1,     0,     3,     0,     1,     1,     5,
       0,     4,     0,     4,     1,     0,     1,     4,     0,     3,
       3,     1,     2,     2,     2,     2,     3,     4,     2,     1,
       1,     1,     1,     2,     2,     2,     1,     1,     1,     1,
       1,     2,     0,     1,     2,     2,     0,     3,     1,     0,
       5,     0,     1,     3,     1,     0,     3,     0,     3,     3,
       1,     0,     5,     0,     3,     2,     0,     1,     0,     2,
       5,     0,     6,     0,     4,     0,     1,     1,     2,     2,
       3,     0,     1,     1,     2,     0,     3,     0,     4,     2,
       0,     0,     0,     0,    23,     1,     1,     0,     1,     0,
       1,     1,     0,     1,     1,     0,     2,     2,     1,     3,
       4,     3,     3,     0,     2,     2,     1,     3,     3,     0,
       4,     0,     3,     1,     1,     0,     3,     2,     3,     1,
       1,     2,     0,     2,     3,     1,     5,     1,     1,     2,
       2,     1,     1,     1,     1,     1,     1,     2,     2,     2,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       2,     1,     1,     1,     1,     1,     2,     2,     2,     0,
       4,     0,     1,     1,     3,     1,     7,     0,     0,     4,
       0,     3,     1,     1,     3,     1,     1,     1,     3,     5,
       3,     5,     1,     1,     3,     4,     5,     4,     1,     3,
       4,     4,     5,     1,     5,     3,     2,     1,     3,     2,
       2,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     2,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     1,     3,     0,     3,     0,     3,     0,     5,     1,
       3,     1,     3,     0,     3,     1,     3,     0,     3,     1,
       1,     1,     1,     0,     1,     1,     1,     0,     2,     2,
       2,     0,     4,     0,     6,     0,     6,     0,     4,     0,
       6,     0,     6,     0,     4,     0,     6,     0,     6,     0,
       7,     0,     7,     0,     9,     0,     9,     2,     3,     2,
       4,     3,     5,     2,     0,     4,     0,     4,     0,     6,
       1,     1,     3,     3,     1,     3,     2,     2,     2,     2,
       2,     1,     1,     4,     4,     3,     3,     3,     1,     1,
       1,     0,     5,     0,     2,     1,     1,     1,     1,     3,
       3,     1,     1,     2,     2,     2,     0,     3,     0,     3,
       3,     2,     0,     6,     1,     2,     1,     1,     1,     1,
       1,     1,     0,     5,     1,     1,     1,     1,     1,     3,
       6,     6,     7,     5,     3,     4,     1,     3,     8,     8,
       6,     4,     0,     3,     0,     3,     1,     3,     2,     1,
       1,     1,     0,     1,     1,     2,     0,     1,     1,     1,
       3,     3,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     2,     2,     1,     3,     2,     2,     2,     2,
       2,     2,     2,     2,     1,     1,     2,     2,     2,     2,
       2,     3,     2,     2,     2,     2,     3,     3,     2,     3,
       0,     1,     3,     1,     2,     2,     2,     1,     3,     3,
       1,     1,     3,     1,     3,     1,     3,     1,     1,     1,
       1,     4,     5,     4,     1,     3,     1,     2,     0,     2,
       5,     0,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     1,     0,     2,     0,     2,     0,     3,     2,
       1,     2,     1,     0,     3,     1,     0,     1,     0,     1,
       0,     3,     2,     0,     1,     2,     4,     4,     5,     4,
       2,     3,     2,     2,     2,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     3,     3,     3,     0,     1,     3,     3,     0,     3,
       1,     3,     0,     3,     0,     3,     4,     4,     1,     1,
       0,     2,     0,     2,     1,     3,     0,     0,     0,     0,
       0,    21,     2,     1,     1,     2,     0,     1,     0,     2,
       4,     4,     3,     4,     3,     3,     0,     3,     1,     3,
       5,     1,     1,     1,     0,     1,     1,     0,     2,     0,
       0,     3,     0,     2,     6,     3,     4,     4,     1,     0,
       1,     1,     1,     1,     0,     1,     1,     0,     0,     1,
       1,     1,     0,     3,     1,     2,     4,     6,     5,     7,
       3,     1,     1,     2,     1,     2,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     6,     4,     2,     1,
       1,     1,     4,     5,     6,     2,     1,     2,     3,     1,
       6,     8,     5,     7,     0,     4,     0,     0,     7,     1,
       3,     2,     1,     4,     1,     0,     6,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     0,     7,     0,     5,     0,     7,
       1,     2,     1,     2,     0,     6,     0,     5,     4,     4,
       1,     0,     5,     0,     5,     1,     1,     1,     2,     3,
       3,     0,     6,     0,    11,     0,    11,    10,     0,    12,
       0,     0,    13
};


enum { YYENOMEM = -2 };

#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab
#define YYNOMEM         goto yyexhaustedlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                    \
  do                                                              \
    if (yychar == YYEMPTY)                                        \
      {                                                           \
        yychar = (Token);                                         \
        yylval = (Value);                                         \
        YYPOPSTACK (yylen);                                       \
        yystate = *yyssp;                                         \
        goto yybackup;                                            \
      }                                                           \
    else                                                          \
      {                                                           \
        yyerror (thd, YY_("syntax error: cannot back up")); \
        YYERROR;                                                  \
      }                                                           \
  while (0)

/* Backward compatibility with an undocumented macro.
   Use YYerror or YYUNDEF. */
#define YYERRCODE YYUNDEF


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)




# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Kind, Value, thd); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*-----------------------------------.
| Print this symbol's value on YYO.  |
`-----------------------------------*/

static void
yy_symbol_value_print (FILE *yyo,
                       yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  FILE *yyoutput = yyo;
  YY_USE (yyoutput);
  YY_USE (thd);
  if (!yyvaluep)
    return;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YY_USE (yykind);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}


/*---------------------------.
| Print this symbol on YYO.  |
`---------------------------*/

static void
yy_symbol_print (FILE *yyo,
                 yysymbol_kind_t yykind, YYSTYPE const * const yyvaluep, THD *thd)
{
  YYFPRINTF (yyo, "%s %s (",
             yykind < YYNTOKENS ? "token" : "nterm", yysymbol_name (yykind));

  yy_symbol_value_print (yyo, yykind, yyvaluep, thd);
  YYFPRINTF (yyo, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yy_state_t *yybottom, yy_state_t *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yy_state_t *yyssp, YYSTYPE *yyvsp,
                 int yyrule, THD *thd)
{
  int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %d):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       YY_ACCESSING_SYMBOL (+yyssp[yyi + 1 - yynrhs]),
                       &yyvsp[(yyi + 1) - (yynrhs)], thd);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, Rule, thd); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args) ((void) 0)
# define YY_SYMBOL_PRINT(Title, Kind, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif






/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg,
            yysymbol_kind_t yykind, YYSTYPE *yyvaluep, THD *thd)
{
  YY_USE (yyvaluep);
  YY_USE (thd);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yykind, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  switch (yykind)
    {
    case YYSYMBOL_expr_lex: /* expr_lex  */
#line 1593 "/home/buildbot/git/mkdist/sql/yy_mariadb.yy"
{
  /*
     In case of a syntax/oom error let's free the sp_expr_lex
     instance, but only if it has not been linked to any structures
     such as sp_instr_jump_if_not::m_lex_keeper yet, e.g.:
       IF f1() THEN1
     i.e. THEN1 came instead of the expected THEN causing a syntax error.
  */
  if (!((*yyvaluep).expr_lex)->sp_lex_in_use)
    delete ((*yyvaluep).expr_lex);
}
#line 30212 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
        break;

    case YYSYMBOL_cursor_actual_parameters: /* cursor_actual_parameters  */
#line 1653 "/home/buildbot/git/mkdist/sql/yy_mariadb.yy"
{
  if (((*yyvaluep).sp_assignment_lex_list))
  {
    sp_assignment_lex *elem;
    List_iterator<sp_assignment_lex> li(*((*yyvaluep).sp_assignment_lex_list));
    while ((elem= li++))
    {
      if (!elem->sp_lex_in_use)
        delete elem;
    }
  }
}
#line 30229 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
        break;

    case YYSYMBOL_opt_parenthesized_cursor_actual_parameters: /* opt_parenthesized_cursor_actual_parameters  */
#line 1653 "/home/buildbot/git/mkdist/sql/yy_mariadb.yy"
{
  if (((*yyvaluep).sp_assignment_lex_list))
  {
    sp_assignment_lex *elem;
    List_iterator<sp_assignment_lex> li(*((*yyvaluep).sp_assignment_lex_list));
    while ((elem= li++))
    {
      if (!elem->sp_lex_in_use)
        delete elem;
    }
  }
}
#line 30246 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
        break;

      default:
        break;
    }
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}






/*----------.
| yyparse.  |
`----------*/

int
yyparse (THD *thd)
{
/* Lookahead token kind.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

    /* Number of syntax errors so far.  */
    int yynerrs = 0;

    yy_state_fast_t yystate = 0;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus = 0;

    /* Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* Their size.  */
    YYPTRDIFF_T yystacksize = YYINITDEPTH;

    /* The state stack: array, bottom, top.  */
    yy_state_t yyssa[YYINITDEPTH];
    yy_state_t *yyss = yyssa;
    yy_state_t *yyssp = yyss;

    /* The semantic value stack: array, bottom, top.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs = yyvsa;
    YYSTYPE *yyvsp = yyvs;

  int yyn;
  /* The return value of yyparse.  */
  int yyresult;
  /* Lookahead symbol kind.  */
  yysymbol_kind_t yytoken = YYSYMBOL_YYEMPTY;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;



#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yychar = YYEMPTY; /* Cause a token to be read.  */

  goto yysetstate;


/*------------------------------------------------------------.
| yynewstate -- push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;


/*--------------------------------------------------------------------.
| yysetstate -- set current state (the top of the stack) to yystate.  |
`--------------------------------------------------------------------*/
yysetstate:
  YYDPRINTF ((stderr, "Entering state %d\n", yystate));
  YY_ASSERT (0 <= yystate && yystate < YYNSTATES);
  YY_IGNORE_USELESS_CAST_BEGIN
  *yyssp = YY_CAST (yy_state_t, yystate);
  YY_IGNORE_USELESS_CAST_END
  YY_STACK_PRINT (yyss, yyssp);

  if (yyss + yystacksize - 1 <= yyssp)
#if !defined yyoverflow && !defined YYSTACK_RELOCATE
    YYNOMEM;
#else
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYPTRDIFF_T yysize = yyssp - yyss + 1;

# if defined yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        yy_state_t *yyss1 = yyss;
        YYSTYPE *yyvs1 = yyvs;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * YYSIZEOF (*yyssp),
                    &yyvs1, yysize * YYSIZEOF (*yyvsp),
                    &yystacksize);
        yyss = yyss1;
        yyvs = yyvs1;
      }
# else /* defined YYSTACK_RELOCATE */
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        YYNOMEM;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yy_state_t *yyss1 = yyss;
        union yyalloc *yyptr =
          YY_CAST (union yyalloc *,
                   YYSTACK_ALLOC (YY_CAST (YYSIZE_T, YYSTACK_BYTES (yystacksize))));
        if (! yyptr)
          YYNOMEM;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;

      YY_IGNORE_USELESS_CAST_BEGIN
      YYDPRINTF ((stderr, "Stack size increased to %ld\n",
                  YY_CAST (long, yystacksize)));
      YY_IGNORE_USELESS_CAST_END

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }
#endif /* !defined yyoverflow && !defined YYSTACK_RELOCATE */


  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;


/*-----------.
| yybackup.  |
`-----------*/
yybackup:
  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either empty, or end-of-input, or a valid lookahead.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token\n"));
      yychar = yylex (&yylval, thd);
    }

  if (yychar <= YYEOF)
    {
      yychar = YYEOF;
      yytoken = YYSYMBOL_YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else if (yychar == YYerror)
    {
      /* The scanner already issued an error message, process directly
         to error recovery.  But do not keep the error token as
         lookahead, it is too special and may lead us to an endless
         loop in error recovery. */
      yychar = YYUNDEF;
      yytoken = YYSYMBOL_YYerror;
      goto yyerrlab1;
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  /* Discard the shifted token.  */
  yychar = YYEMPTY;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];


  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
  case 2: /* query: END_OF_INPUT  */
#line 2036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->bootstrap &&
              (!(thd->lex->lex_options & OPTION_LEX_FOUND_COMMENT)))
              my_yyabort_error((ER_EMPTY_QUERY, MYF(0)));

            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 30529 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3: /* $@1: %empty  */
#line 2045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_input_stream *lip = YYLIP;

            if ((thd->client_capabilities & CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 30556 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 5: /* query: directly_executable_statement END_OF_INPUT  */
#line 2070 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 30565 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 71: /* deallocate: deallocate_or_drop PREPARE_SYM ident  */
#line 2153 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_deallocate_prepare((yyvsp[0].ident_sys));
          }
#line 30573 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 74: /* $@2: %empty  */
#line 2165 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str=
            Lex->clause_that_disallows_subselect= "PREPARE..FROM";
          }
#line 30583 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 75: /* prepare: PREPARE_SYM ident FROM $@2 expr  */
#line 2171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_prepare((yyvsp[-3].ident_sys), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 30593 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 76: /* execute: EXECUTE_SYM ident execute_using  */
#line 2180 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute((yyvsp[-1].ident_sys), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 30602 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 77: /* $@3: %empty  */
#line 2185 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str=
            Lex->clause_that_disallows_subselect= "EXECUTE IMMEDIATE";
          }
#line 30612 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 78: /* $@4: %empty  */
#line 2191 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= NULL; }
#line 30618 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 79: /* execute: EXECUTE_SYM IMMEDIATE_SYM $@3 expr $@4 execute_using  */
#line 2193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_execute_immediate((yyvsp[-2].item), (yyvsp[0].item_list)))
              MYSQL_YYABORT;
          }
#line 30627 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 80: /* execute_using: %empty  */
#line 2200 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item_list)= NULL; }
#line 30633 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 81: /* $@5: %empty  */
#line 2202 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "EXECUTE..USING"; }
#line 30639 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 82: /* execute_using: USING $@5 execute_params  */
#line 2204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= (yyvsp[0].item_list);
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 30648 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 83: /* execute_params: expr_or_ignore_or_default  */
#line 2212 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 30657 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 84: /* execute_params: execute_params ',' expr_or_ignore_or_default  */
#line 2217 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.item_list)= (yyvsp[-2].item_list))->push_back((yyvsp[0].item), thd->mem_root))
              MYSQL_YYABORT;
          }
#line 30666 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 85: /* $@6: %empty  */
#line 2228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HELP"));
          }
#line 30675 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 86: /* help: HELP_SYM $@6 ident_or_text  */
#line 2233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lex_str).str;
          }
#line 30685 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 87: /* $@7: %empty  */
#line 2244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_CHANGE_MASTER;
          }
#line 30693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 88: /* change: CHANGE MASTER_SYM optional_connection_name TO_SYM $@7 master_defs optional_for_channel  */
#line 2249 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 30699 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 91: /* master_def: MASTER_HOST_SYM '=' TEXT_STRING_sys  */
#line 2259 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.host = (yyvsp[0].lex_str).str;
          }
#line 30707 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 92: /* master_def: MASTER_USER_SYM '=' TEXT_STRING_sys  */
#line 2263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.user = (yyvsp[0].lex_str).str;
          }
#line 30715 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 93: /* master_def: MASTER_PASSWORD_SYM '=' TEXT_STRING_sys  */
#line 2267 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.password = (yyvsp[0].lex_str).str;
          }
#line 30723 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 94: /* master_def: MASTER_PORT_SYM '=' ulong_num  */
#line 2271 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 30731 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 95: /* master_def: MASTER_CONNECT_RETRY_SYM '=' ulong_num  */
#line 2275 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 30739 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 96: /* master_def: MASTER_DELAY_SYM '=' ulong_num  */
#line 2279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       (ulong) (yyvsp[0].ulong_num), (ulong) MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 30753 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 97: /* master_def: MASTER_SSL_SYM '=' ulong_num  */
#line 2289 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ? 
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 30762 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 98: /* master_def: MASTER_SSL_CA_SYM '=' TEXT_STRING_sys  */
#line 2294 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_ca= (yyvsp[0].lex_str).str;
          }
#line 30770 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 99: /* master_def: MASTER_SSL_CAPATH_SYM '=' TEXT_STRING_sys  */
#line 2298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_capath= (yyvsp[0].lex_str).str;
          }
#line 30778 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 100: /* master_def: MASTER_SSL_CERT_SYM '=' TEXT_STRING_sys  */
#line 2302 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cert= (yyvsp[0].lex_str).str;
          }
#line 30786 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 101: /* master_def: MASTER_SSL_CIPHER_SYM '=' TEXT_STRING_sys  */
#line 2306 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_cipher= (yyvsp[0].lex_str).str;
          }
#line 30794 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 102: /* master_def: MASTER_SSL_KEY_SYM '=' TEXT_STRING_sys  */
#line 2310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_key= (yyvsp[0].lex_str).str;
          }
#line 30802 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 103: /* master_def: MASTER_SSL_VERIFY_SERVER_CERT_SYM '=' ulong_num  */
#line 2314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 30811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 104: /* master_def: MASTER_SSL_CRL_SYM '=' TEXT_STRING_sys  */
#line 2319 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crl= (yyvsp[0].lex_str).str;
          }
#line 30819 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 105: /* master_def: MASTER_SSL_CRLPATH_SYM '=' TEXT_STRING_sys  */
#line 2323 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.ssl_crlpath= (yyvsp[0].lex_str).str;
          }
#line 30827 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 106: /* master_def: MASTER_HEARTBEAT_PERIOD_SYM '=' NUM_literal  */
#line 2328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.heartbeat_period= (float) (yyvsp[0].item_num)->val_real();
            if (unlikely(Lex->mi.heartbeat_period >
                         SLAVE_MAX_HEARTBEAT_PERIOD) ||
                unlikely(Lex->mi.heartbeat_period < 0.0))
               my_yyabort_error((ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0),
                                 SLAVE_MAX_HEARTBEAT_PERIOD));

            if (unlikely(Lex->mi.heartbeat_period > slave_net_timeout))
            {
              push_warning(thd, Sql_condition::WARN_LEVEL_WARN,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (unlikely(Lex->mi.heartbeat_period < 0.001))
            {
              if (unlikely(Lex->mi.heartbeat_period != 0.0))
              {
                push_warning(thd, Sql_condition::WARN_LEVEL_WARN,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(thd, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 30859 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 107: /* master_def: IGNORE_SERVER_IDS_SYM '=' '(' ignore_server_id_list ')'  */
#line 2356 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 30867 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 108: /* master_def: DO_DOMAIN_IDS_SYM '=' '(' do_domain_id_list ')'  */
#line 2360 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_do_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 30875 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 109: /* master_def: IGNORE_DOMAIN_IDS_SYM '=' '(' ignore_domain_id_list ')'  */
#line 2364 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.repl_ignore_domain_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 30883 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 114: /* ignore_server_id: ulong_num  */
#line 2379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_server_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 30891 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 118: /* do_domain_id: ulong_num  */
#line 2392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_do_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 30899 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 122: /* ignore_domain_id: ulong_num  */
#line 2405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            insert_dynamic(&Lex->mi.repl_ignore_domain_ids, (uchar*) &((yyvsp[0].ulong_num)));
          }
#line 30907 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 123: /* master_file_def: MASTER_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.log_file_name = (yyvsp[0].lex_str).str;
          }
#line 30915 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 124: /* master_file_def: MASTER_LOG_POS_SYM '=' ulonglong_num  */
#line 2416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* 
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors. 
               We need to do it in this file, because only there we know that 
               MASTER_LOG_POS has been explicitly specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitly specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos= MY_MAX(BIN_LOG_HEADER_SIZE, (yyvsp[0].ulonglong_number));
          }
#line 30934 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 125: /* master_file_def: RELAY_LOG_FILE_SYM '=' TEXT_STRING_sys  */
#line 2431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_name = (yyvsp[0].lex_str).str;
          }
#line 30942 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 126: /* master_file_def: RELAY_LOG_POS_SYM '=' ulong_num  */
#line 2435 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos= MY_MAX(BIN_LOG_HEADER_SIZE, Lex->mi.relay_log_pos);
          }
#line 30952 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 127: /* master_file_def: MASTER_USE_GTID_SYM '=' CURRENT_POS_SYM  */
#line 2441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_CURRENT_POS;
          }
#line 30962 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 128: /* master_file_def: MASTER_USE_GTID_SYM '=' SLAVE_POS_SYM  */
#line 2447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_SLAVE_POS;
          }
#line 30972 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 129: /* master_file_def: MASTER_USE_GTID_SYM '=' NO_SYM  */
#line 2453 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->mi.use_gtid_opt != LEX_MASTER_INFO::LEX_GTID_UNCHANGED))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MASTER_use_gtid"));
            Lex->mi.use_gtid_opt= LEX_MASTER_INFO::LEX_GTID_NO;
          }
#line 30982 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 130: /* master_file_def: MASTER_DEMOTE_TO_SLAVE_SYM '=' bool  */
#line 2459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.is_demotion_opt= (bool) (yyvsp[0].ulong_num);
          }
#line 30990 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 131: /* optional_connection_name: %empty  */
#line 2466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->mi.connection_name= null_clex_str;
          }
#line 30999 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 133: /* connection_name: TEXT_STRING_sys  */
#line 2475 "/home/buildbot/git/sql/sql_yacc.yy"
        {
           Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
         }
#line 31011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 134: /* optional_for_channel: %empty  */
#line 2486 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*do nothing */
          }
#line 31019 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 136: /* for_channel: FOR_SYM CHANNEL_SYM TEXT_STRING_sys  */
#line 2495 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (Lex->mi.connection_name.str != NULL)
          {
            my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "CONNECTION_NAME AND FOR CHANNEL CAN NOT BE SPECIFIED AT THE SAME TIME)"));
          }
          else
          {
            Lex->mi.connection_name= (yyvsp[0].lex_str);
#ifdef HAVE_REPLICATION
           if (unlikely(check_master_connection_name(&(yyvsp[0].lex_str))))
              my_yyabort_error((ER_WRONG_ARGUMENTS, MYF(0), "MASTER_CONNECTION_NAME"));
#endif
          }

          }
#line 31039 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 137: /* $@8: %empty  */
#line 2516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_table()))
              MYSQL_YYABORT;
            lex->create_info.init();
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->current_select->parsing_place= BEFORE_OPT_LIST;
            if (lex->set_command_with_check(SQLCOM_CREATE_TABLE, (yyvsp[-2].num), (yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
               MYSQL_YYABORT;
          }
#line 31055 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 138: /* $@9: %empty  */
#line 2528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            if (!lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                    TL_WRITE, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            lex->alter_info.reset();
            /*
              For CREATE TABLE we should not open the table even if it exists.
              If the table exists, we should either not create it or replace it
            */
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            lex->name= null_clex_str;
            lex->create_last_non_select_table= lex->last_table();
            lex->inc_select_stack_outer_barrier();
          }
#line 31076 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 139: /* create: create_or_replace opt_temporary TABLE_SYM opt_if_not_exists $@8 table_ident $@9 create_body  */
#line 2545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 31086 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 140: /* $@10: %empty  */
#line 2551 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           LEX *lex= thd->lex;
           if (lex->main_select_push())
             MYSQL_YYABORT;
           if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_create_sequence()))
              MYSQL_YYABORT;
           lex->create_info.init();
           if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_SEQUENCE, (yyvsp[-3].num),
                        (yyvsp[-4].object_ddl_options) | (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;

           if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_UPDATING,
                                   TL_WRITE, MDL_EXCLUSIVE))
             MYSQL_YYABORT;

               /*
                 For CREATE TABLE, an non-existing table is not an error.
                 Instruct open_tables() to just take an MDL lock if the
                 table does not exist.
               */
             lex->alter_info.reset();
             lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
             lex->name= null_clex_str;
             lex->create_last_non_select_table= lex->last_table();
             if (unlikely(!(lex->create_info.seq_create_info=
                            new (thd->mem_root) sequence_definition())))
               MYSQL_YYABORT;
         }
#line 31120 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 141: /* create: create_or_replace opt_temporary SEQUENCE_SYM opt_if_not_exists table_ident $@10 opt_sequence opt_create_table_options  */
#line 2581 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= thd->lex;

            if (unlikely(lex->create_info.seq_create_info->
                         check_and_adjust(thd, 1)))
            {
              my_error(ER_SEQUENCE_INVALID_DATA, MYF(0),
                       lex->first_select_lex()->table_list.first->db.str,
                       lex->first_select_lex()->table_list.first->
                         table_name.str);
              MYSQL_YYABORT;
            }

            /* No fields specified, generate them */
            if (unlikely(
                lex->create_info.seq_create_info->prepare_sequence_fields(
                &lex->alter_info.create_list, false)))
               MYSQL_YYABORT;

            /* CREATE SEQUENCE always creates a sequence */
            Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= 1;

            create_table_set_open_action_and_adjust_tables(lex);
            Lex->pop_select(); //main select
          }
#line 31151 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 142: /* $@11: %empty  */
#line 2608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31160 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 143: /* $@12: %empty  */
#line 2615 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::MULTIPLE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 31171 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 144: /* create: create_or_replace INDEX_SYM opt_if_not_exists $@11 ident opt_key_algorithm_clause ON table_ident $@12 '(' key_list ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31179 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 145: /* $@13: %empty  */
#line 2627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31188 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 146: /* $@14: %empty  */
#line 2634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index(Key::UNIQUE, &(yyvsp[-3].ident_sys), (yyvsp[-2].key_alg), (yyvsp[-8].object_ddl_options) | (yyvsp[-5].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 31199 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 147: /* create: create_or_replace UNIQUE_SYM INDEX_SYM opt_if_not_exists $@13 ident opt_key_algorithm_clause ON table_ident $@14 '(' key_list opt_without_overlaps ')' opt_lock_wait_timeout normal_key_options opt_index_lock_algorithm  */
#line 2643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31207 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 148: /* $@15: %empty  */
#line 2647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31216 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 149: /* $@16: %empty  */
#line 2653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 31227 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 150: /* create: create_or_replace fulltext INDEX_SYM $@15 opt_if_not_exists ident ON table_ident $@16 '(' key_list ')' opt_lock_wait_timeout fulltext_key_options opt_index_lock_algorithm  */
#line 2661 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31235 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 151: /* $@17: %empty  */
#line 2665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 31244 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 152: /* $@18: %empty  */
#line 2671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_create_index_prepare((yyvsp[0].table)))
              MYSQL_YYABORT;
            if (Lex->add_create_index((yyvsp[-6].key_type), &(yyvsp[-2].ident_sys), HA_KEY_ALG_UNDEF, (yyvsp[-7].object_ddl_options) | (yyvsp[-3].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 31255 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 153: /* create: create_or_replace spatial_or_vector INDEX_SYM $@17 opt_if_not_exists ident ON table_ident $@18 '(' key_part_simple ')' opt_lock_wait_timeout spatial_key_options opt_index_lock_algorithm  */
#line 2679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-4].key_part), thd->mem_root);
            Lex->pop_select(); //main select
          }
#line 31264 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 154: /* $@19: %empty  */
#line 2684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
          }
#line 31272 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 155: /* create: create_or_replace DATABASE opt_if_not_exists ident $@19 opt_create_database_options  */
#line 2688 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->set_command_with_check(SQLCOM_CREATE_DB, 0,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
               MYSQL_YYABORT;
            lex->name= (yyvsp[-2].ident_sys);
          }
#line 31284 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 156: /* $@20: %empty  */
#line 2697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
            if (Lex->add_create_view(thd, (yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options),
                                     DTYPE_ALGORITHM_UNDEFINED, (yyvsp[-3].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 31297 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 157: /* create: create_or_replace definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@20 view_list_opt AS view_select  */
#line 2706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31305 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 158: /* $@21: %empty  */
#line 2711 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_view(thd, (yyvsp[-6].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-5].num), (yyvsp[-3].view_suid), (yyvsp[0].table))))
              MYSQL_YYABORT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->inc_select_stack_outer_barrier();
          }
#line 31317 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 159: /* create: create_or_replace view_algorithm definer_opt opt_view_suid VIEW_SYM opt_if_not_exists table_ident $@21 view_list_opt AS view_select  */
#line 2719 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31325 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 160: /* $@22: %empty  */
#line 2723 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 31335 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 161: /* create: create_or_replace definer_opt TRIGGER_SYM $@22 trigger_tail  */
#line 2729 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31343 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 162: /* $@23: %empty  */
#line 2733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
          }
#line 31353 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 163: /* create: create_or_replace definer_opt EVENT_SYM $@23 event_tail  */
#line 2739 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 31361 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 164: /* create: create_or_replace USER_SYM opt_if_not_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 2744 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_USER,
                                                     (yyvsp[-7].object_ddl_options) | (yyvsp[-5].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31371 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 165: /* create: create_or_replace ROLE_SYM opt_if_not_exists clear_privileges role_list opt_with_admin  */
#line 2751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_command_with_check(SQLCOM_CREATE_ROLE,
                         (yyvsp[-5].object_ddl_options) | (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 31381 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 166: /* $@24: %empty  */
#line 2756 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->set_command(SQLCOM_CREATE_SERVER, (yyvsp[0].object_ddl_options)); }
#line 31387 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 167: /* create: create_or_replace $@24 server_def  */
#line 2758 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 31393 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 169: /* opt_sequence: %empty  */
#line 2763 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 31399 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 173: /* sequence_def: AS int_type field_options  */
#line 2774 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_as))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "AS"));
            if ((yyvsp[0].ulong_num) & ZEROFILL_FLAG)
                my_yyabort_error((ER_BAD_OPTION_VALUE, MYF(0), "ZEROFILL",
                                  "AS"));
            seq->value_type = (yyvsp[-1].type_handler)->field_type();
            seq->is_unsigned= (yyvsp[0].ulong_num) & UNSIGNED_FLAG ? true : false;
            seq->used_fields|= seq_field_used_as;
          }
#line 31415 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 174: /* sequence_def: MINVALUE_SYM opt_equal sequence_truncated_value_hybrid_num  */
#line 2786 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            seq->min_value_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|=
              seq_field_used_min_value;
            seq->used_fields|=
              seq_field_specified_min_value;
          }
#line 31430 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 175: /* sequence_def: NO_SYM MINVALUE_SYM  */
#line 2797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            seq->used_fields|= seq_field_used_min_value;
          }
#line 31441 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 176: /* sequence_def: NOMINVALUE_SYM  */
#line 2804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_min_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MINVALUE"));
            seq->used_fields|= seq_field_used_min_value;
          }
#line 31452 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 177: /* sequence_def: MAXVALUE_SYM opt_equal sequence_truncated_value_hybrid_num  */
#line 2811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            seq->max_value_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|= seq_field_used_max_value;
            seq->used_fields|= seq_field_specified_max_value;
          }
#line 31465 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 178: /* sequence_def: NO_SYM MAXVALUE_SYM  */
#line 2820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            seq->used_fields|= seq_field_used_max_value;
          }
#line 31476 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 179: /* sequence_def: NOMAXVALUE_SYM  */
#line 2827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_max_value))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "MAXVALUE"));
            seq->used_fields|= seq_field_used_max_value;
          }
#line 31487 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 180: /* sequence_def: START_SYM opt_with sequence_value_hybrid_num  */
#line 2834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_start))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "START"));
            seq->start_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|= seq_field_used_start;
          }
#line 31499 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 181: /* sequence_def: INCREMENT_SYM opt_by sequence_value_num  */
#line 2842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_increment))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "INCREMENT"));
            seq->increment= (yyvsp[0].longlong_number);
            seq->used_fields|= seq_field_used_increment;
          }
#line 31511 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 182: /* sequence_def: CACHE_SYM opt_equal sequence_value_num  */
#line 2850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            seq->cache= (yyvsp[0].longlong_number);
            seq->used_fields|= seq_field_used_cache;
          }
#line 31523 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 183: /* sequence_def: NOCACHE_SYM  */
#line 2858 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cache))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CACHE"));
            seq->cache= 0;
            seq->used_fields|= seq_field_used_cache;
          }
#line 31535 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 184: /* sequence_def: CYCLE_SYM  */
#line 2866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            seq->cycle= 1;
            seq->used_fields|= seq_field_used_cycle;
          }
#line 31547 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 185: /* sequence_def: NOCYCLE_SYM  */
#line 2874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_cycle))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CYCLE"));
            seq->cycle= 0;
            seq->used_fields|= seq_field_used_cycle;
          }
#line 31559 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 186: /* sequence_def: RESTART_SYM  */
#line 2882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            seq->used_fields|= seq_field_used_restart;
          }
#line 31575 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 187: /* sequence_def: RESTART_SYM opt_with sequence_value_hybrid_num  */
#line 2894 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sql_command != SQLCOM_ALTER_SEQUENCE))
            {
              thd->parse_error(ER_SYNTAX_ERROR, "RESTART");
              MYSQL_YYABORT;
            }
            sequence_definition *seq= Lex->create_info.seq_create_info;
            if (unlikely(seq->used_fields & seq_field_used_restart))
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "RESTART"));
            seq->restart_from_parser= (yyvsp[0].longlong_hybrid_number);
            seq->used_fields|=
              seq_field_used_restart | seq_field_used_restart_value;
          }
#line 31593 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 188: /* force_lookahead: %empty  */
#line 2910 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 31599 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 189: /* force_lookahead: FORCE_LOOKAHEAD  */
#line 2910 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 31605 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 190: /* $@25: %empty  */
#line 2914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 31615 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 191: /* server_def: SERVER_SYM opt_if_not_exists ident_or_text $@25 FOREIGN DATA_SYM WRAPPER_SYM ident_or_text OPTIONS_SYM '(' server_options_list ')'  */
#line 2921 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->server_options.scheme= (yyvsp[-4].lex_str); }
#line 31621 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 194: /* server_option: USER_SYM TEXT_STRING_sys  */
#line 2931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.username.str == 0);
            Lex->server_options.username= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 195: /* server_option: HOST_SYM TEXT_STRING_sys  */
#line 2944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.host.str == 0);
            Lex->server_options.host= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31655 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 196: /* server_option: DATABASE TEXT_STRING_sys  */
#line 2957 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.db.str == 0);
            Lex->server_options.db= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31672 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 197: /* server_option: OWNER_SYM TEXT_STRING_sys  */
#line 2970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.owner.str == 0);
            Lex->server_options.owner= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31689 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 198: /* server_option: PASSWORD_SYM TEXT_STRING_sys  */
#line 2983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.password.str == 0);
            Lex->server_options.password= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31706 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 199: /* server_option: SOCKET_SYM TEXT_STRING_sys  */
#line 2996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS(Lex->server_options.socket.str == 0);
            Lex->server_options.socket= (yyvsp[0].lex_str);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31723 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 200: /* server_option: PORT_SYM ulong_num  */
#line 3009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->server_options.port= (yyvsp[0].ulong_num);
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                (yyvsp[0].ulong_num), thd->mem_root);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31738 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 201: /* server_option: PORT_SYM TEXT_STRING_sys  */
#line 3021 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            char *end= (char *) (yyvsp[0].lex_str).str + (yyvsp[0].lex_str).length;
            longlong p= my_strtoll10((yyvsp[0].lex_str).str, &end, &error);
            if (error > 0 || end != (char *) (yyvsp[0].lex_str).str + (yyvsp[0].lex_str).length ||
                p > LONG_MAX || p < LONG_MIN)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->server_options.port= (long) p;
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].kwd))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31763 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 202: /* server_option: IDENT_sys TEXT_STRING_sys  */
#line 3042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            engine_option_value *new_option=
              new (thd->mem_root) engine_option_value(
                engine_option_value::Name(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[-1].ident_sys))),
                engine_option_value::Value(
                  safe_lexcstrdup_root(thd->mem_root, (yyvsp[0].lex_str))), true);
            new_option->link(&Lex->server_options.option_list,
                             &Lex->option_list_last);
          }
#line 31778 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 203: /* $@26: %empty  */
#line 3056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yyvsp[-2].simple_string);
            if (unlikely(lex->add_create_options_with_check((yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
            if (unlikely(!(lex->event_parse_data=
                           Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 31799 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 204: /* event_tail: remember_name opt_if_not_exists sp_name $@26 ON SCHEDULE_SYM ev_schedule_time opt_ev_on_completion opt_ev_status opt_ev_comment DO_SYM ev_sql_stmt  */
#line 3077 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 31811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 205: /* $@27: %empty  */
#line 3088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 31820 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 207: /* ev_schedule_time: AT_SYM expr  */
#line 3095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 31828 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 208: /* opt_ev_status: %empty  */
#line 3101 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 31834 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 209: /* opt_ev_status: ENABLE_SYM  */
#line 3103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 31844 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 210: /* opt_ev_status: DISABLE_SYM ON SLAVE  */
#line 3109 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true; 
            (yyval.num)= 1;
          }
#line 31854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 211: /* opt_ev_status: DISABLE_SYM  */
#line 3115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 31864 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 212: /* ev_starts: %empty  */
#line 3124 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_current_timestamp(thd, 0);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 31875 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 213: /* ev_starts: STARTS_SYM expr  */
#line 3131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 31883 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 215: /* ev_ends: ENDS_SYM expr  */
#line 3139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 31891 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 216: /* opt_ev_on_completion: %empty  */
#line 3145 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 31897 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 218: /* ev_on_completion: ON COMPLETION_SYM opt_not PRESERVE_SYM  */
#line 3151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->event_parse_data->on_completion= (yyvsp[-1].num)
                                    ? Event_parse_data::ON_COMPLETION_DROP
                                    : Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 31908 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 219: /* opt_ev_comment: %empty  */
#line 3160 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 31914 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 220: /* opt_ev_comment: COMMENT_SYM TEXT_STRING_sys  */
#line 3162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->comment= Lex->event_parse_data->comment= (yyvsp[0].lex_str);
            (yyval.num)= 1;
          }
#line 31923 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 221: /* $@28: %empty  */
#line 3169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_EVENT_RECURSION_FORBIDDEN, MYF(0)));
              
            if (unlikely(!lex->make_sp_head(thd,
                                            lex->event_parse_data->identifier,
                                            &sp_handler_procedure,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_ptr());
          }
#line 31960 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 222: /* ev_sql_stmt: $@28 sp_proc_stmt force_lookahead  */
#line 3202 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* return back to the original memory root ASAP */
            if (Lex->sp_body_finalize_event(thd))
              MYSQL_YYABORT;
          }
#line 31970 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 223: /* clear_privileges: %empty  */
#line 3211 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           LEX *lex=Lex;
           lex->users_list.empty();
           lex->first_select_lex()->db= null_clex_str;
           lex->account_options.reset();
         }
#line 31981 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 224: /* opt_aggregate: %empty  */
#line 3220 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= NOT_AGGREGATE; }
#line 31987 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 225: /* opt_aggregate: AGGREGATE_SYM  */
#line 3221 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.sp_aggregate_type)= GROUP_AGGREGATE; }
#line 31993 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 226: /* sp_handler: FUNCTION_SYM  */
#line 3226 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_function; }
#line 31999 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 227: /* sp_handler: PROCEDURE_SYM  */
#line 3227 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_handler)= &sp_handler_procedure; }
#line 32005 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 230: /* sp_handler_package_spec: PACKAGE_ORACLE_SYM  */
#line 3233 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 32011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 231: /* sp_handler_package_spec: PACKAGE_MARIADB_SYM  */
#line 3234 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_spec; }
#line 32017 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 232: /* sp_handler_package_body: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM  */
#line 3238 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_body; }
#line 32023 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 233: /* sp_handler_package_body: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM  */
#line 3239 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.sp_handler)= &sp_handler_package_body; }
#line 32029 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 234: /* drop_routine: DROP sp_handler opt_if_exists ident '.' ident  */
#line 3244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_routine((yyvsp[-4].sp_handler), (yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 32038 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 235: /* drop_routine: DROP sp_handler opt_if_exists ident  */
#line 3249 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_drop_routine((yyvsp[-2].sp_handler), (yyvsp[-1].object_ddl_options), Lex_ident_sys(), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 32047 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 236: /* sp_name: ident '.' ident  */
#line 3258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 32056 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 237: /* sp_name: ident  */
#line 3263 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spname)= Lex->make_sp_name(thd, (yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 32065 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 238: /* sp_a_chistics: %empty  */
#line 3270 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32071 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 239: /* sp_a_chistics: sp_a_chistics sp_chistic  */
#line 3271 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 32077 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 240: /* sp_c_chistics: %empty  */
#line 3275 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32083 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 241: /* sp_c_chistics: sp_c_chistics sp_c_chistic  */
#line 3276 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 32089 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 242: /* sp_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 3282 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 32095 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 243: /* sp_chistic: LANGUAGE_SYM SQL_SYM  */
#line 3284 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Just parse it, we only have one language for now. */ }
#line 32101 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 244: /* sp_chistic: NO_SYM SQL_SYM  */
#line 3286 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 32107 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 245: /* sp_chistic: CONTAINS_SYM SQL_SYM  */
#line 3288 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 32113 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 246: /* sp_chistic: READS_SYM SQL_SYM DATA_SYM  */
#line 3290 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 32119 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 247: /* sp_chistic: MODIFIES_SYM SQL_SYM DATA_SYM  */
#line 3292 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 32125 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 248: /* sp_chistic: sp_suid  */
#line 3294 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 32131 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 249: /* sp_c_chistic: sp_chistic  */
#line 3299 "/home/buildbot/git/sql/sql_yacc.yy"
                                { }
#line 32137 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 250: /* sp_c_chistic: opt_not DETERMINISTIC_SYM  */
#line 3300 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { Lex->sp_chistics.detistic= ! (yyvsp[-1].num); }
#line 32143 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 251: /* sp_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 3304 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_SUID; }
#line 32149 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 252: /* sp_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 3305 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.sp_suid)= SP_IS_NOT_SUID; }
#line 32155 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 253: /* $@29: %empty  */
#line 3310 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32164 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 254: /* call: CALL_SYM ident $@29 opt_sp_cparam_list  */
#line 3315 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 32173 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 255: /* $@30: %empty  */
#line 3320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32182 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 256: /* call: CALL_SYM ident '.' ident $@30 opt_sp_cparam_list  */
#line 3325 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 32191 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 257: /* $@31: %empty  */
#line 3330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->call_statement_start(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32200 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 258: /* call: CALL_SYM ident '.' ident '.' ident $@31 opt_sp_cparam_list  */
#line 3335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 32209 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 260: /* $@32: %empty  */
#line 3345 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          thd->where= THD_WHERE::USE_WHERE_STRING;
          thd->where_str= "CALL";
        }
#line 32218 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 264: /* sp_cparams: sp_cparams ',' expr  */
#line 3358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
           Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 32226 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 265: /* sp_cparams: expr  */
#line 3362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->value_list.push_back((yyvsp[0].item), thd->mem_root);
          }
#line 32234 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 266: /* sp_fdparam_list: %empty  */
#line 3370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
            Lex->sphead->m_param_end= Lex->sphead->m_param_begin;
          }
#line 32243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 267: /* $@33: %empty  */
#line 3375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start();
          }
#line 32251 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 268: /* sp_fdparam_list: $@33 sp_fdparams  */
#line 3379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 32259 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 273: /* sp_param_name: ident  */
#line 3396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.spvar)= Lex->sp_param_init(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 32268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 274: /* sp_param_name_and_mode_init_vars: sp_param_name_and_mode  */
#line 3404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, 1);
            (yyval.spvar)= (yyvsp[0].spvar);
          }
#line 32277 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 279: /* sp_parameter_type: IN_SYM  */
#line 3422 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_IN; }
#line 32283 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 280: /* sp_parameter_type: OUT_SYM  */
#line 3423 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_OUT; }
#line 32289 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 281: /* sp_parameter_type: INOUT_SYM  */
#line 3424 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.spvar_mode)= sp_variable::MODE_INOUT; }
#line 32295 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 282: /* $@34: %empty  */
#line 3429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_begin= YYLIP->get_cpp_tok_start() + 1;
          }
#line 32303 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 283: /* sp_parenthesized_pdparam_list: '(' $@34 sp_pdparam_list ')'  */
#line 3434 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->m_param_end= YYLIP->get_cpp_tok_start();
          }
#line 32311 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 284: /* sp_param_default: sp_param_init_vars sp_opt_default  */
#line 3441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_set_default_and_finalize(((yyval.spvar)= (yyvsp[-1].spvar)), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
          }
#line 32320 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 285: /* sp_param: sp_param_init_vars  */
#line 3449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_set_default_and_finalize(((yyval.spvar)= (yyvsp[0].spvar)), nullptr, empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 32329 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 287: /* sp_proc_stmts: %empty  */
#line 3460 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 32335 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 289: /* sp_proc_stmts1: sp_proc_stmt ';'  */
#line 3465 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 32341 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 291: /* optionally_qualified_column_ident: sp_decl_ident  */
#line 3472 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                         Qualified_column_ident(&(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 32351 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 292: /* optionally_qualified_column_ident: sp_decl_ident '.' ident  */
#line 3478 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 32361 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 293: /* optionally_qualified_column_ident: sp_decl_ident '.' ident '.' ident  */
#line 3484 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.qualified_column_ident)= new (thd->mem_root)
                           Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 32371 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 294: /* row_field_definition: row_field_name field_type  */
#line 3494 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 32380 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 295: /* row_field_definition_list: row_field_definition  */
#line 3502 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition_list)= Row_definition_list::make(thd->mem_root, (yyvsp[0].spvar_definition))))
              MYSQL_YYABORT;
          }
#line 32389 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 296: /* row_field_definition_list: row_field_definition_list ',' row_field_definition  */
#line 3507 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.spvar_definition_list)= (yyvsp[-2].spvar_definition_list))->append_uniq(thd->mem_root, (yyvsp[0].spvar_definition)))
              MYSQL_YYABORT;
          }
#line 32398 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 297: /* row_type_body: '(' row_field_definition_list ')'  */
#line 3514 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { (yyval.spvar_definition_list)= (yyvsp[-1].spvar_definition_list); }
#line 32404 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 298: /* sp_decl_idents_init_vars: sp_decl_idents  */
#line 3564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_variable_declarations_init(thd, (yyvsp[0].num));
          }
#line 32412 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 299: /* $@35: %empty  */
#line 3572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                            COLUMN_DEFINITION_ROUTINE_LOCAL);
          }
#line 32421 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 300: /* sp_decl_variable_list: sp_decl_idents_init_vars field_type_all_with_record $@35 sp_opt_default  */
#line 3577 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_finalize(thd, (yyvsp[-3].num),
                                                                &Lex->last_field[0],
                                                                (yyvsp[0].expr_and_query_str).expr,
                                                                (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 32434 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 301: /* sp_decl_variable_list: sp_decl_idents_init_vars ROW_SYM row_type_body sp_opt_default  */
#line 3588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_row_finalize(thd, (yyvsp[-3].num), (yyvsp[-1].spvar_definition_list),
                                                                    (yyvsp[0].expr_and_query_str).expr,
                                                                    (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-3].num));
          }
#line 32446 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 303: /* $@36: %empty  */
#line 3600 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_init(thd, (yyvsp[-2].num))))
              MYSQL_YYABORT;
          }
#line 32455 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 304: /* sp_decl_handler: sp_handler_type HANDLER_SYM FOR_SYM $@36 sp_hcond_list sp_proc_stmt  */
#line 3605 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_handler_declaration_finalize(thd, (yyvsp[-5].num))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 32466 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 307: /* sp_cursor_stmt_lex: %empty  */
#line 3620 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->lex->sphead);
            if (unlikely(!((yyval.sp_cursor_stmt)= new (thd->mem_root)
                           sp_lex_cursor(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 32477 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 308: /* $@37: %empty  */
#line 3630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].sp_cursor_stmt));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 32488 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 309: /* sp_cursor_stmt: sp_cursor_stmt_lex $@37 remember_name select remember_end  */
#line 3637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex == (yyvsp[-4].sp_cursor_stmt));
            Lex->pop_select(); //main select
            if (unlikely((yyvsp[-4].sp_cursor_stmt)->stmt_finalize(thd)))
              MYSQL_YYABORT;
	    if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyvsp[-4].sp_cursor_stmt)->set_expr_str(expr_str);
            }
            if (unlikely((yyvsp[-4].sp_cursor_stmt)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;

            (yyval.sp_cursor_stmt)= (yyvsp[-4].sp_cursor_stmt);
          }
#line 32511 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 310: /* sp_handler_type: EXIT_MARIADB_SYM  */
#line 3658 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::EXIT; }
#line 32517 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 311: /* sp_handler_type: CONTINUE_MARIADB_SYM  */
#line 3659 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= sp_handler::CONTINUE; }
#line 32523 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 312: /* sp_handler_type: EXIT_ORACLE_SYM  */
#line 3660 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::EXIT; }
#line 32529 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 313: /* sp_handler_type: CONTINUE_ORACLE_SYM  */
#line 3661 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.num)= sp_handler::CONTINUE; }
#line 32535 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 314: /* sp_hcond_list: sp_hcond_element  */
#line 3667 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 32541 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 315: /* sp_hcond_list: sp_hcond_list ',' sp_hcond_element  */
#line 3669 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)+= 1; }
#line 32547 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 316: /* sp_hcond_element: sp_hcond  */
#line 3674 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *ctx= lex->spcont->parent_context();

            if (unlikely(ctx->check_duplicate_handler((yyvsp[0].spcondvalue))))
              my_yyabort_error((ER_SP_DUP_HANDLER, MYF(0)));

            sp_instr_hpush_jump *i= (sp_instr_hpush_jump *)sp->last_instruction();
            i->add_condition((yyvsp[0].spcondvalue));
          }
#line 32563 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 317: /* sp_cond: ulong_num  */
#line 3689 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* mysql errno */
            if (unlikely((yyvsp[0].ulong_num) == 0))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "CONDITION", "0"));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].ulong_num));
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 32575 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 319: /* sqlstate: SQLSTATE_SYM opt_value TEXT_STRING_literal  */
#line 3701 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (unlikely(!is_sqlstate_valid(&(yyvsp[0].lex_str)) ||
                         is_sqlstate_completion((yyvsp[0].lex_str).str)))
              my_yyabort_error((ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lex_str).str));
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value((yyvsp[0].lex_str).str);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 32596 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 320: /* opt_value: %empty  */
#line 3720 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 32602 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 321: /* opt_value: VALUE_SYM  */
#line 3721 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 32608 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 322: /* sp_hcond: sp_cond  */
#line 3726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 32616 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 323: /* sp_hcond: ident  */
#line 3730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= Lex->spcont->find_declared_or_predefined_condition(thd, &(yyvsp[0].ident_sys));
            if (unlikely((yyval.spcondvalue) == NULL))
              my_yyabort_error((ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 32626 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 324: /* sp_hcond: SQLWARNING_SYM  */
#line 3736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::WARNING);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 32636 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 325: /* sp_hcond: not FOUND_SYM  */
#line 3742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::NOT_FOUND);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 32646 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 326: /* sp_hcond: SQLEXCEPTION_SYM  */
#line 3748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 32656 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 327: /* sp_hcond: OTHERS_ORACLE_SYM  */
#line 3754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spcondvalue)= new (thd->mem_root) sp_condition_value(sp_condition_value::EXCEPTION);
            if (unlikely((yyval.spcondvalue) == NULL))
              MYSQL_YYABORT;
          }
#line 32666 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 328: /* raise_stmt_oracle: RAISE_ORACLE_SYM opt_set_signal_information  */
#line 3764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, NULL)))
              MYSQL_YYABORT;
          }
#line 32675 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 329: /* raise_stmt_oracle: RAISE_ORACLE_SYM signal_value opt_set_signal_information  */
#line 3769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 32684 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 330: /* signal_stmt: SIGNAL_SYM signal_value opt_set_signal_information  */
#line 3777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_signal_statement(thd, (yyvsp[-1].spcondvalue)))
              MYSQL_YYABORT;
          }
#line 32693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 331: /* signal_value: ident  */
#line 3785 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spcondvalue)= Lex->stmt_signal_value((yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 32702 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 332: /* signal_value: sqlstate  */
#line 3790 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 32708 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 333: /* opt_signal_value: %empty  */
#line 3795 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= NULL; }
#line 32714 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 334: /* opt_signal_value: signal_value  */
#line 3797 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 32720 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 335: /* opt_set_signal_information: %empty  */
#line 3802 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->m_parser_state->m_yacc.m_set_signal_info.clear();
          }
#line 32728 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 337: /* signal_information_item_list: signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            info->clear();
            info->m_item[index]= (yyvsp[0].item);
          }
#line 32740 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 338: /* signal_information_item_list: signal_information_item_list ',' signal_condition_information_item_name '=' signal_allowed_expr  */
#line 3819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Set_signal_information *info;
            info= &thd->m_parser_state->m_yacc.m_set_signal_info;
            int index= (int) (yyvsp[-2].diag_condition_item_name);
            if (unlikely(info->m_item[index] != NULL))
              my_yyabort_error((ER_DUP_SIGNAL_SET, MYF(0),
                                Diag_condition_item_names[index].str));
            info->m_item[index]= (yyvsp[0].item);
          }
#line 32754 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 339: /* signal_allowed_expr: literal  */
#line 3835 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 32760 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 340: /* signal_allowed_expr: variable  */
#line 3837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (unlikely(item->functype() == Item_func::SUSERVAR_FUNC))
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 32782 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 341: /* signal_allowed_expr: simple_ident  */
#line 3855 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 32788 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 342: /* signal_condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 3861 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CLASS_ORIGIN; }
#line 32794 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 343: /* signal_condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 3863 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SUBCLASS_ORIGIN; }
#line 32800 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 344: /* signal_condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 3865 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_CATALOG; }
#line 32806 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 345: /* signal_condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 3867 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_SCHEMA; }
#line 32812 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 346: /* signal_condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 3869 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CONSTRAINT_NAME; }
#line 32818 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 347: /* signal_condition_information_item_name: CATALOG_NAME_SYM  */
#line 3871 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CATALOG_NAME; }
#line 32824 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 348: /* signal_condition_information_item_name: SCHEMA_NAME_SYM  */
#line 3873 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_SCHEMA_NAME; }
#line 32830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 349: /* signal_condition_information_item_name: TABLE_NAME_SYM  */
#line 3875 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_TABLE_NAME; }
#line 32836 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 350: /* signal_condition_information_item_name: COLUMN_NAME_SYM  */
#line 3877 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_COLUMN_NAME; }
#line 32842 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 351: /* signal_condition_information_item_name: CURSOR_NAME_SYM  */
#line 3879 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_CURSOR_NAME; }
#line 32848 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 352: /* signal_condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 3881 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MESSAGE_TEXT; }
#line 32854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 353: /* signal_condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 3883 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_MYSQL_ERRNO; }
#line 32860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 354: /* signal_condition_information_item_name: ROW_NUMBER_SYM  */
#line 3885 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_condition_item_name)= DIAG_ROW_NUMBER; }
#line 32866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 355: /* resignal_stmt: RESIGNAL_SYM opt_signal_value opt_set_signal_information  */
#line 3890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_resignal_statement(thd, (yyvsp[-1].spcondvalue))))
              MYSQL_YYABORT;
          }
#line 32875 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 356: /* $@38: %empty  */
#line 3898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str= "GET DIAGNOSTICS";
          }
#line 32884 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 357: /* get_diagnostics: GET_SYM which_area DIAGNOSTICS_SYM $@38 diagnostics_information  */
#line 3903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-3].diag_area));

            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_get_diagnostics(info);

            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 32900 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 358: /* which_area: %empty  */
#line 3918 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 32906 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 359: /* which_area: CURRENT_SYM  */
#line 3920 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 32912 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 360: /* diagnostics_information: statement_information  */
#line 3925 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Statement_information((yyvsp[0].stmt_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 32922 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 361: /* diagnostics_information: CONDITION_SYM condition_number condition_information  */
#line 3931 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.diag_info)= new (thd->mem_root) Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if (unlikely((yyval.diag_info) == NULL))
              MYSQL_YYABORT;
          }
#line 32932 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 362: /* statement_information: statement_information_item  */
#line 3940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_list)= new (thd->mem_root) List<Statement_information_item>;
            if (unlikely((yyval.stmt_info_list) == NULL) ||
                unlikely((yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 32943 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 363: /* statement_information: statement_information ',' statement_information_item  */
#line 3947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 32953 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 364: /* statement_information_item: simple_target_specification '=' statement_information_item_name  */
#line 3956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.stmt_info_item)= new (thd->mem_root) Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.stmt_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 32963 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 365: /* simple_target_specification: ident_cli  */
#line 3965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= thd->lex->create_item_for_sp_var(&(yyvsp[0].ident_cli), NULL))))
              MYSQL_YYABORT;
          }
#line 32972 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 366: /* simple_target_specification: '@' ident_or_text  */
#line 3970 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 32987 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 367: /* statement_information_item_name: NUMBER_MARIADB_SYM  */
#line 3984 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 32993 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 368: /* statement_information_item_name: NUMBER_ORACLE_SYM  */
#line 3986 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 32999 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 369: /* statement_information_item_name: ROW_COUNT_SYM  */
#line 3988 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 33005 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 370: /* condition_number: signal_allowed_expr  */
#line 3997 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.item)= (yyvsp[0].item); }
#line 33011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 371: /* condition_information: condition_information_item  */
#line 4002 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_list)= new (thd->mem_root) List<Condition_information_item>;
            if (unlikely((yyval.cond_info_list) == NULL) ||
                unlikely((yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 33022 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 372: /* condition_information: condition_information ',' condition_information_item  */
#line 4009 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 33032 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 373: /* condition_information_item: simple_target_specification '=' condition_information_item_name  */
#line 4018 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.cond_info_item)= new (thd->mem_root) Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if (unlikely((yyval.cond_info_item) == NULL))
              MYSQL_YYABORT;
          }
#line 33042 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 374: /* condition_information_item_name: CLASS_ORIGIN_SYM  */
#line 4027 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 33048 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 375: /* condition_information_item_name: SUBCLASS_ORIGIN_SYM  */
#line 4029 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 33054 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 376: /* condition_information_item_name: CONSTRAINT_CATALOG_SYM  */
#line 4031 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 33060 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 377: /* condition_information_item_name: CONSTRAINT_SCHEMA_SYM  */
#line 4033 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 33066 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 378: /* condition_information_item_name: CONSTRAINT_NAME_SYM  */
#line 4035 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 33072 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 379: /* condition_information_item_name: CATALOG_NAME_SYM  */
#line 4037 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 33078 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 380: /* condition_information_item_name: SCHEMA_NAME_SYM  */
#line 4039 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 33084 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 381: /* condition_information_item_name: TABLE_NAME_SYM  */
#line 4041 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 33090 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 382: /* condition_information_item_name: COLUMN_NAME_SYM  */
#line 4043 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 33096 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 383: /* condition_information_item_name: CURSOR_NAME_SYM  */
#line 4045 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 33102 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 384: /* condition_information_item_name: MESSAGE_TEXT_SYM  */
#line 4047 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 33108 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 385: /* condition_information_item_name: MYSQL_ERRNO_SYM  */
#line 4049 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 33114 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 386: /* condition_information_item_name: RETURNED_SQLSTATE_SYM  */
#line 4051 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 33120 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 387: /* condition_information_item_name: ROW_NUMBER_SYM  */
#line 4053 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.cond_info_item_name)= Condition_information_item::ROW_NUMBER; }
#line 33126 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 389: /* sp_decl_ident: keyword_sp_decl  */
#line 4059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_ident_cli(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 33135 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 390: /* sp_decl_idents: sp_decl_ident  */
#line 4067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= 1;
          }
#line 33151 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 391: /* sp_decl_idents: sp_decl_idents ',' ident  */
#line 4079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* NOTE: field definition is filled in sp_decl section. */

            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;

            if (unlikely(spc->find_variable(&(yyvsp[0].ident_sys), TRUE)))
              my_yyabort_error((ER_SP_DUP_VAR, MYF(0), (yyvsp[0].ident_sys).str));
            spc->add_variable(thd, &(yyvsp[0].ident_sys));
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 33167 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 392: /* $@39: %empty  */
#line 4094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sphead->new_cont_backpatch(NULL);
          }
#line 33177 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 393: /* sp_proc_stmt_if: IF_SYM $@39 sp_if END IF_SYM  */
#line 4100 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sphead->do_cont_backpatch(); }
#line 33183 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 394: /* $@40: %empty  */
#line 4104 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            lex->sphead->reset_lex(thd);
            /*
              We should not push main select here, it will be done or not
              done by the statement, we just provide only a new LEX for the
              statement here as if it is start of parsing a new statement.
            */
            lex->sphead->m_tmp_query= lip->get_tok_start();
          }
#line 33200 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 395: /* sp_proc_stmt_statement: $@40 sp_statement  */
#line 4117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sp_proc_stmt_statement_finalize(thd, yychar == YYEMPTY) ||
                Lex->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 33210 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 398: /* $@41: %empty  */
#line 4132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_head *sp= (yyvsp[0].expr_lex)->sphead;
            if (unlikely(sp->m_handler->add_instr_freturn(thd, sp, (yyvsp[0].expr_lex)->spcont,
                                                          (yyvsp[0].expr_lex)->get_item(), (yyvsp[0].expr_lex))))
              MYSQL_YYABORT;
          }
#line 33221 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 399: /* sp_proc_stmt_return: RETURN_ALLMODES_SYM expr_lex $@41  */
#line 4138 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 33227 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 400: /* sp_proc_stmt_return: RETURN_ORACLE_SYM  */
#line 4140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            if (unlikely(sp->m_handler->add_instr_preturn(thd, sp,
                                                               lex->spcont)))
              MYSQL_YYABORT;
          }
#line 33239 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 401: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM  */
#line 4151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, nullptr, empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 33248 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 402: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident  */
#line 4156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_exit_statement(thd, &(yyvsp[0].ident_sys), nullptr,
                                                empty_clex_str)))
              MYSQL_YYABORT;
          }
#line 33258 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 403: /* $@42: %empty  */
#line 4162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, (yyvsp[0].expr_lex)->get_item(),
                                               (yyvsp[0].expr_lex)->get_expr_str())))
              MYSQL_YYABORT;
          }
#line 33268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 404: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM WHEN_SYM expr_lex $@42  */
#line 4167 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 33274 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 405: /* $@43: %empty  */
#line 4169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_exit_statement(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].expr_lex)->get_item(),
                                               (yyvsp[0].expr_lex)->get_expr_str())))
              MYSQL_YYABORT;
          }
#line 33284 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 406: /* sp_proc_stmt_exit_oracle: EXIT_ORACLE_SYM label_ident WHEN_SYM expr_lex $@43  */
#line 4174 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 33290 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 407: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM  */
#line 4179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd)))
              MYSQL_YYABORT;
          }
#line 33299 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 408: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident  */
#line 4184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_continue_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33308 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 409: /* $@44: %empty  */
#line 4189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd)))
              MYSQL_YYABORT;
          }
#line 33317 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 410: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM WHEN_SYM expr_lex $@44  */
#line 4193 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 33323 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 411: /* $@45: %empty  */
#line 4195 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->sp_continue_when_statement(thd, &(yyvsp[-2].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33332 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 412: /* sp_proc_stmt_continue_oracle: CONTINUE_ORACLE_SYM label_ident WHEN_SYM expr_lex $@45  */
#line 4199 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* See the comment 'COMMENT_FOR_DESCTRUCTOR' near %destructor */ }
#line 33338 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 413: /* sp_proc_stmt_leave: LEAVE_SYM label_ident  */
#line 4205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_leave_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33347 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 414: /* sp_proc_stmt_iterate: ITERATE_SYM label_ident  */
#line 4213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_iterate_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33356 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 415: /* sp_proc_stmt_goto_oracle: GOTO_ORACLE_SYM label_ident  */
#line 4221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_goto_statement(thd, &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33365 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 416: /* @46: %empty  */
#line 4229 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.expr_lex)= new (thd->mem_root)
                           sp_expr_lex(thd, thd->lex))))
              MYSQL_YYABORT;
            Lex->sphead->reset_lex(thd, (yyval.expr_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 33379 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 417: /* expr_lex: @46 remember_start_opt expr remember_end  */
#line 4239 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_lex)= (yyvsp[-3].expr_lex);
            (yyval.expr_lex)->set_item((yyvsp[-1].item));

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.expr_lex)->set_expr_str(expr_str);
            }

            Lex->pop_select(); //min select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
            if ((yyval.expr_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 33403 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 418: /* assignment_source_lex: %empty  */
#line 4262 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->sphead);
            if (unlikely(!((yyval.assignment_lex)= new (thd->mem_root)
                           sp_assignment_lex(thd, thd->lex))))
              MYSQL_YYABORT;
          }
#line 33414 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 419: /* $@47: %empty  */
#line 4272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(thd->free_list == NULL);
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 33425 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 420: /* assignment_source_expr: assignment_source_lex $@47 remember_cpp_ptr expr remember_end  */
#line 4279 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-4].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-4].assignment_lex);
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[-1].item), thd->free_list);

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.assignment_lex)->set_expr_str(expr_str);
            }

            thd->free_list= NULL;
            Lex->pop_select(); //min select
            if ((yyval.assignment_lex)->sphead->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 33449 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 421: /* $@48: %empty  */
#line 4302 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->reset_lex(thd, (yyvsp[0].assignment_lex));
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= FOR_LOOP_BOUND;
          }
#line 33460 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 422: /* for_loop_bound_expr: assignment_source_lex $@48 remember_cpp_ptr expr remember_end  */
#line 4309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-4].assignment_lex) == thd->lex);
            (yyval.assignment_lex)= (yyvsp[-4].assignment_lex);
            (yyval.assignment_lex)->set_item_and_free_list((yyvsp[-1].item), nullptr);

            if (Lex->is_metadata_used())
            {
              LEX_CSTRING expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));

              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
              (yyval.assignment_lex)->set_expr_str(expr_str);
            }

            Lex->pop_select(); //main select
            if (unlikely((yyval.assignment_lex)->sphead->restore_lex(thd)))
              MYSQL_YYABORT;
            Lex->current_select->parsing_place= NO_MATTER;
          }
#line 33484 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 423: /* cursor_actual_parameters: assignment_source_expr  */
#line 4332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.sp_assignment_lex_list)= new (thd->mem_root) List<sp_assignment_lex>)))
              MYSQL_YYABORT;
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 33494 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 424: /* cursor_actual_parameters: cursor_actual_parameters ',' assignment_source_expr  */
#line 4338 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.sp_assignment_lex_list)= (yyvsp[-2].sp_assignment_lex_list);
            (yyval.sp_assignment_lex_list)->push_back((yyvsp[0].assignment_lex), thd->mem_root);
          }
#line 33503 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 425: /* opt_parenthesized_cursor_actual_parameters: %empty  */
#line 4345 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= NULL; }
#line 33509 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 426: /* opt_parenthesized_cursor_actual_parameters: '(' cursor_actual_parameters ')'  */
#line 4346 "/home/buildbot/git/sql/sql_yacc.yy"
                                             { (yyval.sp_assignment_lex_list)= (yyvsp[-1].sp_assignment_lex_list); }
#line 33515 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 430: /* sp_proc_stmt_open: OPEN_SYM ident opt_parenthesized_cursor_actual_parameters  */
#line 4357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_open_cursor(thd, &(yyvsp[-1].ident_sys), (yyvsp[0].sp_assignment_lex_list))))
              MYSQL_YYABORT;
          }
#line 33524 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 431: /* sp_proc_stmt_fetch_head: FETCH_SYM ident INTO  */
#line 4365 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33533 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 432: /* sp_proc_stmt_fetch_head: FETCH_SYM FROM ident INTO  */
#line 4370 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33542 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 433: /* sp_proc_stmt_fetch_head: FETCH_SYM NEXT_SYM FROM ident INTO  */
#line 4375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_add_cfetch(thd, &(yyvsp[-1].ident_sys))))
              MYSQL_YYABORT;
          }
#line 33551 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 434: /* sp_proc_stmt_fetch: sp_proc_stmt_fetch_head sp_fetch_list  */
#line 4382 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { }
#line 33557 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 435: /* sp_proc_stmt_fetch: FETCH_SYM GROUP_SYM NEXT_SYM ROW_SYM  */
#line 4384 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (unlikely(Lex->sp_add_agg_cfetch()))
             MYSQL_YYABORT;
         }
#line 33566 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 436: /* sp_proc_stmt_close: CLOSE_SYM ident  */
#line 4392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint offset;
            sp_instr_cclose *i;

            if (unlikely(!lex->spcont->find_cursor(&(yyvsp[0].ident_sys), &offset, false)))
              my_yyabort_error((ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].ident_sys).str));
            i= new (thd->mem_root)
              sp_instr_cclose(sp->instructions(), lex->spcont,  offset);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 33585 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 437: /* sp_fetch_list: ident  */
#line 4410 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 33605 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 438: /* sp_fetch_list: sp_fetch_list ',' ident  */
#line 4426 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *spc= lex->spcont;
            sp_variable *spv= likely(spc != NULL)
              ? spc->find_variable(&(yyvsp[0].ident_sys), false)
              : NULL;

            if (unlikely(!spv))
              my_yyabort_error((ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].ident_sys).str));

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();
            i->add_to_varlist(spv);
          }
#line 33625 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 439: /* $@49: %empty  */
#line 4445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_if_expr(thd)))
              MYSQL_YYABORT;
          }
#line 33634 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 440: /* $@50: %empty  */
#line 4450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-3].expr_lex)->sp_if_after_statements(thd)))
              MYSQL_YYABORT;
          }
#line 33643 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 441: /* sp_if: expr_lex THEN_SYM $@49 sp_if_then_statements $@50 sp_elseifs  */
#line 4455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sphead->backpatch(lex->spcont->pop_label());
          }
#line 33653 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 446: /* $@51: %empty  */
#line 4471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;

            /**
              An example of the CASE statement in use is
            <pre>
            CREATE PROCEDURE proc_19194_simple(i int)
            BEGIN
              DECLARE str CHAR(10);

              CASE i
                WHEN 1 THEN SET str="1";
                WHEN 2 THEN SET str="2";
                WHEN 3 THEN SET str="3";
                ELSE SET str="unknown";
              END CASE;

              SELECT str;
            END
            </pre>
              The actions are used to generate the following code:
            <pre>
            SHOW PROCEDURE CODE proc_19194_simple;
            Pos     Instruction
            0       set str@1 NULL
            1       set_case_expr (12) 0 i@0
            2       jump_if_not 5(12) (case_expr@0 = 1)
            3       set str@1 _latin1'1'
            4       jump 12
            5       jump_if_not 8(12) (case_expr@0 = 2)
            6       set str@1 _latin1'2'
            7       jump 12
            8       jump_if_not 11(12) (case_expr@0 = 3)
            9       set str@1 _latin1'3'
            10      jump 12
            11      set str@1 _latin1'unknown'
            12      stmt 0 "SELECT str"
            </pre>
            */

            Lex->sphead->new_cont_backpatch(NULL);

            /*
              BACKPATCH: Creating target label for the jump to after END CASE
              (instruction 12 in the example)
            */
            Lex->spcont->push_label(thd, &empty_clex_str, Lex->sphead->instructions());
          }
#line 33707 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 447: /* case_stmt_specification: CASE_SYM $@51 case_stmt_body else_clause_opt END CASE_SYM  */
#line 4524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              BACKPATCH: Resolving forward jump from
              "case_stmt_action_then" to after END CASE
              (jump from instruction 4 to 12, 7 to 12 ... in the example)
            */
            Lex->sphead->backpatch(Lex->spcont->pop_label());

            if ((yyvsp[-3].num))
              Lex->spcont->pop_case_expr_id();

            Lex->sphead->do_cont_backpatch();
          }
#line 33725 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 448: /* $@52: %empty  */
#line 4541 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_expr()))
              MYSQL_YYABORT;
          }
#line 33734 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 449: /* case_stmt_body: expr_lex $@52 simple_when_clause_list  */
#line 4546 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 1; }
#line 33740 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 450: /* case_stmt_body: searched_when_clause_list  */
#line 4548 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 33746 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 455: /* $@53: %empty  */
#line 4563 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Simple case: <caseval> = <whenval> */
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(true)))
              MYSQL_YYABORT;
          }
#line 33756 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 456: /* simple_when_clause: WHEN_SYM expr_lex $@53 THEN_SYM sp_case_then_statements  */
#line 4570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 33765 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 457: /* $@54: %empty  */
#line 4578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].expr_lex)->get_item()->base_flags|= item_base_t::IS_COND;
            if (unlikely((yyvsp[0].expr_lex)->case_stmt_action_when(false)))
              MYSQL_YYABORT;
          }
#line 33775 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 458: /* searched_when_clause: WHEN_SYM expr_lex $@54 THEN_SYM sp_case_then_statements  */
#line 4585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->case_stmt_action_then()))
              MYSQL_YYABORT;
          }
#line 33784 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 459: /* else_clause_opt: %empty  */
#line 4593 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            uint ip= sp->instructions();
            sp_instr_error *i= new (thd->mem_root)
              sp_instr_error(ip, lex->spcont, ER_SP_CASE_NOT_FOUND);
            if (unlikely(i == NULL) ||
                unlikely(sp->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 33799 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 461: /* sp_opt_label: %empty  */
#line 4607 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= null_clex_str; }
#line 33805 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 462: /* sp_opt_label: label_ident  */
#line 4608 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 33811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 463: /* opt_sp_for_loop_direction: %empty  */
#line 4613 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 33817 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 464: /* opt_sp_for_loop_direction: REVERSE_SYM  */
#line 4614 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= -1; }
#line 33823 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 465: /* sp_for_loop_index_and_bounds: ident_for_loop_index sp_for_loop_bounds  */
#line 4619 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_declarations(thd, &(yyval.for_loop), &(yyvsp[-1].ident_sys), (yyvsp[0].for_loop_bounds))))
              MYSQL_YYABORT;
          }
#line 33832 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 466: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr DOT_DOT_SYM for_loop_bound_expr  */
#line 4628 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds)= Lex_for_loop_bounds_intrange((yyvsp[-3].num), (yyvsp[-2].assignment_lex), (yyvsp[0].assignment_lex));
          }
#line 33840 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 467: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction for_loop_bound_expr  */
#line 4632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.for_loop_bounds).m_direction= (yyvsp[-1].num);
            (yyval.for_loop_bounds).m_index= (yyvsp[0].assignment_lex);
            (yyval.for_loop_bounds).m_target_bound= NULL;
            (yyval.for_loop_bounds).m_implicit_cursor= false;
          }
#line 33851 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 468: /* sp_for_loop_bounds: IN_SYM opt_sp_for_loop_direction '(' sp_cursor_stmt ')'  */
#line 4639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_implicit_cursor_statement(thd, &(yyval.for_loop_bounds),
                                                                    (yyvsp[-1].sp_cursor_stmt))))
              MYSQL_YYABORT;
          }
#line 33861 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 469: /* loop_body: sp_proc_stmts1 END LOOP_SYM  */
#line 4648 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            uint ip= lex->sphead->instructions();
            sp_label *lab= lex->spcont->last_label();  /* Jumping back */
            sp_instr_jump *i= new (thd->mem_root)
              sp_instr_jump(ip, lex->spcont, lab->ip);
            if (unlikely(i == NULL) ||
                unlikely(lex->sphead->add_instr(i)))
              MYSQL_YYABORT;
          }
#line 33876 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 470: /* repeat_body: sp_proc_stmts1 UNTIL_SYM expr_lex END REPEAT_SYM  */
#line 4662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-2].expr_lex)->sp_repeat_loop_finalize(thd))
              MYSQL_YYABORT;
          }
#line 33885 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 471: /* pop_sp_loop_label: sp_opt_label  */
#line 4670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_pop_loop_label(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 33894 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 472: /* $@55: %empty  */
#line 4678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 33903 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 473: /* sp_labeled_control: sp_control_label LOOP_SYM $@55 loop_body pop_sp_loop_label  */
#line 4683 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 33909 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 474: /* $@56: %empty  */
#line 4685 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 33918 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 475: /* sp_labeled_control: sp_control_label WHILE_SYM $@56 while_body pop_sp_loop_label  */
#line 4690 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 33924 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 476: /* $@57: %empty  */
#line 4692 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 33933 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 477: /* $@58: %empty  */
#line 4697 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-3].lex_str)))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 33944 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 478: /* $@59: %empty  */
#line 4704 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 33953 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 479: /* sp_labeled_control: sp_control_label FOR_SYM $@57 sp_for_loop_index_and_bounds $@58 for_loop_statements $@59 pop_sp_loop_label  */
#line 4709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-4].for_loop))))
              MYSQL_YYABORT;
          }
#line 33962 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 480: /* $@60: %empty  */
#line 4714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_label(thd, &(yyvsp[-1].lex_str))))
              MYSQL_YYABORT;
          }
#line 33971 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 481: /* sp_labeled_control: sp_control_label REPEAT_SYM $@60 repeat_body pop_sp_loop_label  */
#line 4719 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 33977 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 482: /* $@61: %empty  */
#line 4724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 33986 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 483: /* sp_unlabeled_control: LOOP_SYM $@61 loop_body  */
#line 4729 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 33994 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 484: /* $@62: %empty  */
#line 4733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 34003 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 485: /* sp_unlabeled_control: WHILE_SYM $@62 while_body  */
#line 4738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 34011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 486: /* $@63: %empty  */
#line 4742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // See "The FOR LOOP statement" comments in sql_lex.cc
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd); // The outer DECLARE..BEGIN..END block
          }
#line 34022 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 487: /* $@64: %empty  */
#line 4749 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd))) // The inner WHILE block
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_for_loop_condition_test(thd, (yyvsp[0].for_loop))))
              MYSQL_YYABORT;
          }
#line 34033 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 488: /* sp_unlabeled_control: FOR_SYM $@63 sp_for_loop_index_and_bounds $@64 for_loop_statements  */
#line 4756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_for_loop_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
            Lex->sp_pop_loop_empty_label(thd); // The inner WHILE block
            if (unlikely(Lex->sp_for_loop_outer_block_finalize(thd, (yyvsp[-2].for_loop))))
              MYSQL_YYABORT;
          }
#line 34045 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 489: /* $@65: %empty  */
#line 4764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_push_loop_empty_label(thd)))
              MYSQL_YYABORT;
          }
#line 34054 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 490: /* sp_unlabeled_control: REPEAT_SYM $@65 repeat_body  */
#line 4769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_pop_loop_empty_label(thd);
          }
#line 34062 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 491: /* trg_action_time: BEFORE_SYM  */
#line 4776 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_BEFORE; }
#line 34068 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 492: /* trg_action_time: AFTER_SYM  */
#line 4778 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.action_time= TRG_ACTION_AFTER; }
#line 34074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 493: /* trg_event: INSERT  */
#line 4783 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_INSERT; }
#line 34080 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 494: /* trg_event: UPDATE_SYM  */
#line 4785 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_UPDATE; }
#line 34086 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 495: /* trg_event: DELETE_SYM  */
#line 4787 "/home/buildbot/git/sql/sql_yacc.yy"
            { Lex->trg_chistics.event= TRG_EVENT_DELETE; }
#line 34092 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 496: /* $@66: %empty  */
#line 4792 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.option_list= NULL; }
#line 34098 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 497: /* create_body: create_field_list_parens $@66 opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4793 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 34104 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 498: /* create_body: opt_create_table_options opt_create_partitioning opt_create_select  */
#line 4794 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                             {}
#line 34110 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 499: /* create_body: create_like  */
#line 4796 "/home/buildbot/git/sql/sql_yacc.yy"
          {

            Lex->create_info.add(DDL_options_st::OPT_LIKE);
            TABLE_LIST *src_table= Lex->first_select_lex()->
              add_table_to_list(thd, (yyvsp[0].table), NULL, 0, TL_READ, MDL_SHARED_READ);
            if (unlikely(! src_table))
              MYSQL_YYABORT;
            /* CREATE TABLE ... LIKE is not allowed for views. */
            src_table->required_type= TABLE_TYPE_NORMAL;
          }
#line 34125 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 500: /* create_like: LIKE table_ident  */
#line 4809 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[0].table); }
#line 34131 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 501: /* create_like: LEFT_PAREN_LIKE LIKE table_ident ')'  */
#line 4810 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.table)= (yyvsp[-1].table); }
#line 34137 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 502: /* opt_create_select: %empty  */
#line 4814 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34143 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 503: /* opt_create_select: opt_duplicate opt_as create_select_query_expression opt_versioning_option  */
#line 4817 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.add(DDL_options_st::OPT_CREATE_SELECT);
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 34153 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 504: /* create_select_query_expression: query_expression  */
#line 4826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_insert_select((yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 34162 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 505: /* create_select_query_expression: LEFT_PAREN_WITH with_clause query_expression_no_with_clause ')'  */
#line 4831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *first_select= (yyvsp[-1].select_lex_unit)->first_select();
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to(first_select);
            if (Lex->parsed_insert_select(first_select))
              MYSQL_YYABORT;
          }
#line 34174 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 506: /* opt_create_partitioning: opt_partitioning  */
#line 4842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Remove all tables used in PARTITION clause from the global table
              list. Partitioning with subqueries is not allowed anyway.
            */
            TABLE_LIST *last_non_sel_table= Lex->create_last_non_select_table;
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;
          }
#line 34188 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 507: /* opt_partitioning: %empty  */
#line 4878 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34194 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 509: /* $@67: %empty  */
#line 4884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;
            if (lex->sql_command == SQLCOM_ALTER_TABLE)
            {
              lex->alter_info.partition_flags|= ALTER_PARTITION_INFO;
            }
          }
#line 34209 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 511: /* have_partitioning: %empty  */
#line 4899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            LEX_CSTRING partition_name={STRING_WITH_LEN("partition")};
            if (unlikely(!plugin_is_ready(&partition_name, MYSQL_STORAGE_ENGINE_PLUGIN)))
              my_yyabort_error((ER_OPTION_PREVENTS_STATEMENT, MYF(0),
                                "--skip-partition"));
#else
            my_yyabort_error((ER_FEATURE_DISABLED, MYF(0), "partitioning",
                              "--with-plugin-partition"));
#endif
          }
#line 34225 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 512: /* $@68: %empty  */
#line 4914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->part_info))
            {
              thd->parse_error(ER_PARTITION_ENTRY_ERROR);
              MYSQL_YYABORT;
            }
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              We enter here when opening the frm file to translate
              partition info string into part_info data structure.
            */
          }
#line 34243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 513: /* partition_entry: PARTITION_SYM $@68 partition  */
#line 4928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 34251 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 514: /* $@69: %empty  */
#line 4935 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->safe_to_cache_query= 1; }
#line 34257 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 516: /* part_type_def: opt_linear KEY_SYM opt_key_algo '(' part_field_list ')'  */
#line 4941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->list_of_part_fields= TRUE;
            part_info->column_list= FALSE;
            part_info->part_type= HASH_PARTITION;
          }
#line 34268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 517: /* $@70: %empty  */
#line 4948 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= HASH_PARTITION; }
#line 34274 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 518: /* part_type_def: opt_linear HASH_SYM $@70 part_func  */
#line 4949 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 34280 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 519: /* part_type_def: RANGE_SYM part_func  */
#line 4951 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 34286 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 520: /* part_type_def: RANGE_SYM part_column_list  */
#line 4953 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= RANGE_PARTITION; }
#line 34292 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 521: /* $@71: %empty  */
#line 4955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_PART_FUNC;
          }
#line 34300 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 522: /* part_type_def: LIST_SYM $@71 part_func  */
#line 4959 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
	    Lex->part_info->part_type= LIST_PARTITION; 
	    Select->parsing_place= NO_MATTER;
	  }
#line 34309 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 523: /* part_type_def: LIST_SYM part_column_list  */
#line 4964 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->part_type= LIST_PARTITION; }
#line 34315 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 524: /* $@72: %empty  */
#line 4966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(Lex->part_info->vers_init_info(thd)))
               MYSQL_YYABORT;
          }
#line 34324 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 526: /* opt_linear: %empty  */
#line 4974 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34330 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 527: /* opt_linear: LINEAR_SYM  */
#line 4976 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->linear_hash_ind= TRUE;}
#line 34336 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 528: /* opt_key_algo: %empty  */
#line 4981 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_NONE;}
#line 34342 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 529: /* opt_key_algo: ALGORITHM_SYM '=' real_ulong_num  */
#line 4983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_51;
              break;
            case 2:
              Lex->part_info->key_algorithm= partition_info::KEY_ALGORITHM_55;
              break;
            default:
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 34360 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 530: /* part_field_list: %empty  */
#line 4999 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34366 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 531: /* part_field_list: part_field_item_list  */
#line 5000 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 34372 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 532: /* part_field_item_list: part_field_item  */
#line 5004 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 34378 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 533: /* part_field_item_list: part_field_item_list ',' part_field_item  */
#line 5005 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 34384 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 534: /* part_field_item: ident  */
#line 5010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_columns++;
            if (unlikely(part_info->part_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;
            if (unlikely(part_info->num_columns > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of partition fields"));
          }
#line 34399 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 535: /* part_column_list: COLUMNS '(' part_field_list ')'  */
#line 5024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->column_list= TRUE;
            part_info->list_of_part_fields= TRUE;
          }
#line 34409 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 536: /* part_func: '(' part_func_expr ')'  */
#line 5034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->set_part_expr(thd, (yyvsp[-1].item), FALSE)))
              MYSQL_YYABORT;
            part_info->num_columns= 1;
            part_info->column_list= FALSE;
          }
#line 34421 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 537: /* sub_part_func: '(' part_func_expr ')'  */
#line 5045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->part_info->set_part_expr(thd, (yyvsp[-1].item), TRUE)))
              MYSQL_YYABORT;
          }
#line 34430 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 538: /* opt_num_parts: %empty  */
#line 5053 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34436 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 539: /* opt_num_parts: PARTITIONS_SYM real_ulong_num  */
#line 5055 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            uint num_parts= (yyvsp[0].ulong_num);
            partition_info *part_info= Lex->part_info;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "partitions"));

            part_info->num_parts= num_parts;
            part_info->use_default_num_partitions= FALSE;
          }
#line 34450 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 540: /* opt_sub_part: %empty  */
#line 5067 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34456 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 541: /* $@73: %empty  */
#line 5069 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->subpart_type= HASH_PARTITION; }
#line 34462 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 542: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear HASH_SYM sub_part_func $@73 opt_num_subparts  */
#line 5070 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 34468 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 543: /* $@74: %empty  */
#line 5073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->subpart_type= HASH_PARTITION;
            part_info->list_of_subpart_fields= TRUE;
          }
#line 34478 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 544: /* opt_sub_part: SUBPARTITION_SYM BY opt_linear KEY_SYM opt_key_algo '(' sub_part_field_list ')' $@74 opt_num_subparts  */
#line 5078 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 34484 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 545: /* sub_part_field_list: sub_part_field_item  */
#line 5082 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 34490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 546: /* sub_part_field_list: sub_part_field_list ',' sub_part_field_item  */
#line 5083 "/home/buildbot/git/sql/sql_yacc.yy"
                                                      {}
#line 34496 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 547: /* sub_part_field_item: ident  */
#line 5088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->subpart_field_list.push_back((yyvsp[0].ident_sys).str,
                         thd->mem_root)))
              MYSQL_YYABORT;

            if (unlikely(part_info->subpart_field_list.elements > MAX_REF_PARTS))
              my_yyabort_error((ER_TOO_MANY_PARTITION_FUNC_FIELDS_ERROR, MYF(0),
                                "list of subpartition fields"));
          }
#line 34511 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 548: /* part_func_expr: bit_expr  */
#line 5102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            (yyval.item)=(yyvsp[0].item);
          }
#line 34524 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 549: /* opt_num_subparts: %empty  */
#line 5113 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 34530 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 550: /* opt_num_subparts: SUBPARTITIONS_SYM real_ulong_num  */
#line 5115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint num_parts= (yyvsp[0].ulong_num);
            LEX *lex= Lex;
            if (unlikely(num_parts == 0))
              my_yyabort_error((ER_NO_PARTS_ERROR, MYF(0), "subpartitions"));
            lex->part_info->num_subparts= num_parts;
            lex->part_info->use_default_num_subpartitions= FALSE;
          }
#line 34543 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 551: /* part_defs: %empty  */
#line 5127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == RANGE_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "RANGE"));
            if (unlikely(part_info->part_type == LIST_PARTITION))
              my_yyabort_error((ER_PARTITIONS_MUST_BE_DEFINED_ERROR, MYF(0),
                                "LIST"));
          }
#line 34557 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 552: /* part_defs: '(' part_def_list ')'  */
#line 5137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            uint count_curr_parts= part_info->partitions.elements;
            if (part_info->num_parts != 0)
            {
              if (unlikely(part_info->num_parts !=
                           count_curr_parts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_PART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (count_curr_parts > 0)
            {
              part_info->num_parts= count_curr_parts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 34580 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 553: /* part_def_list: part_definition  */
#line 5158 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 34586 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 554: /* part_def_list: part_def_list ',' part_definition  */
#line 5159 "/home/buildbot/git/sql/sql_yacc.yy"
                                            {}
#line 34592 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 557: /* $@75: %empty  */
#line 5169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= new (thd->mem_root) partition_element();

            if (unlikely(!p_elem) ||
                unlikely(part_info->partitions.push_back(p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            p_elem->part_state= PART_NORMAL;
            p_elem->id= part_info->partitions.elements - 1;
            part_info->curr_part_elem= p_elem;
            part_info->current_partition= p_elem;
            part_info->use_default_partitions= FALSE;
            part_info->use_default_num_partitions= FALSE;
          }
#line 34612 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 558: /* part_definition: opt_partition $@75 part_name opt_part_values opt_part_options opt_sub_partition  */
#line 5188 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 34618 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 559: /* part_name: ident  */
#line 5193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *p_elem= part_info->curr_part_elem;
            if (unlikely(check_ident_length(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
            p_elem->partition_name= Lex_ident_partition((yyvsp[0].ident_sys));
          }
#line 34630 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 560: /* opt_part_values: %empty  */
#line 5204 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->error_if_requires_values()))
                MYSQL_YYABORT;
              if (unlikely(part_info->part_type == VERSIONING_PARTITION))
                my_yyabort_error((ER_VERS_WRONG_PARTS, MYF(0),
                                  lex->create_last_non_select_table->
                                  table_name.str));
            }
            else
              part_info->part_type= HASH_PARTITION;
          }
#line 34650 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 561: /* $@76: %empty  */
#line 5220 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != RANGE_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "RANGE", "LESS THAN"));
            }
            else
              part_info->part_type= RANGE_PARTITION;
          }
#line 34667 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 562: /* opt_part_values: VALUES_LESS_SYM THAN_SYM $@76 part_func_max  */
#line 5232 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 34673 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 563: /* $@77: %empty  */
#line 5234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "IN"));
            }
            else
              part_info->part_type= LIST_PARTITION;
          }
#line 34690 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 564: /* opt_part_values: VALUES_IN_SYM $@77 part_values_in  */
#line 5246 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 34696 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 565: /* opt_part_values: CURRENT_SYM  */
#line 5248 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_current(thd))
              MYSQL_YYABORT;
#endif
          }
#line 34707 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 566: /* opt_part_values: HISTORY_SYM  */
#line 5255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef WITH_PARTITION_STORAGE_ENGINE
            if (Lex->part_values_history(thd))
              MYSQL_YYABORT;
#endif
          }
#line 34718 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 567: /* opt_part_values: DEFAULT  */
#line 5262 "/home/buildbot/git/sql/sql_yacc.yy"
         {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            if (! lex->is_partition_management())
            {
              if (unlikely(part_info->part_type != LIST_PARTITION))
                my_yyabort_error((ER_PARTITION_WRONG_VALUES_ERROR, MYF(0),
                                  "LIST", "DEFAULT"));
            }
            else
              part_info->part_type= LIST_PARTITION;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
         }
#line 34739 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 568: /* part_func_max: MAXVALUE_SYM  */
#line 5282 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;

            if (unlikely(part_info->num_columns &&
                         part_info->num_columns != 1U))
            {
              part_info->print_debug("Kilroy II", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            else
              part_info->num_columns= 1U;
            if (unlikely(part_info->init_column_part(thd)))
              MYSQL_YYABORT;
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 34761 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 569: /* part_func_max: part_value_item  */
#line 5299 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 34767 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 570: /* part_values_in: part_value_item  */
#line 5304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            part_info->print_debug("part_values_in: part_value_item", NULL);

            if (part_info->num_columns != 1U)
            {
              if (unlikely(!lex->is_partition_management() ||
                           part_info->num_columns == 0 ||
                           part_info->num_columns > MAX_REF_PARTS))
              {
                part_info->print_debug("Kilroy III", NULL);
                thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
                MYSQL_YYABORT;
              }
              /*
                Reorganize the current large array into a list of small
                arrays with one entry in each array. This can happen
                in the first partition of an ALTER TABLE statement where
                we ADD or REORGANIZE partitions. Also can only happen
                for LIST partitions.
              */
              if (unlikely(part_info->reorganize_into_single_field_col_val(thd)))
                MYSQL_YYABORT;
            }
          }
#line 34798 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 571: /* part_values_in: '(' part_value_list ')'  */
#line 5331 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_columns < 2U))
            {
              thd->parse_error(ER_ROW_SINGLE_PARTITION_FIELD_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 34811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 572: /* part_value_list: part_value_item  */
#line 5342 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 34817 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 573: /* part_value_list: part_value_list ',' part_value_item  */
#line 5343 "/home/buildbot/git/sql/sql_yacc.yy"
                                              {}
#line 34823 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 574: /* $@78: %empty  */
#line 5348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug("( part_value_item", NULL);
            /* Initialisation code needed for each list of value expressions */
            if (unlikely(!(part_info->part_type == LIST_PARTITION &&
                           part_info->num_columns == 1U) &&
                           part_info->init_column_part(thd)))
              MYSQL_YYABORT;
          }
#line 34837 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 575: /* $@79: %empty  */
#line 5357 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 34843 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 576: /* part_value_item: '(' $@78 part_value_item_list $@79 ')'  */
#line 5359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->print_debug(") part_value_item", NULL);
            if (part_info->num_columns == 0)
              part_info->num_columns= part_info->curr_list_object;
            if (unlikely(part_info->num_columns != part_info->curr_list_object))
            {
              /*
                All value items lists must be of equal length, in some cases
                which is covered by the above if-statement we don't know yet
                how many columns is in the partition so the assignment above
                ensures that we only report errors when we know we have an
                error.
              */
              part_info->print_debug("Kilroy I", NULL);
              thd->parse_error(ER_PARTITION_COLUMN_LIST_ERROR);
              MYSQL_YYABORT;
            }
            part_info->curr_list_object= 0;
          }
#line 34868 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 577: /* part_value_item_list: part_value_expr_item  */
#line 5382 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 34874 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 578: /* part_value_item_list: part_value_item_list ',' part_value_expr_item  */
#line 5383 "/home/buildbot/git/sql/sql_yacc.yy"
                                                        {}
#line 34880 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 579: /* part_value_expr_item: MAXVALUE_SYM  */
#line 5388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->part_type == LIST_PARTITION))
            {
              thd->parse_error(ER_MAXVALUE_IN_VALUES_IN);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_max_value(thd)))
              MYSQL_YYABORT;
          }
#line 34895 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 580: /* part_value_expr_item: bit_expr  */
#line 5399 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            partition_info *part_info= lex->part_info;
            Item *part_expr= (yyvsp[0].item);

            if (unlikely(!lex->safe_to_cache_query))
            {
              thd->parse_error(ER_WRONG_EXPR_IN_PARTITION_FUNC_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(part_info->add_column_list_value(thd, part_expr)))
              MYSQL_YYABORT;
          }
#line 34913 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 581: /* opt_sub_partition: %empty  */
#line 5417 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (unlikely(part_info->num_subparts != 0 &&
                         !part_info->use_default_subpartitions))
            {
              /*
                We come here when we have defined subpartitions on the first
                partition but not on all the subsequent partitions. 
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
          }
#line 34931 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 582: /* opt_sub_partition: '(' sub_part_list ')'  */
#line 5431 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            if (part_info->num_subparts != 0)
            {
              if (unlikely(part_info->num_subparts !=
                           part_info->count_curr_subparts))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
            }
            else if (part_info->count_curr_subparts > 0)
            {
              if (unlikely(part_info->partitions.elements > 1))
              {
                thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
                MYSQL_YYABORT;
              }
              part_info->num_subparts= part_info->count_curr_subparts;
            }
            part_info->count_curr_subparts= 0;
          }
#line 34958 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 583: /* sub_part_list: sub_part_definition  */
#line 5456 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 34964 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 584: /* sub_part_list: sub_part_list ',' sub_part_definition  */
#line 5457 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 34970 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 585: /* $@80: %empty  */
#line 5462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            partition_element *curr_part= part_info->current_partition;
            partition_element *sub_p_elem= new (thd->mem_root)
                                           partition_element(curr_part);
            if (unlikely(part_info->use_default_subpartitions &&
                         part_info->partitions.elements >= 2))
            {
              /*
                create table t1 (a int)
                partition by list (a) subpartition by hash (a)
                (partition p0 values in (1),
                 partition p1 values in (2) subpartition sp11);
                causes use to arrive since we are on the second
                partition, but still use_default_subpartitions
                is set. When we come here we're processing at least
                the second partition (the current partition processed
                have already been put into the partitions list.
              */
              thd->parse_error(ER_PARTITION_WRONG_NO_SUBPART_ERROR);
              MYSQL_YYABORT;
            }
            if (unlikely(!sub_p_elem) ||
                unlikely(curr_part->subpartitions.push_back(sub_p_elem, thd->mem_root)))
              MYSQL_YYABORT;

            sub_p_elem->id= curr_part->subpartitions.elements - 1;
            part_info->curr_part_elem= sub_p_elem;
            part_info->use_default_subpartitions= FALSE;
            part_info->use_default_num_subpartitions= FALSE;
            part_info->count_curr_subparts++;
          }
#line 35007 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 586: /* sub_part_definition: SUBPARTITION_SYM $@80 sub_name opt_subpart_options  */
#line 5494 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 35013 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 587: /* sub_name: ident_or_text  */
#line 5499 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(check_ident_length(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            Lex->part_info->curr_part_elem->partition_name=
              Lex_ident_partition((yyvsp[0].lex_str));
          }
#line 35024 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 588: /* opt_part_options: %empty  */
#line 5508 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 35030 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 589: /* opt_part_options: part_option_list  */
#line 5509 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 35036 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 590: /* part_option_list: part_option_list part_option  */
#line 5513 "/home/buildbot/git/sql/sql_yacc.yy"
                                      {}
#line 35042 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 591: /* part_option_list: part_option  */
#line 5514 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 35048 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 592: /* part_option: server_part_option  */
#line 5518 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 35054 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 593: /* part_option: engine_defined_option  */
#line 5520 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->part_info->curr_part_elem->option_list,
                     &Lex->option_list_last);
          }
#line 35063 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 594: /* opt_subpart_options: %empty  */
#line 5527 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 35069 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 595: /* opt_subpart_options: subpart_option_list  */
#line 5528 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 35075 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 596: /* subpart_option_list: subpart_option_list server_part_option  */
#line 5532 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 35081 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 597: /* subpart_option_list: server_part_option  */
#line 5533 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 35087 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 598: /* server_part_option: TABLESPACE opt_equal ident_or_text  */
#line 5538 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatibility with MySQL */ }
#line 35093 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 599: /* server_part_option: opt_storage ENGINE_SYM opt_equal storage_engines  */
#line 5540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->curr_part_elem->engine_type= (yyvsp[0].db_type);
            part_info->default_engine_type= (yyvsp[0].db_type);
          }
#line 35103 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 600: /* server_part_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->curr_part_elem->connect_string.str= (yyvsp[0].lex_str).str;
            lex->part_info->curr_part_elem->connect_string.length= (yyvsp[0].lex_str).length;
          }
#line 35113 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 601: /* server_part_option: NODEGROUP_SYM opt_equal real_ulong_num  */
#line 5552 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->nodegroup_id= (uint16) (yyvsp[0].ulong_num); }
#line 35119 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 602: /* server_part_option: MAX_ROWS opt_equal real_ulonglong_num  */
#line 5554 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_max_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 35125 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 603: /* server_part_option: MIN_ROWS opt_equal real_ulonglong_num  */
#line 5556 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_min_rows= (ha_rows) (yyvsp[0].ulonglong_number); }
#line 35131 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 604: /* server_part_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5558 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->data_file_name= (yyvsp[0].lex_str).str; }
#line 35137 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 605: /* server_part_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5560 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->index_file_name= (yyvsp[0].lex_str).str; }
#line 35143 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 606: /* server_part_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5562 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->part_info->curr_part_elem->part_comment= (yyvsp[0].lex_str).str; }
#line 35149 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 607: /* opt_versioning_rotation: %empty  */
#line 5566 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 35155 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 608: /* $@81: %empty  */
#line 5567 "/home/buildbot/git/sql/sql_yacc.yy"
         { Lex->clause_that_disallows_subselect= "INTERVAL"; }
#line 35161 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 609: /* opt_versioning_rotation: $@81 INTERVAL_SYM expr interval opt_versioning_interval_start opt_vers_auto_part  */
#line 5569 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_interval(thd, (yyvsp[-3].item), (yyvsp[-2].interval), (yyvsp[-1].item), (yyvsp[0].num),
                                                     table_name)))
             MYSQL_YYABORT;
         }
#line 35173 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 610: /* opt_versioning_rotation: LIMIT ulonglong_num opt_vers_auto_part  */
#line 5577 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           partition_info *part_info= Lex->part_info;
           const char *table_name= Lex->create_last_non_select_table->table_name.str;
           if (unlikely(part_info->vers_set_limit((yyvsp[-1].ulonglong_number), (yyvsp[0].num), table_name)))
             MYSQL_YYABORT;
         }
#line 35184 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 611: /* opt_versioning_interval_start: %empty  */
#line 5588 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= NULL;
         }
#line 35192 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 612: /* opt_versioning_interval_start: STARTS_SYM literal  */
#line 5592 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.item)= (yyvsp[0].item);
         }
#line 35200 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 613: /* opt_vers_auto_part: %empty  */
#line 5599 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 0;
         }
#line 35208 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 614: /* opt_vers_auto_part: AUTO_SYM  */
#line 5603 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.num)= 1;
         }
#line 35216 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 615: /* opt_as: %empty  */
#line 5612 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35222 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 616: /* opt_as: AS  */
#line 5613 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 35228 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 617: /* opt_create_database_options: %empty  */
#line 5617 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 35234 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 618: /* opt_create_database_options: create_database_options  */
#line 5618 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 35240 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 619: /* create_database_options: create_database_option  */
#line 5622 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 35246 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 620: /* create_database_options: create_database_options create_database_option  */
#line 5623 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         {}
#line 35252 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 621: /* create_database_option: default_collation  */
#line 5627 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 35258 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 622: /* create_database_option: default_charset  */
#line 5628 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 35264 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 623: /* create_database_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 35273 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 624: /* opt_if_not_exists_table_element: %empty  */
#line 5638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= FALSE;
          }
#line 35281 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 625: /* opt_if_not_exists_table_element: IF_SYM not EXISTS  */
#line 5642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->check_exists= TRUE;
          }
#line 35289 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 626: /* opt_if_not_exists: %empty  */
#line 5649 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 35297 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 627: /* opt_if_not_exists: IF_SYM not EXISTS  */
#line 5653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_NOT_EXISTS);
          }
#line 35305 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 628: /* create_or_replace: CREATE  */
#line 5660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).init();
          }
#line 35313 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 629: /* create_or_replace: CREATE OR_SYM REPLACE  */
#line 5664 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.object_ddl_options).set(DDL_options_st::OPT_OR_REPLACE);
          }
#line 35321 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 637: /* create_table_option: ENGINE_SYM opt_equal ident_or_text  */
#line 5687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->m_sql_cmd)
            {
              DBUG_ASSERT(lex->sql_command == SQLCOM_ALTER_TABLE);
              if (!(lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table()))
                MYSQL_YYABORT;
            }
            Storage_engine_name *opt=
              lex->m_sql_cmd->option_storage_engine_name();
            DBUG_ASSERT(opt); // Expect a proper Sql_cmd
            *opt= Storage_engine_name((yyvsp[0].lex_str));
            lex->create_info.used_fields|= HA_CREATE_USED_ENGINE;
          }
#line 35340 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 638: /* create_table_option: MAX_ROWS opt_equal ulonglong_num  */
#line 5702 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.max_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MAX_ROWS;
          }
#line 35349 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 639: /* create_table_option: MIN_ROWS opt_equal ulonglong_num  */
#line 5707 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.min_rows= (yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_MIN_ROWS;
          }
#line 35358 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 640: /* create_table_option: AVG_ROW_LENGTH opt_equal ulong_num  */
#line 5712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.avg_row_length=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_AVG_ROW_LENGTH;
          }
#line 35367 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 641: /* create_table_option: PASSWORD_SYM opt_equal TEXT_STRING_sys  */
#line 5717 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.password=(yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_PASSWORD;
          }
#line 35376 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 642: /* create_table_option: COMMENT_SYM opt_equal TEXT_STRING_sys  */
#line 5722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.comment=(yyvsp[0].lex_str);
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 35385 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 643: /* create_table_option: AUTO_INC opt_equal ulonglong_num  */
#line 5727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.auto_increment_value=(yyvsp[0].ulonglong_number);
            Lex->create_info.used_fields|= HA_CREATE_USED_AUTO;
          }
#line 35394 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 644: /* create_table_option: PACK_KEYS_SYM opt_equal ulong_num  */
#line 5732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_PACK_KEYS;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_PACK_KEYS;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 35413 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 645: /* create_table_option: PACK_KEYS_SYM opt_equal DEFAULT  */
#line 5747 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_PACK_KEYS | HA_OPTION_NO_PACK_KEYS);
            Lex->create_info.used_fields|= HA_CREATE_USED_PACK_KEYS;
          }
#line 35423 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 646: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal ulong_num  */
#line 5753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_OFF;
                break;
            case 1:
                Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_ON;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 35442 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 647: /* create_table_option: STATS_AUTO_RECALC_SYM opt_equal DEFAULT  */
#line 5768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_auto_recalc= HA_STATS_AUTO_RECALC_DEFAULT;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_AUTO_RECALC;
          }
#line 35451 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 648: /* create_table_option: STATS_PERSISTENT_SYM opt_equal ulong_num  */
#line 5773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                Lex->create_info.table_options|= HA_OPTION_NO_STATS_PERSISTENT;
                break;
            case 1:
                Lex->create_info.table_options|= HA_OPTION_STATS_PERSISTENT;
                break;
            default:
                thd->parse_error();
                MYSQL_YYABORT;
            }
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 35470 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 649: /* create_table_option: STATS_PERSISTENT_SYM opt_equal DEFAULT  */
#line 5788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options&=
              ~(HA_OPTION_STATS_PERSISTENT | HA_OPTION_NO_STATS_PERSISTENT);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_PERSISTENT;
          }
#line 35480 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 650: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal ulong_num  */
#line 5794 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if (unlikely((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            Lex->create_info.stats_sample_pages=(yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 35502 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 651: /* create_table_option: STATS_SAMPLE_PAGES_SYM opt_equal DEFAULT  */
#line 5812 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.stats_sample_pages=0;
            Lex->create_info.used_fields|= HA_CREATE_USED_STATS_SAMPLE_PAGES;
          }
#line 35511 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 652: /* create_table_option: CHECKSUM_SYM opt_equal ulong_num  */
#line 5817 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
            Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 35520 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 653: /* create_table_option: TABLE_CHECKSUM_SYM opt_equal ulong_num  */
#line 5822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_CHECKSUM : HA_OPTION_NO_CHECKSUM;
             Lex->create_info.used_fields|= HA_CREATE_USED_CHECKSUM;
          }
#line 35529 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 654: /* create_table_option: PAGE_CHECKSUM_SYM opt_equal choice  */
#line 5827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_PAGE_CHECKSUM;
            Lex->create_info.page_checksum= (yyvsp[0].choice);
          }
#line 35538 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 655: /* create_table_option: DELAY_KEY_WRITE_SYM opt_equal ulong_num  */
#line 5832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.table_options|= (yyvsp[0].ulong_num) ? HA_OPTION_DELAY_KEY_WRITE : HA_OPTION_NO_DELAY_KEY_WRITE;
            Lex->create_info.used_fields|= HA_CREATE_USED_DELAY_KEY_WRITE;
          }
#line 35547 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 656: /* create_table_option: ROW_FORMAT_SYM opt_equal row_types  */
#line 5837 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.row_type= (yyvsp[0].row_type);
            Lex->create_info.used_fields|= HA_CREATE_USED_ROW_FORMAT;
          }
#line 35556 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 657: /* $@82: %empty  */
#line 5842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->table_list.save_and_clear(&Lex->save_list);
          }
#line 35564 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 658: /* create_table_option: UNION_SYM opt_equal $@82 '(' opt_table_list ')'  */
#line 5846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Move the union list to the merge_list and exclude its tables
              from the global list.
            */
            LEX *lex=Lex;
            lex->create_info.merge_list= lex->first_select_lex()->table_list.first;
            lex->first_select_lex()->table_list= lex->save_list;
            /*
              When excluding union list from the global list we assume that
              elements of the former immediately follow elements which represent
              table being created/altered and parent tables.
            */
            TABLE_LIST *last_non_sel_table= lex->create_last_non_select_table;
            DBUG_ASSERT(last_non_sel_table->next_global ==
                        lex->create_info.merge_list);
            last_non_sel_table->next_global= 0;
            Lex->query_tables_last= &last_non_sel_table->next_global;

            lex->create_info.used_fields|= HA_CREATE_USED_UNION;
          }
#line 35590 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 661: /* create_table_option: INSERT_METHOD opt_equal merge_insert_types  */
#line 5870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.merge_insert_method= (yyvsp[0].ulong_num);
            Lex->create_info.used_fields|= HA_CREATE_USED_INSERT_METHOD;
          }
#line 35599 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 662: /* create_table_option: DATA_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5875 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.data_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_DATADIR;
          }
#line 35608 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 663: /* create_table_option: INDEX_SYM DIRECTORY_SYM opt_equal TEXT_STRING_sys  */
#line 5880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.index_file_name= (yyvsp[0].lex_str).str;
            Lex->create_info.used_fields|= HA_CREATE_USED_INDEXDIR;
          }
#line 35617 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 664: /* create_table_option: TABLESPACE ident  */
#line 5885 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* Compatiblity with MySQL */ }
#line 35623 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 665: /* create_table_option: STORAGE_SYM DISK_SYM  */
#line 5887 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_DISK;}
#line 35629 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 666: /* create_table_option: STORAGE_SYM MEMORY_SYM  */
#line 5889 "/home/buildbot/git/sql/sql_yacc.yy"
          {Lex->create_info.storage_media= HA_SM_MEMORY;}
#line 35635 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 667: /* create_table_option: CONNECTION_SYM opt_equal TEXT_STRING_sys  */
#line 5891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.connect_string.str= (yyvsp[0].lex_str).str;
            Lex->create_info.connect_string.length= (yyvsp[0].lex_str).length;
            Lex->create_info.used_fields|= HA_CREATE_USED_CONNECTION;
          }
#line 35645 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 668: /* create_table_option: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 5897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_KEY_BLOCK_SIZE;
            Lex->create_info.key_block_size= (yyvsp[0].ulong_num);
          }
#line 35654 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 669: /* create_table_option: TRANSACTIONAL_SYM opt_equal choice  */
#line 5902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Lex->create_info.used_fields|= HA_CREATE_USED_TRANSACTIONAL;
            Lex->create_info.transactional= (yyvsp[0].choice);
          }
#line 35663 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 670: /* create_table_option: engine_defined_option  */
#line 5907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->create_info.option_list, &Lex->option_list_last);
          }
#line 35671 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 671: /* create_table_option: SEQUENCE_SYM opt_equal choice  */
#line 5911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.used_fields|= HA_CREATE_USED_SEQUENCE;
            Lex->create_info.sequence= ((yyvsp[0].choice) == HA_CHOICE_YES);
          }
#line 35680 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 673: /* engine_defined_option: ident_options equal TEXT_STRING_sys  */
#line 5920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].lex_str).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)),
                                      engine_option_value::Value((yyvsp[0].lex_str)), true);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 35693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 674: /* engine_defined_option: ident_options equal ident  */
#line 5929 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[0].ident_sys).length > ENGINE_OPTION_MAX_LENGTH))
              my_yyabort_error((ER_VALUE_TOO_LONG, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)),
                                      engine_option_value::Value((yyvsp[0].ident_sys)), false);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 35706 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 675: /* engine_defined_option: ident_options equal real_ulonglong_num  */
#line 5938 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)),
                                      (yyvsp[0].ulonglong_number), thd->mem_root);
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 35717 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 676: /* engine_defined_option: ident_options equal DEFAULT  */
#line 5945 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.engine_option_value_ptr)= new (thd->mem_root) engine_option_value(
                                      engine_option_value::Name((yyvsp[-2].ident_sys)));
            MYSQL_YYABORT_UNLESS((yyval.engine_option_value_ptr));
          }
#line 35727 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 678: /* ident_options: keyword_options  */
#line 5955 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 35736 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 683: /* versioning_option: WITH_SYSTEM_SYM VERSIONING_SYM  */
#line 5976 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.options & HA_LEX_CREATE_TMP_TABLE))
            {
              if (!DBUG_IF("sysvers_force"))
              {
                my_error(ER_VERS_NOT_SUPPORTED, MYF(0), "CREATE TEMPORARY TABLE");
                MYSQL_YYABORT;
              }
            }
            else
            {
              Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
              Lex->create_info.options|= HA_VERSIONED_TABLE;
            }
          }
#line 35756 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 684: /* default_charset: opt_default charset opt_equal charset_name_or_default  */
#line 5995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_info.add_table_option_default_charset(
                           thd, thd->variables.character_set_collations, (yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 35766 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 685: /* default_collation: opt_default COLLATE_SYM opt_equal collation_name_or_default  */
#line 6004 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_specification_st *cinfo= &Lex->create_info;
            if (unlikely(cinfo->add_table_option_default_collation(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_extended_collation))))
              MYSQL_YYABORT;
          }
#line 35777 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 686: /* storage_engines: ident_or_text  */
#line 6014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Storage_engine_name((yyvsp[0].lex_str)).
                 resolve_storage_engine_with_error(thd, &(yyval.db_type),
                                            thd->lex->create_info.tmp_table()))
              MYSQL_YYABORT;
          }
#line 35788 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 687: /* known_storage_engines: ident_or_text  */
#line 6024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            plugin_ref plugin;
            if (likely((plugin= ha_resolve_by_name(thd, &(yyvsp[0].lex_str), false))))
              (yyval.db_type)= plugin_hton(plugin);
            else
              my_yyabort_error((ER_UNKNOWN_STORAGE_ENGINE, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 35800 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 688: /* row_types: DEFAULT  */
#line 6034 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 35806 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 689: /* row_types: FIXED_SYM  */
#line 6035 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 35812 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 690: /* row_types: DYNAMIC_SYM  */
#line 6036 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 35818 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 691: /* row_types: COMPRESSED_SYM  */
#line 6037 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 35824 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 692: /* row_types: REDUNDANT_SYM  */
#line 6038 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 35830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 693: /* row_types: COMPACT_SYM  */
#line 6039 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 35836 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 694: /* row_types: PAGE_SYM  */
#line 6040 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.row_type)= ROW_TYPE_PAGE; }
#line 35842 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 695: /* merge_insert_types: NO_SYM  */
#line 6044 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 35848 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 696: /* merge_insert_types: FIRST_SYM  */
#line 6045 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 35854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 697: /* merge_insert_types: LAST_SYM  */
#line 6046 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 35860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 698: /* udf_type: STRING_SYM  */
#line 6050 "/home/buildbot/git/sql/sql_yacc.yy"
                     {(yyval.num) = (int) STRING_RESULT; }
#line 35866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 699: /* udf_type: REAL  */
#line 6051 "/home/buildbot/git/sql/sql_yacc.yy"
               {(yyval.num) = (int) REAL_RESULT; }
#line 35872 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 700: /* udf_type: DECIMAL_SYM  */
#line 6052 "/home/buildbot/git/sql/sql_yacc.yy"
                      {(yyval.num) = (int) DECIMAL_RESULT; }
#line 35878 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 701: /* udf_type: INT_SYM  */
#line 6053 "/home/buildbot/git/sql/sql_yacc.yy"
                  {(yyval.num) = (int) INT_RESULT; }
#line 35884 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 702: /* create_field_list: field_list  */
#line 6059 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 35892 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 703: /* create_field_list_parens: LEFT_PAREN_ALT field_list ')'  */
#line 6066 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->create_last_non_select_table= Lex->last_table();
        }
#line 35900 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 706: /* field_list_item: column_def  */
#line 6077 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 35906 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 710: /* field_list_item: PERIOD_SYM period_for_application_time  */
#line 6081 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { }
#line 35912 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 711: /* column_def: field_spec  */
#line 6086 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.create_field)= (yyvsp[0].create_field); }
#line 35918 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 712: /* column_def: field_spec opt_constraint references  */
#line 6088 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_column_foreign_key(&((yyvsp[-2].create_field)->field_name), &(yyvsp[-1].lex_str),
                                                     (yyvsp[0].table), DDL_options())))
              MYSQL_YYABORT;
            (yyval.create_field)= (yyvsp[-2].create_field);
          }
#line 35929 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 713: /* $@83: %empty  */
#line 6098 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-1].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 35939 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 714: /* key_def: key_or_index opt_if_not_exists opt_ident opt_USING_key_algorithm $@83 '(' key_list ')' normal_key_options  */
#line 6103 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 35945 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 715: /* $@84: %empty  */
#line 6105 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key(Key::MULTIPLE, &(yyvsp[-2].ident_sys), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 35955 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 716: /* key_def: key_or_index opt_if_not_exists ident TYPE_SYM btree_or_rtree $@84 '(' key_list ')' normal_key_options  */
#line 6110 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { }
#line 35961 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 717: /* $@85: %empty  */
#line 6112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 35971 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 718: /* key_def: fulltext opt_key_or_index opt_if_not_exists opt_ident $@85 '(' key_list ')' fulltext_key_options  */
#line 6117 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { }
#line 35977 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 719: /* $@86: %empty  */
#line 6119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), &(yyvsp[0].lex_str), HA_KEY_ALG_UNDEF, (yyvsp[-1].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 35987 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 720: /* key_def: spatial_or_vector opt_key_or_index opt_if_not_exists opt_ident $@86 '(' key_part_simple ')' spatial_key_options  */
#line 6125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->columns.push_back((yyvsp[-2].key_part), thd->mem_root);
          }
#line 35995 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 721: /* $@87: %empty  */
#line 6131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-3].key_type), (yyvsp[-1].lex_str).str ? &(yyvsp[-1].lex_str) : &(yyvsp[-4].lex_str), (yyvsp[0].key_alg), (yyvsp[-2].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 36005 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 722: /* key_def: opt_constraint constraint_key_type opt_if_not_exists opt_ident opt_USING_key_algorithm $@87 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 6136 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 36011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 723: /* $@88: %empty  */
#line 6139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_list= NULL;
            if (unlikely(Lex->add_key((yyvsp[-4].key_type), (yyvsp[-2].ident_sys).str ? &(yyvsp[-2].ident_sys) : &(yyvsp[-5].lex_str), (yyvsp[0].key_alg), (yyvsp[-3].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 36021 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 724: /* key_def: opt_constraint constraint_key_type opt_if_not_exists ident TYPE_SYM btree_or_rtree $@88 '(' key_list opt_without_overlaps ')' normal_key_options  */
#line 6144 "/home/buildbot/git/sql/sql_yacc.yy"
                                                                   { }
#line 36027 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 725: /* $@89: %empty  */
#line 6146 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->check_add_key((yyvsp[-1].object_ddl_options))) ||
                unlikely(!(Lex->last_key= (new (thd->mem_root)
                                           Key(Key::MULTIPLE,
                                           (yyvsp[-4].lex_str).str ? &(yyvsp[-4].lex_str) : &(yyvsp[0].lex_str),
                                           HA_KEY_ALG_UNDEF, true, (yyvsp[-1].object_ddl_options))))))
              MYSQL_YYABORT;
            Lex->option_list= NULL;
          }
#line 36041 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 726: /* key_def: opt_constraint FOREIGN KEY_SYM opt_if_not_exists opt_ident $@89 '(' key_list ')' references  */
#line 6156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_table_foreign_key((yyvsp[-5].lex_str).str ? &(yyvsp[-5].lex_str) : &(yyvsp[-9].lex_str),
                                                    (yyvsp[-9].lex_str).str ? &(yyvsp[-9].lex_str) : &(yyvsp[-5].lex_str), (yyvsp[0].table), (yyvsp[-6].object_ddl_options))))
               MYSQL_YYABORT;
          }
#line 36051 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 727: /* constraint_def: opt_constraint check_constraint  */
#line 6165 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), FALSE);
         }
#line 36059 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 728: /* period_for_system_time: PERIOD_SYM FOR_SYSTEM_TIME_SYM '(' ident ',' ident ')'  */
#line 6173 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Vers_parse_info &info= Lex->vers_get_info();
            info.set_period(Lex_ident_column((yyvsp[-3].ident_sys)), Lex_ident_column((yyvsp[-1].ident_sys)));
          }
#line 36068 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 729: /* period_for_application_time: FOR_SYM ident '(' ident ',' ident ')'  */
#line 6181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_period(Lex_ident_column((yyvsp[-5].ident_sys)), (yyvsp[-3].ident_sys), (yyvsp[-1].ident_sys)))
              MYSQL_YYABORT;
          }
#line 36077 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 730: /* opt_check_constraint: %empty  */
#line 6188 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (Virtual_column_info*) 0; }
#line 36083 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 731: /* opt_check_constraint: check_constraint  */
#line 6189 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.virtual_column)= (yyvsp[0].virtual_column);}
#line 36089 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 732: /* check_constraint: CHECK_SYM '(' expr ')'  */
#line 6194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 36100 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 733: /* opt_constraint_no_id: %empty  */
#line 6203 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 36106 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 734: /* opt_constraint_no_id: CONSTRAINT  */
#line 6204 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 36112 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 735: /* opt_constraint: %empty  */
#line 6208 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 36118 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 736: /* opt_constraint: constraint  */
#line 6209 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 36124 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 737: /* constraint: CONSTRAINT opt_ident  */
#line 6213 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 36130 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 738: /* @90: %empty  */
#line 6218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].lex_str), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].lex_str).str));

            if (unlikely(!f))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].lex_str));
            (yyval.create_field)= f;
            lex->parsing_options.lookup_keywords_after_qualifier= true;
          }
#line 36150 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 739: /* field_spec: field_ident @90 field_type_or_serial opt_check_constraint  */
#line 6234 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->parsing_options.lookup_keywords_after_qualifier= false;
            (yyval.create_field)= (yyvsp[-2].create_field);

            (yyval.create_field)->check_constraint= (yyvsp[0].virtual_column);

            if (unlikely((yyval.create_field)->check(thd)))
              MYSQL_YYABORT;

            lex->alter_info.create_list.push_back((yyval.create_field), thd->mem_root);

            (yyval.create_field)->create_if_not_exists= Lex->check_exists;
            if ((yyval.create_field)->flags & PRI_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::PRIMARY, lex->check_exists);
            else if ((yyval.create_field)->flags & UNIQUE_KEY_FLAG)
              lex->add_key_to_list(&(yyvsp[-3].lex_str), Key::UNIQUE, lex->check_exists);
          }
#line 36173 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 740: /* $@91: %empty  */
#line 6256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->last_field->set_attributes(thd, (yyvsp[0].Lex_field_type),
                                             COLUMN_DEFINITION_TABLE_FIELD);
          }
#line 36182 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 741: /* field_type_or_serial: qualified_field_type $@91 field_def  */
#line 6261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            auto tmp= (yyvsp[-2].Lex_field_type).charset_collation_attrs();
            if (tmp.merge_column_charset_clause_and_collate_clause(
                     thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
            Lex->last_field->set_charset_collation_attrs(
                               thd, thd->variables.character_set_collations,
                               tmp);
          }
#line 36196 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 742: /* $@92: %empty  */
#line 6271 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_handler(&type_handler_ulonglong);
            Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG
                                     | UNSIGNED_FLAG | UNIQUE_KEY_FLAG;
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 36207 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 744: /* opt_serial_attribute: %empty  */
#line 6281 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36213 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 745: /* opt_serial_attribute: opt_serial_attribute_list  */
#line 6282 "/home/buildbot/git/sql/sql_yacc.yy"
                                    {}
#line 36219 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 746: /* opt_serial_attribute_list: opt_serial_attribute_list serial_attribute  */
#line 6286 "/home/buildbot/git/sql/sql_yacc.yy"
                                                     {}
#line 36225 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 748: /* opt_asrow_attribute: %empty  */
#line 6291 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36231 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 749: /* opt_asrow_attribute: opt_asrow_attribute_list  */
#line 6292 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 36237 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 750: /* opt_asrow_attribute_list: opt_asrow_attribute_list asrow_attribute  */
#line 6296 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   {}
#line 36243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 752: /* field_def: %empty  */
#line 6301 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 36249 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 754: /* $@93: %empty  */
#line 6304 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->last_field->vcol_info= (yyvsp[0].virtual_column);
         }
#line 36257 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 755: /* field_def: opt_generated_always AS virtual_column_func $@93 vcol_opt_specifier vcol_opt_attribute  */
#line 6308 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36265 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 756: /* field_def: opt_generated_always AS ROW_SYM START_SYM opt_asrow_attribute  */
#line 6312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_start())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36275 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 757: /* field_def: opt_generated_always AS ROW_SYM END opt_asrow_attribute  */
#line 6318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->last_field_generated_always_as_row_end())
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 36285 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 758: /* opt_generated_always: %empty  */
#line 6326 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36291 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 759: /* opt_generated_always: GENERATED_SYM ALWAYS_SYM  */
#line 6327 "/home/buildbot/git/sql/sql_yacc.yy"
                                   {}
#line 36297 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 760: /* vcol_opt_specifier: %empty  */
#line 6332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_VIRTUAL);
          }
#line 36305 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 761: /* vcol_opt_specifier: VIRTUAL_SYM  */
#line 6336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_VIRTUAL);
          }
#line 36313 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 762: /* vcol_opt_specifier: PERSISTENT_SYM  */
#line 6340 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_STORED);
          }
#line 36321 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 763: /* vcol_opt_specifier: STORED_SYM  */
#line 6344 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->vcol_info->set_vcol_type(VCOL_GENERATED_STORED);
          }
#line 36329 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 764: /* vcol_opt_attribute: %empty  */
#line 6350 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 36335 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 765: /* vcol_opt_attribute: vcol_opt_attribute_list  */
#line 6351 "/home/buildbot/git/sql/sql_yacc.yy"
                                  {}
#line 36341 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 766: /* vcol_opt_attribute_list: vcol_opt_attribute_list vcol_attribute  */
#line 6355 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 {}
#line 36347 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 768: /* vcol_attribute: UNIQUE_SYM  */
#line 6361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 36357 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 769: /* vcol_attribute: UNIQUE_SYM KEY_SYM  */
#line 6367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 36367 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 770: /* vcol_attribute: COMMENT_SYM TEXT_STRING_sys  */
#line 6372 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->last_field->comment= (yyvsp[0].lex_str); }
#line 36373 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 771: /* vcol_attribute: INVISIBLE_SYM  */
#line 6374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->invisible= INVISIBLE_USER;
          }
#line 36381 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 772: /* $@94: %empty  */
#line 6381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              "PARSE_VCOL_EXPR" can only be used by the SQL server
              when reading a '*.frm' file.
              Prevent the end user from invoking this command.
            */
            MYSQL_YYABORT_UNLESS(Lex->parse_vcol_expr);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 36396 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 773: /* parse_vcol_expr: PARSE_VCOL_EXPR_SYM $@94 expr  */
#line 6392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v= add_virtual_expression(thd, (yyvsp[0].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            Lex->last_field->vcol_info= v;
            Lex->pop_select(); //main select
          }
#line 36408 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 775: /* parenthesized_expr: expr ',' expr_list  */
#line 6404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[0].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 36419 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 776: /* virtual_column_func: '(' parenthesized_expr ')'  */
#line 6414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Virtual_column_info *v=
              add_virtual_expression(thd, (yyvsp[-1].item));
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 36431 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 777: /* virtual_column_func: subquery  */
#line 6422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= new (thd->mem_root) Item_singlerow_subselect(thd, (yyvsp[0].select_lex))))
              MYSQL_YYABORT;
            Virtual_column_info *v= add_virtual_expression(thd, item);
            if (unlikely(!v))
              MYSQL_YYABORT;
            (yyval.virtual_column)= v;
          }
#line 36445 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 781: /* column_default_expr: expr_or_literal  */
#line 6438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.virtual_column)= add_virtual_expression(thd, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 36454 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 782: /* field_type: field_type_all  */
#line 6445 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
        }
#line 36462 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 783: /* qualified_field_type: field_type_all  */
#line 6452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 36470 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 784: /* qualified_field_type: sp_decl_ident '.' field_type_all  */
#line 6456 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->map_data_type((yyvsp[-2].ident_sys), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 36479 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 785: /* udt_name: IDENT_sys  */
#line 6463 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 36485 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 786: /* udt_name: reserved_keyword_udt  */
#line 6464 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].kwd); }
#line 36491 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 787: /* udt_name: non_reserved_keyword_udt  */
#line 6465 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.lex_str)= (yyvsp[0].kwd); }
#line 36497 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 794: /* field_type_all: udt_name float_options srid_option  */
#line 6479 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].lex_str), (yyvsp[-1].Lex_length_and_dec)))
              MYSQL_YYABORT;
          }
#line 36506 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 795: /* field_type_all_with_record: field_type_all_builtin  */
#line 6487 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->map_data_type(Lex_ident_sys(), &((yyval.Lex_field_type)= (yyvsp[0].Lex_field_type)));
          }
#line 36514 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 796: /* field_type_all_with_record: udt_name float_options srid_option  */
#line 6491 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_record *sprec = NULL;
            if (Lex->spcont)
              sprec = Lex->spcont->find_record(&(yyvsp[-2].lex_str), false);
            
            if (sprec == NULL)
            {
              if (Lex->set_field_type_udt(&(yyval.Lex_field_type), (yyvsp[-2].lex_str), (yyvsp[-1].Lex_length_and_dec)))
                MYSQL_YYABORT;
            }
            else
            {
              (yyval.Lex_field_type).set(&type_handler_row, NULL);
              Lex->last_field->set_attr_const_void_ptr(0, sprec);
            }
          }
#line 36535 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 797: /* field_type_numeric: int_type opt_field_length last_field_options  */
#line 6511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length_flags((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec), (uint32) (yyvsp[0].ulong_num));
          }
#line 36543 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 798: /* field_type_numeric: real_type opt_precision last_field_options  */
#line 6514 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.Lex_field_type).set((yyvsp[-2].type_handler), (yyvsp[-1].Lex_length_and_dec)); }
#line 36549 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 799: /* field_type_numeric: FLOAT_SYM float_options last_field_options  */
#line 6516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_float, (yyvsp[-1].Lex_length_and_dec));
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length() && !(yyvsp[-1].Lex_length_and_dec).has_explicit_dec())
            {
              if (unlikely((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_DOUBLE))
                my_yyabort_error((ER_WRONG_FIELD_SPEC, MYF(0),
                                  Lex->last_field->field_name.str));
              if ((yyvsp[-1].Lex_length_and_dec).length() > PRECISION_FOR_FLOAT)
                (yyval.Lex_field_type).set(&type_handler_double);
              else
                (yyval.Lex_field_type).set(&type_handler_float);
            }
          }
#line 36567 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 800: /* field_type_numeric: BIT_SYM opt_field_length  */
#line 6530 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_bit, (yyvsp[0].Lex_length_and_dec));
          }
#line 36575 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 801: /* field_type_numeric: BOOL_SYM  */
#line 6534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 36583 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 802: /* field_type_numeric: BOOLEAN_SYM  */
#line 6538 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set_handler_length(&type_handler_stiny, 1);
          }
#line 36591 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 803: /* field_type_numeric: DECIMAL_SYM float_options last_field_options  */
#line 6542 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 36597 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 804: /* field_type_numeric: NUMBER_ORACLE_SYM float_options last_field_options  */
#line 6544 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
              (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));
            else
              (yyval.Lex_field_type).set(&type_handler_double);
          }
#line 36608 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 805: /* field_type_numeric: NUMERIC_SYM float_options last_field_options  */
#line 6551 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 36614 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 806: /* field_type_numeric: FIXED_SYM float_options last_field_options  */
#line 6553 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_newdecimal, (yyvsp[-1].Lex_length_and_dec));}
#line 36620 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 807: /* opt_binary_and_compression: %empty  */
#line 6558 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 36626 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 808: /* opt_binary_and_compression: binary  */
#line 6559 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 36632 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 809: /* opt_binary_and_compression: compressed opt_binary  */
#line 6560 "/home/buildbot/git/sql/sql_yacc.yy"
                                                           { (yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[0].Lex_exact_charset_extended_collation_attrs); }
#line 36638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 810: /* field_type_string: char opt_field_length opt_binary  */
#line 6565 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 36646 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 811: /* field_type_string: nchar opt_field_length opt_bin_mod  */
#line 6569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[-1].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 36655 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 812: /* field_type_string: BINARY opt_field_length  */
#line 6574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_string, (yyvsp[0].Lex_length_and_dec), &my_charset_bin);
          }
#line 36663 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 813: /* field_type_string: varchar opt_field_length opt_binary_and_compression  */
#line 6578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 36671 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 814: /* field_type_string: VARCHAR2_ORACLE_SYM opt_field_length opt_binary_and_compression  */
#line 6582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs));
          }
#line 36679 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 815: /* field_type_string: nvarchar opt_field_length opt_compressed opt_bin_mod  */
#line 6586 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-2].Lex_length_and_dec),
                   Lex_exact_charset_extended_collation_attrs::national((yyvsp[0].num)));
          }
#line 36688 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 816: /* field_type_string: VARBINARY opt_field_length opt_compressed  */
#line 6591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 36696 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 817: /* field_type_string: RAW_ORACLE_SYM opt_field_length opt_compressed  */
#line 6595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_varchar, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 36704 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 818: /* field_type_temporal: YEAR_SYM opt_field_length last_field_options  */
#line 6602 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].Lex_length_and_dec).has_explicit_length())
            {
              if ((yyvsp[-1].Lex_length_and_dec).length() != 4)
              {
                char buff[sizeof("YEAR()") + MY_INT64_NUM_DECIMAL_DIGITS + 1];
                my_snprintf(buff, sizeof(buff), "YEAR(%u)", (uint) (yyvsp[-1].Lex_length_and_dec).length());
                warn_deprecated<1007>(thd, buff, "YEAR(4)");
              }
            }
            (yyval.Lex_field_type).set(&type_handler_year, (yyvsp[-1].Lex_length_and_dec));
          }
#line 36721 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 819: /* field_type_temporal: DATE_SYM  */
#line 6614 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.Lex_field_type).set(&type_handler_newdate); }
#line 36727 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 820: /* field_type_temporal: TIME_SYM opt_field_length  */
#line 6616 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_time2) :
                   static_cast<const Type_handler*>(&type_handler_time),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 36738 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 821: /* field_type_temporal: TIMESTAMP opt_field_length  */
#line 6623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(opt_mysql56_temporal_format ?
                   static_cast<const Type_handler*>(&type_handler_timestamp2):
                   static_cast<const Type_handler*>(&type_handler_timestamp),
                   (yyvsp[0].Lex_length_and_dec));
          }
#line 36749 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 822: /* field_type_temporal: DATETIME opt_field_length  */
#line 6630 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(thd->type_handler_for_datetime(), (yyvsp[0].Lex_length_and_dec));
          }
#line 36757 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 823: /* field_type_lob: TINYBLOB opt_compressed  */
#line 6638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_tiny_blob, &my_charset_bin);
          }
#line 36765 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 824: /* field_type_lob: BLOB_MARIADB_SYM opt_field_length opt_compressed  */
#line 6642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 36773 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 825: /* field_type_lob: BLOB_ORACLE_SYM field_length opt_compressed  */
#line 6646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), &my_charset_bin);
          }
#line 36781 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 826: /* field_type_lob: BLOB_ORACLE_SYM opt_compressed  */
#line 6650 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 36789 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 827: /* field_type_lob: MEDIUMBLOB opt_compressed  */
#line 6654 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 36797 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 828: /* field_type_lob: LONGBLOB opt_compressed  */
#line 6658 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob, &my_charset_bin);
          }
#line 36805 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 829: /* field_type_lob: LONG_SYM VARBINARY opt_compressed  */
#line 6662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_medium_blob, &my_charset_bin);
          }
#line 36813 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 830: /* field_type_lob: LONG_SYM varchar opt_binary_and_compression  */
#line 6666 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36819 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 831: /* field_type_lob: TINYTEXT opt_binary_and_compression  */
#line 6668 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_tiny_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36825 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 832: /* field_type_lob: TEXT_SYM opt_field_length opt_binary_and_compression  */
#line 6670 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_blob, (yyvsp[-1].Lex_length_and_dec), (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36831 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 833: /* field_type_lob: MEDIUMTEXT opt_binary_and_compression  */
#line 6672 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36837 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 834: /* field_type_lob: LONGTEXT opt_binary_and_compression  */
#line 6674 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36843 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 835: /* field_type_lob: CLOB_ORACLE_SYM opt_binary_and_compression  */
#line 6676 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_long_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36849 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 836: /* field_type_lob: LONG_SYM opt_binary_and_compression  */
#line 6678 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_medium_blob, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36855 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 837: /* field_type_lob: JSON_SYM opt_compressed  */
#line 6680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_field_type).set(&type_handler_long_blob_json, &my_charset_utf8mb4_bin);
          }
#line 36863 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 838: /* field_type_misc: ENUM '(' string_list ')' opt_binary  */
#line 6687 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_enum, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36869 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 839: /* field_type_misc: SET '(' string_list ')' opt_binary  */
#line 6689 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_field_type).set(&type_handler_set, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)); }
#line 36875 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 840: /* char: CHAR_SYM  */
#line 6693 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 36881 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 841: /* nchar: NCHAR_SYM  */
#line 6697 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 36887 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 842: /* nchar: NATIONAL_SYM CHAR_SYM  */
#line 6698 "/home/buildbot/git/sql/sql_yacc.yy"
                                {}
#line 36893 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 843: /* varchar: char VARYING  */
#line 6702 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 36899 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 844: /* varchar: VARCHAR  */
#line 6703 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 36905 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 845: /* nvarchar: NATIONAL_SYM VARCHAR  */
#line 6707 "/home/buildbot/git/sql/sql_yacc.yy"
                               {}
#line 36911 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 846: /* nvarchar: NVARCHAR_SYM  */
#line 6708 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 36917 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 847: /* nvarchar: NCHAR_SYM VARCHAR  */
#line 6709 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 36923 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 848: /* nvarchar: NATIONAL_SYM CHAR_SYM VARYING  */
#line 6710 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 36929 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 849: /* nvarchar: NCHAR_SYM VARYING  */
#line 6711 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 36935 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 850: /* int_type: INT_SYM  */
#line 6715 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slong; }
#line 36941 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 851: /* int_type: TINYINT  */
#line 6716 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_stiny; }
#line 36947 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 852: /* int_type: SMALLINT  */
#line 6717 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sshort; }
#line 36953 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 853: /* int_type: MEDIUMINT  */
#line 6718 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_sint24; }
#line 36959 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 854: /* int_type: BIGINT  */
#line 6719 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.type_handler)= &type_handler_slonglong; }
#line 36965 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 855: /* real_type: REAL  */
#line 6724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.type_handler)= thd->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              static_cast<const Type_handler *>(&type_handler_float) :
              static_cast<const Type_handler *>(&type_handler_double);
          }
#line 36975 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 856: /* real_type: DOUBLE_SYM  */
#line 6729 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 36981 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 857: /* real_type: DOUBLE_SYM PRECISION  */
#line 6730 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.type_handler)= &type_handler_double; }
#line 36987 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 858: /* srid_option: %empty  */
#line 6735 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->set_attr_uint32(0, 0); }
#line 36993 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 859: /* srid_option: REF_SYSTEM_ID_SYM '=' NUM  */
#line 6738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attr_uint32(0, (uint32) atoi((yyvsp[0].lex_str).str));
          }
#line 37001 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 860: /* float_options: %empty  */
#line 6744 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset();  }
#line 37007 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 863: /* precision: '(' NUM ',' NUM ')'  */
#line 6750 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.Lex_length_and_dec).set((yyvsp[-3].lex_str).str, (yyvsp[-1].lex_str).str); }
#line 37013 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 864: /* field_options: %empty  */
#line 6754 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 37019 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 865: /* field_options: SIGNED_SYM  */
#line 6755 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= 0; }
#line 37025 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 866: /* field_options: UNSIGNED  */
#line 6756 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG; }
#line 37031 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 867: /* field_options: ZEROFILL  */
#line 6757 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 37037 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 868: /* field_options: UNSIGNED ZEROFILL  */
#line 6758 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 37043 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 869: /* field_options: ZEROFILL UNSIGNED  */
#line 6759 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.ulong_num)= UNSIGNED_FLAG | ZEROFILL_FLAG; }
#line 37049 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 870: /* last_field_options: field_options  */
#line 6763 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->last_field->flags|= ((yyval.ulong_num)= (yyvsp[0].ulong_num)); }
#line 37055 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 871: /* field_length_str: '(' LONG_NUM ')'  */
#line 6767 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 37061 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 872: /* field_length_str: '(' ULONGLONG_NUM ')'  */
#line 6768 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 37067 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 873: /* field_length_str: '(' DECIMAL_NUM ')'  */
#line 6769 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 37073 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 874: /* field_length_str: '(' NUM ')'  */
#line 6770 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.const_simple_string)= (yyvsp[-1].lex_str).str; }
#line 37079 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 875: /* field_length: field_length_str  */
#line 6773 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set((yyvsp[0].const_simple_string), NULL); }
#line 37085 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 876: /* field_scale: field_length_str  */
#line 6777 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.Lex_length_and_dec).set(NULL, (yyvsp[0].const_simple_string)); }
#line 37091 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 877: /* opt_field_length: %empty  */
#line 6782 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.Lex_length_and_dec).reset(); /* use default length */ }
#line 37097 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 879: /* opt_field_scale: %empty  */
#line 6787 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.Lex_length_and_dec).reset(); }
#line 37103 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 881: /* opt_precision: %empty  */
#line 6792 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec).reset(); }
#line 37109 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 882: /* opt_precision: precision  */
#line 6793 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_length_and_dec)= (yyvsp[0].Lex_length_and_dec); }
#line 37115 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 883: /* attribute_list: attribute_list attribute  */
#line 6799 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.Lex_exact_charset_extended_collation_attrs)= (yyvsp[-1].Lex_exact_charset_extended_collation_attrs)).merge_column_collate_clause_and_collate_clause(
                           thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs)))
              MYSQL_YYABORT;
          }
#line 37125 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 885: /* attribute: NULL_SYM  */
#line 6809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags&= ~NOT_NULL_FLAG;
            Lex->last_field->explicitly_nullable= true;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 37135 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 886: /* attribute: DEFAULT column_default_expr  */
#line 6815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->default_value= (yyvsp[0].virtual_column);
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 37144 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 887: /* attribute: ON UPDATE_SYM NOW_SYM opt_default_time_precision  */
#line 6820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_current_timestamp(thd, (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            Lex->last_field->on_update= item;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 37156 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 888: /* attribute: AUTO_INC  */
#line 6827 "/home/buildbot/git/sql/sql_yacc.yy"
                   { Lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG; (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 37162 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 889: /* attribute: SERIAL_SYM DEFAULT VALUE_SYM  */
#line 6829 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= AUTO_INCREMENT_FLAG | NOT_NULL_FLAG | UNIQUE_KEY_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
            (yyval.Lex_exact_charset_extended_collation_attrs).init();
          }
#line 37173 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 890: /* attribute: COLLATE_SYM collation_name  */
#line 6836 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 37181 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 891: /* attribute: serial_attribute  */
#line 6839 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 37187 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 892: /* opt_compression_method: %empty  */
#line 6843 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= NULL; }
#line 37193 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 893: /* opt_compression_method: equal ident  */
#line 6844 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.const_simple_string)= (yyvsp[0].ident_sys).str; }
#line 37199 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 894: /* opt_compressed: %empty  */
#line 6848 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37205 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 895: /* opt_compressed: compressed  */
#line 6849 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 37211 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 896: /* opt_enable: %empty  */
#line 6853 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37217 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 897: /* opt_enable: ENABLE_SYM  */
#line 6854 "/home/buildbot/git/sql/sql_yacc.yy"
                     { }
#line 37223 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 898: /* compressed: COMPRESSED_SYM opt_compression_method  */
#line 6859 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->last_field->set_compressed((yyvsp[0].const_simple_string))))
              MYSQL_YYABORT;
          }
#line 37232 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 899: /* asrow_attribute: not NULL_SYM opt_enable  */
#line 6867 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->flags|= NOT_NULL_FLAG;
          }
#line 37240 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 900: /* asrow_attribute: opt_primary KEY_SYM  */
#line 6871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->last_field->flags|= PRI_KEY_FLAG | NOT_NULL_FLAG;
            lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 37250 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 903: /* serial_attribute: engine_defined_option  */
#line 6882 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->last_field->option_list, &Lex->option_list_last);
          }
#line 37258 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 904: /* serial_attribute: with_or_without_system VERSIONING_SYM  */
#line 6886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->versioning= (yyvsp[-1].vers_column_versioning);
            Lex->create_info.options|= HA_VERSIONED_TABLE;
            if (Lex->alter_info.flags & ALTER_DROP_SYSTEM_VERSIONING)
            {
              my_yyabort_error((ER_VERS_NOT_VERSIONED, MYF(0),
                       Lex->create_last_non_select_table->table_name.str));
            }
          }
#line 37272 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 905: /* with_or_without_system: WITH_SYSTEM_SYM  */
#line 6899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.versioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITH_VERSIONING;
          }
#line 37282 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 906: /* with_or_without_system: WITHOUT SYSTEM  */
#line 6905 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_COLUMN_UNVERSIONED;
            Lex->create_info.vers_info.unversioned_fields= true;
            (yyval.vers_column_versioning)= Column_definition::WITHOUT_VERSIONING;
          }
#line 37292 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 907: /* charset: CHAR_SYM SET  */
#line 6914 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.kwd)= (yyvsp[-1].kwd); }
#line 37298 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 908: /* charset: CHARSET  */
#line 6915 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.kwd)= (yyvsp[0].kwd); }
#line 37304 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 909: /* charset_name: ident_or_text  */
#line 6920 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str, MY_CS_PRIMARY,
                                                    MYF(utf8_flag)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 37315 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 910: /* charset_name: BINARY  */
#line 6926 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 37321 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 911: /* charset_name_or_default: charset_name  */
#line 6930 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.charset)=(yyvsp[0].charset);   }
#line 37327 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 912: /* charset_name_or_default: DEFAULT  */
#line 6931 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 37333 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 913: /* opt_load_data_charset: %empty  */
#line 6935 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.charset)= NULL; }
#line 37339 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 914: /* opt_load_data_charset: charset charset_name_or_default  */
#line 6936 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.charset)= (yyvsp[0].charset); }
#line 37345 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 915: /* old_or_new_charset_name: ident_or_text  */
#line 6941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            myf utf8_flag= thd->get_utf8_flag();
            if (unlikely(!((yyval.charset)=get_charset_by_csname((yyvsp[0].lex_str).str,
                                                    MY_CS_PRIMARY,
                                                    MYF(utf8_flag))) &&
                         !((yyval.charset)=get_old_charset_by_name((yyvsp[0].lex_str)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lex_str).str));
          }
#line 37358 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 916: /* old_or_new_charset_name: BINARY  */
#line 6949 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.charset)= &my_charset_bin; }
#line 37364 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 917: /* old_or_new_charset_name_or_default: old_or_new_charset_name  */
#line 6953 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.charset)=(yyvsp[0].charset);   }
#line 37370 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 918: /* old_or_new_charset_name_or_default: DEFAULT  */
#line 6954 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.charset)=NULL; }
#line 37376 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 919: /* collation_name: ident_or_text  */
#line 6959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_extended_collation).set_by_name((yyvsp[0].lex_str).str, thd->get_utf8_flag()))
              MYSQL_YYABORT;
          }
#line 37385 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 920: /* collation_name_or_default: collation_name  */
#line 6966 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation)=(yyvsp[0].Lex_extended_collation); }
#line 37391 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 921: /* collation_name_or_default: DEFAULT  */
#line 6967 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_extended_collation).set_collate_default(); }
#line 37397 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 922: /* collation_name_or_default: BINARY  */
#line 6969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Lex_exact_collation bin(&my_charset_bin);
            (yyval.Lex_extended_collation)= Lex_extended_collation(bin);
          }
#line 37406 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 923: /* opt_default: %empty  */
#line 6976 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37412 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 924: /* opt_default: DEFAULT  */
#line 6977 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 37418 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 925: /* charset_or_alias: charset charset_name  */
#line 6981 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.charset)= (yyvsp[0].charset); }
#line 37424 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 926: /* charset_or_alias: ASCII_SYM  */
#line 6982 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.charset)= &my_charset_latin1; }
#line 37430 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 927: /* charset_or_alias: UNICODE_SYM  */
#line 6984 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0)))))
              my_yyabort_error((ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2"));
          }
#line 37439 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 928: /* opt_binary: %empty  */
#line 6991 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.Lex_exact_charset_extended_collation_attrs).init(); }
#line 37445 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 930: /* binary: BYTE_SYM  */
#line 6997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset(&my_charset_bin));
          }
#line 37453 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 931: /* binary: charset_or_alias  */
#line 7001 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset(Lex_exact_charset((yyvsp[0].charset)));
          }
#line 37461 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 932: /* binary: charset_or_alias BINARY  */
#line 7005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[-1].charset))))
              MYSQL_YYABORT;
          }
#line 37470 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 933: /* binary: BINARY  */
#line 7009 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.Lex_exact_charset_extended_collation_attrs).set_contextually_typed_binary_style(); }
#line 37476 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 934: /* binary: BINARY charset_or_alias  */
#line 7011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_binary(Lex_exact_charset((yyvsp[0].charset))))
              MYSQL_YYABORT;
          }
#line 37485 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 935: /* binary: charset_or_alias COLLATE_SYM DEFAULT  */
#line 7016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_charset_collate_default(
                 thd,
                 thd->variables.character_set_collations,
                 Lex_exact_charset((yyvsp[-2].charset)));
          }
#line 37496 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 936: /* binary: charset_or_alias COLLATE_SYM collation_name  */
#line 7023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].Lex_extended_collation).merge_exact_charset(
                     thd,
                     thd->variables.character_set_collations,
                     Lex_exact_charset((yyvsp[-2].charset))))
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 37509 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 937: /* binary: COLLATE_SYM collation_name  */
#line 7032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs((yyvsp[0].Lex_extended_collation));
          }
#line 37517 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 938: /* binary: COLLATE_SYM DEFAULT  */
#line 7036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_exact_charset_extended_collation_attrs).set_collate_default();
          }
#line 37525 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 939: /* binary: charset_or_alias COLLATE_SYM BINARY  */
#line 7040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Lex_exact_collation bin(&my_charset_bin);
            Lex_extended_collation tmp(bin);
            if (tmp.merge_exact_charset(thd,
                                        thd->variables.character_set_collations,
                                        Lex_exact_charset((yyvsp[-2].charset))))
              MYSQL_YYABORT;
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs(tmp);
          }
#line 37539 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 940: /* binary: COLLATE_SYM BINARY  */
#line 7050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Lex_exact_collation bin(&my_charset_bin);
            const Lex_extended_collation tmp(bin);
            (yyval.Lex_exact_charset_extended_collation_attrs)= Lex_exact_charset_extended_collation_attrs(tmp);
          }
#line 37549 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 941: /* opt_bin_mod: %empty  */
#line 7058 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= false; }
#line 37555 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 942: /* opt_bin_mod: BINARY  */
#line 7059 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= true; }
#line 37561 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 943: /* $@95: %empty  */
#line 7064 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely((yyvsp[0].ulong_num) == 0))
          {
            thd->parse_error();
            MYSQL_YYABORT;
          }
        }
#line 37573 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 944: /* ws_nweights: '(' real_ulong_num $@95 ')'  */
#line 7072 "/home/buildbot/git/sql/sql_yacc.yy"
        { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 37579 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 945: /* ws_level_flag_desc: ASC  */
#line 7076 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.ulong_num)= 0; }
#line 37585 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 946: /* ws_level_flag_desc: DESC  */
#line 7077 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.ulong_num)= 1 << MY_STRXFRM_DESC_SHIFT; }
#line 37591 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 947: /* ws_level_flag_reverse: REVERSE_SYM  */
#line 7081 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1 << MY_STRXFRM_REVERSE_SHIFT; }
#line 37597 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 948: /* ws_level_flags: %empty  */
#line 7084 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 37603 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 949: /* ws_level_flags: ws_level_flag_desc  */
#line 7085 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 37609 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 950: /* ws_level_flags: ws_level_flag_desc ws_level_flag_reverse  */
#line 7086 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.ulong_num)= (yyvsp[-1].ulong_num) | (yyvsp[0].ulong_num); }
#line 37615 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 951: /* ws_level_flags: ws_level_flag_reverse  */
#line 7087 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.ulong_num)= (yyvsp[0].ulong_num) ; }
#line 37621 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 952: /* ws_level_number: real_ulong_num  */
#line 7092 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (yyvsp[0].ulong_num) < 1 ? 1 : ((yyvsp[0].ulong_num) > MY_STRXFRM_NLEVELS ? MY_STRXFRM_NLEVELS : (yyvsp[0].ulong_num));
          (yyval.ulong_num)--;
        }
#line 37630 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 953: /* ws_level_list_item: ws_level_number ws_level_flags  */
#line 7100 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.ulong_num)= (1 | (yyvsp[0].ulong_num)) << (yyvsp[-1].ulong_num);
        }
#line 37638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 954: /* ws_level_list: ws_level_list_item  */
#line 7106 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 37644 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 955: /* ws_level_list: ws_level_list ',' ws_level_list_item  */
#line 7107 "/home/buildbot/git/sql/sql_yacc.yy"
                                               { (yyval.ulong_num)|= (yyvsp[0].ulong_num); }
#line 37650 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 956: /* ws_level_range: ws_level_number '-' ws_level_number  */
#line 7112 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          uint start= (yyvsp[-2].ulong_num);
          uint end= (yyvsp[0].ulong_num);
          for ((yyval.ulong_num)= 0; start <= end; start++)
            (yyval.ulong_num)|= (1 << start);
        }
#line 37661 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 957: /* ws_level_list_or_range: ws_level_list  */
#line 7121 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 37667 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 958: /* ws_level_list_or_range: ws_level_range  */
#line 7122 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 37673 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 959: /* opt_ws_levels: %empty  */
#line 7126 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.ulong_num)= 0; }
#line 37679 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 960: /* opt_ws_levels: LEVEL_SYM ws_level_list_or_range  */
#line 7127 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.ulong_num)= (yyvsp[0].ulong_num); }
#line 37685 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 963: /* references: REFERENCES table_ident opt_ref_list opt_match_clause opt_on_update_delete  */
#line 7141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)=(yyvsp[-3].table);
          }
#line 37693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 964: /* opt_ref_list: %empty  */
#line 7148 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->ref_list.empty(); }
#line 37699 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 966: /* ref_list: ref_list ',' ident  */
#line 7154 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            Lex->ref_list.push_back(key, thd->mem_root);
          }
#line 37710 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 967: /* ref_list: ident  */
#line 7161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Key_part_spec *key= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely(key == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->ref_list.empty();
            lex->ref_list.push_back(key, thd->mem_root);
          }
#line 37723 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 968: /* opt_match_clause: %empty  */
#line 7173 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_UNDEF; }
#line 37729 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 969: /* opt_match_clause: MATCH FULL  */
#line 7175 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_FULL; }
#line 37735 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 970: /* opt_match_clause: MATCH PARTIAL  */
#line 7177 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_PARTIAL; }
#line 37741 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 971: /* opt_match_clause: MATCH SIMPLE_SYM  */
#line 7179 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->fk_match_option= Foreign_key::FK_MATCH_SIMPLE; }
#line 37747 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 972: /* opt_on_update_delete: %empty  */
#line 7184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 37757 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 973: /* opt_on_update_delete: ON UPDATE_SYM delete_option  */
#line 7190 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 37767 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 974: /* opt_on_update_delete: ON DELETE_SYM delete_option  */
#line 7196 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= FK_OPTION_UNDEF;
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 37777 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 975: /* opt_on_update_delete: ON UPDATE_SYM delete_option ON DELETE_SYM delete_option  */
#line 7203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[-3].m_fk_option);
            lex->fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 37787 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 976: /* opt_on_update_delete: ON DELETE_SYM delete_option ON UPDATE_SYM delete_option  */
#line 7210 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->fk_update_opt= (yyvsp[0].m_fk_option);
            lex->fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 37797 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 977: /* delete_option: RESTRICT  */
#line 7218 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 37803 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 978: /* delete_option: CASCADE  */
#line 7219 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 37809 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 979: /* delete_option: SET NULL_SYM  */
#line 7220 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 37815 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 980: /* delete_option: NO_SYM ACTION  */
#line 7221 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 37821 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 981: /* delete_option: SET DEFAULT  */
#line 7222 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.m_fk_option)= FK_OPTION_SET_DEFAULT; }
#line 37827 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 982: /* constraint_key_type: PRIMARY_SYM KEY_SYM  */
#line 7226 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.key_type)= Key::PRIMARY; }
#line 37833 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 983: /* constraint_key_type: UNIQUE_SYM opt_key_or_index  */
#line 7227 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.key_type)= Key::UNIQUE; }
#line 37839 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 984: /* key_or_index: KEY_SYM  */
#line 7231 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 37845 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 985: /* key_or_index: INDEX_SYM  */
#line 7232 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 37851 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 986: /* opt_key_or_index: %empty  */
#line 7236 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37857 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 988: /* keys_or_index: KEYS  */
#line 7241 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 37863 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 989: /* keys_or_index: INDEX_SYM  */
#line 7242 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 37869 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 990: /* keys_or_index: INDEXES  */
#line 7243 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 37875 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 991: /* fulltext: FULLTEXT_SYM  */
#line 7247 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.key_type)= Key::FULLTEXT;}
#line 37881 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 992: /* spatial_or_vector: SPATIAL_SYM  */
#line 7252 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_type)= Key::SPATIAL;
          }
#line 37889 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 993: /* spatial_or_vector: VECTOR_SYM  */
#line 7255 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.key_type)= Key::VECTOR;}
#line 37895 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 994: /* normal_key_options: %empty  */
#line 7259 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37901 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 995: /* normal_key_options: normal_key_opts  */
#line 7260 "/home/buildbot/git/sql/sql_yacc.yy"
                          { Lex->last_key->option_list= Lex->option_list; }
#line 37907 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 996: /* fulltext_key_options: %empty  */
#line 7264 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37913 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 997: /* fulltext_key_options: fulltext_key_opts  */
#line 7265 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->last_key->option_list= Lex->option_list; }
#line 37919 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 998: /* spatial_key_options: %empty  */
#line 7269 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 37925 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 999: /* spatial_key_options: spatial_key_opts  */
#line 7270 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->last_key->option_list= Lex->option_list; }
#line 37931 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1006: /* opt_USING_key_algorithm: %empty  */
#line 7289 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 37937 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1007: /* opt_USING_key_algorithm: USING btree_or_rtree  */
#line 7290 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 37943 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1008: /* opt_key_algorithm_clause: %empty  */
#line 7295 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= HA_KEY_ALG_UNDEF; }
#line 37949 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1009: /* opt_key_algorithm_clause: USING btree_or_rtree  */
#line 7296 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 37955 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1010: /* opt_key_algorithm_clause: TYPE_SYM btree_or_rtree  */
#line 7297 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.key_alg)= (yyvsp[0].key_alg); }
#line 37961 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1011: /* key_using_alg: USING btree_or_rtree  */
#line 7302 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 37967 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1012: /* key_using_alg: TYPE_SYM btree_or_rtree  */
#line 7304 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.algorithm= (yyvsp[0].key_alg); }
#line 37973 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1013: /* all_key_opt: KEY_BLOCK_SIZE opt_equal ulong_num  */
#line 7309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.block_size= (yyvsp[0].ulong_num);
            Lex->last_key->key_create_info.flags|= HA_USES_BLOCK_SIZE;
         }
#line 37982 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1014: /* all_key_opt: COMMENT_SYM TEXT_STRING_sys  */
#line 7314 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_key->key_create_info.comment= (yyvsp[0].lex_str); }
#line 37988 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1015: /* all_key_opt: VISIBLE_SYM  */
#line 7316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* This is mainly for MySQL 8.0 compatibility */
          }
#line 37996 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1016: /* all_key_opt: ignorability  */
#line 7320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->key_create_info.is_ignored= (yyvsp[0].num);
          }
#line 38004 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1017: /* all_key_opt: engine_defined_option  */
#line 7324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].engine_option_value_ptr)->link(&Lex->option_list, &Lex->option_list_last);
          }
#line 38012 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1022: /* fulltext_key_opt: WITH PARSER_SYM IDENT_sys  */
#line 7341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(plugin_is_ready(&(yyvsp[0].ident_sys), MYSQL_FTPARSER_PLUGIN)))
              Lex->last_key->key_create_info.parser_name= (yyvsp[0].ident_sys);
            else
              my_yyabort_error((ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 38023 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1023: /* btree_or_rtree: BTREE_SYM  */
#line 7350 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 38029 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1024: /* btree_or_rtree: RTREE_SYM  */
#line 7351 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 38035 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1025: /* btree_or_rtree: HASH_SYM  */
#line 7352 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 38041 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1026: /* ignorability: IGNORED_SYM  */
#line 7356 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= true; }
#line 38047 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1027: /* ignorability: NOT_SYM IGNORED_SYM  */
#line 7357 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.num)= false; }
#line 38053 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1028: /* key_list: key_list ',' key_part order_dir  */
#line 7362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 38062 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1029: /* key_list: key_part order_dir  */
#line 7367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].key_part)->asc= (yyvsp[0].num);
            Lex->last_key->columns.push_back((yyvsp[-1].key_part), thd->mem_root);
          }
#line 38071 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1030: /* opt_without_overlaps: %empty  */
#line 7374 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 38077 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1031: /* opt_without_overlaps: ',' ident WITHOUT OVERLAPS_SYM  */
#line 7376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_key->without_overlaps= true;
            Lex->last_key->period= Lex_ident_column((yyvsp[-2].ident_sys));
          }
#line 38086 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1033: /* key_part: ident '(' NUM ')'  */
#line 7385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int key_part_len= atoi((yyvsp[-1].lex_str).str);
            if (unlikely(!key_part_len))
              my_yyabort_error((ER_KEY_PART_0, MYF(0), (yyvsp[-3].ident_sys).str));
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[-3].ident_sys), (uint) key_part_len);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 38099 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1034: /* key_part_simple: ident  */
#line 7397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.key_part)= new (thd->mem_root) Key_part_spec(&(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.key_part) == NULL))
              MYSQL_YYABORT;
          }
#line 38109 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1035: /* opt_ident: %empty  */
#line 7405 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= null_clex_str; }
#line 38115 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1036: /* opt_ident: field_ident  */
#line 7406 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)= (yyvsp[0].lex_str); }
#line 38121 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1037: /* string_list: text_string  */
#line 7411 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 38127 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1038: /* string_list: string_list ',' text_string  */
#line 7413 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->last_field->interval_list.push_back((yyvsp[0].string), thd->mem_root); }
#line 38133 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1039: /* $@96: %empty  */
#line 7422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->name= null_clex_str;
            Lex->table_type= TABLE_TYPE_UNKNOWN;
            Lex->sql_command= SQLCOM_ALTER_TABLE;
            Lex->duplicates= DUP_ERROR;
            Lex->first_select_lex()->order_list.empty();
            Lex->create_info.init();
            Lex->create_info.row_type= ROW_TYPE_NOT_USED;
            Lex->alter_info.reset();
            Lex->no_write_to_binlog= 0;
            Lex->create_info.storage_media= HA_SM_DEFAULT;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            DBUG_ASSERT(!Lex->m_sql_cmd);
          }
#line 38153 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1040: /* $@97: %empty  */
#line 7438 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-2].object_ddl_options));
            if (!Lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                   TL_READ_NO_INSERT, MDL_SHARED_UPGRADABLE))
              MYSQL_YYABORT;
            Lex->first_select_lex()->db=
              (Lex->first_select_lex()->table_list.first)->db;
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->mark_first_table_as_inserting();
          }
#line 38169 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1041: /* alter: ALTER $@96 alter_options TABLE_SYM opt_if_exists table_ident opt_lock_wait_timeout $@97 alter_commands  */
#line 7450 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (likely(!Lex->m_sql_cmd))
            {
              /* Create a generic ALTER TABLE statment. */
              Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
              if (unlikely(Lex->m_sql_cmd == NULL))
                MYSQL_YYABORT;
            }
            Lex->pop_select(); //main select
          }
#line 38184 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1042: /* $@98: %empty  */
#line 7461 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            if (Lex->main_select_push(true))
              MYSQL_YYABORT;
          }
#line 38194 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1043: /* alter: ALTER DATABASE ident_or_empty $@98 create_database_options  */
#line 7467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].ident_sys);
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 38208 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1044: /* $@99: %empty  */
#line 7477 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.init();
            Lex->create_info.schema_comment= thd->make_clex_string((yyvsp[0].lex_str));
            Lex->create_info.used_fields|= HA_CREATE_USED_COMMENT;
          }
#line 38218 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1045: /* alter: ALTER DATABASE COMMENT_SYM opt_equal TEXT_STRING_sys $@99 opt_create_database_options  */
#line 7483 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= Lex_ident_sys();
            if (lex->name.str == NULL &&
                unlikely(lex->copy_db_to(&lex->name)))
              MYSQL_YYABORT;
          }
#line 38231 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1046: /* alter: ALTER DATABASE ident UPGRADE_SYM DATA_SYM DIRECTORY_SYM NAME_SYM  */
#line 7492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_DROP_SP, MYF(0), "DATABASE"));
            lex->sql_command= SQLCOM_ALTER_DB_UPGRADE;
            lex->name= (yyvsp[-4].ident_sys);
          }
#line 38243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1047: /* $@100: %empty  */
#line 7500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_procedure_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 38252 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1048: /* alter: ALTER PROCEDURE_SYM sp_name $@100 sp_a_chistics stmt_end  */
#line 7505 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 38258 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1049: /* $@101: %empty  */
#line 7507 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_function_start((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 38267 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1050: /* alter: ALTER FUNCTION_SYM sp_name $@101 sp_a_chistics stmt_end  */
#line 7512 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 38273 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1051: /* $@102: %empty  */
#line 7514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, (yyvsp[-4].num), (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 38284 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1052: /* alter: ALTER view_algorithm definer_opt opt_view_suid VIEW_SYM table_ident $@102 view_list_opt AS view_select stmt_end  */
#line 7520 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 38290 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1053: /* $@103: %empty  */
#line 7527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            if (Lex->add_alter_view(thd, VIEW_ALGORITHM_INHERIT, (yyvsp[-2].view_suid), (yyvsp[0].table)))
              MYSQL_YYABORT;
          }
#line 38301 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1054: /* alter: ALTER definer_opt opt_view_suid VIEW_SYM table_ident $@103 view_list_opt AS view_select stmt_end  */
#line 7533 "/home/buildbot/git/sql/sql_yacc.yy"
                                                {}
#line 38307 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1055: /* $@104: %empty  */
#line 7535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (unlikely(!(Lex->event_parse_data= Event_parse_data::new_instance(thd))))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_begin= (yyvsp[-2].simple_string);
          }
#line 38330 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1056: /* alter: ALTER definer_opt remember_name EVENT_SYM sp_name $@104 ev_alter_on_schedule_completion opt_ev_rename_to opt_ev_status opt_ev_comment opt_ev_sql_stmt  */
#line 7558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
            Lex->stmt_definition_end= (char*)YYLIP->get_cpp_ptr();

            Lex->pop_select(); //main select
          }
#line 38350 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1057: /* $@105: %empty  */
#line 7574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 38360 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1058: /* alter: ALTER SERVER_SYM ident_or_text $@105 OPTIONS_SYM '(' server_options_list ')'  */
#line 7578 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    { }
#line 38366 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1059: /* alter: ALTER USER_SYM opt_if_exists clear_privileges grant_list opt_require_clause opt_resource_options opt_account_locking_and_opt_password_expiration  */
#line 7582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_info.set((yyvsp[-5].object_ddl_options));
            Lex->sql_command= SQLCOM_ALTER_USER;
          }
#line 38375 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1060: /* $@106: %empty  */
#line 7587 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SEQUENCE;
            lex->create_info.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 38388 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1061: /* $@107: %empty  */
#line 7596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!(lex->create_info.seq_create_info= new (thd->mem_root)
                                                     sequence_definition()) ||
                !lex->first_select_lex()->
                  add_table_to_list(thd, (yyvsp[0].table), NULL, TL_OPTION_SEQUENCE,
                                    TL_WRITE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 38402 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1062: /* $@108: %empty  */
#line 7606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Create a generic ALTER SEQUENCE statment. */
            Lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_sequence((yyvsp[-4].object_ddl_options));
            if ((Lex->create_info.seq_create_info->used_fields &
                 seq_field_used_as) &&
                (Lex->create_info.seq_create_info->used_fields -
                 seq_field_used_as))
              my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0),
                                "ALTER SEQUENCE with both AS <type> and "
                                "something else."));
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38420 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1063: /* alter: ALTER SEQUENCE_SYM opt_if_exists $@106 table_ident $@107 sequence_defs $@108 stmt_end  */
#line 7618 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 38426 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1064: /* account_locking_option: LOCK_SYM  */
#line 7623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_LOCKED;
          }
#line 38434 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1065: /* account_locking_option: UNLOCK_SYM  */
#line 7627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.account_locked= ACCOUNTLOCK_UNLOCKED;
          }
#line 38442 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1066: /* opt_password_expire_option: %empty  */
#line 7634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NOW;
          }
#line 38450 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1067: /* opt_password_expire_option: NEVER_SYM  */
#line 7638 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_NEVER;
          }
#line 38458 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1068: /* opt_password_expire_option: DEFAULT  */
#line 7642 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_DEFAULT;
          }
#line 38466 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1069: /* opt_password_expire_option: INTERVAL_SYM NUM DAY_SYM  */
#line 7646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.password_expire= PASSWORD_EXPIRE_INTERVAL;
            if (!(Lex->account_options.num_expiration_days= atoi((yyvsp[-1].lex_str).str)))
              my_yyabort_error((ER_WRONG_VALUE, MYF(0), "DAY", (yyvsp[-1].lex_str).str));
          }
#line 38476 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1075: /* ev_alter_on_schedule_completion: %empty  */
#line 7662 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 38482 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1076: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time  */
#line 7663 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.num)= 1; }
#line 38488 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1077: /* ev_alter_on_schedule_completion: ev_on_completion  */
#line 7664 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.num)= 1; }
#line 38494 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1078: /* ev_alter_on_schedule_completion: ON SCHEDULE_SYM ev_schedule_time ev_on_completion  */
#line 7665 "/home/buildbot/git/sql/sql_yacc.yy"
                                                            { (yyval.num)= 1; }
#line 38500 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1079: /* opt_ev_rename_to: %empty  */
#line 7669 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0;}
#line 38506 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1080: /* opt_ev_rename_to: RENAME TO_SYM sp_name  */
#line 7671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname); 
            (yyval.num)= 1;
          }
#line 38519 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1081: /* opt_ev_sql_stmt: %empty  */
#line 7682 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= 0;}
#line 38525 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1082: /* opt_ev_sql_stmt: DO_SYM ev_sql_stmt  */
#line 7683 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 38531 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1083: /* ident_or_empty: %empty  */
#line 7688 "/home/buildbot/git/sql/sql_yacc.yy"
                                                       { (yyval.ident_sys)= Lex_ident_sys(); }
#line 38537 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1086: /* alter_commands: DISCARD TABLESPACE  */
#line 7695 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::DISCARD_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38549 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1087: /* alter_commands: IMPORT TABLESPACE  */
#line 7703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->m_sql_cmd= new (thd->mem_root)
              Sql_cmd_discard_import_tablespace(
                Sql_cmd_discard_import_tablespace::IMPORT_TABLESPACE);
            Lex->create_info.add(DDL_options_st::OPT_IMPORT_TABLESPACE);
            if (unlikely(Lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38562 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1093: /* alter_commands: DROP PARTITION_SYM opt_if_exists alt_part_name_list  */
#line 7726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_DROP;
            DBUG_ASSERT(!Lex->if_exists());
            Lex->create_info.add((yyvsp[-1].object_ddl_options));
          }
#line 38572 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1094: /* alter_commands: REBUILD_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_REBUILD;
            lex->no_write_to_binlog= (yyvsp[-1].num);
          }
#line 38582 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1095: /* $@109: %empty  */
#line 7740 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_optimize_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38597 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1097: /* alter_commands: ANALYZE_SYM PARTITION_SYM opt_no_write_to_binlog all_or_alt_part_name_list  */
#line 7753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_analyze_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
               MYSQL_YYABORT;
          }
#line 38612 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1098: /* $@110: %empty  */
#line 7764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_check_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38626 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1100: /* $@111: %empty  */
#line 7776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_repair_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38641 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1102: /* alter_commands: COALESCE PARTITION_SYM opt_no_write_to_binlog real_ulong_num  */
#line 7788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->alter_info.partition_flags|= ALTER_PARTITION_COALESCE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->alter_info.num_parts= (yyvsp[0].ulong_num);
          }
#line 38652 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1103: /* alter_commands: TRUNCATE_SYM PARTITION_SYM all_or_alt_part_name_list  */
#line 7795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->check_opt.init();
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root)
                              Sql_cmd_alter_table_truncate_partition();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38666 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1105: /* alter_commands: EXCHANGE_SYM PARTITION_SYM alt_part_name_item WITH TABLE_SYM table_ident opt_without_validation have_partitioning  */
#line 7807 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table_exchange_partition((yyvsp[-2].table)))
              MYSQL_YYABORT;
          }
#line 38675 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1106: /* alter_commands: CONVERT_SYM PARTITION_SYM alt_part_name_item TO_SYM TABLE_SYM table_ident opt_without_validation have_partitioning  */
#line 7813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->stmt_alter_table((yyvsp[-2].table)))
              MYSQL_YYABORT;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
            lex->alter_info.partition_flags|= ALTER_PARTITION_CONVERT_OUT;
          }
#line 38689 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1107: /* $@112: %empty  */
#line 7823 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), nullptr, 0,
                                                            TL_READ_NO_INSERT,
                                                            MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            /*
              This will appear as (new_db, new_name) in alter_ctx.
              new_db will be IX-locked and new_name X-locked.
            */
            lex->first_select_lex()->db= (yyvsp[0].table)->db;
            lex->name= (yyvsp[0].table)->table;
            if (lex->first_select_lex()->db.str == NULL &&
                lex->copy_db_to(&lex->first_select_lex()->db))
              MYSQL_YYABORT;

            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->part_info->num_parts= 1;
            /*
              OR-ed with ALTER_PARTITION_ADD because too many checks of
              ALTER_PARTITION_ADD required.
            */
            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD |
                                              ALTER_PARTITION_CONVERT_IN;
          }
#line 38723 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1108: /* alter_commands: CONVERT_SYM TABLE_SYM table_ident $@112 TO_SYM PARTITION_SYM part_definition opt_without_validation have_partitioning  */
#line 7853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_alter_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 38734 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1109: /* remove_partitioning: REMOVE_SYM PARTITIONING_SYM  */
#line 7863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REMOVE;
          }
#line 38742 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1110: /* all_or_alt_part_name_list: ALL  */
#line 7870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ALL;
          }
#line 38750 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1112: /* $@113: %empty  */
#line 7879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->alter_info.partition_flags|= ALTER_PARTITION_ADD;
            DBUG_ASSERT(!Lex->create_info.if_not_exists());
            lex->create_info.set((yyvsp[-1].object_ddl_options));
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 38766 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1113: /* add_partition_rule: ADD PARTITION_SYM opt_if_not_exists opt_no_write_to_binlog $@113 add_part_extra  */
#line 7891 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 38772 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1115: /* add_part_extra: '(' part_def_list ')'  */
#line 7897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info->num_parts= lex->part_info->partitions.elements;
          }
#line 38781 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1116: /* add_part_extra: PARTITIONS_SYM real_ulong_num  */
#line 7902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->part_info->num_parts= (yyvsp[0].ulong_num);
          }
#line 38789 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1117: /* $@114: %empty  */
#line 7909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->part_info= new (thd->mem_root) partition_info();
            if (unlikely(!lex->part_info))
              MYSQL_YYABORT;

            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 38802 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1119: /* reorg_parts_rule: %empty  */
#line 7922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_TABLE_REORG;
          }
#line 38810 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1120: /* $@115: %empty  */
#line 7926 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_REORGANIZE;
          }
#line 38818 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1121: /* reorg_parts_rule: alt_part_name_list $@115 INTO '(' part_def_list ')'  */
#line 7930 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            partition_info *part_info= Lex->part_info;
            part_info->num_parts= part_info->partitions.elements;
          }
#line 38827 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1122: /* alt_part_name_list: alt_part_name_item  */
#line 7937 "/home/buildbot/git/sql/sql_yacc.yy"
                             {}
#line 38833 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1123: /* alt_part_name_list: alt_part_name_list ',' alt_part_name_item  */
#line 7938 "/home/buildbot/git/sql/sql_yacc.yy"
                                                    {}
#line 38839 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1124: /* alt_part_name_item: ident  */
#line 7943 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.partition_names.push_back((yyvsp[0].ident_sys).str,
                                                                   thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 38849 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1128: /* alter_list_item: add_column column_def opt_place  */
#line 7965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->create_last_non_select_table= lex->last_table();
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            (yyvsp[-1].create_field)->after= Lex_ident_column((yyvsp[0].lex_str));
          }
#line 38860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1129: /* alter_list_item: ADD key_def  */
#line 7972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->create_last_non_select_table= Lex->last_table();
            Lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 38869 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1130: /* alter_list_item: ADD period_for_system_time  */
#line 7977 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_PERIOD;
          }
#line 38877 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1131: /* alter_list_item: ADD PERIOD_SYM opt_if_not_exists_table_element period_for_application_time  */
#line 7982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_period_info &period= Lex->create_info.period_info;
            period.create_if_not_exists= Lex->check_exists;
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
          }
#line 38887 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1132: /* alter_list_item: add_column '(' create_field_list ')'  */
#line 7988 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_PARSER_ADD_COLUMN;
            if (!lex->alter_info.key_list.is_empty())
              lex->alter_info.flags|= ALTER_ADD_INDEX;
          }
#line 38898 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1133: /* alter_list_item: ADD constraint_def  */
#line 7995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
	  }
#line 38906 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1134: /* alter_list_item: ADD CONSTRAINT IF_SYM not EXISTS field_ident check_constraint  */
#line 7999 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           Lex->alter_info.flags|= ALTER_ADD_CHECK_CONSTRAINT;
           Lex->add_constraint((yyvsp[-1].lex_str), (yyvsp[0].virtual_column), TRUE);
         }
#line 38915 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1135: /* alter_list_item: CHANGE opt_column opt_if_exists_table_element field_ident field_spec opt_place  */
#line 8005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN | ALTER_RENAME_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= Lex_ident_column((yyvsp[-2].lex_str));
            (yyvsp[-1].create_field)->after= Lex_ident_column((yyvsp[0].lex_str));
          }
#line 38926 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1136: /* alter_list_item: MODIFY_SYM opt_column opt_if_exists_table_element field_spec opt_place  */
#line 8013 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_CHANGE_COLUMN;
            Lex->create_last_non_select_table= Lex->last_table();
            (yyvsp[-1].create_field)->change= (yyvsp[-1].create_field)->field_name;
            (yyvsp[-1].create_field)->after= Lex_ident_column((yyvsp[0].lex_str));
          }
#line 38937 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1137: /* alter_list_item: DROP opt_column opt_if_exists_table_element field_ident opt_restrict  */
#line 8020 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::COLUMN, (yyvsp[-1].lex_str), (yyvsp[-2].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_PARSER_DROP_COLUMN;
          }
#line 38951 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1138: /* alter_list_item: DROP CONSTRAINT opt_if_exists_table_element field_ident  */
#line 8030 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::CHECK_CONSTRAINT,
                                        (yyvsp[0].lex_str), (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 38966 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1139: /* alter_list_item: DROP FOREIGN KEY_SYM opt_if_exists_table_element field_ident  */
#line 8041 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::FOREIGN_KEY, (yyvsp[0].lex_str), (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_FOREIGN_KEY;
          }
#line 38980 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1140: /* alter_list_item: DROP opt_constraint_no_id PRIMARY_SYM KEY_SYM  */
#line 8051 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, primary_key_name,
                                        FALSE));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 38995 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1141: /* alter_list_item: DROP key_or_index opt_if_exists_table_element field_ident  */
#line 8062 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[0].lex_str), (yyvsp[-1].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            lex->alter_info.flags|= ALTER_DROP_INDEX;
          }
#line 39009 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1142: /* alter_list_item: DISABLE_SYM KEYS  */
#line 8072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::DISABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 39019 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1143: /* alter_list_item: ENABLE_SYM KEYS  */
#line 8078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.keys_onoff= Alter_info::ENABLE;
            lex->alter_info.flags|= ALTER_KEYS_ONOFF;
          }
#line 39029 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1144: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident SET DEFAULT column_default_expr  */
#line 8084 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (check_expression((yyvsp[0].virtual_column), Lex_ident_column((yyvsp[-3].lex_str)), VCOL_DEFAULT))
              MYSQL_YYABORT;
            if (unlikely(Lex->add_alter_list((yyvsp[-3].lex_str), (yyvsp[0].virtual_column), (yyvsp[-4].num))))
              MYSQL_YYABORT;
          }
#line 39040 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1145: /* alter_list_item: ALTER key_or_index opt_if_exists_table_element ident ignorability  */
#line 8091 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            Alter_index_ignorability *ac= new (thd->mem_root)
                                        Alter_index_ignorability((yyvsp[-1].ident_sys), (yyvsp[0].num), (yyvsp[-2].num));
            if (ac == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_index_ignorability_list.push_back(ac);
            lex->alter_info.flags|= ALTER_INDEX_IGNORABILITY;
          }
#line 39054 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1146: /* alter_list_item: ALTER opt_column opt_if_exists_table_element field_ident DROP DEFAULT  */
#line 8101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].lex_str), (Virtual_column_info*) 0, (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 39063 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1147: /* alter_list_item: RENAME opt_to table_ident  */
#line 8106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_alter_table((yyvsp[0].table)))
              MYSQL_YYABORT;
            Lex->alter_info.flags|= ALTER_RENAME;
          }
#line 39073 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1148: /* alter_list_item: RENAME COLUMN_SYM opt_if_exists_table_element ident TO_SYM ident  */
#line 8112 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_alter_list((yyvsp[-2].ident_sys), (yyvsp[0].ident_sys), (yyvsp[-3].num))))
              MYSQL_YYABORT;
          }
#line 39082 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1149: /* alter_list_item: RENAME key_or_index opt_if_exists_table_element field_ident TO_SYM field_ident  */
#line 8117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_rename_key *ak= new (thd->mem_root)
                                    Alter_rename_key((yyvsp[-2].lex_str), (yyvsp[0].lex_str), (yyvsp[-3].num));
            if (ak == NULL)
              MYSQL_YYABORT;
            lex->alter_info.alter_rename_key_list.push_back(ak);
            lex->alter_info.flags|= ALTER_RENAME_INDEX;
          }
#line 39096 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1150: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default  */
#line 8127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset(
                       thd, thd->variables.character_set_collations, (yyvsp[0].charset)))
              MYSQL_YYABORT;
          }
#line 39106 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1151: /* alter_list_item: CONVERT_SYM TO_SYM charset charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 8134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->add_alter_list_item_convert_to_charset(
                       thd, thd->variables.character_set_collations, (yyvsp[-2].charset), (yyvsp[0].Lex_extended_collation)))
              MYSQL_YYABORT;
          }
#line 39116 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1152: /* alter_list_item: create_table_options_space_separated  */
#line 8140 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_OPTIONS;
          }
#line 39125 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1153: /* alter_list_item: FORCE_SYM  */
#line 8145 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_RECREATE;
          }
#line 39133 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1154: /* alter_list_item: alter_order_clause  */
#line 8149 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->alter_info.flags|= ALTER_ORDER;
          }
#line 39142 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1157: /* alter_list_item: ADD SYSTEM VERSIONING_SYM  */
#line 8156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_ADD_SYSTEM_VERSIONING;
            Lex->create_info.options|= HA_VERSIONED_TABLE;
          }
#line 39151 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1158: /* alter_list_item: DROP SYSTEM VERSIONING_SYM  */
#line 8161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_SYSTEM_VERSIONING;
            Lex->create_info.options&= ~HA_VERSIONED_TABLE;
          }
#line 39160 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1159: /* alter_list_item: DROP PERIOD_SYM FOR_SYSTEM_TIME_SYM  */
#line 8166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.flags|= ALTER_DROP_PERIOD;
          }
#line 39168 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1160: /* alter_list_item: DROP PERIOD_SYM opt_if_exists_table_element FOR_SYM ident  */
#line 8170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Alter_drop *ad= new Alter_drop(Alter_drop::PERIOD, (yyvsp[0].ident_sys), (yyvsp[-2].num));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            Lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            Lex->alter_info.flags|= ALTER_DROP_CHECK_CONSTRAINT;
          }
#line 39180 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1162: /* opt_without_validation: WITH VALIDATION_SYM  */
#line 8182 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->without_validation= 0;
        }
#line 39188 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1163: /* opt_without_validation: WITHOUT VALIDATION_SYM  */
#line 8186 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->without_validation= 1;
        }
#line 39196 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1169: /* alter_algorithm_option: ALGORITHM_SYM opt_equal DEFAULT  */
#line 8201 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.set_requested_algorithm(Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT);
          }
#line 39204 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1170: /* alter_algorithm_option: ALGORITHM_SYM opt_equal ident  */
#line 8205 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_algorithm(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 39213 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1171: /* alter_lock_option: LOCK_SYM opt_equal DEFAULT  */
#line 8213 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 39222 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1172: /* alter_lock_option: LOCK_SYM opt_equal ident  */
#line 8218 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->alter_info.set_requested_lock(&(yyvsp[0].ident_sys))))
              my_yyabort_error((ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].ident_sys).str));
          }
#line 39231 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1173: /* opt_column: %empty  */
#line 8225 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 39237 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1174: /* opt_column: COLUMN_SYM  */
#line 8226 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 39243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1175: /* opt_ignore: %empty  */
#line 8230 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->ignore= 0;}
#line 39249 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1176: /* opt_ignore: IGNORE_SYM  */
#line 8231 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 39255 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1177: /* $@116: %empty  */
#line 8235 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->ignore= 0;}
#line 39261 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1183: /* alter_option: IGNORE_SYM  */
#line 8249 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1;}
#line 39267 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1184: /* alter_option: ONLINE_SYM  */
#line 8251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.requested_lock=
              Alter_info::ALTER_TABLE_LOCK_NONE;
          }
#line 39276 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1185: /* opt_restrict: %empty  */
#line 8258 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_DEFAULT; }
#line 39282 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1186: /* opt_restrict: RESTRICT  */
#line 8259 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_RESTRICT; }
#line 39288 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1187: /* opt_restrict: CASCADE  */
#line 8260 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->drop_mode= DROP_CASCADE; }
#line 39294 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1188: /* opt_place: %empty  */
#line 8264 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)= null_clex_str; }
#line 39300 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1189: /* opt_place: AFTER_SYM ident  */
#line 8266 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str)= (yyvsp[0].ident_sys);
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 39309 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1190: /* opt_place: FIRST_SYM  */
#line 8271 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str).str=    first_keyword;
	    (yyval.lex_str).length= 5; /* Length of "first" */
            Lex->alter_info.flags |= ALTER_COLUMN_ORDER;
          }
#line 39319 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1191: /* opt_to: %empty  */
#line 8279 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 39325 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1192: /* opt_to: TO_SYM  */
#line 8280 "/home/buildbot/git/sql/sql_yacc.yy"
                 {}
#line 39331 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1193: /* opt_to: '='  */
#line 8281 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 39337 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1194: /* opt_to: AS  */
#line 8282 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 39343 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1195: /* $@117: %empty  */
#line 8287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE START too */
          }
#line 39354 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1196: /* slave: START_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel $@117 slave_until  */
#line 8294 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39360 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1197: /* $@118: %empty  */
#line 8296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_START;
            lex->type = 0;
            /* If you change this code don't forget to update STOP SLAVE too */
          }
#line 39371 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1198: /* slave: START_SYM ALL SLAVES slave_thread_opts $@118  */
#line 8302 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39377 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1199: /* slave: STOP_SYM SLAVE optional_connection_name slave_thread_opts optional_for_channel  */
#line 8304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 39388 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1200: /* slave: STOP_SYM ALL SLAVES slave_thread_opts  */
#line 8311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_SLAVE_ALL_STOP;
            lex->type = 0;
            /* If you change this code don't forget to update SLAVE STOP too */
          }
#line 39399 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1201: /* start: START_SYM TRANSACTION_SYM opt_start_transaction_option_list  */
#line 8321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (unlikely(((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                         ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 39416 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1202: /* opt_start_transaction_option_list: %empty  */
#line 8337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= 0;
          }
#line 39424 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1203: /* opt_start_transaction_option_list: start_transaction_option_list  */
#line 8341 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 39432 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1204: /* start_transaction_option_list: start_transaction_option  */
#line 8348 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[0].num);
          }
#line 39440 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1205: /* start_transaction_option_list: start_transaction_option_list ',' start_transaction_option  */
#line 8352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 39448 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1206: /* start_transaction_option: WITH CONSISTENT_SYM SNAPSHOT_SYM  */
#line 8359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 39456 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1207: /* start_transaction_option: READ_SYM ONLY_SYM  */
#line 8363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 39464 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1208: /* start_transaction_option: READ_SYM WRITE_SYM  */
#line 8367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 39472 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1209: /* $@119: %empty  */
#line 8373 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->slave_thd_opt= 0; }
#line 39478 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1210: /* slave_thread_opts: $@119 slave_thread_opt_list  */
#line 8375 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39484 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1213: /* slave_thread_opt: %empty  */
#line 8384 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 39490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1214: /* slave_thread_opt: SQL_THREAD  */
#line 8385 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_SQL; }
#line 39496 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1215: /* slave_thread_opt: RELAY_THREAD  */
#line 8386 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->slave_thd_opt|=SLAVE_IO; }
#line 39502 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1216: /* slave_until: %empty  */
#line 8390 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 39508 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1217: /* slave_until: UNTIL_SYM slave_until_opts  */
#line 8392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(((lex->mi.log_file_name || lex->mi.pos) &&
                         (lex->mi.relay_log_name || lex->mi.relay_log_pos)) ||
                         !((lex->mi.log_file_name && lex->mi.pos) ||
                           (lex->mi.relay_log_name && lex->mi.relay_log_pos))))
               my_yyabort_error((ER_BAD_SLAVE_UNTIL_COND, MYF(0)));
          }
#line 39521 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1218: /* slave_until: UNTIL_SYM MASTER_GTID_POS_SYM '=' TEXT_STRING_sys  */
#line 8401 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= false;
          }
#line 39530 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1219: /* slave_until: UNTIL_SYM SQL_AFTER_GTIDS_SYM '=' TEXT_STRING_sys  */
#line 8406 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= false;
          }
#line 39539 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1220: /* slave_until: UNTIL_SYM SQL_BEFORE_GTIDS_SYM '=' TEXT_STRING_sys  */
#line 8411 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mi.gtid_pos_str = (yyvsp[0].lex_str);
            Lex->mi.is_until_before_gtids= true;
          }
#line 39548 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1223: /* $@120: %empty  */
#line 8424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 39559 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1224: /* checksum: CHECKSUM_SYM table_or_tables $@120 table_list opt_checksum_type  */
#line 8431 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39565 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1225: /* opt_checksum_type: %empty  */
#line 8435 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= 0; }
#line 39571 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1226: /* opt_checksum_type: QUICK  */
#line 8436 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_QUICK; }
#line 39577 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1227: /* opt_checksum_type: EXTENDED_SYM  */
#line 8437 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->check_opt.flags= T_EXTEND; }
#line 39583 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1229: /* $@121: %empty  */
#line 8443 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 39589 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1231: /* $@122: %empty  */
#line 8449 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_REPAIR;
            lex->no_write_to_binlog= (yyvsp[0].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 39603 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1232: /* repair: REPAIR opt_no_write_to_binlog $@122 repair_table_or_view  */
#line 8459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_repair_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 39615 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1233: /* opt_mi_repair_type: %empty  */
#line 8469 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 39621 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1234: /* opt_mi_repair_type: mi_repair_types  */
#line 8470 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 39627 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1235: /* mi_repair_types: mi_repair_type  */
#line 8474 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 39633 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1236: /* mi_repair_types: mi_repair_type mi_repair_types  */
#line 8475 "/home/buildbot/git/sql/sql_yacc.yy"
                                         {}
#line 39639 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1237: /* mi_repair_type: QUICK  */
#line 8479 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_QUICK; }
#line 39645 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1238: /* mi_repair_type: EXTENDED_SYM  */
#line 8480 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.flags|= T_EXTEND; }
#line 39651 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1239: /* mi_repair_type: USE_FRM  */
#line 8481 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_USEFRM; }
#line 39657 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1240: /* mi_repair_type: FORCE_SYM  */
#line 8482 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->check_opt.sql_flags|= TT_FORCE; }
#line 39663 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1241: /* opt_view_repair_type: %empty  */
#line 8486 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 39669 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1242: /* opt_view_repair_type: FOR_SYM UPGRADE_SYM  */
#line 8487 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 39675 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1243: /* opt_view_repair_type: FROM MYSQL_SYM  */
#line 8488 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->check_opt.sql_flags|= TT_FROM_MYSQL; }
#line 39681 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1244: /* $@123: %empty  */
#line 8493 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_ANALYZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 39695 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1245: /* analyze: ANALYZE_SYM opt_no_write_to_binlog table_or_tables $@123 analyze_table_list  */
#line 8503 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_analyze_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 39707 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1249: /* opt_persistent_stat_clause: %empty  */
#line 8523 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39713 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1250: /* opt_persistent_stat_clause: PERSISTENT_SYM FOR_SYM persistent_stat_spec  */
#line 8525 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            thd->lex->with_persistent_for_clause= TRUE;
          }
#line 39721 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1251: /* persistent_stat_spec: ALL  */
#line 8532 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39727 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1252: /* persistent_stat_spec: COLUMNS persistent_column_stat_spec INDEXES persistent_index_stat_spec  */
#line 8534 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39733 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1253: /* persistent_column_stat_spec: ALL  */
#line 8538 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 39739 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1254: /* $@124: %empty  */
#line 8540 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->column_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->column_list == NULL))
              MYSQL_YYABORT;
          }
#line 39750 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1255: /* persistent_column_stat_spec: '(' $@124 table_column_list ')'  */
#line 8548 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 39756 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1256: /* persistent_index_stat_spec: ALL  */
#line 8552 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 39762 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1257: /* $@125: %empty  */
#line 8554 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX* lex= thd->lex;
            lex->index_list= new (thd->mem_root) List<LEX_STRING>;
            if (unlikely(lex->index_list == NULL))
              MYSQL_YYABORT;
          }
#line 39773 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1258: /* persistent_index_stat_spec: '(' $@125 table_index_list ')'  */
#line 8562 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 39779 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1259: /* table_column_list: %empty  */
#line 8567 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39785 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1260: /* table_column_list: ident  */
#line 8569 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 39794 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1261: /* table_column_list: table_column_list ',' ident  */
#line 8574 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->column_list->push_back((LEX_STRING*)
                thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)), thd->mem_root);
          }
#line 39803 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1262: /* table_index_list: %empty  */
#line 8582 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 39809 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1265: /* table_index_name: ident  */
#line 8589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->index_list->push_back((LEX_STRING*)
                                       thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_STRING)),
                                       thd->mem_root);
          }
#line 39819 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1266: /* table_index_name: PRIMARY_SYM  */
#line 8596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_STRING str= {(char*) "PRIMARY", 7};
            Lex->index_list->push_back((LEX_STRING*)
                                        thd->memdup(&str, sizeof(LEX_STRING)),
                                        thd->mem_root);
          }
#line 39830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1267: /* binlog_base64_event: BINLOG_SYM TEXT_STRING_sys  */
#line 8606 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[0].lex_str);
            Lex->ident.str=    NULL;
            Lex->ident.length= 0;
          }
#line 39841 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1268: /* binlog_base64_event: BINLOG_SYM '@' ident_or_text ',' '@' ident_or_text  */
#line 8614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->comment= (yyvsp[-3].lex_str);
            Lex->ident=   (yyvsp[0].lex_str);
          }
#line 39851 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1270: /* $@126: %empty  */
#line 8624 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->table_type= TABLE_TYPE_VIEW; }
#line 39857 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1272: /* $@127: %empty  */
#line 8629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->sql_command = SQLCOM_CHECK;
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 39871 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1273: /* check: CHECK_SYM $@127 check_view_or_table  */
#line 8639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "CHECK"));
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_check_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 39885 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1274: /* opt_mi_check_type: %empty  */
#line 8651 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->check_opt.flags = T_MEDIUM; }
#line 39891 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1275: /* opt_mi_check_type: mi_check_types  */
#line 8652 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 39897 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1276: /* mi_check_types: mi_check_type  */
#line 8656 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 39903 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1277: /* mi_check_types: mi_check_type mi_check_types  */
#line 8657 "/home/buildbot/git/sql/sql_yacc.yy"
                                       {}
#line 39909 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1278: /* mi_check_type: QUICK  */
#line 8661 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_QUICK; }
#line 39915 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1279: /* mi_check_type: FAST_SYM  */
#line 8662 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_FAST; }
#line 39921 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1280: /* mi_check_type: MEDIUM_SYM  */
#line 8663 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_MEDIUM; }
#line 39927 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1281: /* mi_check_type: EXTENDED_SYM  */
#line 8664 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_EXTEND; }
#line 39933 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1282: /* mi_check_type: CHANGED  */
#line 8665 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.flags|= T_CHECK_ONLY_CHANGED; }
#line 39939 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1283: /* mi_check_type: FOR_SYM UPGRADE_SYM  */
#line 8666 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 39945 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1284: /* opt_view_check_type: %empty  */
#line 8670 "/home/buildbot/git/sql/sql_yacc.yy"
                              { }
#line 39951 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1285: /* opt_view_check_type: FOR_SYM UPGRADE_SYM  */
#line 8671 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->check_opt.sql_flags|= TT_FOR_UPGRADE; }
#line 39957 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1286: /* $@128: %empty  */
#line 8676 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_OPTIMIZE;
            lex->no_write_to_binlog= (yyvsp[-1].num);
            lex->check_opt.init();
            lex->alter_info.reset();
            /* Will be overridden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
          }
#line 39971 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1287: /* optimize: OPTIMIZE opt_no_write_to_binlog table_or_tables $@128 table_list opt_lock_wait_timeout  */
#line 8686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_optimize_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 39983 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1288: /* opt_no_write_to_binlog: %empty  */
#line 8696 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 39989 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1289: /* opt_no_write_to_binlog: NO_WRITE_TO_BINLOG  */
#line 8697 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= 1; }
#line 39995 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1290: /* opt_no_write_to_binlog: LOCAL_SYM  */
#line 8698 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 1; }
#line 40001 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1291: /* $@129: %empty  */
#line 8703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
            Lex->create_info.set((yyvsp[0].object_ddl_options));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 40012 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1292: /* rename: RENAME table_or_tables opt_if_exists $@129 table_to_table_list  */
#line 8710 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 40020 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1293: /* rename: RENAME USER_SYM clear_privileges rename_list  */
#line 8714 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 40028 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1294: /* rename_list: user TO_SYM user  */
#line 8721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40038 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1295: /* rename_list: rename_list ',' user TO_SYM user  */
#line 8727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[-2].lex_user), thd->mem_root) ||
                         Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 40048 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1298: /* table_to_table: table_ident opt_lock_wait_timeout TO_SYM table_ident  */
#line 8741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *sl= lex->current_select;
            if (unlikely(!sl->add_table_to_list(thd, (yyvsp[-3].table),NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)) ||
                unlikely(!sl->add_table_to_list(thd, (yyvsp[0].table), NULL,
                                                TL_OPTION_UPDATING,
                                                TL_IGNORE, MDL_EXCLUSIVE)))
              MYSQL_YYABORT;
          }
#line 40064 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1299: /* $@130: %empty  */
#line 8756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.reset();
          }
#line 40072 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1300: /* keycache: CACHE_SYM INDEX_SYM $@130 keycache_list_or_parts IN_SYM key_cache_name  */
#line 8760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ASSIGN_TO_KEYCACHE;
            lex->ident= (yyvsp[0].lex_str);
          }
#line 40082 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1305: /* assign_to_keycache: table_ident cache_keys_spec  */
#line 8779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 40094 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1306: /* assign_to_keycache_parts: table_ident adm_partition cache_keys_spec  */
#line 8790 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, 0, TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 40106 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1307: /* key_cache_name: ident  */
#line 8800 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 40112 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1308: /* key_cache_name: DEFAULT  */
#line 8801 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str) = default_base; }
#line 40118 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1309: /* $@131: %empty  */
#line 8806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_PRELOAD_KEYS;
            lex->alter_info.reset();
            if (lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 40130 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1310: /* preload: LOAD INDEX_SYM INTO CACHE_SYM $@131 preload_list_or_parts  */
#line 8814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 40138 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1315: /* preload_keys: table_ident cache_keys_spec opt_ignore_leaves  */
#line 8831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-2].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 40150 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1316: /* preload_keys_parts: table_ident adm_partition cache_keys_spec opt_ignore_leaves  */
#line 8842 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-3].table), NULL, (yyvsp[0].num), TL_READ,
                                                    MDL_SHARED_READ,
                                                    Select->
                                                    pop_index_hints())))
              MYSQL_YYABORT;
          }
#line 40162 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1317: /* $@132: %empty  */
#line 8853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->alter_info.partition_flags|= ALTER_PARTITION_ADMIN;
          }
#line 40170 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1319: /* $@133: %empty  */
#line 8860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->first_select_lex()->alloc_index_hints(thd);
            Select->set_index_hint_type(INDEX_HINT_USE,
                                        INDEX_HINT_MASK_ALL);
          }
#line 40180 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1321: /* cache_key_list_or_empty: %empty  */
#line 8869 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 40186 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1323: /* opt_ignore_leaves: %empty  */
#line 8875 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= 0; }
#line 40192 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1324: /* opt_ignore_leaves: IGNORE_SYM LEAVES  */
#line 8876 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= TL_OPTION_IGNORE_LEAVES; }
#line 40198 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1325: /* $@134: %empty  */
#line 8886 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 40209 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1326: /* select: query_expression_no_with_clause $@134 opt_procedure_or_into  */
#line 8893 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause(NULL);
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 40220 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1327: /* $@135: %empty  */
#line 8900 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex_unit)->fake_select_lex ?
                                 (yyvsp[0].select_lex_unit)->fake_select_lex :
                                 (yyvsp[0].select_lex_unit)->first_select()))
              MYSQL_YYABORT;
          }
#line 40231 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1328: /* select: with_clause query_expression_no_with_clause $@135 opt_procedure_or_into  */
#line 8907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyvsp[-2].select_lex_unit)->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex_unit)->first_select());
            if (Lex->select_finalize((yyvsp[-2].select_lex_unit), (yyvsp[0].select_lock)))
              MYSQL_YYABORT;
          }
#line 40243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1329: /* $@136: %empty  */
#line 8918 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 40252 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1330: /* select_into: select_into_query_specification $@136 opt_order_limit_lock  */
#line 8923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 40266 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1331: /* $@137: %empty  */
#line 8934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->push_select((yyvsp[0].select_lex)))
              MYSQL_YYABORT;
          }
#line 40275 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1332: /* select_into: with_clause select_into_query_specification $@137 opt_order_limit_lock  */
#line 8939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX_UNIT *unit;
            if (!(unit  = Lex->create_unit((yyvsp[-2].select_lex))))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
              unit= Lex->add_tail_to_query_expression_body(unit, (yyvsp[0].order_limit_lock));
            unit->set_with_clause((yyvsp[-3].with_clause));
            (yyvsp[-3].with_clause)->attach_to((yyvsp[-2].select_lex));
            if (Lex->select_finalize(unit))
              MYSQL_YYABORT;
          }
#line 40291 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1333: /* simple_table: query_specification  */
#line 8953 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 40297 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1334: /* simple_table: table_value_constructor  */
#line 8954 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 40303 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1335: /* $@138: %empty  */
#line 8959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_TVC_start())
              MYSQL_YYABORT;
	  }
#line 40312 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1336: /* table_value_constructor: VALUES $@138 values_list  */
#line 8964 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_TVC_end()))
	      MYSQL_YYABORT;
	  }
#line 40321 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1337: /* $@139: %empty  */
#line 8972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel;
            LEX *lex= Lex;
            if (!(sel= lex->alloc_select(TRUE)) || lex->push_select(sel))
              MYSQL_YYABORT;
            sel->init_select();
            sel->braces= FALSE;
          }
#line 40334 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1338: /* $@140: %empty  */
#line 8981 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= SELECT_LIST;
          }
#line 40342 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1339: /* query_specification_start: SELECT_SYM $@139 select_options $@140 select_item_list  */
#line 8985 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
          }
#line 40350 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1340: /* query_specification: query_specification_start opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 8997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 40358 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1341: /* select_into_query_specification: query_specification_start into opt_from_clause opt_where_clause opt_group_clause opt_having_clause opt_window_clause  */
#line 9010 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lex)= Lex->pop_select();
          }
#line 40366 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1342: /* query_expression: query_expression_no_with_clause  */
#line 9068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause(NULL);
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 40375 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1343: /* query_expression: with_clause query_expression_no_with_clause  */
#line 9074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].select_lex_unit)->set_with_clause((yyvsp[-1].with_clause));
            (yyvsp[-1].with_clause)->attach_to((yyvsp[0].select_lex_unit)->first_select());
            (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit);
          }
#line 40385 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1344: /* query_expression_no_with_clause: query_expression_body_ext  */
#line 9087 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 40391 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1345: /* query_expression_no_with_clause: query_expression_body_ext_parens  */
#line 9088 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.select_lex_unit)= (yyvsp[0].select_lex_unit); }
#line 40397 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1346: /* $@141: %empty  */
#line 9103 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].select_lex_unit)->first_select()->next_select())
            {
              if (Lex->parsed_multi_operand_query_expression_body((yyvsp[0].select_lex_unit)))
                MYSQL_YYABORT;
            }
          }
#line 40409 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1347: /* query_expression_body_ext: query_expression_body $@141 opt_query_expression_tail  */
#line 9111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].order_limit_lock))
              (yyval.select_lex_unit)= (yyvsp[-2].select_lex_unit);
            else
              (yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock));
          }
#line 40420 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1348: /* $@142: %empty  */
#line 9118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select(!(yyvsp[0].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[0].select_lex_unit)->first_select() : (yyvsp[0].select_lex_unit)->fake_select_lex);
          }
#line 40429 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1349: /* query_expression_body_ext: query_expression_body_ext_parens $@142 query_expression_tail  */
#line 9123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_tail_to_query_expression_body_ext_parens((yyvsp[-2].select_lex_unit), (yyvsp[0].order_limit_lock))))
               MYSQL_YYABORT;
          }
#line 40438 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1350: /* query_expression_body_ext_parens: '(' query_expression_body_ext_parens ')'  */
#line 9131 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit); }
#line 40444 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1351: /* query_expression_body_ext_parens: '(' query_expression_body_ext ')'  */
#line 9133 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= (yyvsp[-1].select_lex_unit)->first_select()->next_select() ?
                               (yyvsp[-1].select_lex_unit)->fake_select_lex : (yyvsp[-1].select_lex_unit)->first_select();
            sel->braces= true;
            (yyval.select_lex_unit)= (yyvsp[-1].select_lex_unit);
          }
#line 40455 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1352: /* query_expression_body: query_simple  */
#line 9148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->push_select((yyvsp[0].select_lex));
            if (!((yyval.select_lex_unit)= Lex->create_unit((yyvsp[0].select_lex))))
              MYSQL_YYABORT;
          }
#line 40465 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1353: /* $@143: %empty  */
#line 9155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].select_lex_unit)->first_select()->next_select())
            {
              Lex->pop_select();
            }
          }
#line 40476 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1354: /* query_expression_body: query_expression_body unit_type_decl $@143 query_primary  */
#line 9162 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body((yyvsp[-3].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-2].unit_operation).unit_type,
                                                                (yyvsp[-2].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 40487 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1355: /* query_expression_body: query_expression_body_ext_parens unit_type_decl query_primary  */
#line 9171 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex_unit)= Lex->add_primary_to_query_expression_body_ext_parens(
                                                                (yyvsp[-2].select_lex_unit), (yyvsp[0].select_lex),
                                                                (yyvsp[-1].unit_operation).unit_type,
                                                                (yyvsp[-1].unit_operation).distinct)))
              MYSQL_YYABORT;
          }
#line 40499 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1356: /* query_primary: query_simple  */
#line 9187 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex); }
#line 40505 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1357: /* query_primary: query_expression_body_ext_parens  */
#line 9189 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_lex)= (yyvsp[0].select_lex_unit)->first_select(); }
#line 40511 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1358: /* query_simple: simple_table  */
#line 9198 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.select_lex)= (yyvsp[0].select_lex);}
#line 40517 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1359: /* subselect: query_expression  */
#line 9203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 40526 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1360: /* subquery: query_expression_body_ext_parens  */
#line 9244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].select_lex_unit)->fake_select_lex)
              (yyvsp[0].select_lex_unit)->first_select()->braces= false;
            else
              (yyvsp[0].select_lex_unit)->fake_select_lex->braces= false;
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[0].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 40539 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1361: /* subquery: '(' with_clause query_expression_no_with_clause ')'  */
#line 9253 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].select_lex_unit)->set_with_clause((yyvsp[-2].with_clause));
            (yyvsp[-2].with_clause)->attach_to((yyvsp[-1].select_lex_unit)->first_select());
            if (!((yyval.select_lex)= Lex->parsed_subselect((yyvsp[-1].select_lex_unit))))
              MYSQL_YYABORT;
          }
#line 40550 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1365: /* table_reference_list: join_table_list  */
#line 9272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->context.table_list=
              Select->context.first_name_resolution_table=
                Select->table_list.first;
          }
#line 40560 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1368: /* select_options: select_option_list  */
#line 9287 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((Select->options & SELECT_DISTINCT) &&
                         (Select->options & SELECT_ALL)))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "ALL", "DISTINCT"));
          }
#line 40570 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1369: /* opt_history_unit: %empty  */
#line 9296 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 40578 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1370: /* opt_history_unit: TRANSACTION_SYM  */
#line 9300 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TRX_ID;
          }
#line 40586 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1371: /* opt_history_unit: TIMESTAMP  */
#line 9304 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_range_unit)= VERS_TIMESTAMP;
          }
#line 40594 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1372: /* history_point: TIMESTAMP TEXT_STRING  */
#line 9311 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item;
            if (!(item= type_handler_datetime.create_literal_item(thd,
                                                     (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                     YYCSCL, true)))
              MYSQL_YYABORT;
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, item);
          }
#line 40607 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1373: /* history_point: function_call_keyword_timestamp  */
#line 9320 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item));
          }
#line 40615 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1374: /* history_point: opt_history_unit bit_expr  */
#line 9324 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.vers_history_point)= Vers_history_point((yyvsp[-1].vers_range_unit), (yyvsp[0].item));
          }
#line 40623 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1375: /* for_portion_of_time_clause: FOR_SYM PORTION_SYM OF_SYM remember_tok_start ident FROM bit_expr TO_SYM bit_expr  */
#line 9332 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(0 == strcasecmp((yyvsp[-4].ident_sys).str, "SYSTEM_TIME")))
            {
              thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-5].simple_string));
              MYSQL_YYABORT;
            }
            Lex->period_conditions.init(SYSTEM_TIME_FROM_TO,
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[-2].item)),
                                        Vers_history_point(VERS_TIMESTAMP, (yyvsp[0].item)),
                                        Lex_ident_column((yyvsp[-4].ident_sys)));
          }
#line 40639 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1376: /* opt_for_portion_of_time_clause: %empty  */
#line 9347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 40647 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1377: /* opt_for_portion_of_time_clause: for_portion_of_time_clause  */
#line 9351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 40655 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1378: /* opt_for_system_time_clause: %empty  */
#line 9358 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= false;
          }
#line 40663 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1379: /* opt_for_system_time_clause: FOR_SYSTEM_TIME_SYM system_time_expr  */
#line 9362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= true;
          }
#line 40671 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1380: /* system_time_expr: AS OF_SYM history_point  */
#line 9369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_AS_OF, (yyvsp[0].vers_history_point));
          }
#line 40679 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1381: /* system_time_expr: ALL  */
#line 9373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_ALL);
          }
#line 40687 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1382: /* system_time_expr: FROM history_point TO_SYM history_point  */
#line 9377 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_FROM_TO, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 40695 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1383: /* system_time_expr: BETWEEN_SYM history_point AND_SYM history_point  */
#line 9381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BETWEEN, (yyvsp[-2].vers_history_point), (yyvsp[0].vers_history_point));
          }
#line 40703 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1387: /* select_option: SQL_NO_CACHE_SYM  */
#line 9394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_NO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_NO_CACHE"));
            Select->options|= OPTION_NO_QUERY_CACHE;
          }
#line 40716 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1388: /* select_option: SQL_CACHE_SYM  */
#line 9403 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Allow this flag once per query.
            */
            if (Select->options & OPTION_TO_QUERY_CACHE)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SQL_CACHE"));
            Select->options|= OPTION_TO_QUERY_CACHE;
          }
#line 40729 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1389: /* select_lock_type: FOR_SYM UPDATE_SYM opt_lock_wait_timeout_new  */
#line 9416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= TRUE;
          }
#line 40739 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1390: /* select_lock_type: LOCK_SYM IN_SYM SHARE_SYM MODE_SYM opt_lock_wait_timeout_new  */
#line 9422 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            (yyval.select_lock).defined_lock= TRUE;
            (yyval.select_lock).update_lock= FALSE;
          }
#line 40749 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1391: /* opt_select_lock_type: %empty  */
#line 9432 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 40757 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1392: /* opt_select_lock_type: select_lock_type  */
#line 9436 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock)= (yyvsp[0].select_lock);
        }
#line 40765 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1393: /* opt_lock_wait_timeout_new: %empty  */
#line 9443 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
        }
#line 40773 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1394: /* opt_lock_wait_timeout_new: WAIT_SYM ulong_num  */
#line 9447 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= (yyvsp[0].ulong_num);
        }
#line 40783 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1395: /* opt_lock_wait_timeout_new: NOWAIT_SYM  */
#line 9453 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).defined_timeout= TRUE;
          (yyval.select_lock).timeout= 0;
        }
#line 40793 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1396: /* opt_lock_wait_timeout_new: SKIP_SYM LOCKED_SYM  */
#line 9459 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.select_lock).empty();
          (yyval.select_lock).skip_locked= 1;
          Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SKIP_LOCKED);
        }
#line 40803 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1399: /* select_item_list: '*'  */
#line 9470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_parsing_returning=
                              thd->lex->current_select->parsing_place ==
                                                IN_RETURNING;
            SELECT_LEX *correct_select= is_parsing_returning ?
                                              thd->lex->returning() :
                                              thd->lex->current_select;
            Item *item= new (thd->mem_root)
                          Item_field(thd, &correct_select->context,
                                     star_clex_str);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_item_to_list(thd, item)))
              MYSQL_YYABORT;
            correct_select->with_wild++;
          }
#line 40824 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1400: /* select_item: remember_name select_sublist_qualified_asterisk remember_end  */
#line 9490 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_item_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
          }
#line 40833 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1401: /* select_item: remember_name expr remember_end select_alias  */
#line 9495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT((yyvsp[-3].simple_string) < (yyvsp[-1].simple_string));

            if (unlikely(add_item_to_list(thd, (yyvsp[-2].item))))
              MYSQL_YYABORT;
            if ((yyvsp[0].lex_str).str)
            {
              if (unlikely(Lex->sql_command == SQLCOM_CREATE_VIEW &&
                          check_column_name((yyvsp[0].lex_str).str)))
                my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), (yyvsp[0].lex_str).str));
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            else if (!(yyvsp[-2].item)->name.str || (yyvsp[-2].item)->name.str == item_empty_name)
            {
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            }
          }
#line 40856 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1402: /* remember_tok_start: %empty  */
#line 9516 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_tok_start();
          }
#line 40864 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1403: /* remember_name: %empty  */
#line 9522 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 40872 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1404: /* remember_end: %empty  */
#line 9528 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 40880 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1405: /* remember_cpp_ptr: %empty  */
#line 9534 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr();
          }
#line 40888 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1406: /* remember_start_opt: %empty  */
#line 9540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_start();
          }
#line 40899 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1407: /* remember_end_opt: %empty  */
#line 9549 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (yychar == YYEMPTY)
              (yyval.simple_string)= (char*) YYLIP->get_cpp_ptr_rtrim();
            else
              (yyval.simple_string)= (char*) YYLIP->get_cpp_tok_end_rtrim();
          }
#line 40910 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1408: /* remember_lex: %empty  */
#line 9558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
          }
#line 40918 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1409: /* select_alias: %empty  */
#line 9564 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str)=null_clex_str;}
#line 40924 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1410: /* select_alias: AS ident  */
#line 9565 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 40930 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1411: /* select_alias: AS TEXT_STRING_sys  */
#line 9566 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 40936 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1412: /* select_alias: ident  */
#line 9567 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys); }
#line 40942 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1413: /* select_alias: TEXT_STRING_sys  */
#line 9568 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str); }
#line 40948 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1414: /* opt_default_time_precision: %empty  */
#line 9572 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 40954 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1415: /* opt_default_time_precision: '(' ')'  */
#line 9573 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= NOT_FIXED_DEC;  }
#line 40960 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1416: /* opt_default_time_precision: '(' real_ulong_num ')'  */
#line 9574 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 40966 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1417: /* opt_time_precision: %empty  */
#line 9578 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 40972 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1418: /* opt_time_precision: '(' ')'  */
#line 9579 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= 0;  }
#line 40978 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1419: /* opt_time_precision: '(' real_ulong_num ')'  */
#line 9580 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.num)= (yyvsp[-1].ulong_num); }
#line 40984 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1420: /* optional_braces: %empty  */
#line 9584 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 40990 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1421: /* optional_braces: '(' ')'  */
#line 9585 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 40996 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1422: /* search_condition: expr  */
#line 9589 "/home/buildbot/git/sql/sql_yacc.yy"
               { ((yyval.item)= (yyvsp[0].item))->base_flags|= item_base_t::IS_COND ; }
#line 41002 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1423: /* expr: expr or expr  */
#line 9595 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Design notes:
              Do not use a manually maintained stack like thd->lex->xxx_list,
              but use the internal bison stack ($$, $1 and $3) instead.
              Using the bison stack is:
              - more robust to changes in the grammar,
              - guaranteed to be in sync with the parser state,
              - better for performances (no memory allocation).
            */
            Item_cond_or *item1;
            Item_cond_or *item3;
            if (is_cond_or((yyvsp[-2].item)))
            {
              item1= (Item_cond_or*) (yyvsp[-2].item);
              if (is_cond_or((yyvsp[0].item)))
              {
                item3= (Item_cond_or*) (yyvsp[0].item);
                /*
                  (X1 OR X2) OR (Y1 OR Y2) ==> OR (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 OR X2) OR Y ==> OR (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_or((yyvsp[0].item)))
            {
              item3= (Item_cond_or*) (yyvsp[0].item);
              /*
                X OR (Y1 OR Y2) ==> OR (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X OR Y */
              (yyval.item)= new (thd->mem_root) Item_cond_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 41057 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1424: /* expr: expr XOR expr  */
#line 9646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* XOR is a proprietary extension */
            (yyval.item)= new (thd->mem_root) Item_func_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41068 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1425: /* expr: expr and expr  */
#line 9653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* See comments in rule expr: expr or expr */
            Item_cond_and *item1;
            Item_cond_and *item3;
            if (is_cond_and((yyvsp[-2].item)))
            {
              item1= (Item_cond_and*) (yyvsp[-2].item);
              if (is_cond_and((yyvsp[0].item)))
              {
                item3= (Item_cond_and*) (yyvsp[0].item);
                /*
                  (X1 AND X2) AND (Y1 AND Y2) ==> AND (X1, X2, Y1, Y2)
                */
                item3->add_at_head(item1->argument_list());
                (yyval.item) = (yyvsp[0].item);
              }
              else
              {
                /*
                  (X1 AND X2) AND Y ==> AND (X1, X2, Y)
                */
                item1->add((yyvsp[0].item), thd->mem_root);
                (yyval.item) = (yyvsp[-2].item);
              }
            }
            else if (is_cond_and((yyvsp[0].item)))
            {
              item3= (Item_cond_and*) (yyvsp[0].item);
              /*
                X AND (Y1 AND Y2) ==> AND (X, Y1, Y2)
              */
              item3->add_at_head((yyvsp[-2].item), thd->mem_root);
              (yyval.item) = (yyvsp[0].item);
            }
            else
            {
              /* X AND Y */
              (yyval.item)= new (thd->mem_root) Item_cond_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
              if (unlikely((yyval.item) == NULL))
                MYSQL_YYABORT;
            }
          }
#line 41115 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1426: /* expr: NOT_SYM expr  */
#line 9696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41125 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1428: /* boolean_test: boolean_test IS TRUE_SYM  */
#line 9706 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_istrue(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41135 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1429: /* boolean_test: boolean_test IS not TRUE_SYM  */
#line 9712 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnottrue(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41145 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1430: /* boolean_test: boolean_test IS FALSE_SYM  */
#line 9718 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isfalse(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41155 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1431: /* boolean_test: boolean_test IS not FALSE_SYM  */
#line 9724 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotfalse(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41165 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1432: /* boolean_test: boolean_test IS UNKNOWN_SYM  */
#line 9730 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41175 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1433: /* boolean_test: boolean_test IS not UNKNOWN_SYM  */
#line 9736 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41185 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1434: /* boolean_test: boolean_test IS NULL_SYM  */
#line 9742 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnull(thd, (yyvsp[-2].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41195 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1435: /* boolean_test: boolean_test IS not NULL_SYM  */
#line 9748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_isnotnull(thd, (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41205 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1436: /* boolean_test: boolean_test EQUAL_SYM predicate  */
#line 9754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_equal(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41215 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1437: /* boolean_test: boolean_test comp_op predicate  */
#line 9760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (*(yyvsp[-1].boolfunc2creator))(0)->create(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41225 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1438: /* boolean_test: boolean_test comp_op all_or_any '(' subselect ')'  */
#line 9766 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= all_any_subquery_creator(thd, (yyvsp[-5].item), (yyvsp[-4].boolfunc2creator), (yyvsp[-3].num), (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41235 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1440: /* predicate: predicate IN_SYM subquery  */
#line 9776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-2].item), (yyvsp[0].select_lex));
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 41245 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1441: /* predicate: predicate not IN_SYM subquery  */
#line 9782 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_in_subselect(thd, (yyvsp[-3].item), (yyvsp[0].select_lex));
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 41258 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1442: /* predicate: predicate IN_SYM '(' expr ')'  */
#line 9791 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-4].item), true, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1443: /* predicate: predicate IN_SYM '(' expr ',' expr_list ')'  */
#line 9797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-6].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41280 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1444: /* predicate: predicate not IN_SYM '(' expr ')'  */
#line 9805 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= handle_sql2003_note184_exception(thd, (yyvsp[-5].item), false, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41290 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1445: /* predicate: predicate not IN_SYM '(' expr ',' expr_list ')'  */
#line 9811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-7].item), thd->mem_root);
            Item_func_in *item= new (thd->mem_root) Item_func_in(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 41303 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1446: /* predicate: predicate BETWEEN_SYM predicate AND_SYM predicate  */
#line 9820 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_between(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41313 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1447: /* predicate: predicate not BETWEEN_SYM predicate AND_SYM predicate  */
#line 9826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_between *item;
            item= new (thd->mem_root) Item_func_between(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 41325 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1448: /* predicate: predicate SOUNDS_SYM LIKE predicate  */
#line 9834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item1= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[-3].item));
            Item *item4= new (thd->mem_root) Item_func_soundex(thd, (yyvsp[0].item));
            if (unlikely(item1 == NULL) || unlikely(item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_eq(thd, item1, item4);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41339 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1449: /* predicate: predicate LIKE predicate  */
#line 9844 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-2].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 41349 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1450: /* predicate: predicate LIKE predicate ESCAPE_SYM predicate  */
#line 9850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            (yyval.item)= new (thd->mem_root) Item_func_like(thd, (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!(yyval.item)))
              MYSQL_YYABORT;
          }
#line 41360 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1451: /* predicate: predicate not LIKE predicate  */
#line 9857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-3].item), (yyvsp[0].item), escape(thd), false);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 41371 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1452: /* predicate: predicate not LIKE predicate ESCAPE_SYM predicate  */
#line 9864 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->escape_used= true;
            Item *item= new (thd->mem_root) Item_func_like(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
            if (unlikely(!item))
              MYSQL_YYABORT;
            (yyval.item)= item->neg_transformer(thd);
          }
#line 41383 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1453: /* predicate: predicate REGEXP predicate  */
#line 9872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41393 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1454: /* predicate: predicate not REGEXP predicate  */
#line 9878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_func_regex(thd, (yyvsp[-3].item), (yyvsp[0].item));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= negate_expression(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41406 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1456: /* bit_expr: bit_expr '|' bit_expr  */
#line 9891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_or(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41416 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1457: /* bit_expr: bit_expr '&' bit_expr  */
#line 9897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_and(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41426 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1458: /* bit_expr: bit_expr SHIFT_LEFT bit_expr  */
#line 9903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_left(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41436 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1459: /* bit_expr: bit_expr SHIFT_RIGHT bit_expr  */
#line 9909 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_shift_right(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41446 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1460: /* bit_expr: bit_expr ORACLE_CONCAT_SYM bit_expr  */
#line 9915 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat_operator_oracle(thd,
                                                                     (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41457 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1461: /* bit_expr: bit_expr '+' bit_expr  */
#line 9922 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_plus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41467 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1462: /* bit_expr: bit_expr '-' bit_expr  */
#line 9928 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minus(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41477 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1463: /* bit_expr: bit_expr '+' INTERVAL_SYM expr interval  */
#line 9934 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41487 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1464: /* bit_expr: bit_expr '-' INTERVAL_SYM expr interval  */
#line 9940 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41497 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1465: /* bit_expr: INTERVAL_SYM expr interval '+' expr  */
#line 9947 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41507 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1466: /* bit_expr: '+' INTERVAL_SYM expr interval '+' expr  */
#line 9953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41517 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1467: /* bit_expr: '-' INTERVAL_SYM expr interval '+' expr  */
#line 9959 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41527 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1468: /* bit_expr: bit_expr '*' bit_expr  */
#line 9965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mul(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41537 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1469: /* bit_expr: bit_expr '/' bit_expr  */
#line 9971 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41547 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1470: /* bit_expr: bit_expr '%' bit_expr  */
#line 9977 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41557 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1471: /* bit_expr: bit_expr DIV_SYM bit_expr  */
#line 9983 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_int_div(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41567 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1472: /* bit_expr: bit_expr MOD_SYM bit_expr  */
#line 9989 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41577 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1473: /* bit_expr: bit_expr '^' bit_expr  */
#line 9995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_xor(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41587 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1483: /* comp_op: '='  */
#line 10024 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 41593 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1484: /* comp_op: GE  */
#line 10025 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 41599 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1485: /* comp_op: '>'  */
#line 10026 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 41605 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1486: /* comp_op: LE  */
#line 10027 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 41611 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1487: /* comp_op: '<'  */
#line 10028 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 41617 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1488: /* comp_op: NE  */
#line 10029 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 41623 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1489: /* all_or_any: ALL  */
#line 10033 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 1; }
#line 41629 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1490: /* all_or_any: ANY_SYM  */
#line 10034 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.num) = 0; }
#line 41635 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1491: /* opt_dyncol_type: %empty  */
#line 10039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_NULL); /* automatic type */
	  }
#line 41643 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1492: /* opt_dyncol_type: AS dyncol_type  */
#line 10042 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.Lex_dyncol_type)= (yyvsp[0].Lex_dyncol_type); }
#line 41649 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1496: /* numeric_dyncol_type: INT_SYM  */
#line 10052 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_INT); }
#line 41655 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1497: /* numeric_dyncol_type: UNSIGNED INT_SYM  */
#line 10053 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_UINT);  }
#line 41661 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1498: /* numeric_dyncol_type: DOUBLE_SYM  */
#line 10054 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE);  }
#line 41667 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1499: /* numeric_dyncol_type: REAL  */
#line 10055 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 41673 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1500: /* numeric_dyncol_type: FLOAT_SYM  */
#line 10056 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DOUBLE); }
#line 41679 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1501: /* numeric_dyncol_type: DECIMAL_SYM float_options  */
#line 10057 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DECIMAL, (yyvsp[0].Lex_length_and_dec)); }
#line 41685 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1502: /* temporal_dyncol_type: DATE_SYM  */
#line 10061 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATE); }
#line 41691 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1503: /* temporal_dyncol_type: TIME_SYM opt_field_scale  */
#line 10062 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_TIME, (yyvsp[0].Lex_length_and_dec)); }
#line 41697 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1504: /* temporal_dyncol_type: DATETIME opt_field_scale  */
#line 10063 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.Lex_dyncol_type).set(DYN_COL_DATETIME, (yyvsp[0].Lex_length_and_dec)); }
#line 41703 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1505: /* string_dyncol_type: char opt_binary  */
#line 10068 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_dyncol_type).set(DYN_COL_STRING, thd,
                       thd->variables.character_set_collations,
                       (yyvsp[0].Lex_exact_charset_extended_collation_attrs), thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 41714 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1506: /* string_dyncol_type: nchar  */
#line 10075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_dyncol_type).set(DYN_COL_STRING, national_charset_info);
          }
#line 41722 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1507: /* dyncall_create_element: expr ',' expr opt_dyncol_type  */
#line 10082 "/home/buildbot/git/sql/sql_yacc.yy"
   {
     (yyval.dyncol_def)= (DYNCALL_CREATE_DEF *)
       alloc_root(thd->mem_root, sizeof(DYNCALL_CREATE_DEF));
     if (unlikely((yyval.dyncol_def) == NULL))
       MYSQL_YYABORT;
     (yyval.dyncol_def)->key= (yyvsp[-3].item);
     (yyval.dyncol_def)->value= (yyvsp[-1].item);
     (yyval.dyncol_def)->type= (DYNAMIC_COLUMN_TYPE)(yyvsp[0].Lex_dyncol_type).dyncol_type();
     (yyval.dyncol_def)->cs= (yyvsp[0].Lex_dyncol_type).charset_collation();
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_length())
       (yyval.dyncol_def)->len= (yyvsp[0].Lex_dyncol_type).length();
     else
       (yyval.dyncol_def)->len= 0;
     if ((yyvsp[0].Lex_dyncol_type).has_explicit_dec())
       (yyval.dyncol_def)->frac= (yyvsp[0].Lex_dyncol_type).dec();
     else
       (yyval.dyncol_def)->len= 0;
   }
#line 41745 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1508: /* dyncall_create_list: dyncall_create_element  */
#line 10104 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyval.dyncol_def_list)= new (thd->mem_root) List<DYNCALL_CREATE_DEF>;
         if (unlikely((yyval.dyncol_def_list) == NULL))
           MYSQL_YYABORT;
         (yyval.dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
       }
#line 41756 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1509: /* dyncall_create_list: dyncall_create_list ',' dyncall_create_element  */
#line 10111 "/home/buildbot/git/sql/sql_yacc.yy"
       {
         (yyvsp[-2].dyncol_def_list)->push_back((yyvsp[0].dyncol_def), thd->mem_root);
         (yyval.dyncol_def_list)= (yyvsp[-2].dyncol_def_list);
       }
#line 41765 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1510: /* plsql_cursor_attr: ISOPEN_SYM  */
#line 10119 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ISOPEN; }
#line 41771 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1511: /* plsql_cursor_attr: FOUND_SYM  */
#line 10120 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_FOUND; }
#line 41777 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1512: /* plsql_cursor_attr: NOTFOUND_SYM  */
#line 10121 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_NOTFOUND; }
#line 41783 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1513: /* plsql_cursor_attr: ROWCOUNT_SYM  */
#line 10122 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.plsql_cursor_attr)= PLSQL_CURSOR_ATTR_ROWCOUNT; }
#line 41789 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1514: /* explicit_cursor_attr: ident PERCENT_ORACLE_SYM plsql_cursor_attr  */
#line 10127 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_plsql_cursor_attr(thd, &(yyvsp[-2].ident_sys), (yyvsp[0].plsql_cursor_attr)))))
              MYSQL_YYABORT;
          }
#line 41798 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1517: /* trim_operands_regular: expr  */
#line 10140 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 41804 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1518: /* trim_operands_special: LEADING expr FROM expr  */
#line 10144 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[-2].item), (yyvsp[0].item));  }
#line 41810 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1519: /* trim_operands_special: TRAILING expr FROM expr  */
#line 10145 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[-2].item), (yyvsp[0].item)); }
#line 41816 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1520: /* trim_operands_special: BOTH expr FROM expr  */
#line 10146 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 41822 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1521: /* trim_operands_special: LEADING FROM expr  */
#line 10147 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_LEADING, (yyvsp[0].item));      }
#line 41828 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1522: /* trim_operands_special: TRAILING FROM expr  */
#line 10148 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_TRAILING, (yyvsp[0].item));     }
#line 41834 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1523: /* trim_operands_special: BOTH FROM expr  */
#line 10149 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[0].item));         }
#line 41840 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1524: /* trim_operands_special: expr FROM expr  */
#line 10150 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.trim).set(TRIM_BOTH, (yyvsp[-2].item), (yyvsp[0].item));     }
#line 41846 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1531: /* column_default_non_parenthesized_expr: param_marker  */
#line 10188 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item)= (yyvsp[0].item_param); }
#line 41852 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1533: /* column_default_non_parenthesized_expr: sum_expr  */
#line 10191 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top || Lex->json_table)
            {
              my_error(ER_INVALID_GROUP_FUNC_USE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41864 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1534: /* column_default_non_parenthesized_expr: window_func_expr  */
#line 10199 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!Lex->select_stack_top)
            {
               my_error(ER_WRONG_PLACEMENT_OF_WINDOW_FUNCTION, MYF(0));
               MYSQL_YYABORT;
            }
          }
#line 41876 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1536: /* column_default_non_parenthesized_expr: ROW_SYM '(' expr ',' expr_list ')'  */
#line 10208 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41887 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1537: /* column_default_non_parenthesized_expr: EXISTS '(' subselect ')'  */
#line 10215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_exists_subselect(thd, (yyvsp[-1].select_lex));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41897 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1538: /* column_default_non_parenthesized_expr: '{' ident expr '}'  */
#line 10221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].item)->make_odbc_literal(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 41906 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1539: /* column_default_non_parenthesized_expr: MATCH ident_list_arg AGAINST '(' bit_expr fulltext_options ')'  */
#line 10226 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-5].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            Item_func_match *i1= new (thd->mem_root) Item_func_match(thd, *(yyvsp[-5].item_list),
                                                                     (yyvsp[-1].num));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            Select->add_ftfunc_to_list(thd, i1);
            (yyval.item)= i1;
          }
#line 41920 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1540: /* column_default_non_parenthesized_expr: CAST_SYM '(' expr AS cast_type ')'  */
#line 10236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 41929 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1541: /* column_default_non_parenthesized_expr: CASE_SYM when_list_opt_else END  */
#line 10241 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new(thd->mem_root) Item_func_case_searched(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41938 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1542: /* column_default_non_parenthesized_expr: CASE_SYM expr when_list_opt_else END  */
#line 10246 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-2].item), thd->mem_root);
            if (unlikely(!((yyval.item)= new (thd->mem_root) Item_func_case_simple(thd, *(yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 41948 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1543: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr ',' cast_type ')'  */
#line 10252 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].Lex_cast_type).create_typecast_item_or_error(thd, (yyvsp[-3].item)))))
              MYSQL_YYABORT;
          }
#line 41957 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1544: /* column_default_non_parenthesized_expr: CONVERT_SYM '(' expr USING charset_name ')'  */
#line 10257 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            (yyval.item)= new (thd->mem_root) Item_func_conv_charset(thd, (yyvsp[-3].item), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41969 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1545: /* column_default_non_parenthesized_expr: DEFAULT '(' simple_ident ')'  */
#line 10265 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_splocal *il= (yyvsp[-1].item)->get_item_splocal();
            if (unlikely(il))
              my_yyabort_error((ER_WRONG_COLUMN_NAME, MYF(0), il->my_name()->str));
            (yyval.item)= new (thd->mem_root) Item_default_value(thd, Lex->current_context(),
                                                         (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->default_used= TRUE;
          }
#line 41984 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1546: /* column_default_non_parenthesized_expr: VALUE_SYM '(' simple_ident_nospvar ')'  */
#line 10276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_insert_value(thd, Lex->current_context(),
                                                        (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 41995 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1547: /* column_default_non_parenthesized_expr: NEXT_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10283 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 42004 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1548: /* column_default_non_parenthesized_expr: NEXTVAL_SYM '(' table_ident ')'  */
#line 10288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_nextval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 42013 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1549: /* column_default_non_parenthesized_expr: PREVIOUS_SYM VALUE_SYM FOR_SYM table_ident  */
#line 10293 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[0].table)))))
              MYSQL_YYABORT;
          }
#line 42022 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1550: /* column_default_non_parenthesized_expr: LASTVAL_SYM '(' table_ident ')'  */
#line 10298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_lastval(thd, (yyvsp[-1].table)))))
              MYSQL_YYABORT;
          }
#line 42031 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1551: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' sequence_value_hybrid_num ')'  */
#line 10303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-3].table), (yyvsp[-1].longlong_hybrid_number), 0,
                                                            1))))
              MYSQL_YYABORT;
          }
#line 42041 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1552: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' sequence_value_hybrid_num ',' bool ')'  */
#line 10309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-5].table), (yyvsp[-3].longlong_hybrid_number), 0,
                                                            (yyvsp[-1].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 42051 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1553: /* column_default_non_parenthesized_expr: SETVAL_SYM '(' table_ident ',' sequence_value_hybrid_num ',' bool ',' ulonglong_num ')'  */
#line 10316 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_func_setval(thd, (yyvsp[-7].table), (yyvsp[-5].longlong_hybrid_number), (yyvsp[-1].ulonglong_number),
                                                            (yyvsp[-3].ulong_num)))))
              MYSQL_YYABORT;
          }
#line 42061 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1556: /* primary_expr: '(' parenthesized_expr ')'  */
#line 10326 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { (yyval.item)= (yyvsp[-1].item); }
#line 42067 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1557: /* primary_expr: subquery  */
#line 10328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->create_item_query_expression(thd, (yyvsp[0].select_lex)->master_unit())))
              MYSQL_YYABORT;
          }
#line 42076 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1559: /* string_factor_expr: string_factor_expr COLLATE_SYM collation_name  */
#line 10337 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= new (thd->mem_root)
                               Item_func_set_collation(thd, (yyvsp[-2].item), (yyvsp[0].Lex_extended_collation)))))
              MYSQL_YYABORT;
          }
#line 42086 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1561: /* simple_expr: BINARY simple_expr  */
#line 10347 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Type_cast_attributes at(&my_charset_bin);
            if (unlikely(!((yyval.item)= type_handler_long_blob.create_typecast_item(thd, (yyvsp[0].item), at))))
              MYSQL_YYABORT;
          }
#line 42096 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1562: /* simple_expr: '+' simple_expr  */
#line 10353 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 42104 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1563: /* simple_expr: '-' simple_expr  */
#line 10357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item)->neg(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42114 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1564: /* simple_expr: '~' simple_expr  */
#line 10363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_bit_neg(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42124 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1565: /* simple_expr: not2 simple_expr  */
#line 10369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= negate_expression(thd, (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42134 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1567: /* mysql_concatenation_expr: mysql_concatenation_expr MYSQL_CONCAT_SYM simple_expr  */
#line 10379 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_concat(thd, (yyvsp[-2].item), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42144 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1568: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ')'  */
#line 10388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_datetime_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42155 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1569: /* function_call_keyword_timestamp: TIMESTAMP '(' expr ',' expr ')'  */
#line 10395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42165 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1570: /* function_call_keyword: CHAR_SYM '(' expr_list ')'  */
#line 10409 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42175 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1571: /* function_call_keyword: CHAR_SYM '(' expr_list USING charset_name ')'  */
#line 10415 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            (yyval.item)= new (thd->mem_root) Item_func_char(thd, *(yyvsp[-3].item_list), (yyvsp[-1].charset));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42187 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1572: /* function_call_keyword: CURRENT_USER optional_braces  */
#line 10423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_user(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 42200 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1573: /* function_call_keyword: CURRENT_ROLE optional_braces  */
#line 10432 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_role(thd,
                                      Lex->current_context());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 42213 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1574: /* function_call_keyword: DATE_SYM '(' expr ')'  */
#line 10441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_typecast(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_date_funcs_used_flag();
          }
#line 42224 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1575: /* function_call_keyword: DAY_SYM '(' expr ')'  */
#line 10448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_dayofmonth(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42234 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1576: /* function_call_keyword: HOUR_SYM '(' expr ')'  */
#line 10454 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_hour(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42244 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1577: /* function_call_keyword: INSERT '(' expr ',' expr ',' expr ',' expr ')'  */
#line 10460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_insert(thd, (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42254 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1578: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ')'  */
#line 10466 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            if (unlikely(list->push_front((yyvsp[-1].item), thd->mem_root)) ||
                unlikely(list->push_front((yyvsp[-3].item), thd->mem_root)))
              MYSQL_YYABORT;
            Item_row *item= new (thd->mem_root) Item_row(thd, *list);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42273 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1579: /* function_call_keyword: INTERVAL_SYM '(' expr ',' expr ',' expr_list ')'  */
#line 10481 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].item_list)->push_front((yyvsp[-3].item), thd->mem_root);
            (yyvsp[-1].item_list)->push_front((yyvsp[-5].item), thd->mem_root);
            Item_row *item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_func_interval(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42288 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1580: /* function_call_keyword: LEFT '(' expr ',' expr ')'  */
#line 10492 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_left(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42298 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1581: /* function_call_keyword: MINUTE_SYM '(' expr ')'  */
#line 10498 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_minute(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42308 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1582: /* function_call_keyword: MONTH_SYM '(' expr ')'  */
#line 10504 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_month(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_date_funcs_used_flag();
          }
#line 42319 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1583: /* function_call_keyword: RIGHT '(' expr ',' expr ')'  */
#line 10511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_right(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42329 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1584: /* function_call_keyword: SECOND_SYM '(' expr ')'  */
#line 10517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_second(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42339 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1585: /* function_call_keyword: SQL_SYM PERCENT_ORACLE_SYM ROWCOUNT_SYM  */
#line 10523 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_oracle_sql_rowcount(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query= 0;
          }
#line 42351 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1586: /* function_call_keyword: SESSION_USER_SYM '(' ')'  */
#line 10531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_session_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 42363 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1587: /* function_call_keyword: TIME_SYM '(' expr ')'  */
#line 10539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_time_typecast(thd, (yyvsp[-1].item),
                                      AUTO_SEC_PART_DIGITS);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42374 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1588: /* function_call_keyword: function_call_keyword_timestamp  */
#line 10546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 42382 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1589: /* function_call_keyword: TRIM '(' trim_operands ')'  */
#line 10550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_trim(thd, (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 42392 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1590: /* function_call_keyword: USER_SYM '(' ')'  */
#line 10556 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_user(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->safe_to_cache_query=0;
          }
#line 42404 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1591: /* function_call_keyword: YEAR_SYM '(' expr ')'  */
#line 10564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_year(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
             Lex->set_date_funcs_used_flag();
          }
#line 42415 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1594: /* substring_operands_regular: expr ',' expr ',' expr  */
#line 10579 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 42423 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1595: /* substring_operands_regular: expr ',' expr  */
#line 10583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 42431 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1596: /* substring_operands_special: expr FROM expr FOR_SYM expr  */
#line 10590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 42439 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1597: /* substring_operands_special: expr FROM expr  */
#line 10594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.substring_spec)= Lex_substring_spec_st::init((yyvsp[-2].item), (yyvsp[0].item));
          }
#line 42447 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1598: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' expr ')'  */
#line 10614 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42458 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1599: /* function_call_nonkeyword: ADDDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10621 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42468 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1600: /* function_call_nonkeyword: CURDATE optional_braces  */
#line 10627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_local(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 42479 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1601: /* function_call_nonkeyword: CURTIME opt_time_precision  */
#line 10634 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 42490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1602: /* function_call_nonkeyword: DATE_ADD_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10641 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42500 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1603: /* function_call_nonkeyword: DATE_SUB_INTERVAL '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42510 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1604: /* function_call_nonkeyword: EXTRACT_SYM '(' interval FROM expr ')'  */
#line 10653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)=new (thd->mem_root) Item_extract(thd, (yyvsp[-3].interval), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42520 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1605: /* function_call_nonkeyword: GET_FORMAT '(' date_time_type ',' expr ')'  */
#line 10659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_get_format(thd, (yyvsp[-3].date_time_type), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42530 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1606: /* function_call_nonkeyword: LOCALTIMESTAMP opt_time_precision  */
#line 10665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_local(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query= false;
          }
#line 42541 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1607: /* function_call_nonkeyword: NOW_SYM opt_time_precision  */
#line 10672 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_current_timestamp(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 42552 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1608: /* function_call_nonkeyword: POSITION_SYM '(' bit_expr IN_SYM expr ')'  */
#line 10679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_locate(thd, (yyvsp[-1].item), (yyvsp[-3].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42562 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1609: /* function_call_nonkeyword: ROWNUM_SYM '(' ')'  */
#line 10690 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_rownum(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42572 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1610: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' expr ')'  */
#line 10696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-3].item), (yyvsp[-1].item),
                                                             INTERVAL_DAY, 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42583 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1611: /* function_call_nonkeyword: SUBDATE_SYM '(' expr ',' INTERVAL_SYM expr interval ')'  */
#line 10703 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42593 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1612: /* function_call_nonkeyword: SUBSTRING '(' substring_operands ')'  */
#line 10709 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_substr(thd, (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 42603 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1613: /* function_call_nonkeyword: SYSDATE '(' ')'  */
#line 10722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, 0))))
               MYSQL_YYABORT;
          }
#line 42612 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1614: /* function_call_nonkeyword: SYSDATE '(' real_ulong_num ')'  */
#line 10727 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(!((yyval.item)= Lex->make_item_func_sysdate(thd, (uint) (yyvsp[-1].ulong_num)))))
               MYSQL_YYABORT;
          }
#line 42621 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1615: /* function_call_nonkeyword: TIMESTAMP_ADD '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10732 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_date_add_interval(thd, (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42631 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1616: /* function_call_nonkeyword: TIMESTAMP_DIFF '(' interval_time_stamp ',' expr ',' expr ')'  */
#line 10738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_timestamp_diff(thd, (yyvsp[-3].item), (yyvsp[-1].item), (yyvsp[-5].interval_time_st));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42641 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1617: /* function_call_nonkeyword: TRIM_ORACLE '(' trim_operands ')'  */
#line 10744 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= (yyvsp[-1].trim).make_item_func_trim_oracle(thd))))
              MYSQL_YYABORT;
          }
#line 42650 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1618: /* function_call_nonkeyword: UTC_DATE_SYM optional_braces  */
#line 10749 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curdate_utc(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 42661 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1619: /* function_call_nonkeyword: UTC_TIME_SYM opt_time_precision  */
#line 10756 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_curtime_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 42672 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1620: /* function_call_nonkeyword: UTC_TIMESTAMP_SYM opt_time_precision  */
#line 10763 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_now_utc(thd, (yyvsp[0].num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            Lex->safe_to_cache_query=0;
          }
#line 42683 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1621: /* function_call_nonkeyword: COLUMN_ADD_SYM '(' expr ',' dyncall_create_list ')'  */
#line 10771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_add(thd, (yyvsp[-3].item), *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1622: /* function_call_nonkeyword: COLUMN_DELETE_SYM '(' expr ',' expr_list ')'  */
#line 10778 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_delete(thd, (yyvsp[-3].item), *(yyvsp[-1].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42703 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1623: /* function_call_nonkeyword: COLUMN_CREATE_SYM '(' dyncall_create_list ')'  */
#line 10785 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_create(thd, *(yyvsp[-1].dyncol_def_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42713 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1624: /* function_call_nonkeyword: COLUMN_GET_SYM '(' expr ',' expr AS cast_type ')'  */
#line 10792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= create_func_dyncol_get(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].Lex_cast_type).type_handler(),
                                        (yyvsp[-1].Lex_cast_type), (yyvsp[-1].Lex_cast_type).charset());
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42724 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1625: /* function_call_conflict: ASCII_SYM '(' expr ')'  */
#line 10807 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_ascii(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42734 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1626: /* function_call_conflict: CHARSET '(' expr ')'  */
#line 10813 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_charset(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42744 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1627: /* function_call_conflict: IF_SYM '(' expr ',' expr ',' expr ')'  */
#line 10819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_if(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42754 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1628: /* function_call_conflict: LAST_VALUE '(' expr ')'  */
#line 10828 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<Item> *list= new (thd->mem_root) List<Item>;
            if (unlikely(list == NULL))
              MYSQL_YYABORT;
            list->push_back((yyvsp[-1].item), thd->mem_root);

            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *list);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42769 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1629: /* function_call_conflict: LAST_VALUE '(' expr_list ',' expr ')'  */
#line 10839 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].item_list)->push_back((yyvsp[-1].item), thd->mem_root);
            (yyval.item)= new (thd->mem_root) Item_func_last_value(thd, *(yyvsp[-3].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42780 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1630: /* function_call_conflict: MOD_SYM '(' expr ',' expr ')'  */
#line 10846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_mod(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42790 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1631: /* function_call_conflict: PASSWORD_SYM '(' expr ')'  */
#line 10852 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* i1;
            i1= new (thd->mem_root) Item_func_password(thd, (yyvsp[-1].item));
            if (unlikely(i1 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= i1;
          }
#line 42802 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1632: /* function_call_conflict: REPEAT_SYM '(' expr ',' expr ')'  */
#line 10860 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_repeat(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42812 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1633: /* function_call_conflict: REPLACE '(' expr ',' expr ',' expr ')'  */
#line 10866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Schema::find_implied(thd)->
                                 make_item_func_replace(thd, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item)))))
              MYSQL_YYABORT;
          }
#line 42822 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1634: /* function_call_conflict: TRUNCATE_SYM '(' expr ',' expr ')'  */
#line 10872 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_round(thd, (yyvsp[-3].item), (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42832 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1635: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr opt_ws_levels ')'  */
#line 10878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-2].item), 0, 0, (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42842 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1636: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS CHAR_SYM ws_nweights opt_ws_levels ')'  */
#line 10884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, (yyvsp[-5].item), 0, (yyvsp[-2].ulong_num),
                                        (yyvsp[-1].ulong_num) | MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1637: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr AS BINARY ws_nweights ')'  */
#line 10892 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_char_typecast(thd, (yyvsp[-4].item), (yyvsp[-1].ulong_num),
                                                               &my_charset_bin);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root)
                Item_func_weight_string(thd, item, 0, (yyvsp[-1].ulong_num),
                                        MY_STRXFRM_PAD_WITH_SPACE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42870 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1638: /* function_call_conflict: WEIGHT_STRING_SYM '(' expr ',' ulong_num ',' ulong_num ',' ulong_num ')'  */
#line 10904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_func_weight_string(thd, (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num),
                                                            (yyvsp[-1].ulong_num));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 42881 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1639: /* @144: %empty  */
#line 10923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
#ifdef HAVE_DLOPEN
            udf_func *udf= 0;
            LEX *lex= Lex;
            if (using_udf_functions &&
                (udf= find_udf((yyvsp[-1].ident_sys).str, (yyvsp[-1].ident_sys).length)) &&
                udf->type == UDFTYPE_AGGREGATE)
            {
              if (unlikely(lex->current_select->inc_in_sum_expr()))
              {
                thd->parse_error();
                MYSQL_YYABORT;
              }
            }
            /* Temporary placing the result of find_udf in $3 */
            (yyval.udf)= udf;
#endif
          }
#line 42904 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1640: /* function_call_generic: ident_func '(' @144 opt_udf_expr_list ')'  */
#line 10942 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            const Type_handler *h;
            Create_func *builder;
            Item *item= NULL;
            sp_record* rec= NULL;

            if (unlikely(Lex_ident_routine::check_name_with_error((yyvsp[-4].ident_sys))))
              MYSQL_YYABORT;

            /*
              Implementation note:
              names are resolved with the following order:
              - MySQL native functions,
              - User Defined Functions,
              - Constructors, like POINT(1,1)
              - Stored Functions (assuming the current <use> database)

              This will be revised with WL#2128 (SQL PATH)
            */
            builder= Schema::find_implied(thd)->
                       find_native_function_builder(thd, (yyvsp[-4].ident_sys));
            if (builder)
            {
              item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
            }
            else if ((h= Type_handler::handler_by_name(thd, (yyvsp[-4].ident_sys))) &&
                     (item= h->make_constructor_item(thd, (yyvsp[-1].item_list))))
            {
              // Found a constructor with a proper argument count
            }
            else if (Lex->spcont &&
                    (rec = Lex->spcont->find_record(&(yyvsp[-4].ident_sys), false)))
            {
              item= new (thd->mem_root) Item_row(thd, *(yyvsp[-1].item_list));
            }
            else
            {
#ifdef HAVE_DLOPEN
              /* Retrieving the result of find_udf */
              udf_func *udf= (yyvsp[-2].udf);

              if (udf)
              {
                if (udf->type == UDFTYPE_AGGREGATE)
                {
                  Select->in_sum_expr--;
                }

                item= Create_udf_func::s_singleton.create(thd, udf, (yyvsp[-1].item_list));
              }
              else
#endif
              {
                builder= find_qualified_function_builder(thd);
                DBUG_ASSERT(builder);
                item= builder->create_func(thd, &(yyvsp[-4].ident_sys), (yyvsp[-1].item_list));
              }
            }

            if (unlikely(! ((yyval.item)= item)))
              MYSQL_YYABORT;
          }
#line 42971 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1641: /* function_call_generic: CONTAINS_SYM '(' opt_expr_list ')'  */
#line 11005 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 42981 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1642: /* function_call_generic: OVERLAPS_SYM '(' opt_expr_list ')'  */
#line 11011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 42991 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1643: /* function_call_generic: WITHIN '(' opt_expr_list ')'  */
#line 11017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.item)= Lex->make_item_func_call_native_or_parse_error(thd,
                                                                     (yyvsp[-3].kwd), (yyvsp[-1].item_list))))
              MYSQL_YYABORT;
          }
#line 43001 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1644: /* function_call_generic: ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 43010 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1645: /* function_call_generic: ident_cli '.' ident_cli '.' ident_cli '(' opt_expr_list ')'  */
#line 11028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_call_generic(thd, &(yyvsp[-7].ident_cli), &(yyvsp[-5].ident_cli), &(yyvsp[-3].ident_cli), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 43019 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1646: /* function_call_generic: ident_cli '.' REPLACE '(' opt_expr_list ')'  */
#line 11033 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_replace(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 43028 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1647: /* function_call_generic: ident_cli '.' SUBSTRING '(' opt_expr_list ')'  */
#line 11038 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 43037 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1648: /* function_call_generic: ident_cli '.' SUBSTRING '(' substring_operands_special ')'  */
#line 11043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_substr(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].substring_spec)))))
              MYSQL_YYABORT;
          }
#line 43046 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1649: /* function_call_generic: ident_cli '.' TRIM '(' opt_expr_list ')'  */
#line 11048 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_trim(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].item_list)))))
              MYSQL_YYABORT;
          }
#line 43055 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1650: /* function_call_generic: ident_cli '.' TRIM '(' trim_operands_special ')'  */
#line 11053 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_func_trim(thd, (yyvsp[-5].ident_cli), (yyvsp[-3].kwd), (yyvsp[-1].trim)))))
              MYSQL_YYABORT;
          }
#line 43064 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1651: /* fulltext_options: opt_natural_language_mode opt_query_expansion  */
#line 11073 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 43070 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1652: /* fulltext_options: IN_SYM BOOLEAN_SYM MODE_SYM  */
#line 11075 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.num)= FT_BOOL; }
#line 43076 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1653: /* opt_natural_language_mode: %empty  */
#line 11079 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 43082 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1654: /* opt_natural_language_mode: IN_SYM NATURAL LANGUAGE_SYM MODE_SYM  */
#line 11080 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_NL; }
#line 43088 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1655: /* opt_query_expansion: %empty  */
#line 11084 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= 0;         }
#line 43094 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1656: /* opt_query_expansion: WITH QUERY_SYM EXPANSION_SYM  */
#line 11085 "/home/buildbot/git/sql/sql_yacc.yy"
                                                { (yyval.num)= FT_EXPAND; }
#line 43100 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1657: /* opt_udf_expr_list: %empty  */
#line 11089 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= NULL; }
#line 43106 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1658: /* opt_udf_expr_list: udf_expr_list  */
#line 11090 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item_list)= (yyvsp[0].item_list); }
#line 43112 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1659: /* udf_expr_list: udf_expr  */
#line 11095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root);
          }
#line 43123 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1660: /* udf_expr_list: udf_expr_list ',' udf_expr  */
#line 11102 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 43132 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1661: /* udf_expr: remember_name expr remember_end select_alias  */
#line 11110 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
             Use Item::name as a storage for the attribute value of user
             defined function argument. It is safe to use Item::name
             because the syntax will not allow having an explicit name here.
             See WL#1017 re. udf attributes.
            */
            if ((yyvsp[0].lex_str).str)
            {
              (yyvsp[-2].item)->base_flags|= item_base_t::IS_EXPLICIT_NAME;
              (yyvsp[-2].item)->set_name(thd, (yyvsp[0].lex_str));
            }
            /* 
               A field has to have its proper name in order for name
               resolution to work, something we are only guaranteed if we
               parse it out. If we hijack the input stream with
               remember_name we may get quoted or escaped names.
            */
            else if ((yyvsp[-2].item)->type() != Item::FIELD_ITEM &&
                     (yyvsp[-2].item)->type() != Item::REF_ITEM /* For HAVING */ )
              (yyvsp[-2].item)->set_name(thd, (yyvsp[-3].simple_string), (uint) ((yyvsp[-1].simple_string) - (yyvsp[-3].simple_string)), thd->charset());
            (yyval.item)= (yyvsp[-2].item);
          }
#line 43160 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1662: /* sum_expr: AVG_SYM '(' in_sum_expr ')'  */
#line 11137 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43170 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1663: /* sum_expr: AVG_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11143 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_avg(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43180 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1664: /* sum_expr: BIT_AND '(' in_sum_expr ')'  */
#line 11149 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_and(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43190 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1665: /* sum_expr: BIT_OR '(' in_sum_expr ')'  */
#line 11155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_or(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43200 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1666: /* sum_expr: BIT_XOR '(' in_sum_expr ')'  */
#line 11161 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_xor(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43210 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1667: /* sum_expr: COUNT_SYM '(' opt_all '*' ')'  */
#line 11167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *item= new (thd->mem_root) Item_int(thd, (int32) 0L, 1);
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, item);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43223 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1668: /* sum_expr: COUNT_SYM '(' in_sum_expr ')'  */
#line 11176 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43233 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1669: /* $@145: %empty  */
#line 11182 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 43239 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1670: /* $@146: %empty  */
#line 11184 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr--; }
#line 43245 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1671: /* sum_expr: COUNT_SYM '(' DISTINCT $@145 expr_list $@146 ')'  */
#line 11186 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_count(thd, *(yyvsp[-2].item_list));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43255 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1672: /* sum_expr: MIN_SYM '(' in_sum_expr ')'  */
#line 11192 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43265 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1673: /* sum_expr: MIN_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11203 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_min(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43275 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1674: /* sum_expr: MAX_SYM '(' in_sum_expr ')'  */
#line 11209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43285 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1675: /* sum_expr: MAX_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11215 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_max(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43295 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1676: /* sum_expr: STD_SYM '(' in_sum_expr ')'  */
#line 11221 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43305 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1677: /* sum_expr: VARIANCE_SYM '(' in_sum_expr ')'  */
#line 11227 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43315 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1678: /* sum_expr: STDDEV_SAMP_SYM '(' in_sum_expr ')'  */
#line 11233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_std(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43325 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1679: /* sum_expr: VAR_SAMP_SYM '(' in_sum_expr ')'  */
#line 11239 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_variance(thd, (yyvsp[-1].item), 1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43335 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1680: /* sum_expr: SUM_SYM '(' in_sum_expr ')'  */
#line 11245 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), FALSE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43345 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1681: /* sum_expr: SUM_SYM '(' DISTINCT in_sum_expr ')'  */
#line 11251 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_sum(thd, (yyvsp[-1].item), TRUE);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43355 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1682: /* $@147: %empty  */
#line 11257 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 43361 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1683: /* sum_expr: GROUP_CONCAT_SYM '(' opt_distinct $@147 expr_list opt_gorder_clause opt_gconcat_separator opt_glimit_clause ')'  */
#line 11261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;
            (yyval.item)= new (thd->mem_root)
                  Item_func_group_concat(thd, Lex->current_context(),
                                        (yyvsp[-6].num), (yyvsp[-4].item_list),
                                        sel->gorder_list, (yyvsp[-2].string), (yyvsp[-1].num),
                                        sel->limit_params.select_limit,
                                        sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-4].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 43381 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1684: /* $@148: %empty  */
#line 11277 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 43387 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1685: /* sum_expr: JSON_ARRAYAGG_SYM '(' opt_distinct $@148 expr_list opt_gorder_clause opt_glimit_clause ')'  */
#line 11280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            List<Item> *args= (yyvsp[-3].item_list);
            sel->in_sum_expr--;
            if (args && args->elements > 1)
            {
              /* JSON_ARRAYAGG supports only one parameter */
              my_error(ER_WRONG_PARAMCOUNT_TO_NATIVE_FCT, MYF(0), "JSON_ARRAYAGG");
              MYSQL_YYABORT;
            }
            String* s= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely(s == NULL))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root)
                  Item_func_json_arrayagg(thd, Lex->current_context(),
                                          (yyvsp[-5].num), args,
                                          sel->gorder_list, s, (yyvsp[-1].num),
                                          sel->limit_params.select_limit,
                                          sel->limit_params.offset_limit);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            sel->limit_params.clear();
            (yyvsp[-3].item_list)->empty();
            sel->gorder_list.empty();
          }
#line 43418 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1686: /* $@149: %empty  */
#line 11307 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->in_sum_expr++; }
#line 43424 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1687: /* sum_expr: JSON_OBJECTAGG_SYM '(' $@149 expr ',' expr ')'  */
#line 11309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->in_sum_expr--;

            (yyval.item)= new (thd->mem_root) Item_func_json_objectagg(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43437 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1688: /* window_func_expr: window_func OVER_SYM window_name  */
#line 11321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item), (yyvsp[0].lex_str_ptr));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 43449 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1689: /* window_func_expr: window_func OVER_SYM window_spec  */
#line 11330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 lex->win_frame)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-2].item),
                                                      thd->lex->win_spec); 
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 43468 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1692: /* window_func: function_call_generic  */
#line 11352 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item* item = (Item*)(yyvsp[0].item);
            /* Only UDF aggregate here possible */
            if ((item == NULL) ||
                (item->type() != Item::SUM_FUNC_ITEM)
                || (((Item_sum *)item)->sum_func() != Item_sum::UDF_SUM_FUNC))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 43484 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1693: /* simple_window_func: ROW_NUMBER_SYM '(' ')'  */
#line 11367 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_row_number(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43494 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1694: /* simple_window_func: RANK_SYM '(' ')'  */
#line 11374 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43504 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1695: /* simple_window_func: DENSE_RANK_SYM '(' ')'  */
#line 11381 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_dense_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43514 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1696: /* simple_window_func: PERCENT_RANK_SYM '(' ')'  */
#line 11388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percent_rank(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43524 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1697: /* simple_window_func: CUME_DIST_SYM '(' ')'  */
#line 11395 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_cume_dist(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43534 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1698: /* simple_window_func: NTILE_SYM '(' expr ')'  */
#line 11402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_ntile(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43544 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1699: /* simple_window_func: FIRST_VALUE_SYM '(' expr ')'  */
#line 11409 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_first_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43554 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1700: /* simple_window_func: LAST_VALUE '(' expr ')'  */
#line 11416 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_last_value(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43564 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1701: /* simple_window_func: NTH_VALUE_SYM '(' expr ',' expr ')'  */
#line 11423 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_nth_value(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43574 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1702: /* simple_window_func: LEAD_SYM '(' expr ')'  */
#line 11430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43588 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1703: /* simple_window_func: LEAD_SYM '(' expr ',' expr ')'  */
#line 11441 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lead(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43598 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1704: /* simple_window_func: LAG_SYM '(' expr ')'  */
#line 11448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* No second argument defaults to 1. */
            Item* item_offset= new (thd->mem_root) Item_uint(thd, 1);
            if (unlikely(item_offset == NULL))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-1].item), item_offset);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43612 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1705: /* simple_window_func: LAG_SYM '(' expr ',' expr ')'  */
#line 11459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_lag(thd, (yyvsp[-3].item), (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43622 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1706: /* inverse_distribution_function: percentile_function OVER_SYM '(' opt_window_partition_clause ')'  */
#line 11471 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(Select->add_window_spec(thd, lex->win_ref,
                                                 Select->group_list,
                                                 Select->order_list,
                                                 NULL)))
              MYSQL_YYABORT;
            (yyval.item)= new (thd->mem_root) Item_window_func(thd, (Item_sum *) (yyvsp[-4].item),
                                                     thd->lex->win_spec);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            if (unlikely(Select->add_window_func((Item_window_func *) (yyval.item))))
              MYSQL_YYABORT;
          }
#line 43641 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1707: /* $@150: %empty  */
#line 11489 "/home/buildbot/git/sql/sql_yacc.yy"
           { Select->prepare_add_window_spec(thd); }
#line 43647 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1708: /* percentile_function: inverse_distribution_function_def WITHIN GROUP_SYM '(' $@150 order_by_single_element_list ')'  */
#line 11491 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             (yyval.item)= (yyvsp[-6].item);
           }
#line 43655 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1709: /* percentile_function: MEDIAN_SYM '(' expr ')'  */
#line 11495 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *args= new (thd->mem_root) Item_decimal(thd, "0.5", 3,
                                                   thd->charset());
            if (unlikely(args == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
            Select->prepare_add_window_spec(thd);
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),FALSE)))
              MYSQL_YYABORT;

            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, args);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43673 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1710: /* inverse_distribution_function_def: PERCENTILE_CONT_SYM '(' expr ')'  */
#line 11512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_cont(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43683 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1711: /* inverse_distribution_function_def: PERCENTILE_DISC_SYM '(' expr ')'  */
#line 11518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_sum_percentile_disc(thd, (yyvsp[-1].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 43693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1712: /* order_by_single_element_list: ORDER_SYM BY order_ident order_dir  */
#line 11527 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
          }
#line 43702 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1713: /* window_name: ident  */
#line 11536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 43712 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1714: /* $@151: %empty  */
#line 11545 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(! Lex->parsing_options.allows_variable))
              my_yyabort_error((ER_VIEW_SELECT_VARIABLE, MYF(0)));
          }
#line 43721 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1715: /* variable: '@' $@151 variable_aux  */
#line 11550 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= (yyvsp[0].item);
          }
#line 43729 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1716: /* variable_aux: ident_or_text SET_VAR expr  */
#line 11557 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_func_set_user_var *item;
            if (!(yyvsp[-2].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= item= new (thd->mem_root) Item_func_set_user_var(thd, &(yyvsp[-2].lex_str), (yyvsp[0].item));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            lex->set_var_list.push_back(item, thd->mem_root);
          }
#line 43748 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1717: /* variable_aux: ident_or_text  */
#line 11572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
            (yyval.item)= new (thd->mem_root) Item_func_get_user_var(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
          }
#line 43765 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1718: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name  */
#line 11585 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-1].var_type), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43774 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1719: /* variable_aux: '@' opt_var_ident_type ident_sysvar_name '.' ident  */
#line 11590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_sysvar(thd, (yyvsp[-3].var_type), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 43783 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1720: /* opt_distinct: %empty  */
#line 11597 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 43789 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1721: /* opt_distinct: DISTINCT  */
#line 11598 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 1; }
#line 43795 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1722: /* opt_gconcat_separator: %empty  */
#line 11603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String(",", 1, &my_charset_latin1);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 43805 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1723: /* opt_gconcat_separator: SEPARATOR_SYM text_string  */
#line 11608 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.string) = (yyvsp[0].string); }
#line 43811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1726: /* gorder_list: gorder_list ',' order_ident order_dir  */
#line 11618 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 43820 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1727: /* gorder_list: order_ident order_dir  */
#line 11623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_gorder_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 43829 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1728: /* opt_glimit_clause: %empty  */
#line 11630 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num) = 0; }
#line 43835 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1729: /* opt_glimit_clause: glimit_clause  */
#line 11631 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num) = 1; }
#line 43841 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1730: /* glimit_clause: LIMIT glimit_options  */
#line 11637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 43849 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1731: /* glimit_options: limit_options  */
#line 11644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 43857 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1732: /* $@152: %empty  */
#line 11653 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->current_select->inc_in_sum_expr()))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 43870 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1733: /* in_sum_expr: opt_all $@152 expr  */
#line 11662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->in_sum_expr--;
            (yyval.item)= (yyvsp[0].item);
          }
#line 43879 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1734: /* cast_type: BINARY opt_field_length  */
#line 11670 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), &my_charset_bin); }
#line 43885 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1735: /* cast_type: CHAR_SYM opt_field_length opt_binary  */
#line 11672 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 43896 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1736: /* cast_type: VARCHAR field_length opt_binary  */
#line 11679 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 43907 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1737: /* cast_type: VARCHAR2_ORACLE_SYM field_length opt_binary  */
#line 11686 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyval.Lex_cast_type).set(&type_handler_long_blob,
                       (yyvsp[-1].Lex_length_and_dec), thd, thd->variables.character_set_collations, (yyvsp[0].Lex_exact_charset_extended_collation_attrs),
                       thd->variables.collation_connection))
              MYSQL_YYABORT;
          }
#line 43918 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1738: /* cast_type: NCHAR_SYM opt_field_length  */
#line 11693 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_long_blob, (yyvsp[0].Lex_length_and_dec), national_charset_info);
          }
#line 43926 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1739: /* cast_type: cast_type_numeric  */
#line 11696 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 43932 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1740: /* cast_type: cast_type_temporal  */
#line 11697 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.Lex_cast_type)= (yyvsp[0].Lex_cast_type); }
#line 43938 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1741: /* cast_type: udt_name  */
#line 11699 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_cast_type_udt(&(yyval.Lex_cast_type), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 43947 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1742: /* cast_type_numeric: INT_SYM  */
#line 11706 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 43953 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1743: /* cast_type_numeric: SIGNED_SYM  */
#line 11707 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 43959 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1744: /* cast_type_numeric: SIGNED_SYM INT_SYM  */
#line 11708 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_slonglong); }
#line 43965 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1745: /* cast_type_numeric: UNSIGNED  */
#line 11709 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 43971 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1746: /* cast_type_numeric: UNSIGNED INT_SYM  */
#line 11710 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_ulonglong); }
#line 43977 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1747: /* cast_type_numeric: DECIMAL_SYM float_options  */
#line 11711 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdecimal, (yyvsp[0].Lex_length_and_dec)); }
#line 43983 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1748: /* cast_type_numeric: FLOAT_SYM  */
#line 11712 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_float); }
#line 43989 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1749: /* cast_type_numeric: DOUBLE_SYM opt_precision  */
#line 11713 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_double, (yyvsp[0].Lex_length_and_dec));  }
#line 43995 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1750: /* cast_type_temporal: DATE_SYM  */
#line 11717 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_newdate); }
#line 44001 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1751: /* cast_type_temporal: TIME_SYM opt_field_scale  */
#line 11718 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_time2, (yyvsp[0].Lex_length_and_dec)); }
#line 44007 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1752: /* cast_type_temporal: DATETIME opt_field_scale  */
#line 11719 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.Lex_cast_type).set(&type_handler_datetime2, (yyvsp[0].Lex_length_and_dec)); }
#line 44013 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1753: /* cast_type_temporal: INTERVAL_SYM DAY_SECOND_SYM field_scale  */
#line 11721 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.Lex_cast_type).set(&type_handler_interval_DDhhmmssff, (yyvsp[0].Lex_length_and_dec));
          }
#line 44021 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1754: /* opt_expr_list: %empty  */
#line 11727 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item_list)= NULL; }
#line 44027 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1755: /* opt_expr_list: expr_list  */
#line 11728 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.item_list)= (yyvsp[0].item_list);}
#line 44033 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1756: /* expr_list: expr  */
#line 11733 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_list)= List<Item>::make(thd->mem_root, (yyvsp[0].item)))))
              MYSQL_YYABORT;
          }
#line 44042 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1757: /* expr_list: expr_list ',' expr  */
#line 11738 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 44051 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1758: /* ident_list_arg: ident_list  */
#line 11745 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[0].item_list); }
#line 44057 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1759: /* ident_list_arg: '(' ident_list ')'  */
#line 11746 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.item_list)= (yyvsp[-1].item_list); }
#line 44063 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1760: /* ident_list: simple_ident  */
#line 11751 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL) ||
                unlikely((yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1761: /* ident_list: ident_list ',' simple_ident  */
#line 11758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root);
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 44083 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1762: /* when_list: WHEN_SYM expr THEN_SYM expr  */
#line 11766 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_list)= new (thd->mem_root) List<Item>;
            if (unlikely((yyval.item_list) == NULL))
              MYSQL_YYABORT;
            if (unlikely((yyval.item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyval.item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 44096 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1763: /* when_list: when_list WHEN_SYM expr THEN_SYM expr  */
#line 11775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-4].item_list)->push_back((yyvsp[-2].item), thd->mem_root) ||
                         (yyvsp[-4].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 44107 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1765: /* when_list_opt_else: when_list ELSE expr  */
#line 11786 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-2].item_list)->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 44117 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1766: /* table_ref: table_factor  */
#line 11796 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44123 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1767: /* table_ref: join_table  */
#line 11798 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->nest_last_join(thd))))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 44136 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1770: /* json_text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 11812 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_string_with_metadata)= (yyvsp[0].lex_string_with_metadata);
          }
#line 44144 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1771: /* join_table_list: derived_table_list  */
#line 11818 "/home/buildbot/git/sql/sql_yacc.yy"
                             { MYSQL_YYABORT_UNLESS((yyval.table_list)=(yyvsp[0].table_list)); }
#line 44150 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1772: /* json_table_columns_clause: COLUMNS '(' json_table_columns_list ')'  */
#line 11823 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44156 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1774: /* json_table_columns_list: json_table_columns_list ',' json_table_column  */
#line 11829 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44162 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1775: /* $@153: %empty  */
#line 11834 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Create_field *f= new (thd->mem_root) Create_field();

            if (unlikely(check_string_char_length(&(yyvsp[0].ident_sys), 0, NAME_CHAR_LEN,
                                                  system_charset_info, 1)))
              my_yyabort_error((ER_TOO_LONG_IDENT, MYF(0), (yyvsp[0].ident_sys).str));

            lex->json_table->m_cur_json_table_column=
              new (thd->mem_root) Json_table_column(f,
                                    lex->json_table->get_cur_nested_path());

            if (unlikely(!f ||
                !lex->json_table->m_cur_json_table_column))
              MYSQL_YYABORT;

            lex->init_last_field(f, &(yyvsp[0].ident_sys));
          }
#line 44185 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1776: /* json_table_column: ident $@153 json_table_column_type  */
#line 11853 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->json_table->
                           m_cur_json_table_column->m_field->check(thd)))
              MYSQL_YYABORT;
            lex->json_table->m_columns.push_back(
               lex->json_table->m_cur_json_table_column, thd->mem_root);
          }
#line 44198 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1777: /* $@154: %empty  */
#line 11862 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Json_table_nested_path *np= new (thd->mem_root)
              Json_table_nested_path();
            np->set_path(thd, (yyvsp[0].lex_string_with_metadata));
            lex->json_table->start_nested_path(np);
          }
#line 44210 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1778: /* json_table_column: NESTED_SYM PATH_SYM json_text_literal $@154 json_table_columns_clause  */
#line 11870 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->json_table->end_nested_path();
          }
#line 44219 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1779: /* json_table_column_type: FOR_SYM ORDINALITY_SYM  */
#line 11878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_field_type_st type;
            type.set(&type_handler_slong);
            Lex->last_field->set_attributes(thd, type,
                                            COLUMN_DEFINITION_TABLE_FIELD);
            Lex->json_table->m_cur_json_table_column->
              set(Json_table_column::FOR_ORDINALITY);
          }
#line 44232 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1780: /* json_table_column_type: json_table_field_type PATH_SYM json_text_literal json_opt_on_empty_or_error  */
#line 11888 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::PATH, (yyvsp[-1].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
            {
              MYSQL_YYABORT;
            }
          }
#line 44247 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1781: /* json_table_column_type: json_table_field_type EXISTS PATH_SYM json_text_literal  */
#line 11899 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->last_field->set_attributes(thd, (yyvsp[-3].Lex_field_type),
                                            COLUMN_DEFINITION_TABLE_FIELD);
            if (Lex->json_table->m_cur_json_table_column->
                  set(thd, Json_table_column::EXISTS_PATH, (yyvsp[0].lex_string_with_metadata),
                      (yyvsp[-3].Lex_field_type).charset_collation_attrs()))
               MYSQL_YYABORT;
          }
#line 44260 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1786: /* json_opt_on_empty_or_error: %empty  */
#line 11918 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 44266 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1793: /* json_on_response: ERROR_SYM  */
#line 11933 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_ERROR;
          }
#line 44274 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1794: /* json_on_response: NULL_SYM  */
#line 11937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_NULL;
          }
#line 44282 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1795: /* json_on_response: DEFAULT json_default_literal  */
#line 11941 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.json_on_response).m_response= Json_table_column::RESPONSE_DEFAULT;
            (yyval.json_on_response).m_default= (yyvsp[0].item);
          }
#line 44291 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1796: /* json_on_error_response: json_on_response ON ERROR_SYM  */
#line 11949 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_error= (yyvsp[-2].json_on_response);
          }
#line 44299 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1797: /* json_on_empty_response: json_on_response ON EMPTY_SYM  */
#line 11956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->json_table->m_cur_json_table_column->m_on_empty= (yyvsp[-2].json_on_response);
          }
#line 44307 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1798: /* $@155: %empty  */
#line 11963 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            push_table_function_arg_context(Lex, thd->mem_root);
            //TODO: introduce IN_TABLE_FUNC_ARGUMENT?
            Select->parsing_place= IN_ON;
          }
#line 44317 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1799: /* $@156: %empty  */
#line 11969 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Table_function_json_table *jt=
              new (thd->mem_root) Table_function_json_table((yyvsp[-1].item));
            if (unlikely(!jt))
              MYSQL_YYABORT;
            /* See comment for class Table_function_json_table: */
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_SYSTEM_FUNCTION);
            Lex->json_table= jt;

            Select->parsing_place= NO_MATTER;
            jt->set_name_resolution_context(Lex->pop_context());
          }
#line 44334 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1800: /* table_function: JSON_TABLE_SYM '(' $@155 expr ',' $@156 json_text_literal json_table_columns_clause ')' opt_table_alias_clause  */
#line 11982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            if (unlikely((yyvsp[0].lex_str_ptr) == NULL))
            {
              /* Alias is not optional. */
              my_error(ER_JSON_TABLE_ALIAS_REQUIRED, MYF(0));
              MYSQL_YYABORT;
            }
            if (unlikely(Lex->json_table->m_nested_path.set_path(thd, (yyvsp[-3].lex_string_with_metadata))))
              MYSQL_YYABORT;
            if (!((yyval.table_list)= sel->add_table_to_list(thd,
                           new (thd->mem_root) Table_ident(thd, &any_db,
                                                           (yyvsp[0].lex_str_ptr), TRUE),
                           NULL,
                           TL_OPTION_TABLE_FUNCTION,
                           YYPS->m_lock_type,
                           YYPS->m_mdl_type,
                           0,0,0)))
              MYSQL_YYABORT;
            (yyval.table_list)->table_function= Lex->json_table;
            Lex->json_table= 0;
            status_var_increment(thd->status_var.feature_json);
          }
#line 44362 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1801: /* esc_table_ref: table_ref  */
#line 12015 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.table_list)=(yyvsp[0].table_list); }
#line 44368 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1802: /* esc_table_ref: '{' ident table_ref '}'  */
#line 12016 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.table_list)=(yyvsp[-1].table_list); }
#line 44374 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1803: /* derived_table_list: esc_table_ref  */
#line 12023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table_list)=(yyvsp[0].table_list);
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 44383 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1804: /* derived_table_list: derived_table_list ',' esc_table_ref  */
#line 12028 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 44392 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1805: /* join_table: table_ref normal_join table_ref  */
#line 12042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            if (unlikely(Select->add_cross_joined_table((yyvsp[-2].table_list), (yyvsp[0].table_list), (yyvsp[-1].num))))
              MYSQL_YYABORT;
          }
#line 44402 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1806: /* $@157: %empty  */
#line 12049 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-3].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 44416 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1807: /* join_table: table_ref normal_join table_ref ON $@157 expr  */
#line 12059 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-3].table_list)->straight=(yyvsp[-4].num);
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 44427 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1808: /* $@158: %empty  */
#line 12067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
          }
#line 44437 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1809: /* join_table: table_ref normal_join table_ref USING $@158 '(' using_list ')'  */
#line 12073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    (yyvsp[-5].table_list)->straight=(yyvsp[-6].num);
            add_join_natural((yyvsp[-7].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
	    (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 44447 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1810: /* join_table: table_ref NATURAL inner_join table_factor  */
#line 12079 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-3].table_list) && ((yyval.table_list)=(yyvsp[0].table_list)));
            Select->add_joined_table((yyvsp[-3].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
	    (yyvsp[0].table_list)->straight=(yyvsp[-1].num);
            add_join_natural((yyvsp[-3].table_list),(yyvsp[0].table_list),NULL,Select);
          }
#line 44459 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1811: /* $@159: %empty  */
#line 12090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 44473 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1812: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_ref ON $@159 search_condition  */
#line 12100 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            add_join_on(thd, (yyvsp[-3].table_list), (yyvsp[0].item));
            (yyvsp[-3].table_list)->on_context= Lex->pop_context();
            (yyvsp[-3].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[-3].table_list);
            Select->parsing_place= NO_MATTER;
          }
#line 44485 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1813: /* $@160: %empty  */
#line 12108 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 44495 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1814: /* join_table: table_ref LEFT opt_outer JOIN_SYM table_factor $@160 USING '(' using_list ')'  */
#line 12114 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            add_join_natural((yyvsp[-9].table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select); 
            (yyvsp[-5].table_list)->outer_join|=JOIN_TYPE_LEFT; 
            (yyval.table_list)=(yyvsp[-5].table_list); 
          }
#line 44505 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1815: /* join_table: table_ref NATURAL LEFT opt_outer JOIN_SYM table_factor  */
#line 12120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[-5].table_list),(yyvsp[0].table_list),NULL,Select);
            (yyvsp[0].table_list)->outer_join|=JOIN_TYPE_LEFT;
            (yyval.table_list)=(yyvsp[0].table_list);
          }
#line 44518 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1816: /* $@161: %empty  */
#line 12132 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[-1].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[-1].table_list));
            /* Change the current name resolution context to a local context. */
            if (unlikely(push_new_name_resolution_context(thd, (yyvsp[-5].table_list), (yyvsp[-1].table_list))))
              MYSQL_YYABORT;
            Select->parsing_place= IN_ON;
          }
#line 44532 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1817: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_ref ON $@161 expr  */
#line 12142 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_on(thd, (yyval.table_list), (yyvsp[0].item));
            (yyvsp[-7].table_list)->on_context= Lex->pop_context();
            Select->parsing_place= NO_MATTER;
          }
#line 44545 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1818: /* $@162: %empty  */
#line 12151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-4].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
          }
#line 44555 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1819: /* join_table: table_ref RIGHT opt_outer JOIN_SYM table_factor $@162 USING '(' using_list ')'  */
#line 12157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
            add_join_natural((yyval.table_list),(yyvsp[-5].table_list),(yyvsp[-1].string_list),Select);
          }
#line 44566 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1820: /* join_table: table_ref NATURAL RIGHT opt_outer JOIN_SYM table_factor  */
#line 12164 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-5].table_list) && (yyvsp[0].table_list));
            Select->add_joined_table((yyvsp[-5].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            add_join_natural((yyvsp[0].table_list),(yyvsp[-5].table_list),NULL,Select);
            LEX *lex= Lex;
            if (unlikely(!((yyval.table_list)= lex->current_select->convert_right_join())))
              MYSQL_YYABORT;
          }
#line 44580 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1821: /* inner_join: JOIN_SYM  */
#line 12177 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 44586 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1822: /* inner_join: INNER_SYM JOIN_SYM  */
#line 12178 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 44592 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1823: /* inner_join: STRAIGHT_JOIN  */
#line 12179 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 1; }
#line 44598 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1824: /* normal_join: inner_join  */
#line 12183 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = (yyvsp[0].num); }
#line 44604 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1825: /* normal_join: CROSS JOIN_SYM  */
#line 12184 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num) = 0; }
#line 44610 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1826: /* opt_use_partition: %empty  */
#line 12192 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.string_list)= 0;}
#line 44616 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1828: /* use_partition: PARTITION_SYM '(' using_list ')' have_partitioning  */
#line 12198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string_list)= (yyvsp[-2].string_list);
            Select->parsing_place= Select->save_parsing_place;
            Select->save_parsing_place= NO_MATTER;
          }
#line 44626 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1829: /* table_factor: table_primary_ident_opt_parens  */
#line 12206 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44632 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1830: /* table_factor: table_primary_derived_opt_parens  */
#line 12207 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1831: /* table_factor: join_table_parens  */
#line 12209 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyvsp[0].table_list)->nested_join->nest_type= 0;
            (yyval.table_list)= (yyvsp[0].table_list);
          }
#line 44647 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1832: /* table_factor: table_reference_list_parens  */
#line 12213 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44653 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1833: /* table_factor: table_function  */
#line 12214 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44659 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1834: /* table_primary_ident_opt_parens: table_primary_ident  */
#line 12218 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44665 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1835: /* table_primary_ident_opt_parens: '(' table_primary_ident_opt_parens ')'  */
#line 12219 "/home/buildbot/git/sql/sql_yacc.yy"
                                                 { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 44671 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1836: /* table_primary_derived_opt_parens: table_primary_derived  */
#line 12223 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.table_list)= (yyvsp[0].table_list); }
#line 44677 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1837: /* table_primary_derived_opt_parens: '(' table_primary_derived_opt_parens ')'  */
#line 12224 "/home/buildbot/git/sql/sql_yacc.yy"
                                                   { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 44683 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1838: /* table_reference_list_parens: '(' table_reference_list_parens ')'  */
#line 12228 "/home/buildbot/git/sql/sql_yacc.yy"
                                              { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 44689 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1839: /* table_reference_list_parens: '(' nested_table_reference_list ')'  */
#line 12230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->end_nested_join(thd)))
              MYSQL_YYABORT;
          }
#line 44698 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1840: /* nested_table_reference_list: table_ref ',' table_ref  */
#line 12238 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Select->init_nested_join(thd))
              MYSQL_YYABORT;
            Select->add_joined_table((yyvsp[-2].table_list));
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list)->embedding;
          }
#line 44710 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1841: /* nested_table_reference_list: nested_table_reference_list ',' table_ref  */
#line 12246 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->add_joined_table((yyvsp[0].table_list));
            (yyval.table_list)= (yyvsp[-2].table_list);
          }
#line 44719 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1842: /* join_table_parens: '(' join_table_parens ')'  */
#line 12253 "/home/buildbot/git/sql/sql_yacc.yy"
                                    { (yyval.table_list)= (yyvsp[-1].table_list); }
#line 44725 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1843: /* join_table_parens: '(' join_table ')'  */
#line 12255 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (!((yyval.table_list)= lex->current_select->nest_last_join(thd)))
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }
          }
#line 44738 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1844: /* table_primary_ident: table_ident opt_use_partition opt_for_system_time_clause opt_table_alias_clause opt_key_definition  */
#line 12269 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            if ((yyvsp[-2].num))
              (yyval.table_list)->vers_conditions= Lex->vers_conditions;
          }
#line 44754 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1846: /* table_primary_derived: subquery opt_for_system_time_clause table_alias_clause derived_column_list  */
#line 12291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Lex->parsed_derived_table((yyvsp[-3].select_lex)->master_unit(), (yyvsp[-2].num), (yyvsp[-1].lex_str_ptr), (yyvsp[0].ident_sys_list))))
              MYSQL_YYABORT;
          }
#line 44763 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1847: /* opt_outer: %empty  */
#line 12308 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 44769 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1848: /* opt_outer: OUTER  */
#line 12309 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 44775 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1849: /* index_hint_clause: %empty  */
#line 12314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (thd->variables.old_behavior & OLD_MODE_IGNORE_INDEX_ONLY_FOR_JOIN) ?
                INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 44784 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1850: /* index_hint_clause: FOR_SYM JOIN_SYM  */
#line 12318 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 44790 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1851: /* index_hint_clause: FOR_SYM ORDER_SYM BY  */
#line 12319 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 44796 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1852: /* index_hint_clause: FOR_SYM GROUP_SYM BY  */
#line 12320 "/home/buildbot/git/sql/sql_yacc.yy"
                                { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 44802 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1853: /* index_hint_type: FORCE_SYM  */
#line 12324 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 44808 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1854: /* index_hint_type: IGNORE_SYM  */
#line 12325 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 44814 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1855: /* $@163: %empty  */
#line 12330 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type((yyvsp[-2].index_hint), (yyvsp[0].num));
          }
#line 44822 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1857: /* $@164: %empty  */
#line 12335 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_index_hint_type(INDEX_HINT_USE, (yyvsp[0].num));
          }
#line 44830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1862: /* $@165: %empty  */
#line 12348 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->alloc_index_hints(thd); }
#line 44836 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1864: /* $@166: %empty  */
#line 12352 "/home/buildbot/git/sql/sql_yacc.yy"
          {  Select->clear_index_hints(); }
#line 44842 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1866: /* opt_key_usage_list: %empty  */
#line 12357 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Select->add_index_hint(thd, NULL, 0); }
#line 44848 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1867: /* opt_key_usage_list: key_usage_list  */
#line 12358 "/home/buildbot/git/sql/sql_yacc.yy"
                         {}
#line 44854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1868: /* key_usage_element: ident  */
#line 12363 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, (yyvsp[0].ident_sys).str, (yyvsp[0].ident_sys).length); }
#line 44860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1869: /* key_usage_element: PRIMARY_SYM  */
#line 12365 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->add_index_hint(thd, "PRIMARY", 7); }
#line 44866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1872: /* using_list: ident  */
#line 12375 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.string_list)= new (thd->mem_root) List<String>)))
              MYSQL_YYABORT;
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            (yyval.string_list)->push_back(s, thd->mem_root);
          }
#line 44881 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1873: /* using_list: using_list ',' ident  */
#line 12386 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            String *s= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                  (yyvsp[0].ident_sys).length,
                                                  system_charset_info);
            if (unlikely(unlikely(s == NULL)))
              MYSQL_YYABORT;
            if (unlikely((yyvsp[-2].string_list)->push_back(s, thd->mem_root)))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 44896 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1874: /* interval: interval_time_stamp  */
#line 12399 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 44902 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1875: /* interval: DAY_HOUR_SYM  */
#line 12400 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 44908 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1876: /* interval: DAY_MICROSECOND_SYM  */
#line 12401 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 44914 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1877: /* interval: DAY_MINUTE_SYM  */
#line 12402 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 44920 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1878: /* interval: DAY_SECOND_SYM  */
#line 12403 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 44926 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1879: /* interval: HOUR_MICROSECOND_SYM  */
#line 12404 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 44932 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1880: /* interval: HOUR_MINUTE_SYM  */
#line 12405 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 44938 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1881: /* interval: HOUR_SECOND_SYM  */
#line 12406 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 44944 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1882: /* interval: MINUTE_MICROSECOND_SYM  */
#line 12407 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 44950 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1883: /* interval: MINUTE_SECOND_SYM  */
#line 12408 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 44956 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1884: /* interval: SECOND_MICROSECOND_SYM  */
#line 12409 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 44962 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1885: /* interval: YEAR_MONTH_SYM  */
#line 12410 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 44968 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1886: /* interval_time_stamp: DAY_SYM  */
#line 12414 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 44974 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1887: /* interval_time_stamp: WEEK_SYM  */
#line 12415 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 44980 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1888: /* interval_time_stamp: HOUR_SYM  */
#line 12416 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 44986 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1889: /* interval_time_stamp: MINUTE_SYM  */
#line 12417 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 44992 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1890: /* interval_time_stamp: MONTH_SYM  */
#line 12418 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 44998 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1891: /* interval_time_stamp: QUARTER_SYM  */
#line 12419 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 45004 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1892: /* interval_time_stamp: SECOND_SYM  */
#line 12420 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 45010 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1893: /* interval_time_stamp: MICROSECOND_SYM  */
#line 12421 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 45016 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1894: /* interval_time_stamp: YEAR_SYM  */
#line 12422 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 45022 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1895: /* date_time_type: DATE_SYM  */
#line 12426 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATE;}
#line 45028 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1896: /* date_time_type: TIME_SYM  */
#line 12427 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_TIME;}
#line 45034 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1897: /* date_time_type: DATETIME  */
#line 12428 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 45040 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1898: /* date_time_type: TIMESTAMP  */
#line 12429 "/home/buildbot/git/sql/sql_yacc.yy"
                    {(yyval.date_time_type)=MYSQL_TIMESTAMP_DATETIME;}
#line 45046 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1902: /* opt_table_alias_clause: %empty  */
#line 12439 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lex_str_ptr)=0; }
#line 45052 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1903: /* opt_table_alias_clause: table_alias_clause  */
#line 12440 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.lex_str_ptr)= (yyvsp[0].lex_str_ptr); }
#line 45058 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1904: /* table_alias_clause: table_alias ident_table_alias  */
#line 12445 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_str_ptr)= (LEX_CSTRING*) thd->memdup(&(yyvsp[0].ident_sys),sizeof(LEX_STRING));
            if (unlikely((yyval.lex_str_ptr) == NULL))
              MYSQL_YYABORT;
          }
#line 45068 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1907: /* opt_where_clause: %empty  */
#line 12458 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->where= 0; }
#line 45074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1908: /* $@167: %empty  */
#line 12460 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_WHERE;
          }
#line 45082 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1909: /* opt_where_clause: WHERE $@167 search_condition  */
#line 12464 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *select= Select;
            select->where= normalize_cond(thd, (yyvsp[0].item));
            select->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 45094 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1911: /* $@168: %empty  */
#line 12476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= IN_HAVING;
          }
#line 45102 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1912: /* opt_having_clause: HAVING $@168 search_condition  */
#line 12480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->having= normalize_cond(thd, (yyvsp[0].item));
            sel->parsing_place= NO_MATTER;
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
          }
#line 45114 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1915: /* group_list: group_list ',' order_ident order_dir  */
#line 12500 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
               MYSQL_YYABORT;
           }
#line 45123 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1916: /* group_list: order_ident order_dir  */
#line 12505 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_group_to_list(thd, (yyvsp[-1].item),(bool) (yyvsp[0].num))))
              MYSQL_YYABORT;
           }
#line 45132 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1917: /* olap_opt: %empty  */
#line 12512 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45138 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1918: /* olap_opt: WITH_CUBE_SYM  */
#line 12514 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH CUBE' is reserved in the MySQL syntax, but not implemented,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH CUBE
              SQL-2003: GROUP BY ... CUBE(col1, col2, col3)
            */
            LEX *lex=Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH CUBE",
                                "global union parameters"));
            lex->current_select->olap= CUBE_TYPE;

            my_yyabort_error((ER_NOT_SUPPORTED_YET, MYF(0), "CUBE"));
          }
#line 45159 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1919: /* olap_opt: WITH_ROLLUP_SYM  */
#line 12531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              'WITH ROLLUP' is needed for backward compatibility,
              and cause LALR(2) conflicts.
              This syntax is not standard.
              MySQL syntax: GROUP BY col1, col2, col3 WITH ROLLUP
              SQL-2003: GROUP BY ... ROLLUP(col1, col2, col3)
            */
            LEX *lex= Lex;
            if (unlikely(lex->current_select->get_linkage() == GLOBAL_OPTIONS_TYPE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "WITH ROLLUP",
                                "global union parameters"));
            lex->current_select->olap= ROLLUP_TYPE;
          }
#line 45178 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1920: /* opt_window_clause: %empty  */
#line 12553 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45184 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1921: /* opt_window_clause: WINDOW_SYM window_def_list  */
#line 12556 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 45190 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1924: /* window_def: window_name AS window_spec  */
#line 12566 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(Select->add_window_def(thd, (yyvsp[-2].lex_str_ptr), lex->win_ref,
                                                Select->group_list,
                                                Select->order_list,
                                                lex->win_frame)))
              MYSQL_YYABORT;
          }
#line 45203 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1925: /* $@169: %empty  */
#line 12578 "/home/buildbot/git/sql/sql_yacc.yy"
          { Select->prepare_add_window_spec(thd); }
#line 45209 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1926: /* window_spec: '(' $@169 opt_window_ref opt_window_partition_clause opt_window_order_clause opt_window_frame_clause ')'  */
#line 12582 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 45215 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1927: /* opt_window_ref: %empty  */
#line 12586 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45221 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1928: /* opt_window_ref: ident  */
#line 12588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->win_ref= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));
            if (unlikely(thd->lex->win_ref == NULL))
              MYSQL_YYABORT;
          }
#line 45231 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1929: /* opt_window_partition_clause: %empty  */
#line 12596 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 45237 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1931: /* opt_window_order_clause: %empty  */
#line 12601 "/home/buildbot/git/sql/sql_yacc.yy"
                      { }
#line 45243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1932: /* opt_window_order_clause: ORDER_SYM BY order_list  */
#line 12602 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { Select->order_list= *((yyvsp[0].select_order)); }
#line 45249 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1933: /* opt_window_frame_clause: %empty  */
#line 12606 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 45255 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1934: /* opt_window_frame_clause: window_frame_units window_frame_extent opt_window_frame_exclusion  */
#line 12608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->win_frame=
              new (thd->mem_root) Window_frame((yyvsp[-2].frame_units),
                                               lex->frame_top_bound,
                                               lex->frame_bottom_bound,
                                               (yyvsp[0].frame_exclusion));
            if (unlikely(lex->win_frame == NULL))
              MYSQL_YYABORT;
          }
#line 45270 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1935: /* window_frame_units: ROWS_SYM  */
#line 12621 "/home/buildbot/git/sql/sql_yacc.yy"
                   { (yyval.frame_units)= Window_frame::UNITS_ROWS; }
#line 45276 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1936: /* window_frame_units: RANGE_SYM  */
#line 12622 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.frame_units)= Window_frame::UNITS_RANGE; }
#line 45282 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1937: /* window_frame_extent: window_frame_start  */
#line 12627 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[0].window_frame_bound);
            lex->frame_bottom_bound=
              new (thd->mem_root)
                Window_frame_bound(Window_frame_bound::CURRENT, NULL);
            if (unlikely(lex->frame_bottom_bound == NULL))
              MYSQL_YYABORT;
          }
#line 45296 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1938: /* window_frame_extent: BETWEEN_SYM window_frame_bound AND_SYM window_frame_bound  */
#line 12637 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->frame_top_bound= (yyvsp[-2].window_frame_bound);
            lex->frame_bottom_bound= (yyvsp[0].window_frame_bound);
          }
#line 45306 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1939: /* window_frame_start: UNBOUNDED_SYM PRECEDING_SYM  */
#line 12646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root) 
                  Window_frame_bound(Window_frame_bound::PRECEDING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 45317 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1940: /* window_frame_start: CURRENT_SYM ROW_SYM  */
#line 12653 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::CURRENT, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 45328 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1941: /* window_frame_start: literal PRECEDING_SYM  */
#line 12660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::PRECEDING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 45339 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1942: /* window_frame_bound: window_frame_start  */
#line 12669 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.window_frame_bound)= (yyvsp[0].window_frame_bound); }
#line 45345 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1943: /* window_frame_bound: UNBOUNDED_SYM FOLLOWING_SYM  */
#line 12671 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, NULL); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 45356 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1944: /* window_frame_bound: literal FOLLOWING_SYM  */
#line 12678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.window_frame_bound)= new (thd->mem_root)
                  Window_frame_bound(Window_frame_bound::FOLLOWING, (yyvsp[-1].item)); 
            if (unlikely((yyval.window_frame_bound) == NULL))
              MYSQL_YYABORT;
          }
#line 45367 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1945: /* opt_window_frame_exclusion: %empty  */
#line 12687 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 45373 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1946: /* opt_window_frame_exclusion: EXCLUDE_SYM CURRENT_SYM ROW_SYM  */
#line 12689 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_CURRENT_ROW; }
#line 45379 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1947: /* opt_window_frame_exclusion: EXCLUDE_SYM GROUP_SYM  */
#line 12691 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_GROUP; }
#line 45385 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1948: /* opt_window_frame_exclusion: EXCLUDE_SYM TIES_SYM  */
#line 12693 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_TIES; }
#line 45391 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1949: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_MARIADB_SYM  */
#line 12695 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 45397 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1950: /* opt_window_frame_exclusion: EXCLUDE_SYM NO_SYM OTHERS_ORACLE_SYM  */
#line 12697 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.frame_exclusion)= Window_frame::EXCL_NONE; }
#line 45403 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1954: /* alter_order_item: simple_ident_nospvar order_dir  */
#line 12715 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool ascending= ((yyvsp[0].num) == 1) ? true : false;
            if (unlikely(add_order_to_list(thd, (yyvsp[-1].item), ascending)))
              MYSQL_YYABORT;
          }
#line 45413 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1955: /* opt_order_clause: %empty  */
#line 12728 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= NULL; }
#line 45419 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1956: /* opt_order_clause: order_clause  */
#line 12730 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_order)= (yyvsp[0].select_order); }
#line 45425 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1957: /* $@170: %empty  */
#line 12735 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->where= THD_WHERE::ORDER_CLAUSE;
          }
#line 45433 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1958: /* order_clause: ORDER_SYM BY $@170 order_list  */
#line 12739 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[0].select_order);
          }
#line 45441 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1959: /* order_list: order_list ',' order_ident order_dir  */
#line 12746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= (yyvsp[-3].select_order);
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item),(bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 45451 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1960: /* order_list: order_ident order_dir  */
#line 12752 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_order)= new (thd->mem_root) SQL_I_List<ORDER>();
            if (add_to_list(thd, *(yyval.select_order), (yyvsp[-1].item), (bool) (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 45461 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1961: /* order_dir: %empty  */
#line 12760 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 1; }
#line 45467 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1962: /* order_dir: ASC  */
#line 12761 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 1; }
#line 45473 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1963: /* order_dir: DESC  */
#line 12762 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.num)= 0; }
#line 45479 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1964: /* opt_limit_clause: %empty  */
#line 12768 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit).clear(); }
#line 45485 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1965: /* opt_limit_clause: limit_clause  */
#line 12770 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.select_limit)= (yyvsp[0].select_limit); }
#line 45491 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1966: /* limit_clause: LIMIT limit_options  */
#line 12775 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit->basic_const_item() ||
                (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 45502 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1967: /* limit_clause: LIMIT limit_options ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[-3].select_limit);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 45511 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1968: /* limit_clause: LIMIT ROWS_SYM EXAMINED_SYM limit_rows_option  */
#line 12788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).clear();
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 45520 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1969: /* limit_clause: fetch_first_clause  */
#line 12793 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit)= (yyvsp[0].select_limit);
            if (!(yyval.select_limit).select_limit ||
                !(yyval.select_limit).select_limit->basic_const_item() ||
                 (yyval.select_limit).select_limit->val_int() > 0)
              Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
          }
#line 45532 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1970: /* fetch_first_clause: FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12804 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 45546 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1971: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next row_or_rows only_or_with_ties  */
#line 12815 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            (yyval.select_limit).select_limit= one;
            (yyval.select_limit).offset_limit= (yyvsp[-5].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 45560 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1972: /* fetch_first_clause: FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12825 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= 0;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 45571 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1973: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows FETCH_SYM first_or_next limit_option row_or_rows only_or_with_ties  */
#line 12833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[-6].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= (yyvsp[0].num);
          }
#line 45582 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1974: /* fetch_first_clause: OFFSET_SYM limit_option row_or_rows  */
#line 12840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= 0;
            (yyval.select_limit).offset_limit= (yyvsp[-1].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 45593 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1979: /* only_or_with_ties: ONLY_SYM  */
#line 12859 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 0; }
#line 45599 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1980: /* only_or_with_ties: WITH TIES_SYM  */
#line 12860 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 45605 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1981: /* opt_global_limit_clause: opt_limit_clause  */
#line 12866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->limit_params= (yyvsp[0].select_limit);
          }
#line 45613 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1982: /* limit_options: limit_option  */
#line 12873 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= NULL;
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 45624 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1983: /* limit_options: limit_option ',' limit_option  */
#line 12880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[0].item);
            (yyval.select_limit).offset_limit= (yyvsp[-2].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 45635 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1984: /* limit_options: limit_option OFFSET_SYM limit_option  */
#line 12887 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_limit).select_limit= (yyvsp[-2].item);
            (yyval.select_limit).offset_limit= (yyvsp[0].item);
            (yyval.select_limit).explicit_limit= true;
            (yyval.select_limit).with_ties= false;
          }
#line 45646 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1985: /* limit_option: ident_cli  */
#line 12897 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45655 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1986: /* limit_option: ident_cli '.' ident_cli  */
#line 12902 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_limit(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 45664 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1987: /* limit_option: param_marker  */
#line 12907 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_param)->limit_clause_param= TRUE;
          }
#line 45672 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1988: /* limit_option: ULONGLONG_NUM  */
#line 12911 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45682 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1989: /* limit_option: LONG_NUM  */
#line 12917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45692 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1990: /* limit_option: NUM  */
#line 12923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 45702 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1991: /* limit_rows_option: limit_option  */
#line 12932 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            Lex->limit_rows_examined= (yyvsp[0].item);
          }
#line 45710 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1992: /* delete_limit_clause: %empty  */
#line 12939 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->current_select->limit_params.select_limit= 0;
          }
#line 45719 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1993: /* delete_limit_clause: LIMIT limit_option  */
#line 12944 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            SELECT_LEX *sel= Select;
            sel->limit_params.select_limit= (yyvsp[0].item);
            Lex->set_stmt_unsafe(LEX::BINLOG_STMT_UNSAFE_LIMIT);
            sel->limit_params.explicit_limit= 1;
          }
#line 45730 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1994: /* delete_limit_clause: LIMIT ROWS_SYM EXAMINED_SYM  */
#line 12950 "/home/buildbot/git/sql/sql_yacc.yy"
                                     { thd->parse_error(); MYSQL_YYABORT; }
#line 45736 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1995: /* delete_limit_clause: LIMIT limit_option ROWS_SYM EXAMINED_SYM  */
#line 12951 "/home/buildbot/git/sql/sql_yacc.yy"
                                                  { thd->parse_error(); MYSQL_YYABORT; }
#line 45742 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1996: /* order_limit_lock: order_or_limit  */
#line 12956 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
            (yyval.order_limit_lock)->lock.empty();
          }
#line 45751 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1997: /* order_limit_lock: order_or_limit select_lock_type  */
#line 12961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= (yyvsp[-1].order_limit_lock);
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 45760 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1998: /* order_limit_lock: select_lock_type  */
#line 12966 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit.clear();
            (yyval.order_limit_lock)->lock= (yyvsp[0].select_lock);
          }
#line 45773 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 1999: /* opt_order_limit_lock: %empty  */
#line 12978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select();
            (yyval.order_limit_lock)= NULL;
          }
#line 45782 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2000: /* opt_order_limit_lock: order_limit_lock  */
#line 12982 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock); }
#line 45788 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2003: /* opt_procedure_or_into: %empty  */
#line 12995 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock).empty();
          }
#line 45796 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2004: /* opt_procedure_or_into: procedure_clause opt_select_lock_type  */
#line 12999 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
          }
#line 45804 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2005: /* opt_procedure_or_into: into opt_select_lock_type  */
#line 13003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.select_lock)= (yyvsp[0].select_lock);
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 45813 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2006: /* opt_order_or_limit: %empty  */
#line 13011 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= NULL;
          }
#line 45821 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2007: /* opt_order_or_limit: order_or_limit  */
#line 13016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].order_limit_lock)->lock.empty();
            (yyval.order_limit_lock)= (yyvsp[0].order_limit_lock);
          }
#line 45830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2008: /* order_or_limit: order_clause opt_limit_clause  */
#line 13024 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= (yyvsp[-1].select_order);
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 45842 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2009: /* order_or_limit: limit_clause  */
#line 13032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.order_limit_lock)= new(thd->mem_root) Lex_order_limit_lock;
            if (!(yyval.order_limit_lock))
              YYABORT;
            (yyval.order_limit_lock)->order_list= NULL;
            (yyval.order_limit_lock)->limit= (yyvsp[0].select_limit);
          }
#line 45854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2012: /* int_num: opt_plus NUM  */
#line 13048 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.num)= (int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2013: /* int_num: '-' NUM  */
#line 13049 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.num)= -(int) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2014: /* ulong_num: opt_plus NUM  */
#line 13053 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45872 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2015: /* ulong_num: HEX_NUM  */
#line 13054 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= strtoul((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 45878 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2016: /* ulong_num: opt_plus LONG_NUM  */
#line 13055 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45884 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2017: /* ulong_num: opt_plus ULONGLONG_NUM  */
#line 13056 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45890 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2018: /* ulong_num: opt_plus DECIMAL_NUM  */
#line 13057 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45896 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2019: /* ulong_num: opt_plus FLOAT_NUM  */
#line 13058 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45902 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2020: /* real_ulong_num: NUM  */
#line 13062 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45908 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2021: /* real_ulong_num: HEX_NUM  */
#line 13063 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulong_num)= (ulong) strtol((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 45914 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2022: /* real_ulong_num: LONG_NUM  */
#line 13064 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45920 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2023: /* real_ulong_num: ULONGLONG_NUM  */
#line 13065 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 45926 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2024: /* real_ulong_num: dec_num_error  */
#line 13066 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 45932 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2025: /* sequence_value_num: opt_plus NUM  */
#line 13075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 45941 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2026: /* sequence_value_num: opt_plus LONG_NUM  */
#line 13080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= (longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 45950 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2027: /* sequence_value_num: '-' NUM  */
#line 13085 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 45959 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2028: /* sequence_value_num: '-' LONG_NUM  */
#line 13090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_number)= -(longlong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
          }
#line 45968 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2029: /* sequence_value_num: '-' ULONGLONG_NUM  */
#line 13095 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            const ulonglong abs= my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
            if (abs == 1 + (ulonglong) LONGLONG_MAX)
              (yyval.longlong_number)= LONGLONG_MIN;
            else
              thd->parse_error(ER_DATA_OUT_OF_RANGE);
          }
#line 45981 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2030: /* sequence_value_hybrid_num: opt_plus NUM  */
#line 13111 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 45991 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2031: /* sequence_value_hybrid_num: opt_plus LONG_NUM  */
#line 13117 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46001 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2032: /* sequence_value_hybrid_num: opt_plus ULONGLONG_NUM  */
#line 13123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                true);
          }
#line 46011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2033: /* sequence_value_hybrid_num: '-' NUM  */
#line 13129 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46021 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2034: /* sequence_value_hybrid_num: '-' LONG_NUM  */
#line 13135 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46031 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2035: /* sequence_value_hybrid_num: '-' ULONGLONG_NUM  */
#line 13141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            const ulonglong abs= my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error);
            if (abs == 1 + (ulonglong) LONGLONG_MAX)
              (yyval.longlong_hybrid_number)= Longlong_hybrid(LONGLONG_MIN, false);
            else
              thd->parse_error(ER_DATA_OUT_OF_RANGE);
          }
#line 46044 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2036: /* sequence_truncated_value_hybrid_num: opt_plus NUM  */
#line 13157 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46054 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2037: /* sequence_truncated_value_hybrid_num: opt_plus LONG_NUM  */
#line 13163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46064 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2038: /* sequence_truncated_value_hybrid_num: opt_plus ULONGLONG_NUM  */
#line 13169 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                true);
          }
#line 46074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2039: /* sequence_truncated_value_hybrid_num: opt_plus DECIMAL_NUM  */
#line 13174 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.longlong_hybrid_number)= Longlong_hybrid(ULONGLONG_MAX, true); }
#line 46080 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2040: /* sequence_truncated_value_hybrid_num: '-' NUM  */
#line 13176 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46090 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2041: /* sequence_truncated_value_hybrid_num: '-' LONG_NUM  */
#line 13182 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.longlong_hybrid_number)= Longlong_hybrid(- my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error),
                                false);
          }
#line 46100 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2042: /* sequence_truncated_value_hybrid_num: '-' ULONGLONG_NUM  */
#line 13187 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.longlong_hybrid_number)= Longlong_hybrid(LONGLONG_MIN, false); }
#line 46106 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2043: /* sequence_truncated_value_hybrid_num: '-' DECIMAL_NUM  */
#line 13188 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.longlong_hybrid_number)= Longlong_hybrid(LONGLONG_MIN, false); }
#line 46112 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2044: /* ulonglong_num: opt_plus NUM  */
#line 13192 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46118 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2045: /* ulonglong_num: opt_plus ULONGLONG_NUM  */
#line 13193 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46124 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2046: /* ulonglong_num: opt_plus LONG_NUM  */
#line 13194 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46130 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2047: /* ulonglong_num: opt_plus DECIMAL_NUM  */
#line 13195 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46136 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2048: /* ulonglong_num: opt_plus FLOAT_NUM  */
#line 13196 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46142 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2049: /* real_ulonglong_num: NUM  */
#line 13200 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46148 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2050: /* real_ulonglong_num: ULONGLONG_NUM  */
#line 13201 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46154 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2051: /* real_ulonglong_num: HEX_NUM  */
#line 13202 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ulonglong_number)= strtoull((yyvsp[0].lex_str).str, (char**) 0, 16); }
#line 46160 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2052: /* real_ulonglong_num: LONG_NUM  */
#line 13203 "/home/buildbot/git/sql/sql_yacc.yy"
                        { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lex_str).str, (char**) 0, &error); }
#line 46166 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2053: /* real_ulonglong_num: dec_num_error  */
#line 13204 "/home/buildbot/git/sql/sql_yacc.yy"
                        { MYSQL_YYABORT; }
#line 46172 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2054: /* dec_num_error: dec_num  */
#line 13209 "/home/buildbot/git/sql/sql_yacc.yy"
          { thd->parse_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 46178 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2057: /* choice: ulong_num  */
#line 13218 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= (yyvsp[0].ulong_num) != 0 ? HA_CHOICE_YES : HA_CHOICE_NO; }
#line 46184 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2058: /* choice: DEFAULT  */
#line 13219 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.choice)= HA_CHOICE_UNDEF; }
#line 46190 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2059: /* bool: ulong_num  */
#line 13223 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= (yyvsp[0].ulong_num) != 0; }
#line 46196 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2060: /* bool: TRUE_SYM  */
#line 13224 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 1; }
#line 46202 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2061: /* bool: FALSE_SYM  */
#line 13225 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ulong_num)= 0; }
#line 46208 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2062: /* $@171: %empty  */
#line 13230 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;

            lex->proc_list.elements=0;
            lex->proc_list.first=0;
            lex->proc_list.next= &lex->proc_list.first;
            Item_field *item= new (thd->mem_root)
                                Item_field(thd, &lex->current_select->context,
                                           (yyvsp[0].ident_sys));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            if (unlikely(add_proc_to_list(thd, item)))
              MYSQL_YYABORT;
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);

            /*
              PROCEDURE CLAUSE cannot handle subquery as one of its parameter,
              so disallow any subqueries further.
              Alow subqueries back once the parameters are reduced.
            */
            Lex->clause_that_disallows_subselect= "PROCEDURE";
            Select->options|= OPTION_PROCEDURE_CLAUSE;
          }
#line 46236 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2063: /* procedure_clause: PROCEDURE_SYM ident $@171 '(' procedure_list ')'  */
#line 13254 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* Subqueries are allowed from now.*/
            Lex->clause_that_disallows_subselect= NULL;
          }
#line 46245 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2064: /* procedure_list: %empty  */
#line 13261 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46251 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2065: /* procedure_list: procedure_list2  */
#line 13262 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 46257 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2068: /* procedure_item: remember_name expr remember_end  */
#line 13272 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(add_proc_to_list(thd, (yyvsp[-1].item))))
              MYSQL_YYABORT;
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 46268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2069: /* $@172: %empty  */
#line 13281 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe &&
                unlikely((!(lex->result= new (thd->mem_root)
                            select_dumpvar(thd)))))
              MYSQL_YYABORT;
          }
#line 46280 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2070: /* select_var_list_init: $@172 select_var_list  */
#line 13289 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46286 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2072: /* select_var_list: select_var_ident  */
#line 13294 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 46292 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2073: /* select_var_ident: select_outvar  */
#line 13298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->result)
            {
              if (unlikely((yyvsp[0].myvar) == NULL))
                MYSQL_YYABORT;
              ((select_dumpvar *)Lex->result)->var_list.push_back((yyvsp[0].myvar), thd->mem_root);
            }
            else
            {
              /*
                The parser won't create select_result instance only
                if it's an EXPLAIN.
              */
              DBUG_ASSERT(Lex->describe);
            }
          }
#line 46313 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2074: /* select_outvar: '@' ident_or_text  */
#line 13318 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.myvar) = Lex->result ? new (thd->mem_root) my_var_user(&(yyvsp[0].lex_str)) : NULL;
          }
#line 46327 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2075: /* select_outvar: ident_or_text  */
#line 13328 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[0].lex_str))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 46336 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2076: /* select_outvar: ident '.' ident  */
#line 13333 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.myvar)= Lex->create_outvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))) && Lex->result))
              MYSQL_YYABORT;
          }
#line 46345 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2077: /* into: INTO into_destination  */
#line 13341 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46351 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2078: /* $@173: %empty  */
#line 13346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            if (unlikely(!(lex->exchange=
                         new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str, 0))) ||
                unlikely(!(lex->result=
                         new (thd->mem_root)
                         select_export(thd, lex->exchange))))
              MYSQL_YYABORT;
            status_var_increment(thd->status_var.feature_into_outfile);
          }
#line 46367 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2079: /* $@174: %empty  */
#line 13358 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 46373 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2081: /* into_destination: DUMPFILE TEXT_STRING_filesystem  */
#line 13361 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (!lex->describe)
            {
              lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
              if (unlikely(!(lex->exchange=
                             new (thd->mem_root) sql_exchange((yyvsp[0].lex_str).str,1))))
                MYSQL_YYABORT;
              if (unlikely(!(lex->result=
                           new (thd->mem_root)
                           select_dump(thd, lex->exchange))))
                MYSQL_YYABORT;
            }
          }
#line 46392 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2082: /* into_destination: select_var_list_init  */
#line 13376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->uncacheable(UNCACHEABLE_SIDEEFFECT);
            status_var_increment(thd->status_var.feature_into_variable);
          }
#line 46401 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2083: /* $@175: %empty  */
#line 13388 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DO;
            if (lex->main_select_push(true))
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 46413 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2084: /* do: DO_SYM $@175 expr_list  */
#line 13396 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->insert_list= (yyvsp[0].item_list);
            Lex->pop_select(); //main select
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 46424 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2085: /* $@176: %empty  */
#line 13410 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_TABLE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 46435 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2086: /* drop: DROP opt_temporary table_or_tables opt_if_exists $@176 table_list opt_lock_wait_timeout opt_restrict  */
#line 13417 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46441 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2087: /* $@177: %empty  */
#line 13419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 46450 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2088: /* drop: DROP INDEX_SYM $@177 opt_if_exists_table_element ident ON table_ident opt_lock_wait_timeout  */
#line 13424 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Alter_drop *ad= (new (thd->mem_root)
                             Alter_drop(Alter_drop::KEY, (yyvsp[-3].ident_sys), (yyvsp[-4].num)));
            if (unlikely(ad == NULL))
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_DROP_INDEX;
            lex->alter_info.reset();
            lex->alter_info.flags= ALTER_DROP_INDEX;
            lex->alter_info.drop_list.push_back(ad, thd->mem_root);
            if (unlikely(!lex->current_select->
                         add_table_to_list(thd, (yyvsp[-1].table), NULL, TL_OPTION_UPDATING,
                                           TL_READ_NO_INSERT,
                                           MDL_SHARED_UPGRADABLE)))
              MYSQL_YYABORT;
            Lex->pop_select(); //main select
          }
#line 46472 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2089: /* drop: DROP DATABASE opt_if_exists ident  */
#line 13442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_command(SQLCOM_DROP_DB, (yyvsp[-1].object_ddl_options));
            lex->name= (yyvsp[0].ident_sys);
          }
#line 46482 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2090: /* drop: DROP USER_SYM opt_if_exists clear_privileges user_list  */
#line 13448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_USER, (yyvsp[-2].object_ddl_options));
          }
#line 46490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2091: /* drop: DROP ROLE_SYM opt_if_exists clear_privileges role_list  */
#line 13452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_ROLE, (yyvsp[-2].object_ddl_options));
          }
#line 46498 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2092: /* $@178: %empty  */
#line 13456 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_VIEW, (yyvsp[0].object_ddl_options));
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 46509 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2093: /* drop: DROP VIEW_SYM opt_if_exists $@178 table_list opt_restrict  */
#line 13463 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46515 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2094: /* drop: DROP EVENT_SYM opt_if_exists sp_name  */
#line 13465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->set_command(SQLCOM_DROP_EVENT, (yyvsp[-1].object_ddl_options));
          }
#line 46524 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2095: /* drop: DROP TRIGGER_SYM opt_if_exists sp_name  */
#line 13470 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_TRIGGER, (yyvsp[-1].object_ddl_options));
            lex->spname= (yyvsp[0].spname);
          }
#line 46534 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2096: /* drop: DROP SERVER_SYM opt_if_exists ident_or_text  */
#line 13476 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_DROP_SERVER, (yyvsp[-1].object_ddl_options));
            Lex->server_options.reset((yyvsp[0].lex_str));
          }
#line 46543 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2097: /* $@179: %empty  */
#line 13482 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->set_command(SQLCOM_DROP_SEQUENCE, (yyvsp[-2].num), (yyvsp[0].object_ddl_options));
            lex->table_type= TABLE_TYPE_SEQUENCE;
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 46555 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2098: /* drop: DROP opt_temporary SEQUENCE_SYM opt_if_exists $@179 table_list  */
#line 13490 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 46561 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2102: /* table_name: table_ident  */
#line 13501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!thd->lex->current_select_or_default()->
                                           add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 46574 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2103: /* table_name_with_opt_use_partition: table_ident opt_use_partition  */
#line 13513 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    YYPS->m_lock_type,
                                                    YYPS->m_mdl_type,
                                                    NULL,
                                                    (yyvsp[0].string_list))))
              MYSQL_YYABORT;
          }
#line 46588 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2106: /* table_alias_ref: table_ident_opt_wild  */
#line 13531 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[0].table), NULL,
                                           (TL_OPTION_UPDATING |
                                            TL_OPTION_ALIAS),
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type)))
              MYSQL_YYABORT;
          }
#line 46602 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2107: /* opt_if_exists_table_element: %empty  */
#line 13544 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= FALSE;
          (yyval.num)= 0;
        }
#line 46611 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2108: /* opt_if_exists_table_element: IF_SYM EXISTS  */
#line 13549 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->check_exists= TRUE;
          (yyval.num)= 1;
        }
#line 46620 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2109: /* opt_if_exists: %empty  */
#line 13557 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_NONE);
        }
#line 46628 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2110: /* opt_if_exists: IF_SYM EXISTS  */
#line 13561 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.object_ddl_options).set(DDL_options_st::OPT_IF_EXISTS);
        }
#line 46636 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2111: /* opt_temporary: %empty  */
#line 13567 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)= 0; }
#line 46642 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2112: /* opt_temporary: TEMPORARY  */
#line 13568 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= HA_LEX_CREATE_TMP_TABLE; }
#line 46648 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2113: /* $@180: %empty  */
#line 13576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_INSERT;
            Lex->duplicates= DUP_ERROR;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 46659 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2114: /* $@181: %empty  */
#line 13583 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-3].lock_type), true, false);
          }
#line 46667 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2115: /* insert: INSERT $@180 insert_start insert_lock_option opt_ignore opt_into insert_table $@181 insert_field_spec opt_insert_update opt_returning stmt_end  */
#line 13588 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 46676 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2116: /* $@182: %empty  */
#line 13596 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REPLACE;
            Lex->duplicates= DUP_REPLACE;
            thd->get_stmt_da()->opt_clear_warning_info(thd->query_id);
            thd->get_stmt_da()->reset_current_row_for_warning(1);
          }
#line 46687 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2117: /* $@183: %empty  */
#line 13603 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->set_lock_for_tables((yyvsp[-2].lock_type), true, false);
          }
#line 46695 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2118: /* replace: REPLACE $@182 insert_start replace_lock_option opt_into insert_table $@183 insert_field_spec opt_returning stmt_end  */
#line 13608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
            thd->get_stmt_da()->reset_current_row_for_warning(0);
          }
#line 46704 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2119: /* insert_start: %empty  */
#line 13614 "/home/buildbot/git/sql/sql_yacc.yy"
              {
                if (Lex->main_select_push())
                  MYSQL_YYABORT;
                Lex->init_select();
                Lex->inc_select_stack_outer_barrier();
                Lex->current_select->parsing_place= BEFORE_OPT_LIST;
              }
#line 46716 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2120: /* stmt_end: %empty  */
#line 13623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
              Lex->pop_select(); //main select
              if (Lex->check_main_unit_semantics())
                MYSQL_YYABORT;
            }
#line 46726 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2121: /* insert_lock_option: %empty  */
#line 13632 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              If it is SP we do not allow insert optimisation when result of
              insert visible only after the table unlocking but everyone can
              read table.
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 46739 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2123: /* insert_lock_option: HIGH_PRIORITY  */
#line 13641 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE; }
#line 46745 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2124: /* replace_lock_option: %empty  */
#line 13645 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 46751 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2126: /* insert_replace_option: LOW_PRIORITY  */
#line 13650 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 46757 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2127: /* insert_replace_option: DELAYED_SYM  */
#line 13652 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->keyword_delayed_begin_offset= (uint)((yyvsp[0].kwd).pos() - thd->query());
          Lex->keyword_delayed_end_offset= (uint)((yyvsp[0].kwd).end() - thd->query());
          (yyval.lock_type)= TL_WRITE_DELAYED;
        }
#line 46767 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2130: /* $@184: %empty  */
#line 13662 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->save_parsing_place= Select->parsing_place;
          }
#line 46775 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2131: /* insert_table: $@184 table_name_with_opt_use_partition  */
#line 13666 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            //lex->field_list.empty();
            lex->many_values.empty();
            lex->insert_list=0;
          }
#line 46786 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2132: /* insert_field_spec: insert_values  */
#line 13675 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 46792 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2133: /* insert_field_spec: insert_field_list insert_values  */
#line 13676 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 46798 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2134: /* $@185: %empty  */
#line 13678 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)) ||
                unlikely(lex->many_values.push_back(lex->insert_list,
                         thd->mem_root)))
              MYSQL_YYABORT;
            lex->current_select->parsing_place= NO_MATTER;
          }
#line 46811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2136: /* insert_field_list: LEFT_PAREN_ALT opt_fields ')'  */
#line 13691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->current_select->parsing_place= AFTER_LIST;
          }
#line 46819 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2139: /* fields: fields ',' insert_ident  */
#line 13703 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 46825 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2140: /* fields: insert_ident  */
#line 13704 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 46831 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2141: /* insert_values: create_select_query_expression  */
#line 13710 "/home/buildbot/git/sql/sql_yacc.yy"
                                        {}
#line 46837 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2146: /* ident_eq_value: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13725 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(lex->field_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
                unlikely(lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46848 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2147: /* equal: '='  */
#line 13734 "/home/buildbot/git/sql/sql_yacc.yy"
              {}
#line 46854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2148: /* equal: SET_VAR  */
#line 13735 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 46860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2149: /* opt_equal: %empty  */
#line 13739 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2150: /* opt_equal: equal  */
#line 13740 "/home/buildbot/git/sql/sql_yacc.yy"
                {}
#line 46872 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2151: /* opt_with: opt_equal  */
#line 13744 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 46878 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2152: /* opt_with: WITH  */
#line 13745 "/home/buildbot/git/sql/sql_yacc.yy"
               {}
#line 46884 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2153: /* opt_by: opt_equal  */
#line 13749 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 46890 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2154: /* opt_by: BY  */
#line 13750 "/home/buildbot/git/sql/sql_yacc.yy"
             {}
#line 46896 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2155: /* $@186: %empty  */
#line 13755 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46905 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2156: /* no_braces: '(' $@186 opt_values ')'  */
#line 13760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46917 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2157: /* $@187: %empty  */
#line 13771 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!(Lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 46926 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2158: /* no_braces_with_names: '(' $@187 opt_values_with_names ')'  */
#line 13776 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            thd->get_stmt_da()->inc_current_row_for_warning();
            if (unlikely(lex->many_values.push_back(lex->insert_list,
                                                    thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46938 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2159: /* opt_values: %empty  */
#line 13786 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46944 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2161: /* opt_values_with_names: %empty  */
#line 13791 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 46950 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2163: /* values: values ',' expr_or_ignore_or_default  */
#line 13797 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46959 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2164: /* values: expr_or_ignore_or_default  */
#line 13802 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 46968 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2165: /* values_with_names: values_with_names ',' remember_name expr_or_ignore_or_default remember_end  */
#line 13810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
           }
#line 46980 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2166: /* values_with_names: remember_name expr_or_ignore_or_default remember_end  */
#line 13818 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->insert_list->push_back((yyvsp[-1].item), thd->mem_root)))
               MYSQL_YYABORT;
            // give some name in case of using in table value constuctor (TVC)
            if (!(yyvsp[-1].item)->name.str || (yyvsp[-1].item)->name.str == item_empty_name)
              (yyvsp[-1].item)->set_name(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 46992 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2167: /* expr_or_ignore: expr  */
#line 13828 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)= (yyvsp[0].item);}
#line 46998 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2168: /* expr_or_ignore: IGNORE_SYM  */
#line 13830 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_ignore_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47008 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2169: /* expr_or_ignore_or_default: expr_or_ignore  */
#line 13838 "/home/buildbot/git/sql/sql_yacc.yy"
                         { (yyval.item)= (yyvsp[0].item);}
#line 47014 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2170: /* expr_or_ignore_or_default: DEFAULT  */
#line 13840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_default_specification(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 47024 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2172: /* $@188: %empty  */
#line 13849 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Lex->duplicates= DUP_UPDATE; }
#line 47030 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2173: /* $@189: %empty  */
#line 13851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= IN_UPDATE_ON_DUP_KEY;
          }
#line 47038 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2174: /* opt_insert_update: ON DUPLICATE_SYM $@188 KEY_SYM UPDATE_SYM $@189 insert_update_list  */
#line 13855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    Select->parsing_place= NO_MATTER;
          }
#line 47046 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2175: /* update_table_list: table_ident opt_use_partition for_portion_of_time_clause opt_table_alias_clause opt_key_definition  */
#line 13863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.table_list)= Select->add_table_to_list(thd, (yyvsp[-4].table), (yyvsp[-1].lex_str_ptr),
                                                0,
                                                YYPS->m_lock_type,
                                                YYPS->m_mdl_type,
                                                Select->pop_index_hints(),
                                                (yyvsp[-3].string_list))))
              MYSQL_YYABORT;
            (yyval.table_list)->period_conditions= Lex->period_conditions;
          }
#line 47061 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2176: /* update_table_list: join_table_list  */
#line 13873 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.table_list)= (yyvsp[0].table_list); }
#line 47067 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2177: /* $@190: %empty  */
#line 13880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->sql_command= SQLCOM_UPDATE;
            lex->duplicates= DUP_ERROR; 
          }
#line 47080 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2178: /* $@191: %empty  */
#line 13890 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            bool is_multiupdate= false;
            LEX *lex= Lex;
            SELECT_LEX *slex= Lex->first_select_lex();
            if (slex->table_list.elements > 1)
            {
              Lex->sql_command= SQLCOM_UPDATE_MULTI;
              is_multiupdate= true;
            }
            else if (slex->get_table_list()->derived)
            {
              /* it is single table update and it is update of derived table */
              my_error(ER_NON_UPDATABLE_TABLE, MYF(0),
                       slex->get_table_list()->alias.str, "UPDATE");
              MYSQL_YYABORT;
            }
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_update(is_multiupdate)))
              MYSQL_YYABORT;
            /*
              In case of multi-update setting write lock for all tables may
              be too pessimistic. We will decrease lock level if possible
              later while processing the statement.
            */
            slex->set_lock_for_tables((yyvsp[-4].lock_type), slex->table_list.elements == 1, false);
          }
#line 47111 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2179: /* $@192: %empty  */
#line 13917 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[-1].select_order))
              Select->order_list= *((yyvsp[-1].select_order));
          }
#line 47120 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2180: /* update: UPDATE_SYM $@190 opt_low_priority opt_ignore update_table_list SET update_list $@191 opt_where_clause opt_order_clause delete_limit_clause $@192 stmt_end  */
#line 13920 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 47126 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2183: /* update_elem: simple_ident_nospvar equal DEFAULT  */
#line 13930 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *def= new (thd->mem_root) Item_default_value(thd,
                                             Lex->current_context(), (yyvsp[-2].item), 1);
            if (!def || add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, def))
              MYSQL_YYABORT;
          }
#line 47137 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2184: /* update_elem: simple_ident_nospvar equal expr_or_ignore  */
#line 13937 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (add_item_to_list(thd, (yyvsp[-2].item)) || add_value_to_list(thd, (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 47146 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2187: /* insert_update_elem: simple_ident_nospvar equal expr_or_ignore_or_default  */
#line 13950 "/home/buildbot/git/sql/sql_yacc.yy"
          {
          LEX *lex= Lex;
          if (unlikely(lex->update_list.push_back((yyvsp[-2].item), thd->mem_root)) ||
              unlikely(lex->value_list.push_back((yyvsp[0].item), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 47157 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2188: /* opt_low_priority: %empty  */
#line 13959 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 47163 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2189: /* opt_low_priority: LOW_PRIORITY  */
#line 13960 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 47169 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2190: /* $@193: %empty  */
#line 13967 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            YYPS->m_lock_type= TL_WRITE_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_WRITE;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            mysql_init_delete(lex);
            lex->ignore= 0;
            lex->first_select_lex()->order_list.empty();
          }
#line 47184 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2191: /* delete: DELETE_SYM $@193 delete_part2  */
#line 13978 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_cte_dependencies_and_resolve_references())
              MYSQL_YYABORT;
          }
#line 47193 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2192: /* opt_delete_system_time: %empty  */
#line 13986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_HISTORY);
          }
#line 47201 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2193: /* opt_delete_system_time: BEFORE_SYM SYSTEM_TIME_SYM history_point  */
#line 13990 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->vers_conditions.init(SYSTEM_TIME_BEFORE, (yyvsp[0].vers_history_point));
          }
#line 47209 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2194: /* delete_part2: opt_delete_options single_multi  */
#line 13996 "/home/buildbot/git/sql/sql_yacc.yy"
                                          {}
#line 47215 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2195: /* $@194: %empty  */
#line 13998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->last_table()->vers_conditions= lex->vers_conditions;
            lex->sql_command= SQLCOM_DELETE;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(false)))
              MYSQL_YYABORT;
            if (lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 47230 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2196: /* delete_part2: HISTORY_SYM delete_single_table opt_delete_system_time $@194 stmt_end  */
#line 14009 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 47236 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2197: /* delete_single_table: FROM table_ident opt_table_alias_clause opt_key_definition opt_use_partition  */
#line 14014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-3].table), (yyvsp[-2].lex_str_ptr), TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           NULL,
                                           0)))
              MYSQL_YYABORT;
            Select->table_list.save_and_clear(&Lex->auxiliary_table_list);
            /* Save the number of auxiliary tables */
            Lex->table_count_update= 1;

            Lex->query_tables= 0;
            Lex->query_tables_last= &Lex->query_tables;
            if (unlikely(!Select->
                         add_table_to_list(thd, (yyvsp[-3].table), (yyvsp[-2].lex_str_ptr), TL_OPTION_UPDATING,
                                           YYPS->m_lock_type,
                                           YYPS->m_mdl_type,
                                           Select->pop_index_hints(),
                                           (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            Lex->auxiliary_table_list.first->correspondent_table=
              Lex->query_tables;
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 47267 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2198: /* delete_single_table_for_period: delete_single_table opt_for_portion_of_time_clause  */
#line 14044 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if ((yyvsp[0].num))
              Lex->last_table()->period_conditions= Lex->period_conditions;
          }
#line 47276 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2199: /* $@195: %empty  */
#line 14056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if ((yyvsp[-2].select_order))
              Select->order_list= *((yyvsp[-2].select_order));
            lex->sql_command= SQLCOM_DELETE;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(false)))
              MYSQL_YYABORT;
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 47292 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2200: /* single_multi: delete_single_table_for_period opt_where_clause opt_order_clause delete_limit_clause opt_returning $@195 stmt_end  */
#line 14067 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 47298 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2201: /* $@196: %empty  */
#line 14069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE_MULTI;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(true)))
              MYSQL_YYABORT;
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 47313 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2202: /* $@197: %empty  */
#line 14080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
            {
              DBUG_ASSERT(Lex->select_stack_head() == Select);
              (yyvsp[0].order_limit_lock)->set_to(Lex->select_stack_head());
            }
          }
#line 47327 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2203: /* single_multi: table_alias_ref_list $@196 FROM join_table_list opt_where_clause opt_order_or_limit $@197 stmt_end  */
#line 14088 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 47333 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2204: /* $@198: %empty  */
#line 14090 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DELETE_MULTI;
            if (!(lex->m_sql_cmd=
                  new (thd->mem_root) Sql_cmd_delete(true)))
              MYSQL_YYABORT;
            mysql_init_multi_delete(Lex);
            YYPS->m_lock_type= TL_READ_DEFAULT;
            YYPS->m_mdl_type= MDL_SHARED_READ;
          }
#line 47348 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2205: /* $@199: %empty  */
#line 14101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(multi_delete_set_locks_and_link_aux_tables(Lex)))
              MYSQL_YYABORT;
            if ((yyvsp[0].order_limit_lock))
            {
              DBUG_ASSERT(Lex->select_stack_head() == Select);
              (yyvsp[0].order_limit_lock)->set_to(Lex->select_stack_head());
            }
          }
#line 47362 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2206: /* single_multi: FROM table_alias_ref_list $@198 USING join_table_list opt_where_clause opt_order_or_limit $@199 stmt_end  */
#line 14109 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 47368 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2207: /* opt_returning: %empty  */
#line 14114 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
          }
#line 47376 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2208: /* $@200: %empty  */
#line 14118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(!Lex->has_returning());
            /*
              When parsing_place is IN_RETURNING, we push select items to
              item_list of builtin_select instead of current_select.
              But set parsing_place of current_select to true.

              Because parsing_place for builtin_select will be IN_RETURNING,
              regardless there is SELECT in RETURNING. Example, if
              there is RETURNING (SELECT...), then when we parse
              SELECT inside RETURNING, builtin_select->parsing_place
              will still be true. So the select items of SELECT inside
              RETURNING will be added to item_list of builtin_select which
              is incorrect. We want to prevent this from happening.
              Since for every new select, a new SELECT_LEX
              object is created and pushed to select stack, current_select
              will point to SELECT inside RETURNING, and also has
              parsing_place not set to IN_RETURNING by default.
              So items are correctly added to item_list of SELECT inside
              RETURNING instead of builtin_select.
            */

            thd->lex->current_select->parsing_place= IN_RETURNING;
            thd->lex->push_context(&thd->lex->returning()->context);
          }
#line 47406 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2209: /* opt_returning: RETURNING_SYM $@200 select_item_list  */
#line 14144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thd->lex->pop_context();
            thd->lex->current_select->parsing_place= NO_MATTER;
          }
#line 47415 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2210: /* opt_wild: %empty  */
#line 14151 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47421 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2211: /* opt_wild: '.' '*'  */
#line 14152 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 47427 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2212: /* opt_delete_options: %empty  */
#line 14156 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 47433 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2213: /* opt_delete_options: opt_delete_option opt_delete_options  */
#line 14157 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 47439 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2214: /* opt_delete_option: QUICK  */
#line 14161 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Select->options|= OPTION_QUICK; }
#line 47445 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2215: /* opt_delete_option: LOW_PRIORITY  */
#line 14162 "/home/buildbot/git/sql/sql_yacc.yy"
                       { YYPS->m_lock_type= TL_WRITE_LOW_PRIORITY; }
#line 47451 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2216: /* opt_delete_option: IGNORE_SYM  */
#line 14163 "/home/buildbot/git/sql/sql_yacc.yy"
                       { Lex->ignore= 1; }
#line 47457 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2217: /* $@201: %empty  */
#line 14168 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= Lex;
            lex->sql_command= SQLCOM_TRUNCATE;
            lex->alter_info.reset();
            lex->first_select_lex()->options= 0;
            lex->sql_cache= LEX::SQL_CACHE_UNSPECIFIED;
            lex->first_select_lex()->order_list.empty();
            YYPS->m_lock_type= TL_WRITE;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
          }
#line 47472 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2218: /* $@202: %empty  */
#line 14179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->m_sql_cmd= new (thd->mem_root) Sql_cmd_truncate_table();
            if (unlikely(lex->m_sql_cmd == NULL))
              MYSQL_YYABORT;
          }
#line 47484 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2219: /* truncate: TRUNCATE_SYM $@201 opt_table_sym table_name opt_lock_wait_timeout $@202 opt_truncate_table_storage_clause  */
#line 14186 "/home/buildbot/git/sql/sql_yacc.yy"
                                            { }
#line 47490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2226: /* profile_def: CPU_SYM  */
#line 14204 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 47498 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2227: /* profile_def: MEMORY_SYM  */
#line 14208 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 47506 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2228: /* profile_def: BLOCK_SYM IO_SYM  */
#line 14212 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 47514 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2229: /* profile_def: CONTEXT_SYM SWITCHES_SYM  */
#line 14216 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 47522 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2230: /* profile_def: PAGE_SYM FAULTS_SYM  */
#line 14220 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 47530 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2231: /* profile_def: IPC_SYM  */
#line 14224 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 47538 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2232: /* profile_def: SWAPS_SYM  */
#line 14228 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 47546 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2233: /* profile_def: SOURCE_SYM  */
#line 14232 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 47554 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2234: /* profile_def: ALL  */
#line 14236 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 47562 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2235: /* opt_profile_args: %empty  */
#line 14243 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= 0;
    }
#line 47570 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2236: /* opt_profile_args: FOR_SYM QUERY_SYM NUM  */
#line 14247 "/home/buildbot/git/sql/sql_yacc.yy"
    {
      Lex->profile_query_id= atoi((yyvsp[0].lex_str).str);
    }
#line 47578 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2237: /* $@203: %empty  */
#line 14256 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
          }
#line 47593 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2238: /* show: SHOW $@203 show_param  */
#line 14267 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 47602 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2239: /* show_param: DATABASES wild_and_where  */
#line 14275 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SCHEMATA)))
               MYSQL_YYABORT;
           }
#line 47613 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2240: /* show_param: opt_full TABLES opt_db wild_and_where  */
#line 14282 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLES;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLE_NAMES))
               MYSQL_YYABORT;
           }
#line 47625 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2241: /* show_param: opt_full TRIGGERS_SYM opt_db wild_and_where  */
#line 14290 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TRIGGERS))
               MYSQL_YYABORT;
           }
#line 47637 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2242: /* show_param: EVENTS_SYM opt_db wild_and_where  */
#line 14298 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_EVENTS))
               MYSQL_YYABORT;
           }
#line 47649 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2243: /* show_param: TABLE_SYM STATUS_SYM opt_db wild_and_where  */
#line 14306 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->first_select_lex()->db= (yyvsp[-1].lex_str);
             if (prepare_schema_table(thd, lex, 0, SCH_TABLES))
               MYSQL_YYABORT;
           }
#line 47661 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2244: /* show_param: OPEN_SYM TABLES opt_db wild_and_where  */
#line 14314 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->first_select_lex()->db= (yyvsp[-1].lex_str);
            if (prepare_schema_table(thd, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 47673 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2245: /* show_param: PLUGINS_SYM  */
#line 14322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 47684 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2246: /* show_param: PLUGINS_SYM SONAME_SYM TEXT_STRING_sys  */
#line 14329 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->ident= (yyvsp[0].lex_str);
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 47695 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2247: /* show_param: PLUGINS_SYM SONAME_SYM wild_and_where  */
#line 14336 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (unlikely(prepare_schema_table(thd, Lex, 0, SCH_ALL_PLUGINS)))
              MYSQL_YYABORT;
          }
#line 47705 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2248: /* show_param: ENGINE_SYM known_storage_engines show_engine_param  */
#line 14342 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= (yyvsp[-1].db_type); }
#line 47711 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2249: /* show_param: ENGINE_SYM ALL show_engine_param  */
#line 14344 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->create_info.db_type= NULL; }
#line 47717 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2250: /* show_param: opt_full COLUMNS from_or_in table_ident opt_db wild_and_where  */
#line 14346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 47730 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2251: /* show_param: master_or_binary LOGS_SYM  */
#line 14355 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 47738 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2252: /* show_param: SLAVE HOSTS_SYM  */
#line 14359 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 47746 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2253: /* $@204: %empty  */
#line 14363 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 47755 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2255: /* $@205: %empty  */
#line 14369 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 47764 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2256: /* show_param: RELAYLOG_SYM optional_connection_name EVENTS_SYM binlog_in binlog_from $@205 opt_global_limit_clause optional_for_channel  */
#line 14374 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 47770 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2257: /* show_param: keys_or_index from_or_in table_ident opt_db opt_where_clause  */
#line 14376 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_KEYS;
            if ((yyvsp[-1].lex_str).str)
              (yyvsp[-2].table)->change_db(&(yyvsp[-1].lex_str));
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[-2].table), SCH_STATISTICS)))
              MYSQL_YYABORT;
          }
#line 47783 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2258: /* show_param: opt_storage ENGINES_SYM  */
#line 14385 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_ENGINES)))
              MYSQL_YYABORT;
          }
#line 47794 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2259: /* show_param: AUTHORS_SYM  */
#line 14392 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_AUTHORS;
          }
#line 47803 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2260: /* show_param: CONTRIBUTORS_SYM  */
#line 14397 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CONTRIBUTORS;
          }
#line 47812 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2261: /* show_param: PRIVILEGES  */
#line 14402 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
          }
#line 47821 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2262: /* show_param: COUNT_SYM '(' '*' ')' WARNINGS  */
#line 14407 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("warning_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 47830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2263: /* show_param: COUNT_SYM '(' '*' ')' ERRORS  */
#line 14412 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING var= {STRING_WITH_LEN("error_count")};
            (void) create_select_for_variable(thd, &var);
          }
#line 47839 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2264: /* show_param: WARNINGS opt_global_limit_clause  */
#line 14417 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_WARNS;}
#line 47845 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2265: /* show_param: ERRORS opt_global_limit_clause  */
#line 14419 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_ERRORS;}
#line 47851 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2266: /* show_param: PROFILES_SYM  */
#line 14421 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command = SQLCOM_SHOW_PROFILES; }
#line 47857 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2267: /* show_param: PROFILE_SYM opt_profile_defs opt_profile_args opt_global_limit_clause  */
#line 14423 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (unlikely(prepare_schema_table(thd, lex, NULL, SCH_PROFILES)))
              MYSQL_YYABORT;
          }
#line 47868 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2268: /* show_param: opt_var_type STATUS_SYM wild_and_where  */
#line 14430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_STATUS)))
              MYSQL_YYABORT;
          }
#line 47880 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2269: /* show_param: opt_full PROCESSLIST_SYM  */
#line 14438 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;}
#line 47886 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2270: /* show_param: opt_var_type VARIABLES wild_and_where  */
#line 14440 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_VARIABLES;
            lex->option_type= (yyvsp[-2].var_type);
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_SESSION_VARIABLES)))
              MYSQL_YYABORT;
          }
#line 47898 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2271: /* show_param: charset wild_and_where  */
#line 14448 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_CHARSETS)))
              MYSQL_YYABORT;
          }
#line 47909 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2272: /* show_param: COLLATION_SYM wild_and_where  */
#line 14455 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_COLLATIONS)))
              MYSQL_YYABORT;
          }
#line 47920 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2273: /* show_param: GRANTS  */
#line 14462 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_GRANTS;
            if (unlikely(!(Lex->grant_user= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user_and_current_role;
          }
#line 47931 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2274: /* show_param: GRANTS FOR_SYM user_or_role clear_privileges  */
#line 14469 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_GRANTS;
            lex->grant_user=(yyvsp[-1].lex_user);
          }
#line 47941 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2275: /* show_param: CREATE DATABASE opt_if_not_exists ident  */
#line 14475 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->set_command(SQLCOM_SHOW_CREATE_DB, (yyvsp[-1].object_ddl_options));
            Lex->name= (yyvsp[0].ident_sys);
          }
#line 47950 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2276: /* show_param: CREATE TABLE_SYM table_ident  */
#line 14480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->create_info.storage_media= HA_SM_DEFAULT;
          }
#line 47962 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2277: /* show_param: CREATE VIEW_SYM table_ident  */
#line 14488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_VIEW;
          }
#line 47974 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2278: /* show_param: CREATE SEQUENCE_SYM table_ident  */
#line 14496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->first_select_lex()->add_table_to_list(thd, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->table_type= TABLE_TYPE_SEQUENCE;
          }
#line 47986 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2279: /* show_param: BINLOG_SYM STATUS_SYM  */
#line 14504 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 47994 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2280: /* show_param: MASTER_SYM STATUS_SYM  */
#line 14508 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_SHOW_BINLOG_STAT;
          }
#line 48002 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2281: /* show_param: ALL SLAVES STATUS_SYM  */
#line 14512 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_SLAVE_STAT;
            lex->mi.show_all_slaves= 1;
#ifdef HAVE_REPLICATION
            if (prepare_schema_table(thd, lex, 0, SCH_SLAVE_STATUS))
              MYSQL_YYABORT;
#endif
          }
#line 48016 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2282: /* show_param: SLAVE optional_connection_name STATUS_SYM optional_for_channel  */
#line 14522 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_SLAVE_STAT;
            lex->mi.show_all_slaves= 0;
#ifdef HAVE_REPLICATION
            if (prepare_schema_table(thd, lex, 0, SCH_SLAVE_STATUS))
              MYSQL_YYABORT;
#endif
          }
#line 48030 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2283: /* show_param: CREATE PROCEDURE_SYM sp_name  */
#line 14532 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 48041 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2284: /* show_param: CREATE FUNCTION_SYM sp_name  */
#line 14539 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 48052 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2285: /* show_param: CREATE PACKAGE_MARIADB_SYM sp_name  */
#line 14546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 48062 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2286: /* show_param: CREATE PACKAGE_ORACLE_SYM sp_name  */
#line 14552 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE;
            lex->spname= (yyvsp[0].spname);
          }
#line 48072 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2287: /* show_param: CREATE PACKAGE_MARIADB_SYM BODY_MARIADB_SYM sp_name  */
#line 14558 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 48082 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2288: /* show_param: CREATE PACKAGE_ORACLE_SYM BODY_ORACLE_SYM sp_name  */
#line 14564 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_PACKAGE_BODY;
            lex->spname= (yyvsp[0].spname);
          }
#line 48092 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2289: /* show_param: CREATE SERVER_SYM ident_or_text  */
#line 14570 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE_SERVER;
            lex->name= (yyvsp[0].lex_str);
          }
#line 48102 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2290: /* show_param: CREATE TRIGGER_SYM sp_name  */
#line 14576 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 48112 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2291: /* show_param: CREATE USER_SYM  */
#line 14582 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            if (unlikely(!(Lex->grant_user= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            Lex->grant_user->user= current_user;
          }
#line 48123 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2292: /* show_param: CREATE USER_SYM user  */
#line 14589 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->sql_command= SQLCOM_SHOW_CREATE_USER;
             Lex->grant_user= (yyvsp[0].lex_user);
          }
#line 48132 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2293: /* show_param: PROCEDURE_SYM STATUS_SYM wild_and_where  */
#line 14594 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 48143 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2294: /* show_param: FUNCTION_SYM STATUS_SYM wild_and_where  */
#line 14601 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 48154 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2295: /* show_param: PACKAGE_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14608 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 48165 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2296: /* show_param: PACKAGE_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14615 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 48176 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2297: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM STATUS_SYM wild_and_where  */
#line 14622 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 48187 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2298: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM STATUS_SYM wild_and_where  */
#line 14629 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PACKAGE_BODY;
            if (unlikely(prepare_schema_table(thd, lex, 0, SCH_PROCEDURES)))
              MYSQL_YYABORT;
          }
#line 48198 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2299: /* show_param: PROCEDURE_SYM CODE_SYM sp_name  */
#line 14636 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 48207 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2300: /* show_param: FUNCTION_SYM CODE_SYM sp_name  */
#line 14641 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 48216 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2301: /* show_param: PACKAGE_MARIADB_SYM BODY_MARIADB_SYM CODE_SYM sp_name  */
#line 14646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 48225 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2302: /* show_param: PACKAGE_ORACLE_SYM BODY_ORACLE_SYM CODE_SYM sp_name  */
#line 14651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_PACKAGE_BODY_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 48234 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2303: /* show_param: CREATE EVENT_SYM sp_name  */
#line 14656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 48243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2304: /* show_param: describe_command opt_format_json FOR_SYM expr  */
#line 14665 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 48255 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2305: /* show_param: ANALYZE_SYM opt_format_json FOR_SYM expr  */
#line 14673 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_SHOW_ANALYZE;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_ANALYZE_JSON : SCH_ANALYZE_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 48267 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2306: /* show_param: IDENT_sys remember_tok_start wild_and_where  */
#line 14681 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             LEX *lex= Lex;
             bool in_plugin;
             lex->sql_command= SQLCOM_SHOW_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-2].ident_sys), &in_plugin);
             if (unlikely(!table || !table->old_format || !in_plugin))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(lex->wild && table->idx_field1 < 0))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(make_schema_select(thd, Lex->current_select, table)))
               MYSQL_YYABORT;
           }
#line 48290 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2307: /* show_engine_param: STATUS_SYM  */
#line 14703 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 48296 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2308: /* show_engine_param: MUTEX_SYM  */
#line 14705 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 48302 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2309: /* show_engine_param: LOGS_SYM  */
#line 14707 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 48308 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2314: /* opt_db: %empty  */
#line 14721 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= null_clex_str; }
#line 48314 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2315: /* opt_db: from_or_in ident  */
#line 14722 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.lex_str)= (yyvsp[0].ident_sys); }
#line 48320 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2316: /* opt_full: %empty  */
#line 14726 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=0; }
#line 48326 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2317: /* opt_full: FULL  */
#line 14727 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->verbose=1; }
#line 48332 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2320: /* binlog_in: %empty  */
#line 14736 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = 0; }
#line 48338 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2321: /* binlog_in: IN_SYM TEXT_STRING_sys  */
#line 14737 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { Lex->mi.log_file_name = (yyvsp[0].lex_str).str; }
#line 48344 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2322: /* binlog_from: %empty  */
#line 14741 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = 4; /* skip magic number */ }
#line 48350 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2323: /* binlog_from: FROM ulonglong_num  */
#line 14742 "/home/buildbot/git/sql/sql_yacc.yy"
                             { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 48356 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2324: /* wild_and_where: %empty  */
#line 14746 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.simple_string)= 0; }
#line 48362 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2325: /* wild_and_where: LIKE remember_tok_start TEXT_STRING_sys  */
#line 14748 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                                   (yyvsp[0].lex_str).length,
                                                   system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 48375 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2326: /* wild_and_where: WHERE remember_tok_start search_condition  */
#line 14757 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->where= normalize_cond(thd, (yyvsp[0].item));
            if ((yyvsp[0].item))
              (yyvsp[0].item)->top_level_item();
            (yyval.simple_string)= (yyvsp[-1].simple_string);
          }
#line 48386 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2327: /* $@206: %empty  */
#line 14768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->sql_command= SQLCOM_SHOW_FIELDS;
            lex->first_select_lex()->db= null_clex_str;
            lex->verbose= 0;
            if (unlikely(prepare_schema_table(thd, lex, (yyvsp[0].table), SCH_COLUMNS)))
              MYSQL_YYABORT;
          }
#line 48403 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2328: /* describe: describe_command table_ident $@206 opt_describe_column  */
#line 14781 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
          }
#line 48412 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2329: /* $@207: %empty  */
#line 14786 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_NORMAL; }
#line 48418 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2330: /* describe: describe_command opt_extended_describe $@207 explainable_command  */
#line 14788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->first_select_lex()->options|= SELECT_DESCRIBE;
          }
#line 48427 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2339: /* analyze_stmt_command: ANALYZE_SYM opt_format_json explainable_command  */
#line 14810 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->analyze_stmt= true;
          }
#line 48435 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2340: /* opt_extended_describe: EXTENDED_SYM  */
#line 14816 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_EXTENDED; }
#line 48441 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2341: /* opt_extended_describe: EXTENDED_SYM ALL  */
#line 14818 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->describe|= DESCRIBE_EXTENDED | DESCRIBE_EXTENDED2; }
#line 48447 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2342: /* opt_extended_describe: PARTITIONS_SYM  */
#line 14819 "/home/buildbot/git/sql/sql_yacc.yy"
                         { Lex->describe|= DESCRIBE_PARTITIONS; }
#line 48453 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2343: /* opt_extended_describe: opt_format_json  */
#line 14820 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 48459 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2344: /* opt_format_json: %empty  */
#line 14824 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48465 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2345: /* opt_format_json: FORMAT_SYM '=' ident_or_text  */
#line 14826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("JSON")))
              Lex->explain_json= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("TRADITIONAL")))
              DBUG_ASSERT(Lex->explain_json==false);
            else
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                                "EXPLAIN/ANALYZE", (yyvsp[0].lex_str).str));
          }
#line 48479 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2346: /* opt_describe_column: %empty  */
#line 14838 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48485 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2347: /* opt_describe_column: text_string  */
#line 14839 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->wild= (yyvsp[0].string); }
#line 48491 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2348: /* opt_describe_column: ident  */
#line 14841 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->wild= new (thd->mem_root) String((const char*) (yyvsp[0].ident_sys).str,
                                                    (yyvsp[0].ident_sys).length,
                                                    system_charset_info);
            if (unlikely(Lex->wild == NULL))
              MYSQL_YYABORT;
          }
#line 48503 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2349: /* explain_for_connection: describe_command opt_format_json FOR_SYM CONNECTION_SYM expr  */
#line 14857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->wild=0;
            lex->ident= null_clex_str;
            if (Lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
            lex->current_select->parsing_place= SELECT_LIST;
            lex->create_info.init();
            Select->parsing_place= NO_MATTER;
            Lex->pop_select(); //main select
            Lex->sql_command= SQLCOM_SHOW_EXPLAIN;
            if (unlikely(prepare_schema_table(thd, Lex, 0,
                Lex->explain_json ? SCH_EXPLAIN_JSON : SCH_EXPLAIN_TABULAR)))
              MYSQL_YYABORT;
            add_value_to_list(thd, (yyvsp[0].item));
          }
#line 48525 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2350: /* $@208: %empty  */
#line 14880 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 48536 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2351: /* flush: FLUSH_SYM opt_no_write_to_binlog $@208 flush_options  */
#line 14886 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 48542 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2352: /* $@209: %empty  */
#line 14891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
          }
#line 48556 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2353: /* flush_options: table_or_tables $@209 opt_table_list opt_flush_lock  */
#line 14901 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48562 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2354: /* flush_options: flush_options_list  */
#line 14903 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48568 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2355: /* opt_flush_lock: %empty  */
#line 14907 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48574 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2356: /* opt_flush_lock: flush_lock  */
#line 14909 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          TABLE_LIST *tables= Lex->query_tables;
          for (; tables; tables= tables->next_global)
          {
            tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
            /* Ignore temporary tables. */
            tables->open_type= OT_BASE_ONLY;
          }
        }
#line 48588 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2357: /* flush_lock: WITH READ_SYM LOCK_SYM optional_flush_tables_arguments  */
#line 14922 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_READ_LOCK | (yyvsp[0].num); }
#line 48594 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2358: /* $@210: %empty  */
#line 14924 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->query_tables == NULL))
            {
              // Table list can't be empty
              thd->parse_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            } 
            Lex->type|= REFRESH_FOR_EXPORT;
          }
#line 48608 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2359: /* flush_lock: FOR_SYM $@210 EXPORT_SYM  */
#line 14932 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 48614 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2361: /* flush_options_list: flush_option  */
#line 14938 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48620 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2362: /* flush_option: ERROR_SYM LOGS_SYM  */
#line 14943 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ERROR_LOG; }
#line 48626 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2363: /* flush_option: ENGINE_SYM LOGS_SYM  */
#line 14945 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_ENGINE_LOG; }
#line 48632 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2364: /* flush_option: GENERAL LOGS_SYM  */
#line 14947 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GENERAL_LOG; }
#line 48638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2365: /* flush_option: SLOW LOGS_SYM  */
#line 14949 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SLOW_LOG; }
#line 48644 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2366: /* flush_option: BINARY LOGS_SYM opt_delete_gtid_domain  */
#line 14951 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_BINARY_LOG; }
#line 48650 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2367: /* flush_option: RELAY LOGS_SYM optional_connection_name optional_for_channel  */
#line 14953 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_RELAY_LOG))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH", "RELAY LOGS"));
            lex->type|= REFRESH_RELAY_LOG;
            lex->relay_log_connection_name= lex->mi.connection_name;
           }
#line 48662 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2368: /* flush_option: QUERY_SYM CACHE_SYM  */
#line 14961 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_QUERY_CACHE_FREE; }
#line 48668 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2369: /* flush_option: HOSTS_SYM  */
#line 14963 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_HOSTS; }
#line 48674 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2370: /* flush_option: PRIVILEGES  */
#line 14965 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GRANT; }
#line 48680 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2371: /* flush_option: LOGS_SYM  */
#line 14967 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->type|= REFRESH_LOG;
            Lex->relay_log_connection_name= empty_clex_str;
          }
#line 48689 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2372: /* flush_option: STATUS_SYM  */
#line 14972 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->variables.old_behavior & OLD_MODE_OLD_FLUSH_STATUS)
              Lex->type|= REFRESH_STATUS;
            else
              Lex->type|= REFRESH_SESSION_STATUS;
          }
#line 48700 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2373: /* flush_option: SESSION_SYM STATUS_SYM  */
#line 14979 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SESSION_STATUS; }
#line 48706 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2374: /* flush_option: GLOBAL_SYM STATUS_SYM  */
#line 14981 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_GLOBAL_STATUS; }
#line 48712 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2375: /* flush_option: SLAVE optional_connection_name  */
#line 14983 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            LEX *lex= Lex;
            if (unlikely(lex->type & REFRESH_SLAVE))
              my_yyabort_error((ER_WRONG_USAGE, MYF(0), "FLUSH","SLAVE"));
            lex->type|= REFRESH_SLAVE;
            lex->reset_slave_info.all= false;
          }
#line 48724 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2376: /* flush_option: MASTER_SYM  */
#line 14991 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_MASTER; }
#line 48730 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2377: /* flush_option: DES_KEY_FILE  */
#line 14993 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_DES_KEY_FILE; }
#line 48736 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2378: /* flush_option: RESOURCES  */
#line 14995 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_USER_RESOURCES; }
#line 48742 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2379: /* flush_option: SSL_SYM  */
#line 14997 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_SSL;}
#line 48748 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2380: /* flush_option: THREADS_SYM  */
#line 14999 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->type|= REFRESH_THREADS;}
#line 48754 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2381: /* flush_option: IDENT_sys remember_tok_start  */
#line 15001 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             Lex->type|= REFRESH_GENERIC;
             ST_SCHEMA_TABLE *table= find_schema_table(thd, &(yyvsp[-1].ident_sys));
             if (unlikely(!table || !table->reset_table))
             {
               thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].simple_string));
               MYSQL_YYABORT;
             }
             if (unlikely(Lex->view_list.push_back((LEX_CSTRING*)
                                                   thd->memdup(&(yyvsp[-1].ident_sys), sizeof(LEX_CSTRING)),
                                                   thd->mem_root)))
               MYSQL_YYABORT;
           }
#line 48772 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2382: /* opt_table_list: %empty  */
#line 15017 "/home/buildbot/git/sql/sql_yacc.yy"
                       {}
#line 48778 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2383: /* opt_table_list: table_list  */
#line 15018 "/home/buildbot/git/sql/sql_yacc.yy"
                     {}
#line 48784 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2384: /* backup: BACKUP_SYM backup_statements  */
#line 15022 "/home/buildbot/git/sql/sql_yacc.yy"
                                     {}
#line 48790 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2385: /* backup_statements: STAGE_SYM ident  */
#line 15027 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          int type;
          if (unlikely(Lex->sphead))
            my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP STAGE"));
          if ((type= find_type((yyvsp[0].ident_sys).str, &backup_stage_names,
                               FIND_TYPE_NO_PREFIX)) <= 0)
            my_yyabort_error((ER_BACKUP_UNKNOWN_STAGE, MYF(0), (yyvsp[0].ident_sys).str));
          Lex->sql_command= SQLCOM_BACKUP;
          Lex->backup_stage= (backup_stages) (type-1);
          break;
        }
#line 48806 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2386: /* $@211: %empty  */
#line 15039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP LOCK"));
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 48817 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2387: /* backup_statements: LOCK_SYM $@211 table_ident  */
#line 15046 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	    if (unlikely(!Select->add_table_to_list(thd, (yyvsp[0].table), NULL, 0,
                                                    TL_READ, MDL_SHARED_HIGH_PRIO)))
             MYSQL_YYABORT;
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
            Lex->pop_select(); //main select
          }
#line 48829 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2388: /* backup_statements: UNLOCK_SYM  */
#line 15054 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "BACKUP UNLOCK"));
	    /* Table list is empty for unlock */
            Lex->sql_command= SQLCOM_BACKUP_LOCK;
          }
#line 48840 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2389: /* opt_delete_gtid_domain: %empty  */
#line 15063 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48846 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2390: /* opt_delete_gtid_domain: DELETE_DOMAIN_ID_SYM '=' '(' delete_domain_id_list ')'  */
#line 15065 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48852 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2394: /* delete_domain_id: ulonglong_num  */
#line 15075 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            uint32 value= (uint32) (yyvsp[0].ulonglong_number);
            if ((yyvsp[0].ulonglong_number) > UINT_MAX32)
            {
              my_printf_error(ER_BINLOG_CANT_DELETE_GTID_DOMAIN,
                              "The value of gtid domain being deleted ('%llu') "
                              "exceeds its maximum size "
                              "of 32 bit unsigned integer", MYF(0), (yyvsp[0].ulonglong_number));
              MYSQL_YYABORT;
            }
            insert_dynamic(&Lex->delete_gtid_domain, (uchar*) &value);
          }
#line 48869 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2395: /* optional_flush_tables_arguments: %empty  */
#line 15090 "/home/buildbot/git/sql/sql_yacc.yy"
                             {(yyval.num)= 0;}
#line 48875 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2396: /* optional_flush_tables_arguments: AND_SYM DISABLE_SYM CHECKPOINT_SYM  */
#line 15091 "/home/buildbot/git/sql/sql_yacc.yy"
                                             {(yyval.num)= REFRESH_CHECKPOINT; }
#line 48881 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2397: /* $@212: %empty  */
#line 15096 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 48890 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2398: /* reset: RESET_SYM $@212 reset_options  */
#line 15101 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 48896 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2401: /* $@213: %empty  */
#line 15110 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_SLAVE; }
#line 48902 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2402: /* reset_option: SLAVE $@213 optional_connection_name slave_reset_options optional_for_channel  */
#line 15113 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 48908 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2403: /* $@214: %empty  */
#line 15115 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             Lex->type|= REFRESH_MASTER;
             Lex->next_binlog_file_number= 0;
          }
#line 48917 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2405: /* reset_option: QUERY_SYM CACHE_SYM  */
#line 15120 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->type|= REFRESH_QUERY_CACHE;}
#line 48923 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2406: /* slave_reset_options: %empty  */
#line 15124 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= false; }
#line 48929 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2407: /* slave_reset_options: ALL  */
#line 15125 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->reset_slave_info.all= true; }
#line 48935 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2408: /* master_reset_options: %empty  */
#line 15129 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 48941 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2409: /* master_reset_options: TO_SYM ulong_num  */
#line 15131 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->next_binlog_file_number = (yyvsp[0].ulong_num);
          }
#line 48949 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2410: /* purge: PURGE master_or_binary LOGS_SYM TO_SYM TEXT_STRING_sys  */
#line 15138 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_purge_to((yyvsp[0].lex_str));
          }
#line 48957 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2411: /* $@215: %empty  */
#line 15142 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->clause_that_disallows_subselect= "PURGE..BEFORE"; }
#line 48963 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2412: /* purge: PURGE master_or_binary LOGS_SYM BEFORE_SYM $@215 expr  */
#line 15144 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->clause_that_disallows_subselect= NULL;
            if (Lex->stmt_purge_before((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 48973 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2413: /* $@216: %empty  */
#line 15156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->value_list.empty();
            lex->users_list.empty();
            lex->sql_command= SQLCOM_KILL;
            lex->kill_type= KILL_TYPE_ID;
            thd->where= THD_WHERE::USE_WHERE_STRING;
            thd->where_str= "KILL";
          }
#line 48987 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2414: /* kill: KILL_SYM $@216 kill_type kill_option  */
#line 15166 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->kill_signal= (killed_state) ((yyvsp[-1].num) | (yyvsp[0].num));
          }
#line 48995 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2415: /* kill_type: %empty  */
#line 15172 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 49001 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2416: /* kill_type: HARD_SYM  */
#line 15173 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= (int) KILL_HARD_BIT; }
#line 49007 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2417: /* kill_type: SOFT_SYM  */
#line 15174 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 49013 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2418: /* kill_option: opt_connection kill_expr  */
#line 15178 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_CONNECTION; }
#line 49019 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2419: /* kill_option: QUERY_SYM kill_expr  */
#line 15179 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.num)= (int) KILL_QUERY; }
#line 49025 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2420: /* kill_option: QUERY_SYM ID_SYM expr  */
#line 15181 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (int) KILL_QUERY;
            Lex->kill_type= KILL_TYPE_QUERY;
            Lex->value_list.push_front((yyvsp[0].item), thd->mem_root);
          }
#line 49035 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2421: /* opt_connection: %empty  */
#line 15189 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 49041 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2422: /* opt_connection: CONNECTION_SYM  */
#line 15190 "/home/buildbot/git/sql/sql_yacc.yy"
                         { }
#line 49047 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2423: /* kill_expr: expr  */
#line 15195 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->value_list.push_front((yyval.item), thd->mem_root);
         }
#line 49055 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2424: /* kill_expr: USER_SYM user  */
#line 15199 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root);
            Lex->kill_type= KILL_TYPE_USER;
          }
#line 49064 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2425: /* $@217: %empty  */
#line 15206 "/home/buildbot/git/sql/sql_yacc.yy"
                 { Lex->sql_command= SQLCOM_SHUTDOWN; }
#line 49070 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2426: /* shutdown: SHUTDOWN $@217 shutdown_option  */
#line 15207 "/home/buildbot/git/sql/sql_yacc.yy"
                        {}
#line 49076 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2427: /* shutdown_option: %empty  */
#line 15211 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->is_shutdown_wait_for_slaves= false; }
#line 49082 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2428: /* shutdown_option: WAIT_SYM FOR_SYM ALL SLAVES  */
#line 15213 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          Lex->is_shutdown_wait_for_slaves= true;
        }
#line 49090 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2429: /* use: USE_SYM ident  */
#line 15222 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->first_select_lex()->db= (yyvsp[0].ident_sys);
          }
#line 49100 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2430: /* $@218: %empty  */
#line 15233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;

            if (unlikely(lex->sphead))
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), 
                       (yyvsp[0].filetype) == FILETYPE_CSV ? "LOAD DATA" : "LOAD XML");
              MYSQL_YYABORT;
            }
            if (lex->main_select_push())
              MYSQL_YYABORT;
            lex->init_select();
          }
#line 49118 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2431: /* $@219: %empty  */
#line 15247 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_LOAD;
            lex->local_file=  (yyvsp[-2].num);
            lex->duplicates= DUP_ERROR;
            lex->ignore= 0;
            if (unlikely(!(lex->exchange= new (thd->mem_root)
                         sql_exchange((yyvsp[0].lex_str).str, 0, (yyvsp[-5].filetype)))))
              MYSQL_YYABORT;
          }
#line 49133 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2432: /* $@220: %empty  */
#line 15258 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (unlikely(!Select->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                   TL_OPTION_UPDATING,
                                                   (yyvsp[-9].lock_type), MDL_SHARED_WRITE,
                                                   NULL, (yyvsp[0].string_list))))
              MYSQL_YYABORT;
            lex->field_list.empty();
            lex->update_list.empty();
            lex->value_list.empty();
            lex->many_values.empty();
          }
#line 49150 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2433: /* $@221: %empty  */
#line 15271 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->cs= (yyvsp[0].charset); }
#line 49156 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2434: /* load: LOAD data_or_xml $@218 load_data_lock opt_local INFILE TEXT_STRING_filesystem $@219 opt_duplicate INTO TABLE_SYM table_ident opt_use_partition $@220 opt_load_data_charset $@221 opt_xml_rows_identified_by opt_field_term opt_line_term opt_ignore_lines opt_field_or_var_spec opt_load_data_set_spec stmt_end  */
#line 15276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->mark_first_table_as_inserting();
          }
#line 49164 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2435: /* data_or_xml: DATA_SYM  */
#line 15282 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_CSV; }
#line 49170 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2436: /* data_or_xml: XML_SYM  */
#line 15283 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.filetype)= FILETYPE_XML; }
#line 49176 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2437: /* opt_local: %empty  */
#line 15287 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=0;}
#line 49182 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2438: /* opt_local: LOCAL_SYM  */
#line 15288 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1;}
#line 49188 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2439: /* load_data_lock: %empty  */
#line 15292 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 49194 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2440: /* load_data_lock: CONCURRENT  */
#line 15294 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              Ignore this option in SP to avoid problem with query cache and
              triggers with non default priority locks
            */
            (yyval.lock_type)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 49206 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2441: /* load_data_lock: LOW_PRIORITY  */
#line 15301 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 49212 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2442: /* opt_duplicate: %empty  */
#line 15305 "/home/buildbot/git/sql/sql_yacc.yy"
                      { Lex->duplicates=DUP_ERROR; }
#line 49218 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2443: /* opt_duplicate: REPLACE  */
#line 15306 "/home/buildbot/git/sql/sql_yacc.yy"
                  { Lex->duplicates=DUP_REPLACE; }
#line 49224 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2444: /* opt_duplicate: IGNORE_SYM  */
#line 15307 "/home/buildbot/git/sql/sql_yacc.yy"
                     { Lex->ignore= 1; }
#line 49230 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2449: /* field_term: TERMINATED BY text_string  */
#line 15322 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->field_term= (yyvsp[0].string);
          }
#line 49239 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2450: /* field_term: OPTIONALLY ENCLOSED BY text_string  */
#line 15327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            DBUG_ASSERT(lex->exchange != 0);
            lex->exchange->enclosed= (yyvsp[0].string);
            lex->exchange->opt_enclosed= 1;
          }
#line 49250 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2451: /* field_term: ENCLOSED BY text_string  */
#line 15334 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->enclosed= (yyvsp[0].string);
          }
#line 49259 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2452: /* field_term: ESCAPED BY text_string  */
#line 15339 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->escaped= (yyvsp[0].string);
          }
#line 49268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2457: /* line_term: TERMINATED BY text_string  */
#line 15357 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_term= (yyvsp[0].string);
          }
#line 49277 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2458: /* line_term: STARTING BY text_string  */
#line 15362 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->line_start= (yyvsp[0].string);
          }
#line 49286 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2459: /* opt_xml_rows_identified_by: %empty  */
#line 15369 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 49292 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2460: /* opt_xml_rows_identified_by: ROWS_SYM IDENTIFIED_SYM BY text_string  */
#line 15371 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->exchange->line_term = (yyvsp[0].string); }
#line 49298 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2462: /* opt_ignore_lines: IGNORE_SYM NUM lines_or_rows  */
#line 15377 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            DBUG_ASSERT(Lex->exchange != 0);
            Lex->exchange->skip_lines= atol((yyvsp[-1].lex_str).str);
          }
#line 49307 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2463: /* lines_or_rows: LINES  */
#line 15384 "/home/buildbot/git/sql/sql_yacc.yy"
                { }
#line 49313 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2464: /* lines_or_rows: ROWS_SYM  */
#line 15385 "/home/buildbot/git/sql/sql_yacc.yy"
                   { }
#line 49319 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2465: /* opt_field_or_var_spec: %empty  */
#line 15389 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 49325 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2466: /* opt_field_or_var_spec: '(' fields_or_vars ')'  */
#line 15390 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 49331 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2467: /* opt_field_or_var_spec: '(' ')'  */
#line 15391 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 49337 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2468: /* fields_or_vars: fields_or_vars ',' field_or_var  */
#line 15396 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 49343 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2469: /* fields_or_vars: field_or_var  */
#line 15398 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->field_list.push_back((yyvsp[0].item), thd->mem_root); }
#line 49349 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2470: /* field_or_var: simple_ident_nospvar  */
#line 15402 "/home/buildbot/git/sql/sql_yacc.yy"
                               {(yyval.item)= (yyvsp[0].item);}
#line 49355 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2471: /* field_or_var: '@' ident_or_text  */
#line 15404 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[0].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            (yyval.item)= new (thd->mem_root) Item_user_var_as_out_param(thd, &(yyvsp[0].lex_str));
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 49371 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2472: /* opt_load_data_set_spec: %empty  */
#line 15418 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 49377 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2473: /* opt_load_data_set_spec: SET load_data_set_list  */
#line 15419 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 49383 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2476: /* load_data_set_elem: simple_ident_nospvar equal remember_name expr_or_ignore_or_default remember_end  */
#line 15429 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->update_list.push_back((yyvsp[-4].item), thd->mem_root)) ||
                unlikely(lex->value_list.push_back((yyvsp[-1].item), thd->mem_root)))
                MYSQL_YYABORT;
            (yyvsp[-1].item)->set_name_no_truncate(thd, (yyvsp[-2].simple_string), (uint) ((yyvsp[0].simple_string) - (yyvsp[-2].simple_string)), thd->charset());
          }
#line 49395 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2477: /* text_literal: TEXT_STRING  */
#line 15442 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 49404 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2478: /* text_literal: NCHAR_STRING  */
#line 15447 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_nchar((yyvsp[0].lex_string_with_metadata)))))
              MYSQL_YYABORT;
          }
#line 49413 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2479: /* text_literal: UNDERSCORE_CHARSET TEXT_STRING  */
#line 15452 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            if (unlikely(!((yyval.item_basic_constant)= thd->make_string_literal_charset((yyvsp[0].lex_string_with_metadata), (yyvsp[-1].charset)))))
              MYSQL_YYABORT;
          }
#line 49424 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2480: /* text_literal: text_literal TEXT_STRING_literal  */
#line 15459 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_basic_constant)= (yyvsp[-1].item_basic_constant)->make_string_literal_concat(thd, &(yyvsp[0].lex_str)))))
              MYSQL_YYABORT;
          }
#line 49433 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2481: /* text_string: TEXT_STRING_literal  */
#line 15467 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.string)= new (thd->mem_root) String((const char*) (yyvsp[0].lex_str).str,
                                           (yyvsp[0].lex_str).length,
                                           thd->variables.collation_connection);
            if (unlikely((yyval.string) == NULL))
              MYSQL_YYABORT;
          }
#line 49445 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2482: /* text_string: hex_or_bin_String  */
#line 15474 "/home/buildbot/git/sql/sql_yacc.yy"
                              { (yyval.string)= (yyvsp[0].string); }
#line 49451 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2483: /* hex_or_bin_String: HEX_NUM  */
#line 15480 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 49463 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2484: /* hex_or_bin_String: HEX_STRING  */
#line 15488 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 49475 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2485: /* hex_or_bin_String: BIN_NUM  */
#line 15496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item *tmp= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str,
                                                           (yyvsp[0].lex_str).length);
            if (unlikely(tmp == NULL))
              MYSQL_YYABORT;
            /*
              it is OK only emulate fix_fields, because we need only
              value of constant
            */
            (yyval.string)= tmp->val_str((String*) 0);
          }
#line 49491 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2486: /* param_marker: PARAM_MARKER  */
#line 15511 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &param_clex_str,
                                                    YYLIP->get_tok_start(),
                                                    YYLIP->get_tok_start() + 1))))
              MYSQL_YYABORT;
          }
#line 49502 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2487: /* param_marker: COLON_ORACLE_SYM ident_cli  */
#line 15518 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(), (yyvsp[0].ident_cli).end()))))
              MYSQL_YYABORT;
          }
#line 49512 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2488: /* param_marker: COLON_ORACLE_SYM NUM  */
#line 15524 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item_param)= Lex->add_placeholder(thd, &null_clex_str,
                                                    (yyvsp[-1].kwd).pos(),
                                                    YYLIP->get_ptr()))))
              MYSQL_YYABORT;
          }
#line 49523 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2489: /* signed_literal: '+' NUM_literal  */
#line 15533 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.item) = (yyvsp[0].item_num); }
#line 49529 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2490: /* signed_literal: '-' NUM_literal  */
#line 15535 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg(thd);
          }
#line 49538 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2491: /* literal: text_literal  */
#line 15542 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.item) = (yyvsp[0].item_basic_constant); }
#line 49544 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2492: /* literal: NUM_literal  */
#line 15543 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.item) = (yyvsp[0].item_num); }
#line 49550 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2493: /* literal: temporal_literal  */
#line 15544 "/home/buildbot/git/sql/sql_yacc.yy"
                           { (yyval.item)= (yyvsp[0].item); }
#line 49556 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2494: /* literal: NULL_SYM  */
#line 15546 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            YYLIP->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= new (thd->mem_root) Item_null(thd);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
            YYLIP->next_state= MY_LEX_OPERATOR_OR_IDENT;
          }
#line 49574 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2495: /* literal: FALSE_SYM  */
#line 15560 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "FALSE",0);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 49584 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2496: /* literal: TRUE_SYM  */
#line 15566 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bool(thd, (char*) "TRUE",1);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 49594 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2497: /* literal: HEX_NUM  */
#line 15572 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_hybrid(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 49604 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2498: /* literal: HEX_STRING  */
#line 15578 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_hex_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 49614 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2499: /* literal: BIN_NUM  */
#line 15584 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item)= new (thd->mem_root) Item_bin_string(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item) == NULL))
              MYSQL_YYABORT;
          }
#line 49624 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2500: /* literal: UNDERSCORE_CHARSET hex_or_bin_String  */
#line 15590 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Item_string_with_introducer *item_str;
            LEX_CSTRING tmp;
            (yyvsp[0].string)->get_value(&tmp);
            (yyvsp[-1].charset)= thd->variables.character_set_collations.
                                 get_collation_for_charset(thd, (yyvsp[-1].charset));
            /*
              Pass NULL as name. Name will be set in the "select_item" rule and
              will include the introducer and the original hex/bin notation.
            */
            item_str= new (thd->mem_root)
               Item_string_with_introducer(thd, null_clex_str,
                                           tmp, (yyvsp[-1].charset));
            if (unlikely(!item_str ||
                         !item_str->check_well_formed_result(true)))
              MYSQL_YYABORT;

            (yyval.item)= item_str;
          }
#line 49648 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2501: /* NUM_literal: NUM  */
#line 15613 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 49662 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2502: /* NUM_literal: LONG_NUM  */
#line 15623 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            int error;
            (yyval.item_num)= new (thd->mem_root)
                  Item_int(thd, (yyvsp[0].lex_str).str,
                           (longlong) my_strtoll10((yyvsp[0].lex_str).str, NULL, &error),
                           (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 49676 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2503: /* NUM_literal: ULONGLONG_NUM  */
#line 15633 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_uint(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL))
              MYSQL_YYABORT;
          }
#line 49686 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2504: /* NUM_literal: DECIMAL_NUM  */
#line 15639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_decimal(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length,
                                                   thd->charset());
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 49697 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2505: /* NUM_literal: FLOAT_NUM  */
#line 15646 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.item_num)= new (thd->mem_root) Item_float(thd, (yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
            if (unlikely((yyval.item_num) == NULL) || unlikely(thd->is_error()))
              MYSQL_YYABORT;
          }
#line 49707 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2506: /* temporal_literal: DATE_SYM TEXT_STRING  */
#line 15656 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_newdate.create_literal_item(thd,
                                                           (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                           YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 49718 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2507: /* temporal_literal: TIME_SYM TEXT_STRING  */
#line 15663 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_time2.create_literal_item(thd,
                                                         (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                         YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 49729 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2508: /* temporal_literal: TIMESTAMP TEXT_STRING  */
#line 15670 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= type_handler_datetime.create_literal_item(thd,
                                                            (yyvsp[0].lex_string_with_metadata).str, (yyvsp[0].lex_string_with_metadata).length,
                                                            YYCSCL, true))))
              MYSQL_YYABORT;
          }
#line 49740 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2509: /* $@222: %empty  */
#line 15680 "/home/buildbot/git/sql/sql_yacc.yy"
          {
             LEX *lex= Lex;
             With_clause *with_clause=
             new With_clause((yyvsp[0].num), Lex->curr_with_clause);
             if (unlikely(with_clause == NULL))
               MYSQL_YYABORT;
             lex->derived_tables|= DERIVED_WITH;
             lex->with_cte_resolution= true;
             lex->curr_with_clause= with_clause;
             with_clause->add_to_list(&lex->with_clauses_list,
                                      lex->with_clauses_list_last_next);
             if (lex->current_select &&
                 lex->current_select->parsing_place == BEFORE_OPT_LIST)
               lex->current_select->parsing_place= NO_MATTER;
          }
#line 49760 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2510: /* with_clause: WITH opt_recursive $@222 with_list  */
#line 15696 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_clause)= Lex->curr_with_clause;
            Lex->curr_with_clause= Lex->curr_with_clause->pop();
          }
#line 49769 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2511: /* opt_recursive: %empty  */
#line 15704 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)= 0; }
#line 49775 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2512: /* opt_recursive: RECURSIVE_SYM  */
#line 15705 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.num)= 1; }
#line 49781 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2516: /* with_list_element: with_element_head with_column_list AS '(' query_expression ')' opt_cycle  */
#line 15722 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            const char *query_start= lex->sphead ? lex->sphead->m_tmp_query
                                                 : thd->query();
            const char *spec_start= (yyvsp[-3].kwd).pos() + 1;
            With_element *elem= new With_element((yyvsp[-6].with_element_head), *(yyvsp[-5].ident_sys_list), (yyvsp[-2].select_lex_unit));
	    if (elem == NULL || Lex->curr_with_clause->add_with_element(elem))
	      MYSQL_YYABORT;
            if (elem->set_unparsed_spec(thd, spec_start, (yyvsp[-1].kwd).pos(),
                                        spec_start - query_start))
              MYSQL_YYABORT;
            if ((yyvsp[0].ident_sys_list))
            {
              elem->set_cycle_list((yyvsp[0].ident_sys_list));
            }
            elem->set_tables_end_pos(lex->query_tables_last);
	  }
#line 49803 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2517: /* opt_cycle: %empty  */
#line 15743 "/home/buildbot/git/sql/sql_yacc.yy"
         { (yyval.ident_sys_list)= NULL; }
#line 49809 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2518: /* $@223: %empty  */
#line 15746 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if (!Lex->curr_with_clause->with_recursive)
           {
             thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[0].kwd).pos());
           }
         }
#line 49820 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2519: /* opt_cycle: CYCLE_SYM $@223 comma_separated_ident_list RESTRICT  */
#line 15753 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list);
         }
#line 49828 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2520: /* opt_column_name_list: %empty  */
#line 15760 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>) == NULL)
              MYSQL_YYABORT;
          }
#line 49837 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2521: /* opt_column_name_list: '(' comma_separated_ident_list ')'  */
#line 15765 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.ident_sys_list)= (yyvsp[-1].ident_sys_list); }
#line 49843 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2522: /* ident_sys_alloc: ident_cli  */
#line 15770 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_ptr)= new (thd->mem_root) Lex_ident_sys(thd, &(yyvsp[0].ident_cli));
          }
#line 49851 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2523: /* comma_separated_ident_list: ident_sys_alloc  */
#line 15777 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.ident_sys_list)= new (thd->mem_root) List<Lex_ident_sys>;
            if (unlikely((yyval.ident_sys_list) == NULL || (yyval.ident_sys_list)->push_back((yyvsp[0].ident_sys_ptr))))
              MYSQL_YYABORT;
	  }
#line 49861 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2524: /* comma_separated_ident_list: comma_separated_ident_list ',' ident_sys_alloc  */
#line 15783 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.ident_sys_list)= (yyvsp[-2].ident_sys_list))->push_back((yyvsp[0].ident_sys_ptr)))
              MYSQL_YYABORT;
          }
#line 49870 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2525: /* with_element_head: ident  */
#line 15792 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.with_element_head)= new (thd->mem_root) With_element_head(
                                      Lex_ident_with_element((yyvsp[0].ident_sys)));
            if (unlikely((yyval.with_element_head) == NULL))
              MYSQL_YYABORT;
            (yyval.with_element_head)->tables_pos.set_start_pos(Lex->query_tables_last);
          }
#line 49882 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2526: /* insert_ident: simple_ident_nospvar  */
#line 15808 "/home/buildbot/git/sql/sql_yacc.yy"
                               { (yyval.item)=(yyvsp[0].item); }
#line 49888 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2527: /* insert_ident: table_wild  */
#line 15809 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.item)=(yyvsp[0].item); }
#line 49894 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2528: /* table_wild: ident '.' '*'  */
#line 15814 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49903 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2529: /* table_wild: ident '.' ident '.' '*'  */
#line 15819 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49912 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2530: /* select_sublist_qualified_asterisk: ident_cli '.' '*'  */
#line 15827 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49921 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2531: /* select_sublist_qualified_asterisk: ident_cli '.' ident_cli '.' '*'  */
#line 15832 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_qualified_asterisk(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49930 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2532: /* order_ident: expr  */
#line 15839 "/home/buildbot/git/sql/sql_yacc.yy"
               { (yyval.item)=(yyvsp[0].item); }
#line 49936 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2533: /* simple_ident: ident_cli  */
#line 15845 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49945 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2534: /* simple_ident: ident_cli '.' ident_cli  */
#line 15850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49954 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2535: /* simple_ident: '.' ident_cli '.' ident_cli  */
#line 15855 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_cli empty((yyvsp[-2].ident_cli).pos(), 0);
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &empty, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49964 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2536: /* simple_ident: ident_cli '.' ident_cli '.' ident_cli  */
#line 15861 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_cli), &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49973 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2537: /* simple_ident: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15866 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 49982 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2538: /* simple_ident_nospvar: ident  */
#line 15874 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nosp(thd, &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 49991 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2539: /* simple_ident_nospvar: ident '.' ident  */
#line 15879 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident_nospvar(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 50000 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2540: /* simple_ident_nospvar: COLON_ORACLE_SYM ident_cli '.' ident_cli  */
#line 15884 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->make_item_colon_ident_ident(thd, &(yyvsp[-2].ident_cli), &(yyvsp[0].ident_cli)))))
              MYSQL_YYABORT;
          }
#line 50009 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2541: /* simple_ident_nospvar: '.' ident '.' ident  */
#line 15889 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys none;
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &none, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 50019 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2542: /* simple_ident_nospvar: ident '.' ident '.' ident  */
#line 15895 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.item)= Lex->create_item_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys)))))
              MYSQL_YYABORT;
          }
#line 50028 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2543: /* field_ident: ident  */
#line 15902 "/home/buildbot/git/sql/sql_yacc.yy"
                { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 50034 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2544: /* field_ident: ident '.' ident '.' ident  */
#line 15904 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(!table->db.streq((yyvsp[-4].ident_sys))))
              my_yyabort_error((ER_WRONG_DB_NAME, MYF(0), (yyvsp[-4].ident_sys).str));
            if (unlikely(!table->table_name.streq((yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 50047 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2545: /* field_ident: ident '.' ident  */
#line 15913 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            TABLE_LIST *table= Select->table_list.first;
            if (unlikely(!table->alias.streq((yyvsp[-2].ident_sys))))
              my_yyabort_error((ER_WRONG_TABLE_NAME, MYF(0), (yyvsp[-2].ident_sys).str));
            (yyval.lex_str)=(yyvsp[0].ident_sys);
          }
#line 50058 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2546: /* field_ident: '.' ident  */
#line 15919 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 50064 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2547: /* table_ident: ident  */
#line 15924 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 50074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2548: /* table_ident: ident '.' ident  */
#line 15930 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 50084 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2549: /* table_ident: '.' ident  */
#line 15936 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /* For Delphi */
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[0].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 50095 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2550: /* table_ident_opt_wild: ident opt_wild  */
#line 15946 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(&(yyvsp[-1].ident_sys));
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 50105 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2551: /* table_ident_opt_wild: ident '.' ident opt_wild  */
#line 15952 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &(yyvsp[-3].ident_sys), &(yyvsp[-1].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 50115 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2552: /* table_ident_nodb: ident  */
#line 15961 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db= any_db;
            (yyval.table)= new (thd->mem_root) Table_ident(thd, &db, &(yyvsp[0].ident_sys), 0);
            if (unlikely((yyval.table) == NULL))
              MYSQL_YYABORT;
          }
#line 50126 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2557: /* ident_cli: keyword_ident  */
#line 15977 "/home/buildbot/git/sql/sql_yacc.yy"
                        { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 50132 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2558: /* IDENT_sys: IDENT_cli  */
#line 15982 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 50141 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2561: /* ident_cli_func: keyword_func_sp_var_and_label  */
#line 15991 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 50147 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2562: /* ident_cli_func: keyword_func_sp_var_not_label  */
#line 15992 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 50153 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2563: /* ident_func: ident_cli_func  */
#line 15997 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->to_ident_sys_alloc(&(yyval.ident_sys), &(yyvsp[0].ident_cli))))
              MYSQL_YYABORT;
          }
#line 50162 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2564: /* TEXT_STRING_sys: TEXT_STRING  */
#line 16006 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_sys(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 50171 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2565: /* TEXT_STRING_literal: TEXT_STRING  */
#line 16014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_connection(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 50180 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2566: /* TEXT_STRING_filesystem: TEXT_STRING  */
#line 16022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (thd->make_text_string_filesystem(&(yyval.lex_str), &(yyvsp[0].lex_string_with_metadata)))
              MYSQL_YYABORT;
          }
#line 50189 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2568: /* ident_table_alias: keyword_table_alias  */
#line 16031 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 50198 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2569: /* ident_cli_set_usual_case: IDENT_cli  */
#line 16038 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.ident_cli)= (yyvsp[0].ident_cli); }
#line 50204 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2570: /* ident_cli_set_usual_case: keyword_set_usual_case  */
#line 16039 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.ident_cli)= (yyvsp[0].kwd); }
#line 50210 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2572: /* ident_sysvar_name: keyword_sysvar_name  */
#line 16045 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 50219 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2573: /* ident_sysvar_name: TEXT_STRING_sys  */
#line 16050 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_sys(thd, &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 50228 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2575: /* ident: keyword_ident  */
#line 16060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 50237 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2577: /* label_ident: keyword_label  */
#line 16069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyval.ident_sys).copy_keyword(thd, &(yyvsp[0].kwd))))
              MYSQL_YYABORT;
          }
#line 50246 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2578: /* ident_or_text: ident  */
#line 16076 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].ident_sys);}
#line 50252 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2579: /* ident_or_text: TEXT_STRING_sys  */
#line 16077 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 50258 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2580: /* ident_or_text: LEX_HOSTNAME  */
#line 16078 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.lex_str)=(yyvsp[0].lex_str);}
#line 50264 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2581: /* user_maybe_role: ident_or_text  */
#line 16083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                  system_charset_info, 0)))
              MYSQL_YYABORT;
          }
#line 50279 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2582: /* user_maybe_role: ident_or_text '@' ident_or_text  */
#line 16094 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user = (yyvsp[-2].lex_str); (yyval.lex_user)->host=(yyvsp[0].lex_str);

            if (unlikely(check_string_char_length(&(yyval.lex_user)->user, ER_USERNAME,
                                                  username_char_length,
                                                 system_charset_info, 0)) ||
                unlikely(check_host_name(&(yyval.lex_user)->host)))
              MYSQL_YYABORT;
            if ((yyval.lex_user)->host.str[0])
            {
              (yyval.lex_user)->host= thd->make_ident_casedn((yyval.lex_user)->host);
            }
            else
            {
              /*
                fix historical undocumented convention that empty host is the
                same as '%'
              */
              (yyval.lex_user)->host= host_not_specified;
            }
          }
#line 50307 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2583: /* user_maybe_role: CURRENT_USER optional_braces  */
#line 16118 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_user;
            (yyval.lex_user)->auth= new (thd->mem_root) USER_AUTH();
          }
#line 50318 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 2586: /* user: user_maybe_role  */
#line 16129 "/home/buildbot/git/sql/sql_yacc.yy"
         {
           if ((yyvsp[0].lex_user)->user.str != current_user.str && (yyvsp[0].lex_user)->host.str == 0)
             (yyvsp[0].lex_user)->host= host_not_specified;
           (yyval.lex_user)= (yyvsp[0].lex_user);
         }
#line 50328 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3319: /* $@224: %empty  */
#line 17008 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->set_stmt_init();
          }
#line 50337 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3320: /* set: SET $@224 set_param  */
#line 17013 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 50346 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3323: /* $@225: %empty  */
#line 17023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= OPT_DEFAULT;
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50356 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3324: /* set_param: TRANSACTION_SYM $@225 transaction_characteristics  */
#line 17029 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50365 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3325: /* $@226: %empty  */
#line 17034 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 50373 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3327: /* $@227: %empty  */
#line 17040 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->table_or_sp_used()))
              my_yyabort_error((ER_SUBQUERIES_NOT_SUPPORTED, MYF(0), "SET STATEMENT"));
            lex->stmt_var_list= lex->var_list;
            lex->var_list.empty();
            if (Lex->check_main_unit_semantics())
              MYSQL_YYABORT;
          }
#line 50387 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3333: /* $@228: %empty  */
#line 17067 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[0].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50396 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3334: /* start_option_value_list_following_option_type: TRANSACTION_SYM $@228 transaction_characteristics  */
#line 17072 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50405 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3337: /* $@229: %empty  */
#line 17087 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->option_type= (yyvsp[0].var_type);
          }
#line 50413 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3340: /* option_type: GLOBAL_SYM  */
#line 17095 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 50419 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3341: /* option_type: LOCAL_SYM  */
#line 17096 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 50425 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3342: /* option_type: SESSION_SYM  */
#line 17097 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 50431 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3343: /* opt_var_type: %empty  */
#line 17101 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 50437 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3344: /* opt_var_type: GLOBAL_SYM  */
#line 17102 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_GLOBAL; }
#line 50443 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3345: /* opt_var_type: LOCAL_SYM  */
#line 17103 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 50449 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3346: /* opt_var_type: SESSION_SYM  */
#line 17104 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.var_type)=OPT_SESSION; }
#line 50455 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3347: /* opt_var_ident_type: %empty  */
#line 17108 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_DEFAULT; }
#line 50461 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3348: /* opt_var_ident_type: GLOBAL_SYM '.'  */
#line 17109 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_GLOBAL; }
#line 50467 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3349: /* opt_var_ident_type: LOCAL_SYM '.'  */
#line 17110 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 50473 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3350: /* opt_var_ident_type: SESSION_SYM '.'  */
#line 17111 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.var_type)=OPT_SESSION; }
#line 50479 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3351: /* $@230: %empty  */
#line 17120 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 50488 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3352: /* set_stmt_option: ident_cli equal $@230 set_expr_or_default  */
#line 17125 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp,
                                                  (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 50501 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3353: /* $@231: %empty  */
#line 17134 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 50510 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3354: /* set_stmt_option: ident_cli '.' ident equal $@231 set_expr_or_default  */
#line 17139 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type,
                         &tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 50523 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3355: /* $@232: %empty  */
#line 17148 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push(false))
              MYSQL_YYABORT;
          }
#line 50532 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3356: /* set_stmt_option: DEFAULT '.' ident equal $@232 set_expr_or_default  */
#line 17153 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            Lex->pop_select(); //min select
          }
#line 50543 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3357: /* $@233: %empty  */
#line 17165 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 50552 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3358: /* option_value_following_option_type: ident_cli equal $@233 set_expr_or_default  */
#line 17170 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(Lex->option_type, &tmp,
                                                  (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50565 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3359: /* $@234: %empty  */
#line 17179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 50574 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3360: /* option_value_following_option_type: ident_cli '.' ident equal $@234 set_expr_or_default  */
#line 17184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));
            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_system_variable(thd, Lex->option_type, &tmp,
                                                  &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50587 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3361: /* $@235: %empty  */
#line 17193 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50596 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3362: /* option_value_following_option_type: DEFAULT '.' ident equal $@235 set_expr_or_default  */
#line 17198 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50607 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3363: /* $@236: %empty  */
#line 17209 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 50616 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3364: /* option_value_no_option_type: ident_cli_set_usual_case equal $@236 set_expr_or_default  */
#line 17214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50629 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3365: /* $@237: %empty  */
#line 17223 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].ident_cli).pos()))
              MYSQL_YYABORT;
          }
#line 50638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3366: /* option_value_no_option_type: ident_cli_set_usual_case '.' ident equal $@237 set_expr_or_default  */
#line 17228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-5].ident_cli));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50651 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3367: /* $@238: %empty  */
#line 17237 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-3].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50660 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3368: /* option_value_no_option_type: DEFAULT '.' ident equal $@238 set_expr_or_default  */
#line 17242 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable(Lex->option_type,
                                                          &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)))
              MYSQL_YYABORT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50672 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3369: /* $@239: %empty  */
#line 17250 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!(yyvsp[-1].lex_str).length)
            {
              thd->parse_error();
              MYSQL_YYABORT;
            }

            if (sp_create_assignment_lex(thd, (yyvsp[-2].lex_str).str))
              MYSQL_YYABORT;
          }
#line 50687 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3370: /* option_value_no_option_type: '@' ident_or_text equal $@239 remember_cpp_ptr expr remember_end  */
#line 17261 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }
            if (unlikely(Lex->set_user_variable(thd, &(yyvsp[-5].lex_str), (yyvsp[-1].item))) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50705 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3371: /* $@240: %empty  */
#line 17275 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].lex_str).str))
              MYSQL_YYABORT;
          }
#line 50714 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3372: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name equal $@240 set_expr_or_default  */
#line 17280 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable((yyvsp[-4].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50724 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3373: /* $@241: %empty  */
#line 17286 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 50733 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3374: /* option_value_no_option_type: '@' '@' opt_var_ident_type ident_sysvar_name '.' ident equal $@241 set_expr_or_default  */
#line 17291 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_system_variable(thd, (yyvsp[-6].var_type), &(yyvsp[-5].ident_sys), &(yyvsp[-3].ident_sys),
                                                  (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50744 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3375: /* $@242: %empty  */
#line 17298 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-6].lex_str).str))
              MYSQL_YYABORT;
          }
#line 50753 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3376: /* option_value_no_option_type: '@' '@' opt_var_ident_type DEFAULT '.' ident equal $@242 set_expr_or_default  */
#line 17303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->set_default_system_variable((yyvsp[-6].var_type), &(yyvsp[-3].ident_sys), (yyvsp[0].expr_and_query_str).expr)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50763 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3377: /* option_value_no_option_type: charset old_or_new_charset_name_or_default  */
#line 17309 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex= thd->lex;
            CHARSET_INFO *cs2;
            cs2= (yyvsp[0].charset) ? (yyvsp[0].charset): global_system_variables.character_set_client;
            set_var_collation_client *var;
            var= (new (thd->mem_root)
                  set_var_collation_client(cs2,
                                           thd->variables.collation_database,
                                            cs2));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            lex->var_list.push_back(var, thd->mem_root);
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50785 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3378: /* option_value_no_option_type: NAMES_SYM equal expr  */
#line 17327 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            sp_pcontext *spc= lex->spcont;
            LEX_CSTRING names= { STRING_WITH_LEN("names") };
            if (unlikely(spc && spc->find_variable(&names, false)))
              my_error(ER_SP_BAD_VAR_SHADOW, MYF(0), names.str);
            else
              thd->parse_error();
            MYSQL_YYABORT;
          }
#line 50800 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3379: /* option_value_no_option_type: NAMES_SYM charset_name_or_default  */
#line 17338 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_names((yyvsp[-1].kwd).pos(), (yyvsp[0].charset),
                               Lex_extended_collation_st::collate_default(),
                               yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 50811 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3380: /* option_value_no_option_type: NAMES_SYM charset_name_or_default COLLATE_SYM collation_name_or_default  */
#line 17346 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->set_names((yyvsp[-3].kwd).pos(), (yyvsp[-2].charset), (yyvsp[0].Lex_extended_collation), yychar == YYEMPTY))
              MYSQL_YYABORT;
          }
#line 50820 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3381: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role  */
#line 17351 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-2].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            LEX_USER *user;
            if (unlikely(!(user= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            user->user= current_user;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role(user,
                                                             (yyvsp[0].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;

            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50846 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3382: /* option_value_no_option_type: DEFAULT ROLE_SYM grant_role FOR_SYM user  */
#line 17373 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-4].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_default_role *var= (new (thd->mem_root)
                                        set_var_default_role((yyvsp[0].lex_user), (yyvsp[-2].lex_user)->user));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
            thd->lex->autocommit= TRUE;
            if (lex->sphead)
              lex->sphead->m_flags|= sp_head::HAS_SET_AUTOCOMMIT_STMT;
            if (unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3383: /* option_value_no_option_type: ROLE_SYM role_name  */
#line 17389 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
            LEX *lex = Lex;
            set_var_role *var= new (thd->mem_root) set_var_role((yyvsp[0].lex_user)->user);
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50881 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3384: /* $@243: %empty  */
#line 17400 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50890 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3385: /* option_value_no_option_type: ROLE_SYM equal $@243 set_expr_or_default  */
#line 17405 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex_ident_sys tmp(thd, &(yyvsp[-3].kwd));

            if (unlikely(!tmp.str) ||
                unlikely(Lex->set_variable(&tmp, (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)) ||
                unlikely(sp_create_assignment_instr(thd, yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50903 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3386: /* $@244: %empty  */
#line 17414 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50912 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3387: /* option_value_no_option_type: PASSWORD_SYM equal $@244 text_or_password  */
#line 17419 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50922 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3388: /* $@245: %empty  */
#line 17425 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (sp_create_assignment_lex(thd, (yyvsp[-1].kwd).pos()))
              MYSQL_YYABORT;
          }
#line 50931 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3389: /* option_value_no_option_type: PASSWORD_SYM FOR_SYM $@245 user equal text_or_password  */
#line 17430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_create_set_password_instr(thd, (yyvsp[-2].lex_user), (yyvsp[0].user_auth),
                                                           yychar == YYEMPTY)))
              MYSQL_YYABORT;
          }
#line 50941 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3394: /* transaction_access_mode: transaction_access_mode_types  */
#line 17446 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].num));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "transaction_read_only"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL))
              MYSQL_YYABORT;
            if (unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50961 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3395: /* isolation_level: ISOLATION LEVEL_SYM isolation_types  */
#line 17465 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            Item *item= new (thd->mem_root) Item_int(thd, (int32) (yyvsp[0].tx_isolation));
            if (unlikely(item == NULL))
              MYSQL_YYABORT;
            set_var *var= (new (thd->mem_root)
                           set_var(thd, lex->option_type,
                                   find_sys_var(thd, "transaction_isolation"),
                                   &null_clex_str,
                                   item));
            if (unlikely(var == NULL) ||
                unlikely(lex->var_list.push_back(var, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 50980 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3396: /* transaction_access_mode_types: READ_SYM ONLY_SYM  */
#line 17482 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.num)= true; }
#line 50986 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3397: /* transaction_access_mode_types: READ_SYM WRITE_SYM  */
#line 17483 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.num)= false; }
#line 50992 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3398: /* isolation_types: READ_SYM UNCOMMITTED_SYM  */
#line 17487 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 50998 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3399: /* isolation_types: READ_SYM COMMITTED_SYM  */
#line 17488 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 51004 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3400: /* isolation_types: REPEATABLE_SYM READ_SYM  */
#line 17489 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 51010 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3401: /* isolation_types: SERIALIZABLE_SYM  */
#line 17490 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 51016 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3402: /* text_or_password: TEXT_STRING  */
#line 17496 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 51025 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3403: /* text_or_password: PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17501 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
          }
#line 51034 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3404: /* text_or_password: OLD_PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 17506 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= new (thd->mem_root) USER_AUTH();
            (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
            (yyval.user_auth)->auth_str.str= Item_func_password::alloc(thd,
                                   (yyvsp[-1].lex_string_with_metadata).str, (yyvsp[-1].lex_string_with_metadata).length, Item_func_password::OLD);
            (yyval.user_auth)->auth_str.length=  SCRAMBLED_PASSWORD_CHAR_LENGTH_323;
          }
#line 51046 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3405: /* set_expr_or_default: remember_cpp_ptr expr remember_end  */
#line 17517 "/home/buildbot/git/sql/sql_yacc.yy"
          {
	      LEX_CSTRING expr_str= empty_clex_str;

              if (Lex->is_metadata_used())
              {
                expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
                if (expr_str.str == nullptr)
                  MYSQL_YYABORT;
              }

              (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 51063 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3406: /* set_expr_or_default: remember_cpp_ptr set_expr_misc remember_end  */
#line 17530 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].item) == nullptr))
              MYSQL_YYABORT;
            (yyval.expr_and_query_str)= {(yyvsp[-1].item), empty_clex_str};
          }
#line 51073 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3407: /* set_expr_or_default: remember_cpp_ptr DEFAULT remember_end  */
#line 17536 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.expr_and_query_str)= { nullptr, empty_clex_str };
          }
#line 51081 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3408: /* set_expr_misc: ON  */
#line 17542 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "ON",  2); }
#line 51087 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3409: /* set_expr_misc: ALL  */
#line 17543 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "ALL", 3); }
#line 51093 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3410: /* set_expr_misc: BINARY  */
#line 17544 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.item)= new (thd->mem_root) Item_string_sys(thd, "binary", 6); }
#line 51099 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3411: /* $@246: %empty  */
#line 17551 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "LOCK"));
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 51111 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3412: /* lock: LOCK_SYM table_or_tables $@246 table_lock_list opt_lock_wait_timeout  */
#line 17559 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 51117 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3413: /* opt_lock_wait_timeout: %empty  */
#line 17564 "/home/buildbot/git/sql/sql_yacc.yy"
        {}
#line 51123 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3414: /* opt_lock_wait_timeout: WAIT_SYM ulong_num  */
#line 17566 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), (yyvsp[0].ulong_num))) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), (yyvsp[0].ulong_num))))
            MYSQL_YYABORT;
        }
#line 51133 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3415: /* opt_lock_wait_timeout: NOWAIT_SYM  */
#line 17572 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("lock_wait_timeout"), 0)) ||
              unlikely(set_statement_var_if_exists(thd, STRING_WITH_LEN("innodb_lock_wait_timeout"), 0)))
            MYSQL_YYABORT;
        }
#line 51143 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3416: /* table_or_tables: TABLE_SYM  */
#line 17580 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 51149 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3417: /* table_or_tables: TABLES  */
#line 17581 "/home/buildbot/git/sql/sql_yacc.yy"
                           { }
#line 51155 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3420: /* table_lock: table_ident opt_table_alias_clause lock_option  */
#line 17591 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            bool lock_for_write= (lock_type >= TL_FIRST_WRITE);
            ulong table_options= lock_for_write ? TL_OPTION_UPDATING : 0;
            enum_mdl_type mdl_type= !lock_for_write
                                    ? MDL_SHARED_READ
                                    : lock_type == TL_WRITE_CONCURRENT_INSERT
                                      ? MDL_SHARED_WRITE
                                      : MDL_SHARED_NO_READ_WRITE;

            if (unlikely(!Lex->current_select_or_default()->
                         add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[-1].lex_str_ptr), table_options,
                                           lock_type, mdl_type)))
              MYSQL_YYABORT;
          }
#line 51175 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3421: /* lock_option: READ_SYM  */
#line 17609 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ_NO_INSERT; }
#line 51181 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3422: /* lock_option: WRITE_SYM  */
#line 17610 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_DEFAULT; }
#line 51187 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3423: /* lock_option: WRITE_SYM CONCURRENT  */
#line 17612 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.num)= (Lex->sphead ? TL_WRITE_DEFAULT : TL_WRITE_CONCURRENT_INSERT);
          }
#line 51195 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3424: /* lock_option: LOW_PRIORITY WRITE_SYM  */
#line 17616 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_WRITE_LOW_PRIORITY; }
#line 51201 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3425: /* lock_option: READ_SYM LOCAL_SYM  */
#line 17617 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.num)= TL_READ; }
#line 51207 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3426: /* $@247: %empty  */
#line 17622 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "UNLOCK"));
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 51219 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3427: /* unlock: UNLOCK_SYM $@247 table_or_tables  */
#line 17630 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 51225 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3428: /* $@248: %empty  */
#line 17639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->main_select_push())
              MYSQL_YYABORT;
          }
#line 51234 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3429: /* handler: HANDLER_SYM $@248 handler_tail  */
#line 17644 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->pop_select(); //main select
          }
#line 51242 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3430: /* handler_tail: table_ident OPEN_SYM opt_table_alias_clause  */
#line 17651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_OPEN;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-2].table), (yyvsp[0].lex_str_ptr), 0))
              MYSQL_YYABORT;
          }
#line 51255 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3431: /* handler_tail: table_ident_nodb CLOSE_SYM  */
#line 17660 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->sql_command = SQLCOM_HA_CLOSE;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 51268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3432: /* $@249: %empty  */
#line 17669 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_BADSTATEMENT, MYF(0), "HANDLER"));
            lex->clause_that_disallows_subselect= "HANDLER..READ";
            lex->sql_command = SQLCOM_HA_READ;
            lex->ha_rkey_mode= HA_READ_KEY_EXACT; /* Avoid purify warnings */
            Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
            if (unlikely(one == NULL))
              MYSQL_YYABORT;
            select->limit_params.select_limit= one;
            select->limit_params.offset_limit= 0;
            lex->limit_rows_examined= 0;
            if (!lex->current_select->add_table_to_list(thd, (yyvsp[-1].table), 0, 0))
              MYSQL_YYABORT;
          }
#line 51290 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3433: /* handler_tail: table_ident_nodb READ_SYM $@249 handler_read_or_scan opt_where_clause opt_global_limit_clause  */
#line 17687 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            SELECT_LEX *select= Select;
            lex->clause_that_disallows_subselect= NULL;
            if (!lex->current_select->limit_params.explicit_limit)
            {
              Item *one= new (thd->mem_root) Item_int(thd, (int32) 1);
              if (one == NULL)
                MYSQL_YYABORT;
              select->limit_params.select_limit= one;
              select->limit_params.offset_limit= 0;
              lex->limit_rows_examined= 0;
            }
            /* Stored functions are not supported for HANDLER READ. */
            if (lex->uses_stored_routines())
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0),
                       "stored functions in HANDLER ... READ");
              MYSQL_YYABORT;
            }
          }
#line 51316 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3434: /* handler_read_or_scan: handler_scan_function  */
#line 17711 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= null_clex_str; }
#line 51322 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3435: /* handler_read_or_scan: ident handler_rkey_function  */
#line 17712 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->ident= (yyvsp[-1].ident_sys); }
#line 51328 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3436: /* handler_scan_function: FIRST_SYM  */
#line 17716 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 51334 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3437: /* handler_scan_function: NEXT_SYM  */
#line 17717 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 51340 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3438: /* handler_rkey_function: FIRST_SYM  */
#line 17721 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RFIRST; }
#line 51346 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3439: /* handler_rkey_function: NEXT_SYM  */
#line 17722 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RNEXT;  }
#line 51352 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3440: /* handler_rkey_function: PREV_SYM  */
#line 17723 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RPREV;  }
#line 51358 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3441: /* handler_rkey_function: LAST_SYM  */
#line 17724 "/home/buildbot/git/sql/sql_yacc.yy"
                    { Lex->ha_read_mode = RLAST;  }
#line 51364 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3442: /* $@250: %empty  */
#line 17726 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->ha_read_mode = RKEY;
            lex->ha_rkey_mode=(yyvsp[0].ha_rkey_mode);
            if (unlikely(!(lex->insert_list= new (thd->mem_root) List_item)))
              MYSQL_YYABORT;
          }
#line 51376 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3443: /* handler_rkey_function: handler_rkey_mode $@250 '(' values ')'  */
#line 17734 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 51382 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3444: /* handler_rkey_mode: '='  */
#line 17738 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 51388 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3445: /* handler_rkey_mode: GE  */
#line 17739 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 51394 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3446: /* handler_rkey_mode: LE  */
#line 17740 "/home/buildbot/git/sql/sql_yacc.yy"
                 { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 51400 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3447: /* handler_rkey_mode: '>'  */
#line 17741 "/home/buildbot/git/sql/sql_yacc.yy"
              { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 51406 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3448: /* handler_rkey_mode: '<'  */
#line 17742 "/home/buildbot/git/sql/sql_yacc.yy"
                  { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 51412 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3449: /* revoke: REVOKE clear_privileges revoke_command  */
#line 17749 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 51418 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3450: /* revoke_command: grant_privileges ON opt_table grant_ident FROM user_and_role_list  */
#line 17754 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_table(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident)))
              MYSQL_YYABORT;
          }
#line 51427 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3451: /* revoke_command: grant_privileges ON sp_handler grant_ident FROM user_and_role_list  */
#line 17759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_sp(thd, (yyvsp[-5].lex_grant), *(yyvsp[-2].lex_grant_ident), *(yyvsp[-3].sp_handler)))
              MYSQL_YYABORT;
          }
#line 51436 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3452: /* revoke_command: ALL opt_privileges ',' GRANT OPTION FROM user_and_role_list  */
#line 17764 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
          }
#line 51444 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3453: /* revoke_command: PROXY_SYM ON user FROM user_list  */
#line 17768 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_revoke_proxy(thd, (yyvsp[-2].lex_user)))
              MYSQL_YYABORT;
          }
#line 51453 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3454: /* revoke_command: admin_option_for_role FROM user_and_role_list  */
#line 17773 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_REVOKE_ROLE;
            if (unlikely(Lex->users_list.push_front((yyvsp[-2].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51463 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3455: /* admin_option_for_role: ADMIN_SYM OPTION FOR_SYM grant_role  */
#line 17782 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= true; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 51469 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3456: /* admin_option_for_role: grant_role  */
#line 17784 "/home/buildbot/git/sql/sql_yacc.yy"
        { Lex->with_admin_option= false; (yyval.lex_user)= (yyvsp[0].lex_user); }
#line 51475 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3457: /* grant: GRANT clear_privileges grant_command  */
#line 17789 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 51481 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3458: /* grant_command: grant_privileges ON opt_table grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17795 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_table(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 51490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3459: /* grant_command: grant_privileges ON sp_handler grant_ident TO_SYM grant_list opt_require_clause opt_grant_options  */
#line 17801 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_sp(thd, (yyvsp[-7].lex_grant), *(yyvsp[-4].lex_grant_ident), *(yyvsp[-5].sp_handler), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 51499 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3460: /* grant_command: PROXY_SYM ON user TO_SYM grant_list opt_grant_option  */
#line 17806 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_grant_proxy(thd, (yyvsp[-3].lex_user), (yyvsp[0].privilege)))
              MYSQL_YYABORT;
          }
#line 51508 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3461: /* grant_command: grant_role TO_SYM grant_list opt_with_admin_option  */
#line 17811 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT_ROLE;
            /* The first role is the one that is granted */
            if (unlikely(Lex->users_list.push_front((yyvsp[-3].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51520 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3462: /* opt_with_admin: %empty  */
#line 17822 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = 0; }
#line 51526 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3463: /* opt_with_admin: WITH ADMIN_SYM user_or_role  */
#line 17823 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->definer = (yyvsp[0].lex_user); }
#line 51532 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3464: /* opt_with_admin_option: %empty  */
#line 17827 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= false; }
#line 51538 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3465: /* opt_with_admin_option: WITH ADMIN_SYM OPTION  */
#line 17828 "/home/buildbot/git/sql/sql_yacc.yy"
                                      { Lex->with_admin_option= true; }
#line 51544 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3466: /* role_list: grant_role  */
#line 17833 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51553 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3467: /* role_list: role_list ',' grant_role  */
#line 17838 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 51562 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3468: /* current_role: CURRENT_ROLE optional_braces  */
#line 17846 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
              MYSQL_YYABORT;
            (yyval.lex_user)->user= current_role;
          }
#line 51572 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3469: /* role_name: ident_or_text  */
#line 17855 "/home/buildbot/git/sql/sql_yacc.yy"
           {
             CHARSET_INFO *cs= system_charset_info;
             /* trim end spaces (as they'll be lost in mysql.user anyway) */
             (yyvsp[0].lex_str).length= cs->lengthsp((yyvsp[0].lex_str).str, (yyvsp[0].lex_str).length);
             ((char*) (yyvsp[0].lex_str).str)[(yyvsp[0].lex_str).length] = '\0';
             if (unlikely((yyvsp[0].lex_str).length == 0))
               my_yyabort_error((ER_INVALID_ROLE, MYF(0), ""));
             if (unlikely(!((yyval.lex_user)= thd->calloc<LEX_USER>(1))))
               MYSQL_YYABORT;
             if (lex_string_eq(&(yyvsp[0].lex_str), &none))
               (yyval.lex_user)->user= none;
             else if (lex_string_eq(&(yyvsp[0].lex_str), &public_name))
               (yyval.lex_user)->user= public_name;
             else if (check_string_char_length(&((yyval.lex_user)->user= (yyvsp[0].lex_str)), ER_USERNAME,
                                               username_char_length, cs, 0))
               MYSQL_YYABORT;
             (yyval.lex_user)->host= empty_clex_str;
           }
#line 51595 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3475: /* grant_privileges: ALL opt_privileges  */
#line 17885 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege(GLOBAL_ACLS, true)))
              MYSQL_YYABORT;
          }
#line 51604 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3478: /* object_privilege_list: object_privilege  */
#line 17898 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege((yyvsp[0].privilege))))
              MYSQL_YYABORT;
          }
#line 51613 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3479: /* object_privilege_list: column_list_privilege  */
#line 17903 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant)= new (thd->mem_root) Lex_grant_privilege()) ||
                (yyval.lex_grant)->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                   (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 51624 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3480: /* object_privilege_list: object_privilege_list ',' object_privilege  */
#line 17910 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            ((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_object_privilege((yyvsp[0].privilege));
          }
#line 51632 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3481: /* object_privilege_list: object_privilege_list ',' column_list_privilege  */
#line 17914 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (((yyval.lex_grant)= (yyvsp[-2].lex_grant))->add_column_list_privilege(thd, (yyvsp[0].column_list_privilege).m_columns[0],
                                                         (yyvsp[0].column_list_privilege).m_privilege))
              MYSQL_YYABORT;
          }
#line 51642 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3482: /* column_list_privilege: column_privilege '(' comma_separated_ident_list ')'  */
#line 17923 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.column_list_privilege)= Lex_column_list_privilege((yyvsp[-1].ident_sys_list), (yyvsp[-3].privilege));
          }
#line 51650 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3483: /* column_privilege: SELECT_SYM  */
#line 17929 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 51656 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3484: /* column_privilege: INSERT  */
#line 17930 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 51662 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3485: /* column_privilege: UPDATE_SYM  */
#line 17931 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 51668 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3486: /* column_privilege: REFERENCES  */
#line 17932 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 51674 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3487: /* object_privilege: SELECT_SYM  */
#line 17936 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SELECT_ACL; }
#line 51680 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3488: /* object_privilege: INSERT  */
#line 17937 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INSERT_ACL; }
#line 51686 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3489: /* object_privilege: UPDATE_SYM  */
#line 17938 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= UPDATE_ACL; }
#line 51692 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3490: /* object_privilege: REFERENCES  */
#line 17939 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REFERENCES_ACL; }
#line 51698 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3491: /* object_privilege: DELETE_SYM  */
#line 17940 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_ACL;}
#line 51704 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3492: /* object_privilege: USAGE  */
#line 17941 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= NO_ACL; }
#line 51710 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3493: /* object_privilege: INDEX_SYM  */
#line 17942 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= INDEX_ACL;}
#line 51716 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3494: /* object_privilege: ALTER  */
#line 17943 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_ACL;}
#line 51722 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3495: /* object_privilege: CREATE  */
#line 17944 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_ACL;}
#line 51728 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3496: /* object_privilege: DROP  */
#line 17945 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DROP_ACL;}
#line 51734 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3497: /* object_privilege: EXECUTE_SYM  */
#line 17946 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EXECUTE_ACL;}
#line 51740 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3498: /* object_privilege: RELOAD  */
#line 17947 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= RELOAD_ACL;}
#line 51746 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3499: /* object_privilege: SHUTDOWN  */
#line 17948 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHUTDOWN_ACL;}
#line 51752 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3500: /* object_privilege: PROCESS  */
#line 17949 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= PROCESS_ACL;}
#line 51758 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3501: /* object_privilege: FILE_SYM  */
#line 17950 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FILE_ACL;}
#line 51764 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3502: /* object_privilege: GRANT OPTION  */
#line 17951 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= GRANT_ACL;}
#line 51770 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3503: /* object_privilege: SHOW DATABASES  */
#line 17952 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_DB_ACL;}
#line 51776 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3504: /* object_privilege: SUPER_SYM  */
#line 17953 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SUPER_ACL;}
#line 51782 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3505: /* object_privilege: CREATE TEMPORARY TABLES  */
#line 17954 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TMP_ACL;}
#line 51788 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3506: /* object_privilege: LOCK_SYM TABLES  */
#line 17955 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= LOCK_TABLES_ACL; }
#line 51794 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3507: /* object_privilege: REPLICATION SLAVE  */
#line 17956 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= REPL_SLAVE_ACL; }
#line 51800 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3508: /* object_privilege: REPLICATION CLIENT_SYM  */
#line 17957 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= BINLOG_MONITOR_ACL; /*Compatibility*/ }
#line 51806 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3509: /* object_privilege: CREATE VIEW_SYM  */
#line 17958 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_VIEW_ACL; }
#line 51812 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3510: /* object_privilege: SHOW VIEW_SYM  */
#line 17959 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SHOW_VIEW_ACL; }
#line 51818 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3511: /* object_privilege: CREATE ROUTINE_SYM  */
#line 17960 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_PROC_ACL; }
#line 51824 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3512: /* object_privilege: ALTER ROUTINE_SYM  */
#line 17961 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= ALTER_PROC_ACL; }
#line 51830 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3513: /* object_privilege: CREATE USER_SYM  */
#line 17962 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_USER_ACL; }
#line 51836 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3514: /* object_privilege: EVENT_SYM  */
#line 17963 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= EVENT_ACL;}
#line 51842 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3515: /* object_privilege: TRIGGER_SYM  */
#line 17964 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= TRIGGER_ACL; }
#line 51848 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3516: /* object_privilege: CREATE TABLESPACE  */
#line 17965 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= CREATE_TABLESPACE_ACL; }
#line 51854 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3517: /* object_privilege: DELETE_SYM HISTORY_SYM  */
#line 17966 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= DELETE_HISTORY_ACL; }
#line 51860 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3518: /* object_privilege: SET USER_SYM  */
#line 17967 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= SET_USER_ACL; }
#line 51866 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3519: /* object_privilege: FEDERATED_SYM ADMIN_SYM  */
#line 17968 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { (yyval.privilege)= FEDERATED_ADMIN_ACL; }
#line 51872 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3520: /* object_privilege: CONNECTION_SYM ADMIN_SYM  */
#line 17969 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= CONNECTION_ADMIN_ACL; }
#line 51878 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3521: /* object_privilege: READ_SYM ONLY_SYM ADMIN_SYM  */
#line 17970 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 51884 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3522: /* object_privilege: READ_ONLY_SYM ADMIN_SYM  */
#line 17971 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= READ_ONLY_ADMIN_ACL; }
#line 51890 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3523: /* object_privilege: BINLOG_SYM MONITOR_SYM  */
#line 17972 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_MONITOR_ACL; }
#line 51896 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3524: /* object_privilege: BINLOG_SYM ADMIN_SYM  */
#line 17973 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_ADMIN_ACL; }
#line 51902 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3525: /* object_privilege: BINLOG_SYM REPLAY_SYM  */
#line 17974 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= BINLOG_REPLAY_ACL; }
#line 51908 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3526: /* object_privilege: REPLICATION MASTER_SYM ADMIN_SYM  */
#line 17975 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_MASTER_ADMIN_ACL; }
#line 51914 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3527: /* object_privilege: REPLICATION SLAVE ADMIN_SYM  */
#line 17976 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= REPL_SLAVE_ADMIN_ACL; }
#line 51920 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3528: /* object_privilege: SLAVE MONITOR_SYM  */
#line 17977 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SLAVE_MONITOR_ACL; }
#line 51926 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3529: /* object_privilege: SHOW CREATE ROUTINE_SYM  */
#line 17978 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.privilege)= SHOW_CREATE_ROUTINE_ACL; }
#line 51932 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3530: /* opt_and: %empty  */
#line 17982 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 51938 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3531: /* opt_and: AND_SYM  */
#line 17983 "/home/buildbot/git/sql/sql_yacc.yy"
                  {}
#line 51944 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3534: /* require_list_element: SUBJECT_SYM TEXT_STRING  */
#line 17993 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_subject.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "SUBJECT"));
            lex->account_options.x509_subject= (yyvsp[0].lex_string_with_metadata);
          }
#line 51955 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3535: /* require_list_element: ISSUER_SYM TEXT_STRING  */
#line 18000 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.x509_issuer.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "ISSUER"));
            lex->account_options.x509_issuer= (yyvsp[0].lex_string_with_metadata);
          }
#line 51966 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3536: /* require_list_element: CIPHER_SYM TEXT_STRING  */
#line 18007 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            if (lex->account_options.ssl_cipher.str)
              my_yyabort_error((ER_DUP_ARGUMENT, MYF(0), "CIPHER"));
            lex->account_options.ssl_cipher= (yyvsp[0].lex_string_with_metadata);
          }
#line 51977 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3537: /* grant_ident: '*'  */
#line 18017 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING db;
            if (unlikely(Lex->copy_db_to(&db)))
              MYSQL_YYABORT;
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(db,
                                            Lex_grant_object_name::STAR)))
              MYSQL_YYABORT;
          }
#line 51990 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3538: /* grant_ident: ident '.' '*'  */
#line 18026 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[-2].ident_sys),
                                            Lex_grant_object_name::IDENT_STAR)))
              MYSQL_YYABORT;
          }
#line 52000 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3539: /* grant_ident: '*' '.' '*'  */
#line 18032 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name(
                                            null_clex_str,
                                            Lex_grant_object_name::STAR_STAR)))
              MYSQL_YYABORT;
          }
#line 52011 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3540: /* grant_ident: table_ident  */
#line 18039 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.lex_grant_ident)= new (thd->mem_root) Lex_grant_object_name((yyvsp[0].table))))
              MYSQL_YYABORT;
          }
#line 52020 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3541: /* user_list: user  */
#line 18047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52029 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3542: /* user_list: user_list ',' user  */
#line 18052 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52038 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3543: /* grant_list: grant_user  */
#line 18060 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52047 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3544: /* grant_list: grant_list ',' grant_user  */
#line 18065 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52056 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3545: /* user_and_role_list: user_or_role  */
#line 18073 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52065 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3546: /* user_and_role_list: user_and_role_list ',' user_or_role  */
#line 18078 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->users_list.push_back((yyvsp[0].lex_user), thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3551: /* grant_user: user IDENTIFIED_SYM BY TEXT_STRING  */
#line 18089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-3].lex_user)->auth->pwtext= (yyvsp[0].lex_string_with_metadata);
          }
#line 52084 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3552: /* grant_user: user IDENTIFIED_SYM BY PASSWORD_SYM TEXT_STRING  */
#line 18095 "/home/buildbot/git/sql/sql_yacc.yy"
          { 
            (yyval.lex_user)= (yyvsp[-4].lex_user); 
            (yyvsp[-4].lex_user)->auth= new (thd->mem_root) USER_AUTH();
            (yyvsp[-4].lex_user)->auth->auth_str= (yyvsp[0].lex_string_with_metadata);
          }
#line 52094 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3553: /* grant_user: user IDENTIFIED_SYM via_or_with auth_expression  */
#line 18101 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth= (yyvsp[0].user_auth);
          }
#line 52103 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3554: /* grant_user: user_or_role  */
#line 18106 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex_user)= (yyvsp[0].lex_user);
          }
#line 52111 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3555: /* auth_expression: auth_token OR_SYM auth_expression  */
#line 18113 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[-2].user_auth);
            DBUG_ASSERT((yyval.user_auth)->next == NULL);
            (yyval.user_auth)->next= (yyvsp[0].user_auth);
          }
#line 52121 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3556: /* auth_expression: auth_token  */
#line 18119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.user_auth)= (yyvsp[0].user_auth);
          }
#line 52129 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3557: /* auth_token: ident_or_text opt_auth_str  */
#line 18126 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          (yyval.user_auth)= (yyvsp[0].user_auth);
          (yyval.user_auth)->plugin= (yyvsp[-1].lex_str);
        }
#line 52138 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3558: /* opt_auth_str: %empty  */
#line 18134 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=thd->calloc<USER_AUTH>(1)))
            MYSQL_YYABORT;
        }
#line 52147 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3559: /* opt_auth_str: using_or_as TEXT_STRING_sys  */
#line 18139 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=thd->calloc<USER_AUTH>(1)))
            MYSQL_YYABORT;
          (yyval.user_auth)->auth_str= (yyvsp[0].lex_str);
        }
#line 52157 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3560: /* opt_auth_str: using_or_as PASSWORD_SYM '(' TEXT_STRING ')'  */
#line 18145 "/home/buildbot/git/sql/sql_yacc.yy"
        {
          if (!((yyval.user_auth)=thd->calloc<USER_AUTH>(1)))
            MYSQL_YYABORT;
          (yyval.user_auth)->pwtext= (yyvsp[-1].lex_string_with_metadata);
        }
#line 52167 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3562: /* opt_require_clause: REQUIRE_SYM require_list  */
#line 18155 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 52175 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3563: /* opt_require_clause: REQUIRE_SYM SSL_SYM  */
#line 18159 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_ANY;
          }
#line 52183 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3564: /* opt_require_clause: REQUIRE_SYM X509_SYM  */
#line 18163 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_X509;
          }
#line 52191 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3565: /* opt_require_clause: REQUIRE_SYM NONE_SYM  */
#line 18167 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.ssl_type= SSL_TYPE_NONE;
          }
#line 52199 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3566: /* resource_option: MAX_QUERIES_PER_HOUR ulong_num  */
#line 18174 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.questions=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 52208 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3567: /* resource_option: MAX_UPDATES_PER_HOUR ulong_num  */
#line 18179 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.updates=(yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 52217 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3568: /* resource_option: MAX_CONNECTIONS_PER_HOUR ulong_num  */
#line 18184 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.conn_per_hour= (yyvsp[0].ulong_num);
            Lex->account_options.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 52226 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3569: /* resource_option: MAX_USER_CONNECTIONS_SYM int_num  */
#line 18189 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.user_conn= (yyvsp[0].num);
            Lex->account_options.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 52235 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3570: /* resource_option: MAX_STATEMENT_TIME_SYM NUM_literal  */
#line 18194 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->account_options.max_statement_time= (yyvsp[0].item_num)->val_real();
            Lex->account_options.specified_limits|= USER_RESOURCES::MAX_STATEMENT_TIME;
          }
#line 52244 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3571: /* resource_option_list: resource_option_list resource_option  */
#line 18201 "/home/buildbot/git/sql/sql_yacc.yy"
                                               {}
#line 52250 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3572: /* resource_option_list: resource_option  */
#line 18202 "/home/buildbot/git/sql/sql_yacc.yy"
                          {}
#line 52256 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3573: /* opt_resource_options: %empty  */
#line 18206 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 52262 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3575: /* opt_grant_options: %empty  */
#line 18212 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= NO_ACL;  }
#line 52268 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3576: /* opt_grant_options: WITH grant_option_list  */
#line 18213 "/home/buildbot/git/sql/sql_yacc.yy"
                                 { (yyval.privilege)= (yyvsp[0].privilege); }
#line 52274 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3577: /* opt_grant_option: %empty  */
#line 18217 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= NO_ACL;    }
#line 52280 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3578: /* opt_grant_option: WITH GRANT OPTION  */
#line 18218 "/home/buildbot/git/sql/sql_yacc.yy"
                            { (yyval.privilege)= GRANT_ACL; }
#line 52286 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3579: /* grant_option_list: grant_option_list grant_option  */
#line 18222 "/home/buildbot/git/sql/sql_yacc.yy"
                                         { (yyval.privilege)= (yyvsp[-1].privilege) | (yyvsp[0].privilege); }
#line 52292 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3581: /* grant_option: GRANT OPTION  */
#line 18227 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= GRANT_ACL;}
#line 52298 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3582: /* grant_option: resource_option  */
#line 18228 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.privilege)= NO_ACL; }
#line 52304 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3583: /* $@251: %empty  */
#line 18233 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 52314 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3584: /* begin_stmt_mariadb: BEGIN_MARIADB_SYM $@251 opt_work  */
#line 18238 "/home/buildbot/git/sql/sql_yacc.yy"
                   {}
#line 52320 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3585: /* compound_statement: sp_proc_stmt_compound_ok  */
#line 18243 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command= SQLCOM_COMPOUND;
            if (Lex->sp_body_finalize_procedure(thd))
              MYSQL_YYABORT;
          }
#line 52330 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3586: /* opt_not: %empty  */
#line 18251 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 0; }
#line 52336 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3587: /* opt_not: not  */
#line 18252 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.num)= 1; }
#line 52342 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3588: /* opt_work: %empty  */
#line 18256 "/home/buildbot/git/sql/sql_yacc.yy"
                      {}
#line 52348 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3589: /* opt_work: WORK_SYM  */
#line 18257 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 52354 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3590: /* opt_chain: %empty  */
#line 18262 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 52360 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3591: /* opt_chain: AND_SYM NO_SYM CHAIN_SYM  */
#line 18263 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_NO; }
#line 52366 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3592: /* opt_chain: AND_SYM CHAIN_SYM  */
#line 18264 "/home/buildbot/git/sql/sql_yacc.yy"
                                   { (yyval.m_yes_no_unk)= TVL_YES; }
#line 52372 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3593: /* opt_release: %empty  */
#line 18269 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 52378 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3594: /* opt_release: RELEASE_SYM  */
#line 18270 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_YES; }
#line 52384 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3595: /* opt_release: NO_SYM RELEASE_SYM  */
#line 18271 "/home/buildbot/git/sql/sql_yacc.yy"
                             { (yyval.m_yes_no_unk)= TVL_NO; }
#line 52390 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3596: /* commit: COMMIT_SYM opt_work opt_chain opt_release  */
#line 18276 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 52403 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3597: /* rollback: ROLLBACK_SYM opt_work opt_chain opt_release  */
#line 18288 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 52416 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3598: /* rollback: ROLLBACK_SYM opt_work TO_SYM SAVEPOINT_SYM ident  */
#line 18297 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 52426 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3599: /* rollback: ROLLBACK_SYM opt_work TO_SYM ident  */
#line 18303 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 52436 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3600: /* savepoint: SAVEPOINT_SYM ident  */
#line 18312 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 52446 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3601: /* release: RELEASE_SYM SAVEPOINT_SYM ident  */
#line 18321 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].ident_sys);
          }
#line 52456 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3602: /* unit_type_decl: UNION_SYM union_option  */
#line 18334 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= UNION_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 52462 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3603: /* unit_type_decl: INTERSECT_SYM union_option  */
#line 18336 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= INTERSECT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 52468 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3604: /* unit_type_decl: EXCEPT_SYM union_option  */
#line 18338 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.unit_operation).unit_type= EXCEPT_TYPE; (yyval.unit_operation).distinct= (yyvsp[0].num); }
#line 52474 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3605: /* union_option: %empty  */
#line 18345 "/home/buildbot/git/sql/sql_yacc.yy"
                      { (yyval.num)=1; }
#line 52480 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3606: /* union_option: DISTINCT  */
#line 18346 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=1; }
#line 52486 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3607: /* union_option: ALL  */
#line 18347 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.num)=0; }
#line 52492 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3608: /* query_expression_option: STRAIGHT_JOIN  */
#line 18351 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Select->options|= SELECT_STRAIGHT_JOIN; }
#line 52498 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3609: /* query_expression_option: HIGH_PRIORITY  */
#line 18353 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYPS->m_lock_type= TL_READ_HIGH_PRIORITY;
            YYPS->m_mdl_type= MDL_SHARED_READ;
            Select->options|= SELECT_HIGH_PRIORITY;
          }
#line 52508 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3610: /* query_expression_option: DISTINCT  */
#line 18358 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 52514 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3611: /* query_expression_option: UNIQUE_SYM  */
#line 18359 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_DISTINCT; }
#line 52520 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3612: /* query_expression_option: SQL_SMALL_RESULT  */
#line 18360 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_SMALL_RESULT; }
#line 52526 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3613: /* query_expression_option: SQL_BIG_RESULT  */
#line 18361 "/home/buildbot/git/sql/sql_yacc.yy"
                           { Select->options|= SELECT_BIG_RESULT; }
#line 52532 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3614: /* query_expression_option: SQL_BUFFER_RESULT  */
#line 18362 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Select->options|= OPTION_BUFFER_RESULT; }
#line 52538 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3615: /* query_expression_option: SQL_CALC_FOUND_ROWS  */
#line 18363 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Select->options|= OPTION_FOUND_ROWS; }
#line 52544 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3616: /* query_expression_option: ALL  */
#line 18364 "/home/buildbot/git/sql/sql_yacc.yy"
              { Select->options|= SELECT_ALL; }
#line 52550 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3619: /* no_definer: %empty  */
#line 18380 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            thd->lex->definer= 0;
          }
#line 52565 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3620: /* definer: DEFINER_SYM '=' user_or_role  */
#line 18394 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->definer= (yyvsp[0].lex_user);
            Lex->account_options.reset();
          }
#line 52574 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3621: /* view_algorithm: ALGORITHM_SYM '=' UNDEFINED_SYM  */
#line 18407 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= DTYPE_ALGORITHM_UNDEFINED; }
#line 52580 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3622: /* view_algorithm: ALGORITHM_SYM '=' MERGE_SYM  */
#line 18408 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_MERGE; }
#line 52586 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3623: /* view_algorithm: ALGORITHM_SYM '=' TEMPTABLE_SYM  */
#line 18409 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_ALGORITHM_TMPTABLE; }
#line 52592 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3624: /* opt_view_suid: %empty  */
#line 18413 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFAULT; }
#line 52598 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3625: /* opt_view_suid: view_suid  */
#line 18414 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= (yyvsp[0].view_suid); }
#line 52604 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3626: /* view_suid: SQL_SYM SECURITY_SYM DEFINER_SYM  */
#line 18418 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_DEFINER; }
#line 52610 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3627: /* view_suid: SQL_SYM SECURITY_SYM INVOKER_SYM  */
#line 18419 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.view_suid)= VIEW_SUID_INVOKER; }
#line 52616 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3628: /* view_list_opt: %empty  */
#line 18424 "/home/buildbot/git/sql/sql_yacc.yy"
          {}
#line 52622 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3629: /* view_list_opt: '(' view_list ')'  */
#line 18425 "/home/buildbot/git/sql/sql_yacc.yy"
                            { }
#line 52628 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3630: /* view_list: ident  */
#line 18430 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 52638 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3631: /* view_list: view_list ',' ident  */
#line 18436 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->view_list.push_back((LEX_CSTRING*)
                                     thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING)),
                                     thd->mem_root);
          }
#line 52648 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3632: /* $@252: %empty  */
#line 18444 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= FALSE;
            lex->create_view->select.str= (char *) YYLIP->get_cpp_ptr();
          }
#line 52658 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3633: /* view_select: $@252 query_expression view_check_option  */
#line 18451 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->parsed_create_view((yyvsp[-1].select_lex_unit), (yyvsp[0].num)))
              MYSQL_YYABORT;
          }
#line 52667 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3634: /* view_check_option: %empty  */
#line 18458 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_NONE; }
#line 52673 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3635: /* view_check_option: WITH CHECK_SYM OPTION  */
#line 18459 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 52679 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3636: /* view_check_option: WITH CASCADED CHECK_SYM OPTION  */
#line 18460 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 52685 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3637: /* view_check_option: WITH LOCAL_SYM CHECK_SYM OPTION  */
#line 18461 "/home/buildbot/git/sql/sql_yacc.yy"
                                          { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 52691 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3638: /* trigger_action_order: FOLLOWS_SYM  */
#line 18472 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 52697 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3639: /* trigger_action_order: PRECEDES_SYM  */
#line 18474 "/home/buildbot/git/sql/sql_yacc.yy"
            { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 52703 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3640: /* trigger_follows_precedes_clause: %empty  */
#line 18479 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_execution_order).anchor_trigger_name= null_clex_str;
            }
#line 52712 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3641: /* trigger_follows_precedes_clause: trigger_action_order ident_or_text  */
#line 18485 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              (yyval.trg_execution_order).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_execution_order).anchor_trigger_name= (yyvsp[0].lex_str);
            }
#line 52721 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3642: /* opt_on_update_cols: %empty  */
#line 18493 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              Lex->trg_chistics.on_update_col_names= NULL;
            }
#line 52729 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3643: /* opt_on_update_cols: OF_SYM on_update_cols  */
#line 18497 "/home/buildbot/git/sql/sql_yacc.yy"
            {
              if (Lex->trg_chistics.event != TRG_EVENT_UPDATE)
              {
                thd->parse_error(ER_SYNTAX_ERROR, (yyvsp[-1].kwd).pos());
                MYSQL_YYABORT;
              }
	    }
#line 52741 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3644: /* on_update_cols: ident  */
#line 18508 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            List<LEX_CSTRING> *col_names_list;
            LEX_CSTRING *col_name;

            col_names_list=
              new (thd->mem_root) List<LEX_CSTRING>;

            col_name= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));

            if (unlikely(col_names_list == NULL) ||
                unlikely(col_name == NULL) ||
                unlikely(col_names_list->push_back(col_name, thd->mem_root)))
              MYSQL_YYABORT;

            Lex->trg_chistics.on_update_col_names= col_names_list;
          }
#line 52762 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3645: /* on_update_cols: on_update_cols ',' ident  */
#line 18525 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING *col_name;

            col_name= (LEX_CSTRING *) thd->memdup(&(yyvsp[0].ident_sys), sizeof(LEX_CSTRING));

            if (unlikely(col_name == NULL) ||
                unlikely(Lex->trg_chistics.on_update_col_names->push_back
                  (col_name, thd->mem_root)))
              MYSQL_YYABORT;
          }
#line 52777 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3646: /* $@253: %empty  */
#line 18540 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->add_create_options_with_check((yyvsp[0].object_ddl_options))))
              MYSQL_YYABORT;
          }
#line 52786 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3647: /* $@254: %empty  */
#line 18550 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $10 */
            Lex->raw_trg_on_table_name_begin= YYLIP->get_tok_start();
          }
#line 52794 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3648: /* $@255: %empty  */
#line 18556 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $14 */
            Lex->raw_trg_on_table_name_end= YYLIP->get_tok_start();
          }
#line 52802 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3649: /* $@256: %empty  */
#line 18561 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->trg_chistics.ordering_clause_begin= YYLIP->get_cpp_ptr();
          }
#line 52810 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3650: /* $@257: %empty  */
#line 18565 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $19 */
            LEX *lex= thd->lex;
            Lex_input_stream *lip= YYLIP;

            if (unlikely(lex->sphead))
              my_yyabort_error((ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER"));

            lex->stmt_definition_begin= (yyvsp[-17].simple_string);
            lex->ident.str= (yyvsp[-9].simple_string);
            lex->ident.length= (yyvsp[-5].simple_string) - (yyvsp[-9].simple_string);
            lex->spname= (yyvsp[-14].spname);
            (*static_cast<st_trg_execution_order*>(&lex->trg_chistics))= ((yyvsp[0].trg_execution_order));
            lex->trg_chistics.ordering_clause_end= lip->get_cpp_ptr();

            if (unlikely(!lex->make_sp_head(thd, (yyvsp[-14].spname), &sp_handler_trigger,
                                            DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;

            lex->sphead->set_body_start(thd, lip->get_cpp_tok_start());
          }
#line 52835 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3651: /* trigger_tail: remember_name opt_if_not_exists $@253 sp_name trg_action_time trg_event opt_on_update_cols ON remember_name $@254 table_ident FOR_SYM remember_name $@255 EACH_SYM ROW_SYM $@256 trigger_follows_precedes_clause $@257 sp_proc_stmt force_lookahead  */
#line 18586 "/home/buildbot/git/sql/sql_yacc.yy"
          { /* $22 */
            LEX *lex= Lex;

            lex->sql_command= SQLCOM_CREATE_TRIGGER;
            if (lex->sp_body_finalize_trigger(thd))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->first_select_lex()->
                 add_table_to_list(thd, (yyvsp[-10].table), (LEX_CSTRING*) 0,
                                   TL_OPTION_UPDATING, TL_READ_NO_INSERT,
                                   MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;
          }
#line 52858 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3652: /* create_package_chistic: COMMENT_SYM TEXT_STRING_sys  */
#line 18615 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.comment= (yyvsp[0].lex_str); }
#line 52864 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3653: /* create_package_chistic: sp_suid  */
#line 18617 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.suid= (yyvsp[0].sp_suid); }
#line 52870 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3654: /* create_package_chistics: create_package_chistic  */
#line 18621 "/home/buildbot/git/sql/sql_yacc.yy"
                                 {}
#line 52876 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3655: /* create_package_chistics: create_package_chistics create_package_chistic  */
#line 18622 "/home/buildbot/git/sql/sql_yacc.yy"
                                                         { }
#line 52882 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3656: /* opt_create_package_chistics: %empty  */
#line 18626 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 52888 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3657: /* opt_create_package_chistics: create_package_chistics  */
#line 18627 "/home/buildbot/git/sql/sql_yacc.yy"
                                  { }
#line 52894 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3658: /* $@258: %empty  */
#line 18631 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->sp_chistics.init(); }
#line 52900 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3660: /* xa: XA_SYM begin_or_start xid opt_join_or_resume  */
#line 18639 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_START;
          }
#line 52908 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3661: /* xa: XA_SYM END xid opt_suspend  */
#line 18643 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_END;
          }
#line 52916 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3662: /* xa: XA_SYM PREPARE_SYM xid  */
#line 18647 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_PREPARE;
          }
#line 52924 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3663: /* xa: XA_SYM COMMIT_SYM xid opt_one_phase  */
#line 18651 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_COMMIT;
          }
#line 52932 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3664: /* xa: XA_SYM ROLLBACK_SYM xid  */
#line 18655 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
          }
#line 52940 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3665: /* xa: XA_SYM RECOVER_SYM opt_format_xid  */
#line 18659 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->verbose= (yyvsp[0].num);
          }
#line 52949 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3666: /* opt_format_xid: %empty  */
#line 18666 "/home/buildbot/git/sql/sql_yacc.yy"
                     { (yyval.num)= false; }
#line 52955 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3667: /* opt_format_xid: FORMAT_SYM '=' ident_or_text  */
#line 18668 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("SQL")))
              (yyval.num)= true;
            else if (lex_string_eq(&(yyvsp[0].lex_str), STRING_WITH_LEN("RAW")))
              (yyval.num)= false;
            else
            {
              my_yyabort_error((ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0),
                               "XA RECOVER", (yyvsp[0].lex_str).str));
              (yyval.num)= false;
            }
          }
#line 52972 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3668: /* xid: text_string  */
#line 18684 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            if (unlikely(!(Lex->xid= thd->alloc<XID>(1))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
          }
#line 52983 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3669: /* xid: text_string ',' text_string  */
#line 18691 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE && (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            if (unlikely(!(Lex->xid= thd->alloc<XID>(1))))
              MYSQL_YYABORT;
            Lex->xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
          }
#line 52994 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3670: /* xid: text_string ',' text_string ',' ulong_num  */
#line 18698 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE &&
                                 (yyvsp[0].ulong_num) <= static_cast<ulong>(
                                         std::numeric_limits<int32_t>::max()));
            if (unlikely(!(Lex->xid= thd->alloc<XID>(1))))
              MYSQL_YYABORT;
            Lex->xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
          }
#line 53008 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3671: /* begin_or_start: BEGIN_MARIADB_SYM  */
#line 18710 "/home/buildbot/git/sql/sql_yacc.yy"
                            {}
#line 53014 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3672: /* begin_or_start: BEGIN_ORACLE_SYM  */
#line 18711 "/home/buildbot/git/sql/sql_yacc.yy"
                           {}
#line 53020 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3673: /* begin_or_start: START_SYM  */
#line 18712 "/home/buildbot/git/sql/sql_yacc.yy"
                    {}
#line 53026 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3674: /* opt_join_or_resume: %empty  */
#line 18716 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_NONE;        }
#line 53032 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3675: /* opt_join_or_resume: JOIN_SYM  */
#line 18717 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_JOIN;        }
#line 53038 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3676: /* opt_join_or_resume: RESUME_SYM  */
#line 18718 "/home/buildbot/git/sql/sql_yacc.yy"
                        { Lex->xa_opt=XA_RESUME;      }
#line 53044 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3677: /* opt_one_phase: %empty  */
#line 18722 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_NONE;        }
#line 53050 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3678: /* opt_one_phase: ONE_SYM PHASE_SYM  */
#line 18723 "/home/buildbot/git/sql/sql_yacc.yy"
                            { Lex->xa_opt=XA_ONE_PHASE;   }
#line 53056 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3679: /* opt_suspend: %empty  */
#line 18728 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_NONE;        }
#line 53062 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3680: /* $@259: %empty  */
#line 18730 "/home/buildbot/git/sql/sql_yacc.yy"
          { Lex->xa_opt=XA_SUSPEND;     }
#line 53068 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3682: /* opt_migrate: %empty  */
#line 18735 "/home/buildbot/git/sql/sql_yacc.yy"
                              {}
#line 53074 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3683: /* opt_migrate: FOR_SYM MIGRATE_SYM  */
#line 18736 "/home/buildbot/git/sql/sql_yacc.yy"
                              { Lex->xa_opt=XA_FOR_MIGRATE; }
#line 53080 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3684: /* install: INSTALL_SYM PLUGIN_SYM opt_if_not_exists ident SONAME_SYM TEXT_STRING_sys  */
#line 18741 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_install_plugin((yyvsp[-3].object_ddl_options), (yyvsp[-2].ident_sys), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 53089 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3685: /* install: INSTALL_SYM SONAME_SYM TEXT_STRING_sys  */
#line 18746 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_install_plugin((yyvsp[0].lex_str));
          }
#line 53097 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3686: /* uninstall: UNINSTALL_SYM PLUGIN_SYM opt_if_exists ident  */
#line 18753 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_name((yyvsp[-1].object_ddl_options), (yyvsp[0].ident_sys)))
              MYSQL_YYABORT;
          }
#line 53106 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3687: /* uninstall: UNINSTALL_SYM SONAME_SYM opt_if_exists TEXT_STRING_sys  */
#line 18758 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_uninstall_plugin_by_soname((yyvsp[-1].object_ddl_options), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 53115 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3688: /* keep_gcc_happy: IMPOSSIBLE_ACTION  */
#line 18767 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            YYERROR;
          }
#line 53123 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3694: /* sp_tail_is: %empty  */
#line 18796 "/home/buildbot/git/sql/sql_yacc.yy"
                    { }
#line 53129 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3697: /* opt_trailing_sp_name: %empty  */
#line 18808 "/home/buildbot/git/sql/sql_yacc.yy"
                    { (yyval.spname)= NULL; }
#line 53135 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3698: /* opt_package_routine_end_name: %empty  */
#line 18812 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)= null_clex_str; }
#line 53141 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3699: /* opt_package_routine_end_name: FORCE_LOOKAHEAD  */
#line 18813 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)= null_clex_str; }
#line 53147 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3702: /* $@260: %empty  */
#line 18826 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->init_last_field(&Lex->sphead->m_return_field_def,
                                 &empty_clex_str);
          }
#line 53156 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3704: /* sf_return_type: field_type  */
#line 18835 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sf_return_fill_definition((yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 53165 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3705: /* sf_return_type: ROW_SYM row_type_body  */
#line 18840 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_row((yyvsp[0].spvar_definition_list)))
              MYSQL_YYABORT;
          }
#line 53174 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3706: /* sf_return_type: ROW_SYM TYPE_SYM OF_SYM ident  */
#line 18845 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_rowtype_of(
                       Qualified_column_ident(&(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53184 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3707: /* sf_return_type: ROW_SYM TYPE_SYM OF_SYM ident '.' ident  */
#line 18851 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_rowtype_of(
                       Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53194 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3708: /* sf_return_type: TYPE_SYM OF_SYM ident '.' ident  */
#line 18857 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_type_of(
                       Qualified_column_ident(&(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53204 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3709: /* sf_return_type: TYPE_SYM OF_SYM ident '.' ident '.' ident  */
#line 18863 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->sf_return_fill_definition_type_of(
                       Qualified_column_ident(thd, &(yyvsp[-4].ident_sys), &(yyvsp[-2].ident_sys), &(yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53214 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3710: /* package_implementation_item_declaration: DECLARE_MARIADB_SYM sp_decl_variable_list ';'  */
#line 18871 "/home/buildbot/git/sql/sql_yacc.yy"
                                                        { (yyval.spblock)= (yyvsp[-1].spblock); }
#line 53220 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3713: /* package_implementation_declare_section_list: package_implementation_declare_section_list1 package_implementation_declare_section_list2  */
#line 18882 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 53226 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3715: /* package_implementation_executable_section: sp_proc_stmts END  */
#line 18891 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock_handlers).init(0);
          }
#line 53234 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3744: /* row_field_name: ident  */
#line 18952 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (!((yyval.spvar_definition)= Lex->row_field_name(thd, (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53243 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3745: /* $@261: %empty  */
#line 18960 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely((yyvsp[-1].expr_lex)->sp_while_loop_expression(thd)))
              MYSQL_YYABORT;
          }
#line 53252 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3746: /* while_body: expr_lex DO_SYM $@261 sp_proc_stmts1 END WHILE_SYM  */
#line 18965 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_while_loop_finalize(thd)))
              MYSQL_YYABORT;
          }
#line 53261 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3747: /* for_loop_statements: DO_SYM sp_proc_stmts1 END FOR_SYM  */
#line 18973 "/home/buildbot/git/sql/sql_yacc.yy"
          { }
#line 53267 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3748: /* sp_label: label_ident ':'  */
#line 18977 "/home/buildbot/git/sql/sql_yacc.yy"
                          { (yyval.lex_str)= (yyvsp[-1].ident_sys); }
#line 53273 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3750: /* sp_block_label: sp_label  */
#line 18986 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->block_label_declare(&(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            (yyval.lex_str)= (yyvsp[0].lex_str);
          }
#line 53283 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3751: /* sp_opt_default: _empty  */
#line 18994 "/home/buildbot/git/sql/sql_yacc.yy"
                       { (yyval.expr_and_query_str)= { nullptr, empty_clex_str}; }
#line 53289 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3752: /* sp_opt_default: DEFAULT remember_cpp_ptr expr remember_end  */
#line 18996 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX_CSTRING expr_str= empty_clex_str;

            if (Lex->is_metadata_used())
            {
              expr_str= make_string(thd, (yyvsp[-2].simple_string), (yyvsp[0].simple_string));
              if (expr_str.str == nullptr)
                MYSQL_YYABORT;
            }

            (yyval.expr_and_query_str)= { (yyvsp[-1].item), expr_str };
          }
#line 53306 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3753: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars TYPE_SYM OF_SYM optionally_qualified_column_ident sp_opt_default  */
#line 19014 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_with_ref_finalize(
                           thd, (yyvsp[-4].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-4].num));
          }
#line 53317 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3754: /* sp_decl_variable_list_anchored: sp_decl_idents_init_vars ROW_SYM TYPE_SYM OF_SYM optionally_qualified_column_ident sp_opt_default  */
#line 19023 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_variable_declarations_rowtype_finalize(
                           thd, (yyvsp[-5].num), (yyvsp[-1].qualified_column_ident), (yyvsp[0].expr_and_query_str).expr, (yyvsp[0].expr_and_query_str).expr_str)))
              MYSQL_YYABORT;
            (yyval.spblock).init_using_vars((yyvsp[-5].num));
          }
#line 53328 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3755: /* sp_param_name_and_mode: sp_parameter_type sp_param_name  */
#line 19033 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[0].spvar)->mode= (yyvsp[-1].spvar_mode);
            (yyval.spvar)= (yyvsp[0].spvar);
          }
#line 53337 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3757: /* sp_param_init_vars: sp_param_name_and_mode_init_vars field_type  */
#line 19042 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_param_fill_definition((yyval.spvar)= (yyvsp[-1].spvar), (yyvsp[0].Lex_field_type))))
              MYSQL_YYABORT;
          }
#line 53346 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3758: /* sp_param_init_vars: sp_param_name_and_mode_init_vars ROW_SYM row_type_body  */
#line 19047 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_row(thd, (yyval.spvar)= (yyvsp[-2].spvar), (yyvsp[0].spvar_definition_list))))
              MYSQL_YYABORT;
          }
#line 53355 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3760: /* sp_param_anchored: sp_param_name_and_mode_init_vars TYPE_SYM OF_SYM ident '.' ident  */
#line 19056 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd,
                                                                (yyval.spvar)= (yyvsp[-5].spvar), (yyvsp[-2].ident_sys),
                                                                (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53366 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3761: /* sp_param_anchored: sp_param_name_and_mode_init_vars TYPE_SYM OF_SYM ident '.' ident '.' ident  */
#line 19063 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_type_reference(thd, (yyval.spvar)= (yyvsp[-7].spvar),
                                                                (yyvsp[-4].ident_sys), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53376 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3762: /* sp_param_anchored: sp_param_name_and_mode_init_vars ROW_SYM TYPE_SYM OF_SYM ident  */
#line 19069 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-4].spvar), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53385 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3763: /* sp_param_anchored: sp_param_name_and_mode_init_vars ROW_SYM TYPE_SYM OF_SYM ident '.' ident  */
#line 19074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sphead->spvar_fill_table_rowtype_reference(thd, (yyval.spvar)= (yyvsp[-6].spvar), (yyvsp[-2].ident_sys), (yyvsp[0].ident_sys))))
              MYSQL_YYABORT;
          }
#line 53394 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3764: /* $@262: %empty  */
#line 19083 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex;
            lex->sphead->set_c_chistics(lex->sp_chistics);
            lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 53404 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3765: /* sf_c_chistics_and_body_standalone: sp_c_chistics $@262 sp_proc_stmt_in_returns_clause force_lookahead  */
#line 19089 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_function(thd)))
              MYSQL_YYABORT;
          }
#line 53413 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3766: /* $@263: %empty  */
#line 19097 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(!Lex->make_sp_head_no_recursive(thd, (yyvsp[0].spname),
                                                         &sp_handler_procedure,
                                                         DEFAULT_AGGREGATE)))
              MYSQL_YYABORT;
          }
#line 53424 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3767: /* $@264: %empty  */
#line 19105 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sphead->set_c_chistics(Lex->sp_chistics);
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 53433 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3768: /* sp_tail_standalone: sp_name $@263 sp_parenthesized_pdparam_list sp_c_chistics $@264 sp_proc_stmt force_lookahead  */
#line 19110 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_body_finalize_procedure(thd)))
              MYSQL_YYABORT;
          }
#line 53442 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3769: /* sp_decls: _empty  */
#line 19119 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.spblock).init();
          }
#line 53450 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3770: /* sp_decls: sp_decls sp_decl ';'  */
#line 19123 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            // We check for declarations out of (standard) order this way
            // because letting the grammar rules reflect it caused tricky
            //  shift/reduce conflicts with the wrong result. (And we get
            //  better error handling this way.)
            if (unlikely(Lex->sp_declarations_join(&(yyval.spblock), (yyvsp[-2].spblock), (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 53463 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3771: /* sp_decl: DECLARE_MARIADB_SYM sp_decl_body  */
#line 19134 "/home/buildbot/git/sql/sql_yacc.yy"
                                           { (yyval.spblock)= (yyvsp[0].spblock); }
#line 53469 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3773: /* sp_decl_body: sp_decl_ident CONDITION_SYM FOR_SYM sp_cond  */
#line 19141 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->spcont->declare_condition(thd,
                                                        Lex_ident_column((yyvsp[-3].ident_sys)),
                                                        (yyvsp[0].spcondvalue))))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 53482 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3775: /* $@265: %empty  */
#line 19151 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 53490 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3776: /* sp_decl_body: sp_decl_ident CURSOR_SYM $@265 opt_parenthesized_cursor_formal_parameters FOR_SYM sp_cursor_stmt  */
#line 19156 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_pcontext *param_ctx= Lex->spcont;
            if (unlikely(Lex->sp_block_finalize(thd)))
              MYSQL_YYABORT;
            if (unlikely(Lex->sp_declare_cursor(thd, &(yyvsp[-5].ident_sys), (yyvsp[0].sp_cursor_stmt), param_ctx, true)))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 53504 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3794: /* $@266: %empty  */
#line 19207 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd, &(yyvsp[-1].lex_str));
          }
#line 53512 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3795: /* sp_labeled_block: sp_block_label BEGIN_MARIADB_SYM $@266 sp_decls sp_proc_stmts END sp_opt_label  */
#line 19214 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-3].spblock), &(yyvsp[0].lex_str))))
              MYSQL_YYABORT;
          }
#line 53521 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3796: /* $@267: %empty  */
#line 19222 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->sp_block_init(thd);
          }
#line 53529 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3797: /* sp_unlabeled_block: BEGIN_MARIADB_SYM $@267 sp_decls sp_proc_stmts END  */
#line 19228 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 53538 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3798: /* $@268: %empty  */
#line 19236 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->maybe_start_compound_statement(thd)))
              MYSQL_YYABORT;
            Lex->sp_block_init(thd);
          }
#line 53548 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3799: /* sp_unlabeled_block_not_atomic: BEGIN_MARIADB_SYM not ATOMIC_SYM $@268 sp_decls sp_proc_stmts END  */
#line 19244 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-2].spblock))))
              MYSQL_YYABORT;
          }
#line 53557 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3801: /* package_implementation_declare_section_list1: package_implementation_declare_section_list1 package_implementation_item_declaration  */
#line 19746 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 53563 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3803: /* package_implementation_declare_section_list2: package_implementation_declare_section_list2 package_implementation_routine_definition  */
#line 19753 "/home/buildbot/git/sql/sql_yacc.yy"
          { (yyval.spblock).join((yyvsp[-1].spblock), (yyvsp[0].spblock)); }
#line 53569 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3804: /* $@269: %empty  */
#line 19759 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex->package_routine_start(thd,
                                   &sp_handler_package_function, (yyvsp[0].ident_sys));
            if (!lex)
              MYSQL_YYABORT;
            thd->lex= lex;
          }
#line 53581 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3805: /* package_specification_function: remember_lex ident $@269 sf_parameters sf_returned_type_clause sp_c_chistics  */
#line 19769 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-5].lex);
          }
#line 53592 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3806: /* $@270: %empty  */
#line 19779 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            LEX *lex= thd->lex->package_routine_start(thd,
                                   &sp_handler_package_procedure, (yyvsp[0].ident_sys));
            if (!lex)
              MYSQL_YYABORT;
            thd->lex= lex;
          }
#line 53604 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3807: /* package_specification_procedure: remember_lex ident $@270 sp_parameters sp_c_chistics  */
#line 19788 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyval.lex)= thd->lex;
            sp_head *sp= thd->lex->sphead;
            sp->restore_thd_mem_root(thd);
            thd->lex= (yyvsp[-4].lex);
          }
#line 53615 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3808: /* package_implementation_routine_definition: FUNCTION_SYM package_specification_function package_implementation_function_body ';'  */
#line 19800 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 53627 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3809: /* package_implementation_routine_definition: PROCEDURE_SYM package_specification_procedure package_implementation_procedure_body ';'  */
#line 19809 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_implementation((yyvsp[-2].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
            (yyval.spblock).init();
          }
#line 53639 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3810: /* package_implementation_routine_definition: package_specification_element  */
#line 19816 "/home/buildbot/git/sql/sql_yacc.yy"
                                        { (yyval.spblock).init(); }
#line 53645 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3811: /* $@271: %empty  */
#line 19822 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 53658 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3812: /* package_implementation_function_body: sp_tail_is remember_lex $@271 sp_package_function_body opt_package_routine_end_name  */
#line 19831 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_function(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 53669 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3813: /* $@272: %empty  */
#line 19841 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            sp_head *sp= pkg->m_current_routine->sphead;
            thd->lex= pkg->m_current_routine;
            sp->reset_thd_mem_root(thd);
            sp->set_c_chistics(thd->lex->sp_chistics);
            sp->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 53682 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3814: /* package_implementation_procedure_body: sp_tail_is remember_lex $@272 sp_package_procedure_body opt_package_routine_end_name  */
#line 19850 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(thd->lex->sp_body_finalize_procedure(thd) ||
                         thd->lex->sphead->check_package_routine_end_name((yyvsp[0].lex_str))))
              MYSQL_YYABORT;
            thd->lex= (yyvsp[-3].lex);
          }
#line 53693 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3819: /* package_specification_element: FUNCTION_SYM package_specification_function ';'  */
#line 19871 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 53704 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3820: /* package_specification_element: PROCEDURE_SYM package_specification_procedure ';'  */
#line 19878 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg= Lex->get_sp_package();
            if (unlikely(pkg->add_routine_declaration((yyvsp[-1].lex))))
              MYSQL_YYABORT;
            pkg->m_current_routine= NULL;
          }
#line 53715 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3821: /* $@273: %empty  */
#line 19998 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_procedure_start((yyvsp[-3].object_ddl_options) | (yyvsp[0].object_ddl_options)))
              MYSQL_YYABORT;
          }
#line 53724 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3822: /* create_routine: create_or_replace definer_opt PROCEDURE_SYM opt_if_not_exists $@273 sp_tail_standalone  */
#line 20003 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            Lex->stmt_create_routine_finalize();
          }
#line 53732 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3823: /* $@274: %empty  */
#line 20008 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53741 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3824: /* create_routine: create_or_replace definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@274 sf_parameters sf_returned_type_clause sf_c_chistics_and_body_standalone opt_trailing_sp_name  */
#line 20016 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53750 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3825: /* $@275: %empty  */
#line 20022 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_start((yyvsp[-5].object_ddl_options) | (yyvsp[-1].object_ddl_options), (yyvsp[-3].sp_aggregate_type), (yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53759 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3826: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists sp_name $@275 sf_parameters sf_returned_type_clause sf_c_chistics_and_body_standalone opt_trailing_sp_name  */
#line 20030 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_stored_function_finalize_standalone((yyvsp[0].spname)))
              MYSQL_YYABORT;
          }
#line 53768 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3827: /* create_routine: create_or_replace no_definer opt_aggregate FUNCTION_SYM opt_if_not_exists ident RETURNS_SYM udf_type SONAME_SYM TEXT_STRING_sys  */
#line 20036 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (Lex->stmt_create_udf_function((yyvsp[-9].object_ddl_options) | (yyvsp[-5].object_ddl_options), (yyvsp[-7].sp_aggregate_type), (yyvsp[-4].ident_sys),
                                              (Item_result) (yyvsp[-2].num), (yyvsp[0].lex_str)))
              MYSQL_YYABORT;
          }
#line 53778 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3828: /* $@276: %empty  */
#line 20043 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd, &sp_handler_package_spec,
                                                (yyvsp[-1].spname), (yyvsp[-5].object_ddl_options) | (yyvsp[-2].object_ddl_options),
                                                Lex->sp_chistics))))
              MYSQL_YYABORT;
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
          }
#line 53792 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3829: /* create_routine: create_or_replace definer_opt sp_handler_package_spec opt_if_not_exists sp_name opt_create_package_chistics_init $@276 sp_tail_is opt_package_specification_element_list END remember_end_opt opt_trailing_sp_name  */
#line 20055 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-7].spname), (yyvsp[0].spname), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 53801 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3830: /* $@277: %empty  */
#line 20061 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            sp_package *pkg;
            if (unlikely(!(pkg= Lex->
                           create_package_start(thd, &sp_handler_package_body,
                                                (yyvsp[-1].spname), (yyvsp[-5].object_ddl_options) | (yyvsp[-2].object_ddl_options),
                                                Lex->sp_chistics))))
              MYSQL_YYABORT;
            Lex->sphead->set_body_start(thd, YYLIP->get_cpp_tok_start());
            Lex->sp_block_init(thd);
          }
#line 53816 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3831: /* $@278: %empty  */
#line 20074 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            (yyvsp[-1].spblock).hndlrs+= (yyvsp[0].spblock_handlers).hndlrs;
            if (unlikely(Lex->sp_block_finalize(thd, (yyvsp[-1].spblock))))
              MYSQL_YYABORT;
          }
#line 53826 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;

  case 3832: /* create_routine: create_or_replace definer_opt sp_handler_package_body opt_if_not_exists sp_name opt_create_package_chistics_init $@277 sp_tail_is package_implementation_declare_section package_implementation_executable_section $@278 remember_end_opt opt_trailing_sp_name  */
#line 20080 "/home/buildbot/git/sql/sql_yacc.yy"
          {
            if (unlikely(Lex->create_package_finalize(thd, (yyvsp[-8].spname), (yyvsp[0].spname), (yyvsp[-1].simple_string))))
              MYSQL_YYABORT;
          }
#line 53835 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"
    break;


#line 53839 "/home/buildbot/git/mkdist/sql/yy_mariadb.cc"

      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", YY_CAST (yysymbol_kind_t, yyr1[yyn]), &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;

  *++yyvsp = yyval;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */
  {
    const int yylhs = yyr1[yyn] - YYNTOKENS;
    const int yyi = yypgoto[yylhs] + *yyssp;
    yystate = (0 <= yyi && yyi <= YYLAST && yycheck[yyi] == *yyssp
               ? yytable[yyi]
               : yydefgoto[yylhs]);
  }

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYSYMBOL_YYEMPTY : YYTRANSLATE (yychar);
  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
      yyerror (thd, YY_("syntax error"));
    }

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, thd);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:
  /* Pacify compilers when the user code never invokes YYERROR and the
     label yyerrorlab therefore never appears in user code.  */
  if (0)
    YYERROR;
  ++yynerrs;

  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  /* Pop stack until we find a state that shifts the error token.  */
  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYSYMBOL_YYerror;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYSYMBOL_YYerror)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;


      yydestruct ("Error: popping",
                  YY_ACCESSING_SYMBOL (yystate), yyvsp, thd);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END


  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", YY_ACCESSING_SYMBOL (yyn), yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturnlab;


/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturnlab;


/*-----------------------------------------------------------.
| yyexhaustedlab -- YYNOMEM (memory exhaustion) comes here.  |
`-----------------------------------------------------------*/
yyexhaustedlab:
  yyerror (thd, YY_("memory exhausted"));
  yyresult = 2;
  goto yyreturnlab;


/*----------------------------------------------------------.
| yyreturnlab -- parsing is finished, clean up and return.  |
`----------------------------------------------------------*/
yyreturnlab:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, thd);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  YY_ACCESSING_SYMBOL (+*yyssp), yyvsp, thd);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif

  return yyresult;
}

